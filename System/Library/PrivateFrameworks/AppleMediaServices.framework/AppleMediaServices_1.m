uint64_t sub_18C940574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  id v20;
  BOOL v21;
  unint64_t v22;
  char v23;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_76_2(*(void **)(v13 + 1112));
  OUTLINED_FUNCTION_66_3();
  if (!v16)
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_25_6();
    v26 = v25;
    OUTLINED_FUNCTION_17();
    if ((v26 & 1) != 0)
    {
      OUTLINED_FUNCTION_22_6();
      a9 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
      OUTLINED_FUNCTION_78_1();
      OUTLINED_FUNCTION_49_6();
      OUTLINED_FUNCTION_85_1(*(_QWORD *)(v12 + 56));
      OUTLINED_FUNCTION_90_1();
      OUTLINED_FUNCTION_30();
    }
    else
    {
      OUTLINED_FUNCTION_29_5();
    }
    v27 = OUTLINED_FUNCTION_61_5();
    OUTLINED_FUNCTION_26_6(v27, v28, 5u);
    v29 = OUTLINED_FUNCTION_61_5();
    goto LABEL_16;
  }
  *(_QWORD *)(v13 + 624) = OUTLINED_FUNCTION_7(v17, &qword_1EE055960);
  *(_QWORD *)(v13 + 600) = v16;
  v18 = (_OWORD *)OUTLINED_FUNCTION_70_4();
  sub_18C872D90(v18, v19);
  v20 = v16;
  OUTLINED_FUNCTION_11_1();
  *(_QWORD *)(v13 + 952) = v12;
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_45_0();
  if (v21)
  {
    __break(1u);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_79_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
  if ((OUTLINED_FUNCTION_39_7() & 1) != 0)
  {
    OUTLINED_FUNCTION_75_2();
    sub_18C86ECD4();
    OUTLINED_FUNCTION_65_2();
    if (!v23)
      return OUTLINED_FUNCTION_13_9();
    v14 = v22;
  }
  v31 = *(_QWORD **)(v13 + 952);
  if ((v15 & 1) == 0)
  {
    v33 = *(_QWORD *)(v13 + 1024);
    v34 = *(_QWORD *)(v13 + 1016);
    v31[(v14 >> 6) + 8] |= 1 << v14;
    v35 = (_QWORD *)(v31[6] + 16 * v14);
    *v35 = v34;
    v35[1] = v33;
    sub_18C872D90((_OWORD *)(v13 + 504), (_OWORD *)(v31[7] + 32 * v14));
    v36 = v31[2];
    v21 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (!v21)
    {
      OUTLINED_FUNCTION_57_5(v37);
      goto LABEL_15;
    }
LABEL_20:
    __break(1u);
    JUMPOUT(0x18C940C54);
  }
  v32 = (_OWORD *)(v31[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  sub_18C872D90((_OWORD *)(v13 + 504), v32);
LABEL_15:
  v38 = *(_QWORD *)(v13 + 1024);
  v39 = *(_QWORD *)(v13 + 1016);
  OUTLINED_FUNCTION_30();
  sub_18C86ECBC(v39, v38, 5u);

  v29 = v39;
  v30 = v38;
LABEL_16:
  OUTLINED_FUNCTION_17_8(v29, v30, 5u);
  if (v23)
  {
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_23_5();
    v41 = OUTLINED_FUNCTION_58_3();
    return OUTLINED_FUNCTION_14_8(v41, v42);
  }
  else
  {
    OUTLINED_FUNCTION_68_3(v40);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18C9407AC + dword_18C940C54[v43]))(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12);
  }
}

uint64_t sub_18C940C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_76_2(*(void **)(v13 + 1128));
  OUTLINED_FUNCTION_66_3();
  if (!v15)
  {
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_25_6();
    v21 = v20;
    OUTLINED_FUNCTION_17();
    if ((v21 & 1) != 0)
    {
      OUTLINED_FUNCTION_22_6();
      OUTLINED_FUNCTION_44_4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
      OUTLINED_FUNCTION_19_9();
      OUTLINED_FUNCTION_18_6();
      OUTLINED_FUNCTION_20_8();
      OUTLINED_FUNCTION_41_4();
      OUTLINED_FUNCTION_30();
    }
    else
    {
      OUTLINED_FUNCTION_29_5();
    }
    OUTLINED_FUNCTION_26_6(*(_QWORD *)(v13 + 1016), *(_QWORD *)(v13 + 1024), 6u);
    v22 = OUTLINED_FUNCTION_70_4();
    goto LABEL_15;
  }
  *(_QWORD *)(v13 + 816) = OUTLINED_FUNCTION_7(v16, (unint64_t *)&qword_1ECEAA2F0);
  *(_QWORD *)(v13 + 792) = v15;
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_11_1();
  *(_QWORD *)(v13 + 960) = v12;
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_45_0();
  if (v17)
  {
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_79_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
  if ((OUTLINED_FUNCTION_39_7() & 1) != 0)
  {
    OUTLINED_FUNCTION_75_2();
    sub_18C86ECD4();
    OUTLINED_FUNCTION_65_2();
    if (!v18)
      return OUTLINED_FUNCTION_13_9();
  }
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_12();
    if (!v17)
    {
      OUTLINED_FUNCTION_57_5(v24);
      goto LABEL_14;
    }
LABEL_19:
    __break(1u);
    JUMPOUT(0x18C941260);
  }
  OUTLINED_FUNCTION_27_4();
LABEL_14:
  OUTLINED_FUNCTION_30();
  v25 = OUTLINED_FUNCTION_61_5();
  OUTLINED_FUNCTION_82_1(v25, v26, 6u);
  v22 = OUTLINED_FUNCTION_61_5();
LABEL_15:
  OUTLINED_FUNCTION_17_8(v22, v23, 6u);
  if (v18)
  {
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_23_5();
    v28 = OUTLINED_FUNCTION_58_3();
    return OUTLINED_FUNCTION_14_8(v28, v29);
  }
  else
  {
    OUTLINED_FUNCTION_5_9(v27);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18C940E24 + *((int *)qword_18C941260 + v30)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12);
  }
}

uint64_t sub_18C9412EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_67_4();
  v11 = v10[138];
  v12 = (void *)v10[137];
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_69_0();

  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_46_6();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_44_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_20_8();
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    OUTLINED_FUNCTION_29_5();
  }
  v13 = v10[128];
  v14 = v10[127];
  OUTLINED_FUNCTION_26_6(v14, v13, 4u);
  OUTLINED_FUNCTION_17_8(v14, v13, 4u);
  if (v16)
  {
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_23_5();
    v17 = OUTLINED_FUNCTION_58_3();
    return OUTLINED_FUNCTION_16_7(v17, v18);
  }
  else
  {
    OUTLINED_FUNCTION_5_9(v15);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18C9413DC + *((int *)qword_18C941810 + v19)))(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
}

uint64_t sub_18C9413EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  OUTLINED_FUNCTION_0_11(v1, v0, 0);
  v4 = OUTLINED_FUNCTION_3_16();
  v5 = OUTLINED_FUNCTION_2_15(v4, sel_arrayForKey_);
  OUTLINED_FUNCTION_10_12();
  v7 = OUTLINED_FUNCTION_9_11(v6, sel_valuePromise);
  OUTLINED_FUNCTION_35_6((uint64_t)v7);
  v2[31] = v3;
  v2[26] = v2;
  v2[27] = sub_18C86A1A8;
  v8 = OUTLINED_FUNCTION_1_10();
  v2[62] = v8;
  v2[58] = MEMORY[0x1E0C809B0];
  v2[59] = 0x40000000;
  v2[60] = sub_18C85144C;
  v2[61] = &block_descriptor_6;
  OUTLINED_FUNCTION_22_5(v8, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_8();
}

uint64_t sub_18C94182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_67_4();
  v11 = v10[140];
  v12 = (void *)v10[139];
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_69_0();

  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_46_6();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_44_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_20_8();
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    OUTLINED_FUNCTION_29_5();
  }
  v13 = v10[128];
  v14 = v10[127];
  OUTLINED_FUNCTION_26_6(v14, v13, 5u);
  OUTLINED_FUNCTION_17_8(v14, v13, 5u);
  if (v16)
  {
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_23_5();
    v17 = OUTLINED_FUNCTION_58_3();
    return OUTLINED_FUNCTION_16_7(v17, v18);
  }
  else
  {
    OUTLINED_FUNCTION_5_9(v15);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18C94191C + *((int *)qword_18C941D50 + v19)))(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
}

uint64_t sub_18C94192C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  OUTLINED_FUNCTION_0_11(v1, v0, 0);
  v4 = OUTLINED_FUNCTION_3_16();
  v5 = OUTLINED_FUNCTION_2_15(v4, sel_arrayForKey_);
  OUTLINED_FUNCTION_10_12();
  v7 = OUTLINED_FUNCTION_9_11(v6, sel_valuePromise);
  OUTLINED_FUNCTION_35_6((uint64_t)v7);
  v2[31] = v3;
  v2[26] = v2;
  v2[27] = sub_18C86A1A8;
  v8 = OUTLINED_FUNCTION_1_10();
  v2[62] = v8;
  v2[58] = MEMORY[0x1E0C809B0];
  v2[59] = 0x40000000;
  v2[60] = sub_18C85144C;
  v2[61] = &block_descriptor_6;
  OUTLINED_FUNCTION_22_5(v8, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_8();
}

uint64_t sub_18C941D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_67_4();
  v11 = v10[142];
  v12 = (void *)v10[141];
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_69_0();

  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_46_6();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_44_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_20_8();
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    OUTLINED_FUNCTION_29_5();
  }
  v13 = v10[128];
  v14 = v10[127];
  OUTLINED_FUNCTION_26_6(v14, v13, 6u);
  OUTLINED_FUNCTION_17_8(v14, v13, 6u);
  if (v16)
  {
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_23_5();
    v17 = OUTLINED_FUNCTION_58_3();
    return OUTLINED_FUNCTION_16_7(v17, v18);
  }
  else
  {
    OUTLINED_FUNCTION_5_9(v15);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18C941E5C + *((int *)qword_18C942290 + v19)))(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
  }
}

uint64_t sub_18C941E6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  OUTLINED_FUNCTION_0_11(v1, v0, 0);
  v4 = OUTLINED_FUNCTION_3_16();
  v5 = OUTLINED_FUNCTION_2_15(v4, sel_arrayForKey_);
  OUTLINED_FUNCTION_10_12();
  v7 = OUTLINED_FUNCTION_9_11(v6, sel_valuePromise);
  OUTLINED_FUNCTION_35_6((uint64_t)v7);
  v2[31] = v3;
  v2[26] = v2;
  v2[27] = sub_18C86A1A8;
  v8 = OUTLINED_FUNCTION_1_10();
  v2[62] = v8;
  v2[58] = MEMORY[0x1E0C809B0];
  v2[59] = 0x40000000;
  v2[60] = sub_18C85144C;
  v2[61] = &block_descriptor_6;
  OUTLINED_FUNCTION_22_5(v8, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_8();
}

uint64_t sub_18C9422AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1016);
}

void OUTLINED_FUNCTION_76_2(void *a1@<X8>)
{

}

void OUTLINED_FUNCTION_81_2(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 1128) = a1;

}

void OUTLINED_FUNCTION_86_1(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 1080) = a1;

}

void OUTLINED_FUNCTION_87_1(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 1064) = a1;

}

unint64_t OUTLINED_FUNCTION_91_1()
{
  return sub_18C86ECD4();
}

uint64_t sub_18C942308()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t inited;

  v1 = *(void (**)(void))(v0 + OBJC_IVAR___AMSBagPersistenceMetricsTracker_eventSender);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054400);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18CF07380;
  *(_QWORD *)(inited + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(inited + 40) = 0x800000018CEE3A30;
  sub_18CEC1D50();
  sub_18CEC178C();
  v1();
  return OUTLINED_FUNCTION_96();
}

uint64_t sub_18C9423D0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t inited;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054400);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18CF07370;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x800000018CEE39F0;
  OUTLINED_FUNCTION_2_16();
  *(_QWORD *)(inited + 88) = 0xD000000000000012;
  *(_QWORD *)(inited + 96) = 0x800000018CEE3A10;
  OUTLINED_FUNCTION_2_16();
  *(_QWORD *)(inited + 144) = 0x6568636143736177;
  *(_QWORD *)(inited + 152) = 0xE900000000000064;
  sub_18CEC1D50();
  v4 = sub_18CEC178C();
  a2(v4);
  return swift_bridgeObjectRelease();
}

id BagPersistenceMetricsTracker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BagPersistenceMetricsTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BagPersistenceMetricsTracker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_107();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BagPersistenceMetricsTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for BagPersistenceMetricsTracker()
{
  return swift_lookUpClassMethod();
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BagPersistenceMetricsTracker.EventState(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 25);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagPersistenceMetricsTracker.EventState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 25) = -(char)a2;
  }
  return result;
}

uint64_t sub_18C942650(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 25) <= 1u)
    return *(unsigned __int8 *)(a1 + 25);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_18C942668(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_BYTE *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 25) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BagPersistenceMetricsTracker.EventState()
{
  return &type metadata for BagPersistenceMetricsTracker.EventState;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BagPersistenceMetricsTracker.EventState.BagExistedFields(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[25])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagPersistenceMetricsTracker.EventState.BagExistedFields(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for BagPersistenceMetricsTracker.EventState.BagExistedFields()
{
  return &type metadata for BagPersistenceMetricsTracker.EventState.BagExistedFields;
}

uint64_t static BagPersistenceMetricsTracker.trackCachedValuesUnavailable(requestedValueCount:)(uint64_t a1)
{
  return sub_18C9423D0(a1, sub_18C902FA8);
}

uint64_t sub_18C942798()
{
  return swift_deallocObject();
}

uint64_t BagUnderlyingData.fileKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AMSBagUnderlyingData_fileKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BagUnderlyingData.__allocating_init(fileKey:aliasKeys:bagDictionary:expirationDate:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return BagUnderlyingData.init(fileKey:aliasKeys:bagDictionary:expirationDate:)(a1, a2, a3, a4, a5);
}

id BagUnderlyingData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BagUnderlyingData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BagUnderlyingData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C942904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0545C0);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_192();
  v5 = v4 - v3;
  sub_18CEC1E34();
  v6 = sub_18CEC1E40();
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v5, v6);
  __break(1u);
  return result;
}

uint64_t sub_18C9429BC()
{
  unint64_t v0;

  v0 = sub_18CEC1F18();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_18C942A08()
{
  return 5;
}

uint64_t sub_18C942A10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18C942A44
                                                            + 4 * asc_18CF09AF0[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

unint64_t sub_18C942A44()
{
  return 0xD000000000000011;
}

uint64_t sub_18C942A60()
{
  return 0x6974617269707865;
}

uint64_t sub_18C942A84()
{
  return 0x79654B656C6966;
}

uint64_t sub_18C942A98()
{
  return 0x79654B7361696C61;
}

uint64_t sub_18C942AB4()
{
  sub_18C943008();
  return sub_18CEC20C8();
}

uint64_t sub_18C942ADC()
{
  sub_18C943008();
  return sub_18CEC20BC();
}

void sub_18C942B04(char *a1)
{
  sub_18C91CCD4(*a1);
}

void sub_18C942B10()
{
  unsigned __int8 *v0;

  sub_18C963E1C(*v0);
}

void sub_18C942B18(uint64_t a1)
{
  char *v1;

  sub_18C964118(a1, *v1);
}

void sub_18C942B20(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_18C964370(a1, *v1);
}

uint64_t sub_18C942B28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C9429BC();
  *a1 = result;
  return result;
}

uint64_t sub_18C942B54@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18C942A10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18C942B7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C942A04();
  *a1 = result;
  return result;
}

uint64_t sub_18C942BA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C942A08();
  *a1 = result;
  return result;
}

uint64_t sub_18C942BC4()
{
  sub_18C86C2E4();
  return sub_18CEC21D0();
}

uint64_t sub_18C942BEC()
{
  sub_18C86C2E4();
  return sub_18CEC21DC();
}

unint64_t sub_18C942C14()
{
  unint64_t result;

  result = qword_1EE055980;
  if (!qword_1EE055980)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF09CE4, &type metadata for BagUnderlyingData.Error);
    atomic_store(result, (unint64_t *)&qword_1EE055980);
  }
  return result;
}

uint64_t sub_18C942C50()
{
  uint64_t result;
  uint64_t v1;

  result = sub_18CEC181C();
  qword_1ECEADAB0 = result;
  *(_QWORD *)algn_1ECEADAB8 = v1;
  return result;
}

uint64_t *sub_18C942C7C()
{
  if (qword_1EE054608 != -1)
    swift_once();
  return &qword_1ECEADAB0;
}

uint64_t sub_18C942CBC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1)
    return 3;
  else
    return 4;
}

uint64_t sub_18C942CD0()
{
  uint64_t v0;

  sub_18C942C7C();
  v0 = qword_1ECEADAB0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_18C942D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18C942CBC(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_18C942D10()
{
  return swift_deallocObject();
}

uint64_t method lookup function for BagUnderlyingData()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_18C942D30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for BagUnderlyingData.Error(uint64_t a1)
{
  return sub_18C942D58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_18C942D58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s18AppleMediaServices17BagUnderlyingDataC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18C942D30(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BagUnderlyingData.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18C942D30(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_18C942D58(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BagUnderlyingData.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_18C942D58(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BagUnderlyingData.Error(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagUnderlyingData.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_18C942EE8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_18C942EF0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BagUnderlyingData.Error()
{
  return &type metadata for BagUnderlyingData.Error;
}

uint64_t storeEnumTagSinglePayload for BagUnderlyingData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_18C942F54 + 4 * byte_18CF09AFF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_18C942F88 + 4 * byte_18CF09AFA[v4]))();
}

uint64_t sub_18C942F88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C942F90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C942F98);
  return result;
}

uint64_t sub_18C942FA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C942FACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_18C942FB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C942FB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_18C942FC8()
{
  unint64_t result;

  result = qword_1EE055990;
  if (!qword_1EE055990)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF09C7C, &type metadata for BagUnderlyingData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055990);
  }
  return result;
}

unint64_t sub_18C943008()
{
  unint64_t result;

  result = qword_1EE055998;
  if (!qword_1EE055998)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF09CA4, &type metadata for BagUnderlyingData.Error);
    atomic_store(result, (unint64_t *)&qword_1EE055998);
  }
  return result;
}

uint64_t sub_18C943044()
{
  id v0;
  uint64_t v1;

  v0 = AMSSetLogKeyIfNeeded();
  v1 = sub_18CEC181C();

  return v1;
}

uint64_t sub_18C94308C()
{
  sub_18C946AB8();
  return sub_18CEC20C8();
}

uint64_t sub_18C9430B4()
{
  sub_18C946AB8();
  return sub_18CEC20BC();
}

uint64_t BagUnderlyingDataPersistence.DataReference.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 16) == 1)
    v1 = 0x656D616E656C6946;
  else
    v1 = 0x203A79654BLL;
  v3 = v1;
  sub_18CEC18AC();
  return v3;
}

void sub_18C943148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v2 = sub_18CEC1714();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18C8783D4(&qword_1ECEA9DD8, v6, MEMORY[0x1E0CA9308]);
  v7 = sub_18CEC1954();
  v35 = MEMORY[0x1E0DEE9D8];
  sub_18C876900();
  v8 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_18CEC1948();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = v34;
    if (v7)
    {
      v10 = *(_QWORD *)(v33 + 16);
      v31 = v33;
      *(_QWORD *)&v32 = v10;
      v30 = v33 + 32;
      v29 = xmmword_18CF07380;
      v11 = v34;
      while ((_QWORD)v32 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_21;
        if (v11 >= *(_QWORD *)(v31 + 16))
          goto LABEL_22;
        v12 = *(_BYTE *)(v30 + v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v29;
        *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v13 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v13 + 32) = v12;
        v14 = sub_18CEC1834();
        v16 = v15;
        v35 = v8;
        v17 = *(_QWORD *)(v8 + 16);
        if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_18C876900();
          v8 = v35;
        }
        *(_QWORD *)(v8 + 16) = v17 + 1;
        v18 = v8 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v16;
        ++v11;
        if (!--v7)
        {
          v34 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v11 = v34;
LABEL_12:
      v19 = v33;
      v20 = *(_QWORD *)(v33 + 16);
      if (v11 == v20)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      v32 = xmmword_18CF07380;
      while (v11 < v20)
      {
        v21 = *(_BYTE *)(v19 + 32 + v11);
        v34 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = v32;
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v22 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v22 + 32) = v21;
        v23 = sub_18CEC1834();
        v25 = v24;
        v35 = v8;
        v26 = *(_QWORD *)(v8 + 16);
        if (v26 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_18C876900();
          v8 = v35;
        }
        *(_QWORD *)(v8 + 16) = v26 + 1;
        v27 = v8 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v23;
        *(_QWORD *)(v27 + 40) = v25;
        v11 = v34;
        v20 = *(_QWORD *)(v19 + 16);
        if (v34 == v20)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
}

void BagUnderlyingDataPersistence.__allocating_init(directoryURL:)(char *a1)
{
  OUTLINED_FUNCTION_8_0();
  BagUnderlyingDataPersistence.init(directoryURL:)(a1);
  OUTLINED_FUNCTION_0();
}

void sub_18C94350C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  char v6;
  void *v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  unint64_t v30;
  void *v31;
  __n128 *v32;
  id v33;
  id v34;
  unint64_t v35;
  void *v36;
  id v37;
  void *v38;
  unsigned int v39;
  id v40;
  void (*v41)(uint64_t *@<X8>);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  unint64_t i;
  int64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t *@<X8>);
  void *v62;
  void *v63;
  void (*v64)(uint64_t *@<X8>);
  void (*v65)(uint64_t *@<X8>);
  void *v66;
  uint64_t v67;
  void *v68;
  unsigned int v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  std::error_code *v73;
  void *v74;
  void (*v75)(uint64_t, uint64_t);
  __n128 *v76;
  void *v77;
  __CFString *v78;
  void *v79;
  void (*v80)(uint64_t *@<X8>);
  void (*v81)(uint64_t *@<X8>);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void *v87;
  __n128 *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  void *v105;
  __n128 *v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  __n128 *v112;
  id v113;
  void *v114;
  uint64_t v115;
  id v116;
  id v117;
  uint64_t v118;
  void *v119;
  __CFString *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  uint64_t v127;
  void *v128;
  id v129;
  uint64_t v130;
  os_log_type_t v131;
  uint64_t v132;
  __n128 *v133;
  uint64_t v134;
  uint64_t v135;
  __n128 *v136;
  AppleMediaServices::LogInterpolation v137;
  int v138;
  uint64_t v139;
  void *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  id v145;
  void (*v146)(uint64_t *@<X8>);
  uint64_t v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 *v156;
  Swift::String v157;
  void *v158;
  id v159;
  uint64_t v160;
  os_log_type_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t *@<X8>);
  uint64_t v166;
  void *v167;
  uint64_t v168;
  int64_t v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t ObjectType;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __n128 v185;
  _BYTE v186[32];
  id v187;
  void (*v188)(uint64_t *@<X8>);
  uint64_t v189;
  _QWORD v190[3];

  OUTLINED_FUNCTION_170();
  v3 = v1;
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v190[1] = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v11 = sub_18CEC1378();
  v180 = *(_QWORD *)(v11 - 8);
  v181 = v11;
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_120();
  v179 = v13;
  v14 = sub_18CEC1504();
  v177 = *(_QWORD *)(v14 - 8);
  v178 = v14;
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_120();
  v176 = v16;
  v17 = OUTLINED_FUNCTION_69();
  v183 = *(_QWORD *)(v17 - 8);
  v184 = v17;
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_37_4();
  v21 = v19 - v20;
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_71_4();
  v172 = v23;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_93_1();
  v185.n128_u64[0] = v25;
  sub_18CEC1E40();
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_19_10();
  sub_18CEC12F4();
  OUTLINED_FUNCTION_92_1();
  v27 = sub_18CEC12E8();
  sub_18CEC12C4();
  if ((v6 & 1) == 0)
  {
    OUTLINED_FUNCTION_96_0();
    sub_18C942904(v2);
    v190[0] = MEMORY[0x1E0DEB418];
    v187 = v8;
    v28 = (void (*)(_BYTE *, _QWORD))sub_18CEC12DC();
    sub_18C92D08C((uint64_t)&v187, v2);
    v28(v186, 0);
  }
  v182 = v10;
  v187 = (id)v10;
  OUTLINED_FUNCTION_96_0();
  sub_18C8783D4(&qword_1ECEA9490, (uint64_t (*)(uint64_t))type metadata accessor for BagUnderlyingData, (uint64_t)&protocol conformance descriptor for BagUnderlyingData);
  v29 = sub_18CEC12D0();
  if (!v1)
  {
    v34 = (id)v29;
    v35 = v30;
    v36 = (void *)objc_opt_self();
    sub_18C878494((uint64_t)v34, v35);
    v173 = v36;
    v37 = objc_msgSend(v36, sel_defaultManager);
    v38 = (void *)sub_18CEC13B4();
    v187 = 0;
    v39 = objc_msgSend(v37, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v38, 1, 0, &v187);

    v40 = v187;
    if (!v39)
    {
      v95 = v187;
      sub_18C877F28((uint64_t)v34, v35);
      v96 = (void *)OUTLINED_FUNCTION_120_1();

      swift_willThrow();
      v98 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey);
      v97 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey + 8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054340);
      v99 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v99 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v99 + 32) = v96;
      sub_18C945C40();
      OUTLINED_FUNCTION_49();
      *(_QWORD *)v100 = v98;
      *(_QWORD *)(v100 + 8) = v97;
      *(_OWORD *)(v100 + 16) = xmmword_18CF09DB0;
      OUTLINED_FUNCTION_61_6();
      *(_QWORD *)(v101 + 32) = v102;
      *(_QWORD *)(v101 + 40) = v99;
      OUTLINED_FUNCTION_163();
      v103 = v96;
      OUTLINED_FUNCTION_24_3();
      OUTLINED_FUNCTION_105_0();
      swift_release();

      goto LABEL_39;
    }
    v41 = *(void (**)(uint64_t *@<X8>))(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey + 8);
    v167 = *(void **)(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey);
    v187 = v167;
    v188 = v41;
    LOBYTE(v189) = 0;
    v42 = v40;
    swift_bridgeObjectRetain();
    sub_18C877F6C((uint64_t)&v187);
    swift_bridgeObjectRelease();
    sub_18CEC145C();
    OUTLINED_FUNCTION_105_0();
    v165 = v41;
    v166 = (uint64_t)v34;
    v174 = v27;
    v43 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_aliasKeys);
    v44 = *(_QWORD *)(v43 + 56);
    v168 = v43 + 56;
    v45 = 1 << *(_BYTE *)(v43 + 32);
    v46 = -1;
    if (v45 < 64)
      v46 = ~(-1 << v45);
    v10 = v46 & v44;
    v169 = (unint64_t)(v45 + 63) >> 6;
    v170 = *MEMORY[0x1E0CAFD78];
    v171 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_aliasKeys);
    swift_bridgeObjectRetain();
    v47 = 0;
    v3 = (void *)MEMORY[0x1E0DEA968];
    v48 = v172;
    v49 = v4;
    if (!v10)
      goto LABEL_13;
LABEL_12:
    v50 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v182 = v47;
    for (i = v50 | (v47 << 6); ; i = __clz(__rbit64(v53)) + (v54 << 6))
    {
      v60 = *(_QWORD *)(v171 + 48) + 16 * i;
      v61 = *(void (**)(uint64_t *@<X8>))(v60 + 8);
      v187 = *(id *)v60;
      v188 = v61;
      LOBYTE(v189) = 0;
      swift_bridgeObjectRetain();
      v62 = v49;
      sub_18C877F6C((uint64_t)&v187);
      OUTLINED_FUNCTION_155();
      sub_18CEC14F8();
      v63 = (void *)sub_18CEC14EC();
      v65 = v64;
      (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v176, v178);
      v187 = v63;
      v188 = v65;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v180 + 104))(v179, v170, v181);
      sub_18C870D04();
      sub_18CEC1420();
      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v179, v181);
      swift_bridgeObjectRelease();
      v34 = objc_msgSend(v173, sel_defaultManager);
      sub_18CEC13D8();
      v66 = (void *)OUTLINED_FUNCTION_22_7();
      OUTLINED_FUNCTION_17();
      sub_18CEC13A8();
      v67 = v48;
      v68 = (void *)OUTLINED_FUNCTION_22_7();
      OUTLINED_FUNCTION_17();
      v187 = 0;
      v69 = objc_msgSend(v34, sel_createSymbolicLinkAtPath_withDestinationPath_error_, v66, v68, &v187);

      if (!v69)
      {
        v181 = v21;
        v104 = v187;
        OUTLINED_FUNCTION_120_1();

        OUTLINED_FUNCTION_80_1();
        if (qword_1ECEAA288 != -1)
          goto LABEL_88;
        goto LABEL_42;
      }
      v70 = v187;
      sub_18CEC13D8();
      sub_18CEC13D8();
      v71 = sub_18CEC1870();
      OUTLINED_FUNCTION_155();
      v72 = sub_18CEC1870();
      swift_bridgeObjectRelease();
      rename((const std::__fs::filesystem::path *)(v71 + 32), (const std::__fs::filesystem::path *)(v72 + 32), v73);
      v34 = v74;
      OUTLINED_FUNCTION_128_1();
      OUTLINED_FUNCTION_58_4();
      v48 = v67;
      if ((_DWORD)v34)
      {
        v110 = v21;
        if (qword_1ECEAA288 != -1)
          swift_once();
        v111 = (void *)qword_1ECEAA2B0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
        v112 = (__n128 *)OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_33_7(v112, (__n128)xmmword_18CF07390);
        v113 = v111;
        if (OUTLINED_FUNCTION_102_1())
        {
          OUTLINED_FUNCTION_180_0();
          OUTLINED_FUNCTION_60_5();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
        v136 = (__n128 *)OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_7_11(v136, (__n128)xmmword_18CF07380);
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_18_7();
        v112[2].n128_u64[0] = (unint64_t)v136;
        OUTLINED_FUNCTION_17();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v187);
        OUTLINED_FUNCTION_212(0xD000000000000028);
        v137.components._rawValue = OUTLINED_FUNCTION_19(0x206F6E727265).components._rawValue;
        v138 = MEMORY[0x18D78810C](v137.components._rawValue);
        v190[0] = MEMORY[0x1E0DEDBC8];
        LODWORD(v187) = v138;
        OUTLINED_FUNCTION_28_4();
        OUTLINED_FUNCTION_14_0(v139, (uint64_t *)&unk_1ECEAA5F0);
        OUTLINED_FUNCTION_4_2();
        OUTLINED_FUNCTION_17_9();
        sub_18CEC1390();
        v140 = (void *)OUTLINED_FUNCTION_22_7();
        OUTLINED_FUNCTION_17();
        v141 = OUTLINED_FUNCTION_127_0();
        OUTLINED_FUNCTION_108_1();
        if (v185.n128_u64[0])
        {
          OUTLINED_FUNCTION_46_7();
          OUTLINED_FUNCTION_59_5();
          v190[0] = MEMORY[0x1E0DEA968];
          v187 = v140;
          v188 = (void (*)(uint64_t *@<X8>))v136;
        }
        else
        {
          OUTLINED_FUNCTION_63_5();
        }
        v142 = v166;
        OUTLINED_FUNCTION_45_7();
        OUTLINED_FUNCTION_14_0(v143, (uint64_t *)&unk_1ECEAA5F0);
        OUTLINED_FUNCTION_16_8();
        sub_18CEC1390();
        v144 = (void *)OUTLINED_FUNCTION_22_7();
        OUTLINED_FUNCTION_17();
        v145 = OUTLINED_FUNCTION_127_0();
        OUTLINED_FUNCTION_108_1();
        if (v67)
        {
          OUTLINED_FUNCTION_46_7();
          OUTLINED_FUNCTION_59_5();
          v190[0] = MEMORY[0x1E0DEA968];
          v187 = v144;
          v188 = (void (*)(uint64_t *@<X8>))v136;
        }
        else
        {
          OUTLINED_FUNCTION_63_5();
        }
        v146 = v165;
        OUTLINED_FUNCTION_45_7();
        OUTLINED_FUNCTION_14_0(v147, (uint64_t *)&unk_1ECEAA5F0);
        v148 = sub_18CEC1B88();
        if (OUTLINED_FUNCTION_62_5(v148))
        {
          MEMORY[0x18D789CA8]();
          if (qword_1ECEAA560 != -1)
            swift_once();
          OUTLINED_FUNCTION_41_0();
          v149 = OUTLINED_FUNCTION_2();
          *(_BYTE *)(v149 + 16) = v174;
          OUTLINED_FUNCTION_9_13(v149, (uint64_t)sub_18C84C730);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
          OUTLINED_FUNCTION_159();
          v150 = OUTLINED_FUNCTION_12_11();
          OUTLINED_FUNCTION_55_0();
          OUTLINED_FUNCTION_96();
          OUTLINED_FUNCTION_269();
          MEMORY[0x18D789CA8]();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
          v151 = OUTLINED_FUNCTION_2();
          *(_OWORD *)(v151 + 16) = xmmword_18CF07380;
          *(_QWORD *)(v151 + 64) = OUTLINED_FUNCTION_68(v151, MEMORY[0x1E0DEA968]);
          *(_QWORD *)(v151 + 32) = v150;
          *(_QWORD *)(v151 + 40) = v174;
          OUTLINED_FUNCTION_35();
          OUTLINED_FUNCTION_40_4();
          OUTLINED_FUNCTION_155();
          OUTLINED_FUNCTION_269();

          OUTLINED_FUNCTION_96();
          OUTLINED_FUNCTION_17();
          v142 = v166;
          v146 = v165;
        }
        else
        {

          OUTLINED_FUNCTION_96();
        }
        sub_18C945C40();
        OUTLINED_FUNCTION_49();
        *(_QWORD *)v152 = v167;
        *(_QWORD *)(v152 + 8) = v146;
        *(_OWORD *)(v152 + 16) = xmmword_18CF09DC0;
        OUTLINED_FUNCTION_61_6();
        v153 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v154 + 32) = v155;
        *(_QWORD *)(v154 + 40) = v153;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_24_3();
        OUTLINED_FUNCTION_34_6(v142, (uint64_t)v190);
        OUTLINED_FUNCTION_58_4();
        v135 = v110;
        goto LABEL_76;
      }
      v75 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
      v75(v21, v184);
      v75(v67, v184);
      v3 = (void *)MEMORY[0x1E0DEA968];
      v49 = v62;
      v47 = v182;
      if (v10)
        goto LABEL_12;
LABEL_13:
      v52 = v47 + 1;
      if (__OFADD__(v47, 1))
      {
        __break(1u);
LABEL_86:
        swift_once();
LABEL_36:
        OUTLINED_FUNCTION_41_0();
        v83 = OUTLINED_FUNCTION_2();
        *(_BYTE *)(v83 + 16) = (_BYTE)v49;
        OUTLINED_FUNCTION_9_13(v83, (uint64_t)sub_18C84C730);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        OUTLINED_FUNCTION_159();
        v84 = OUTLINED_FUNCTION_12_11();
        v86 = v85;
        OUTLINED_FUNCTION_128_1();
        OUTLINED_FUNCTION_96();
        OUTLINED_FUNCTION_5_7();
        v87 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v88 = (__n128 *)OUTLINED_FUNCTION_2();
        v88[4].n128_u64[0] = OUTLINED_FUNCTION_89_2(v88, v185);
        v88[2].n128_u64[0] = v84;
        v88[2].n128_u64[1] = v86;
        OUTLINED_FUNCTION_35();
        sub_18CEC1594();
        OUTLINED_FUNCTION_155();
        objc_autoreleasePoolPop(v87);

        OUTLINED_FUNCTION_96();
        goto LABEL_38;
      }
      if (v52 >= v169)
        goto LABEL_48;
      v53 = *(_QWORD *)(v168 + 8 * v52);
      v54 = v47 + 1;
      if (!v53)
      {
        OUTLINED_FUNCTION_79_2();
        if (v55 == v56)
          goto LABEL_48;
        OUTLINED_FUNCTION_77_4();
        if (!v53)
        {
          OUTLINED_FUNCTION_79_2();
          if (v55 == v56)
            goto LABEL_48;
          OUTLINED_FUNCTION_77_4();
          if (!v53)
          {
            v58 = v57 + 3;
            if (v58 >= v169)
            {
LABEL_48:
              OUTLINED_FUNCTION_70_5();
              if (qword_1ECEAA288 != -1)
                swift_once();
              v114 = (void *)qword_1ECEAA2B0;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
              v115 = OUTLINED_FUNCTION_2();
              *(_OWORD *)(v115 + 16) = xmmword_18CF07370;
              v190[0] = ObjectType;
              v187 = v49;
              v116 = v49;
              v117 = v114;
              if (OUTLINED_FUNCTION_102_1())
              {
                OUTLINED_FUNCTION_180_0();
                OUTLINED_FUNCTION_60_5();
              }
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
              v156 = (__n128 *)OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_7_11(v156, (__n128)xmmword_18CF07380);
              OUTLINED_FUNCTION_35();
              OUTLINED_FUNCTION_18_7();
              *(_QWORD *)(v115 + 32) = v156;
              OUTLINED_FUNCTION_17();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v187);
              v157._object = (void *)0x800000018CEE41C0;
              v157._countAndFlagsBits = 0xD000000000000026;
              LogInterpolation.init(stringLiteral:)(v157);
              sub_18CEC13D8();
              v158 = (void *)OUTLINED_FUNCTION_22_7();
              OUTLINED_FUNCTION_17();
              v159 = OUTLINED_FUNCTION_127_0();
              OUTLINED_FUNCTION_108_1();
              if (v185.n128_u64[0])
              {
                OUTLINED_FUNCTION_46_7();
                OUTLINED_FUNCTION_59_5();
                v190[0] = v3;
                v187 = v158;
                v188 = (void (*)(uint64_t *@<X8>))v156;
              }
              else
              {
                OUTLINED_FUNCTION_63_5();
              }
              OUTLINED_FUNCTION_95_1();
              OUTLINED_FUNCTION_45_7();
              OUTLINED_FUNCTION_14_0(v160, (uint64_t *)&unk_1ECEAA5F0);
              v161 = sub_18CEC1BA0();
              if (OUTLINED_FUNCTION_62_5(v161))
              {
                MEMORY[0x18D789CA8]();
                if (qword_1ECEAA560 != -1)
                  swift_once();
                OUTLINED_FUNCTION_41_0();
                v162 = OUTLINED_FUNCTION_2();
                *(_BYTE *)(v162 + 16) = v185.n128_u8[0];
                OUTLINED_FUNCTION_9_13(v162, (uint64_t)sub_18C84C730);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
                OUTLINED_FUNCTION_159();
                v163 = OUTLINED_FUNCTION_12_11();
                OUTLINED_FUNCTION_55_0();
                OUTLINED_FUNCTION_96();
                OUTLINED_FUNCTION_269();
                v156 = (__n128 *)MEMORY[0x18D789CA8]();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
                v164 = OUTLINED_FUNCTION_2();
                *(_OWORD *)(v164 + 16) = xmmword_18CF07380;
                *(_QWORD *)(v164 + 56) = v3;
                *(_QWORD *)(v164 + 64) = sub_18C872FBC();
                *(_QWORD *)(v164 + 32) = v163;
                *(_QWORD *)(v164 + 40) = v185.n128_u64[0];
                OUTLINED_FUNCTION_35();
                OUTLINED_FUNCTION_40_4();
                OUTLINED_FUNCTION_155();
                OUTLINED_FUNCTION_269();
                OUTLINED_FUNCTION_17();
                OUTLINED_FUNCTION_95_1();
              }
              OUTLINED_FUNCTION_34_6((uint64_t)v156, (uint64_t)v190);
              OUTLINED_FUNCTION_58_4();

              OUTLINED_FUNCTION_96();
              OUTLINED_FUNCTION_83_3();
              goto LABEL_39;
            }
            v53 = *(_QWORD *)(v168 + 8 * v58);
            if (!v53)
            {
              while (!__OFADD__(v58, 1))
              {
                OUTLINED_FUNCTION_79_2();
                if (v55 == v56)
                  goto LABEL_48;
                OUTLINED_FUNCTION_77_4();
                v58 = v59 + 1;
                if (v53)
                  goto LABEL_29;
              }
              __break(1u);
LABEL_88:
              swift_once();
LABEL_42:
              v105 = (void *)qword_1ECEAA2B0;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
              v106 = (__n128 *)OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_33_7(v106, (__n128)xmmword_18CF07390);
              v107 = v105;
              v108 = AMSLogKey();
              v48 = v172;
              v109 = MEMORY[0x1E0DEA968];
              if (v108)
              {
                OUTLINED_FUNCTION_26();

              }
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
              v118 = OUTLINED_FUNCTION_2();
              *(_OWORD *)(v118 + 16) = xmmword_18CF07380;
              OUTLINED_FUNCTION_10_14();
              OUTLINED_FUNCTION_35();
              OUTLINED_FUNCTION_34_1((uint64_t)v186, v118 + 32);
              v106[2].n128_u64[0] = v118;
              OUTLINED_FUNCTION_17();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v187);
              OUTLINED_FUNCTION_212(0xD000000000000032);
              OUTLINED_FUNCTION_19(0x20726F727265);
              v119 = (void *)sub_18CEC1354();
              v120 = AMSLogableError(v119);

              v121 = (void *)sub_18CEC181C();
              v123 = v122;

              v190[0] = v109;
              v187 = v121;
              v188 = (void (*)(uint64_t *@<X8>))v123;
              OUTLINED_FUNCTION_28_4();
              OUTLINED_FUNCTION_14_0(v124, (uint64_t *)&unk_1ECEAA5F0);
              OUTLINED_FUNCTION_4_2();
              OUTLINED_FUNCTION_17_9();
              sub_18CEC1390();
              v125 = (void *)OUTLINED_FUNCTION_22_7();
              OUTLINED_FUNCTION_17();
              v126 = AMSHashIfNeeded(v125);

              if (v126)
              {
                OUTLINED_FUNCTION_46_7();
                OUTLINED_FUNCTION_122_1();
                v190[0] = v109;
                v187 = v125;
                v188 = (void (*)(uint64_t *@<X8>))v120;
              }
              else
              {
                OUTLINED_FUNCTION_63_5();
              }
              OUTLINED_FUNCTION_45_7();
              OUTLINED_FUNCTION_14_0(v127, (uint64_t *)&unk_1ECEAA5F0);
              OUTLINED_FUNCTION_16_8();
              sub_18CEC1390();
              v128 = (void *)OUTLINED_FUNCTION_22_7();
              OUTLINED_FUNCTION_17();
              v129 = AMSHashIfNeeded(v128);

              if (v129)
              {
                OUTLINED_FUNCTION_46_7();
                OUTLINED_FUNCTION_122_1();
                v190[0] = v109;
                v187 = v128;
                v188 = (void (*)(uint64_t *@<X8>))v120;
              }
              else
              {
                OUTLINED_FUNCTION_63_5();
              }
              OUTLINED_FUNCTION_125_0();
              OUTLINED_FUNCTION_45_7();
              OUTLINED_FUNCTION_14_0(v130, (uint64_t *)&unk_1ECEAA5F0);
              v131 = sub_18CEC1B88();
              if (OUTLINED_FUNCTION_124_1(v131))
              {
                MEMORY[0x18D789CA8]();
                if (qword_1ECEAA560 != -1)
                  swift_once();
                OUTLINED_FUNCTION_41_0();
                v132 = OUTLINED_FUNCTION_2();
                *(_BYTE *)(v132 + 16) = (_BYTE)v129;
                v187 = v106;
                v188 = sub_18C84C730;
                v189 = v132;
                OUTLINED_FUNCTION_42();
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
                OUTLINED_FUNCTION_22();
                OUTLINED_FUNCTION_4_13();
                OUTLINED_FUNCTION_23_6();
                OUTLINED_FUNCTION_43();
                OUTLINED_FUNCTION_5_7();
                v120 = (__CFString *)MEMORY[0x18D789CA8]();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
                v123 = OUTLINED_FUNCTION_2();
                *(_OWORD *)(v123 + 16) = xmmword_18CF07380;
                *(_QWORD *)(v123 + 64) = OUTLINED_FUNCTION_68(v123, MEMORY[0x1E0DEA968]);
                *(_QWORD *)(v123 + 32) = v109;
                *(_QWORD *)(v123 + 40) = v129;
                OUTLINED_FUNCTION_35();
                sub_18CEC1594();
                OUTLINED_FUNCTION_264();
                OUTLINED_FUNCTION_5_7();

                OUTLINED_FUNCTION_43();
                OUTLINED_FUNCTION_17();
                OUTLINED_FUNCTION_125_0();
              }
              else
              {

                OUTLINED_FUNCTION_43();
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054340);
              v133 = (__n128 *)OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_88_2(v133, (__n128)xmmword_18CF07380);
              OUTLINED_FUNCTION_49();
              *(_QWORD *)v134 = v123;
              *(_QWORD *)(v134 + 8) = v165;
              *(_OWORD *)(v134 + 16) = xmmword_18CF09DC0;
              OUTLINED_FUNCTION_47_7(v134, (uint64_t)"Failed to create persisted bag symlink");
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_109_1();
              OUTLINED_FUNCTION_24_3();
              OUTLINED_FUNCTION_34_6((uint64_t)v120, (uint64_t)v190);
              OUTLINED_FUNCTION_70_5();
              OUTLINED_FUNCTION_110_1();
              v135 = v181;
LABEL_76:
              OUTLINED_FUNCTION_100_0(v135);
              OUTLINED_FUNCTION_100_0(v48);
              OUTLINED_FUNCTION_70_5();
              OUTLINED_FUNCTION_100_0(v185.n128_i64[0]);
              goto LABEL_39;
            }
            v54 = v58;
          }
        }
      }
LABEL_29:
      v10 = (v53 - 1) & v53;
      v182 = v54;
    }
  }
  if (qword_1ECEAA288 != -1)
    swift_once();
  v31 = (void *)qword_1ECEAA2B0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v32 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_6(v32, (__n128)xmmword_18CF07370);
  v33 = v31;
  if (OUTLINED_FUNCTION_102_1())
  {
    OUTLINED_FUNCTION_180_0();
    OUTLINED_FUNCTION_60_5();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v76 = (__n128 *)OUTLINED_FUNCTION_2();
  v185 = (__n128)xmmword_18CF07380;
  OUTLINED_FUNCTION_7_11(v76, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_18_7();
  v32[2].n128_u64[0] = (unint64_t)v76;
  OUTLINED_FUNCTION_17();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v187);
  OUTLINED_FUNCTION_212(0xD00000000000002ALL);
  LOBYTE(v49) = (_BYTE)v32 + 48;
  v77 = (void *)sub_18CEC1354();
  v78 = AMSLogableError(v77);

  v79 = (void *)sub_18CEC181C();
  v81 = v80;

  v190[0] = MEMORY[0x1E0DEA968];
  v187 = v79;
  v188 = v81;
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_14_0(v82, (uint64_t *)&unk_1ECEAA5F0);
  LOBYTE(v78) = sub_18CEC1B94();
  if (OUTLINED_FUNCTION_62_5((os_log_type_t)v78))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      goto LABEL_86;
    goto LABEL_36;
  }

LABEL_38:
  swift_bridgeObjectRelease();
  v90 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey);
  v89 = *(_QWORD *)(v182 + OBJC_IVAR___AMSBagUnderlyingData_fileKey + 8);
  sub_18C945C40();
  OUTLINED_FUNCTION_49();
  *(_QWORD *)v91 = v90;
  *(_QWORD *)(v91 + 8) = v89;
  *(_OWORD *)(v91 + 16) = xmmword_18CF09DA0;
  OUTLINED_FUNCTION_61_6();
  *(_QWORD *)(v92 + 32) = v93;
  *(_QWORD *)(v92 + 40) = v3;
  OUTLINED_FUNCTION_163();
  v94 = v3;
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_70_5();

LABEL_39:
  OUTLINED_FUNCTION_76();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BagUnderlyingDataPersistence.removeUnderlyingData(for:)(Swift::String a1)
{
  OUTLINED_FUNCTION_49_7();
  BagUnderlyingDataPersistence.removeUnderlyingData(for:)();
  OUTLINED_FUNCTION_96();
}

void BagUnderlyingDataPersistence.removeUnderlyingData(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56[2];
  char v57;

  OUTLINED_FUNCTION_170();
  v53 = v0;
  v3 = v2;
  v4 = OUTLINED_FUNCTION_86_2(*MEMORY[0x1E0C80C00]);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_93_1();
  v44 = v8;
  v9 = sub_18CEC1084();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_101();
  v48 = v11;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  v15 = OUTLINED_FUNCTION_69();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_19_10();
  v17 = *(void **)v3;
  v18 = *(void **)(v3 + 8);
  v19 = *(unsigned __int8 *)(v3 + 16);
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v51 = v17;
  v52 = v18;
  v56[0] = v17;
  v56[1] = v18;
  v21 = v19;
  v57 = v19;
  sub_18C877F6C((uint64_t)v56);
  v22 = (void *)sub_18CEC13B4();
  OUTLINED_FUNCTION_66_4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v56[0] = 0;
  v23 = objc_msgSend(v20, sel_removeItemAtURL_error_, v22, v56);

  v24 = v56[0];
  if ((v23 & 1) == 0)
  {
    v25 = v24;
    v26 = (void *)sub_18CEC1360();

    OUTLINED_FUNCTION_80_1();
    v56[0] = v26;
    OUTLINED_FUNCTION_109_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
    v27 = v50;
    if (OUTLINED_FUNCTION_111_1())
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v48, v14, v27);
      sub_18C8783D4(&qword_1ECEA9DF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
      v28 = v44;
      sub_18CEC1330();
      v29 = v45;
      sub_18CEC1060();
      sub_18C8783D4(&qword_1ECEA9DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE20], MEMORY[0x1E0CADE30]);
      v30 = v47;
      OUTLINED_FUNCTION_116_1();
      OUTLINED_FUNCTION_116_1();
      v32 = v54;
      v31 = v55;
      v33 = *(void (**)(char *, uint64_t))(v46 + 8);
      v33(v29, v30);
      v33(v28, v30);
      if (v31 == v32)
      {
        OUTLINED_FUNCTION_110_1();
        v35 = v51;
        v34 = v52;
        sub_18C945C7C();
        v36 = v48;
        v37 = sub_18CEC1054();
        sub_18C945C40();
        v38 = OUTLINED_FUNCTION_49();
        *v39 = v35;
        v39[1] = v34;
        v39[2] = v21 | 0xC000000000000000;
        v39[3] = v37;
        v39[4] = 0;
        v39[5] = 0;
        v53 = v38;
        swift_willThrow();
        OUTLINED_FUNCTION_66_4(v36, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));

        goto LABEL_7;
      }
      OUTLINED_FUNCTION_66_4(v48, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054340);
    v40 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v40 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v40 + 32) = v26;
    sub_18C945C40();
    v41 = OUTLINED_FUNCTION_49();
    v42 = v52;
    *v43 = v51;
    v43[1] = v42;
    v43[2] = v21 | 0x8000000000000000;
    v43[3] = 0xD000000000000020;
    OUTLINED_FUNCTION_47_7((uint64_t)v43, (uint64_t)"Failed to delete underlying data");
    sub_18C945C7C();
    v53 = v41;
    OUTLINED_FUNCTION_80_1();
  }
LABEL_7:
  OUTLINED_FUNCTION_76();
}

void BagUnderlyingDataPersistence.filenamesForAllPersistedData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t inited;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  __int128 v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  id v102[4];
  uint64_t v103;
  uint64_t v104;

  OUTLINED_FUNCTION_170();
  v104 = *MEMORY[0x1E0C80C00];
  v89 = sub_18CEC1294();
  v88 = *(_QWORD *)(v89 - 8);
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_120();
  v90 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v3);
  v91 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_93_1();
  *(_QWORD *)&v95 = v6;
  v7 = OUTLINED_FUNCTION_69();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v99 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_71_4();
  v87 = v11;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_71_4();
  v98 = v13;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_71_4();
  v84 = v15;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_71_4();
  v97 = v17;
  OUTLINED_FUNCTION_15_10();
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v83 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v83 - v23;
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_93_1();
  v86 = v25;
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v27 = (void *)sub_18CEC13B4();
  v102[0] = 0;
  v28 = objc_msgSend(v26, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v27, 0, 0, v102);

  v29 = v102[0];
  if (v28)
  {
    v83 = v0;
    v30 = sub_18CEC19A8();
    v31 = v29;

    v103 = MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(v30 + 16);
    v101 = v8;
    v33 = v95;
    v34 = v86;
    v92 = v32;
    if (v32)
    {
      v35 = 0;
      v85 = v30;
      do
      {
        if (v35 >= *(_QWORD *)(v30 + 16))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
        }
        v36 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v37 = *(_QWORD *)(v8 + 72);
        v100 = v35;
        v94 = v37;
        OUTLINED_FUNCTION_21_6(v33, v30 + v36 + v37 * v35);
        OUTLINED_FUNCTION_29_6();
        if (v38)
          goto LABEL_33;
        v93 = v36;
        v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
        v96(v34, v33, v7);
        v39 = sub_18CEC1384();
        v41 = v40;
        swift_bridgeObjectRelease();
        if ((v41 & 0x2000000000000000) != 0)
          v42 = HIBYTE(v41) & 0xF;
        else
          v42 = v39 & 0xFFFFFFFFFFFFLL;
        OUTLINED_FUNCTION_21_6((uint64_t)v24, v34);
        if (v42)
          LOBYTE(v43) = 0;
        else
          v43 = sub_18CEC136C();
        OUTLINED_FUNCTION_27_5((uint64_t)v24);
        OUTLINED_FUNCTION_21_6((uint64_t)v21, v34);
        if ((v43 & 1) != 0)
        {
          v44 = v24;
          sub_18CEC13A8();
          v45 = sub_18CEC1894();
          OUTLINED_FUNCTION_122();
          v46 = sub_18CEC172C();
          if (v46 + 0x4000000000000000 < 0)
            goto LABEL_64;
          v47 = v46;
          OUTLINED_FUNCTION_27_5((uint64_t)v21);
          v48 = v97;
          v34 = v86;
          OUTLINED_FUNCTION_21_6(v97, v86);
          v38 = v45 == 2 * v47;
          v24 = v44;
          v30 = v85;
          if (v38)
          {
            v49 = sub_18CEC13A8();
            v51 = (void *)(HIBYTE(v50) & 0xF);
            v102[0] = (id)v49;
            v102[1] = (id)v50;
            if ((v50 & 0x2000000000000000) == 0)
              v51 = (void *)(v49 & 0xFFFFFFFFFFFFLL);
            v102[2] = 0;
            v102[3] = v51;
            swift_bridgeObjectRetain();
            while (1)
            {
              sub_18CEC18B8();
              if (!v52)
                break;
              sub_18CEC17BC();
              v54 = v53;
              OUTLINED_FUNCTION_17();
              if ((v54 & 1) != 0)
              {
                OUTLINED_FUNCTION_122();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_27_5(v97);
                goto LABEL_24;
              }
            }
            OUTLINED_FUNCTION_122();
            OUTLINED_FUNCTION_17();
            OUTLINED_FUNCTION_27_5(v97);
            OUTLINED_FUNCTION_114_1(v84, v34);
            v55 = v103;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_75_3();
              v55 = v103;
            }
            v8 = v101;
            v56 = *(_QWORD *)(v55 + 16);
            if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
            {
              OUTLINED_FUNCTION_75_3();
              v55 = v103;
            }
            *(_QWORD *)(v55 + 16) = v56 + 1;
            OUTLINED_FUNCTION_114_1(v55 + v93 + v56 * v94, v84);
            v103 = v55;
            goto LABEL_25;
          }
        }
        else
        {
          OUTLINED_FUNCTION_27_5((uint64_t)v21);
          v48 = v97;
          OUTLINED_FUNCTION_21_6(v97, v34);
        }
        OUTLINED_FUNCTION_27_5(v48);
LABEL_24:
        OUTLINED_FUNCTION_27_5(v34);
        v8 = v101;
LABEL_25:
        v35 = v100 + 1;
        v33 = v95;
      }
      while (v100 + 1 != v92);
    }
    OUTLINED_FUNCTION_57_6();
LABEL_33:
    swift_bridgeObjectRelease();
    sub_18C86752C(v33, (uint64_t *)&unk_1ECEAA300);
    v57 = v103;
    v102[0] = (id)MEMORY[0x1E0DEE9D8];
    v97 = *(_QWORD *)(v103 + 16);
    if (v97)
    {
      v58 = 0;
      v96 = (void (*)(uint64_t, uint64_t, uint64_t))*MEMORY[0x1E0C99A28];
      v95 = xmmword_18CF07380;
      v59 = v83;
      v94 = v103;
      while (1)
      {
        if (v58 >= *(_QWORD *)(v57 + 16))
          goto LABEL_63;
        v60 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v61 = v8;
        v62 = *(_QWORD *)(v8 + 72);
        v63 = (uint64_t)v91;
        (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v91, v57 + v60 + v62 * v58, v7);
        OUTLINED_FUNCTION_29_6();
        if (v38)
          goto LABEL_50;
        v100 = v62;
        OUTLINED_FUNCTION_21_6(v98, v63);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v95;
        v65 = v96;
        *(_QWORD *)(inited + 32) = v96;
        v66 = v65;
        sub_18C94635C(inited);
        v67 = v90;
        sub_18CEC139C();
        if (v59)
          break;
        swift_bridgeObjectRelease();
        v68 = sub_18CEC1288();
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v67, v89);
        if ((v68 & 1) != 0)
        {
          v8 = v101;
          OUTLINED_FUNCTION_106_0(*(uint64_t (**)(_QWORD, uint64_t))(v101 + 8));
        }
        else
        {
          OUTLINED_FUNCTION_21_6(v87, v98);
          if ((OUTLINED_FUNCTION_98_1() & 1) == 0)
          {
            OUTLINED_FUNCTION_75_3();
            v68 = (uint64_t)v102[0];
          }
          v69 = v100;
          v70 = *(_QWORD *)(v68 + 16);
          if (v70 >= *(_QWORD *)(v68 + 24) >> 1)
          {
            OUTLINED_FUNCTION_75_3();
            v68 = (uint64_t)v102[0];
          }
          *(_QWORD *)(v68 + 16) = v70 + 1;
          OUTLINED_FUNCTION_21_6(v68 + v60 + v70 * v69, v87);
          v102[0] = (id)v68;
          v59 = 0;
          v8 = v101;
        }
        ++v58;
        v57 = v94;
        if (v97 == v58)
          goto LABEL_49;
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_106_0(*(uint64_t (**)(_QWORD, uint64_t))(v101 + 8));
      swift_release();
      swift_release();
    }
    else
    {
      v59 = v83;
LABEL_49:
      v63 = (uint64_t)v91;
      OUTLINED_FUNCTION_57_6();
LABEL_50:
      OUTLINED_FUNCTION_128_1();
      sub_18C86752C(v63, (uint64_t *)&unk_1ECEAA300);
      v72 = (char *)v102[0];
      v73 = *((_QWORD *)v102[0] + 2);
      if (v73)
      {
        v83 = v59;
        v102[0] = (id)MEMORY[0x1E0DEE9D8];
        sub_18C876900();
        v74 = *(unsigned __int8 *)(v101 + 80);
        v98 = (uint64_t)v72;
        v75 = &v72[(v74 + 32) & ~v74];
        v100 = *(_QWORD *)(v101 + 72);
        v76 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
        do
        {
          v77 = v99;
          v76(v99, v75, v7);
          v78 = sub_18CEC13A8();
          v80 = v79;
          (*(void (**)(_QWORD *, uint64_t))(v101 + 8))(v77, v7);
          if ((OUTLINED_FUNCTION_98_1() & 1) == 0)
          {
            sub_18C876900();
            v77 = v102[0];
          }
          v81 = v77[2];
          if (v81 >= v77[3] >> 1)
          {
            sub_18C876900();
            v77 = v102[0];
          }
          v77[2] = v81 + 1;
          v82 = (char *)&v77[2 * v81];
          *((_QWORD *)v82 + 4) = v78;
          *((_QWORD *)v82 + 5) = v80;
          v75 += v100;
          --v73;
        }
        while (v73);
        swift_release();
      }
      else
      {
        swift_release();
        v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      sub_18C8B11E4((uint64_t)v77);
    }
  }
  else
  {
    v71 = v102[0];
    sub_18CEC1360();

    OUTLINED_FUNCTION_82_2();
  }
  OUTLINED_FUNCTION_76();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BagUnderlyingDataPersistence.removeDirectory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  unsigned int v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  OUTLINED_FUNCTION_170();
  v1 = OUTLINED_FUNCTION_86_2(*MEMORY[0x1E0C80C00]);
  v25 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_101();
  v24 = v3;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_50_7();
  v26 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_90();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_37_4();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v14 = (void *)sub_18CEC13B4();
  v29 = 0;
  v15 = objc_msgSend(v13, sel_removeItemAtURL_error_, v14, &v29);

  if (v15)
  {
    v16 = v29;
  }
  else
  {
    v17 = v29;
    v18 = (void *)OUTLINED_FUNCTION_120_1();

    OUTLINED_FUNCTION_80_1();
    v29 = v18;
    OUTLINED_FUNCTION_109_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
    if (!OUTLINED_FUNCTION_111_1())
      goto LABEL_6;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v9, v12, v5);
    sub_18C8783D4(&qword_1ECEA9DF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
    sub_18CEC1330();
    v19 = v24;
    sub_18CEC1060();
    sub_18C8783D4(&qword_1ECEA9DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE20], MEMORY[0x1E0CADE30]);
    OUTLINED_FUNCTION_74_4();
    OUTLINED_FUNCTION_74_4();
    v21 = v27;
    v20 = v28;
    v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v22(v19, v1);
    v22(v0, v1);
    OUTLINED_FUNCTION_66_4(v9, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    if (v20 == v21)
    {
      OUTLINED_FUNCTION_110_1();

    }
    else
    {
LABEL_6:

    }
  }
  OUTLINED_FUNCTION_76();
}

uint64_t sub_18C945940(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_18CEC181C();
    sub_18CEC211C();
    sub_18CEC1888();
    v3 = sub_18CEC214C();
    OUTLINED_FUNCTION_115();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    OUTLINED_FUNCTION_48_5();
    if ((v6 & 1) != 0)
    {
      v7 = OUTLINED_FUNCTION_94_1();
      if (v7 == OUTLINED_FUNCTION_117_1() && v3 == v8)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v10 = sub_18CEC205C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
LABEL_18:
        v17 = 1;
        return v17 & 1;
      }
      v11 = ~v4;
      v12 = (v5 + 1) & v11;
      OUTLINED_FUNCTION_48_5();
      if ((v13 & 1) != 0)
      {
        while (1)
        {
          v14 = OUTLINED_FUNCTION_94_1();
          if (v14 == OUTLINED_FUNCTION_117_1() && v3 == v15)
            break;
          v17 = sub_18CEC205C();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_115();
          if ((v17 & 1) == 0)
          {
            v12 = (v12 + 1) & v11;
            OUTLINED_FUNCTION_48_5();
            if ((v18 & 1) != 0)
              continue;
          }
          return v17 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
  return v17 & 1;
}

id BagUnderlyingDataPersistence.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_8_0(), sel_init);
}

void BagUnderlyingDataPersistence.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BagUnderlyingDataPersistence.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C945B78()
{
  uint64_t result;
  uint64_t v1;

  result = sub_18CEC181C();
  qword_1ECEADAD0 = result;
  *(_QWORD *)algn_1ECEADAD8 = v1;
  return result;
}

uint64_t *sub_18C945BA4()
{
  if (qword_1ECEA9E10 != -1)
    swift_once();
  return &qword_1ECEADAD0;
}

uint64_t sub_18C945BE4()
{
  uint64_t v0;

  return *(_QWORD *)((char *)&unk_18CF09EE8 + ((*(_QWORD *)(v0 + 16) >> 59) & 0x18));
}

uint64_t sub_18C945C00()
{
  uint64_t v0;

  sub_18C945BA4();
  v0 = qword_1ECEADAD0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_18C945C40()
{
  unint64_t result;

  result = qword_1ECEA9DF0;
  if (!qword_1ECEA9DF0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF09EA0, &type metadata for BagUnderlyingDataPersistence.Error);
    atomic_store(result, (unint64_t *)&qword_1ECEA9DF0);
  }
  return result;
}

uint64_t sub_18C945C7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18C945C90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_18C945CEC();
  v4 = sub_18C945D20(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18C945CEC()
{
  return sub_18CEC193C();
}

uint64_t sub_18C945D20(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_18C945E64(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_18C967128(v9, 0);
      v12 = v11;
      sub_18C945F50(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v15 = MEMORY[0x18D788358](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x18D788358);
LABEL_9:
      sub_18CEC1DBC();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x18D788358]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_18C945E64(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_18C967184(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_18C967184(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_18CEC18E8();
    return;
  }
  __break(1u);
}

void sub_18C945F50(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_18C967184(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_18CEC18F4();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_18CEC1DBC();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_18C967184(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_18CEC18D0();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_18C946150(unint64_t a1)
{
  char v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = a1 >> 62;
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_51_6();
    v6 = sub_18CEC1EC4();
    OUTLINED_FUNCTION_155();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A8);
      v4 = sub_18CEC1D80();
      if (!v3)
        goto LABEL_4;
LABEL_8:
      OUTLINED_FUNCTION_51_6();
      v5 = sub_18CEC1EC4();
      OUTLINED_FUNCTION_155();
      if (!v5)
      {
LABEL_25:
        OUTLINED_FUNCTION_155();
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v4 = MEMORY[0x1E0DEE9E8];
  if (v3)
    goto LABEL_8;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_25;
LABEL_9:
  v7 = 0;
  v21 = v5;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x18D788880](v7, a1);
    }
    else
    {
      if (v7 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_28;
      v8 = *(_QWORD *)(a1 + 32 + 8 * v7);
      swift_retain();
    }
    v9 = __OFADD__(v7++, 1);
    if (v9)
      break;
    sub_18CEC211C();
    MockAccount.hash(into:)();
    v10 = sub_18CEC214C();
    v11 = -1 << *(_BYTE *)(v4 + 32);
    v12 = v10 & ~v11;
    OUTLINED_FUNCTION_91_2();
    if ((v15 & v14) != 0)
    {
      type metadata accessor for MockAccount();
      v16 = OUTLINED_FUNCTION_64_4();
      static MockAccount.== infix(_:_:)(v16, v8);
      OUTLINED_FUNCTION_87_2();
      if ((v1 & 1) != 0)
      {
LABEL_20:
        swift_release();
        v5 = v21;
        goto LABEL_24;
      }
      v17 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v17;
        OUTLINED_FUNCTION_91_2();
        if ((v14 & v15) == 0)
          break;
        v18 = OUTLINED_FUNCTION_64_4();
        static MockAccount.== infix(_:_:)(v18, v8);
        OUTLINED_FUNCTION_87_2();
        if ((v1 & 1) != 0)
          goto LABEL_20;
      }
      v5 = v21;
    }
    *(_QWORD *)(v4 + 56 + 8 * v13) = v15 | v14;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v8;
    v19 = *(_QWORD *)(v4 + 16);
    v9 = __OFADD__(v19, 1);
    v20 = v19 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v4 + 16) = v20;
LABEL_24:
    if (v7 == v5)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_18C94635C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = a1;
  if (!*(_QWORD *)(a1 + 16)
    || (__swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559B0),
        v2 = sub_18CEC1D80(),
        v3 = v2,
        (v32 = *(_QWORD *)(v1 + 16)) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = 0;
  v5 = v2 + 56;
  v30 = v1;
  v31 = v1 + 32;
  while (v4 < *(_QWORD *)(v1 + 16))
  {
    v6 = *(void **)(v31 + 8 * v4);
    sub_18CEC181C();
    sub_18CEC211C();
    v7 = v6;
    sub_18CEC1888();
    v8 = sub_18CEC214C();
    swift_bridgeObjectRelease();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = v8 & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = sub_18CEC181C();
      v16 = v15;
      if (v14 == sub_18CEC181C() && v16 == v17)
      {
LABEL_21:
        swift_bridgeObjectRelease_n();
LABEL_22:

        goto LABEL_23;
      }
      v19 = sub_18CEC205C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_22;
      v20 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v20;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        v21 = sub_18CEC181C();
        v23 = v22;
        if (v21 == sub_18CEC181C() && v23 == v24)
          goto LABEL_21;
        v26 = sub_18CEC205C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
          goto LABEL_22;
      }
    }
    *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v7;
    v27 = *(_QWORD *)(v3 + 16);
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_26;
    *(_QWORD *)(v3 + 16) = v29;
LABEL_23:
    ++v4;
    v1 = v30;
    if (v4 == v32)
      goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t method lookup function for BagUnderlyingDataPersistence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BagUnderlyingDataPersistence.__allocating_init(directoryURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for BagUnderlyingDataPersistence.DataReference()
{
  return sub_18C8780A4();
}

uint64_t _s18AppleMediaServices28BagUnderlyingDataPersistenceC13DataReferenceOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_18C945C7C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BagUnderlyingDataPersistence.DataReference(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_18C945C7C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_18C8780A4();
  return a1;
}

uint64_t assignWithTake for BagUnderlyingDataPersistence.DataReference(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_18C8780A4();
  return a1;
}

uint64_t getEnumTagSinglePayload for BagUnderlyingDataPersistence.DataReference(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagUnderlyingDataPersistence.DataReference(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_18C946740(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BagUnderlyingDataPersistence.DataReference()
{
  return &type metadata for BagUnderlyingDataPersistence.DataReference;
}

void sub_18C94675C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

id sub_18C946790()
{
  void *v0;

  sub_18C945C7C();
  swift_bridgeObjectRetain();
  return v0;
}

void destroy for BagUnderlyingDataPersistence.Error(uint64_t *a1)
{
  sub_18C946800(*a1, a1[1], a1[2]);
}

void sub_18C946800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_18C946834()
{
  void *v0;

  sub_18C8780A4();
  swift_bridgeObjectRelease();

}

uint64_t *initializeWithCopy for BagUnderlyingDataPersistence.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  sub_18C94675C(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t *assignWithCopy for BagUnderlyingDataPersistence.Error(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  sub_18C94675C(*a2, v4, v5);
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  sub_18C946800(v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BagUnderlyingDataPersistence.Error(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = a2[2];
  sub_18C946800(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BagUnderlyingDataPersistence.Error(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BagUnderlyingDataPersistence.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 2 * -a2;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = 0;
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_18C946A74(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 62;
}

uint64_t sub_18C946A80(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_18C946A90(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for BagUnderlyingDataPersistence.Error()
{
  return &type metadata for BagUnderlyingDataPersistence.Error;
}

unint64_t sub_18C946AB8()
{
  unint64_t result;

  result = qword_1ECEA9DE8;
  if (!qword_1ECEA9DE8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF09E60, &type metadata for BagUnderlyingDataPersistence.Error);
    atomic_store(result, (unint64_t *)&qword_1ECEA9DE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return sub_18CEC196C();
}

void OUTLINED_FUNCTION_75_3()
{
  sub_18C92AD8C();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_86_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_18CEC1078();
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_100_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_106_0@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v2 - 208), v1);
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return sub_18CEC196C();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return sub_18CEC181C();
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  return sub_18CEC1360();
}

void OUTLINED_FUNCTION_122_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return swift_release();
}

void sub_18C946BDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_18C873520();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_18C876D74(a1 + 32, v2, v3 + 16 * v7 + 32);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_18C946CB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  int64_t v29;
  int64_t v30;
  int64_t v31;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;

  v3 = v1;
  v4 = a1;
  v5 = sub_18C9473CC(a1);
  if ((unint64_t)*v3 >> 62)
  {
    OUTLINED_FUNCTION_42();
    v6 = sub_18CEC1EC4();
    OUTLINED_FUNCTION_43();
  }
  else
  {
    v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v8;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v11 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_14;
    v10 = 1;
  }
  if (v8 >> 62)
  {
    OUTLINED_FUNCTION_42();
    v12 = sub_18CEC1EC4();
    OUTLINED_FUNCTION_43();
  }
  else
  {
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 <= v7)
    v12 = v7;
  OUTLINED_FUNCTION_42();
  v13 = MEMORY[0x18D78888C](v10, v12, 1, v8);
  swift_bridgeObjectRelease();
  *v3 = v13;
  v11 = v13 & 0xFFFFFFFFFFFFFF8;
LABEL_14:
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (*(_QWORD *)(v11 + 24) >> 1) - v14;
  v16 = sub_18C957618((uint64_t)&v38, (_QWORD *)(v11 + 8 * v14 + 32), v15, v4);
  if (v16 < v5)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v16 >= 1)
  {
    OUTLINED_FUNCTION_9_14();
    v18 = *(_QWORD *)(v17 + 16);
    v19 = __OFADD__(v18, v16);
    v20 = v18 + v16;
    if (v19)
    {
      __break(1u);
LABEL_30:
      v4 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      if (!sub_18CEC1D20())
        goto LABEL_19;
      OUTLINED_FUNCTION_8_9();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      OUTLINED_FUNCTION_10_15();
LABEL_32:
      if (!v15)
        goto LABEL_19;
      while (1)
      {
        OUTLINED_FUNCTION_9_14();
        if (v2 + 1 > *(_QWORD *)(v22 + 24) >> 1)
        {
          v4 = (uint64_t)v3;
          sub_18CEC19C0();
          OUTLINED_FUNCTION_9_14();
        }
        v24 = *(_QWORD *)(v22 + 24);
        if (v2 < (uint64_t)(v24 >> 1))
          break;
LABEL_68:
        *(_QWORD *)(v22 + 16) = v2;
      }
      v25 = v24 >> 1;
      v26 = v22 + 32;
      while (1)
      {
        *(_QWORD *)(v26 + 8 * v2++) = v15;
        v15 = v38;
        v27 = v41;
        if (v38 < 0)
        {
          v4 = v38 & 0x7FFFFFFFFFFFFFFFLL;
          if (!sub_18CEC1D20())
            goto LABEL_69;
          v15 = OUTLINED_FUNCTION_8_9();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          OUTLINED_FUNCTION_10_15();
          goto LABEL_44;
        }
        if (v42)
        {
          v4 = (v42 - 1) & v42;
        }
        else
        {
          v28 = v41 + 1;
          if (__OFADD__(v41, 1))
          {
            __break(1u);
LABEL_92:
            v15 = 0;
            v4 = 0;
            v21 = v23;
LABEL_27:
            v41 = v21;
            v42 = v4;
            goto LABEL_32;
          }
          v29 = (unint64_t)(v40 + 64) >> 6;
          if (v28 >= v29)
          {
            v15 = 0;
            v4 = 0;
            goto LABEL_41;
          }
          if (!*(_QWORD *)(v39 + 8 * v28))
          {
            v30 = v41 + 2;
            if (v41 + 2 >= v29)
              goto LABEL_65;
            if (!*(_QWORD *)(v39 + 8 * v30))
            {
              v23 = v41 + 3;
              if (v41 + 3 >= v29)
                goto LABEL_66;
              if (!*(_QWORD *)(v39 + 8 * v23))
              {
                v30 = v41 + 4;
                if (v41 + 4 >= v29)
                {
                  v15 = 0;
                  v4 = 0;
                  v27 = v41 + 3;
                  goto LABEL_41;
                }
                if (!*(_QWORD *)(v39 + 8 * v30))
                {
                  if (v41 + 5 >= v29)
                  {
LABEL_66:
                    v15 = 0;
                    v4 = 0;
                    v27 = v30;
                    goto LABEL_41;
                  }
                  if (!*(_QWORD *)(v39 + 8 * (v41 + 5)))
                  {
                    v28 = v29 - 1;
                    v31 = v41 + 6;
                    while (v31 < v29)
                    {
                      if (*(_QWORD *)(v39 + 8 * v31++))
                        goto LABEL_50;
                    }
LABEL_65:
                    v15 = 0;
                    v4 = 0;
                    v27 = v28;
                    goto LABEL_41;
                  }
                }
              }
            }
          }
LABEL_50:
          OUTLINED_FUNCTION_3_18();
        }
        OUTLINED_FUNCTION_21_7();
LABEL_41:
        v41 = v27;
        v42 = v4;
LABEL_44:
        if (!v15)
        {
LABEL_69:
          *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v2;
          goto LABEL_19;
        }
        if (v2 >= v25)
        {
          OUTLINED_FUNCTION_9_14();
          goto LABEL_68;
        }
      }
    }
    *(_QWORD *)(v17 + 16) = v20;
  }
  if (v16 != v15)
  {
LABEL_19:
    sub_18C91C710();
    sub_18CEC19B4();
    return;
  }
LABEL_23:
  v2 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v38;
  v15 = v40;
  v21 = v41;
  if (v38 < 0)
    goto LABEL_30;
  if (v42)
  {
    v4 = (v42 - 1) & v42;
LABEL_26:
    OUTLINED_FUNCTION_21_7();
    goto LABEL_27;
  }
  v33 = v41 + 1;
  if (!__OFADD__(v41, 1))
  {
    v34 = (unint64_t)(v40 + 64) >> 6;
    if (v33 >= v34)
    {
      v15 = 0;
      v4 = 0;
      goto LABEL_27;
    }
    if (*(_QWORD *)(v39 + 8 * v33))
      goto LABEL_74;
    v35 = v41 + 2;
    if (v41 + 2 < v34)
    {
      if (*(_QWORD *)(v39 + 8 * v35))
        goto LABEL_74;
      v23 = v41 + 3;
      if (v41 + 3 >= v34)
        goto LABEL_90;
      if (*(_QWORD *)(v39 + 8 * v23))
        goto LABEL_74;
      v35 = v41 + 4;
      if (v41 + 4 >= v34)
        goto LABEL_92;
      if (*(_QWORD *)(v39 + 8 * v35))
        goto LABEL_74;
      if (v41 + 5 >= v34)
      {
LABEL_90:
        v15 = 0;
        v4 = 0;
        v21 = v35;
        goto LABEL_27;
      }
      if (*(_QWORD *)(v39 + 8 * (v41 + 5)))
      {
LABEL_74:
        OUTLINED_FUNCTION_3_18();
        goto LABEL_26;
      }
      v33 = v34 - 1;
      v36 = v41 + 6;
      while (v36 < v34)
      {
        if (*(_QWORD *)(v39 + 8 * v36++))
          goto LABEL_74;
      }
    }
    v15 = 0;
    v4 = 0;
    v21 = v33;
    goto LABEL_27;
  }
  __break(1u);
}

id BagURLQueryItemsBuilder.__allocating_init(clientInfo:profile:profileVersion:)(void *a1)
{
  OUTLINED_FUNCTION_8_0();
  return BagURLQueryItemsBuilder.init(clientInfo:profile:profileVersion:)(a1);
}

objc_class *BagURLQueryItemsBuilder.__allocating_init(clientInfo:profile:profileVersion:operatingSystem:operatingSystemVersion:deviceClass:buildVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_8_0();
  return BagURLQueryItemsBuilder.init(clientInfo:profile:profileVersion:operatingSystem:operatingSystemVersion:deviceClass:buildVariant:)(v19, v18, v17, v16, v15, v14, v13, a8, a9, a10, a11, a12, a13);
}

id BagURLQueryItemsBuilder.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_8_0(), sel_init);
}

void BagURLQueryItemsBuilder.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BagURLQueryItemsBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C947370()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for BagURLQueryItemsBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BagURLQueryItemsBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BagURLQueryItemsBuilder.__allocating_init(clientInfo:profile:profileVersion:operatingSystem:operatingSystemVersion:deviceClass:buildVariant:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_18C9473CC(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
    return sub_18CEC1D08();
  else
    return *(_QWORD *)(a1 + 16);
}

uint64_t sub_18C9473F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18C9422AC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BagValueType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18C9422AC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_18C86ECBC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BagValueType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_18C86ECBC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BagValueType(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagValueType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

_QWORD *sub_18C947554(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    v11 = a3[6];
    v25 = a1 + v11;
    v23 = a2[10];
    v24 = (uint64_t)a2 + v11;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v23;
    v12 = sub_18CEC142C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v13(v25, v24, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v16;
    v17 = (char *)v4 + v15;
    v18 = (char *)a2 + v15;
    v19 = v16;
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v13((uint64_t)v17, (uint64_t)v18, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_18C9476E4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_18CEC142C();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v8(v4, v5);

  v6 = a1 + a2[8];
  result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!(_DWORD)result)
    return v8(v6, v5);
  return result;
}

uint64_t sub_18C9477C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  const void *v17;
  id v18;
  uint64_t v19;
  const void *v21;
  void *v22;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  v10 = a3[6];
  v21 = (const void *)(a2 + v10);
  v22 = (void *)(a1 + v10);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v11 = sub_18CEC142C();
  v12 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v12(v22, v21, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = (void *)(a1 + v14);
  v17 = (const void *)(a2 + v14);
  v18 = v15;
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v12(v16, v17, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_18C947924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  int EnumTagSinglePayload;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_18CEC142C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = *(void **)(a1 + v12);
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = v14;

  v16 = a3[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  LODWORD(v13) = __swift_getEnumTagSinglePayload(a1 + v16, 1, v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v9);
  if (!(_DWORD)v13)
  {
    if (!EnumTagSinglePayload)
    {
      v11(v17, v18, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v17, v9);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v17, v18, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v9);
  return a1;
}

_QWORD *sub_18C947B20(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  memcpy(a1, a2, 0x50uLL);
  a1[10] = a2[10];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_18CEC142C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_18C947C10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  int EnumTagSinglePayload;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRelease();
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_18CEC142C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 40);
  v14(v10, v11, v12);
  v15 = a3[7];
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  LODWORD(v10) = __swift_getEnumTagSinglePayload(a1 + v17, 1, v12);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v12);
  if (!(_DWORD)v10)
  {
    if (!EnumTagSinglePayload)
    {
      v14(v18, v19, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v18, v12);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v18, v19, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v12);
  return a1;
}

uint64_t sub_18C947DB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18C947DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_69();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
      v10 = *(int *)(a3 + 32);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_18C947E5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18C947E68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 80) = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_69();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 24);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
      v10 = *(int *)(a4 + 32);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CampaignAssociationService()
{
  uint64_t result;

  result = qword_1EE0559F0;
  if (!qword_1EE0559F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_18C947F34()
{
  unint64_t v0;
  unint64_t v1;

  sub_18CEC142C();
  if (v0 <= 0x3F)
  {
    sub_18C947FD4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_18C947FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE055A00)
  {
    sub_18CEC142C();
    v0 = sub_18CEC1C54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE055A00);
  }
}

uint64_t sub_18C948028@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  __n128 *v21;
  id v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  os_log_type_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  id v36;
  os_log_type_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  id v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  _BYTE v51[16];
  _QWORD v52[2];

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_69();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18C94A4E8((uint64_t)a2 + 24, (uint64_t)v51);
  memcpy(a5, a2, 0x50uLL);
  a5[10] = a1;
  v17 = (int *)type metadata accessor for CampaignAssociationService();
  v18 = (char *)a5 + v17[6];
  v48 = a3;
  v49 = v14;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v18, a3, v13);
  *(_QWORD *)((char *)a5 + v17[7]) = a4;
  sub_18C94A4E8((uint64_t)v51, (uint64_t)v52);
  if (!v52[1])
  {
    v27 = qword_1EE0546A0;
    v47 = a1;
    swift_unknownObjectRetain();
    v20 = a4;
    if (v27 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v28 = (__n128 *)OUTLINED_FUNCTION_2();
    v46 = xmmword_18CF07380;
    v22 = OUTLINED_FUNCTION_10_2(v28, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_72(30, 0x800000018CEE4660);
    v29 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_37_5(v29))
    {
      v45 = v20;
      v30 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v31 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v31 + 16) = v27;
      OUTLINED_FUNCTION_36_6(v31, (uint64_t)sub_18C84C730);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v32 = sub_18CEC17C8();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_264();
      objc_autoreleasePoolPop(v30);
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v33 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v33 + 16) = v46;
      *(_QWORD *)(v33 + 64) = OUTLINED_FUNCTION_68(v33, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v33 + 32) = v32;
      *(_QWORD *)(v33 + 40) = v50;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_43_7();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_130();

      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_17();
      v20 = v45;
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v20 = a4;
  swift_unknownObjectRetain();
  sub_18C94A534((uint64_t)v51);
  sub_18CEC13FC();
  sub_18C94A55C((uint64_t)v51);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_18C872CA0((uint64_t)v12, (uint64_t *)&unk_1ECEAA300);
    if (qword_1EE0546A0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v21 = (__n128 *)OUTLINED_FUNCTION_2();
    v46 = xmmword_18CF07380;
    v22 = OUTLINED_FUNCTION_10_2(v21, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_72(30, 0x800000018CEE4680);
    v23 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_37_5(v23))
    {
      v45 = v20;
      v47 = a1;
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v24 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v24 + 16) = (_BYTE)v12;
      OUTLINED_FUNCTION_36_6(v24, (uint64_t)sub_18C84C730);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v25 = OUTLINED_FUNCTION_25_8();
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v26 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v26 + 16) = v46;
      *(_QWORD *)(v26 + 64) = OUTLINED_FUNCTION_68(v26, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v26 + 32) = v25;
      *(_QWORD *)(v26 + 40) = v12;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_43_7();
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_130();

      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_17();
      v20 = v45;
      goto LABEL_22;
    }
LABEL_21:

    OUTLINED_FUNCTION_264();
LABEL_22:
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v13);
    return OUTLINED_FUNCTION_51_7((uint64_t)a5 + v17[8], 1);
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v16, v12, v13);
  v34 = (uint64_t)a5 + v17[8];
  v19((char *)v34, (uint64_t)v16, v13);
  OUTLINED_FUNCTION_51_7(v34, 0);
  if (qword_1EE0546A0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v35 = (__n128 *)OUTLINED_FUNCTION_2();
  v46 = xmmword_18CF07380;
  v36 = OUTLINED_FUNCTION_10_2(v35, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_11(0xD00000000000001BLL, (uint64_t)"Created association service");
  v37 = sub_18CEC1B7C();
  if (OUTLINED_FUNCTION_124_1(v37))
  {
    v38 = v20;
    v47 = a1;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v39 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v39 + 16) = v34;
    v50[0] = v35;
    v50[1] = sub_18C84C730;
    v50[2] = v39;
    OUTLINED_FUNCTION_184();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v40 = OUTLINED_FUNCTION_25_8();
    OUTLINED_FUNCTION_28_5();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_5_7();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v41 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v41 + 16) = v46;
    *(_QWORD *)(v41 + 64) = OUTLINED_FUNCTION_68(v41, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v41 + 32) = v40;
    *(_QWORD *)(v41 + 40) = v34;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_130();

    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_17();
  }
  else
  {

    OUTLINED_FUNCTION_158();
  }
  swift_unknownObjectRelease();
  v43 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v43(v48, v13);

  return ((uint64_t (*)(char *, uint64_t))v43)(v16, v13);
}

uint64_t sub_18C948724()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 224) = v0;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C948734()
{
  _QWORD *v0;
  __n128 *v1;
  id v2;
  os_log_type_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;

  if (qword_1EE0546A0 != -1)
    swift_once();
  v0[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v1 = (__n128 *)OUTLINED_FUNCTION_2();
  v2 = OUTLINED_FUNCTION_10_2(v1, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_72(25, 0x800000018CEE4560);
  v3 = sub_18CEC1B7C();
  v4 = OUTLINED_FUNCTION_21_8(v3);
  if (v4)
  {
    MEMORY[0x18D789CA8](v4, v5);
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v6 = OUTLINED_FUNCTION_2();
    v7 = OUTLINED_FUNCTION_275(v6);
    v0[24] = v1;
    v0[25] = sub_18C84C730;
    v0[26] = v7;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    v8 = OUTLINED_FUNCTION_12_1();
    v10 = v9;
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8](v11, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v13 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_232(v13, v14, v15, v16, v17, v18, v19, v20, v21);
    v13[4].n128_u64[0] = OUTLINED_FUNCTION_68(v22, MEMORY[0x1E0DEA968]);
    v13[2].n128_u64[0] = v8;
    v13[2].n128_u64[1] = v10;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  v23 = (_QWORD *)swift_task_alloc();
  v0[30] = v23;
  *v23 = v0;
  v23[1] = sub_18C948908;
  return sub_18C9490A0();
}

uint64_t sub_18C948908(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C948958()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 *v7;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);

  v1 = v0[31];
  if (v1)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)AMSURLSession), sel_init);
    v0[32] = v2;
    v3 = objc_msgSend(v2, sel_dataTaskPromiseWithRequest_, v1);
    v0[33] = v3;
    v0[7] = v0 + 27;
    v0[2] = v0;
    v0[3] = sub_18C948B94;
    v4 = swift_continuation_init();
    v0[10] = MEMORY[0x1E0C809B0];
    v5 = v0 + 10;
    v5[1] = 0x40000000;
    v5[2] = sub_18C8FDB6C;
    v5[3] = &block_descriptor_8;
    v5[4] = v4;
    objc_msgSend(v3, sel_resultWithCompletion_, v5);
    return swift_continuation_await();
  }
  else
  {
    v7 = (__n128 *)OUTLINED_FUNCTION_2();
    v8 = OUTLINED_FUNCTION_10_2(v7, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(40, v9);
    v10 = sub_18CEC1B88();
    v11 = OUTLINED_FUNCTION_21_8(v10);
    if (v11)
    {
      MEMORY[0x18D789CA8](v11, v12);
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v13 = OUTLINED_FUNCTION_2();
      v14 = OUTLINED_FUNCTION_275(v13);
      v0[15] = v7;
      v0[16] = sub_18C84C730;
      v0[17] = v14;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      v15 = OUTLINED_FUNCTION_12_1();
      v17 = v16;
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8](v18, v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v20 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v20, v21, v22, v23, v24, v25, v26, v27, v28);
      v20[4].n128_u64[0] = OUTLINED_FUNCTION_68(v29, MEMORY[0x1E0DEA968]);
      v20[2].n128_u64[0] = v15;
      v20[2].n128_u64[1] = v17;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    v30 = OUTLINED_FUNCTION_53_5();
    return OUTLINED_FUNCTION_26_7(v30, v31);
  }
}

uint64_t sub_18C948B94()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C948BE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  os_log_type_t v5;
  _BOOL8 v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  os_log_type_t v26;
  _BOOL8 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  void *v47;

  v1 = *(_QWORD *)(v0 + 216);

  v2 = off_1EE056038;
  v3 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v3 + 16) = xmmword_18CF07380;
  v4 = v2;
  if (v1)
  {
    OUTLINED_FUNCTION_72(25, 0x800000018CEE45D0);
    v5 = sub_18CEC1B7C();
    v6 = OUTLINED_FUNCTION_50_8(v5);
    if (v6)
    {
      MEMORY[0x18D789CA8](v6, v7);
      if (qword_1ECEAA560 != -1)
        swift_once();
      v8 = *(void **)(v0 + 256);
      v9 = byte_1ECEA9E18;
      v10 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v10 + 16) = v9;
      *(_QWORD *)(v0 + 168) = v3;
      *(_QWORD *)(v0 + 176) = sub_18C84C730;
      *(_QWORD *)(v0 + 184) = v10;
      OUTLINED_FUNCTION_129();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v11 = OUTLINED_FUNCTION_26_4();
      v13 = v12;
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_46_8();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8](v14, v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v16 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v16, v17, v18, v19, v20, v21, v22, v23, v24);
      v16[4].n128_u64[0] = OUTLINED_FUNCTION_68(v25, MEMORY[0x1E0DEA968]);
      v16[2].n128_u64[0] = v11;
      v16[2].n128_u64[1] = v13;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_5_7();
      OUTLINED_FUNCTION_17();
    }
    else
    {
      v8 = *(void **)(v0 + 256);
    }
    OUTLINED_FUNCTION_44();

  }
  else
  {
    OUTLINED_FUNCTION_11(0xD00000000000001ALL, (uint64_t)"Association request failed");
    v26 = sub_18CEC1B88();
    v27 = OUTLINED_FUNCTION_50_8(v26);
    if (v27)
    {
      MEMORY[0x18D789CA8](v27, v28);
      if (qword_1ECEAA560 != -1)
        swift_once();
      v29 = *(void **)(v0 + 256);
      OUTLINED_FUNCTION_188();
      v30 = OUTLINED_FUNCTION_2();
      v31 = OUTLINED_FUNCTION_275(v30);
      *(_QWORD *)(v0 + 144) = v3;
      *(_QWORD *)(v0 + 152) = sub_18C84C730;
      *(_QWORD *)(v0 + 160) = v31;
      OUTLINED_FUNCTION_129();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      v32 = OUTLINED_FUNCTION_12_1();
      v34 = v33;
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8](v35, v36);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v37 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v37, v38, v39, v40, v41, v42, v43, v44, v45);
      v37[4].n128_u64[0] = OUTLINED_FUNCTION_68(v46, MEMORY[0x1E0DEA968]);
      v37[2].n128_u64[0] = v32;
      v37[2].n128_u64[1] = v34;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    else
    {
      v29 = *(void **)(v0 + 256);
    }

    OUTLINED_FUNCTION_44();
    v1 = 0;
  }
  v47 = *(void **)(v0 + 248);

  return OUTLINED_FUNCTION_8_10(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C948EF8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  __n128 *v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  _BOOL8 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v29)(void);

  v1 = (void *)v0[33];
  v2 = (void *)v0[34];
  swift_willThrow();

  v3 = (__n128 *)OUTLINED_FUNCTION_2();
  v4 = OUTLINED_FUNCTION_10_2(v3, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_72(26, v5);
  v6 = sub_18CEC1B88();
  v7 = OUTLINED_FUNCTION_21_8(v6);
  if (v7)
  {
    MEMORY[0x18D789CA8](v7, v8);
    if (qword_1ECEAA560 != -1)
      swift_once();
    v9 = (void *)v0[32];
    OUTLINED_FUNCTION_188();
    v10 = OUTLINED_FUNCTION_2();
    v11 = OUTLINED_FUNCTION_275(v10);
    v0[18] = v3;
    v0[19] = sub_18C84C730;
    v0[20] = v11;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    v12 = OUTLINED_FUNCTION_12_1();
    v14 = v13;
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8](v15, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v17 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_232(v17, v18, v19, v20, v21, v22, v23, v24, v25);
    v17[4].n128_u64[0] = OUTLINED_FUNCTION_68(v26, MEMORY[0x1E0DEA968]);
    v17[2].n128_u64[0] = v12;
    v17[2].n128_u64[1] = v14;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v9 = (void *)v0[32];
  }

  OUTLINED_FUNCTION_96();
  v27 = (void *)v0[31];

  v28 = OUTLINED_FUNCTION_53_5();
  return OUTLINED_FUNCTION_8_10(v28, v29);
}

uint64_t sub_18C9490A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  v1[6] = OUTLINED_FUNCTION_239();
  v2 = OUTLINED_FUNCTION_69();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = OUTLINED_FUNCTION_239();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C9490FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __n128 *v6;
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  _QWORD *v28;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = objc_msgSend(objc_allocWithZone((Class)AMSURLRequestEncoder), sel_initWithBag_, *(_QWORD *)(v3 + 80));
  v0[10] = v4;
  objc_msgSend(v4, sel_setRequestEncoding_, 3);
  v5 = type metadata accessor for CampaignAssociationService();
  sub_18C873040(v3 + *(int *)(v5 + 32), v2, (uint64_t *)&unk_1ECEAA300);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_18C872CA0(v0[6], (uint64_t *)&unk_1ECEAA300);
    if (qword_1EE0546A0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v6 = (__n128 *)OUTLINED_FUNCTION_2();
    v7 = OUTLINED_FUNCTION_42_6(v6, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(23, v8);
    v9 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_124_1(v9))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v10 = byte_1ECEA9E18;
      v11 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v11 + 16) = v10;
      v0[2] = v6;
      v0[3] = sub_18C84C730;
      v0[4] = v11;
      OUTLINED_FUNCTION_129();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v12 = OUTLINED_FUNCTION_26_4();
      v14 = v13;
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_46_8();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v15 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v15, v16, v17, v18, v19, v20, v21, v22, v23);
      v15[4].n128_u64[0] = OUTLINED_FUNCTION_68(v24, MEMORY[0x1E0DEA968]);
      v15[2].n128_u64[0] = v12;
      v15[2].n128_u64[1] = v14;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_6_12();
      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_5_7();
      OUTLINED_FUNCTION_17();
    }

    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_30_6();
    OUTLINED_FUNCTION_36();
    v25 = OUTLINED_FUNCTION_53_5();
    return OUTLINED_FUNCTION_26_7(v25, v26);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[8] + 32))(v0[9], v0[6], v0[7]);
    v28 = (_QWORD *)swift_task_alloc();
    v0[11] = v28;
    *v28 = v0;
    v28[1] = sub_18C9493A4;
    return sub_18C97C1B4(4, v0[9], 0);
  }
}

uint64_t sub_18C9493A4(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)

  else
    *(_QWORD *)(v4 + 96) = a1;
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

void sub_18C949418()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 96);
  v2 = sub_18C949E44();
  v3 = 0;
  v18 = v2 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(63 - v5) >> 6;
  while (1)
  {
    while (v6)
    {
      v6 &= v6 - 1;
      if (v1)
        goto LABEL_21;
    }
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v8 >= v7)
      goto LABEL_22;
    v9 = *(_QWORD *)(v18 + 8 * v8);
    ++v3;
    if (!v9)
    {
      v3 = v8 + 1;
      if (v8 + 1 >= v7)
        goto LABEL_22;
      v9 = *(_QWORD *)(v18 + 8 * v3);
      if (!v9)
      {
        v3 = v8 + 2;
        if (v8 + 2 >= v7)
          goto LABEL_22;
        v9 = *(_QWORD *)(v18 + 8 * v3);
        if (!v9)
          break;
      }
    }
LABEL_20:
    v6 = (v9 - 1) & v9;
    if (v1)
    {
LABEL_21:
      OUTLINED_FUNCTION_184();
      OUTLINED_FUNCTION_129();
      v11 = v1;
      v12 = (void *)sub_18CEC17F8();
      OUTLINED_FUNCTION_44();
      v13 = (void *)sub_18CEC17F8();
      OUTLINED_FUNCTION_158();
      objc_msgSend(v11, sel_addValue_forHTTPHeaderField_, v12, v13);

    }
  }
  v10 = v8 + 3;
  if (v10 >= v7)
  {
LABEL_22:
    v14 = *(_QWORD *)(v17 + 72);
    v15 = *(_QWORD *)(v17 + 56);
    v16 = *(_QWORD *)(v17 + 64);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    OUTLINED_FUNCTION_30_6();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_8_10((uint64_t)v1, *(uint64_t (**)(void))(v17 + 8));
    return;
  }
  v9 = *(_QWORD *)(v18 + 8 * v10);
  if (v9)
  {
    v3 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v3 >= v7)
      goto LABEL_22;
    v9 = *(_QWORD *)(v18 + 8 * v3);
    ++v10;
    if (v9)
      goto LABEL_20;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_18C949620()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);

  result = sub_18C949E44();
  v2 = 0;
  v3 = result + 64;
  v4 = -1 << *(_BYTE *)(result + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  if (v6)
    goto LABEL_18;
  while (1)
  {
    v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v8 >= v7)
      goto LABEL_20;
    v6 = *(_QWORD *)(v3 + 8 * v8);
    ++v2;
    if (!v6)
    {
      v2 = v8 + 1;
      if (v8 + 1 >= v7)
        goto LABEL_20;
      v6 = *(_QWORD *)(v3 + 8 * v2);
      if (!v6)
      {
        v2 = v8 + 2;
        if (v8 + 2 >= v7)
          goto LABEL_20;
        v6 = *(_QWORD *)(v3 + 8 * v2);
        if (!v6)
          break;
      }
    }
    do
LABEL_18:
      v6 &= v6 - 1;
    while (v6);
  }
  v9 = v8 + 3;
  if (v9 >= v7)
  {
LABEL_20:
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    OUTLINED_FUNCTION_30_6();
    OUTLINED_FUNCTION_36();
    v13 = OUTLINED_FUNCTION_53_5();
    return v14(v13);
  }
  v6 = *(_QWORD *)(v3 + 8 * v9);
  if (v6)
  {
    v2 = v9;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v2 >= v7)
      goto LABEL_20;
    v6 = *(_QWORD *)(v3 + 8 * v2);
    ++v9;
    if (v6)
      goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_18C949758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C949768()
{
  char v0;
  uint64_t v1;
  __int128 *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  __n128 *v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  Swift::String v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  char v83;

  v2 = (__int128 *)(v1 + 16);
  v3 = objc_msgSend(*(id *)(v1 + 128), sel_response);
  if (!v3)
    goto LABEL_7;
  v4 = v3;
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {

LABEL_7:
    if (qword_1EE0546A0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v9 = (__n128 *)OUTLINED_FUNCTION_2();
    v10 = OUTLINED_FUNCTION_42_6(v9, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_11(0xD000000000000019, (uint64_t)"Invalid http url response");
    v11 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_124_1(v11))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v12 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v12 + 16) = v0;
      *(_QWORD *)(v1 + 16) = v9;
      *(_QWORD *)(v1 + 24) = sub_18C84C6D8;
      *(_QWORD *)(v1 + 32) = v12;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_55();
      v13 = OUTLINED_FUNCTION_7_12();
      v15 = v14;
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_46_8();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v16 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v16, v17, v18, v19, v20, v21, v22, v23, v24);
      v16[4].n128_u64[0] = OUTLINED_FUNCTION_68(v25, MEMORY[0x1E0DEA968]);
      v16[2].n128_u64[0] = v13;
      v16[2].n128_u64[1] = v15;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_6_12();
      OUTLINED_FUNCTION_264();
      OUTLINED_FUNCTION_5_7();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();
    goto LABEL_25;
  }
  v6 = v5;
  if ((uint64_t)objc_msgSend(v5, sel_statusCode) >= 400)
  {
    if (qword_1EE0546A0 != -1)
      swift_once();
    v26 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v27 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v27 + 16) = xmmword_18CF07380;
    v10 = v26;
    sub_18C872FF8();
    v80 = v28;
    v29._object = (void *)0x800000018CEE4500;
    v29._countAndFlagsBits = 0xD000000000000017;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v29);
    v30 = objc_msgSend(v6, sel_statusCode, 1, 2);
    *(_QWORD *)(v1 + 80) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v1 + 56) = v30;
    sub_18C873040(v1 + 56, v1 + 88, (uint64_t *)&unk_1ECEAA5F0);
    *v2 = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    sub_18C872148(v1 + 88, v1 + 16);
    *(_BYTE *)(v1 + 48) = 3;
    v31 = *(_OWORD *)(v1 + 32);
    v81 = *v2;
    v82 = v31;
    v83 = *(_BYTE *)(v1 + 48);
    v32 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_3_2();
      v32 = v78;
    }
    v33 = *(_QWORD *)(v32 + 16);
    if (v33 >= *(_QWORD *)(v32 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_2();
      v32 = v79;
    }
    *(_QWORD *)(v32 + 16) = v33 + 1;
    v34 = v32 + 40 * v33;
    v35 = v81;
    v36 = v82;
    *(_BYTE *)(v34 + 64) = v83;
    *(_OWORD *)(v34 + 32) = v35;
    *(_OWORD *)(v34 + 48) = v36;
    v80 = v32;
    sub_18C872CA0(v1 + 56, (uint64_t *)&unk_1ECEAA5F0);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v37);
    *(_QWORD *)(v27 + 32) = v32;
    v38 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_124_1(v38))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v39 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v39 + 16) = &v80;
      *(_QWORD *)(v1 + 16) = v27;
      *(_QWORD *)(v1 + 24) = sub_18C84C730;
      *(_QWORD *)(v1 + 32) = v39;
      OUTLINED_FUNCTION_184();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_55();
      v40 = OUTLINED_FUNCTION_7_12();
      v42 = v41;
      OUTLINED_FUNCTION_158();
      swift_release();
      OUTLINED_FUNCTION_35_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v43 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v43, v44, v45, v46, v47, v48, v49, v50, v51);
      v43[4].n128_u64[0] = OUTLINED_FUNCTION_68(v52, MEMORY[0x1E0DEA968]);
      v43[2].n128_u64[0] = v40;
      v43[2].n128_u64[1] = v42;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_47_8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_158();

LABEL_25:
LABEL_26:
    v53 = *(_QWORD *)(v1 + 120);
    v54 = OUTLINED_FUNCTION_69();
    __swift_storeEnumTagSinglePayload(v53, 1, 1, v54);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v7 = objc_msgSend(v6, sel_valueForHTTPHeaderField_, CFSTR("X-Apple-Redirect-Url"));
  if (!v7)
  {
    if (qword_1EE0546A0 != -1)
      swift_once();
    v56 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v57 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v57 + 16) = xmmword_18CF07380;
    v58 = v56;
    OUTLINED_FUNCTION_11(0xD000000000000033, (uint64_t)"Association response contains no redirecturl header");
    v59 = sub_18CEC1B88();
    v60 = os_log_type_enabled(v58, v59);
    if (v60)
    {
      MEMORY[0x18D789CA8](v60, v61);
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v62 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v62 + 16) = v57 + 32;
      *(_QWORD *)(v1 + 16) = v57;
      *(_QWORD *)(v1 + 24) = sub_18C84C730;
      *(_QWORD *)(v1 + 32) = v62;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_55();
      v63 = OUTLINED_FUNCTION_7_12();
      v65 = v64;
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_35_7();
      MEMORY[0x18D789CA8](v66, v67);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v68 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v68, v69, v70, v71, v72, v73, v74, v75, v76);
      v68[4].n128_u64[0] = OUTLINED_FUNCTION_68(v77, MEMORY[0x1E0DEA968]);
      v68[2].n128_u64[0] = v63;
      v68[2].n128_u64[1] = v65;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_47_8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_17();
    }

    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v8 = v7;
  sub_18CEC181C();

  sub_18CEC13FC();
  OUTLINED_FUNCTION_158();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_18C949E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_18CEC178C();
  v1 = sub_18CEC181C();
  v3 = v2;
  type metadata accessor for CampaignAssociationService();
  v4 = sub_18CEC1390();
  v6 = v5;
  swift_isUniquelyReferenced_nonNull_native();
  sub_18C958ED4(v4, v6, v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_18C949F80();
  if (v8)
  {
    v9 = (uint64_t)v7;
    v10 = v8;
    v11 = sub_18CEC181C();
    v13 = v12;
    swift_isUniquelyReferenced_nonNull_native();
    sub_18C958ED4(v9, v10, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v0;
}

void *sub_18C949F80()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  NSObject *v4;
  Swift::String v5;
  os_log_type_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSObject *v16;
  Swift::String v17;
  os_log_type_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for CampaignAssociationService() + 28));
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v2, sel_isActive) && objc_msgSend(v2, sel_ams_isiTunesAccount))
    {
      if (qword_1EE0546A0 != -1)
        swift_once();
      v3 = off_1EE056038;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_18CF07380;
      v4 = v3;
      v5._countAndFlagsBits = 0xD000000000000024;
      v5._object = (void *)0x800000018CEE4630;
      LogInterpolation.init(stringLiteral:)(v5);
      v6 = sub_18CEC1B70();
      if (os_log_type_enabled(v4, v6))
      {
        v7 = (void *)MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        v8 = byte_1ECEA9E18;
        *(_BYTE *)(swift_allocObject() + 16) = v8;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v9 = sub_18CEC17C8();
        v11 = v10;
        swift_release();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v7);
        v12 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_18CF07380;
        *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v13 + 64) = sub_18C872FBC();
        *(_QWORD *)(v13 + 32) = v9;
        *(_QWORD *)(v13 + 40) = v11;
        swift_bridgeObjectRetain();
        sub_18CEC1594();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v12);

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }

  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStoreForMediaType_, 0);
  v2 = objc_msgSend(v14, sel_ams_activeiTunesAccount);

  if (v2)
  {
LABEL_22:
    v27 = v2;
    v28 = objc_msgSend(v27, sel_ams_DSID);
    v26 = v28;
    if (v28)
    {
      v29 = objc_msgSend(v28, sel_stringValue);

      v26 = (void *)sub_18CEC181C();
    }

    return v26;
  }
  if (qword_1EE0546A0 != -1)
    swift_once();
  v15 = off_1EE056038;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_18CF07380;
  v16 = v15;
  v17._object = (void *)0x800000018CEE4610;
  v17._countAndFlagsBits = 0xD00000000000001ELL;
  LogInterpolation.init(stringLiteral:)(v17);
  v18 = sub_18CEC1B70();
  if (os_log_type_enabled(v16, v18))
  {
    v19 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v20 = byte_1ECEA9E18;
    *(_BYTE *)(swift_allocObject() + 16) = v20;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v21 = sub_18CEC17C8();
    v23 = v22;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v19);
    v24 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_18C872FBC();
    *(_QWORD *)(v25 + 32) = v21;
    *(_QWORD *)(v25 + 40) = v23;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v24);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18C94A4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C94A534(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18C94A55C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t CampaignAttributor.bag.getter()
{
  return swift_unknownObjectRetain();
}

void *CampaignAttributor.account.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___AMSCampaignAttributor_account);
  OUTLINED_FUNCTION_48_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CampaignAttributor.account.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AMSCampaignAttributor_account);
  OUTLINED_FUNCTION_48_0();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*CampaignAttributor.account.modify())()
{
  OUTLINED_FUNCTION_48_0();
  return j__swift_endAccess;
}

unint64_t static CampaignAttributor.defaultBagProfileName.getter()
{
  return 0xD000000000000016;
}

uint64_t static CampaignAttributor.defaultBagProfileVersion.getter()
{
  return 49;
}

void CampaignAttributor.__allocating_init(appBag:)(uint64_t a1)
{
  OUTLINED_FUNCTION_8_0();
  CampaignAttributor.init(appBag:)(a1);
  OUTLINED_FUNCTION_0();
}

void CampaignAttributor.init(appBag:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  char v51;
  uint64_t v52[3];
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v4 = (objc_class *)OUTLINED_FUNCTION_107();
  *(_QWORD *)&v1[OBJC_IVAR___AMSCampaignAttributor_account] = 0;
  v5 = OBJC_IVAR___AMSCampaignAttributor_bag;
  *(_QWORD *)&v1[OBJC_IVAR___AMSCampaignAttributor_bag] = a1;
  v6 = qword_1EE0546A0;
  v7 = v2;
  OUTLINED_FUNCTION_37_6();
  if (v6 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v8 = (__n128 *)OUTLINED_FUNCTION_2();
  v9 = OUTLINED_FUNCTION_46(v8, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_48_6();
  v54 = v10;
  OUTLINED_FUNCTION_31_7((uint64_t)"CampaignAttributor: created with bag ");
  v11 = *(_QWORD *)&v2[v5];
  v53 = OUTLINED_FUNCTION_107();
  v52[0] = v11;
  OUTLINED_FUNCTION_58_5(v53, v12, v13, v14, v15, v16, v17, v18, v36, v39);
  v42 = 0u;
  v43 = 0u;
  v19 = swift_unknownObjectRetain();
  OUTLINED_FUNCTION_57_3(v19, v20, v21, v22);
  v23 = OUTLINED_FUNCTION_24_10();
  if ((v23 & 1) == 0)
  {
    OUTLINED_FUNCTION_3_2();
    v11 = v23;
  }
  if (*(_QWORD *)(v11 + 16) >= *(_QWORD *)(v11 + 24) >> 1)
  {
    OUTLINED_FUNCTION_3_2();
    v11 = v23;
  }
  OUTLINED_FUNCTION_29_7(v23, v24, v25, v26, v27, v28, v29, v30, v37, v40, (uint64_t)v41.receiver, (uint64_t)v41.super_class, v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, v45, v46,
    v47,
    v48,
    v49,
    v31,
    v50,
    v51);

  v54 = v11;
  sub_18C86752C((uint64_t)v52, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_41_6();
  v32 = OUTLINED_FUNCTION_64_5();
  if (OUTLINED_FUNCTION_52_4(v32))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v33 = byte_1ECEA9E18;
    *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = v33;
    OUTLINED_FUNCTION_49_8();
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_43_8();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_35_7();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v35 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v35 + 16) = v38;
    *(_QWORD *)(v35 + 64) = OUTLINED_FUNCTION_68(v35, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v35 + 32) = v34;
    *(_QWORD *)(v35 + 40) = v33;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_30_7();
    OUTLINED_FUNCTION_257();
    OUTLINED_FUNCTION_35_7();

    OUTLINED_FUNCTION_115();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  v41.receiver = v7;
  v41.super_class = v4;
  objc_msgSendSuper2(&v41, sel_init);
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_28_6();
}

void CampaignAttributor.__allocating_init(bag:)(uint64_t a1)
{
  OUTLINED_FUNCTION_8_0();
  CampaignAttributor.init(bag:)(a1);
  OUTLINED_FUNCTION_0();
}

void CampaignAttributor.init(bag:)(uint64_t a1)
{
  char *v1;
  void *v2;
  objc_class *v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50[3];
  uint64_t ObjectType;
  _QWORD *v52;

  v2 = v1;
  v4 = (objc_class *)OUTLINED_FUNCTION_107();
  *(_QWORD *)&v1[OBJC_IVAR___AMSCampaignAttributor_account] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AMSCampaignAttributor_bag] = a1;
  v5 = qword_1EE0546A0;
  OUTLINED_FUNCTION_37_6();
  if (v5 != -1)
    swift_once();
  v6 = off_1EE056038;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v7 = (__n128 *)OUTLINED_FUNCTION_2();
  v8 = OUTLINED_FUNCTION_46(v7, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_48_6();
  v52 = v9;
  OUTLINED_FUNCTION_31_7((uint64_t)"CampaignAttributor: created with bag ");
  ObjectType = swift_getObjectType();
  v50[0] = a1;
  OUTLINED_FUNCTION_58_5(ObjectType, v10, v11, v12, v13, v14, v15, v16, v34, v37);
  v40 = 0u;
  v41 = 0u;
  v17 = OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_57_3(v17, v18, v19, v20);
  v21 = OUTLINED_FUNCTION_24_10();
  if ((v21 & 1) == 0)
  {
    OUTLINED_FUNCTION_3_2();
    v6 = (_QWORD *)v21;
  }
  if (v6[2] >= v6[3] >> 1)
  {
    OUTLINED_FUNCTION_3_2();
    v6 = (_QWORD *)v21;
  }
  OUTLINED_FUNCTION_29_7(v21, v22, v23, v24, v25, v26, v27, v28, v35, v38, (uint64_t)v39.receiver, (uint64_t)v39.super_class, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, v43, v44,
    v45,
    v46,
    v47,
    v29,
    v48,
    v49);
  v52 = v6;
  sub_18C86752C((uint64_t)v50, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_41_6();
  v30 = OUTLINED_FUNCTION_64_5();
  if (OUTLINED_FUNCTION_52_4(v30))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v31 = byte_1ECEA9E18;
    *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = v31;
    OUTLINED_FUNCTION_49_8();
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_43_8();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_35_7();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v33 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v33 + 16) = v36;
    *(_QWORD *)(v33 + 64) = OUTLINED_FUNCTION_68(v33, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v33 + 32) = v32;
    *(_QWORD *)(v33 + 40) = v31;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_30_7();
    OUTLINED_FUNCTION_257();
    OUTLINED_FUNCTION_35_7();

    OUTLINED_FUNCTION_115();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  v39.receiver = v2;
  v39.super_class = v4;
  objc_msgSendSuper2(&v39, sel_init);
  OUTLINED_FUNCTION_55_6();
  OUTLINED_FUNCTION_28_6();
}

uint64_t CampaignAttributor.processURL(_:ignoreMarketing:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 544) = v3;
  *(_BYTE *)(v4 + 736) = a3;
  *(_QWORD *)(v4 + 536) = a2;
  *(_QWORD *)(v4 + 528) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  *(_QWORD *)(v4 + 552) = OUTLINED_FUNCTION_35_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA200);
  *(_QWORD *)(v4 + 560) = OUTLINED_FUNCTION_35_8();
  v5 = OUTLINED_FUNCTION_69();
  *(_QWORD *)(v4 + 568) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 576) = v6;
  *(_QWORD *)(v4 + 584) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v4 + 592) = OUTLINED_FUNCTION_40_5();
  *(_QWORD *)(v4 + 600) = swift_task_alloc();
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_65_3() - 8);
  *(_QWORD *)(v4 + 608) = v7;
  *(_QWORD *)(v4 + 616) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v4 + 624) = OUTLINED_FUNCTION_40_5();
  *(_QWORD *)(v4 + 632) = swift_task_alloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C94AD74()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[68] + OBJC_IVAR___AMSCampaignAttributor_bag);
  v0[80] = v1;
  OUTLINED_FUNCTION_37_6();
  v2 = (_QWORD *)swift_task_alloc();
  v0[81] = v2;
  *v2 = v0;
  v2[1] = sub_18C94ADEC;
  return sub_18C94D030((uint64_t)(v0 + 32), v1);
}

uint64_t sub_18C94ADEC()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  uint64_t v5;

  v2 = (_OWORD *)(*v0 + 664);
  v5 = *v0;
  v1 = v5;
  OUTLINED_FUNCTION_47(&v5);
  *(_QWORD *)(v1 + 656) = *(_QWORD *)(v1 + 264);
  v3 = *(_OWORD *)(v1 + 304);
  *v2 = *(_OWORD *)(v1 + 288);
  v2[1] = v3;
  *(_QWORD *)(v1 + 696) = *(_QWORD *)(v1 + 328);
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C94AE4C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  id v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, uint64_t, uint64_t);
  __n128 *v44;
  id v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 *v57;
  uint64_t v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v72;
  __n128 *v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t *v83;
  __int128 v84;

  sub_18C93EAD4(v0 + 256, v0 + 176, &qword_1EE055A48);
  v1 = *(_QWORD *)(v0 + 184);
  if (v1 == 1)
  {
    if (qword_1EE0546A0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v2 = (__n128 *)OUTLINED_FUNCTION_2();
    v84 = xmmword_18CF07380;
    v3 = OUTLINED_FUNCTION_10_2(v2, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_11(0xD00000000000002FLL, (uint64_t)"cannot read the bag, returning the original url");
    v4 = sub_18CEC1B88();
    if (!OUTLINED_FUNCTION_21_8(v4))
      goto LABEL_35;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v5 = OUTLINED_FUNCTION_2();
    v6 = OUTLINED_FUNCTION_275(v5);
    *(_QWORD *)(v0 + 336) = v2;
    *(_QWORD *)(v0 + 344) = sub_18C84C730;
    *(_QWORD *)(v0 + 352) = v6;
LABEL_34:
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v67 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v67 + 16) = v84;
    v68 = OUTLINED_FUNCTION_68(v67, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v68);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
LABEL_35:

    OUTLINED_FUNCTION_96();
    v69 = *(_QWORD *)(v0 + 568);
    v70 = *(_QWORD *)(v0 + 528);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 576) + 16))(v70, *(_QWORD *)(v0 + 536), v69);
    v55 = v70;
    v56 = v69;
LABEL_36:
    __swift_storeEnumTagSinglePayload(v55, 0, 1, v56);
    OUTLINED_FUNCTION_11_15();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_24();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v83 = (uint64_t *)(v0 + 256);
  memcpy((void *)(v0 + 96), (const void *)(v0 + 176), 0x50uLL);
  v7 = *(_BYTE *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18C94EA18();
  if ((v9 & 1) == 0)
  {
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_46_9();
    if (qword_1EE0546A0 != -1)
      swift_once();
    v3 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v57 = (__n128 *)OUTLINED_FUNCTION_2();
    v84 = xmmword_18CF07380;
    OUTLINED_FUNCTION_10_2(v57, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_53_6();
    OUTLINED_FUNCTION_11(v58 + 51, (uint64_t)"Not a campaign URL, returning original url without calling affiliation service");
    v59 = sub_18CEC1B70();
    if (!OUTLINED_FUNCTION_21_8(v59))
      goto LABEL_35;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v60 = OUTLINED_FUNCTION_2();
    v61 = OUTLINED_FUNCTION_275(v60);
    *(_QWORD *)(v0 + 360) = v57;
    *(_QWORD *)(v0 + 368) = sub_18C84C730;
    *(_QWORD *)(v0 + 376) = v61;
    goto LABEL_34;
  }
  sub_18C94F328();
  if ((v10 & 1) == 0)
  {
    OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_46_9();
    if (qword_1EE0546A0 != -1)
      swift_once();
    v3 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v62 = (__n128 *)OUTLINED_FUNCTION_2();
    v84 = xmmword_18CF07380;
    OUTLINED_FUNCTION_10_2(v62, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_53_6();
    OUTLINED_FUNCTION_11(v63 + 48, (uint64_t)"Association service need not be called for this url, returning original url");
    v64 = sub_18CEC1B70();
    if (!OUTLINED_FUNCTION_21_8(v64))
      goto LABEL_35;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v65 = OUTLINED_FUNCTION_2();
    v66 = OUTLINED_FUNCTION_275(v65);
    *(_QWORD *)(v0 + 384) = v62;
    *(_QWORD *)(v0 + 392) = sub_18C84C730;
    *(_QWORD *)(v0 + 400) = v66;
    goto LABEL_34;
  }
  v11 = *(_QWORD **)(v0 + 632);
  v12 = *(_QWORD *)(v0 + 600);
  v13 = *(_QWORD *)(v0 + 544);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 576) + 16);
  v14(v12, *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 568));
  v15 = (id *)(v13 + OBJC_IVAR___AMSCampaignAttributor_account);
  OUTLINED_FUNCTION_48_0();
  v16 = *v15;
  v17 = *v15;
  v18 = OUTLINED_FUNCTION_37_6();
  sub_18C948028(v18, (const void *)(v0 + 96), v12, v16, v11);
  if ((*(_BYTE *)(v0 + 112) & 1) == 0)
  {
    if (qword_1EE0546A0 != -1)
      swift_once();
    v82 = v14;
    v19 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v20 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v20 + 16) = xmmword_18CF07380;
    v21 = v19;
    OUTLINED_FUNCTION_11(0xD000000000000021, (uint64_t)"Performing on device url clean up");
    v22 = sub_18CEC1B7C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v24 = byte_1ECEA9E18;
      v25 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v25 + 16) = v24;
      *(_QWORD *)(v0 + 456) = v20;
      *(_QWORD *)(v0 + 464) = sub_18C84C730;
      *(_QWORD *)(v0 + 472) = v25;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v26 = sub_18CEC17C8();
      v28 = v27;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v23);
      v29 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v30 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v30 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v30 + 64) = OUTLINED_FUNCTION_68(v30, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v30 + 32) = v26;
      *(_QWORD *)(v30 + 40) = v28;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      OUTLINED_FUNCTION_257();
      objc_autoreleasePoolPop(v29);
      OUTLINED_FUNCTION_17();
    }

    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v0 + 632);
    v32 = *(_QWORD *)(v0 + 624);
    v33 = *(_QWORD *)(v0 + 608);
    v34 = *(_QWORD *)(v0 + 600);
    v35 = *(_QWORD *)(v0 + 592);
    v81 = *(_QWORD *)(v0 + 616);
    v36 = *(_QWORD *)(v0 + 576);
    v37 = *(_QWORD *)(v0 + 568);
    v38 = *(_QWORD *)(v0 + 560);
    sub_18C94F9DC(*(_QWORD *)(v0 + 536), *(_BYTE *)(v0 + 736), v35);
    sub_18C94C88C(v83);
    sub_18CEC1A80();
    v39 = sub_18CEC1AA4();
    __swift_storeEnumTagSinglePayload(v38, 0, 1, v39);
    sub_18C94C950(v31, v32);
    v82(v34, v35, v37);
    v40 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v41 = (v81 + *(unsigned __int8 *)(v36 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = 0;
    *(_QWORD *)(v42 + 24) = 0;
    sub_18C94CAAC(v32, v42 + v40);
    v43 = *(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32);
    v43(v42 + v41, v34, v37);
    sub_18C924DB4(v38);
    swift_release();
    sub_18C86752C(v38, &qword_1ECEAA200);
    v44 = (__n128 *)OUTLINED_FUNCTION_2();
    v45 = OUTLINED_FUNCTION_10_2(v44, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(27, v46);
    v47 = sub_18CEC1B7C();
    if (OUTLINED_FUNCTION_21_8(v47))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v48 = OUTLINED_FUNCTION_2();
      v49 = OUTLINED_FUNCTION_275(v48);
      *(_QWORD *)(v0 + 432) = v44;
      *(_QWORD *)(v0 + 440) = sub_18C84C730;
      *(_QWORD *)(v0 + 448) = v49;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v50 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v50 + 16) = xmmword_18CF07380;
      v51 = OUTLINED_FUNCTION_68(v50, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v51);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }

    OUTLINED_FUNCTION_96();
    v52 = *(_QWORD *)(v0 + 592);
    v53 = *(_QWORD *)(v0 + 568);
    v54 = *(_QWORD *)(v0 + 528);
    sub_18C94CB9C(*(_QWORD *)(v0 + 632));
    v43(v54, v52, v53);
    v55 = v54;
    v56 = v53;
    goto LABEL_36;
  }
  sub_18C94C88C(v83);
  if (qword_1EE0546A0 != -1)
    swift_once();
  v72 = off_1EE056038;
  *(_QWORD *)(v0 + 704) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v73 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_10_2(v73, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_53_6();
  OUTLINED_FUNCTION_11(v74 + 8, (uint64_t)"Wait for server to clean up the url");
  v75 = sub_18CEC1B7C();
  if (OUTLINED_FUNCTION_21_8(v75))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v76 = OUTLINED_FUNCTION_2();
    v77 = OUTLINED_FUNCTION_275(v76);
    *(_QWORD *)(v0 + 504) = v73;
    *(_QWORD *)(v0 + 512) = sub_18C84C730;
    *(_QWORD *)(v0 + 520) = v77;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v78 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v78 + 16) = xmmword_18CF07380;
    v79 = OUTLINED_FUNCTION_68(v78, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v79);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }

  OUTLINED_FUNCTION_96();
  v80 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 712) = v80;
  *v80 = v0;
  v80[1] = sub_18C94B95C;
  return sub_18C948724();
}

uint64_t sub_18C94B95C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 720) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C94B9AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 *v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 720);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 728) = v2;
    *v2 = v0;
    v2[1] = sub_18C94BB8C;
    return OUTLINED_FUNCTION_18_9(*(_QWORD *)(v0 + 552), v1);
  }
  else
  {
    v4 = (__n128 *)OUTLINED_FUNCTION_2();
    v5 = OUTLINED_FUNCTION_10_2(v4, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(23, v6);
    v7 = sub_18CEC1B88();
    v8 = OUTLINED_FUNCTION_21_8(v7);
    if (v8)
    {
      MEMORY[0x18D789CA8](v8, v9);
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v10 = OUTLINED_FUNCTION_2();
      v11 = OUTLINED_FUNCTION_275(v10);
      *(_QWORD *)(v0 + 480) = v4;
      *(_QWORD *)(v0 + 488) = sub_18C84C730;
      *(_QWORD *)(v0 + 496) = v11;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8](v12, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v14 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_37_1(v14, v15, v16, v17, v18, v19, v20, v21, v22);
      v24 = OUTLINED_FUNCTION_68(v23, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v24);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    v25 = *(_QWORD *)(v0 + 568);
    v26 = *(_QWORD *)(v0 + 528);
    sub_18C94CB9C(*(_QWORD *)(v0 + 632));
    __swift_storeEnumTagSinglePayload(v26, 1, 1, v25);
    OUTLINED_FUNCTION_11_15();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_24();
    return OUTLINED_FUNCTION_12_2(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C94BB8C()
{
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C94BBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 528);

  sub_18C94CB9C(v1);
  sub_18C93EAD4(v2, v3, (uint64_t *)&unk_1ECEAA300);
  OUTLINED_FUNCTION_11_15();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_24();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C94BC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  type metadata accessor for CampaignAttributor();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_18C921EEC;
  return sub_18C94BCA8(a4, a5);
}

uint64_t sub_18C94BCA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[17] = a1;
  v2[18] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  v2[19] = swift_task_alloc();
  v3 = sub_18CEC142C();
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C94BD2C()
{
  _QWORD *v0;
  __n128 *v1;
  id v2;
  uint64_t v3;
  os_log_type_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v0[23] = sub_18C894BAC(0xD00000000000001ALL, 0x800000018CEE4940, 3);
  if (qword_1EE0546A0 != -1)
    swift_once();
  v0[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v1 = (__n128 *)OUTLINED_FUNCTION_2();
  v2 = OUTLINED_FUNCTION_10_2(v1, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_72(26, v3);
  v4 = sub_18CEC1B7C();
  v5 = OUTLINED_FUNCTION_21_8(v4);
  if (v5)
  {
    MEMORY[0x18D789CA8](v5, v6);
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v7 = OUTLINED_FUNCTION_2();
    v8 = OUTLINED_FUNCTION_275(v7);
    v0[14] = v1;
    v0[15] = sub_18C84C730;
    v0[16] = v8;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8](v9, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v11 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_37_1(v11, v12, v13, v14, v15, v16, v17, v18, v19);
    v21 = OUTLINED_FUNCTION_68(v20, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v21);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  v22 = (_QWORD *)swift_task_alloc();
  v0[25] = v22;
  *v22 = v0;
  v22[1] = sub_18C94BF10;
  return sub_18C948724();
}

uint64_t sub_18C94BF10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C94BF60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 *v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;

  v1 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v2;
    *v2 = v0;
    v2[1] = sub_18C94C114;
    return OUTLINED_FUNCTION_18_9(*(_QWORD *)(v0 + 152), v1);
  }
  else
  {
    v4 = (__n128 *)OUTLINED_FUNCTION_2();
    v5 = OUTLINED_FUNCTION_10_2(v4, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(30, v6);
    v7 = sub_18CEC1B88();
    v8 = OUTLINED_FUNCTION_21_8(v7);
    if (v8)
    {
      MEMORY[0x18D789CA8](v8, v9);
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v10 = OUTLINED_FUNCTION_2();
      v11 = OUTLINED_FUNCTION_275(v10);
      *(_QWORD *)(v0 + 16) = v4;
      *(_QWORD *)(v0 + 24) = sub_18C84C730;
      *(_QWORD *)(v0 + 32) = v11;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8](v12, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v14 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_37_1(v14, v15, v16, v17, v18, v19, v20, v21, v22);
      v24 = OUTLINED_FUNCTION_68(v23, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v24);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    swift_release();
    OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_36();
    return OUTLINED_FUNCTION_12_2(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C94C114()
{
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C94C148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL8 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __n128 *v27;
  id v28;
  os_log_type_t v29;
  _BOOL8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) != 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32))(*(_QWORD *)(v0 + 176), v2, v1);
    sub_18C94CCDC();
    v26 = sub_18CEC17E0();
    v27 = (__n128 *)OUTLINED_FUNCTION_2();
    v28 = OUTLINED_FUNCTION_10_2(v27, (__n128)xmmword_18CF07380);
    if ((v26 & 1) != 0)
    {
      OUTLINED_FUNCTION_11(0xD000000000000028, (uint64_t)"Server and onDevice cleaned URLs matched");
      v29 = sub_18CEC1B7C();
      v30 = OUTLINED_FUNCTION_21_8(v29);
      if (v30)
      {
        MEMORY[0x18D789CA8](v30, v31);
        if (qword_1ECEAA560 != -1)
          swift_once();
        OUTLINED_FUNCTION_188();
        v32 = OUTLINED_FUNCTION_2();
        v33 = OUTLINED_FUNCTION_275(v32);
        *(_QWORD *)(v0 + 88) = v27;
        *(_QWORD *)(v0 + 96) = sub_18C84C730;
        *(_QWORD *)(v0 + 104) = v33;
LABEL_17:
        OUTLINED_FUNCTION_163();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        OUTLINED_FUNCTION_159();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_96();
        OUTLINED_FUNCTION_154();
        OUTLINED_FUNCTION_269();
        MEMORY[0x18D789CA8](v40, v41);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v42 = (__n128 *)OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_37_1(v42, v43, v44, v45, v46, v47, v48, v49, v50);
        v52 = OUTLINED_FUNCTION_68(v51, MEMORY[0x1E0DEA968]);
        OUTLINED_FUNCTION_5_11(v52);
        OUTLINED_FUNCTION_21_3();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_269();
        OUTLINED_FUNCTION_17();
      }
    }
    else
    {
      OUTLINED_FUNCTION_11(0xD00000000000002DLL, (uint64_t)"Server and onDevice cleaned URLs do not match");
      v35 = sub_18CEC1B88();
      v36 = OUTLINED_FUNCTION_21_8(v35);
      if (v36)
      {
        MEMORY[0x18D789CA8](v36, v37);
        if (qword_1ECEAA560 != -1)
          swift_once();
        OUTLINED_FUNCTION_188();
        v38 = OUTLINED_FUNCTION_2();
        v39 = OUTLINED_FUNCTION_275(v38);
        *(_QWORD *)(v0 + 64) = v27;
        *(_QWORD *)(v0 + 72) = sub_18C84C730;
        *(_QWORD *)(v0 + 80) = v39;
        goto LABEL_17;
      }
    }
    OUTLINED_FUNCTION_96();

    v53 = *(_QWORD *)(v0 + 176);
    v54 = *(_QWORD *)(v0 + 160);
    v55 = *(_QWORD *)(v0 + 168);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    goto LABEL_19;
  }
  sub_18C86752C(v2, (uint64_t *)&unk_1ECEAA300);
  v3 = off_1EE056038;
  v4 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v4 + 16) = xmmword_18CF07380;
  v5 = v3;
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_72(34, v6);
  v7 = sub_18CEC1B88();
  v8 = os_log_type_enabled(v5, v7);
  if (v8)
  {
    MEMORY[0x18D789CA8](v8, v9);
    if (qword_1ECEAA560 != -1)
      swift_once();
    v10 = *(void **)(v0 + 208);
    OUTLINED_FUNCTION_188();
    v11 = OUTLINED_FUNCTION_2();
    v12 = OUTLINED_FUNCTION_275(v11);
    *(_QWORD *)(v0 + 40) = v4;
    *(_QWORD *)(v0 + 48) = sub_18C84C730;
    *(_QWORD *)(v0 + 56) = v12;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8](v13, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v15 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_37_1(v15, v16, v17, v18, v19, v20, v21, v22, v23);
    v25 = OUTLINED_FUNCTION_68(v24, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v25);
    sub_18CEC1594();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();

    OUTLINED_FUNCTION_44();
  }
  else
  {
    v34 = *(NSObject **)(v0 + 208);
    OUTLINED_FUNCTION_44();

    v5 = v34;
  }

  swift_release();
LABEL_19:
  OUTLINED_FUNCTION_67_5();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_12_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C94C5C8(uint64_t a1, char a2, const void *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4[2] = a4;
  v8 = sub_18CEC142C();
  v4[3] = v8;
  v4[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[5] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  v4[6] = swift_task_alloc();
  v10 = swift_task_alloc();
  v4[7] = v10;
  v4[8] = _Block_copy(a3);
  sub_18CEC13C0();
  a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[9] = v11;
  *v11 = v4;
  v11[1] = sub_18C94C6CC;
  return CampaignAttributor.processURL(_:ignoreMarketing:)(v10, v9, a2);
}

uint64_t sub_18C94C6CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (*v8)(uint64_t, uint64_t);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(_QWORD, _QWORD);
  _QWORD *v14;

  v1 = *(_QWORD **)v0;
  v14 = v1;
  v2 = v1[6];
  v3 = v1[7];
  v5 = v1[4];
  v4 = v1[5];
  v7 = (void *)v1[2];
  v6 = v1[3];
  OUTLINED_FUNCTION_47(&v14);

  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v4, v6);
  sub_18C93EAD4(v3, v2, (uint64_t *)&unk_1ECEAA300);
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    v9 = 0;
  }
  else
  {
    v10 = v1[6];
    v11 = v1[3];
    v9 = (void *)sub_18CEC13B4();
    v8(v10, v11);
  }
  v12 = (void (**)(_QWORD, _QWORD))v1[8];
  ((void (**)(_QWORD, void *))v12)[2](v12, v9);
  _Block_release(v12);

  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_24();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id CampaignAttributor.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_8_0(), sel_init);
}

void CampaignAttributor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CampaignAttributor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_107();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t *sub_18C94C88C(uint64_t *a1)
{
  sub_18C94C8D4(*a1, a1[1]);
  return a1;
}

uint64_t sub_18C94C8D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18C94C950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CampaignAssociationService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C94C994()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)OUTLINED_FUNCTION_65_3();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = OUTLINED_FUNCTION_69();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_59_6(v0 + v3 + v1[6]);

  v7 = v0 + v3 + v1[8];
  if (!__swift_getEnumTagSinglePayload(v7, 1, v5))
    OUTLINED_FUNCTION_59_6(v7);
  OUTLINED_FUNCTION_59_6(v0 + ((v3 + v4 + v6) & ~v6));
  return swift_deallocObject();
}

uint64_t sub_18C94CAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CampaignAssociationService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C94CAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_65_3() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_69() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_18C9063C0;
  return sub_18C94BC40(a1, v9, v10, v11, v12);
}

uint64_t sub_18C94CB9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CampaignAssociationService();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CampaignAttributor()
{
  return objc_opt_self();
}

uint64_t method lookup function for CampaignAttributor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CampaignAttributor.__allocating_init(appBag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CampaignAttributor.__allocating_init(bag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_18C94CC24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_18C94CC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  const void *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(const void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18C921EEC;
  return ((uint64_t (*)(uint64_t, char, const void *, void *))((char *)&dword_1EE055A68 + dword_1EE055A68))(v2, v3, v5, v4);
}

unint64_t sub_18C94CCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE055A80;
  if (!qword_1EE055A80)
  {
    v1 = sub_18CEC142C();
    result = MEMORY[0x18D78AB48](MEMORY[0x1E0CB0028], v1);
    atomic_store(result, (unint64_t *)&qword_1EE055A80);
  }
  return result;
}

uint64_t destroy for CampaignAttributorBag()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CampaignAttributorBag(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CampaignAttributorBag(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for CampaignAttributorBag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CampaignAttributorBag(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CampaignAttributorBag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignAttributorBag()
{
  return &type metadata for CampaignAttributorBag;
}

uint64_t sub_18C94D030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
  return swift_task_switch();
}

uint64_t sub_18C94D048()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;

  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEA9FF8);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 224) = inited;
  *(_OWORD *)(inited + 16) = xmmword_18CF07380;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x800000018CEE4A30;
  *(_BYTE *)(inited + 48) = 6;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v2;
  *v2 = v0;
  v2[1] = sub_18C94D0FC;
  return sub_18C867F34(inited);
}

uint64_t sub_18C94D0FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = a1;
  swift_task_dealloc();
  swift_setDeallocating();
  sub_18C94E334();
  return swift_task_switch();
}

uint64_t sub_18C94D164()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  os_log_type_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unsigned __int8 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  *(_QWORD *)(v0 + 184) = 0xD000000000000012;
  v1 = *(void **)(v0 + 240);
  *(_QWORD *)(v0 + 192) = 0x800000018CEE4A30;
  v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_18CEC208C());
  swift_unknownObjectRelease();
  if (v2)
  {
    sub_18CEC1CB4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  sub_18C94E364(v0 + 104, v0 + 72, (uint64_t *)&unk_1ECEAA5F0);
  if (*(_QWORD *)(v0 + 96))
  {
    sub_18C86C13C();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *(void **)(v0 + 200);
      sub_18C984E20((uint64_t)v3, (uint64_t)&v34);

      swift_unknownObjectRelease();
      v24 = v34;
      v25 = v35;
      v26 = v36;
      v27 = v37;
      v28 = v38;
      v29 = v39;
      goto LABEL_16;
    }
  }
  else
  {
    sub_18C87B358(v0 + 72);
  }
  if (qword_1EE0546A0 != -1)
    swift_once();
  v4 = off_1EE056038;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v5 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v5 + 16) = xmmword_18CF07380;
  v6 = v4;
  OUTLINED_FUNCTION_24_11((uint64_t)v6, 0x800000018CEE4A50);
  v7 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_29(v7))
  {
    v8 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v9 = *(void **)(v0 + 240);
    v10 = byte_1ECEA9E18;
    v11 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v11 + 16) = v10;
    *(_QWORD *)(v0 + 136) = v5;
    *(_QWORD *)(v0 + 144) = sub_18C84C6D8;
    *(_QWORD *)(v0 + 152) = v11;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v12 = sub_18CEC17C8();
    v14 = v13;
    swift_bridgeObjectRelease();
    swift_release();
    objc_autoreleasePoolPop(v8);
    v15 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v16 = (_QWORD *)OUTLINED_FUNCTION_2();
    v16[8] = OUTLINED_FUNCTION_19_12((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v32, v33, xmmword_18CF07380);
    v16[4] = v12;
    v16[5] = v14;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(void **)(v0 + 240);
  }
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  v25 = 0;
  v29 = 0;
  v24 = xmmword_18CF0A010;
  v26 = 0uLL;
  v27 = 0uLL;
  v28 = 0uLL;
LABEL_16:
  v30 = *(_QWORD *)(v0 + 208);
  *(_OWORD *)v30 = v24;
  *(_QWORD *)(v30 + 16) = v25;
  *(_OWORD *)(v30 + 24) = v26;
  *(_OWORD *)(v30 + 40) = v27;
  *(_OWORD *)(v30 + 56) = v28;
  *(_QWORD *)(v30 + 72) = v29;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C94D6D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18C94D70C + 4 * byte_18CF0A020[a1]))(0x746E696F70646E65, 0xE800000000000000);
}

unint64_t sub_18C94D70C()
{
  return 0xD000000000000019;
}

uint64_t sub_18C94D778()
{
  unint64_t v0;

  v0 = sub_18CEC1F18();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_18C94D7C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18C94D7F8 + 4 * byte_18CF0A027[a1]))(0x746E696F70646E65, 0xE800000000000000);
}

unint64_t sub_18C94D7F8()
{
  return 0xD000000000000019;
}

uint64_t sub_18C94D864()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  if (*(_BYTE *)(v0 + 16) != 2)
    OUTLINED_FUNCTION_5_12();
  sub_18CEC2134();
  if (*(_QWORD *)(v0 + 32))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  if (*(_QWORD *)(v0 + 48))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  if (*(_QWORD *)(v0 + 56))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  if (!*(_QWORD *)(v0 + 72))
    return OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_5_12();
  OUTLINED_FUNCTION_129();
  sub_18CEC1888();
  return swift_bridgeObjectRelease();
}

BOOL sub_18C94D994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  int v9;
  int v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v6 || (v7 = OUTLINED_FUNCTION_117(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = *(unsigned __int8 *)(a1 + 16);
    v10 = *(unsigned __int8 *)(a2 + 16);
    if (v9 == 2)
    {
      if (v10 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v11 = (v9 & 1) == 0;
      if (v10 == 2 || ((v11 ^ v10) & 1) == 0)
        return result;
    }
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(_QWORD *)(a2 + 32);
    if (v12)
    {
      if (!v13)
        return 0;
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24) || v12 != v13)
      {
        v15 = OUTLINED_FUNCTION_117();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v16 = *(_QWORD **)(a1 + 40);
    v17 = *(_QWORD **)(a2 + 40);
    if (v16)
    {
      if (!v17 || (sub_18C97EB4C(v16, v17) & 1) == 0)
        return 0;
    }
    else if (v17)
    {
      return 0;
    }
    v18 = *(_QWORD **)(a1 + 48);
    v19 = *(_QWORD **)(a2 + 48);
    if (v18)
    {
      if (!v19 || (sub_18C97EB4C(v18, v19) & 1) == 0)
        return 0;
    }
    else if (v19)
    {
      return 0;
    }
    v20 = *(_QWORD **)(a1 + 56);
    v21 = *(_QWORD **)(a2 + 56);
    if (v20)
    {
      if (!v21 || (sub_18C97EB4C(v20, v21) & 1) == 0)
        return 0;
    }
    else if (v21)
    {
      return 0;
    }
    v22 = *(_QWORD *)(a1 + 72);
    v23 = *(_QWORD *)(a2 + 72);
    if (v22)
    {
      if (!v23)
        return 0;
      v24 = *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && v22 == v23;
      return v24 || (OUTLINED_FUNCTION_117() & 1) != 0;
    }
    return !v23;
  }
  return result;
}

uint64_t sub_18C94DB00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12[8];
  _BYTE v13[8];
  _BYTE v14[8];
  _BYTE v15[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055AA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C94E2F8();
  sub_18CEC21B8();
  v12[0] = 0;
  OUTLINED_FUNCTION_2_17();
  if (!v2)
  {
    v12[0] = 1;
    sub_18CEC1FB4();
    v12[0] = 2;
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_11_16(v3 + 40, (uint64_t)v15);
    OUTLINED_FUNCTION_11_16((uint64_t)v15, (uint64_t)v12);
    v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA330);
    sub_18C86C39C(&qword_1EE055AB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_11_16(v3 + 48, (uint64_t)v14);
    OUTLINED_FUNCTION_11_16((uint64_t)v14, (uint64_t)v12);
    v11 = 4;
    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_11_16(v3 + 56, (uint64_t)v13);
    OUTLINED_FUNCTION_11_16((uint64_t)v13, (uint64_t)v12);
    v11 = 5;
    OUTLINED_FUNCTION_1_12();
    v12[0] = 6;
    OUTLINED_FUNCTION_2_17();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_18C94DD00()
{
  sub_18CEC211C();
  sub_18C94D864();
  return sub_18CEC214C();
}

uint64_t sub_18C94DD3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055A98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C94E2F8();
  sub_18CEC21A0();
  if (v2)
    return OUTLINED_FUNCTION_8_11();
  LOBYTE(v32) = 0;
  v9 = OUTLINED_FUNCTION_3_19();
  v11 = v10;
  LOBYTE(v32) = 1;
  swift_bridgeObjectRetain();
  v29 = sub_18CEC1F3C();
  LOBYTE(v32) = 2;
  v26 = OUTLINED_FUNCTION_3_19();
  v30 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA330);
  v31 = 3;
  v14 = sub_18C86C39C(&qword_1ECEA9FD0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  v27 = v14;
  v28 = v13;
  sub_18CEC1F60();
  v31 = 4;
  v25 = v32;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_14();
  v31 = 5;
  v24 = v32;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_14();
  v15 = v32;
  LOBYTE(v32) = 6;
  v28 = v15;
  swift_bridgeObjectRetain();
  v16 = OUTLINED_FUNCTION_3_19();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27 = v16;
  v19(v8, v5);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_8_11();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_8();
  OUTLINED_FUNCTION_13_11();
  v20 = v25;
  swift_bridgeObjectRelease();
  v21 = v30;
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_43();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v5;
  v23 = v27;
  *(_QWORD *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 64) = v23;
  *(_QWORD *)(a2 + 72) = v18;
  return result;
}

void sub_18C94E0CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_18C91CAE0(*a1, *a2);
}

void sub_18C94E0D8()
{
  unsigned __int8 *v0;

  sub_18C963E28(*v0);
}

uint64_t sub_18C94E0E0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_18C964004(a1, *v1);
}

void sub_18C94E0E8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_18C964394(a1, *v1);
}

uint64_t sub_18C94E0F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C94D778();
  *a1 = result;
  return result;
}

uint64_t sub_18C94E11C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18C94D6D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18C94E144()
{
  unsigned __int8 *v0;

  return sub_18C94D7C4(*v0);
}

uint64_t sub_18C94E14C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C94D7C0();
  *a1 = result;
  return result;
}

void sub_18C94E170(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

void sub_18C94E17C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E251C640;
}

uint64_t sub_18C94E18C()
{
  sub_18C94E2F8();
  return sub_18CEC21D0();
}

uint64_t sub_18C94E1B4()
{
  sub_18C94E2F8();
  return sub_18CEC21DC();
}

void *sub_18C94E1DC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE v5[80];

  result = (void *)sub_18C94DD3C(a1, (uint64_t)v5);
  if (!v2)
    return memcpy(a2, v5, 0x50uLL);
  return result;
}

uint64_t sub_18C94E224(_QWORD *a1)
{
  const void *v1;
  _BYTE v4[80];

  memcpy(v4, v1, sizeof(v4));
  return sub_18C94DB00(a1);
}

uint64_t sub_18C94E27C()
{
  sub_18CEC211C();
  sub_18C94D864();
  return sub_18CEC214C();
}

unint64_t sub_18C94E2BC()
{
  unint64_t result;

  result = qword_1EE055A90;
  if (!qword_1EE055A90)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A058, &type metadata for CampaignAttributorBag);
    atomic_store(result, (unint64_t *)&qword_1EE055A90);
  }
  return result;
}

unint64_t sub_18C94E2F8()
{
  unint64_t result;

  result = qword_1EE055AA0;
  if (!qword_1EE055AA0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A254, &type metadata for CampaignAttributorBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055AA0);
  }
  return result;
}

uint64_t sub_18C94E334()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_18C94E364(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for CampaignAttributorBag.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CampaignAttributorBag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_18C94E484 + 4 * byte_18CF0A033[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_18C94E4B8 + 4 * byte_18CF0A02E[v4]))();
}

uint64_t sub_18C94E4B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C94E4C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C94E4C8);
  return result;
}

uint64_t sub_18C94E4D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C94E4DCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_18C94E4E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C94E4E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CampaignAttributorBag.CodingKeys()
{
  return &type metadata for CampaignAttributorBag.CodingKeys;
}

uint64_t sub_18C94E504()
{
  return sub_18C8782A0(&qword_1EE055AC8, &qword_1EE055AD0, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_18C94E534()
{
  unint64_t result;

  result = qword_1EE055AD8;
  if (!qword_1EE055AD8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A22C, &type metadata for CampaignAttributorBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055AD8);
  }
  return result;
}

unint64_t sub_18C94E574()
{
  unint64_t result;

  result = qword_1EE055AE0;
  if (!qword_1EE055AE0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A11C, &type metadata for CampaignAttributorBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055AE0);
  }
  return result;
}

unint64_t sub_18C94E5B4()
{
  unint64_t result;

  result = qword_1EE055AE8;
  if (!qword_1EE055AE8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A144, &type metadata for CampaignAttributorBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055AE8);
  }
  return result;
}

uint64_t sub_18C94E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v23 = sub_18CEC1144();
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v20 = v2;
    v26 = MEMORY[0x1E0DEE9D8];
    v22 = v5;
    sub_18C870D40();
    v9 = v26;
    v21 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v10 = a1 + v21;
    v11 = *(_QWORD *)(v22 + 72);
    do
    {
      v12 = sub_18CEC112C();
      v13 = a2;
      sub_18C8FF7E4(v12, v14, a2);
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        sub_18CEC112C();
        v24 = 762210153;
        v25 = 0xE400000000000000;
        sub_18CEC18AC();
        swift_bridgeObjectRelease();
        sub_18CEC1138();
        sub_18CEC1120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = v22;
      }
      else
      {
        v17 = v22;
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v10, v23);
      }
      v26 = v9;
      v18 = *(_QWORD *)(v9 + 16);
      if (v18 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_18C870D40();
        v17 = v22;
        v9 = v26;
      }
      *(_QWORD *)(v9 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v9 + v21 + v18 * v11, v7, v23);
      v10 += v11;
      --v8;
      a2 = v13;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v9;
}

uint64_t sub_18C94E804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = sub_18CEC1144();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v29 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v31 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v24[1] = v2;
    v25 = v5;
    v13 = 0;
    v26 = a2;
    v27 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v30 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, a1 + v14 + v30 * v13, v5);
      v15 = sub_18CEC112C();
      v16 = a2;
      sub_18C8FF7E4(v15, v17, a2);
      v18 = v5;
      v20 = v19;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v18);
        v5 = v18;
        a2 = v16;
      }
      else
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21(v29, v11, v18);
        v22 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18C870D40();
          v22 = v31;
        }
        v23 = *(_QWORD *)(v22 + 16);
        if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_18C870D40();
          v22 = v31;
        }
        *(_QWORD *)(v22 + 16) = v23 + 1;
        v5 = v25;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v22 + v14 + v23 * v30, v29, v25);
        v31 = v22;
        a2 = v26;
        a1 = v27;
      }
      if (v28 == ++v13)
      {
        v12 = v31;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void sub_18C94EA18()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t EnumTagSinglePayload;
  __n128 *v11;
  id v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 *v28;
  id v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __n128 *v35;
  id v36;
  os_log_type_t v37;
  os_log_type_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  _QWORD v49[3];
  _QWORD __dst[10];
  char v51[8];
  char v52[8];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = (const void *)v0;
  v3 = sub_18CEC1144();
  v47 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055AF0);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_4_15();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_192();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_26_9();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v5);
  if ((_DWORD)EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_44_5(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    v17 = sub_18CEC1174();
    if (!v17)
    {
      if (qword_1EE0546A0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v28 = (__n128 *)OUTLINED_FUNCTION_2();
      v29 = OUTLINED_FUNCTION_5_13(v28, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_8_12();
      v30 = sub_18CEC1B70();
      if (OUTLINED_FUNCTION_16_5(v30))
      {
        MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        OUTLINED_FUNCTION_41_0();
        v31 = OUTLINED_FUNCTION_2();
        __dst[0] = v28;
        __dst[1] = sub_18C84C730;
        __dst[2] = OUTLINED_FUNCTION_18_11(v31);
        OUTLINED_FUNCTION_42();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v32 = OUTLINED_FUNCTION_33_8();
        OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_5_7();
        MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v33 = OUTLINED_FUNCTION_2();
        *(_OWORD *)(v33 + 16) = xmmword_18CF07380;
        *(_QWORD *)(v33 + 64) = OUTLINED_FUNCTION_68(v33, MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v33 + 32) = v32;
        *(_QWORD *)(v33 + 40) = __dst;
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_3_20();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_289();

        OUTLINED_FUNCTION_43();
      }
      else
      {

      }
      swift_bridgeObjectRelease();
      goto LABEL_43;
    }
    v18 = v17;
    v45 = v6;
    v19 = *(_QWORD *)(v17 + 16);
    if (v19)
    {
      v43 = (const void *)v0;
      v44 = v9;
      __dst[0] = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_41_7();
      v20 = v18 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      v46 = *(_QWORD *)(v47 + 72);
      v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 16);
      do
      {
        v21(v1, v20, v3);
        v22 = sub_18CEC112C();
        v24 = v23;
        OUTLINED_FUNCTION_29_8(v47);
        v25 = __dst[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_25_9();
          v25 = __dst[0];
        }
        v26 = *(_QWORD *)(v25 + 16);
        if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          OUTLINED_FUNCTION_25_9();
          v25 = __dst[0];
        }
        *(_QWORD *)(v25 + 16) = v26 + 1;
        v27 = v25 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
        v20 += v46;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v9 = v44;
      v2 = v43;
    }
    else
    {
      OUTLINED_FUNCTION_96();
      v25 = MEMORY[0x1E0DEE9D8];
    }
    sub_18C8B11E4(v25);
    memcpy(__dst, v2, sizeof(__dst));
    OUTLINED_FUNCTION_27_7((uint64_t)&__dst[5], (uint64_t)v52);
    OUTLINED_FUNCTION_27_7((uint64_t)v52, (uint64_t)&v53);
    v6 = v45;
    if (v53 && (OUTLINED_FUNCTION_45_8(v53) & 1) == 0)
    {
      OUTLINED_FUNCTION_17();
      if (qword_1EE0546A0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v35 = (__n128 *)OUTLINED_FUNCTION_2();
      v48 = xmmword_18CF07380;
      v36 = OUTLINED_FUNCTION_5_13(v35, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_19_13((uint64_t)"URL contains a query param to be removed");
      v38 = sub_18CEC1B70();
      if (!OUTLINED_FUNCTION_16_5(v38))
        goto LABEL_50;
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 == -1)
        goto LABEL_49;
    }
    else
    {
      OUTLINED_FUNCTION_27_7((uint64_t)&__dst[6], (uint64_t)v51);
      OUTLINED_FUNCTION_27_7((uint64_t)v51, (uint64_t)&v55);
      if (v55)
      {
        v34 = OUTLINED_FUNCTION_45_8(v55);
        OUTLINED_FUNCTION_17();
        if ((v34 & 1) == 0)
        {
          if (qword_1EE0546A0 != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
          v35 = (__n128 *)OUTLINED_FUNCTION_2();
          v48 = xmmword_18CF07380;
          v36 = OUTLINED_FUNCTION_5_13(v35, (__n128)xmmword_18CF07380);
          OUTLINED_FUNCTION_19_13((uint64_t)"URL contains a query param to be ignored");
          v37 = sub_18CEC1B70();
          if (OUTLINED_FUNCTION_16_5(v37))
          {
            MEMORY[0x18D789CA8]();
            if (qword_1ECEAA560 == -1)
              goto LABEL_49;
            goto LABEL_52;
          }
LABEL_50:

          goto LABEL_51;
        }
LABEL_43:
        OUTLINED_FUNCTION_36_0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        goto LABEL_44;
      }
      OUTLINED_FUNCTION_17();
      sub_18C94E364((uint64_t)v52, (uint64_t)&v54, &qword_1EE055AB0);
      if (v54)
        goto LABEL_43;
      if (qword_1EE0546A0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v35 = (__n128 *)OUTLINED_FUNCTION_2();
      v48 = xmmword_18CF07380;
      v36 = OUTLINED_FUNCTION_5_13(v35, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_14_10(0xD000000000000035, (uint64_t)"Bag contains no query params to be removed or ignored");
      v39 = sub_18CEC1B70();
      if (!OUTLINED_FUNCTION_16_5(v39))
        goto LABEL_50;
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 == -1)
      {
LABEL_49:
        OUTLINED_FUNCTION_41_0();
        v49[0] = v35;
        v49[1] = sub_18C84C730;
        v40 = OUTLINED_FUNCTION_2();
        v49[2] = OUTLINED_FUNCTION_18_11(v40);
        OUTLINED_FUNCTION_42();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v41 = OUTLINED_FUNCTION_33_8();
        OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_5_7();
        MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v42 = OUTLINED_FUNCTION_2();
        *(_OWORD *)(v42 + 16) = v48;
        *(_QWORD *)(v42 + 64) = OUTLINED_FUNCTION_68(v42, MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v42 + 32) = v41;
        *(_QWORD *)(v42 + 40) = v49;
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_3_20();
        OUTLINED_FUNCTION_155();
        OUTLINED_FUNCTION_289();

        OUTLINED_FUNCTION_43();
LABEL_51:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_36_0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
        goto LABEL_44;
      }
    }
LABEL_52:
    swift_once();
    goto LABEL_49;
  }
  OUTLINED_FUNCTION_48_7(EnumTagSinglePayload, &qword_1EE055AF0);
  if (qword_1EE0546A0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v11 = (__n128 *)OUTLINED_FUNCTION_2();
  v12 = OUTLINED_FUNCTION_10_2(v11, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_11(0xD00000000000001CLL, (uint64_t)"cannot create url components");
  v13 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_5_6(v13))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v14 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v14 + 16) = v0;
    __dst[0] = v11;
    __dst[1] = sub_18C84C730;
    __dst[2] = v14;
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_16_6();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v16 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v16 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v16 + 64) = OUTLINED_FUNCTION_68(v16, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v16 + 32) = v15;
    *(_QWORD *)(v16 + 40) = __dst;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_6_2();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_49_0();

    OUTLINED_FUNCTION_96();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
LABEL_44:
  OUTLINED_FUNCTION_174();
}

void sub_18C94F328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t EnumTagSinglePayload;
  __n128 *v10;
  id v11;
  Swift::String v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 *v28;
  id v29;
  os_log_type_t v30;
  char v31;
  uint64_t v32;
  __n128 *v33;
  os_log_type_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD __dst[10];
  char v47[8];
  uint64_t v48;

  v2 = sub_18CEC1144();
  *(_QWORD *)&v45 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055AF0);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_4_15();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_192();
  v8 = v7 - v6;
  sub_18CEC118C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v4);
  if ((_DWORD)EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_44_5(v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    v17 = sub_18CEC1174();
    if (v17)
    {
      v18 = v17;
      v42 = (const void *)v0;
      v43 = v8;
      v19 = *(_QWORD *)(v17 + 16);
      if (v19)
      {
        v41 = v5;
        __dst[0] = MEMORY[0x1E0DEE9D8];
        OUTLINED_FUNCTION_41_7();
        v20 = v18 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        v44 = *(_QWORD *)(v45 + 72);
        v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16);
        do
        {
          v21(v1, v20, v2);
          v22 = sub_18CEC112C();
          v24 = v23;
          OUTLINED_FUNCTION_29_8(v45);
          v25 = __dst[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_25_9();
            v25 = __dst[0];
          }
          v26 = *(_QWORD *)(v25 + 16);
          if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
          {
            OUTLINED_FUNCTION_25_9();
            v25 = __dst[0];
          }
          *(_QWORD *)(v25 + 16) = v26 + 1;
          v27 = v25 + 16 * v26;
          *(_QWORD *)(v27 + 32) = v22;
          *(_QWORD *)(v27 + 40) = v24;
          v20 += v44;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        v5 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
        v25 = MEMORY[0x1E0DEE9D8];
      }
      sub_18C8B11E4(v25);
      memcpy(__dst, v42, sizeof(__dst));
      sub_18C94E364((uint64_t)&__dst[7], (uint64_t)v47, &qword_1EE055AB0);
      sub_18C94E364((uint64_t)v47, (uint64_t)&v48, &qword_1EE055AB0);
      v8 = v43;
      if (v48)
      {
        OUTLINED_FUNCTION_45_8(v48);
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_36_0(v43, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_17();
      if (qword_1EE0546A0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v33 = (__n128 *)OUTLINED_FUNCTION_2();
      v29 = OUTLINED_FUNCTION_40_6(v33, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_11(0xD00000000000002BLL, (uint64_t)"No queryParamsGatingServerCall entry in bag");
      v34 = sub_18CEC1B70();
      if (OUTLINED_FUNCTION_16_5(v34))
      {
        MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        v35 = byte_1ECEA9E18;
        *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = v35;
        OUTLINED_FUNCTION_42();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        OUTLINED_FUNCTION_159();
LABEL_34:
        v36 = OUTLINED_FUNCTION_17_1();
        v38 = v37;
        swift_release();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_5_7();
        v39 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v40 = OUTLINED_FUNCTION_2();
        *(_OWORD *)(v40 + 16) = v45;
        *(_QWORD *)(v40 + 64) = OUTLINED_FUNCTION_68(v40, MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v40 + 32) = v36;
        *(_QWORD *)(v40 + 40) = v38;
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_3_20();
        OUTLINED_FUNCTION_155();
        objc_autoreleasePoolPop(v39);

        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_17();
        v8 = v43;
LABEL_36:
        OUTLINED_FUNCTION_36_0(v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        goto LABEL_37;
      }
    }
    else
    {
      if (qword_1EE0546A0 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v28 = (__n128 *)OUTLINED_FUNCTION_2();
      v29 = OUTLINED_FUNCTION_40_6(v28, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_8_12();
      v30 = sub_18CEC1B70();
      if (OUTLINED_FUNCTION_16_5(v30))
      {
        v43 = v8;
        MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        v31 = byte_1ECEA9E18;
        v32 = OUTLINED_FUNCTION_2();
        *(_BYTE *)(v32 + 16) = v31;
        __dst[0] = v28;
        __dst[1] = sub_18C84C730;
        __dst[2] = v32;
        OUTLINED_FUNCTION_42();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        OUTLINED_FUNCTION_159();
        goto LABEL_34;
      }
    }

    OUTLINED_FUNCTION_43();
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_48_7(EnumTagSinglePayload, &qword_1EE055AF0);
  if (qword_1EE0546A0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v10 = (__n128 *)OUTLINED_FUNCTION_2();
  v11 = OUTLINED_FUNCTION_10_2(v10, (__n128)xmmword_18CF07380);
  v12._object = (void *)0x800000018CEE4BB0;
  v12._countAndFlagsBits = 0xD00000000000001CLL;
  LogInterpolation.init(stringLiteral:)(v12);
  v13 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_5_6(v13))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v14 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v14 + 16) = v0;
    __dst[0] = v10;
    __dst[1] = sub_18C84C730;
    __dst[2] = v14;
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_16_6();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v16 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v16 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v16 + 64) = OUTLINED_FUNCTION_68(v16, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v16 + 32) = v15;
    *(_QWORD *)(v16 + 40) = __dst;
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_6_2();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_49_0();

    OUTLINED_FUNCTION_96();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
LABEL_37:
  OUTLINED_FUNCTION_174();
}

uint64_t sub_18C94F9DC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t EnumTagSinglePayload;
  __n128 *v20;
  id v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __n128 *v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v43;
  __n128 *v44;
  NSObject *v45;
  Swift::String v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  int v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __n128 *v64;
  void (*v65)(uint64_t *@<X8>);
  uint64_t v66;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_192();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055AF0);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v11);
  v12 = OUTLINED_FUNCTION_4_15();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v59 - v17;
  OUTLINED_FUNCTION_26_9();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v12);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_48_7(EnumTagSinglePayload, &qword_1EE055AF0);
    if (qword_1EE0546A0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v20 = (__n128 *)OUTLINED_FUNCTION_2();
    v63 = xmmword_18CF07380;
    v21 = OUTLINED_FUNCTION_5_13(v20, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_14_10(0xD000000000000034, (uint64_t)"cannot create url components, returning original url");
    v22 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_16_5(v22))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v23 = OUTLINED_FUNCTION_2();
      v24 = OUTLINED_FUNCTION_18_11(v23);
      v64 = v20;
      v65 = sub_18C84C6D8;
      v66 = v24;
      OUTLINED_FUNCTION_42();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      v25 = OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v26 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v26 + 16) = v63;
      *(_QWORD *)(v26 + 64) = OUTLINED_FUNCTION_68(v26, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v26 + 32) = v25;
      *(_QWORD *)(v26 + 40) = &v64;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_3_20();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_289();

      OUTLINED_FUNCTION_43();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    v41 = OUTLINED_FUNCTION_69();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a3, a1, v41);
  }
  *(_QWORD *)&v63 = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v18, v3, v12);
  v27 = sub_18CEC1174();
  v62 = a1;
  if (v27)
  {
    if (*(_QWORD *)(v27 + 16))
    {
      v28 = sub_18C95014C(v27);
      OUTLINED_FUNCTION_122();
      v29 = sub_18C9501C8(v28);
      OUTLINED_FUNCTION_96();
      if ((a2 & 1) != 0)
      {
        v30 = sub_18C950238(v29);
        OUTLINED_FUNCTION_122();
        v29 = v30;
      }
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
      if (!*(_QWORD *)(v29 + 16))
        OUTLINED_FUNCTION_122();
      sub_18CEC1180();
      sub_18CEC1198();
      v31 = OUTLINED_FUNCTION_69();
      if (__swift_getEnumTagSinglePayload(v10, 1, v31) == 1)
      {
        sub_18C872CA0(v10, (uint64_t *)&unk_1ECEAA300);
        v32 = v63;
        if (qword_1EE0546A0 != -1)
          swift_once();
        v33 = off_1EE056038;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
        v34 = (__n128 *)OUTLINED_FUNCTION_2();
        v61 = xmmword_18CF07380;
        v35 = OUTLINED_FUNCTION_5_13(v34, (__n128)xmmword_18CF07380);
        OUTLINED_FUNCTION_14_10(0xD00000000000003FLL, (uint64_t)"cannot create url from clean components, returning original url");
        v36 = sub_18CEC1B88();
        if (os_log_type_enabled(v35, (os_log_type_t)v36))
        {
          v60 = v36;
          v59 = (void *)MEMORY[0x18D789CA8]();
          if (qword_1ECEAA560 != -1)
            swift_once();
          OUTLINED_FUNCTION_41_0();
          v37 = OUTLINED_FUNCTION_2();
          v38 = OUTLINED_FUNCTION_18_11(v37);
          v64 = v34;
          v65 = sub_18C84C730;
          v66 = v38;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
          sub_18C872F40();
          v39 = OUTLINED_FUNCTION_16_10();
          OUTLINED_FUNCTION_25_3();
          OUTLINED_FUNCTION_264();
          objc_autoreleasePoolPop(v59);
          v59 = (void *)MEMORY[0x18D789CA8]();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
          v40 = OUTLINED_FUNCTION_2();
          *(_OWORD *)(v40 + 16) = v61;
          *(_QWORD *)(v40 + 64) = OUTLINED_FUNCTION_68(v40, MEMORY[0x1E0DEA968]);
          *(_QWORD *)(v40 + 32) = v39;
          *(_QWORD *)(v40 + 40) = v33;
          OUTLINED_FUNCTION_35();
          sub_18CEC1594();
          OUTLINED_FUNCTION_96();
          objc_autoreleasePoolPop(v59);

          OUTLINED_FUNCTION_264();
          OUTLINED_FUNCTION_17();
          v32 = v63;
        }
        else
        {

          OUTLINED_FUNCTION_264();
        }
        OUTLINED_FUNCTION_30_8((uint64_t)v16);
        OUTLINED_FUNCTION_30_8((uint64_t)v18);
        v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        v57 = v32;
        v58 = v62;
      }
      else
      {
        OUTLINED_FUNCTION_30_8((uint64_t)v16);
        OUTLINED_FUNCTION_30_8((uint64_t)v18);
        v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v57 = v63;
        v58 = v10;
      }
      return v56(v57, v58, v31);
    }
    OUTLINED_FUNCTION_122();
  }
  if (qword_1EE0546A0 != -1)
    swift_once();
  v43 = off_1EE056038;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v44 = (__n128 *)OUTLINED_FUNCTION_2();
  v61 = xmmword_18CF07380;
  v45 = OUTLINED_FUNCTION_5_13(v44, (__n128)xmmword_18CF07380);
  v46._object = (void *)0x800000018CEE4B10;
  v46._countAndFlagsBits = 0xD000000000000027;
  LogInterpolation.init(stringLiteral:)(v46);
  v47 = sub_18CEC1B70();
  v48 = os_log_type_enabled(v45, v47);
  v49 = v63;
  if (v48)
  {
    v50 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v51 = OUTLINED_FUNCTION_2();
    v52 = OUTLINED_FUNCTION_18_11(v51);
    v64 = v44;
    v65 = sub_18C84C730;
    v66 = v52;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v53 = OUTLINED_FUNCTION_16_10();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_158();
    objc_autoreleasePoolPop(v50);
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v54 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v54 + 16) = v61;
    *(_QWORD *)(v54 + 64) = OUTLINED_FUNCTION_68(v54, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v54 + 32) = v53;
    *(_QWORD *)(v54 + 40) = v43;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_289();

    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_17();
    v49 = v63;
  }
  else
  {

    OUTLINED_FUNCTION_158();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v55 = OUTLINED_FUNCTION_69();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v49, v62, v55);
}

uint64_t sub_18C95014C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 48);
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_18C8B11E4(v4);
    swift_bridgeObjectRetain();
    a1 = sub_18C94E5F0(a1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18C9501C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 40);
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_18C8B11E4(v4);
    v6 = swift_bridgeObjectRetain();
    return sub_18C94E804(v6, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18C950238(uint64_t a1)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  Swift::String v14;
  os_log_type_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *@<X8>);
  uint64_t v32;
  _BYTE __dst[80];
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;

  v3 = sub_18CEC1144();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  memcpy(__dst, v1, sizeof(__dst));
  sub_18C94E364((uint64_t)&__dst[64], (uint64_t)v34, &qword_1EE055A28);
  sub_18C94E364((uint64_t)v34, (uint64_t)&v35, &qword_1EE055A28);
  if (v36)
  {
    v29 = v36;
    v28 = v35;
    v10 = qword_1EE0546A0;
    swift_bridgeObjectRetain();
    if (v10 != -1)
      swift_once();
    v11 = off_1EE056038;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v12 = swift_allocObject();
    v27 = xmmword_18CF07380;
    *(_OWORD *)(v12 + 16) = xmmword_18CF07380;
    v13 = v11;
    v14._object = (void *)0x800000018CEE4B80;
    v14._countAndFlagsBits = 0xD000000000000026;
    LogInterpolation.init(stringLiteral:)(v14);
    v15 = sub_18CEC1B70();
    if (os_log_type_enabled(v13, v15))
    {
      v26 = v7;
      v25 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v16 = byte_1ECEA9E18;
      v17 = swift_allocObject();
      *(_BYTE *)(v17 + 16) = v16;
      v30 = v12;
      v31 = sub_18C84C730;
      v32 = v17;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v18 = sub_18CEC17C8();
      v20 = v19;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v25);
      v25 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v27;
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 64) = sub_18C872FBC();
      *(_QWORD *)(v21 + 32) = v18;
      *(_QWORD *)(v21 + 40) = v20;
      swift_bridgeObjectRetain();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v25);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v26;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_18CEC1120();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a1 = sub_18C9206D8(0, *(_QWORD *)(a1 + 16) + 1, 1, a1);
    v23 = *(_QWORD *)(a1 + 16);
    v22 = *(_QWORD *)(a1 + 24);
    if (v23 >= v22 >> 1)
      a1 = sub_18C9206D8(v22 > 1, v23 + 1, 1, a1);
    *(_QWORD *)(a1 + 16) = v23 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(a1+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v23, v7, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18C950638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  unint64_t i;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v22;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v22 = a1 + 32;
  v4 = a2 + 56;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (!*(_QWORD *)(a2 + 16))
  {
LABEL_20:
    if (++v5 == v2)
    {
      v20 = 1;
      goto LABEL_24;
    }
  }
  v6 = (uint64_t *)(v22 + 16 * v5);
  v8 = *v6;
  v7 = v6[1];
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  v9 = sub_18CEC214C();
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v13 = (_QWORD *)(v12 + 16 * v11);
  v14 = *v13 == v8 && v13[1] == v7;
  if (!v14 && (sub_18CEC205C() & 1) == 0)
  {
    v15 = ~v10;
    for (i = v11 + 1; ; i = v17 + 1)
    {
      v17 = i & v15;
      if (((*(_QWORD *)(v4 + (((i & v15) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v15)) & 1) == 0)
        break;
      v18 = (_QWORD *)(v12 + 16 * v17);
      v19 = *v18 == v8 && v18[1] == v7;
      if (v19 || (sub_18CEC205C() & 1) != 0)
        goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  v20 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v20;
}

void sub_18C9507D4(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[3];
  __int128 v29;
  _OWORD v30[2];
  _QWORD v31[6];
  uint64_t v32;

  sub_18C8FBCB4(v31, a1);
  v32 = v31[0];
  v2 = v31[3];
  v3 = v31[4];
  v21 = v31[1];
  v22 = (unint64_t)(v31[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v3)
    {
      v5 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v6 = v5 | (v2 << 6);
      goto LABEL_15;
    }
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v7 >= v22)
      goto LABEL_29;
    v8 = *(_QWORD *)(v21 + 8 * v7);
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v22)
        goto LABEL_29;
      v8 = *(_QWORD *)(v21 + 8 * v9);
      if (v8)
        goto LABEL_13;
      v9 = v2 + 3;
      if (v2 + 3 >= v22)
        goto LABEL_29;
      v8 = *(_QWORD *)(v21 + 8 * v9);
      if (v8)
        goto LABEL_13;
      v9 = v2 + 4;
      if (v2 + 4 >= v22)
        goto LABEL_29;
      v8 = *(_QWORD *)(v21 + 8 * v9);
      if (v8)
      {
LABEL_13:
        v7 = v9;
      }
      else
      {
        v7 = v2 + 5;
        if (v2 + 5 >= v22)
          goto LABEL_29;
        v8 = *(_QWORD *)(v21 + 8 * v7);
        if (!v8)
        {
          v18 = v2 + 6;
          while (v18 < v22)
          {
            v8 = *(_QWORD *)(v21 + 8 * v18++);
            if (v8)
            {
              v7 = v18 - 1;
              goto LABEL_14;
            }
          }
          goto LABEL_29;
        }
      }
    }
LABEL_14:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v7 << 6);
    v2 = v7;
LABEL_15:
    v10 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v6);
    v11 = *v10;
    v12 = v10[1];
    sub_18C872C64(*(_QWORD *)(v32 + 56) + 32 * v6, (uint64_t)v30);
    *(_QWORD *)&v29 = v11;
    *((_QWORD *)&v29 + 1) = v12;
    v28[0] = v29;
    v28[1] = v30[0];
    v28[2] = v30[1];
    swift_bridgeObjectRetain();
    sub_18C9515D4((uint64_t *)v28, (uint64_t)&v24);
    if (v1)
    {
      sub_18C872CA0((uint64_t)v28, &qword_1EE055B08);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return;
    }
    sub_18C872CA0((uint64_t)v28, &qword_1EE055B08);
    v13 = v25;
    if (v25)
    {
      v23 = v24;
      v14 = v26;
      v15 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_18C920880();
        v4 = v19;
      }
      v16 = *(_QWORD *)(v4 + 16);
      if (v16 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_18C920880();
        v4 = v20;
      }
      *(_QWORD *)(v4 + 16) = v16 + 1;
      v17 = v4 + 40 * v16;
      *(_OWORD *)(v17 + 32) = v23;
      *(_QWORD *)(v17 + 48) = v13;
      *(_QWORD *)(v17 + 56) = v14;
      *(_QWORD *)(v17 + 64) = v15;
    }
  }
  __break(1u);
}

uint64_t sub_18C950A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  Swift::String v17;
  os_log_type_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  Swift::String v30;
  os_log_type_t v31;
  void *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  sub_18C928F10(a3, &v41);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    sub_18C872CA0((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
LABEL_8:
    v13 = MEMORY[0x1E0DEA968];
    if (qword_1EE054720 != -1)
      swift_once();
    v14 = (void *)qword_1EE056098;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_18CF073C0;
    v16 = v14;
    v17._countAndFlagsBits = 0xD000000000000027;
    v17._object = (void *)0x800000018CEE4DA0;
    LogInterpolation.init(stringLiteral:)(v17);
    v43 = v13;
    *(_QWORD *)&v41 = a1;
    *((_QWORD *)&v41 + 1) = a2;
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
    v18 = sub_18CEC1B88();
    if (!os_log_type_enabled(v16, v18))
    {

LABEL_23:
      result = swift_bridgeObjectRelease();
      v12 = 0;
      v9 = 0;
      v10 = 0;
      a1 = 0;
      a2 = 0;
      goto LABEL_24;
    }
    v19 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v20 = byte_1ECEA9E18;
    v21 = swift_allocObject();
    *(_BYTE *)(v21 + 16) = v20;
    *(_QWORD *)&v41 = v15;
    *((_QWORD *)&v41 + 1) = sub_18C84C730;
    v42 = v21;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v22 = sub_18CEC17C8();
    v24 = v23;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v19);
    v25 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v26 + 56) = v13;
    *(_QWORD *)(v26 + 64) = sub_18C872FBC();
    *(_QWORD *)(v26 + 32) = v22;
    *(_QWORD *)(v26 + 40) = v24;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v25);

LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v8 = MEMORY[0x1E0DEA968];
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v10 = *((_QWORD *)&v40 + 1);
  v9 = v40;
  sub_18C928F10(a3, &v41);
  swift_bridgeObjectRelease();
  if (!v43)
  {
    sub_18C872CA0((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
    goto LABEL_16;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_16:
    if (qword_1EE054720 != -1)
      swift_once();
    v27 = (void *)qword_1EE056098;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_18CF07370;
    v29 = v27;
    v30._countAndFlagsBits = 0xD000000000000031;
    v30._object = (void *)0x800000018CEE4DF0;
    LogInterpolation.init(stringLiteral:)(v30);
    v43 = v8;
    v41 = v40;
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
    v43 = v8;
    *(_QWORD *)&v41 = a1;
    *((_QWORD *)&v41 + 1) = a2;
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
    v31 = sub_18CEC1B88();
    if (!os_log_type_enabled(v29, v31))
    {

      goto LABEL_23;
    }
    v32 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v33 = byte_1ECEA9E18;
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = v33;
    *(_QWORD *)&v41 = v28;
    *((_QWORD *)&v41 + 1) = sub_18C84C730;
    v42 = v34;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v35 = sub_18CEC17C8();
    v37 = v36;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v32);
    v38 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v39 + 56) = v8;
    *(_QWORD *)(v39 + 64) = sub_18C872FBC();
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v37;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v38);

    goto LABEL_22;
  }
  v12 = v40;
LABEL_24:
  *a4 = v12;
  a4[1] = v9;
  a4[2] = v10;
  a4[3] = a1;
  a4[4] = a2;
  return result;
}

uint64_t static CarrierOfferRegistrationPrivacyValidator.allowedIdentifiers(from:forAccount:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_18C951048(a1, v2, a2);
}

uint64_t sub_18C951048(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_18C9507D4(a1);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  v48 = v3;
  if (v4)
  {
    v6 = v3;
    *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
    sub_18C876900();
    v5 = v53;
    v7 = (uint64_t *)(v6 + 48);
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      *(_QWORD *)&v53 = v5;
      v10 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
      {
        sub_18C876900();
        v5 = v53;
      }
      *(_QWORD *)(v5 + 16) = v10 + 1;
      v12 = v5 + 16 * v10;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v8;
      v7 += 5;
      --v4;
    }
    while (v4);
  }
  v13 = sub_18C8B11E4(v5);
  sub_18C9521C8();
  v14 = sub_18C92B110(a3, v13);
  swift_bridgeObjectRelease();
  v50 = v14 + 56;
  v15 = 1 << *(_BYTE *)(v14 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v14 + 56);
  v51 = (unint64_t)(v15 + 63) >> 6;
  v52 = v14;
  swift_bridgeObjectRetain();
  v18 = 0;
  v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (!v17)
    goto LABEL_10;
LABEL_9:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 24 * i);
    v27 = *v25;
    v26 = v25[1];
    v28 = v25[2];
    swift_bridgeObjectRetain_n();
    swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v53 = v19;
    v29 = sub_18C86ECD4();
    if (__OFADD__(v19[2], (v30 & 1) == 0))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:

      sub_18CEC20A4();
      __break(1u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    v31 = v29;
    v32 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055B00);
    if ((sub_18CEC1E58() & 1) != 0)
    {
      v33 = sub_18C86ECD4();
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_48;
      v31 = v33;
    }
    v19 = (_QWORD *)v53;
    if ((v32 & 1) != 0)
    {
      v35 = (_QWORD *)(*(_QWORD *)(v53 + 56) + 24 * v31);
      swift_bridgeObjectRelease();
      *v35 = v27;
      v35[1] = v26;
      v35[2] = v28;
    }
    else
    {
      *(_QWORD *)(v53 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v36 = (_QWORD *)(v19[6] + 16 * v31);
      *v36 = v27;
      v36[1] = v26;
      v37 = (_QWORD *)(v19[7] + 24 * v31);
      *v37 = v27;
      v37[1] = v26;
      v37[2] = v28;
      v38 = v19[2];
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (v39)
        goto LABEL_45;
      v19[2] = v40;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_9;
LABEL_10:
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_46;
    if (v22 >= v51)
      goto LABEL_38;
    v23 = *(_QWORD *)(v50 + 8 * v22);
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v51)
        goto LABEL_38;
      v23 = *(_QWORD *)(v50 + 8 * v18);
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v51)
          goto LABEL_38;
        v23 = *(_QWORD *)(v50 + 8 * v18);
        if (!v23)
        {
          v18 = v22 + 3;
          if (v22 + 3 >= v51)
            goto LABEL_38;
          v23 = *(_QWORD *)(v50 + 8 * v18);
          if (!v23)
          {
            v18 = v22 + 4;
            if (v22 + 4 >= v51)
              goto LABEL_38;
            v23 = *(_QWORD *)(v50 + 8 * v18);
            if (!v23)
              break;
          }
        }
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
  }
  v24 = v22 + 5;
  if (v24 < v51)
  {
    v23 = *(_QWORD *)(v50 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        v18 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_47;
        if (v18 >= v51)
          goto LABEL_38;
        v23 = *(_QWORD *)(v50 + 8 * v18);
        ++v24;
        if (v23)
          goto LABEL_27;
      }
    }
    v18 = v24;
    goto LABEL_27;
  }
LABEL_38:
  swift_release();
  swift_bridgeObjectRelease();
  v57 = MEMORY[0x1E0DEE9E8];
  v41 = *(_QWORD *)(v48 + 16);
  if (v41)
  {
    v42 = (_QWORD *)(swift_bridgeObjectRetain() + 64);
    do
    {
      v43 = *(v42 - 1);
      v44 = *v42;
      v45 = *(v42 - 2);
      v53 = *((_OWORD *)v42 - 2);
      v54 = v45;
      v55 = v43;
      v56 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18C9519F4((uint64_t)&v57, (uint64_t *)&v53, (uint64_t)v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 += 5;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v46 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x1E0DEE9E8];
  }

  return v46;
}

uint64_t sub_18C9515D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  Swift::String v17;
  uint64_t v18;
  os_log_type_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a1[1];
  v6 = (uint64_t)(a1 + 2);
  *(_QWORD *)&v28 = *a1;
  *((_QWORD *)&v28 + 1) = v5;
  sub_18C872C64((uint64_t)(a1 + 2), (uint64_t)v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v7 = v30;
    v8 = *a1;
    *((_QWORD *)&v28 + 1) = a1[1];
    sub_18C872C64(v6, (uint64_t)v29);
    swift_bridgeObjectRetain();
    sub_18C950A74(v8, *((uint64_t *)&v28 + 1), v7, &v30);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    return sub_18C952210((uint64_t)&v30, a2);
  }
  else
  {
    v32 = v2;
    if (qword_1EE054720 != -1)
      swift_once();
    v10 = (void *)qword_1EE056098;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_18CF07370;
    v12 = v10;
    v13 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v28 = sub_18CEC21E8();
    *((_QWORD *)&v28 + 1) = v15;
    sub_18CEC18AC();
    sub_18CEC18AC();
    swift_bridgeObjectRelease();
    sub_18CEC18AC();
    v31 = MEMORY[0x1E0DEA968];
    v30 = v28;
    v28 = 0u;
    v29[0] = 0u;
    sub_18C872148((uint64_t)&v30, (uint64_t)&v28);
    *(_BYTE *)(v14 + 64) = 0;
    v16 = v29[0];
    *(_OWORD *)(v14 + 32) = v28;
    *(_OWORD *)(v14 + 48) = v16;
    *(_QWORD *)(v11 + 32) = v14;
    swift_bridgeObjectRelease();
    v17._object = (void *)0x800000018CEE4D50;
    v17._countAndFlagsBits = 0xD000000000000020;
    LogInterpolation.init(stringLiteral:)(v17);
    v18 = a1[1];
    *(_QWORD *)&v28 = *a1;
    *((_QWORD *)&v28 + 1) = v18;
    sub_18C872C64(v6, (uint64_t)v29);
    sub_18C872D90(v29, &v30);
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v30, (uint64_t *)&unk_1ECEAA5F0);
    v19 = sub_18CEC1B88();
    if (os_log_type_enabled(v12, v19))
    {
      v20 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v21 = byte_1ECEA9E18;
      v22 = swift_allocObject();
      *(_BYTE *)(v22 + 16) = v21;
      *(_QWORD *)&v28 = v11;
      *((_QWORD *)&v28 + 1) = sub_18C84C730;
      *(_QWORD *)&v29[0] = v22;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v23 = sub_18CEC17C8();
      v25 = v24;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v20);
      v26 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v27 + 64) = sub_18C872FBC();
      *(_QWORD *)(v27 + 32) = v23;
      *(_QWORD *)(v27 + 40) = v25;
      swift_bridgeObjectRetain();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v26);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_18C9519F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  Swift::String v21;
  Swift::String v22;
  os_log_type_t v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  Swift::String v39;
  os_log_type_t v40;
  void *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  swift_bridgeObjectRetain();
  sub_18C929094(v5, v6, a3);
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    if (v12 >= v4)
    {
      swift_bridgeObjectRetain();
      sub_18C87CFA8(&v50, v7, v8);
      return swift_bridgeObjectRelease();
    }
    if (qword_1EE054720 != -1)
      swift_once();
    v13 = (void *)qword_1EE056098;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_18CF08890;
    v15 = v13;
    v16 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v50 = sub_18CEC21E8();
    *((_QWORD *)&v50 + 1) = v18;
    sub_18CEC18AC();
    sub_18CEC18AC();
    swift_bridgeObjectRelease();
    sub_18CEC18AC();
    v19 = MEMORY[0x1E0DEA968];
    v53 = MEMORY[0x1E0DEA968];
    v52 = v50;
    v50 = 0u;
    v51 = 0u;
    sub_18C872148((uint64_t)&v52, (uint64_t)&v50);
    *(_BYTE *)(v17 + 64) = 0;
    v20 = v51;
    *(_OWORD *)(v17 + 32) = v50;
    *(_OWORD *)(v17 + 48) = v20;
    *(_QWORD *)(v14 + 32) = v17;
    swift_bridgeObjectRelease();
    v21._object = (void *)0x800000018CEE4D00;
    v21._countAndFlagsBits = 0xD000000000000017;
    LogInterpolation.init(stringLiteral:)(v21);
    *((_QWORD *)&v51 + 1) = v19;
    *(_QWORD *)&v50 = v5;
    *((_QWORD *)&v50 + 1) = v6;
    swift_bridgeObjectRetain();
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v50, (uint64_t *)&unk_1ECEAA5F0);
    v22._countAndFlagsBits = 0xD000000000000022;
    v22._object = (void *)0x800000018CEE4D20;
    LogInterpolation.init(stringLiteral:)(v22);
    *((_QWORD *)&v51 + 1) = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v50 = v4;
    static LogInterpolation.safe(_:)();
    sub_18C872CA0((uint64_t)&v50, (uint64_t *)&unk_1ECEAA5F0);
    v23 = sub_18CEC1B70();
    if (os_log_type_enabled(v15, v23))
    {
      v24 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v25 = byte_1ECEA9E18;
      v26 = swift_allocObject();
      *(_BYTE *)(v26 + 16) = v25;
      *(_QWORD *)&v50 = v14;
      *((_QWORD *)&v50 + 1) = sub_18C84C730;
      *(_QWORD *)&v51 = v26;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v27 = sub_18CEC17C8();
      v29 = v28;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v24);
      v30 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v31 + 56) = v19;
      *(_QWORD *)(v31 + 64) = sub_18C872FBC();
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v29;
      swift_bridgeObjectRetain();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v30);

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_15:

    return swift_bridgeObjectRelease();
  }
  if (qword_1EE054720 != -1)
    swift_once();
  v32 = (void *)qword_1EE056098;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_18CF07370;
  v15 = v32;
  v34 = AMSSetLogKeyIfNeeded();
  sub_18CEC181C();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v50 = sub_18CEC21E8();
  *((_QWORD *)&v50 + 1) = v36;
  sub_18CEC18AC();
  sub_18CEC18AC();
  swift_bridgeObjectRelease();
  sub_18CEC18AC();
  v37 = MEMORY[0x1E0DEA968];
  v53 = MEMORY[0x1E0DEA968];
  v52 = v50;
  v50 = 0u;
  v51 = 0u;
  sub_18C872148((uint64_t)&v52, (uint64_t)&v50);
  *(_BYTE *)(v35 + 64) = 0;
  v38 = v51;
  *(_OWORD *)(v35 + 32) = v50;
  *(_OWORD *)(v35 + 48) = v38;
  *(_QWORD *)(v33 + 32) = v35;
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 0xD000000000000025;
  v39._object = (void *)0x800000018CEE4CD0;
  LogInterpolation.init(stringLiteral:)(v39);
  *((_QWORD *)&v51 + 1) = v37;
  *(_QWORD *)&v50 = v5;
  *((_QWORD *)&v50 + 1) = v6;
  swift_bridgeObjectRetain();
  static LogInterpolation.safe(_:)();
  sub_18C872CA0((uint64_t)&v50, (uint64_t *)&unk_1ECEAA5F0);
  v40 = sub_18CEC1B70();
  if (!os_log_type_enabled(v15, v40))
    goto LABEL_15;
  v41 = (void *)MEMORY[0x18D789CA8]();
  if (qword_1ECEAA560 != -1)
    swift_once();
  v42 = byte_1ECEA9E18;
  v43 = swift_allocObject();
  *(_BYTE *)(v43 + 16) = v42;
  *(_QWORD *)&v50 = v33;
  *((_QWORD *)&v50 + 1) = sub_18C84C6D8;
  *(_QWORD *)&v51 = v43;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
  sub_18C872F40();
  v44 = sub_18CEC17C8();
  v46 = v45;
  swift_release();
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v41);
  v47 = (void *)MEMORY[0x18D789CA8]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_18CF07380;
  *(_QWORD *)(v48 + 56) = v37;
  *(_QWORD *)(v48 + 64) = sub_18C872FBC();
  *(_QWORD *)(v48 + 32) = v44;
  *(_QWORD *)(v48 + 40) = v46;
  swift_bridgeObjectRetain();
  sub_18CEC1594();
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v47);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id CarrierOfferRegistrationPrivacyValidator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CarrierOfferRegistrationPrivacyValidator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CarrierOfferRegistrationPrivacyValidator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CarrierOfferRegistrationPrivacyValidator()
{
  return objc_opt_self();
}

unint64_t sub_18C9521C8()
{
  unint64_t result;

  result = qword_1EE055AF8;
  if (!qword_1EE055AF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE055AF8);
  }
  return result;
}

uint64_t sub_18C952210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for PrivacyCriteria()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrivacyCriteria(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PrivacyCriteria(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PrivacyCriteria(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyCriteria(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyCriteria(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyCriteria()
{
  return &type metadata for PrivacyCriteria;
}

uint64_t sub_18C952424(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18C95245C + 4 * byte_18CF0A300[a1]))(0xD000000000000011, 0x800000018CEE4F70);
}

uint64_t sub_18C95245C()
{
  return 1684632935;
}

uint64_t sub_18C95246C()
{
  return 0x617261506B6E696CLL;
}

uint64_t sub_18C952488()
{
  return 6513008;
}

uint64_t sub_18C952498()
{
  return 0x43746375646F7270;
}

uint64_t static ChannelLinkRequestParametersBuilder.linkRequestParameters(guid:linkParams:productCode:additionalParameters:customerID:pacPromise:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v9[32] = v12;
  v9[33] = v8;
  v9[30] = a8;
  v9[31] = v11;
  v9[28] = a6;
  v9[29] = a7;
  v9[26] = a4;
  v9[27] = a5;
  v9[24] = a2;
  v9[25] = a3;
  v9[23] = a1;
  return swift_task_switch();
}

uint64_t sub_18C9524EC()
{
  uint64_t v0;
  _OWORD *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  Swift::String v12;
  os_log_type_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (_OWORD *)(v0 + 80);
  v2 = *(void **)(v0 + 256);
  if (v2)
  {
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_18C952858;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_18C8FDB6C;
    *(_QWORD *)(v0 + 104) = &block_descriptor_9;
    objc_msgSend(v2, sel_resultWithCompletion_, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    if (qword_1EE0546C0 != -1)
      swift_once();
    v4 = (void *)qword_1EE056050;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v5 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v5 + 16) = xmmword_18CF073C0;
    v6 = v4;
    v7 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v8 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v8 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain();
    v20 = OUTLINED_FUNCTION_6_1();
    v21 = v9;
    OUTLINED_FUNCTION_4_1();
    sub_18CEC18AC();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_5_0();
    v10 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 120) = v20;
    *(_QWORD *)(v0 + 128) = v21;
    *v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_18C872148(v0 + 120, v0 + 80);
    *(_BYTE *)(v0 + 112) = 0;
    v11 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v8 + 32) = *v1;
    *(_OWORD *)(v8 + 48) = v11;
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v0 + 112);
    *(_QWORD *)(v5 + 32) = v8;
    OUTLINED_FUNCTION_155();
    v12._object = (void *)0x800000018CEE4E80;
    v12._countAndFlagsBits = 0xD000000000000026;
    LogInterpolation.init(stringLiteral:)(v12);
    v13 = sub_18CEC1BA0();
    if (os_log_type_enabled(v6, v13))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v14 = byte_1ECEA9E18;
      v15 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v15 + 16) = v14;
      *(_QWORD *)(v0 + 80) = v5;
      *(_QWORD *)(v0 + 88) = sub_18C84C6D8;
      *(_QWORD *)(v0 + 96) = v15;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      OUTLINED_FUNCTION_26_0();
      v16 = sub_18CEC17C8();
      v18 = v17;
      OUTLINED_FUNCTION_96();
      swift_release();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v19 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v19 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v19 + 56) = v10;
      *(_QWORD *)(v19 + 64) = sub_18C872FBC();
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = v18;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5_7();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_96();

    OUTLINED_FUNCTION_2_18();
    OUTLINED_FUNCTION_27_8();
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_23_5();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
}

uint64_t sub_18C952858()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136();
  *v1 = *v0;
  *(_QWORD *)(v2 + 272) = *(_QWORD *)(v2 + 48);
  return swift_task_switch();
}

uint64_t sub_18C9528B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v1 = *(void **)(v0 + 256);
  v2 = *(void **)(v0 + 120);
  v3 = sub_18CEC181C();
  v5 = v4;

  *(_QWORD *)&v7 = v3;
  *((_QWORD *)&v7 + 1) = v5;
  sub_18C952CAC(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v7);
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_23_5();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_18C95293C()
{
  uint64_t v0;
  _OWORD *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  os_log_type_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;

  v1 = (_OWORD *)(v0 + 80);
  swift_willThrow();
  if (qword_1EE0546C0 != -1)
    swift_once();
  v2 = (void *)qword_1EE056050;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v3 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v3 + 16) = xmmword_18CF07370;
  v4 = v2;
  v5 = AMSSetLogKeyIfNeeded();
  sub_18CEC181C();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v6 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v6 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain();
  v23 = OUTLINED_FUNCTION_6_1();
  v24 = v7;
  OUTLINED_FUNCTION_4_1();
  sub_18CEC18AC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_0();
  *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 120) = v23;
  *(_QWORD *)(v0 + 128) = v24;
  *v1 = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_18C872148(v0 + 120, v0 + 80);
  *(_BYTE *)(v0 + 112) = 0;
  v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v6 + 32) = *v1;
  *(_OWORD *)(v6 + 48) = v8;
  *(_BYTE *)(v6 + 64) = *(_BYTE *)(v0 + 112);
  *(_QWORD *)(v3 + 32) = v6;
  swift_bridgeObjectRelease();
  v9._object = (void *)0x800000018CEE4EB0;
  v9._countAndFlagsBits = 0xD00000000000001BLL;
  LogInterpolation.init(stringLiteral:)(v9);
  swift_getErrorValue();
  v10 = *(void **)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 104) = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 80));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, v10, v11);
  static LogInterpolation.safe(_:)();
  sub_18C872CA0(v0 + 80, (uint64_t *)&unk_1ECEAA5F0);
  v13 = sub_18CEC1B88();
  if (os_log_type_enabled(v4, v13))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v14 = *(void **)(v0 + 256);
    v15 = byte_1ECEA9E18;
    v16 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v16 + 16) = v15;
    *(_QWORD *)(v0 + 80) = v3;
    *(_QWORD *)(v0 + 88) = sub_18C84C730;
    *(_QWORD *)(v0 + 96) = v16;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_26_0();
    v17 = sub_18CEC17C8();
    v19 = v18;
    OUTLINED_FUNCTION_44();
    swift_release();
    OUTLINED_FUNCTION_5_7();
    v10 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v20 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v20 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_18C872FBC();
    *(_QWORD *)(v20 + 32) = v17;
    *(_QWORD *)(v20 + 40) = v19;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    OUTLINED_FUNCTION_155();
    objc_autoreleasePoolPop(v10);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_44();
  }
  else
  {
    v21 = *(void **)(v0 + 256);
    OUTLINED_FUNCTION_44();

  }
  OUTLINED_FUNCTION_2_18();
  OUTLINED_FUNCTION_27_8();
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_23_5();
  return (*(uint64_t (**)(void *))(v0 + 8))(v10);
}

uint64_t sub_18C952CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _BYTE v25[32];
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v28 = MEMORY[0x1E0DEE9E0];
  v16 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v27 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v26 = a1;
  *((_QWORD *)&v26 + 1) = a2;
  OUTLINED_FUNCTION_14_11(a1, a2);
  OUTLINED_FUNCTION_35();
  sub_18C92CF10((uint64_t)v25);
  v17 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  *((_QWORD *)&v27 + 1) = v16;
  *(_QWORD *)&v26 = a3;
  *((_QWORD *)&v26 + 1) = a4;
  OUTLINED_FUNCTION_14_11(v17, v18);
  swift_bridgeObjectRetain();
  sub_18C92CF10((uint64_t)v25);
  v19 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  *((_QWORD *)&v27 + 1) = v16;
  *(_QWORD *)&v26 = a5;
  *((_QWORD *)&v26 + 1) = a6;
  OUTLINED_FUNCTION_14_11(v19, v20);
  swift_bridgeObjectRetain();
  sub_18C92CF10((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
  if (a9)
  {
    *((_QWORD *)&v27 + 1) = v16;
    *(_QWORD *)&v26 = a8;
    *((_QWORD *)&v26 + 1) = a9;
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRetain();
  sub_18C953180((uint64_t)&v26, 0);
  sub_18C872CA0((uint64_t)&v26, (uint64_t *)&unk_1ECEAA5F0);
  if (*((_QWORD *)&a10 + 1))
  {
    *((_QWORD *)&v27 + 1) = v16;
    v26 = a10;
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRetain();
  sub_18C953180((uint64_t)&v26, 3u);
  sub_18C872CA0((uint64_t)&v26, (uint64_t *)&unk_1ECEAA5F0);
  if (!a7)
    return v28;
  swift_bridgeObjectRetain();
  v21 = v28;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v26 = v21;
  sub_18C953C28(a7, (uint64_t)sub_18C953E7C, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v26);
  v23 = v26;
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_18C952F6C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, void *a6, void *aBlock)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7[2] = a6;
  v7[3] = _Block_copy(aBlock);
  v24 = sub_18CEC181C();
  v12 = v11;
  v23 = sub_18CEC181C();
  v14 = v13;
  v22 = sub_18CEC181C();
  v16 = v15;
  if (a4)
    a4 = sub_18CEC1774();
  v7[4] = a4;
  if (a5)
  {
    a5 = sub_18CEC181C();
    v18 = v17;
  }
  else
  {
    v18 = 0;
  }
  v7[5] = v18;
  v7[6] = v16;
  v7[7] = v14;
  v7[8] = v12;
  swift_getObjCClassMetadata();
  v19 = a6;
  v20 = (_QWORD *)swift_task_alloc();
  v7[9] = v20;
  *v20 = v7;
  v20[1] = sub_18C9530B8;
  return static ChannelLinkRequestParametersBuilder.linkRequestParameters(guid:linkParams:productCode:additionalParameters:customerID:pacPromise:)(v24, v12, v23, v14, v22, v16, a4, a5);
}

uint64_t sub_18C9530B8()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(_QWORD, _QWORD);
  void *v3;
  void *v4;

  OUTLINED_FUNCTION_136();
  v3 = *(void **)(v1 + 16);
  v2 = *(void (***)(_QWORD, _QWORD))(v1 + 24);
  OUTLINED_FUNCTION_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44();

  OUTLINED_FUNCTION_155();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_18CEC175C();
  OUTLINED_FUNCTION_96();
  ((void (**)(_QWORD, void *))v2)[2](v2, v4);

  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C953180(uint64_t a1, unsigned __int8 a2)
{
  __int128 v4;
  uint64_t v5;
  _OWORD v6[2];

  sub_18C872D48(a1, (uint64_t)&v4);
  if (!v5)
    return sub_18C872CA0((uint64_t)&v4, (uint64_t *)&unk_1ECEAA5F0);
  sub_18C872D90(&v4, v6);
  sub_18C952424(a2);
  sub_18C872C64((uint64_t)v6, (uint64_t)&v4);
  sub_18C92CF10((uint64_t)&v4);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
}

id ChannelLinkRequestParametersBuilder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ChannelLinkRequestParametersBuilder.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChannelLinkRequestParametersBuilder();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ChannelLinkRequestParametersBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChannelLinkRequestParametersBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChannelLinkRequestParametersBuilder()
{
  return objc_opt_self();
}

uint64_t sub_18C9532D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_18C95332C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (void *)v0[7];
  v8 = (void *)v0[8];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_18C9063C0;
  return ((uint64_t (*)(int, int, int, uint64_t, uint64_t, void *, void *))((char *)&dword_1EE055B20
                                                                                  + dword_1EE055B20))(v2, v3, v4, v5, v6, v7, v8);
}

void sub_18C9533CC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for AccountCachedServerData.AccountData(0);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)*v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9610);
  OUTLINED_FUNCTION_19_14();
  v48 = a2;
  v8 = OUTLINED_FUNCTION_16_11();
  if (v7[2])
  {
    v44 = v2;
    OUTLINED_FUNCTION_3_21();
    v46 = v11;
    if (v9 < 64)
      v12 = ~(-1 << v9);
    else
      v12 = -1;
    v13 = v12 & v10;
    v45 = (unint64_t)(v9 + 63) >> 6;
    v14 = v8 + 64;
    OUTLINED_FUNCTION_25_10();
    v15 = 0;
    if (!v13)
      goto LABEL_7;
LABEL_6:
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (i = v16 | (v15 << 6); ; i = v22 + (v15 << 6))
    {
      v23 = v7[7];
      v24 = v7;
      v25 = (uint64_t *)(v7[6] + 24 * i);
      v27 = *v25;
      v26 = v25[1];
      v28 = v25[2];
      v29 = *(_QWORD *)(v47 + 72);
      v30 = v23 + v29 * i;
      if ((v48 & 1) != 0)
      {
        sub_18C905E8C(v30, v49);
      }
      else
      {
        sub_18C905E48(v30, v49);
        swift_bridgeObjectRetain();
      }
      sub_18CEC211C();
      swift_bridgeObjectRetain();
      sub_18CEC1888();
      swift_bridgeObjectRelease();
      sub_18CEC2140();
      v31 = sub_18CEC214C() & ~(-1 << *(_BYTE *)(v8 + 32));
      if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_7_13();
        while (++v33 != v34 || (v32 & 1) == 0)
        {
          v35 = v33 == v34;
          if (v33 == v34)
            v33 = 0;
          v32 |= v35;
          if (*(_QWORD *)(v14 + 8 * v33) != -1)
          {
            OUTLINED_FUNCTION_6_15();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_13();
LABEL_31:
      OUTLINED_FUNCTION_5_14();
      *(_QWORD *)(v14 + v36) |= v37;
      v39 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 24 * v38);
      *v39 = v27;
      v39[1] = v26;
      v39[2] = v28;
      sub_18C905E8C(v49, *(_QWORD *)(v8 + 56) + v29 * v38);
      OUTLINED_FUNCTION_18_12();
      v7 = v24;
      if (v13)
        goto LABEL_6;
LABEL_7:
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v18 >= v45)
        goto LABEL_33;
      ++v15;
      if (!v46[v18])
      {
        v15 = v18 + 1;
        if (v18 + 1 >= v45)
          goto LABEL_33;
        if (!v46[v15])
        {
          v19 = v18 + 2;
          if (v19 >= v45)
          {
LABEL_33:
            OUTLINED_FUNCTION_242();
            v3 = v44;
            if ((v48 & 1) != 0)
            {
              OUTLINED_FUNCTION_10_17();
              if (v41 != v42)
                *v46 = -1 << v40;
              else
                sub_18C8FD834(0, (unint64_t)(v40 + 63) >> 6, v46);
              v7[2] = 0;
            }
            break;
          }
          if (!v46[v19])
          {
            while (1)
            {
              v15 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_41;
              if (v15 >= v45)
                goto LABEL_33;
              ++v19;
              if (v46[v15])
                goto LABEL_18;
            }
          }
          v15 = v19;
        }
      }
LABEL_18:
      OUTLINED_FUNCTION_20_10();
      v13 = v21 & v20;
    }
  }
  OUTLINED_FUNCTION_242();
  *v3 = v8;
}

void sub_18C9536DC()
{
  uint64_t *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t *v35;
  _QWORD *v36;
  char v37;
  __int128 v38;

  OUTLINED_FUNCTION_13_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055260);
  OUTLINED_FUNCTION_19_14();
  v37 = v2;
  v3 = OUTLINED_FUNCTION_16_11();
  if (!v1[2])
    goto LABEL_39;
  OUTLINED_FUNCTION_3_21();
  v35 = v0;
  v36 = v6;
  if (v4 < 64)
    v7 = ~(-1 << v4);
  else
    v7 = -1;
  v8 = v7 & v5;
  v9 = (unint64_t)(v4 + 63) >> 6;
  v10 = v3 + 64;
  OUTLINED_FUNCTION_25_10();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = v19 + (v11 << 6))
  {
    v20 = (uint64_t *)(v1[6] + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v38 = *(_OWORD *)(v1[7] + 16 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_18CEC211C();
    sub_18CEC1888();
    v23 = sub_18CEC214C() & ~(-1 << *(_BYTE *)(v3 + 32));
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_7_13();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        v27 = v25 == v26;
        if (v25 == v26)
          v25 = 0;
        v24 |= v27;
        if (*(_QWORD *)(v10 + 8 * v25) != -1)
        {
          OUTLINED_FUNCTION_6_15();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_8_13();
LABEL_30:
    OUTLINED_FUNCTION_5_14();
    *(_QWORD *)(v10 + v28) |= v29;
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v30);
    *v31 = v22;
    v31[1] = v21;
    *(_OWORD *)(*(_QWORD *)(v3 + 56) + 16 * v30) = v38;
    OUTLINED_FUNCTION_18_12();
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_41;
    if (v14 >= v9)
    {
      OUTLINED_FUNCTION_242();
      v0 = v35;
      v15 = v36;
      goto LABEL_34;
    }
    v15 = v36;
    ++v11;
    if (!v36[v14])
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v9)
        goto LABEL_32;
      if (!v36[v11])
        break;
    }
LABEL_18:
    OUTLINED_FUNCTION_20_10();
    v8 = v18 & v17;
  }
  v16 = v14 + 2;
  if (v16 < v9)
  {
    if (!v36[v16])
    {
      while (1)
      {
        v11 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_42;
        if (v11 >= v9)
          goto LABEL_32;
        ++v16;
        if (v36[v11])
          goto LABEL_18;
      }
    }
    v11 = v16;
    goto LABEL_18;
  }
LABEL_32:
  OUTLINED_FUNCTION_242();
  v0 = v35;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_17();
    if (v33 != v34)
      *v15 = -1 << v32;
    else
      OUTLINED_FUNCTION_15_12(v32);
    v1[2] = 0;
  }
LABEL_39:
  OUTLINED_FUNCTION_242();
  *v0 = v3;
}

uint64_t sub_18C953930(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CA8);
  v6 = sub_18CEC1ED0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_18C872D90(v22, v35);
      }
      else
      {
        sub_18C872C64((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_18CEC211C();
      sub_18CEC1888();
      result = sub_18CEC214C();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v26);
      *v31 = v21;
      v31[1] = v20;
      result = (uint64_t)sub_18C872D90(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v26));
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v33)
        goto LABEL_33;
      v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v33)
          goto LABEL_33;
        v17 = v34[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((a2 & 1) != 0)
            {
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                sub_18C8FD834(0, (unint64_t)(v32 + 63) >> 6, v34);
              else
                *v34 = -1 << v32;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v33)
                goto LABEL_33;
              v17 = v34[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18C953C28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _OWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_18C953EB0(a1, a2, a3, &v29);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18C953EEC(&v27);
  v7 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_18C91C710();
    return swift_release();
  }
  while (1)
  {
    v8 = v27;
    sub_18C872D90(&v28, v26);
    v9 = *a5;
    v11 = sub_18C86ECD4();
    v12 = *(_QWORD *)(v9 + 16);
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (*(_QWORD *)(v9 + 24) >= v14)
    {
      if ((a4 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
        sub_18CEC1E64();
        if ((v15 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_18C953930(v14, a4 & 1);
      v16 = sub_18C86ECD4();
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_17;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_9:
        sub_18C872C64((uint64_t)v26, (uint64_t)v25);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
        swift_bridgeObjectRelease();
        v18 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v11);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        sub_18C872D90(v25, v18);
        goto LABEL_13;
      }
    }
    v19 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v20 = (_QWORD *)(v19[6] + 16 * v11);
    *v20 = v8;
    v20[1] = v7;
    sub_18C872D90(v26, (_OWORD *)(v19[7] + 32 * v11));
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_16;
    v19[2] = v23;
LABEL_13:
    sub_18C953EEC(&v27);
    v7 = *((_QWORD *)&v27 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v27 + 1))
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_18CEC20A4();
  __break(1u);
  return result;
}

uint64_t sub_18C953E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_18C872C64(a4, a1);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_18C953E7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_18C953E40((uint64_t)(a2 + 2), *a1, a1[1], (uint64_t)(a1 + 2));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_18C953EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_18C953EEC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_18C872C64(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v18 < v15)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_18C9540C8((uint64_t)&v23, (uint64_t)v22);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_18C872CA0((uint64_t)v21, &qword_1EE055B08);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_18C9540C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id CodableResponseDecoder.__allocating_init(rootClass:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___AMSCodableResponseDecoder_rootClass] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id CodableResponseDecoder.init(rootClass:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___AMSCodableResponseDecoder_rootClass] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for CodableResponseDecoder();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for CodableResponseDecoder()
{
  return objc_opt_self();
}

void *sub_18C9541E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_18CEC10CC();
  swift_allocObject();
  sub_18CEC10C0();
  v4 = dynamic_cast_existential_2_conditional(*(_QWORD *)(v1 + OBJC_IVAR___AMSCodableResponseDecoder_rootClass));
  if (!v4)
  {
    v11 = (void *)sub_18CEC17F8();
    v12 = (void *)sub_18CEC17F8();
    AMSError(2, v11, v12, 0);

    swift_willThrow();
LABEL_6:
    swift_release();
    return a1;
  }
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(a1, sel_data);
  sub_18CEC1450();

  v22 = v7;
  v23 = v8;
  v24 = v9;
  __swift_allocate_boxed_opaque_existential_0(v21);
  sub_18CEC10B4();
  if (!v2)
  {
    OUTLINED_FUNCTION_15_9();
    v13 = v22;
    v14 = __swift_project_boxed_opaque_existential_1(v21, v22);
    v15 = *(_QWORD *)(v13 - 8);
    MEMORY[0x1E0C80A78](v14);
    v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = sub_18CEC2050();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    objc_msgSend(a1, sel_setObject_, v18);
    swift_unknownObjectRelease();
    v19 = a1;
    goto LABEL_6;
  }
  swift_release();
  OUTLINED_FUNCTION_15_9();
  __swift_deallocate_boxed_opaque_existential_0((uint64_t)v21);
  return a1;
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

id CodableResponseDecoder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CodableResponseDecoder.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CodableResponseDecoder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CodableResponseDecoder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CodableResponseDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CodableResponseDecoder.__allocating_init(rootClass:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CodableResponseDecoder.result(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t sub_18C9545F0@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_18CEC1B34();
  result = __swift_getEnumTagSinglePayload(a1, 1, v4);
  *a2 = (_DWORD)result != 1;
  return result;
}

id Concurrency.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Concurrency.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Concurrency();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Concurrency.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Concurrency();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C9546E4()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for Concurrency()
{
  return objc_opt_self();
}

void ContiguousActionPerformer.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  ContiguousActionPerformer.init(queue:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C954740()
{
  return OUTLINED_FUNCTION_3_22();
}

uint64_t sub_18C95474C(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  Swift::String v26;
  os_log_type_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[32];
  __int128 v42;
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v4 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_18CF073C0;
  *((_QWORD *)&v43 + 1) = type metadata accessor for ContiguousActionPerformer();
  *(_QWORD *)&v42 = a1;
  v6 = a1;
  v7 = v4;
  v8 = AMSLogKey();
  if (v8)
  {
    v9 = v8;
    sub_18CEC181C();
    v11 = v10;

  }
  else
  {
    v11 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18CF07380;
  sub_18C872C64((uint64_t)&v42, (uint64_t)&v39);
  swift_bridgeObjectRetain();
  sub_18C87AF5C((uint64_t)&v39, v11, v12 + 32);
  *(_QWORD *)(v5 + 32) = v12;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
  sub_18C872FF8();
  v47 = v13;
  v14._object = (void *)0x800000018CEE5180;
  v14._countAndFlagsBits = 0xD000000000000034;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v14);
  v15 = AMSHashIfNeeded(a2);
  v16 = MEMORY[0x1E0DEA968];
  if (v15)
  {
    v17 = v15;
    v18 = sub_18CEC181C();
    v20 = v19;

    *((_QWORD *)&v46 + 1) = v16;
    *(_QWORD *)&v45 = v18;
    *((_QWORD *)&v45 + 1) = v20;
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  sub_18C872D48((uint64_t)&v45, (uint64_t)v41);
  v39 = 0u;
  v40 = 0u;
  sub_18C872148((uint64_t)v41, (uint64_t)&v39);
  v44 = 3;
  v42 = v39;
  v43 = v40;
  v21 = v47;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v21 = v37;
  }
  v22 = *(_QWORD *)(v21 + 16);
  if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
  {
    sub_18C872FF8();
    v21 = v38;
  }
  *(_QWORD *)(v21 + 16) = v22 + 1;
  v23 = v21 + 40 * v22;
  v24 = v42;
  v25 = v43;
  *(_BYTE *)(v23 + 64) = v44;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = v25;
  v47 = v21;
  sub_18C87B358((uint64_t)&v45);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v26);
  *(_QWORD *)(v5 + 40) = v47;
  v27 = sub_18CEC1B70();
  if (os_log_type_enabled(v7, v27))
  {
    v28 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v29 = byte_1ECEA9E18;
    v30 = swift_allocObject();
    *(_BYTE *)(v30 + 16) = v29;
    *(_QWORD *)&v42 = v5;
    *((_QWORD *)&v42 + 1) = sub_18C84C6D8;
    *(_QWORD *)&v43 = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v31 = sub_18CEC17C8();
    v33 = v32;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v28);
    v34 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v35 + 56) = v16;
    *(_QWORD *)(v35 + 64) = sub_18C872FBC();
    *(_QWORD *)(v35 + 32) = v31;
    *(_QWORD *)(v35 + 40) = v33;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v34);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return swift_bridgeObjectRelease();
}

id ContiguousActionPerformer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ContiguousActionPerformer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for ContiguousActionPerformer()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContiguousActionPerformer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContiguousActionPerformer.__allocating_init(queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeWithCopy for ContiguousActionPerformer.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContiguousActionPerformer.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ContiguousActionPerformer.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContiguousActionPerformer.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContiguousActionPerformer.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_18C954D60()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18C954D84()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18C954DB0()
{
  uint64_t v0;

  return sub_18C95474C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18C954DB8()
{
  return OUTLINED_FUNCTION_3_22();
}

uint64_t sub_18C954DC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C954DE8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C954E14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Date.init(millisecondsFrom1970:)()
{
  sub_18CEC1498();
  return sub_18CEC1474();
}

uint64_t static Date.utcGregorianDate(year:month:day:hour:minute:second:millisecond:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055BB8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_192();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055BC0);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_192();
  v14 = v13 - v12;
  v31 = sub_18CEC124C();
  v15 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_192();
  v18 = v17 - v16;
  v19 = sub_18CEC1510();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_192();
  v23 = v22 - v21;
  v24 = sub_18CEC1534();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_192();
  v28 = v27 - v26;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0CB0EF8], v19);
  sub_18CEC151C();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v19);
  OUTLINED_FUNCTION_1_14(v14, 1);
  v29 = sub_18CEC154C();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v29);
  sub_18CEC1228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v14, v28, v24);
  OUTLINED_FUNCTION_1_14(v14, 0);
  sub_18CEC1234();
  sub_18CEC1540();
  sub_18CEC1240();
  sub_18CEC11F8();
  sub_18CEC1204();
  sub_18CEC11E0();
  sub_18CEC11EC();
  sub_18CEC1210();
  result = sub_18CEC121C();
  if ((unsigned __int128)(a7 * (__int128)1000) >> 64 == (1000 * a7) >> 63)
  {
    result = 1000000 * a7;
    if ((unsigned __int128)(1000 * a7 * (__int128)1000) >> 64 == (1000000 * a7) >> 63)
    {
      sub_18CEC11D4();
      sub_18CEC1528();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v31);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v28, v24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of static Defaults.autoSyncDisabledForAccountData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static Defaults.autoSyncDisabledForAccountData.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static Defaults.autoSyncDisabledForAccountData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t static DeviceDetails.deviceUnlockedSinceBoot()()
{
  unsigned int v0;
  unsigned int v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ams_deviceUnlockedSinceBoot);
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

ValueMetadata *type metadata accessor for DeviceDetails()
{
  return &type metadata for DeviceDetails;
}

uint64_t dispatch thunk of static DeviceInformation.deviceIsRunningInternalBuild()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static DeviceInformation.deviceUnlockedSinceBoot()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static EngagementDeepLink.makeURL(hint:context:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  Swift::String v83;
  os_log_type_t v84;
  void *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _OWORD v155[2];
  _OWORD v156[2];
  uint64_t v157;
  _QWORD v158[6];

  v8 = 0xD000000000000014;
  *(_QWORD *)&v154 = 0xD000000000000014;
  *((_QWORD *)&v154 + 1) = 0x800000018CEE51C0;
  sub_18CEC18AC();
  if (a3 && *(_QWORD *)(a3 + 16))
  {
    v99 = v154;
    v110 = a4;
    v116 = (uint64_t)a1;
    v120 = a2;
    sub_18C8FBCB4(v158, a3);
    v8 = v158[0];
    a2 = v158[3];
    v9 = v158[4];
    v128 = v158[1];
    v132 = (unint64_t)(v158[2] + 64) >> 6;
    a1 = &v148;
    v136 = &v152;
    v124 = a3;
    OUTLINED_FUNCTION_263();
    if (!v9)
      goto LABEL_5;
LABEL_4:
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (a2 << 6);
    while (1)
    {
      v16 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_18C872C64(*(_QWORD *)(v8 + 56) + 32 * v11, (uint64_t)v155);
      *(_QWORD *)&v154 = v18;
      *((_QWORD *)&v154 + 1) = v17;
      v151 = v154;
      v152 = v155[0];
      v153 = v155[1];
      sub_18C872C64((uint64_t)&v152, (uint64_t)&v148);
      sub_18C872D90(&v148, v156);
      *(_QWORD *)&v147 = 0;
      *((_QWORD *)&v147 + 1) = 0xE000000000000000;
      OUTLINED_FUNCTION_35();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_14_12();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_163();
      sub_18CEC18AC();
      OUTLINED_FUNCTION_96();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_14_12();
      OUTLINED_FUNCTION_96();
      sub_18CEC1E1C();
      a3 = 0xE000000000000000;
      OUTLINED_FUNCTION_163();
      sub_18CEC18AC();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_155();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v156);
      sub_18C872CA0((uint64_t)&v151, &qword_1EE055B08);
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_4;
LABEL_5:
      v12 = a2 + 1;
      if (__OFADD__(a2, 1))
        break;
      if (v12 >= v132)
        goto LABEL_23;
      v13 = *(_QWORD *)(v128 + 8 * v12);
      v14 = a2 + 1;
      if (!v13)
      {
        v14 = a2 + 2;
        if (a2 + 2 >= v132)
          goto LABEL_23;
        v13 = *(_QWORD *)(v128 + 8 * v14);
        if (!v13)
        {
          v14 = a2 + 3;
          if (a2 + 3 >= v132)
            goto LABEL_23;
          v13 = *(_QWORD *)(v128 + 8 * v14);
          if (!v13)
          {
            v14 = a2 + 4;
            if (a2 + 4 >= v132)
              goto LABEL_23;
            v13 = *(_QWORD *)(v128 + 8 * v14);
            if (!v13)
            {
              v14 = a2 + 5;
              if (a2 + 5 >= v132)
                goto LABEL_23;
              v13 = *(_QWORD *)(v128 + 8 * v14);
              if (!v13)
              {
                v15 = a2 + 6;
                while (v15 < v132)
                {
                  v13 = *(_QWORD *)(v128 + 8 * v15++);
                  if (v13)
                  {
                    v14 = v15 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_23:
                swift_release();
                v154 = v99;
                swift_bridgeObjectRetain();
                sub_18CEC18AC();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a2 = v120;
                a3 = v124;
                a1 = (__int128 *)v116;
                v8 = 0xD000000000000014;
                goto LABEL_24;
              }
            }
          }
        }
      }
LABEL_20:
      v9 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
      a2 = v14;
    }
    __break(1u);
LABEL_45:
    swift_once();
    goto LABEL_26;
  }
LABEL_24:
  sub_18CEC13FC();
  OUTLINED_FUNCTION_17();
  v19 = sub_18CEC142C();
  result = __swift_getEnumTagSinglePayload(a4, 1, v19);
  if ((_DWORD)result != 1)
    return result;
  if (qword_1EE054458 != -1)
    goto LABEL_45;
LABEL_26:
  v21 = (void *)qword_1EE054450;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v22 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v22 + 16) = xmmword_18CF073C0;
  v23 = v21;
  v24 = AMSSetLogKeyIfNeeded();
  sub_18CEC181C();
  v26 = v25;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v27 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v27 + 16) = xmmword_18CF07380;
  *(_QWORD *)&v154 = v8 + 1;
  *((_QWORD *)&v154 + 1) = 0x800000018CEE51E0;
  OUTLINED_FUNCTION_163();
  sub_18CEC18AC();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_14_12();
  v28 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v152 + 1) = MEMORY[0x1E0DEA968];
  v151 = v154;
  v154 = 0u;
  v155[0] = 0u;
  sub_18C872148((uint64_t)&v151, (uint64_t)&v154);
  *(_BYTE *)(v27 + 64) = 0;
  v29 = v155[0];
  *(_OWORD *)(v27 + 32) = v154;
  *(_OWORD *)(v27 + 48) = v29;
  *(_QWORD *)(v22 + 32) = v27;
  OUTLINED_FUNCTION_96();
  sub_18C872FF8();
  v157 = v30;
  v31._countAndFlagsBits = 0xD000000000000024;
  v31._object = (void *)0x800000018CEE5200;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v31);
  *((_QWORD *)&v148 + 1) = v28;
  OUTLINED_FUNCTION_13_13(v32, v33, v34, v35, v36, v37, v38, v39, v93, v99, *((uint64_t *)&v99 + 1), v110);
  v151 = 0u;
  v152 = 0u;
  v40 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_10_18(v40, v41, v42, v43, v44, v45, v46, v47, v94, v100, v105, v111, v116, v120, v124, v128, v132, (uint64_t)v136, 1,
    2,
    (uint64_t)a1,
    a2,
    v148,
    *((uint64_t *)&v148 + 1),
    v149,
    v150,
    v151);
  v48 = OUTLINED_FUNCTION_2_19();
  if ((v48 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_14();
    v26 = v48;
  }
  if (*(_QWORD *)(v26 + 16) >= *(_QWORD *)(v26 + 24) >> 1)
  {
    OUTLINED_FUNCTION_0_14();
    v26 = v48;
  }
  OUTLINED_FUNCTION_1_15(v48, v49, v50, v51, v52, v53, v54, v55, v95, v101, v106, v112, v117, v121, v125, v129, v133, v137, v140,
    v144,
    v147,
    *((uint64_t *)&v147 + 1),
    v148,
    *((uint64_t *)&v148 + 1),
    v149,
    v150,
    v151,
    *((uint64_t *)&v151 + 1),
    v152,
    *((uint64_t *)&v152 + 1),
    v153,
    *((uint64_t *)&v153 + 1),
    v56,
    v154,
    v155[0]);
  sub_18C872CA0((uint64_t)&v147, (uint64_t *)&unk_1ECEAA5F0);
  v57._countAndFlagsBits = 0x7865746E6F63202CLL;
  v57._object = (void *)0xEB00000000203A74;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v57);
  if (a3)
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
    *((_QWORD *)&v148 + 1) = v58;
    *(_QWORD *)&v147 = a3;
  }
  else
  {
    v147 = 0u;
    v148 = 0u;
  }
  OUTLINED_FUNCTION_13_13(v58, v59, v60, v61, v62, v63, v64, v65, v96, v102, v107, v113);
  v151 = 0u;
  v152 = 0u;
  v66 = OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_10_18(v66, v67, v68, v69, v70, v71, v72, v73, v97, v103, v108, v114, v118, v122, v126, v130, v134, v138, v141,
    v145,
    v147,
    *((uint64_t *)&v147 + 1),
    v148,
    *((uint64_t *)&v148 + 1),
    v149,
    v150,
    v151);
  v74 = OUTLINED_FUNCTION_2_19();
  if ((v74 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_14();
    v26 = v74;
  }
  if (*(_QWORD *)(v26 + 16) >= *(_QWORD *)(v26 + 24) >> 1)
    OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_1_15(v74, v75, v76, v77, v78, v79, v80, v81, v98, v104, v109, v115, v119, v123, v127, v131, v135, v139, v142,
    v146,
    v147,
    *((uint64_t *)&v147 + 1),
    v148,
    *((uint64_t *)&v148 + 1),
    v149,
    v150,
    v151,
    *((uint64_t *)&v151 + 1),
    v152,
    *((uint64_t *)&v152 + 1),
    v153,
    *((uint64_t *)&v153 + 1),
    v82,
    v154,
    v155[0]);
  sub_18C872CA0((uint64_t)&v147, (uint64_t *)&unk_1ECEAA5F0);
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v83);
  *(_QWORD *)(v22 + 40) = v157;
  v84 = sub_18CEC1B88();
  if (os_log_type_enabled(v23, v84))
  {
    v85 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v86 = byte_1ECEA9E18;
    v87 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v87 + 16) = v86;
    *(_QWORD *)&v154 = v22;
    *((_QWORD *)&v154 + 1) = sub_18C84C6D8;
    *(_QWORD *)&v155[0] = v87;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v88 = sub_18CEC17C8();
    v90 = v89;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v85);
    v91 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v92 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v92 + 16) = v143;
    *(_QWORD *)(v92 + 56) = v28;
    *(_QWORD *)(v92 + 64) = sub_18C872FBC();
    *(_QWORD *)(v92 + 32) = v88;
    *(_QWORD *)(v92 + 40) = v90;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v91);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return swift_bridgeObjectRelease();
}

uint64_t static EngagementDeepLink.isValidURL(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  sub_18CEC1408();
  if (!v0)
    return 0;
  sub_18C870D04();
  v1 = OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_96();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    OUTLINED_FUNCTION_35();
    v3 = v1 + 40;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      OUTLINED_FUNCTION_263();
      v5 = (_QWORD *)OUTLINED_FUNCTION_9_17();
      if (v5[2] == 2)
      {
        v7 = v5[4];
        v6 = v5[5];
        v8 = v5[6];
        v9 = v5[7];
        OUTLINED_FUNCTION_35();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_155();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v10 = v4;
        }
        else
        {
          sub_18C88BD3C();
          v10 = v13;
        }
        v11 = v10[2];
        if (v11 >= v10[3] >> 1)
        {
          sub_18C88BD3C();
          v10 = v14;
        }
        v10[2] = v11 + 1;
        v4 = v10;
        v12 = &v10[4 * v11];
        v12[4] = v7;
        v12[5] = v6;
        v12[6] = v8;
        v12[7] = v9;
      }
      else
      {
        OUTLINED_FUNCTION_155();
        swift_bridgeObjectRelease();
      }
      v3 += 16;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_17();
  v15 = v4[2];
  if (!v15)
    goto LABEL_43;
  v16 = v4 + 7;
  v17 = v4[2];
  while (1)
  {
    v18 = *(v16 - 1);
    v19 = *v16;
    v20 = *(v16 - 3) == 0x6574756F72 && *(v16 - 2) == 0xE500000000000000;
    if (v20 || (sub_18CEC205C() & 1) != 0)
    {
      v21 = v18 == 0x6567617373656DLL && v19 == 0xE700000000000000;
      if (v21 || (sub_18CEC205C() & 1) != 0)
        break;
    }
    v16 += 4;
    if (!--v17)
      goto LABEL_43;
  }
  v22 = v4[4] == 1953393000 && v4[5] == 0xE400000000000000;
  if (v22 || (result = OUTLINED_FUNCTION_4_16(), (result & 1) != 0))
  {
LABEL_45:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v15 == 1)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    return 0;
  }
  v24 = v4 + 9;
  v25 = 1;
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (*(v24 - 1) == 1953393000 && *v24 == 0xE400000000000000)
      goto LABEL_45;
    result = OUTLINED_FUNCTION_4_16();
    if ((result & 1) != 0)
      goto LABEL_45;
    v24 += 4;
    ++v25;
    if (v26 == v15)
      goto LABEL_43;
  }
  __break(1u);
  return result;
}

uint64_t sub_18C955CEC()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for EngagementDeepLink()
{
  return &type metadata for EngagementDeepLink;
}

uint64_t destroy for EngagementEnqueueAction()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void _s18AppleMediaServices23EngagementEnqueueActionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for EngagementEnqueueAction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EngagementEnqueueAction(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EngagementEnqueueAction()
{
  return &type metadata for EngagementEnqueueAction;
}

uint64_t sub_18C955E10(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_18C955E60(uint64_t a1, uint64_t a2)
{
  return sub_18C955E78(a1, a2, &qword_1EE055C20);
}

uint64_t sub_18C955E6C(uint64_t a1, uint64_t a2)
{
  return sub_18C955E78(a1, a2, &qword_1EE055C18);
}

uint64_t sub_18C955E78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = a2;
  sub_18C93EAD4((uint64_t)&v4, *(_QWORD *)(*(_QWORD *)(a1 + 64) + 40), a3);
  return swift_continuation_throwingResume();
}

uint64_t sub_18C955EB8(uint64_t a1, uint64_t a2)
{
  return sub_18C955E78(a1, a2, &qword_1EE055C10);
}

uint64_t sub_18C955EC4(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_18C955ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch();
}

uint64_t sub_18C955EEC()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), sel_initWithBag_, v0[17]);
  v0[18] = v1;
  v2 = (void *)sub_18CEC175C();
  v3 = objc_msgSend(v1, sel_enqueueData_, v2);
  v0[19] = v3;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_18C955FFC;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_18C9560E0;
  v5[3] = &block_descriptor_11;
  v5[4] = v4;
  objc_msgSend(v3, sel_resultWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_18C955FFC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18C95605C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_18C956098()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C9560E0(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
    return sub_18C955E10(v3, (uint64_t)a3);
  if (a2)
    return sub_18C955EC4(v3, (uint64_t)a2);
  __break(1u);
  return result;
}

uint64_t sub_18C956130(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = v1[1];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v5;
  *v5 = v2;
  v5[1] = sub_18C936F98;
  return sub_18C955ED4(v3, v4);
}

uint64_t sub_18C956184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  sub_18C95638C(a2, (uint64_t)&v17);
  v3 = v18;
  if (!v18)
  {
    sub_18C86752C((uint64_t)&v17, (uint64_t *)&unk_1EE055E70);
    sub_18C928C34();
    v6 = (void *)OUTLINED_FUNCTION_49();
    *v9 = 3;
    goto LABEL_7;
  }
  v4 = v19;
  __swift_project_boxed_opaque_existential_1(&v17, v18);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
  sub_18C928C34();
  v6 = (void *)OUTLINED_FUNCTION_49();
  *v7 = 3;
  if (!v5)
  {
LABEL_7:
    swift_willThrow();
    v10 = v6;
    v11 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1(v11, (uint64_t *)&unk_1EE055E70);
    OUTLINED_FUNCTION_3_23();
    return a1;
  }
  OUTLINED_FUNCTION_3_23();
  swift_unknownObjectRetain();
  sub_18C928F10(a1, &v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    sub_18C86752C((uint64_t)&v17, (uint64_t *)&unk_1ECEAA5F0);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE0552A8);
  v8 = swift_dynamicCast();
  if ((v8 & 1) == 0)
  {
LABEL_9:
    sub_18C9563D4();
    v12 = (void *)OUTLINED_FUNCTION_49();
    swift_willThrow();
    v13 = v12;
    v14 = OUTLINED_FUNCTION_2_20();
    OUTLINED_FUNCTION_1(v14, (uint64_t *)&unk_1EE055E70);
    OUTLINED_FUNCTION_3_23();
    OUTLINED_FUNCTION_2_20();
    return a1;
  }
  a1 = v16;
  OUTLINED_FUNCTION_1(v8, (uint64_t *)&unk_1EE055E70);
  OUTLINED_FUNCTION_2_20();
  return a1;
}

uint64_t sub_18C956364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_18C956184(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_18C95638C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18C9563D4()
{
  unint64_t result;

  result = qword_1EE055BF0;
  if (!qword_1EE055BF0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A548, &type metadata for EngagementEnqueueAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE055BF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EngagementEnqueueAction.PerformError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18C956450 + 4 * asc_18CF0A480[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18C956470 + 4 * byte_18CF0A485[v4]))();
}

_BYTE *sub_18C956450(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18C956470(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18C956478(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18C956480(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18C956488(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18C956490(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EngagementEnqueueAction.PerformError()
{
  return &type metadata for EngagementEnqueueAction.PerformError;
}

unint64_t sub_18C9564B0()
{
  unint64_t result;

  result = qword_1EE055C28;
  if (!qword_1EE055C28)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A520, &type metadata for EngagementEnqueueAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE055C28);
  }
  return result;
}

uint64_t sub_18C9564EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  result = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = a1 + 40;
    do
    {
      v7 = *(id *)(v6 - 8);
      v8 = a2();

      if (v8)
      {
        MEMORY[0x18D78846C]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_18CEC19C0();
        sub_18CEC19D8();
        sub_18CEC19B4();
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_18C9565EC()
{
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_163();
  sub_18CEC1888();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C956660()
{
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  return sub_18CEC214C();
}

uint64_t sub_18C9566EC()
{
  return sub_18C956660();
}

uint64_t sub_18C9566F8()
{
  return sub_18C9565EC();
}

uint64_t sub_18C956704()
{
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35();
  sub_18CEC1888();
  OUTLINED_FUNCTION_17();
  return sub_18CEC214C();
}

uint64_t sub_18C95677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_48_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_163();
  sub_18C958A44(a1, a2, a3, a4, a5);
  swift_endAccess();
  OUTLINED_FUNCTION_96();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C95689C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  swift_getObjectType();
  v11 = (uint64_t *)(v5 + OBJC_IVAR___AMSEngagementMessageCache_cacheInfo);
  OUTLINED_FUNCTION_48_0();
  v12 = *v11;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_5;
  OUTLINED_FUNCTION_163();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_35();
  v13 = sub_18C87DDA8(a2, a3, a4, a5);
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_17();
LABEL_5:
    v16 = 0;
    return v16 & 1;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_17();
  v16 = sub_18C956980(a1, v15);
  return v16 & 1;
}

uint64_t sub_18C956980(void *a1, uint64_t a2)
{
  if (objc_msgSend(a1, sel_presentationAction) == (id)1)
    return (a2 == 1) & ~objc_msgSend(a1, sel_isMessageCached);
  else
    return 0;
}

uint64_t sub_18C956A7C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v4;
  uint64_t result;

  v4 = *a1;
  *(_QWORD *)a3 = *a1;
  result = sub_18C956980(v4, a2);
  *(_BYTE *)(a3 + 8) = result & 1;
  return result;
}

void *sub_18C956ACC(void *a1, char a2, void *a3)
{
  void *v3;
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Swift::String v15;
  id v16;
  os_log_type_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _BYTE v27[32];
  _QWORD v28[3];
  uint64_t v29;

  v3 = a1;
  if ((a2 & 1) != 0)
  {
    if (qword_1EE054458 != -1)
      swift_once();
    v5 = (void *)qword_1EE054450;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_18CF07370;
    v29 = type metadata accessor for EngagementMessageCache();
    v28[0] = a3;
    v7 = a3;
    v8 = v5;
    v9 = AMSLogKey();
    if (v9)
    {
      v10 = v9;
      sub_18CEC181C();
      v12 = v11;

    }
    else
    {
      v12 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_18CF07380;
    sub_18C872C64((uint64_t)v28, (uint64_t)v27);
    swift_bridgeObjectRetain();
    sub_18C87AF5C((uint64_t)v27, v12, v14 + 32);
    *(_QWORD *)(v6 + 32) = v14;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    v15._object = (void *)0x800000018CEE52E0;
    v15._countAndFlagsBits = 0xD000000000000010;
    LogInterpolation.init(stringLiteral:)(v15);
    v29 = sub_18C86EEE0(0, (unint64_t *)&unk_1EE055C48);
    v28[0] = v3;
    v16 = v3;
    static LogInterpolation.safe(_:)();
    sub_18C87B358((uint64_t)v28);
    v17 = sub_18CEC1BA0();
    if (os_log_type_enabled(v8, v17))
    {
      v18 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v19 = byte_1ECEA9E18;
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 16) = v19;
      v28[0] = v6;
      v28[1] = sub_18C84C6D8;
      v28[2] = v20;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v21 = sub_18CEC17C8();
      v23 = v22;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v18);
      v24 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = sub_18C872FBC();
      *(_QWORD *)(v25 + 32) = v21;
      *(_QWORD *)(v25 + 40) = v23;
      swift_bridgeObjectRetain();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v24);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v13 = a1;
  }
  return v3;
}

id EngagementMessageCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EngagementMessageCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementMessageCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_18C956E50(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_18C956E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  size_t v35;
  BOOL v36;
  uint64_t v37;

  OUTLINED_FUNCTION_8_14();
  a25 = v26;
  a26 = v28;
  v29 = *(_QWORD *)(v27 + 16);
  if (!v29)
    goto LABEL_9;
  v30 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0558E8);
  v31 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE054E90) - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v34 = (_QWORD *)swift_allocObject();
  v35 = _swift_stdlib_malloc_size(v34);
  if (v32)
  {
    v36 = v35 - v33 == 0x8000000000000000 && v32 == -1;
    if (!v36)
    {
      v34[2] = v29;
      v34[3] = 2 * ((uint64_t)(v35 - v33) / v32);
      v37 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE054E90) - 8) + 80);
      sub_18C957338(&a10, (uint64_t)v34 + ((v37 + 32) & ~v37), v29, v30);
      OUTLINED_FUNCTION_1_16();
      OUTLINED_FUNCTION_2_21();
      if (!v36)
        __break(1u);
LABEL_9:
      OUTLINED_FUNCTION_0_15();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_18C956F5C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_18CEC1D08();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA180);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v3[2] = v2;
    v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
  }
  OUTLINED_FUNCTION_35();
  v5 = sub_18C957618((uint64_t)&v7, v3 + 4, v2, a1);
  result = sub_18C91C710();
  if (v5 == v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_18C95704C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_placementsMap);
  if (!v1)
    return 0;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE053620);
  v3 = sub_18CEC1774();

  return v3;
}

void *sub_18C9570BC(void *a1, char a2)
{
  uint64_t v2;

  return sub_18C956ACC(a1, a2, *(void **)(v2 + 16));
}

void sub_18C9570C4(uint64_t a1, void *a2)
{
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE053620);
  v3 = (id)sub_18CEC175C();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setPlacementsMap_, v3);

}

uint64_t sub_18C957138(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_messageIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_18CEC181C();

  return v3;
}

uint64_t method lookup function for EngagementMessageCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EngagementMessageCache.add(cachePolicy:placement:serviceType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of EngagementMessageCache.isBlocked(messageRequest:placement:serviceType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of EngagementMessageCache.filter(message:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

_QWORD *assignWithCopy for EngagementMessageCache.PlacementServiceType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for EngagementMessageCache.PlacementServiceType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementMessageCache.PlacementServiceType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagementMessageCache.PlacementServiceType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementMessageCache.PlacementServiceType()
{
  return &type metadata for EngagementMessageCache.PlacementServiceType;
}

uint64_t sub_18C957338(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054E90);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (int64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v34 = a4 + 64;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  if (-v32 < 64)
    v16 = ~(-1 << -(char)v32);
  else
    v16 = -1;
  v17 = v16 & v15;
  if (!a2)
  {
    v18 = 0;
    a3 = 0;
LABEL_38:
    v28 = ~v32;
    v29 = v34;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v31 = a1;
  v18 = 0;
  v19 = 0;
  v33 = (unint64_t)(63 - v32) >> 6;
  v30 = v33 - 1;
  v35 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v18 << 6);
  while (1)
  {
    ++v19;
    v25 = *(_QWORD *)(a4 + 56);
    v26 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v21);
    v27 = type metadata accessor for AccountCachedServerData.ObservationController.State.Observation(0);
    sub_18C957B48(v25 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v21, (uint64_t)v11 + *(int *)(v37 + 48));
    *v11 = v26;
    sub_18C957B8C((uint64_t)v11, (uint64_t)v14);
    result = sub_18C957B8C((uint64_t)v14, a2);
    a3 = v35;
    if (v19 == v35)
      goto LABEL_37;
    a2 += *(_QWORD *)(v36 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v33)
      goto LABEL_32;
    v23 = *(_QWORD *)(v34 + 8 * v22);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v22 << 6);
    v18 = v22;
  }
  v18 += 2;
  if (v22 + 1 >= v33)
  {
    v17 = 0;
    v18 = v22;
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v34 + 8 * v18);
  if (v23)
    goto LABEL_14;
  v24 = v22 + 2;
  if (v22 + 2 >= v33)
    goto LABEL_32;
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v18 = v22 + 3;
  if (v22 + 3 >= v33)
  {
    v17 = 0;
    v18 = v22 + 2;
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v34 + 8 * v18);
  if (v23)
  {
LABEL_14:
    v22 = v18;
    goto LABEL_18;
  }
  v24 = v22 + 4;
  if (v22 + 4 >= v33)
  {
LABEL_32:
    v17 = 0;
LABEL_36:
    a3 = v19;
LABEL_37:
    a1 = v31;
    goto LABEL_38;
  }
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v22 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v33)
    {
      v17 = 0;
      v18 = v30;
      goto LABEL_36;
    }
    v23 = *(_QWORD *)(v34 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18C957618(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;

  v4 = a4;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_18CEC1CFC();
    type metadata accessor for MockAccount();
    sub_18C9578FC();
    result = sub_18CEC1B64();
    v4 = v26;
    v8 = v27;
    v9 = v28;
    v10 = v29;
    v11 = v30;
  }
  else
  {
    v10 = 0;
    v12 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a4 + 56);
  }
  if (!a2)
  {
    v15 = 0;
LABEL_47:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v10;
    v7[4] = v11;
    return v15;
  }
  if (!a3)
  {
    v15 = 0;
    goto LABEL_47;
  }
  if (a3 < 0)
    goto LABEL_49;
  v15 = 0;
  v24 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_18CEC1D20())
        goto LABEL_46;
      type metadata accessor for MockAccount();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v18 = v25;
      result = swift_unknownObjectRelease();
      if (!v25)
        goto LABEL_46;
      goto LABEL_28;
    }
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v10 << 6);
      goto LABEL_27;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v19 >= v24)
    {
      v11 = 0;
      goto LABEL_46;
    }
    v20 = *(_QWORD *)(v8 + 8 * v19);
    if (v20)
      goto LABEL_26;
    v21 = v10 + 2;
    if (v10 + 2 >= v24)
    {
      v11 = 0;
      ++v10;
      goto LABEL_46;
    }
    v20 = *(_QWORD *)(v8 + 8 * v21);
    if (!v20)
    {
      if (v10 + 3 >= v24)
        goto LABEL_43;
      v20 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v20)
      {
        v19 = v10 + 3;
        goto LABEL_26;
      }
      v21 = v10 + 4;
      if (v10 + 4 >= v24)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_46;
      }
      v20 = *(_QWORD *)(v8 + 8 * v21);
      if (!v20)
      {
        v19 = v10 + 5;
        if (v10 + 5 >= v24)
        {
LABEL_43:
          v11 = 0;
          v10 = v21;
          goto LABEL_46;
        }
        v20 = *(_QWORD *)(v8 + 8 * v19);
        if (!v20)
        {
          v22 = v10 + 6;
          while (v22 < v24)
          {
            v20 = *(_QWORD *)(v8 + 8 * v22++);
            if (v20)
            {
              v19 = v22 - 1;
              goto LABEL_26;
            }
          }
          v11 = 0;
          v10 = v24 - 1;
          goto LABEL_46;
        }
        goto LABEL_26;
      }
    }
    v19 = v21;
LABEL_26:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v19 << 6);
    v10 = v19;
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = swift_retain();
    if (!v18)
      goto LABEL_46;
LABEL_28:
    ++v15;
    *a2++ = v18;
    if (v15 == a3)
    {
      v15 = a3;
LABEL_46:
      v9 = v23;
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

unint64_t sub_18C9578FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE055C40;
  if (!qword_1EE055C40)
  {
    v1 = type metadata accessor for MockAccount();
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for MockAccount, v1);
    atomic_store(result, (unint64_t *)&qword_1EE055C40);
  }
  return result;
}

uint64_t sub_18C95793C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18C957B38()
{
  return swift_deallocObject();
}

uint64_t sub_18C957B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountCachedServerData.ObservationController.State.Observation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C957B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id AMSFrameworkError.errorCode.getter()
{
  uint64_t v0;
  _OWORD *v1;
  id v2;
  id v4;
  _BYTE v5[24];
  uint64_t v6;
  _BYTE v7[32];

  v0 = sub_18CEC1150();
  OUTLINED_FUNCTION_24_12();
  sub_18C928F10(v0, v1);
  swift_bridgeObjectRelease();
  sub_18C872D48((uint64_t)v7, (uint64_t)v5);
  if (!v6)
  {
    sub_18C86752C((uint64_t)v5, (uint64_t *)&unk_1ECEAA5F0);
LABEL_5:
    sub_18C8FAA70((uint64_t)v7, (uint64_t)v5);
    if (v6)
    {
      if (OUTLINED_FUNCTION_14_14())
        return v4;
    }
    else
    {
      sub_18C86752C((uint64_t)v5, (uint64_t *)&unk_1ECEAA5F0);
    }
    return 0;
  }
  sub_18C86EEE0(0, (unint64_t *)&qword_1ECEA9410);
  if ((OUTLINED_FUNCTION_14_14() & 1) == 0)
    goto LABEL_5;
  v2 = objc_msgSend(v4, sel_integerValue);

  sub_18C86752C((uint64_t)v7, (uint64_t *)&unk_1ECEAA5F0);
  return v2;
}

uint64_t AMSFrameworkError.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t *v24;
  __int128 v25;
  BOOL v26;
  void *v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  BOOL v49;
  __int128 v50;
  uint64_t v52;
  uint64_t *v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t result;
  _QWORD v69[2];
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __int128 *v85;
  _OWORD *v86;
  uint64_t *v87;
  uint64_t *v88;
  __int128 *v89;
  __int128 v90;
  _BYTE v91[32];
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t ObjectType;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  _OWORD v104[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_18CEC142C();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_18CEC2170();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v69 - v14;
  v16 = (_QWORD *)sub_18CEC178C();
  *((_QWORD *)&v102 + 1) = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v101);
  OUTLINED_FUNCTION_31_8((uint64_t)boxed_opaque_existential_0, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16));
  sub_18CEC2158();
  v18 = (_QWORD *)sub_18CEC2164();
  sub_18C9588C8(v18, &v98);
  swift_release();
  if (!v100)
  {
    sub_18C86752C((uint64_t)&v98, &qword_1EE055308);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return (uint64_t)v16;
  }
  v78 = v9;
  v101 = v98;
  sub_18C872D90(&v99, &v102);
  swift_bridgeObjectRelease();
  sub_18C872D90(&v102, v104);
  sub_18C872C64((uint64_t)v104, (uint64_t)&v101);
  sub_18CEC2158();
  sub_18CEC2164();
  v19 = sub_18CEC1E10();
  swift_release();
  swift_retain();
  OUTLINED_FUNCTION_34_7();
  v77 = v13;
  if (!v103)
  {
LABEL_117:
    swift_release_n();
    v66 = *(void (**)(char *, uint64_t))(v10 + 8);
    v67 = v78;
    v66(v77, v78);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
    v66(v15, v67);
    return (uint64_t)v16;
  }
  v70 = v6;
  v20 = &v99;
  v88 = &v95;
  v89 = &v102;
  v86 = v91;
  v87 = &v93;
  v69[1] = *MEMORY[0x1E0CB3308];
  v71 = *MEMORY[0x1E0CB2D68];
  v72 = *MEMORY[0x1E0CB2D50];
  v73 = *MEMORY[0x1E0CB2F70];
  v21 = *MEMORY[0x1E0CB3388];
  v81 = "MeTraceIDTask";
  v82 = v21;
  v80 = 0x800000018CEE2990;
  v79 = MEMORY[0x1E0DEE9B8] + 8;
  v83 = v19;
  v84 = v15;
  v85 = &v99;
  while (1)
  {
    v22 = v10;
    v23 = v101;
    v98 = v101;
    sub_18C872D90(v89, v20);
    v94 = v23;
    v24 = v88;
    sub_18C872C64((uint64_t)v20, (uint64_t)v88);
    v92 = v23;
    sub_18C872D90(v24, v87);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055310);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055318);
    if ((OUTLINED_FUNCTION_14_14() & 1) != 0)
      break;
    memset(v91, 0, sizeof(v91));
    v90 = 0u;
    sub_18C86752C((uint64_t)&v98, &qword_1EE055310);
    sub_18C86752C((uint64_t)&v90, &qword_1EE055320);
    v10 = v22;
LABEL_109:
    OUTLINED_FUNCTION_34_7();
    if (!v103)
      goto LABEL_117;
  }
  v25 = v90;
  sub_18C872D90(v86, &v97);
  v26 = (_QWORD)v25 == 0x69796C7265646E75 && *((_QWORD *)&v25 + 1) == 0xEF726F727245676ELL;
  v10 = v22;
  if (!v26 && (OUTLINED_FUNCTION_5_16() & 1) == 0)
  {
    if (v25 == __PAIR128__(v80, 0xD000000000000010) || (OUTLINED_FUNCTION_5_16() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_17();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055338);
      if ((OUTLINED_FUNCTION_14_14() & 1) != 0)
      {
        v41 = v92;
        sub_18CEC181C();
        OUTLINED_FUNCTION_30_9();
        *(_QWORD *)&v94 = v41;
        OUTLINED_FUNCTION_7_16();
        OUTLINED_FUNCTION_1_17();
        OUTLINED_FUNCTION_4_17();
        if (v32)
          goto LABEL_122;
        OUTLINED_FUNCTION_23_7();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
        if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
        {
          OUTLINED_FUNCTION_6_17();
          OUTLINED_FUNCTION_15_14();
          if (!v26)
            goto LABEL_134;
        }
        v16 = (_QWORD *)v90;
        if ((v15 & 1) != 0)
        {
          OUTLINED_FUNCTION_3_25();
        }
        else
        {
          OUTLINED_FUNCTION_0_16();
          if (v32)
            goto LABEL_123;
          OUTLINED_FUNCTION_16_12(v45);
        }
        OUTLINED_FUNCTION_44();
        OUTLINED_FUNCTION_30();
        v46 = OUTLINED_FUNCTION_21_9();
        sub_18C86752C(v46, &qword_1EE055310);
        v15 = v84;
        goto LABEL_108;
      }
LABEL_107:
      v63 = OUTLINED_FUNCTION_21_9();
      sub_18C86752C(v63, &qword_1EE055310);
LABEL_108:
      v20 = v85;
      goto LABEL_109;
    }
    if ((_QWORD)v25 == 0x7470697263736564 && *((_QWORD *)&v25 + 1) == 0xEB000000006E6F69)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = OUTLINED_FUNCTION_5_16();
      v44 = MEMORY[0x1E0DEA968];
      if ((v43 & 1) == 0)
      {
        v49 = (_QWORD)v25 == 0x526572756C696166 && *((_QWORD *)&v25 + 1) == 0xED00006E6F736165;
        if (v49 || (OUTLINED_FUNCTION_5_16() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_17();
          if ((OUTLINED_FUNCTION_12_12() & 1) == 0)
            goto LABEL_107;
          v50 = v92;
          sub_18CEC181C();
          ObjectType = v44;
          v94 = v50;
          OUTLINED_FUNCTION_7_16();
          OUTLINED_FUNCTION_1_17();
          OUTLINED_FUNCTION_4_17();
          if (v32)
            goto LABEL_126;
          OUTLINED_FUNCTION_23_7();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
          if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
          {
            OUTLINED_FUNCTION_6_17();
            OUTLINED_FUNCTION_15_14();
            if (!v26)
              goto LABEL_134;
          }
          v16 = (_QWORD *)v90;
          if ((v15 & 1) != 0)
            goto LABEL_75;
          OUTLINED_FUNCTION_0_16();
          if (v32)
            goto LABEL_127;
        }
        else
        {
          if ((_QWORD)v25 != 0x646F43726F727265 || *((_QWORD *)&v25 + 1) != 0xE900000000000065)
          {
            OUTLINED_FUNCTION_24_12();
            if ((OUTLINED_FUNCTION_5_16() & 1) == 0)
            {
              v54 = (_QWORD)v25 == 7107189 && *((_QWORD *)&v25 + 1) == 0xE300000000000000;
              if (v54 || (OUTLINED_FUNCTION_5_16() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_11_17();
                v55 = (uint64_t)v70;
                v56 = v76;
                v57 = OUTLINED_FUNCTION_14_14();
                v20 = v85;
                if (v57)
                {
                  OUTLINED_FUNCTION_28_7(v55, 0);
                  if (__swift_getEnumTagSinglePayload(v55, 1, v56) != 1)
                  {
                    v59 = (uint64_t)v74;
                    v58 = v75;
                    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v74, v55, v56);
                    sub_18CEC181C();
                    OUTLINED_FUNCTION_30_9();
                    v60 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v94);
                    OUTLINED_FUNCTION_31_8((uint64_t)v60, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 16));
                    OUTLINED_FUNCTION_7_16();
                    OUTLINED_FUNCTION_1_17();
                    OUTLINED_FUNCTION_4_17();
                    if (v32)
                      goto LABEL_130;
                    OUTLINED_FUNCTION_23_7();
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
                    if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
                    {
                      OUTLINED_FUNCTION_6_17();
                      OUTLINED_FUNCTION_15_14();
                      if (!v26)
                        goto LABEL_134;
                    }
                    v16 = (_QWORD *)v90;
                    if ((v15 & 1) != 0)
                    {
                      OUTLINED_FUNCTION_3_25();
                    }
                    else
                    {
                      OUTLINED_FUNCTION_0_16();
                      if (v32)
                        goto LABEL_132;
                      OUTLINED_FUNCTION_16_12(v64);
                    }
                    v15 = v84;
                    v20 = v85;
                    OUTLINED_FUNCTION_44();
                    OUTLINED_FUNCTION_30();
                    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
                    goto LABEL_78;
                  }
                }
                else
                {
                  OUTLINED_FUNCTION_28_7(v55, 1);
                }
                v61 = OUTLINED_FUNCTION_21_9();
                sub_18C86752C(v61, &qword_1EE055310);
                v52 = v55;
                v53 = (uint64_t *)&unk_1ECEAA300;
                goto LABEL_79;
              }
              OUTLINED_FUNCTION_11_17();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055328);
              if ((OUTLINED_FUNCTION_14_14() & 1) == 0)
              {
LABEL_106:
                OUTLINED_FUNCTION_44();
                goto LABEL_107;
              }
              v62 = v92;
              ObjectType = swift_getObjectType();
              *(_QWORD *)&v94 = v62;
              OUTLINED_FUNCTION_29_9();
              v69[0] = v62;
              swift_unknownObjectRetain();
              swift_isUniquelyReferenced_nonNull_native();
              OUTLINED_FUNCTION_1_17();
              OUTLINED_FUNCTION_4_17();
              if (v32)
                goto LABEL_131;
              OUTLINED_FUNCTION_23_7();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
              if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
              {
                OUTLINED_FUNCTION_6_17();
                OUTLINED_FUNCTION_15_14();
                if (!v26)
                  goto LABEL_134;
              }
              v16 = (_QWORD *)v90;
              if ((v15 & 1) != 0)
              {
                OUTLINED_FUNCTION_3_25();
              }
              else
              {
                OUTLINED_FUNCTION_0_16();
                if (v32)
                  goto LABEL_133;
                OUTLINED_FUNCTION_16_12(v65);
              }
              v15 = v84;
              v20 = v85;
              swift_unknownObjectRelease();
LABEL_77:
              OUTLINED_FUNCTION_44();
              OUTLINED_FUNCTION_30();
LABEL_78:
              v52 = OUTLINED_FUNCTION_21_9();
              v53 = &qword_1EE055310;
LABEL_79:
              sub_18C86752C(v52, v53);
              goto LABEL_109;
            }
          }
          OUTLINED_FUNCTION_11_17();
          type metadata accessor for Code(0);
          if ((OUTLINED_FUNCTION_14_14() & 1) == 0)
            goto LABEL_106;
          ObjectType = MEMORY[0x1E0DEB418];
          *(_QWORD *)&v94 = v92;
          OUTLINED_FUNCTION_7_16();
          OUTLINED_FUNCTION_1_17();
          OUTLINED_FUNCTION_4_17();
          if (v32)
            goto LABEL_128;
          OUTLINED_FUNCTION_23_7();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
          if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
          {
            OUTLINED_FUNCTION_6_17();
            OUTLINED_FUNCTION_15_14();
            if (!v26)
              goto LABEL_134;
          }
          v16 = (_QWORD *)v90;
          if ((v15 & 1) != 0)
            goto LABEL_75;
          OUTLINED_FUNCTION_0_16();
          if (v32)
            goto LABEL_129;
        }
LABEL_63:
        OUTLINED_FUNCTION_16_12(v48);
LABEL_76:
        v15 = v84;
        v20 = v85;
        goto LABEL_77;
      }
      OUTLINED_FUNCTION_44();
    }
    OUTLINED_FUNCTION_11_17();
    if ((OUTLINED_FUNCTION_12_12() & 1) == 0)
      goto LABEL_107;
    v47 = v92;
    sub_18CEC181C();
    OUTLINED_FUNCTION_30_9();
    v94 = v47;
    OUTLINED_FUNCTION_7_16();
    OUTLINED_FUNCTION_1_17();
    OUTLINED_FUNCTION_4_17();
    if (v32)
      goto LABEL_124;
    OUTLINED_FUNCTION_23_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
    {
      OUTLINED_FUNCTION_6_17();
      OUTLINED_FUNCTION_15_14();
      if (!v26)
        goto LABEL_134;
    }
    v16 = (_QWORD *)v90;
    if ((v47 & 1) == 0)
    {
      OUTLINED_FUNCTION_0_16();
      if (v32)
        goto LABEL_125;
      goto LABEL_63;
    }
LABEL_75:
    OUTLINED_FUNCTION_3_25();
    goto LABEL_76;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_17();
  sub_18C86EEE0(0, (unint64_t *)&qword_1ECEA9B20);
  if ((OUTLINED_FUNCTION_12_12() & 1) == 0)
    goto LABEL_107;
  v27 = (void *)v92;
  v28 = sub_18CEC181C();
  OUTLINED_FUNCTION_30_9();
  *(_QWORD *)&v94 = v27;
  OUTLINED_FUNCTION_29_9();
  v29 = v27;
  swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v16;
  sub_18C86ECD4();
  OUTLINED_FUNCTION_4_17();
  if (!v32)
  {
    v33 = v30;
    v34 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    if ((OUTLINED_FUNCTION_2_22() & 1) != 0)
    {
      v35 = sub_18C86ECD4();
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_134;
      v33 = v35;
    }
    v16 = (_QWORD *)v90;
    if ((v34 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_25();
    }
    else
    {
      *(_QWORD *)(v90 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      v37 = (uint64_t *)(v16[6] + 16 * v33);
      *v37 = v28;
      v37[1] = *((_QWORD *)&v25 + 1);
      sub_18C872D90(&v92, (_OWORD *)(v16[7] + 32 * v33));
      v38 = v16[2];
      v32 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v32)
        goto LABEL_121;
      OUTLINED_FUNCTION_16_12(v39);
    }

    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_30();
    v40 = OUTLINED_FUNCTION_21_9();
    sub_18C86752C(v40, &qword_1EE055310);
    v10 = v22;
    v15 = v84;
    goto LABEL_108;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  result = sub_18CEC20A4();
  __break(1u);
  return result;
}

uint64_t sub_18C9588C8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  LOBYTE(v6) = MEMORY[0x18D788CA0](v3, v4, v5, v6);
  swift_unknownObjectRelease();
  if ((v6 & 1) != 0)
  {
    result = swift_unknownObjectRelease();
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  else
  {
    sub_18CEC1E4C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t static AMSFrameworkError.errorDomain.getter()
{
  return sub_18CEC181C();
}

uint64_t sub_18C958980()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_20_11();
  v0 = (_OWORD *)OUTLINED_FUNCTION_19_15();
  v3 = sub_18C958B14(v0, v1, v2);
  OUTLINED_FUNCTION_13_14((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return OUTLINED_FUNCTION_8_1();
}

uint64_t sub_18C9589C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_27_9();
  sub_18C958C24(a1, a2, a3, a4);
  OUTLINED_FUNCTION_13_14(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18);
  return OUTLINED_FUNCTION_8_1();
}

uint64_t sub_18C958A18()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17_11();
  v0 = (_OWORD *)OUTLINED_FUNCTION_9_18();
  v2 = sub_18C958D6C(v0, v1);
  OUTLINED_FUNCTION_13_14((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_10_19();
}

uint64_t sub_18C958A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18C958A50(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_18C958FF4);
}

uint64_t sub_18C958A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v6;
  uint64_t v14;

  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_27_9();
  a6(a1, a2, a3, a4, a5);
  *v6 = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C958AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_20_11();
  v0 = OUTLINED_FUNCTION_19_15();
  v3 = sub_18C959134(v0, v1, v2);
  OUTLINED_FUNCTION_13_14(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return OUTLINED_FUNCTION_8_1();
}

_OWORD *sub_18C958B14(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *result;

  sub_18C86ECD4();
  OUTLINED_FUNCTION_45_0();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
  if ((sub_18CEC1E58() & 1) == 0)
    goto LABEL_5;
  v12 = sub_18C86ECD4();
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_18CEC20A4();
    __break(1u);
    return result;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = (_OWORD *)(*(_QWORD *)(v14 + 56) + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    return sub_18C872D90(a1, v15);
  }
  else
  {
    sub_18C959238(v10, a2, a3, (uint64_t)a1, v14);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

void sub_18C958C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_18C8FABB8(a2, a3, a4);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054EE8);
  if ((sub_18CEC1E58() & 1) == 0)
    goto LABEL_5;
  v15 = sub_18C8FABB8(a2, a3, a4);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_18CEC20A4();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    v19 = type metadata accessor for AccountCachedServerData.AccountData(0);
    sub_18C95946C(a1, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, type metadata accessor for AccountCachedServerData.AccountData);
  }
  else
  {
    sub_18C959278(v13, a2, a3, a4, a1, v17);
    swift_bridgeObjectRetain();
  }
}

_OWORD *sub_18C958D6C(_OWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  _OWORD *v18;
  _OWORD *result;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = sub_18CEC1E40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  v11 = sub_18C92A6E0(a2);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055C68);
  if ((sub_18CEC1E58() & 1) == 0)
    goto LABEL_5;
  v15 = sub_18C92A6E0(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_18CEC20A4();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = (_OWORD *)(v17[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    return sub_18C872D90(a1, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    return sub_18C959338(v13, (uint64_t)v9, a1, v17);
  }
}

uint64_t sub_18C958ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD **v4;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t result;

  sub_18C86ECD4();
  OUTLINED_FUNCTION_45_0();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055C60);
  if ((sub_18CEC1E58() & 1) == 0)
    goto LABEL_5;
  v14 = sub_18C86ECD4();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    result = sub_18CEC20A4();
    __break(1u);
    return result;
  }
  v12 = v14;
LABEL_5:
  v16 = *v4;
  if ((v13 & 1) != 0)
  {
    v17 = (uint64_t *)(v16[7] + 16 * v12);
    result = swift_bridgeObjectRelease();
    *v17 = a1;
    v17[1] = a2;
  }
  else
  {
    sub_18C9593D8(v12, a3, a4, a1, a2, v16);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_18C958FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  char v18;
  _QWORD *v19;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v13 = sub_18C87DDA8(a2, a3, a4, a5);
  if (__OFADD__(v12[2], (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v13;
  v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055C58);
  result = sub_18CEC1E58();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_18C87DDA8(a2, a3, a4, a5);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_9:
    result = sub_18CEC20A4();
    __break(1u);
    return result;
  }
  v15 = result;
LABEL_5:
  v19 = *v6;
  if ((v16 & 1) != 0)
  {
    *(_QWORD *)(v19[7] + 8 * v15) = a1;
  }
  else
  {
    sub_18C87DDAC(v15, a2, a3, a4, a5, a1, v19);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_18C959134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_18C92A7C4();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA008);
  result = sub_18CEC1E58();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_18C92A7C4();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_18CEC20A4();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) == 0)
    return sub_18C959424(v11, a2, a3, a1, v15);
  *(_QWORD *)(v15[7] + 8 * v11) = a1;
  return result;
}

_OWORD *sub_18C959238(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v6 = OUTLINED_FUNCTION_18_13(a1, a2, a3, a4, a5);
  result = sub_18C872D90(v8, (_OWORD *)(v7 + 32 * v6));
  v10 = *(_QWORD *)(a5 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(a5 + 16) = v12;
  return result;
}

void sub_18C959278(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a6[6] + 24 * a1);
  *v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v10 = a6[7];
  v11 = type metadata accessor for AccountCachedServerData.AccountData(0);
  sub_18C8B9458(a5, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for AccountCachedServerData.AccountData);
  v12 = a6[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a6[2] = v14;
}

unint64_t sub_18C959310(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = OUTLINED_FUNCTION_18_13(a1, a2, a3, a4, a5);
  *(_QWORD *)(v8 + 8 * result) = v7;
  v9 = *(_QWORD *)(v6 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v11;
  return result;
}

_OWORD *sub_18C959338(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_18CEC1E40();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_18C872D90(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_18C9593D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_18C959424(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_18C95946C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_245(a1, a2, a3);
  OUTLINED_FUNCTION_162(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C959498()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix);
}

uint64_t sub_18C9594A4(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix);
}

void sub_18C9594B0()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C9594EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_18C95952C()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork);
}

uint64_t sub_18C959538(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork);
}

void sub_18C959544()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C959580()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber);
}

uint64_t sub_18C95958C(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber);
}

void sub_18C959598()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C9595D4()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier);
}

uint64_t sub_18C9595E0(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier);
}

void sub_18C9595EC()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C959628()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_applePayBrandName);
}

uint64_t sub_18C959634(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  OUTLINED_FUNCTION_48_0();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_18C959680(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_applePayBrandName);
}

uint64_t sub_18C95968C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  OUTLINED_FUNCTION_48_0();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_18C9596E0()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95971C()
{
  unint64_t v0;

  v0 = sub_18CEC1F18();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_18C959768()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_25_11();
  return ((uint64_t (*)(uint64_t))((char *)j__OUTLINED_FUNCTION_6_18 + 4 * byte_18CF0A670[v1]))(v0);
}

unint64_t sub_18C959790()
{
  return OUTLINED_FUNCTION_14_15();
}

unint64_t sub_18C95979C()
{
  return 0xD000000000000012;
}

uint64_t sub_18C9597D4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_25_11();
  return ((uint64_t (*)(uint64_t))((char *)j__OUTLINED_FUNCTION_6_18_0 + 4 * byte_18CF0A675[v1]))(v0);
}

unint64_t sub_18C9597FC()
{
  return OUTLINED_FUNCTION_14_15();
}

unint64_t sub_18C959808()
{
  return 0xD000000000000012;
}

void sub_18C959840(char *a1)
{
  sub_18C91CB60(*a1);
}

void sub_18C95984C()
{
  unsigned __int8 *v0;

  sub_18C963E34(*v0);
}

void sub_18C959854(uint64_t a1)
{
  char *v1;

  sub_18C964058(a1, *v1);
}

void sub_18C95985C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_18C96437C(a1, *v1);
}

uint64_t sub_18C959864@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C95971C();
  *a1 = result;
  return result;
}

void sub_18C959890(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_18C959768();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C9598B4()
{
  return sub_18C9597D4();
}

uint64_t sub_18C9598BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C959764();
  *a1 = result;
  return result;
}

void sub_18C9598E0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_18C9598EC()
{
  sub_18C95A240();
  return sub_18CEC21D0();
}

uint64_t sub_18C959914()
{
  sub_18C95A240();
  return sub_18CEC21DC();
}

uint64_t static ExpressCheckoutCard.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18C95994C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v3 = v1 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v3 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v4 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v5 = v1 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v5 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v6 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v7 = v1 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v7 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v8 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v9 = v1 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v9 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v10 = (void *)OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v11 = v1 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_applePayBrandName;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v11 + 8))
  {
    swift_bridgeObjectRetain();
    v12 = sub_18CEC17F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = (void *)OUTLINED_FUNCTION_24_2();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v13);
  swift_unknownObjectRelease();

}

id ExpressCheckoutCard.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutCard.init(coder:)(a1);
}

id ExpressCheckoutCard.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  objc_super v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v2[OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v2[OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_applePayBrandName];
  sub_18C959EDC();
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = v2;
  v10 = (void *)OUTLINED_FUNCTION_17_12();
  if (v10)
  {
    v28 = 0;
    v29 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  swift_bridgeObjectRelease();
  v11 = OUTLINED_FUNCTION_17_12();
  if (v11)
  {
    v12 = (void *)v11;
    v26 = 0;
    v27 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  swift_bridgeObjectRelease();
  v13 = (void *)OUTLINED_FUNCTION_17_12();
  if (v13)
  {
    v24 = 0;
    v25 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  v14 = (void *)OUTLINED_FUNCTION_15_15();
  if (v14)
  {
    v22 = 0;
    v23 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  swift_bridgeObjectRelease();
  v15 = OUTLINED_FUNCTION_15_15();
  if (v15)
  {
    v16 = (void *)v15;
    v20 = 0;
    v21 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;

  swift_bridgeObjectRelease();
  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for ExpressCheckoutCard();
  v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

unint64_t sub_18C959EDC()
{
  unint64_t result;

  result = qword_1EE055CF0;
  if (!qword_1EE055CF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE055CF0);
  }
  return result;
}

uint64_t type metadata accessor for ExpressCheckoutCard()
{
  return objc_opt_self();
}

id ExpressCheckoutCard.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ExpressCheckoutCard.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ExpressCheckoutCard.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpressCheckoutCard();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C95A048(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055CA0);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C95A240();
  sub_18CEC21B8();
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix);
  OUTLINED_FUNCTION_2_23();
  v6 = *v5;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v6)
    goto LABEL_5;
  OUTLINED_FUNCTION_155();
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork);
  OUTLINED_FUNCTION_2_23();
  v8 = *v7;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v8)
    goto LABEL_5;
  OUTLINED_FUNCTION_155();
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber);
  OUTLINED_FUNCTION_2_23();
  v10 = *v9;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v10
    || (OUTLINED_FUNCTION_155(),
        v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier),
        OUTLINED_FUNCTION_2_23(),
        v12 = *v11,
        OUTLINED_FUNCTION_263(),
        OUTLINED_FUNCTION_1_3(),
        v12))
  {
LABEL_5:
    OUTLINED_FUNCTION_21_10();
  }
  else
  {
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_2_23();
    swift_bridgeObjectRetain();
    sub_18CEC1FA8();
    OUTLINED_FUNCTION_21_10();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_18C95A240()
{
  unint64_t result;

  result = qword_1EE055CA8;
  if (!qword_1EE055CA8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A804, &type metadata for ExpressCheckoutCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055CA8);
  }
  return result;
}

unint64_t ExpressCheckoutCard.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutCard.init(from:)(a1);
}

unint64_t ExpressCheckoutCard.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  id v34;
  uint64_t *v35;
  uint64_t *v36;
  objc_super v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t *v43;

  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055CB0);
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_23(OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_fpanSuffix);
  v36 = v4;
  OUTLINED_FUNCTION_23(OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_paymentNetwork);
  v35 = v5;
  OUTLINED_FUNCTION_23(OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passSerialNumber);
  v31 = v6;
  OUTLINED_FUNCTION_23(OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_passTypeIdentifier);
  v43 = v7;
  OUTLINED_FUNCTION_23(OBJC_IVAR____TtC18AppleMediaServices19ExpressCheckoutCard_applePayBrandName);
  v33 = v8;
  v32 = (uint64_t)a1;
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_18C95A240();
  v34 = v1;
  sub_18CEC21A0();
  if (v2)
  {
    v11 = OUTLINED_FUNCTION_11_18();
    __swift_destroy_boxed_opaque_existential_1Tm(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for ExpressCheckoutCard();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v42 = 0;
    v13 = sub_18CEC1F30();
    v15 = v14;
    OUTLINED_FUNCTION_48_0();
    *v36 = v13;
    v36[1] = v15;
    swift_bridgeObjectRelease();
    v41 = 1;
    v16 = OUTLINED_FUNCTION_8_15();
    v18 = v17;
    OUTLINED_FUNCTION_48_0();
    *v35 = v16;
    v35[1] = v18;
    swift_bridgeObjectRelease();
    v40 = 2;
    v19 = OUTLINED_FUNCTION_8_15();
    v21 = v20;
    OUTLINED_FUNCTION_48_0();
    *v31 = v19;
    v31[1] = v21;
    swift_bridgeObjectRelease();
    v39 = 3;
    v22 = OUTLINED_FUNCTION_8_15();
    v29 = v23;
    v24 = v43;
    OUTLINED_FUNCTION_48_0();
    *v24 = v22;
    v24[1] = v29;
    swift_bridgeObjectRelease();
    v38 = 4;
    v25 = OUTLINED_FUNCTION_8_15();
    v27 = v26;
    OUTLINED_FUNCTION_48_0();
    *v33 = v25;
    v33[1] = v27;

    swift_bridgeObjectRelease();
    v28 = (objc_class *)type metadata accessor for ExpressCheckoutCard();
    v37.receiver = v34;
    v37.super_class = v28;
    v10 = (unint64_t)objc_msgSendSuper2(&v37, sel_init);
    OUTLINED_FUNCTION_5_17();
    __swift_destroy_boxed_opaque_existential_1Tm(v32);
  }
  return v10;
}

unint64_t sub_18C95A638@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = ExpressCheckoutCard.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18C95A660(_QWORD *a1)
{
  return sub_18C95A048(a1);
}

void sub_18C95A680()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C959498();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95A6A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C9594A4);
}

void sub_18C95A6BC()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C95952C();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95A6DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C959538);
}

void sub_18C95A6F8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C959580();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95A718(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C95958C);
}

void sub_18C95A734()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C9595D4();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95A754(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C9595E0);
}

void sub_18C95A770()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C959628();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95A790(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C959680);
}

uint64_t method lookup function for ExpressCheckoutCard()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpressCheckoutCard.fpanSuffix.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.fpanSuffix.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.fpanSuffix.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.paymentNetwork.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.paymentNetwork.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.paymentNetwork.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passSerialNumber.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passSerialNumber.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passSerialNumber.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passTypeIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passTypeIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.passTypeIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.applePayBrandName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.applePayBrandName.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.applePayBrandName.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ExpressCheckoutCard.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t storeEnumTagSinglePayload for ExpressCheckoutCard.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_18C95AA10 + 4 * byte_18CF0A67F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_18C95AA44 + 4 * byte_18CF0A67A[v4]))();
}

uint64_t sub_18C95AA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95AA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C95AA54);
  return result;
}

uint64_t sub_18C95AA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C95AA68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_18C95AA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95AA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExpressCheckoutCard.CodingKeys()
{
  return &type metadata for ExpressCheckoutCard.CodingKeys;
}

unint64_t sub_18C95AA94()
{
  unint64_t result;

  result = qword_1EE055CC0;
  if (!qword_1EE055CC0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A7DC, &type metadata for ExpressCheckoutCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055CC0);
  }
  return result;
}

unint64_t sub_18C95AAD4()
{
  unint64_t result;

  result = qword_1EE055CC8;
  if (!qword_1EE055CC8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A714, &type metadata for ExpressCheckoutCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055CC8);
  }
  return result;
}

unint64_t sub_18C95AB14()
{
  unint64_t result;

  result = qword_1EE055CD0;
  if (!qword_1EE055CD0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A73C, &type metadata for ExpressCheckoutCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055CD0);
  }
  return result;
}

uint64_t sub_18C95AB50()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef);
}

uint64_t sub_18C95AB5C(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef);
}

uint64_t (*sub_18C95AB68())()
{
  OUTLINED_FUNCTION_48_0();
  return j_j__swift_endAccess;
}

uint64_t sub_18C95ABA8()
{
  return sub_18C959634(&OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_context);
}

uint64_t sub_18C95ABB4(uint64_t a1, uint64_t a2)
{
  return sub_18C95968C(a1, a2, &OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_context);
}

uint64_t (*sub_18C95ABC0())()
{
  OUTLINED_FUNCTION_48_0();
  return j__swift_endAccess;
}

uint64_t sub_18C95AC00()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_18CEC1F18();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_18C95AC54(char a1)
{
  if ((a1 & 1) != 0)
    return 0x747865746E6F63;
  else
    return 0x655265676150746DLL;
}

void sub_18C95AC90(char *a1, char *a2)
{
  sub_18C91C980(*a1, *a2);
}

void sub_18C95AC9C()
{
  sub_18C963E40();
}

uint64_t sub_18C95ACA4()
{
  return sub_18C963EEC();
}

void sub_18C95ACAC()
{
  sub_18C9644F4();
}

uint64_t sub_18C95ACB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C95AC00();
  *a1 = result;
  return result;
}

void sub_18C95ACE0(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_18C95AC54(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95AD04()
{
  char *v0;

  return sub_18C95AC54(*v0);
}

uint64_t sub_18C95AD0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C95AC50();
  *a1 = result;
  return result;
}

void sub_18C95AD30(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_18C95AD3C()
{
  sub_18C95B330();
  return sub_18CEC21D0();
}

uint64_t sub_18C95AD64()
{
  sub_18C95B330();
  return sub_18CEC21DC();
}

uint64_t static ExpressCheckoutManagePaymentParams.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18C95AD9C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = v1 + OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    v4 = sub_18CEC17F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
  swift_unknownObjectRelease();

  v6 = v1 + OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_context;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v6 + 8))
  {
    swift_bridgeObjectRetain();
    v7 = sub_18CEC17F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

}

id ExpressCheckoutManagePaymentParams.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutManagePaymentParams.init(coder:)(a1);
}

id ExpressCheckoutManagePaymentParams.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v2[OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_context];
  sub_18C959EDC();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = v2;
  v7 = (void *)sub_18CEC1C0C();
  if (v7)
  {
    v15 = 0;
    v16 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  swift_bridgeObjectRelease();
  v8 = sub_18CEC1C0C();
  if (v8)
  {
    v9 = (void *)v8;
    v13 = 0;
    v14 = 0;
    sub_18CEC1810();

  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;

  swift_bridgeObjectRelease();
  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for ExpressCheckoutManagePaymentParams();
  v10 = objc_msgSendSuper2(&v12, sel_init);

  return v10;
}

uint64_t type metadata accessor for ExpressCheckoutManagePaymentParams()
{
  return objc_opt_self();
}

id ExpressCheckoutManagePaymentParams.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ExpressCheckoutManagePaymentParams.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ExpressCheckoutManagePaymentParams.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpressCheckoutManagePaymentParams();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C95B1EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055CF8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_24();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C95B330();
  sub_18CEC21B8();
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef);
  OUTLINED_FUNCTION_2_23();
  v6 = *v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5_18();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_23();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_18();
  }
  OUTLINED_FUNCTION_21_10();
  return swift_bridgeObjectRelease();
}

unint64_t sub_18C95B330()
{
  unint64_t result;

  result = qword_1EE055D00;
  if (!qword_1EE055D00)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A9F4, &type metadata for ExpressCheckoutManagePaymentParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055D00);
  }
  return result;
}

id ExpressCheckoutManagePaymentParams.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutManagePaymentParams.init(from:)(a1);
}

id ExpressCheckoutManagePaymentParams.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  objc_super v16;
  char v17;
  char v18;
  uint64_t v19;

  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055D08);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2_24();
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_mtPageRef];
  *v3 = 0;
  v3[1] = 0;
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC18AppleMediaServices34ExpressCheckoutManagePaymentParams_context];
  *v4 = 0;
  v4[1] = 0;
  v14 = v4;
  v5 = (id)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C95B330();
  v15 = v1;
  sub_18CEC21A0();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for ExpressCheckoutManagePaymentParams();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18 = 0;
    v6 = sub_18CEC1F30();
    v8 = v7;
    OUTLINED_FUNCTION_6_19();
    *v3 = v6;
    v3[1] = v8;
    swift_bridgeObjectRelease();
    v17 = 1;
    v10 = sub_18CEC1F30();
    v12 = v11;
    OUTLINED_FUNCTION_6_19();
    *v14 = v10;
    v14[1] = v12;

    swift_bridgeObjectRelease();
    v16.receiver = v15;
    v16.super_class = (Class)type metadata accessor for ExpressCheckoutManagePaymentParams();
    v5 = objc_msgSendSuper2(&v16, sel_init);
    OUTLINED_FUNCTION_1_18();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v5;
}

id sub_18C95B5A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = ExpressCheckoutManagePaymentParams.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18C95B5D0(_QWORD *a1)
{
  return sub_18C95B1EC(a1);
}

void sub_18C95B5F0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_18C95AB50();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95B614(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C95AB5C);
}

void sub_18C95B630(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_18C95ABA8();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95B654(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, sub_18C95ABB4);
}

uint64_t method lookup function for ExpressCheckoutManagePaymentParams()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.mtPageRef.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.mtPageRef.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.mtPageRef.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.context.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.context.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.context.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ExpressCheckoutManagePaymentParams.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for ExpressCheckoutManagePaymentParams.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18C95B7D8 + 4 * byte_18CF0A865[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18C95B80C + 4 * byte_18CF0A860[v4]))();
}

uint64_t sub_18C95B80C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95B814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C95B81CLL);
  return result;
}

uint64_t sub_18C95B828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C95B830);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18C95B834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95B83C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExpressCheckoutManagePaymentParams.CodingKeys()
{
  return &type metadata for ExpressCheckoutManagePaymentParams.CodingKeys;
}

unint64_t sub_18C95B85C()
{
  unint64_t result;

  result = qword_1EE055D18;
  if (!qword_1EE055D18)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A9CC, &type metadata for ExpressCheckoutManagePaymentParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055D18);
  }
  return result;
}

unint64_t sub_18C95B89C()
{
  unint64_t result;

  result = qword_1EE055D20;
  if (!qword_1EE055D20)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A904, &type metadata for ExpressCheckoutManagePaymentParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055D20);
  }
  return result;
}

unint64_t sub_18C95B8DC()
{
  unint64_t result;

  result = qword_1EE055D28;
  if (!qword_1EE055D28)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A92C, &type metadata for ExpressCheckoutManagePaymentParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055D28);
  }
  return result;
}

unint64_t ExpressCheckoutMode.init(rawValue:)(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_18C95B92C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = ExpressCheckoutMode.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t ExpressCheckoutModel.mode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMSExpressCheckoutModel_mode);
}

id ExpressCheckoutModel.paymentChoices.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___AMSExpressCheckoutModel_paymentChoices);
}

id ExpressCheckoutModel.__allocating_init(mode:paymentChoices:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8_0();
  return ExpressCheckoutModel.init(mode:paymentChoices:)(a1, a2);
}

id ExpressCheckoutModel.init(mode:paymentChoices:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutModel_mode] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutModel_paymentChoices] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ExpressCheckoutModel();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ExpressCheckoutModel()
{
  return objc_opt_self();
}

uint64_t static ExpressCheckoutModel.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18C95BA60(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = v1;
  sub_18C920544();
  v4 = (void *)sub_18CEC1C24();
  v5 = (void *)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR___AMSExpressCheckoutModel_paymentChoices);
  v7 = (id)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

uint64_t ExpressCheckoutModel.__allocating_init(coder:)(void *a1)
{
  OUTLINED_FUNCTION_8_0();
  return ExpressCheckoutModel.init(coder:)(a1);
}

uint64_t ExpressCheckoutModel.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  char *v4;
  uint64_t result;
  void *v6;
  void *v7;
  id v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  id v12;
  objc_super v13;

  v2 = v1;
  type metadata accessor for ExpressCheckoutPaymentChoices();
  v4 = v2;
  result = sub_18CEC1C0C();
  if (result)
  {
    *(_QWORD *)&v4[OBJC_IVAR___AMSExpressCheckoutModel_paymentChoices] = result;
    sub_18C920544();
    v6 = (void *)sub_18CEC1C0C();
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_integerValue);

      v9 = ExpressCheckoutMode.init(rawValue:)((unint64_t)v8);
      if ((v10 & 1) != 0)
        v11 = 0;
      else
        v11 = v9;
    }
    else
    {
      v11 = 0;
    }
    *(_QWORD *)&v4[OBJC_IVAR___AMSExpressCheckoutModel_mode] = v11;

    v13.receiver = v4;
    v13.super_class = (Class)type metadata accessor for ExpressCheckoutModel();
    v12 = objc_msgSendSuper2(&v13, sel_init);

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id ExpressCheckoutModel.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_8_0(), sel_init);
}

void ExpressCheckoutModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ExpressCheckoutModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpressCheckoutModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_18C95BD6C()
{
  unint64_t result;

  result = qword_1EE055D48;
  if (!qword_1EE055D48)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for ExpressCheckoutMode, &type metadata for ExpressCheckoutMode);
    atomic_store(result, (unint64_t *)&qword_1EE055D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressCheckoutMode()
{
  return &type metadata for ExpressCheckoutMode;
}

uint64_t method lookup function for ExpressCheckoutModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpressCheckoutModel.__allocating_init(mode:paymentChoices:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ExpressCheckoutModel.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ExpressCheckoutModel.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_18C95BE00()
{
  return sub_18C959634(&OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title);
}

void sub_18C95BE0C(uint64_t a1, uint64_t a2)
{
  sub_18C95C040(a1, a2, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title);
}

void sub_18C95BE18()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95BE54()
{
  return sub_18C959634(&OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details);
}

void sub_18C95BE60(uint64_t a1, uint64_t a2)
{
  sub_18C95C040(a1, a2, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details);
}

void sub_18C95BE6C()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95BEA8()
{
  return sub_18C959634(&OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle);
}

void sub_18C95BEB4(uint64_t a1, uint64_t a2)
{
  sub_18C95C040(a1, a2, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle);
}

void sub_18C95BEC0()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95BEFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_18C95BF5C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_18C95BF2C(uint64_t a1)
{
  sub_18C95BFA0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_18C95BF5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum;
  OUTLINED_FUNCTION_48_0();
  return *(_QWORD *)v1;
}

void sub_18C95BFA0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum;
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  OUTLINED_FUNCTION_130_0();
}

void sub_18C95BFEC()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95C028()
{
  return sub_18C959634(&OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle);
}

void sub_18C95C034(uint64_t a1, uint64_t a2)
{
  sub_18C95C040(a1, a2, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle);
}

void sub_18C95C040(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  OUTLINED_FUNCTION_48_0();
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void sub_18C95C088()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void sub_18C95C0C4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_18C95C0F8(v0);
}

void sub_18C95C0EC()
{
  sub_18C95C290();
}

void sub_18C95C0F8(uint64_t a1)
{
  sub_18C95C340(a1, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards);
}

void sub_18C95C104()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void sub_18C95C140(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_18C95C1AC(v1);
}

void sub_18C95C16C()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams);
  OUTLINED_FUNCTION_48_0();
  v2 = *v1;
  OUTLINED_FUNCTION_21_11();
}

void sub_18C95C1AC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams);
  OUTLINED_FUNCTION_48_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_21_11();
}

void sub_18C95C1F0()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void sub_18C95C284()
{
  sub_18C95C290();
}

void sub_18C95C290()
{
  OUTLINED_FUNCTION_48_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_11();
}

void sub_18C95C334(uint64_t a1)
{
  sub_18C95C340(a1, &OBJC_IVAR___AMSExpressCheckoutPaymentChoices_metrics);
}

void sub_18C95C340(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  OUTLINED_FUNCTION_48_0();
  *v4 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_11();
}

void sub_18C95C380()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_18C95C334(v0);
}

void sub_18C95C3A8()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

BOOL sub_18C95C414()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards);
  OUTLINED_FUNCTION_48_0();
  v2 = *v1;
  if (!v2)
    return 1;
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_24_13();
    sub_18CEC1EC4();
    OUTLINED_FUNCTION_23_8();
  }
  else
  {
    v0 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v0 == 0;
}

void sub_18C95C4BC()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards);
  OUTLINED_FUNCTION_48_0();
  v2 = *v1;
  if (v2 && v2 >> 62)
  {
    OUTLINED_FUNCTION_24_13();
    sub_18CEC1EC4();
    OUTLINED_FUNCTION_23_8();
  }
  OUTLINED_FUNCTION_21_11();
}

uint64_t sub_18C95C528()
{
  unint64_t v0;

  sub_18CEC1F18();
  OUTLINED_FUNCTION_23_8();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_18C95C56C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_12_13 + 4
                                                                                                 * byte_18CF0AB50[a1]))(0x656C746974, 0xE500000000000000);
}

void sub_18C95C5A0()
{
  OUTLINED_FUNCTION_66_0();
}

unint64_t sub_18C95C5EC()
{
  return OUTLINED_FUNCTION_28_8();
}

uint64_t sub_18C95C5F8()
{
  return 0x7363697274656DLL;
}

uint64_t sub_18C95C610(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_12_13_0
                                                            + 4 * byte_18CF0AB58[a1]))(0x656C746974, 0xE500000000000000);
}

void sub_18C95C644()
{
  OUTLINED_FUNCTION_66_0();
}

unint64_t sub_18C95C690()
{
  return OUTLINED_FUNCTION_28_8();
}

uint64_t sub_18C95C69C()
{
  return 0x7363697274656DLL;
}

void sub_18C95C6B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_18C91CA04(*a1, *a2);
}

void sub_18C95C6C0()
{
  unsigned __int8 *v0;

  sub_18C963E4C(*v0);
}

uint64_t sub_18C95C6C8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_18C963F40(a1, *v1);
}

void sub_18C95C6D0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_18C9644A0(a1, *v1);
}

uint64_t sub_18C95C6D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C95C528();
  *a1 = result;
  return result;
}

void sub_18C95C704(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_18C95C56C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95C728()
{
  unsigned __int8 *v0;

  return sub_18C95C610(*v0);
}

uint64_t sub_18C95C730@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C95C568();
  *a1 = result;
  return result;
}

void sub_18C95C754(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_18C95C760()
{
  sub_18C95D47C();
  return sub_18CEC21D0();
}

uint64_t sub_18C95C788()
{
  sub_18C95D47C();
  return sub_18CEC21DC();
}

id ExpressCheckoutPaymentChoices.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ExpressCheckoutPaymentChoices.init()()
{
  char *v0;
  char *v1;
  objc_super v3;

  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title);
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details);
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle);
  v1 = &v0[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle);
  *(_QWORD *)&v0[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_metrics] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ExpressCheckoutPaymentChoices();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for ExpressCheckoutPaymentChoices()
{
  return objc_opt_self();
}

uint64_t static ExpressCheckoutPaymentChoices.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18C95C8BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;

  v3 = v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v3 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v4 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v5 = v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v5 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v6 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v7 = v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v7 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v8 = (void *)OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v9 = v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle;
  OUTLINED_FUNCTION_48_0();
  if (*(_QWORD *)(v9 + 8))
  {
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7_17();
  }
  v10 = (void *)OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v11 = (_QWORD *)(v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards);
  OUTLINED_FUNCTION_48_0();
  if (*v11)
  {
    type metadata accessor for ExpressCheckoutCard();
    swift_bridgeObjectRetain();
    sub_18CEC199C();
    OUTLINED_FUNCTION_7_17();
  }
  v12 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_22_0();

  v13 = (id *)(v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams);
  OUTLINED_FUNCTION_48_0();
  v14 = *v13;
  v15 = (void *)sub_18CEC17F8();
  OUTLINED_FUNCTION_3_3();

  v16 = v1 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum;
  v17 = OUTLINED_FUNCTION_48_0();
  if ((*(_BYTE *)(v16 + 8) & 1) == 0)
  {
    OUTLINED_FUNCTION_31_9(v17, (unint64_t *)&qword_1ECEA9410);
    v18 = (void *)sub_18CEC1C24();
    v19 = (void *)OUTLINED_FUNCTION_24_2();
    objc_msgSend(a1, sel_encodeObject_forKey_, v18, v19);

  }
}

id ExpressCheckoutPaymentChoices.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutPaymentChoices.init(coder:)(a1);
}

id ExpressCheckoutPaymentChoices.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char *v30;
  char *v31;
  objc_super v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum];
  *(_QWORD *)v7 = 0;
  v30 = v7;
  v7[8] = 1;
  v8 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards];
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards] = 0;
  v10 = (void **)&v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams];
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_metrics] = 0;
  OUTLINED_FUNCTION_31_9((uint64_t)a1, (unint64_t *)&qword_1EE055CF0);
  v31 = v2;
  v11 = (void *)sub_18CEC1C0C();
  if (v11)
  {
    OUTLINED_FUNCTION_7_18();

    v11 = v34;
    v12 = v35;
  }
  else
  {
    v12 = 0;
  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v4 = v11;
  *((_QWORD *)v4 + 1) = v12;
  swift_bridgeObjectRelease();
  v13 = (void *)sub_18CEC1C0C();
  if (v13)
  {
    OUTLINED_FUNCTION_7_18();

    v13 = v34;
    v14 = v35;
  }
  else
  {
    v14 = 0;
  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v5 = v13;
  *((_QWORD *)v5 + 1) = v14;
  swift_bridgeObjectRelease();
  v15 = (void *)OUTLINED_FUNCTION_27_10();
  if (v15)
  {
    OUTLINED_FUNCTION_7_18();

    v15 = v34;
    v16 = v35;
  }
  else
  {
    v16 = 0;
  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v6 = v15;
  *((_QWORD *)v6 + 1) = v16;
  swift_bridgeObjectRelease();
  v17 = (void *)OUTLINED_FUNCTION_27_10();
  if (v17)
  {
    OUTLINED_FUNCTION_7_18();

    v17 = v34;
    v18 = v35;
  }
  else
  {
    v18 = 0;
  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v8 = v17;
  *((_QWORD *)v8 + 1) = v18;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055D90);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_18CF073C0;
  OUTLINED_FUNCTION_31_9(v19, (unint64_t *)&unk_1ECEA9FD8);
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = type metadata accessor for ExpressCheckoutCard();
  sub_18CEC1C18();
  swift_bridgeObjectRelease();
  if (v36)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055D98);
    if (swift_dynamicCast())
      v21 = v33;
    else
      v21 = 0;
  }
  else
  {
    sub_18C87B358((uint64_t)&v34);
    v21 = 0;
  }
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)v9 = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for ExpressCheckoutManagePaymentParams();
  v22 = sub_18CEC1C0C();
  OUTLINED_FUNCTION_48_0();
  v23 = *v10;
  *v10 = (void *)v22;

  OUTLINED_FUNCTION_31_9(v24, (unint64_t *)&qword_1ECEA9410);
  v25 = (void *)sub_18CEC1C0C();
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, sel_integerValue);

    OUTLINED_FUNCTION_48_0();
    *(_QWORD *)v30 = v27;
    v30[8] = 0;
  }

  v32.receiver = v31;
  v32.super_class = (Class)type metadata accessor for ExpressCheckoutPaymentChoices();
  v28 = objc_msgSendSuper2(&v32, sel_init);

  return v28;
}

void sub_18C95D03C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_0();
}

id ExpressCheckoutPaymentChoices.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpressCheckoutPaymentChoices();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C95D144(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v12;
  uint64_t v13;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055DA0);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C95D47C();
  sub_18CEC21B8();
  v5 = (uint64_t *)(v2 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title);
  OUTLINED_FUNCTION_2_23();
  v6 = *v5;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v6)
    goto LABEL_4;
  OUTLINED_FUNCTION_155();
  v7 = (uint64_t *)(v2 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details);
  OUTLINED_FUNCTION_2_23();
  v8 = *v7;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v8)
    goto LABEL_4;
  OUTLINED_FUNCTION_155();
  v9 = (uint64_t *)(v2 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle);
  OUTLINED_FUNCTION_2_23();
  v10 = *v9;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v10)
    goto LABEL_4;
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_2_23();
  sub_18CEC1FCC();
  v12 = (uint64_t *)(v2 + OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle);
  OUTLINED_FUNCTION_2_23();
  v13 = *v12;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_1_3();
  if (v13)
  {
LABEL_4:
    OUTLINED_FUNCTION_21_10();
    return OUTLINED_FUNCTION_155();
  }
  else
  {
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_2_23();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055D98);
    sub_18C95DABC(&qword_1EE055DB0, &qword_1EE055DB8, (uint64_t)&protocol conformance descriptor for ExpressCheckoutCard, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_2_23();
    type metadata accessor for ExpressCheckoutManagePaymentParams();
    sub_18C95DB40((unint64_t *)&unk_1EE055DC0, (uint64_t (*)(uint64_t))type metadata accessor for ExpressCheckoutManagePaymentParams, (uint64_t)&protocol conformance descriptor for ExpressCheckoutManagePaymentParams);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_2_23();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055358);
    sub_18C95DB80(&qword_1EE055DD0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    OUTLINED_FUNCTION_9_19();
    return OUTLINED_FUNCTION_21_10();
  }
}

unint64_t sub_18C95D47C()
{
  unint64_t result;

  result = qword_1EE055DA8;
  if (!qword_1EE055DA8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0ACEC, &type metadata for ExpressCheckoutPaymentChoices.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055DA8);
  }
  return result;
}

id ExpressCheckoutPaymentChoices.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ExpressCheckoutPaymentChoices.init(from:)(a1);
}

id ExpressCheckoutPaymentChoices.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void **v40;
  void *v41;
  uint64_t v42;
  objc_class *v43;
  _QWORD v44[2];
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  uint64_t *v51;
  uint64_t *v52;
  id *v53;
  uint64_t *v54;
  uint64_t *v55;
  objc_super v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;

  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055DD8);
  v4 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_title);
  v55 = v7;
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_details);
  v52 = v8;
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonTitle);
  v51 = v9;
  v10 = &v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useApplePayButtonEnum];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  OUTLINED_FUNCTION_23(OBJC_IVAR___AMSExpressCheckoutPaymentChoices_useDifferentPaymentMethodButtonTitle);
  v54 = v11;
  v47 = &v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards];
  *(_QWORD *)&v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_eligibleCards] = 0;
  v53 = (id *)&v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams];
  *(_QWORD *)&v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_managePaymentsParams] = 0;
  v48 = &v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_metrics];
  *(_QWORD *)&v1[OBJC_IVAR___AMSExpressCheckoutPaymentChoices_metrics] = 0;
  v12 = a1[3];
  v13 = (void *)a1[4];
  v49 = a1;
  v14 = __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_18C95D47C();
  v50 = v1;
  v46 = v6;
  v15 = v14;
  sub_18CEC21A0();
  if (v2)
  {
    OUTLINED_FUNCTION_5_19();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    OUTLINED_FUNCTION_34_8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_8();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for ExpressCheckoutPaymentChoices();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v44[1] = v4;
    v64 = 0;
    v17 = sub_18CEC1F30();
    v19 = v18;
    v20 = v55;
    OUTLINED_FUNCTION_48_0();
    *v20 = v17;
    v20[1] = v19;
    swift_bridgeObjectRelease();
    v63 = 1;
    v21 = OUTLINED_FUNCTION_22_9();
    v22 = v52;
    v23 = v21;
    v25 = v24;
    OUTLINED_FUNCTION_48_0();
    *v22 = v23;
    v22[1] = v25;
    swift_bridgeObjectRelease();
    v62 = 2;
    v26 = OUTLINED_FUNCTION_22_9();
    v27 = v51;
    v28 = v26;
    v30 = v29;
    OUTLINED_FUNCTION_48_0();
    *v27 = v28;
    v27[1] = v30;
    swift_bridgeObjectRelease();
    v61 = 3;
    v31 = sub_18CEC1F54();
    LOBYTE(v30) = v32;
    OUTLINED_FUNCTION_48_0();
    *(_QWORD *)v10 = v31;
    v10[8] = v30 & 1;
    v60 = 4;
    v33 = OUTLINED_FUNCTION_22_9();
    v35 = v34;
    v36 = v54;
    OUTLINED_FUNCTION_48_0();
    *v36 = v33;
    v36[1] = v35;
    swift_bridgeObjectRelease();
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055D98);
    v59 = 5;
    sub_18C95DABC(&qword_1EE055DE0, &qword_1EE055DE8, (uint64_t)&protocol conformance descriptor for ExpressCheckoutCard, MEMORY[0x1E0DEAF40]);
    sub_18CEC1F60();
    OUTLINED_FUNCTION_5_19();
    v38 = v58;
    v39 = v47;
    OUTLINED_FUNCTION_48_0();
    *(_QWORD *)v39 = v38;
    swift_bridgeObjectRelease();
    type metadata accessor for ExpressCheckoutManagePaymentParams();
    LOBYTE(v58) = 6;
    sub_18C95DB40(&qword_1EE055DF0, (uint64_t (*)(uint64_t))type metadata accessor for ExpressCheckoutManagePaymentParams, (uint64_t)&protocol conformance descriptor for ExpressCheckoutManagePaymentParams);
    OUTLINED_FUNCTION_14_16();
    v44[0] = v57;
    v40 = v53;
    OUTLINED_FUNCTION_48_0();
    v41 = *v40;
    *v40 = (void *)v44[0];

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055358);
    LOBYTE(v57) = 7;
    sub_18C95DB80((unint64_t *)&unk_1EE055DF8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    OUTLINED_FUNCTION_14_16();
    v42 = v65;
    OUTLINED_FUNCTION_48_0();
    *(_QWORD *)v10 = v42;

    swift_bridgeObjectRelease();
    v43 = (objc_class *)type metadata accessor for ExpressCheckoutPaymentChoices();
    v56.receiver = v36;
    v56.super_class = v43;
    v15 = objc_msgSendSuper2(&v56, sel_init);
    OUTLINED_FUNCTION_6_20();
    __swift_destroy_boxed_opaque_existential_1Tm(v37);
  }
  return v15;
}

uint64_t sub_18C95DABC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE055D98);
    v10 = sub_18C95DB40(a2, (uint64_t (*)(uint64_t))type metadata accessor for ExpressCheckoutCard, a3);
    result = MEMORY[0x18D78AB48](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18C95DB40(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x18D78AB48](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18C95DB80(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE055358);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x18D78AB48](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

id sub_18C95DBE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = ExpressCheckoutPaymentChoices.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18C95DC08(_QWORD *a1)
{
  return sub_18C95D144(a1);
}

void sub_18C95DC28()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C95BE00();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95DC48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_18C95BE0C);
}

void sub_18C95DC64()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C95BE54();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95DC84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_18C95BE60);
}

void sub_18C95DCA0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C95BEA8();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95DCC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_18C95BEB4);
}

void sub_18C95DCE4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  *v0 = sub_18C95C028();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C95DD04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C9594EC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_18C95C034);
}

void sub_18C95DD20()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  sub_18C95C0EC();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_18C95DD44()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  sub_18C95C16C();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_18C95DD68()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_14();
  sub_18C95C284();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ExpressCheckoutPaymentChoices()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.details.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.details.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.details.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonTitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonTitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonTitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonEnum.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonEnum.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xE0))(a1, a2 & 1);
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useApplePayButtonEnum.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useDifferentPaymentMethodButtonTitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useDifferentPaymentMethodButtonTitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.useDifferentPaymentMethodButtonTitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.eligibleCards.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.eligibleCards.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.eligibleCards.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.managePaymentsParams.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.managePaymentsParams.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.managePaymentsParams.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.metrics.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.metrics.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.metrics.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.isEmpty.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.cardsCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ExpressCheckoutPaymentChoices.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t getEnumTagSinglePayload for ExpressCheckoutPaymentChoices.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpressCheckoutPaymentChoices.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_18C95E1CC + 4 * byte_18CF0AB65[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_18C95E200 + 4 * byte_18CF0AB60[v4]))();
}

uint64_t sub_18C95E200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95E208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C95E210);
  return result;
}

uint64_t sub_18C95E21C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C95E224);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_18C95E228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95E230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExpressCheckoutPaymentChoices.CodingKeys()
{
  return &type metadata for ExpressCheckoutPaymentChoices.CodingKeys;
}

unint64_t sub_18C95E250()
{
  unint64_t result;

  result = qword_1EE055E08;
  if (!qword_1EE055E08)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0ACC4, &type metadata for ExpressCheckoutPaymentChoices.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055E08);
  }
  return result;
}

unint64_t sub_18C95E290()
{
  unint64_t result;

  result = qword_1EE055E10;
  if (!qword_1EE055E10)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0ABFC, &type metadata for ExpressCheckoutPaymentChoices.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055E10);
  }
  return result;
}

unint64_t sub_18C95E2D0()
{
  unint64_t result;

  result = qword_1EE055E18;
  if (!qword_1EE055E18)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0AC24, &type metadata for ExpressCheckoutPaymentChoices.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE055E18);
  }
  return result;
}

unint64_t ExpressCheckoutPath.init(rawValue:)(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_18C95E320@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = ExpressCheckoutPath.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id AMSEngagementResult.init(path:)()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_11_20()), sel_initWithPath_, v0);
}

void AMSEngagementResult.init(path:)()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_21());
  v2 = AMSEngagementResult.ResultModel.init(path:selection:)(v0, 0);
  OUTLINED_FUNCTION_3_5((uint64_t)v2, sel_initWithModel_);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_0();
}

void AMSEngagementResult.ResultModel.__allocating_init(path:selection:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8_0();
  AMSEngagementResult.ResultModel.init(path:selection:)(a1, a2);
  OUTLINED_FUNCTION_253();
}

uint64_t type metadata accessor for AMSEngagementResult.ResultModel()
{
  return objc_opt_self();
}

void __swiftcall AMSEngagementResult.init(selection:)(AMSEngagementResult *__return_ptr retstr, AMSCardSingleSelection selection)
{
  void *v2;

  objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_11_20()), sel_initWithSelection_, v2);

  OUTLINED_FUNCTION_0();
}

void AMSEngagementResult.init(selection:)()
{
  void *v0;
  id v1;
  id v2;

  objc_allocWithZone((Class)OUTLINED_FUNCTION_6_21());
  v1 = v0;
  v2 = AMSEngagementResult.ResultModel.init(path:selection:)(3, (uint64_t)v0);
  OUTLINED_FUNCTION_3_5((uint64_t)v2, sel_initWithModel_);
  OUTLINED_FUNCTION_173();

  OUTLINED_FUNCTION_253();
}

void AMSEngagementResult.expressCheckoutPath()()
{
  uint64_t ObjCClassFromMetadata;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  type metadata accessor for AMSEngagementResult.ResultModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (OUTLINED_FUNCTION_8_16(ObjCClassFromMetadata, sel_modelForClass_error_, ObjCClassFromMetadata, v1, v2, v3, v4, v5, v8, v9, 0))
  {
    OUTLINED_FUNCTION_4_18();
    v7 = v10;
    OUTLINED_FUNCTION_2_20();
  }
  else
  {
    v6 = v10;
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_173();
    swift_willThrow();

  }
  OUTLINED_FUNCTION_130_0();
}

AMSCardSingleSelection_optional __swiftcall AMSEngagementResult.expressCheckoutCardSelection()()
{
  uint64_t ObjCClassFromMetadata;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_class *v10;
  NSString *v11;
  NSString *v12;
  Swift::Bool v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  AMSCardSingleSelection_optional result;

  type metadata accessor for AMSEngagementResult.ResultModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (OUTLINED_FUNCTION_8_16(ObjCClassFromMetadata, sel_modelForClass_error_, ObjCClassFromMetadata, v1, v2, v3, v4, v5, v14, v15, 0))
  {
    v6 = OUTLINED_FUNCTION_4_18();
    if (v6)
      v7 = *(id *)(v6 + OBJC_IVAR___AMSExpressCheckoutResultModel_selection);
    v8 = v16;
    OUTLINED_FUNCTION_2_20();
  }
  else
  {
    v9 = v16;
    OUTLINED_FUNCTION_3_26();
    OUTLINED_FUNCTION_173();
    swift_willThrow();

  }
  OUTLINED_FUNCTION_130_0();
  result.value._passSerialNumber = v12;
  result.value._passTypeIdentifier = v11;
  result.value.super.isa = v10;
  result.is_nil = v13;
  return result;
}

id AMSEngagementResult.ResultModel.init(path:selection:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutResultModel_path] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutResultModel_selection] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AMSEngagementResult.ResultModel();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t static AMSEngagementResult.ResultModel.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18C95E73C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = v1;
  OUTLINED_FUNCTION_7((uint64_t)a1, (unint64_t *)&qword_1ECEA9410);
  v4 = (void *)sub_18CEC1C24();
  v5 = (void *)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR___AMSExpressCheckoutResultModel_selection);
  v7 = (id)sub_18CEC17F8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

void AMSEngagementResult.ResultModel.__allocating_init(coder:)(uint64_t a1)
{
  OUTLINED_FUNCTION_8_0();
  AMSEngagementResult.ResultModel.init(coder:)(a1);
  OUTLINED_FUNCTION_0();
}

char *AMSEngagementResult.ResultModel.init(coder:)(uint64_t a1)
{
  void *v1;
  char *v2;
  id v3;
  void *v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  objc_super v10;

  OUTLINED_FUNCTION_7(a1, (unint64_t *)&qword_1ECEA9410);
  v2 = v1;
  v3 = (id)sub_18CEC1C0C();
  v4 = v3;
  if (v3)
    v3 = objc_msgSend(v3, sel_integerValue);
  v5 = ExpressCheckoutPath.init(rawValue:)((unint64_t)v3);
  if ((v6 & 1) != 0)
    v7 = 0;
  else
    v7 = v5;
  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutResultModel_path] = v7;
  OUTLINED_FUNCTION_7(v5, &qword_1EE055E38);
  v8 = sub_18CEC1C0C();

  *(_QWORD *)&v2[OBJC_IVAR___AMSExpressCheckoutResultModel_selection] = v8;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for AMSEngagementResult.ResultModel();
  objc_msgSendSuper2(&v10, sel_init);
  OUTLINED_FUNCTION_173();
  return v2;
}

id AMSEngagementResult.ResultModel.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_8_0(), sel_init);
}

void AMSEngagementResult.ResultModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AMSEngagementResult.ResultModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AMSEngagementResult.ResultModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_18C95EA44()
{
  unint64_t result;

  result = qword_1EE055E40;
  if (!qword_1EE055E40)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for ExpressCheckoutPath, &type metadata for ExpressCheckoutPath);
    atomic_store(result, (unint64_t *)&qword_1EE055E40);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressCheckoutPath()
{
  return &type metadata for ExpressCheckoutPath;
}

uint64_t method lookup function for AMSEngagementResult.ResultModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AMSEngagementResult.ResultModel.__allocating_init(path:selection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AMSEngagementResult.ResultModel.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AMSEngagementResult.ResultModel.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ExpressibleByJSON.init(jsonDictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t FailingMockAuthenticateTask.__allocating_init(authenticationResults:options:)(uint64_t a1, void *a2)
{
  uint64_t v3;

  swift_bridgeObjectRelease();
  v3 = swift_allocObject();

  return v3;
}

uint64_t FailingMockAuthenticateTask.init(authenticationResults:options:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();

  return v2;
}

uint64_t FailingMockAuthenticateTask.performAuthentication()()
{
  return swift_task_switch();
}

uint64_t sub_18C95EB68()
{
  uint64_t v0;

  AMSError(100, 0, 0, 0);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FailingMockAuthenticateTask.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FailingMockAuthenticateTask.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_UNKNOWN **sub_18C95EBD8()
{
  return &protocol witness table for MockAuthenticateResult;
}

uint64_t sub_18C95EBE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = FailingMockAuthenticateTask.__allocating_init(authenticationResults:options:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18C95EC08()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_18C924A04;
  return FailingMockAuthenticateTask.performAuthentication()();
}

uint64_t type metadata accessor for FailingMockAuthenticateTask()
{
  return objc_opt_self();
}

uint64_t method lookup function for FailingMockAuthenticateTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FailingMockAuthenticateTask.__allocating_init(authenticationResults:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t FlagKeys.isEnabled.getter()
{
  char *v0;
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *v0;
  v5 = &type metadata for FlagKeys;
  v6 = sub_18C900AD8();
  v4[0] = v1;
  v2 = sub_18CEC1570();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2 & 1;
}

const char *FlagKeys.domain.getter()
{
  return "AppleMediaServices";
}

BOOL static FlagKeys.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FlagKeys.hash(into:)()
{
  return sub_18CEC2128();
}

uint64_t FlagKeys.hashValue.getter()
{
  sub_18CEC211C();
  sub_18CEC2128();
  return sub_18CEC214C();
}

unint64_t sub_18C95ED78()
{
  unint64_t result;

  result = qword_1ECEA9E20;
  if (!qword_1ECEA9E20)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for FlagKeys, &type metadata for FlagKeys);
    atomic_store(result, (unint64_t *)&qword_1ECEA9E20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FlagKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 30) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v5 = v6 - 31;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_18C95EE88 + 4 * byte_18CF0AEC4[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_18C95EEBC + 4 * byte_18CF0AEBF[v4]))();
}

uint64_t sub_18C95EEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95EEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C95EECCLL);
  return result;
}

uint64_t sub_18C95EED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C95EEE0);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_18C95EEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C95EEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlagKeys()
{
  return &type metadata for FlagKeys;
}

uint64_t destroy for GranularNotificationAction(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GranularNotificationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GranularNotificationAction(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GranularNotificationAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GranularNotificationAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GranularNotificationAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GranularNotificationAction()
{
  return &type metadata for GranularNotificationAction;
}

uint64_t sub_18C95F2F8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_18C95F324()
{
  return sub_18CEC2128();
}

uint64_t sub_18C95F348()
{
  sub_18CEC211C();
  sub_18CEC2128();
  return sub_18CEC214C();
}

uint64_t sub_18C95F38C()
{
  return sub_18C95F348();
}

uint64_t sub_18C95F394()
{
  return sub_18C95F324();
}

uint64_t sub_18C95F39C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = v0;
  return swift_task_switch();
}

uint64_t sub_18C95F3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  __n128 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  void *aBlock;

  aBlock = (void *)(v0 + 144);
  if (qword_1EE054668 != -1)
    swift_once();
  v1 = v0 + 80;
  v2 = *(_QWORD *)(v0 + 192);
  v3 = (void *)qword_1EE056008;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v5 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v5 + 16) = xmmword_18CF07370;
  *(_QWORD *)(v0 + 104) = &type metadata for GranularNotificationAction;
  v6 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v0 + 80) = v6;
  sub_18C962C38(v2, v6 + 16);
  v7 = v3;
  v8 = AMSLogKey();
  v96 = v4;
  if (v8)
  {
    v9 = v8;
    sub_18CEC181C();

  }
  v10 = *(_QWORD **)(v0 + 192);
  v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v11 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v11 + 16) = xmmword_18CF07380;
  sub_18C872C64(v0 + 80, (uint64_t)aBlock);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_34_1((uint64_t)aBlock, v11 + 32);
  *(_QWORD *)(v5 + 32) = v11;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_31();
  v12._object = (void *)0x800000018CEE59A0;
  v12._countAndFlagsBits = 0xD000000000000021;
  LogInterpolation.init(stringLiteral:)(v12);
  v13 = v10[6];
  v14 = v10[7];
  *(_QWORD *)(v0 + 80) = v10[5];
  *(_QWORD *)(v0 + 88) = v13;
  *(_QWORD *)(v0 + 96) = v14;
  *(_QWORD *)(v0 + 104) = &type metadata for GranularNotificationAction.Parameters;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_1(v15, (uint64_t *)&unk_1ECEAA5F0);
  v16 = sub_18CEC1BA0();
  if (OUTLINED_FUNCTION_62_1(v16))
  {
    v17 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v18 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v18 + 16) = v5 + 48;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = sub_18C84C730;
    *(_QWORD *)(v0 + 96) = v18;
    OUTLINED_FUNCTION_263();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_55();
    v19 = OUTLINED_FUNCTION_2_25();
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    objc_autoreleasePoolPop(v17);
    v14 = MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v22 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v22 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v22 + 64) = OUTLINED_FUNCTION_68(v22, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v21;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_17();
  }
  swift_bridgeObjectRelease();

  sub_18C873084(*(_QWORD *)(v0 + 192), v0 + 80, (uint64_t *)&unk_1EE055E70);
  v24 = *(_QWORD *)(v0 + 104);
  if (!v24)
  {
    OUTLINED_FUNCTION_1(v23, (uint64_t *)&unk_1EE055E70);
    goto LABEL_15;
  }
  v25 = *(_QWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  *(_QWORD *)(v0 + 200) = v26;
  OUTLINED_FUNCTION_31();
  if (!v26)
  {
LABEL_15:
    v52 = (void *)qword_1EE056008;
    v53 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v53 + 16) = xmmword_18CF07370;
    *(_QWORD *)(v0 + 168) = &type metadata for GranularNotificationAction;
    v54 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_13_15(v54);
    v55 = v52;
    v56 = AMSLogKey();
    if (v56)
    {
      v57 = v56;
      sub_18CEC181C();
      v59 = v58;

    }
    else
    {
      v59 = 0;
    }
    v60 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_23_9(v60, v61, v62, v63, v64, v65, v66, v67, 3, 6, v96, v97, v68);
    sub_18C872C64((uint64_t)aBlock, v0 + 80);
    OUTLINED_FUNCTION_35();
    OUTLINED_FUNCTION_34_1(v0 + 80, v14);
    *(_QWORD *)(v53 + 32) = v52;
    OUTLINED_FUNCTION_17();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
    OUTLINED_FUNCTION_212(0xD00000000000002DLL);
    *(_QWORD *)(v0 + 104) = &type metadata for GranularNotificationAction.PerformError;
    *(_BYTE *)(v0 + 80) = 2;
    OUTLINED_FUNCTION_37_7();
    OUTLINED_FUNCTION_1(v69, (uint64_t *)&unk_1ECEAA5F0);
    v70 = sub_18CEC1B88();
    if (os_log_type_enabled(v55, v70))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v71 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v71 + 16) = v59;
      OUTLINED_FUNCTION_11_21(v71, (uint64_t)sub_18C84C730);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_10_20();
      swift_release();
      OUTLINED_FUNCTION_49_0();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v72 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v72 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v72 + 64) = OUTLINED_FUNCTION_68(v72, MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v72 + 32) = v1;
      *(_QWORD *)(v72 + 40) = v59;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_17();
    }
    swift_bridgeObjectRelease();

    sub_18C962BF0();
    OUTLINED_FUNCTION_49();
    *v73 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  sub_18C873084(*(_QWORD *)(v0 + 192), v0 + 80, (uint64_t *)&unk_1EE055E70);
  v28 = *(_QWORD *)(v0 + 104);
  if (v28)
  {
    v29 = *(_QWORD *)(v0 + 112);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    *(_QWORD *)(v0 + 208) = v30;
    OUTLINED_FUNCTION_31();
    if (v30)
    {
      v31 = *(_QWORD *)(v0 + 192);
      v32 = objc_msgSend(objc_allocWithZone((Class)AMSMutableBinaryPromise), sel_init);
      *(_QWORD *)(v0 + 216) = v32;
      v33 = v10[5];
      v34 = v10[6];
      v35 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
      swift_bridgeObjectRetain();
      v36 = v26;
      swift_unknownObjectRetain();
      v37 = sub_18C962C74(v33, v34, v36, v30);
      *(_QWORD *)(v0 + 224) = objc_msgSend(v37, sel_fetchAllSettings);

      sub_18C962C38(v31, v0 + 80);
      v38 = OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_27_11(v38);
      v39[10] = v32;
      v39[11] = v36;
      v39[12] = v30;
      *(_QWORD *)(v0 + 176) = sub_18C962D34;
      *(_QWORD *)(v0 + 184) = v39;
      *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 152) = 1107296256;
      *(_QWORD *)(v0 + 160) = sub_18C962050;
      *(_QWORD *)(v0 + 168) = &block_descriptor_12;
      v40 = _Block_copy(aBlock);
      v41 = v36;
      swift_unknownObjectRetain();
      v42 = v32;
      v43 = swift_release();
      OUTLINED_FUNCTION_36_7(v43, sel_addSuccessBlock_);
      _Block_release(v40);
      sub_18C962C38(v31, v0 + 80);
      v44 = OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_27_11(v44);
      *(_QWORD *)(v45 + 80) = v42;
      *(_QWORD *)(v0 + 176) = sub_18C962D7C;
      *(_QWORD *)(v0 + 184) = v45;
      v46 = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 152) = 1107296256;
      *(_QWORD *)(v0 + 160) = sub_18C962050;
      *(_QWORD *)(v0 + 168) = &block_descriptor_28;
      v47 = _Block_copy(aBlock);
      v48 = v42;
      v49 = swift_release();
      OUTLINED_FUNCTION_36_7(v49, sel_addErrorBlock_);
      _Block_release(v47);
      *(_QWORD *)(v0 + 56) = aBlock;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_18C95FE44;
      v50 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = v46;
      *(_QWORD *)(v0 + 88) = 0x40000000;
      *(_QWORD *)(v0 + 96) = sub_18C8FFDDC;
      *(_QWORD *)(v0 + 104) = &block_descriptor_29;
      *(_QWORD *)(v0 + 112) = v50;
      objc_msgSend(v48, sel_resultWithCompletion_, v0 + 80);
      return swift_continuation_await();
    }
  }
  else
  {
    OUTLINED_FUNCTION_1(v27, (uint64_t *)&unk_1EE055E70);
  }
  v74 = (void *)qword_1EE056008;
  v75 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v75 + 16) = xmmword_18CF07370;
  *(_QWORD *)(v0 + 168) = &type metadata for GranularNotificationAction;
  v76 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_13_15(v76);
  v77 = v74;
  v78 = AMSLogKey();
  if (v78)
  {
    v79 = v78;
    sub_18CEC181C();
    v81 = v80;

  }
  else
  {
    v81 = 0;
  }
  v82 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_23_9(v82, v83, v84, v85, v86, v87, v88, v89, 3, 6, v96, v97, v90);
  sub_18C872C64((uint64_t)aBlock, v0 + 80);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_34_1(v0 + 80, v14);
  *(_QWORD *)(v75 + 32) = v74;
  OUTLINED_FUNCTION_17();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  OUTLINED_FUNCTION_212(0xD000000000000028);
  *(_QWORD *)(v0 + 104) = &type metadata for GranularNotificationAction.PerformError;
  *(_BYTE *)(v0 + 80) = 3;
  OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_1(v91, (uint64_t *)&unk_1ECEAA5F0);
  v92 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_62_1(v92))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v93 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v93 + 16) = v81;
    OUTLINED_FUNCTION_11_21(v93, (uint64_t)sub_18C84C730);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_2_25();
    OUTLINED_FUNCTION_10_20();
    swift_release();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v94 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v94 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v94 + 64) = OUTLINED_FUNCTION_68(v94, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v94 + 32) = v1;
    *(_QWORD *)(v94 + 40) = v81;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_17();
  }
  swift_bridgeObjectRelease();

  sub_18C962BF0();
  OUTLINED_FUNCTION_49();
  *v95 = 3;
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_18C95FE44()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18C95FEA4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 200);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 144));
}

uint64_t sub_18C95FEF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_18C95FF5C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  NSObject *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  BOOL v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  void (*v44)(_QWORD *);
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  BOOL v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  void *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  BOOL v72;
  BOOL v73;
  id v74;
  void *v75;
  id v76;
  unint64_t v77;
  uint64_t v78;
  NSObject **v79;
  uint64_t v80;
  BOOL v81;
  void (*v82)(_QWORD *);
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  uint64_t v98;
  id v99;
  void (*v100)(_QWORD *);
  unint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  void *v106;
  id v107;
  unint64_t v108;
  id v109;
  void *v110;
  _QWORD *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  BOOL v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  void *v132;
  id v133;
  id v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  void *v138;
  id v139;
  id v140;
  void *v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  Swift::String v147;
  os_log_type_t v148;
  void *v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v160;
  uint64_t v161;
  NSObject *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  void *v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  void *v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  _QWORD v178[4];
  unint64_t v179;
  uint64_t aBlock;
  uint64_t v181;
  uint64_t (*v182)(uint64_t);
  void *v183;
  void *v184;
  uint64_t v185;
  _QWORD *v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  _QWORD v191[6];

  v6 = objc_msgSend(a1, sel_sections);
  sub_18C86EEE0(0, &qword_1EE055E88);
  v7 = sub_18CEC19A8();

  v160 = a2;
  sub_18C962C38(a2, (uint64_t)&v187);
  sub_18C962C38((uint64_t)&v187, (uint64_t)&aBlock);
  v8 = swift_allocObject();
  v9 = v188;
  *(_OWORD *)(v8 + 16) = v187;
  *(_OWORD *)(v8 + 32) = v9;
  v10 = v190;
  *(_OWORD *)(v8 + 48) = v189;
  *(_OWORD *)(v8 + 64) = v10;
  if (v7 >> 62)
    goto LABEL_263;
  v11 = *(NSObject **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v12 = (uint64_t)&selRef_isHeadOfHouseholdSharingPayment;
    v165 = v7;
    v166 = v8;
    v162 = v11;
    if (!v11)
      break;
    v13 = 0;
    v173 = v7 + 32;
    v176 = v7 & 0xC000000000000001;
    while (1)
    {
      v14 = v176 ? (id)MEMORY[0x18D788880](v13, v7) : *(id *)(v7 + 8 * v13 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_items);
      sub_18C86EEE0(0, &qword_1EE055E90);
      v17 = sub_18CEC19A8();

      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v18 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v18)
        break;
      v19 = (v13 + 1);
      if (__OFADD__(v13, 1))
        goto LABEL_250;
      ++v13;
      if (v19 == v11)
      {
        v49 = 0;
        v50 = 1;
        v13 = (unint64_t)v11;
        goto LABEL_76;
      }
    }
    v20 = 0;
    v49 = 0;
    v167 = v7 & 0xFFFFFFFFFFFFFF8;
    while (v176)
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      v22 = (id)MEMORY[0x18D788880](v13, v7);
LABEL_22:
      v23 = v22;
      v24 = objc_msgSend(v22, *(SEL *)(v12 + 512));
      v25 = sub_18CEC19A8();

      if (v20)
        goto LABEL_272;
      if ((v25 & 0xC000000000000001) != 0)
      {
        v26 = (id)MEMORY[0x18D788880](v49, v25);
      }
      else
      {
        if ((v49 & 0x8000000000000000) != 0)
          goto LABEL_255;
        if (v49 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_256;
        v26 = *(id *)(v25 + 8 * v49 + 32);
      }
      v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v7 = (unint64_t)v186;
      swift_bridgeObjectRetain();
      v28 = objc_msgSend(v27, sel_identifier);
      v29 = sub_18CEC181C();
      v31 = v30;

      v32 = *(_QWORD *)(v7 + 16);
      if (v32)
      {
        v170 = v27;
        v33 = *(_QWORD *)(v7 + 32) == v29 && *(_QWORD *)(v7 + 40) == v31;
        if (v33 || (sub_18CEC205C() & 1) != 0)
          goto LABEL_75;
        if (v32 != 1)
        {
          v34 = *(_QWORD *)(v7 + 48) == v29 && *(_QWORD *)(v7 + 56) == v31;
          if (v34 || (sub_18CEC205C() & 1) != 0)
            goto LABEL_75;
          if (v32 != 2)
          {
            v35 = (_QWORD *)(v7 + 72);
            v8 = 2;
            while (1)
            {
              v36 = v8 + 1;
              if (__OFADD__(v8, 1))
                goto LABEL_252;
              v37 = *(v35 - 1) == v29 && *v35 == v31;
              if (v37 || (sub_18CEC205C() & 1) != 0)
                break;
              v35 += 2;
              ++v8;
              if (v36 == v32)
                goto LABEL_48;
            }
LABEL_75:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v8 = v166;
            swift_release();
            v50 = 0;
            v7 = v165;
            v11 = v162;
            v12 = (uint64_t)&selRef_isHeadOfHouseholdSharingPayment;
            goto LABEL_76;
          }
        }
LABEL_48:
        swift_bridgeObjectRelease();
        v8 = v166;
        v12 = 0x1E25A7000;
        v27 = v170;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      swift_release();
      v7 = v165;
      if (v176)
        v38 = (id)MEMORY[0x18D788880](v13, v165);
      else
        v38 = *(id *)(v173 + 8 * v13);
      v39 = v38;
      v40 = objc_msgSend(v38, *(SEL *)(v12 + 512));
      v41 = sub_18CEC19A8();

      v42 = __OFADD__(v49++, 1);
      if (v42)
        goto LABEL_258;
      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        v43 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v43 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v49 == v43)
      {
        v42 = __OFADD__(v13++, 1);
        if (v42)
          goto LABEL_274;
        if (v13 == v162)
        {
          v13 = (unint64_t)v162;
          v49 = 0;
          v20 = 1;
        }
        else
        {
          while (1)
          {
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055E98);
            sub_18C9639D4();
            v44 = sub_18C96383C(v191, v13, v165, (void (*)(id *))sub_18C9616A0);
            v46 = *v45;
            swift_bridgeObjectRetain();
            ((void (*)(_QWORD *, _QWORD))v44)(v191, 0);
            swift_bridgeObjectRelease();
            if (v46 >> 62)
            {
              swift_bridgeObjectRetain();
              v47 = sub_18CEC1EC4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            v20 = v47 == 0;
            if (v47)
              break;
            v48 = v13 + 1;
            if (__OFADD__(v13, 1))
              goto LABEL_270;
            ++v13;
            if (v48 == v162)
            {
              v13 = (unint64_t)v162;
              break;
            }
          }
          v49 = 0;
        }
      }
      else
      {
        v20 = 0;
      }
      if (v13 == v162 && v20)
      {
LABEL_239:
        v50 = 1;
        v11 = v162;
        goto LABEL_16;
      }
    }
    if ((v13 & 0x8000000000000000) != 0)
      goto LABEL_253;
    if (v13 < *(_QWORD *)(v167 + 16))
    {
      v21 = *(void **)(v173 + 8 * v13);
      swift_retain_n();
      swift_bridgeObjectRetain();
      v22 = v21;
      goto LABEL_22;
    }
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
LABEL_257:
    __break(1u);
LABEL_258:
    __break(1u);
LABEL_259:
    __break(1u);
LABEL_260:
    __break(1u);
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    swift_bridgeObjectRetain();
    v11 = sub_18CEC1EC4();
    swift_bridgeObjectRelease();
  }
  v49 = 0;
  v50 = 1;
LABEL_16:
  v13 = (unint64_t)v11;
LABEL_76:
  v191[0] = v7;
  v191[1] = sub_18C9616A0;
  v191[2] = 0;
  v191[3] = sub_18C9639A0;
  v191[4] = v8;
  sub_18C962DC0(v13, v49, v50, (int64_t)v11, 0, 1);
  if (v51)
  {
    v179 = MEMORY[0x1E0DEE9D8];
    v161 = v51;
    sub_18CEC1DEC();
    if (!v11)
    {
      v86 = 0;
LABEL_151:
      v49 = 0;
      v87 = 1;
      v78 = v161;
      if (v161 < 0)
        goto LABEL_230;
      goto LABEL_152;
    }
    v52 = 0;
    v177 = v7 & 0xC000000000000001;
    v171 = v7 + 32;
    v11 = off_1E25199D0;
    while (1)
    {
      v53 = v177 ? (id)MEMORY[0x18D788880](v52, v7) : *(id *)(v7 + 8 * v52 + 32);
      v54 = v53;
      v55 = objc_msgSend(v53, *(SEL *)(v12 + 512));
      v13 = sub_18C86EEE0(0, &qword_1EE055E90);
      v56 = sub_18CEC19A8();

      if (v56 >> 62)
      {
        swift_bridgeObjectRetain();
        v57 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v57)
        break;
      v58 = v52 + 1;
      if (__OFADD__(v52, 1))
        goto LABEL_251;
      ++v52;
      if (v58 == v162)
      {
        v86 = (unint64_t)v162;
        goto LABEL_151;
      }
    }
    v59 = 0;
    v49 = 0;
    while (2)
    {
      if (v177)
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        v61 = (id)MEMORY[0x18D788880](v52, v7);
      }
      else
      {
        if ((v52 & 0x8000000000000000) != 0)
          goto LABEL_259;
        if (v52 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_260;
        v60 = *(void **)(v171 + 8 * v52);
        swift_retain_n();
        swift_bridgeObjectRetain();
        v61 = v60;
      }
      v62 = v61;
      v63 = objc_msgSend(v61, *(SEL *)(v12 + 512));
      v64 = sub_18CEC19A8();

      if (v59)
        goto LABEL_273;
      if ((v64 & 0xC000000000000001) != 0)
      {
        v65 = (id)MEMORY[0x18D788880](v49, v64);
      }
      else
      {
        if ((v49 & 0x8000000000000000) != 0)
          goto LABEL_261;
        if (v49 >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_262;
        v65 = *(id *)(v64 + 8 * v49 + 32);
      }
      v66 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v67 = v186;
      swift_bridgeObjectRetain();
      v174 = v66;
      v68 = objc_msgSend(v66, sel_identifier);
      v69 = sub_18CEC181C();
      v11 = v70;

      v71 = v67[2];
      if (!v71)
      {
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      v168 = v52;
      v72 = v67[4] == v69 && v67[5] == (_QWORD)v11;
      if (!v72 && (sub_18CEC205C() & 1) == 0)
      {
        v12 = 0x1E25A7000;
        if (v71 == 1)
          goto LABEL_114;
        v73 = v67[6] == v69 && v67[7] == (_QWORD)v11;
        if (v73 || (sub_18CEC205C() & 1) != 0)
          break;
        if (v71 == 2)
        {
LABEL_114:
          swift_bridgeObjectRelease();
          v8 = v166;
        }
        else
        {
          v79 = (NSObject **)(v67 + 9);
          v8 = 2;
          do
          {
            v80 = v8 + 1;
            if (__OFADD__(v8, 1))
              goto LABEL_257;
            v81 = *(v79 - 1) == v69 && *v79 == v11;
            if (v81 || (sub_18CEC205C() & 1) != 0)
              goto LABEL_229;
            v79 += 2;
            ++v8;
          }
          while (v80 != v71);
          swift_bridgeObjectRelease();
          v8 = v166;
          v52 = v168;
          v12 = 0x1E25A7000;
        }
LABEL_116:
        swift_bridgeObjectRelease();

        swift_release();
        if (v177)
          v74 = (id)MEMORY[0x18D788880](v52, v7);
        else
          v74 = *(id *)(v171 + 8 * v52);
        v75 = v74;
        v76 = objc_msgSend(v74, *(SEL *)(v12 + 512));
        v77 = sub_18CEC19A8();

        v42 = __OFADD__(v49++, 1);
        if (!v42)
        {
          if (v77 >> 62)
          {
            swift_bridgeObjectRetain();
            v11 = sub_18CEC1EC4();
            swift_bridgeObjectRelease();
          }
          else
          {
            v11 = *(NSObject **)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v49 != v11)
          {
            v59 = 0;
            goto LABEL_124;
          }
          v42 = __OFADD__(v52++, 1);
          v78 = v161;
          if (v42)
            goto LABEL_275;
          if (v52 == v162)
          {
            v52 = (unint64_t)v162;
            v49 = 0;
            v59 = 1;
          }
          else
          {
            while (1)
            {
              swift_bridgeObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055E98);
              sub_18C9639D4();
              v82 = sub_18C96383C(v178, v52, v7, (void (*)(id *))sub_18C9616A0);
              v84 = *v83;
              swift_bridgeObjectRetain();
              ((void (*)(_QWORD *, _QWORD))v82)(v178, 0);
              swift_bridgeObjectRelease();
              if (v84 >> 62)
              {
                swift_bridgeObjectRetain();
                v11 = sub_18CEC1EC4();
                swift_bridgeObjectRelease();
              }
              else
              {
                v11 = *(NSObject **)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRelease();
              v59 = v11 == 0;
              if (v11)
                break;
              v85 = v52 + 1;
              v78 = v161;
              if (__OFADD__(v52, 1))
                goto LABEL_271;
              ++v52;
              if (v85 == v162)
              {
                v52 = (unint64_t)v162;
                v49 = 0;
                goto LABEL_125;
              }
            }
            v49 = 0;
LABEL_124:
            v78 = v161;
          }
LABEL_125:
          if (v52 != v162 || !v59)
            continue;
LABEL_243:
          v87 = 1;
          v86 = (unint64_t)v162;
          if ((v78 & 0x8000000000000000) == 0)
            goto LABEL_152;
LABEL_230:
          __break(1u);
LABEL_231:
          v145 = 0;
          goto LABEL_232;
        }
        __break(1u);
LABEL_265:
        swift_bridgeObjectRetain();
        v120 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
        goto LABEL_222;
      }
      break;
    }
LABEL_229:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v8 = v166;
    swift_release();
    v87 = 0;
    v12 = 0x1E25A7000;
    v78 = v161;
    v86 = v168;
    if (v161 < 0)
      goto LABEL_230;
LABEL_152:
    v88 = 0;
    v11 = (v7 & 0xC000000000000001);
    v169 = v7 & 0xFFFFFFFFFFFFFF8;
    v172 = v7 + 32;
    v175 = v7 & 0xC000000000000001;
LABEL_153:
    if (v88 == v78)
      goto LABEL_249;
    sub_18C956E4C(v86, v11 == 0);
    v163 = v88;
    if (v11)
      v89 = (id)MEMORY[0x18D788880](v86, v7);
    else
      v89 = *(id *)(v172 + 8 * v86);
    v90 = v89;
    v91 = objc_msgSend(v89, *(SEL *)(v12 + 512));
    sub_18C86EEE0(0, &qword_1EE055E90);
    v92 = sub_18CEC19A8();

    if ((v87 & 1) == 0)
    {
      sub_18C956E4C(v49, (v92 & 0xC000000000000001) == 0);
      if ((v92 & 0xC000000000000001) != 0)
        v93 = (id)MEMORY[0x18D788880](v49, v92);
      else
        v93 = *(id *)(v92 + 8 * v49 + 32);
      v94 = v93;
      v164 = v163 + 1;
      swift_bridgeObjectRelease();
      objc_msgSend(v94, sel_setEnabled_, 1);
      sub_18CEC1DD4();
      sub_18CEC1DF8();
      sub_18CEC1E04();
      sub_18CEC1DE0();
      if (v11)
      {
LABEL_161:
        v95 = (id)MEMORY[0x18D788880](v86, v7);
        goto LABEL_165;
      }
      while (1)
      {
        if ((v86 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
          goto LABEL_254;
        }
        if (v86 >= *(_QWORD *)(v169 + 16))
          goto LABEL_246;
        v95 = *(id *)(v172 + 8 * v86);
LABEL_165:
        v96 = v95;
        v97 = objc_msgSend(v95, *(SEL *)(v12 + 512));
        v13 = sub_18CEC19A8();

        v42 = __OFADD__(v49++, 1);
        if (v42)
        {
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
          goto LABEL_243;
        }
        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          v98 = sub_18CEC1EC4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v98 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v49 == v98)
        {
          v42 = __OFADD__(v86++, 1);
          v78 = v161;
          if (v42)
          {
            __break(1u);
            break;
          }
          if (v86 == v162)
          {
            v86 = (unint64_t)v162;
            v49 = 0;
            v87 = 1;
            goto LABEL_216;
          }
          while (1)
          {
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055E98);
            sub_18C9639D4();
            v100 = sub_18C96383C(v178, v86, v7, (void (*)(id *))sub_18C9616A0);
            v102 = *v101;
            swift_bridgeObjectRetain();
            ((void (*)(_QWORD *, _QWORD))v100)(v178, 0);
            swift_bridgeObjectRelease();
            if (v102 >> 62)
            {
              swift_bridgeObjectRetain();
              v103 = sub_18CEC1EC4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v103 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v103)
              break;
            v104 = v86 + 1;
            v78 = v161;
            if (__OFADD__(v86, 1))
            {
              __break(1u);
              goto LABEL_267;
            }
            ++v86;
            v87 = 1;
            if (v104 == v162)
            {
              v86 = (unint64_t)v162;
              v49 = 0;
              goto LABEL_216;
            }
          }
          v49 = 0;
          if (v11)
            goto LABEL_170;
        }
        else if (v11)
        {
LABEL_170:
          swift_retain_n();
          swift_bridgeObjectRetain();
          v99 = (id)MEMORY[0x18D788880](v86, v7);
          goto LABEL_185;
        }
        if ((v86 & 0x8000000000000000) != 0)
          goto LABEL_247;
        if (v86 >= *(_QWORD *)(v169 + 16))
          goto LABEL_248;
        v105 = *(void **)(v172 + 8 * v86);
        swift_retain_n();
        swift_bridgeObjectRetain();
        v99 = v105;
LABEL_185:
        v106 = v99;
        v107 = objc_msgSend(v99, *(SEL *)(v12 + 512));
        v13 = sub_18CEC19A8();

        if ((v13 & 0xC000000000000001) != 0)
        {
          v108 = v86;
          v109 = (id)MEMORY[0x18D788880](v49, v13);
        }
        else
        {
          if ((v49 & 0x8000000000000000) != 0)
            goto LABEL_241;
          if (v49 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_242;
          v108 = v86;
          v109 = *(id *)(v13 + 8 * v49 + 32);
        }
        v110 = v109;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v111 = v186;
        swift_bridgeObjectRetain();
        v112 = objc_msgSend(v110, sel_identifier);
        v113 = sub_18CEC181C();
        v115 = v114;

        v116 = v111[2];
        if (v116)
        {
          v117 = v111[4] == v113 && v111[5] == v115;
          if (v117 || (sub_18CEC205C() & 1) != 0)
          {
LABEL_215:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v8 = v166;
            swift_release();
            v87 = 0;
            v7 = v165;
            v12 = 0x1E25A7000;
            v78 = v161;
            v86 = v108;
            v11 = v175;
LABEL_216:
            v88 = v164;
            if (v164 != v78)
              goto LABEL_153;
            v13 = v179;
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_220;
          }
          if (v116 != 1)
          {
            v118 = v111[6] == v113 && v111[7] == v115;
            if (v118 || (sub_18CEC205C() & 1) != 0)
              goto LABEL_215;
            if (v116 != 2)
            {
              v8 = (uint64_t)(v111 + 9);
              v12 = 2;
              while (1)
              {
                v7 = v12 + 1;
                if (__OFADD__(v12, 1))
                  break;
                v119 = *(_QWORD *)(v8 - 8) == v113 && *(_QWORD *)v8 == v115;
                if (v119 || (sub_18CEC205C() & 1) != 0)
                  goto LABEL_215;
                v8 += 16;
                ++v12;
                if (v7 == v116)
                  goto LABEL_210;
              }
              __break(1u);
              goto LABEL_239;
            }
          }
LABEL_210:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v8 = v166;
          swift_release();
          v7 = v165;
          v12 = 0x1E25A7000;
        }
        else
        {

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v86 = v108;
        v11 = v175;
        if (v175)
          goto LABEL_161;
      }
    }
    sub_18C9639A8((uint64_t)&aBlock);
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    sub_18C9639A8((uint64_t)&aBlock);
    __break(1u);
LABEL_273:
    sub_18C9639A8((uint64_t)&aBlock);
    __break(1u);
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_220:
    sub_18C9639A8((uint64_t)&aBlock);
    if (v13 >> 62)
      goto LABEL_265;
    v120 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_222:
    if (v120)
    {
      v121 = *(_QWORD *)(v160 + 40);
      v122 = *(_QWORD *)(v160 + 48);
      v123 = objc_allocWithZone((Class)AMSNotificationSettingsTask);
      swift_bridgeObjectRetain();
      v124 = a4;
      swift_unknownObjectRetain();
      v125 = sub_18C962C74(v121, v122, v124, a5);
      sub_18C86EEE0(0, &qword_1EE055E90);
      v126 = (void *)sub_18CEC199C();
      v127 = objc_msgSend(v125, sel_updateSettings_, v126);

      if (v127)
      {
        sub_18C962C38(v160, (uint64_t)&v187);
        v128 = swift_allocObject();
        v129 = v188;
        *(_OWORD *)(v128 + 16) = v187;
        *(_OWORD *)(v128 + 32) = v129;
        v130 = v190;
        *(_OWORD *)(v128 + 48) = v189;
        *(_OWORD *)(v128 + 64) = v130;
        *(_QWORD *)(v128 + 80) = v13;
        *(_QWORD *)(v128 + 88) = a3;
        v184 = sub_18C963A54;
        v185 = v128;
        v131 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v181 = 1107296256;
        v182 = sub_18C95F2F8;
        v183 = &block_descriptor_48;
        v132 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        v133 = v127;
        v134 = a3;
        swift_release();
        objc_msgSend(v133, sel_addSuccessBlock_, v132);
        _Block_release(v132);

        sub_18C962C38(v160, (uint64_t)&v187);
        v135 = swift_allocObject();
        v136 = v188;
        *(_OWORD *)(v135 + 16) = v187;
        *(_OWORD *)(v135 + 32) = v136;
        v137 = v190;
        *(_OWORD *)(v135 + 48) = v189;
        *(_OWORD *)(v135 + 64) = v137;
        *(_QWORD *)(v135 + 80) = v13;
        *(_QWORD *)(v135 + 88) = v134;
        v184 = sub_18C963AA4;
        v185 = v135;
        aBlock = v131;
        v181 = 1107296256;
        v182 = (uint64_t (*)(uint64_t))sub_18C962050;
        v183 = &block_descriptor_54;
        v138 = _Block_copy(&aBlock);
        v139 = v133;
        v140 = v134;
        swift_release();
        objc_msgSend(v139, sel_addErrorBlock_, v138);

        _Block_release(v138);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1EE054668 != -1)
LABEL_267:
        swift_once();
      v141 = (void *)qword_1EE056008;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_18CF073C0;
      *((_QWORD *)&v188 + 1) = &type metadata for GranularNotificationAction;
      *(_QWORD *)&v187 = swift_allocObject();
      sub_18C962C38(v160, v187 + 16);
      v11 = v141;
      v142 = AMSLogKey();
      if (!v142)
        goto LABEL_231;
      v143 = v142;
      sub_18CEC181C();
      v145 = v144;

LABEL_232:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
      v146 = swift_allocObject();
      *(_OWORD *)(v146 + 16) = xmmword_18CF07380;
      sub_18C872C64((uint64_t)&v187, (uint64_t)&aBlock);
      swift_bridgeObjectRetain();
      sub_18C87AF5C((uint64_t)&aBlock, v145, v146 + 32);
      *(_QWORD *)(v13 + 32) = v146;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v187);
      v147._object = (void *)0x800000018CEE5A80;
      v147._countAndFlagsBits = 0xD000000000000012;
      LogInterpolation.init(stringLiteral:)(v147);
      v148 = sub_18CEC1BA0();
      if (os_log_type_enabled(v11, v148))
      {
        v149 = (void *)MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        v150 = byte_1ECEA9E18;
        v151 = swift_allocObject();
        *(_BYTE *)(v151 + 16) = v150;
        *(_QWORD *)&v187 = v13;
        *((_QWORD *)&v187 + 1) = sub_18C84C730;
        *(_QWORD *)&v188 = v151;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v152 = sub_18CEC17C8();
        v154 = v153;
        swift_release();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v149);
        v155 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v156 = swift_allocObject();
        *(_OWORD *)(v156 + 16) = xmmword_18CF07380;
        *(_QWORD *)(v156 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v156 + 64) = sub_18C872FBC();
        *(_QWORD *)(v156 + 32) = v152;
        *(_QWORD *)(v156 + 40) = v154;
        swift_bridgeObjectRetain();
        sub_18CEC1594();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v155);

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_finishWithSuccess);
    }
  }
}

void sub_18C9616A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_items);
  sub_18C86EEE0(0, &qword_1EE055E90);
  v4 = sub_18CEC19A8();

  *a2 = v4;
}

uint64_t sub_18C961710(void **a1, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *(_QWORD **)(a2 + 56);
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v2, sel_identifier);
  v5 = sub_18CEC181C();
  v7 = v6;

  LOBYTE(v4) = sub_18C867D34(v5, v7, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

id sub_18C961794(uint64_t a1, uint64_t a2, void *a3)
{
  void *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  os_log_type_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  char v39;
  _QWORD v40[4];
  uint64_t v41;

  if (qword_1EE054668 != -1)
    swift_once();
  v6 = (void *)qword_1EE056008;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_18CF073C0;
  *((_QWORD *)&v38 + 1) = &type metadata for GranularNotificationAction;
  *(_QWORD *)&v37 = swift_allocObject();
  sub_18C962C38(a1, v37 + 16);
  v8 = v6;
  v9 = AMSLogKey();
  if (v9)
  {
    v10 = v9;
    sub_18CEC181C();
    v12 = v11;

  }
  else
  {
    v12 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_18CF07380;
  sub_18C872C64((uint64_t)&v37, (uint64_t)&v34);
  swift_bridgeObjectRetain();
  sub_18C87AF5C((uint64_t)&v34, v12, v13 + 32);
  *(_QWORD *)(v7 + 32) = v13;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
  sub_18C872FF8();
  v41 = v14;
  v15._object = (void *)0x800000018CEE5AD0;
  v15._countAndFlagsBits = 0xD000000000000037;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v15);
  v40[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055EB8);
  v40[0] = a2;
  sub_18C873084((uint64_t)v40, (uint64_t)v36, (uint64_t *)&unk_1ECEAA5F0);
  v34 = 0u;
  v35 = 0u;
  swift_bridgeObjectRetain();
  sub_18C872148((uint64_t)v36, (uint64_t)&v34);
  v39 = 0;
  v37 = v34;
  v38 = v35;
  v16 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v16 = v32;
  }
  v17 = *(_QWORD *)(v16 + 16);
  if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
  {
    sub_18C872FF8();
    v16 = v33;
  }
  *(_QWORD *)(v16 + 16) = v17 + 1;
  v18 = v16 + 40 * v17;
  v19 = v37;
  v20 = v38;
  *(_BYTE *)(v18 + 64) = v39;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = v20;
  v41 = v16;
  sub_18C86752C((uint64_t)v40, (uint64_t *)&unk_1ECEAA5F0);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v7 + 40) = v41;
  v22 = sub_18CEC1BA0();
  if (os_log_type_enabled(v8, v22))
  {
    v23 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v24 = byte_1ECEA9E18;
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v24;
    *(_QWORD *)&v37 = v7;
    *((_QWORD *)&v37 + 1) = sub_18C84C730;
    *(_QWORD *)&v38 = v25;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v26 = sub_18CEC17C8();
    v28 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v23);
    v29 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v30 + 64) = sub_18C872FBC();
    *(_QWORD *)(v30 + 32) = v26;
    *(_QWORD *)(v30 + 40) = v28;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v29);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  return objc_msgSend(a3, sel_finishWithSuccess);
}

void sub_18C961BC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[32];
  __int128 v41;
  __int128 v42;
  char v43;
  _QWORD v44[4];
  uint64_t v45;

  if (qword_1EE054668 != -1)
    swift_once();
  v7 = (void *)qword_1EE056008;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18CF07370;
  *((_QWORD *)&v42 + 1) = &type metadata for GranularNotificationAction;
  *(_QWORD *)&v41 = swift_allocObject();
  sub_18C962C38(a2, v41 + 16);
  v9 = v7;
  v10 = AMSLogKey();
  if (v10)
  {
    v11 = v10;
    sub_18CEC181C();
    v13 = v12;

  }
  else
  {
    v13 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18CF07380;
  sub_18C872C64((uint64_t)&v41, (uint64_t)&v38);
  swift_bridgeObjectRetain();
  sub_18C87AF5C((uint64_t)&v38, v13, v14 + 32);
  *(_QWORD *)(v8 + 32) = v14;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
  sub_18C872FF8();
  v45 = v15;
  v16._object = (void *)0x800000018CEE5AA0;
  v16._countAndFlagsBits = 0xD00000000000002BLL;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v16);
  v44[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055EB8);
  v44[0] = a3;
  sub_18C873084((uint64_t)v44, (uint64_t)v40, (uint64_t *)&unk_1ECEAA5F0);
  v38 = 0u;
  v39 = 0u;
  swift_bridgeObjectRetain();
  sub_18C872148((uint64_t)v40, (uint64_t)&v38);
  v43 = 0;
  v41 = v38;
  v42 = v39;
  v17 = v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v17 = v36;
  }
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
  {
    sub_18C872FF8();
    v17 = v37;
  }
  *(_QWORD *)(v17 + 16) = v18 + 1;
  v19 = v17 + 40 * v18;
  v20 = v41;
  v21 = v42;
  *(_BYTE *)(v19 + 64) = v43;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = v21;
  v45 = v17;
  sub_18C86752C((uint64_t)v44, (uint64_t *)&unk_1ECEAA5F0);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v22);
  *(_QWORD *)(v8 + 40) = v45;
  swift_getErrorValue();
  v23 = sub_18CEC20D4();
  v24 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v42 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v41 = v23;
  *((_QWORD *)&v41 + 1) = v25;
  static LogInterpolation.safe(_:)();
  sub_18C86752C((uint64_t)&v41, (uint64_t *)&unk_1ECEAA5F0);
  v26 = sub_18CEC1B88();
  if (os_log_type_enabled(v9, v26))
  {
    v27 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v28 = byte_1ECEA9E18;
    v29 = swift_allocObject();
    *(_BYTE *)(v29 + 16) = v28;
    *(_QWORD *)&v41 = v8;
    *((_QWORD *)&v41 + 1) = sub_18C84C730;
    *(_QWORD *)&v42 = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v30 = sub_18CEC17C8();
    v32 = v31;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v27);
    v33 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v34 + 56) = v24;
    *(_QWORD *)(v34 + 64) = sub_18C872FBC();
    *(_QWORD *)(v34 + 32) = v30;
    *(_QWORD *)(v34 + 40) = v32;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v33);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  v35 = (void *)sub_18CEC1354();
  objc_msgSend(a4, sel_finishWithError_, v35);

}

void sub_18C962054(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_18C9620A4(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *@<X8>);
  os_log_type_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[32];
  uint64_t v28;
  void (*v29)(uint64_t *@<X8>);
  uint64_t v30;
  ValueMetadata *v31;

  if (qword_1EE054668 != -1)
    swift_once();
  v5 = (void *)qword_1EE056008;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_18CF07370;
  v31 = &type metadata for GranularNotificationAction;
  v28 = swift_allocObject();
  sub_18C962C38(a2, v28 + 16);
  v7 = v5;
  v8 = AMSLogKey();
  if (v8)
  {
    v9 = v8;
    sub_18CEC181C();
    v11 = v10;

  }
  else
  {
    v11 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18CF07380;
  sub_18C872C64((uint64_t)&v28, (uint64_t)v27);
  swift_bridgeObjectRetain();
  sub_18C87AF5C((uint64_t)v27, v11, v12 + 32);
  *(_QWORD *)(v6 + 32) = v12;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
  v13._object = (void *)0x800000018CEE5A50;
  v13._countAndFlagsBits = 0xD000000000000025;
  LogInterpolation.init(stringLiteral:)(v13);
  swift_getErrorValue();
  v14 = sub_18CEC20D4();
  v15 = MEMORY[0x1E0DEA968];
  v31 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v28 = v14;
  v29 = v16;
  static LogInterpolation.safe(_:)();
  sub_18C86752C((uint64_t)&v28, (uint64_t *)&unk_1ECEAA5F0);
  v17 = sub_18CEC1B88();
  if (os_log_type_enabled(v7, v17))
  {
    v18 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v19 = byte_1ECEA9E18;
    v20 = swift_allocObject();
    *(_BYTE *)(v20 + 16) = v19;
    v28 = v6;
    v29 = sub_18C84C730;
    v30 = v20;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v21 = sub_18CEC17C8();
    v23 = v22;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v18);
    v24 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v25 + 56) = v15;
    *(_QWORD *)(v25 + 64) = sub_18C872FBC();
    *(_QWORD *)(v25 + 32) = v21;
    *(_QWORD *)(v25 + 40) = v23;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v24);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  swift_bridgeObjectRelease();
  v26 = (void *)sub_18CEC1354();
  objc_msgSend(a3, sel_finishWithError_, v26);

}

uint64_t sub_18C962418(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_18C962460;
  return sub_18C95F39C();
}

uint64_t sub_18C962460(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_18C9624C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  void *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char v55;
  char *v56;
  void *v57;
  uint64_t v58;
  NSObject *v59;
  id v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  os_log_type_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;

  v11 = sub_18C928F10(a1, &v92);
  if (!*((_QWORD *)&v93 + 1))
    goto LABEL_9;
  v12 = MEMORY[0x1E0DEA968];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v23 = MEMORY[0x1E0DEA968];
    if (qword_1EE054668 != -1)
      swift_once();
    v24 = (void *)qword_1EE056008;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v25 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v25 + 16) = xmmword_18CF09A00;
    v26 = v24;
    v27 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();
    OUTLINED_FUNCTION_26_10();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v28 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v28 + 16) = xmmword_18CF07380;
    *(_QWORD *)&v92 = 0xD00000000000001DLL;
    *((_QWORD *)&v92 + 1) = 0x800000018CEE5920;
    OUTLINED_FUNCTION_263();
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_155();
    v29 = OUTLINED_FUNCTION_15_16();
    OUTLINED_FUNCTION_5_20(v29, v30, v31, v32, v33, v34, v35, v36, 1, 2, a2, v91, v92, v93, v94, v95, v96, v97, v98);
    *(_BYTE *)(v28 + 64) = 0;
    v37 = v93;
    *(_OWORD *)(v28 + 32) = v92;
    *(_OWORD *)(v28 + 48) = v37;
    *(_QWORD *)(v25 + 32) = v28;
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_212(0xD000000000000024);
    *((_QWORD *)&v93 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
    *(_QWORD *)&v92 = a1;
    static LogInterpolation.safe(_:)();
    OUTLINED_FUNCTION_22_10(v38, v39, v40, v41);
    *((_QWORD *)&v93 + 1) = &type metadata for GranularNotificationAction.PerformError;
    LOBYTE(v92) = 0;
    static LogInterpolation.safe(_:)();
    OUTLINED_FUNCTION_22_10(v42, v43, v44, v45);
    v46 = sub_18CEC1B88();
    if (os_log_type_enabled(v26, v46))
    {
      v47 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v48 = byte_1ECEA9E18;
      v49 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v49 + 16) = v48;
      *(_QWORD *)&v92 = v25;
      *((_QWORD *)&v92 + 1) = sub_18C84C6D8;
      *(_QWORD *)&v93 = v49;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      OUTLINED_FUNCTION_24_14();
      v50 = sub_18CEC17C8();
      v52 = v51;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v47);
      v53 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v54 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v54 + 16) = v87;
      *(_QWORD *)(v54 + 56) = v23;
      *(_QWORD *)(v54 + 64) = sub_18C872FBC();
      *(_QWORD *)(v54 + 32) = v50;
      *(_QWORD *)(v54 + 40) = v52;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      OUTLINED_FUNCTION_264();
      objc_autoreleasePoolPop(v53);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    v55 = 0;
    a2 = v89;
    goto LABEL_18;
  }
  v13 = v96;
  sub_18C928F10(a1, &v92);
  if (!*((_QWORD *)&v93 + 1))
  {
    v6 = OUTLINED_FUNCTION_264();
LABEL_9:
    OUTLINED_FUNCTION_21_12(v6, (uint64_t *)&unk_1ECEAA5F0, v7, v8, v9, v10, v11);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA330);
  if ((swift_dynamicCast() & 1) == 0)
  {
    OUTLINED_FUNCTION_264();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_158();
  v14 = v96;
  sub_18C873084(a2, (uint64_t)&v92, (uint64_t *)&unk_1EE055E70);
  v20 = *((_QWORD *)&v93 + 1);
  if (*((_QWORD *)&v93 + 1))
  {
    v21 = v94;
    __swift_project_boxed_opaque_existential_1(&v92, *((uint64_t *)&v93 + 1));
    v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v92);

    if (v22)
    {
      sub_18C927088(a2, a3);
      *(_OWORD *)(a3 + 40) = v13;
      *(_QWORD *)(a3 + 56) = v14;
      return;
    }
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_264();
    v12 = MEMORY[0x1E0DEA968];
  }
  else
  {
    OUTLINED_FUNCTION_21_12(v15, (uint64_t *)&unk_1EE055E70, v16, v17, v18, v19);
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_264();
  }
  if (qword_1EE054668 != -1)
    swift_once();
  v57 = (void *)qword_1EE056008;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v58 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v58 + 16) = xmmword_18CF07370;
  v59 = v57;
  v60 = AMSSetLogKeyIfNeeded();
  v61 = (char)v60;
  sub_18CEC181C();
  OUTLINED_FUNCTION_26_10();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v62 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v62 + 16) = xmmword_18CF07380;
  *(_QWORD *)&v92 = 0xD00000000000001DLL;
  *((_QWORD *)&v92 + 1) = 0x800000018CEE5920;
  OUTLINED_FUNCTION_263();
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_155();
  v63 = OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_5_20(v63, v64, v65, v66, v67, v68, v69, v70, v86, v88, 1, 2, v92, v93, v94, v95, v96, v97, v98);
  *(_BYTE *)(v62 + 64) = 0;
  v71 = v93;
  *(_OWORD *)(v62 + 32) = v92;
  *(_OWORD *)(v62 + 48) = v71;
  *(_QWORD *)(v58 + 32) = v62;
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_212(0xD00000000000002DLL);
  *((_QWORD *)&v93 + 1) = &type metadata for GranularNotificationAction.PerformError;
  LOBYTE(v92) = 2;
  static LogInterpolation.safe(_:)();
  OUTLINED_FUNCTION_21_12(v72, (uint64_t *)&unk_1ECEAA5F0, v73, v74, v75, v76);
  v77 = sub_18CEC1B88();
  if (os_log_type_enabled(v59, v77))
  {
    v78 = v12;
    v79 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_41_0();
    v80 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v80 + 16) = v61;
    *(_QWORD *)&v92 = v58;
    *((_QWORD *)&v92 + 1) = sub_18C84C730;
    *(_QWORD *)&v93 = v80;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_24_14();
    v81 = sub_18CEC17C8();
    v83 = v82;
    swift_release();
    OUTLINED_FUNCTION_115();
    objc_autoreleasePoolPop(v79);
    v84 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v85 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v85 + 16) = v90;
    *(_QWORD *)(v85 + 56) = v78;
    *(_QWORD *)(v85 + 64) = sub_18C872FBC();
    *(_QWORD *)(v85 + 32) = v81;
    *(_QWORD *)(v85 + 40) = v83;
    OUTLINED_FUNCTION_35();
    v55 = 2;
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v84);

    OUTLINED_FUNCTION_115();
    swift_bridgeObjectRelease();
  }
  else
  {

    OUTLINED_FUNCTION_115();
    v55 = 2;
  }
LABEL_18:
  sub_18C962BF0();
  swift_allocError();
  *v56 = v55;
  swift_willThrow();
  sub_18C86752C(a2, (uint64_t *)&unk_1EE055E70);
}

void sub_18C962BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_18C9624C0(a1, a2, a3);
}

unint64_t sub_18C962BF0()
{
  unint64_t result;

  result = qword_1EE055E68;
  if (!qword_1EE055E68)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B130, &type metadata for GranularNotificationAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE055E68);
  }
  return result;
}

uint64_t sub_18C962C38(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for GranularNotificationAction(a2, a1);
  return a2;
}

id sub_18C962C74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;

  v7 = (void *)sub_18CEC17F8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_initWithIdentifier_account_bag_, v7, a3, a4);

  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_18C962CEC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_20_12();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_18_15();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_18C962D34(void *a1)
{
  uint64_t v1;

  sub_18C95FF5C(a1, v1 + 16, *(void **)(v1 + 80), *(void **)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_18C962D44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_20_12();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_18_15();

  return swift_deallocObject();
}

void sub_18C962D7C(uint64_t a1)
{
  uint64_t v1;

  sub_18C9620A4(a1, v1 + 16, *(void **)(v1 + 80));
}

BOOL sub_18C962D90(_BOOL8 result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v6;

  v6 = a4 < result;
  if (a4 != result)
    return v6;
  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    __break(1u);
    goto LABEL_11;
  }
  if ((a3 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  return a5 < a2;
}

void sub_18C962DC0(uint64_t a1, uint64_t a2, char a3, int64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v8 = a4;
  v9 = a2;
  v11 = a3 & 1;
  v12 = a6 & 1;
  sub_18C96313C(a1, a2, a3 & 1, a4, a5, a6 & 1, *(_QWORD *)v6, *(void (**)(unint64_t *__return_ptr, id *))(v6 + 8));
  v13 = sub_18C962D90(a1, v9, v11, v8, a5, v12);
  if (v13)
    v14 = v8;
  else
    v14 = a1;
  if (v13)
    v15 = a5;
  else
    v15 = v9;
  if (v13)
    v16 = v12;
  else
    v16 = v11;
  if (v13)
    v17 = -1;
  else
    v17 = 1;
  if (v13)
  {
    v8 = a1;
    v18 = v11;
  }
  else
  {
    v9 = a5;
    v18 = v12;
  }
  v23 = v14;
  v24 = v15;
  v25 = v16;
  if (v14 == v8)
  {
    if ((v16 & 1) != 0)
    {
      if (v18)
        return;
    }
    else
    {
      if (v15 == v9)
        v19 = v18;
      else
        v19 = 1;
      if ((v19 & 1) == 0)
        return;
    }
  }
  v20 = v17;
  do
  {
    sub_18C962EE0((uint64_t)&v23);
    if (v23 == v8)
    {
      if ((v25 & 1) != 0)
      {
        if ((v18 & 1) != 0)
          return;
      }
      else
      {
        if (v24 == v9)
          v21 = v18;
        else
          v21 = 1;
        if ((v21 & 1) == 0)
          return;
      }
    }
    v22 = __OFADD__(v20, v17);
    v20 += v17;
  }
  while (!v22);
  __break(1u);
}

void sub_18C962EE0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  void (*v3)(id *);
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  id *v17;
  id *v18;
  char v19;
  uint64_t (*v21)(id **);
  uint64_t v22;
  id v23;
  id *v24;

  v2 = *v1;
  v3 = (void (*)(id *))v1[1];
  v21 = (uint64_t (*)(id **))v1[3];
  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  if (v2 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v7 = sub_18CEC1EC4();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v22 = v7;
  if (v5 == v7)
    v8 = v6;
  else
    v8 = 0;
  if ((v8 & 1) == 0)
  {
    while (1)
    {
      v9 = sub_18C9635A4(v5, v4, v6 & 1, v2, v3);
      v4 = v11;
      v12 = (v9 == v22) & v10;
      if (v12)
      {
        v5 = v22;
LABEL_22:
        *(_QWORD *)a1 = v5;
        *(_QWORD *)(a1 + 8) = v4;
        *(_BYTE *)(a1 + 16) = v12;
        return;
      }
      v5 = v9;
      v13 = v10;
      if ((v2 & 0xC000000000000001) != 0)
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        v15 = (id)MEMORY[0x18D788880](v5, v2);
      }
      else
      {
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        if (v9 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_24;
        v14 = *(void **)(v2 + 32 + 8 * v9);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        v15 = v14;
      }
      v16 = v15;
      v23 = v15;
      ((void (*)(id **__return_ptr, id *))v3)(&v24, &v23);

      if ((v13 & 1) != 0)
        break;
      v6 = (char)v24;
      if (((unint64_t)v24 & 0xC000000000000001) != 0)
      {
        v17 = (id *)MEMORY[0x18D788880](v4, v24);
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_25;
        if (v4 >= *(_QWORD *)(((unint64_t)v24 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_26;
        v17 = (id *)v24[v4 + 4];
      }
      v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v24 = v18;
      v19 = v21(&v24);

      swift_release();
      v6 = 0;
      if ((v19 & 1) != 0)
        goto LABEL_22;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_18C96313C(uint64_t result, uint64_t a2, char a3, int64_t a4, uint64_t a5, char a6, unint64_t a7, void (*a8)(unint64_t *__return_ptr, id *))
{
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  int v17;
  char v18;
  id v19;
  void *v20;
  BOOL v21;
  void *v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  int64_t v36;
  id v37;
  unint64_t v38;

  v10 = a5;
  v11 = a4;
  v12 = a2;
  v13 = result;
  LODWORD(v14) = a3 & 1;
  v15 = a6 & 1;
  v16 = a4 < result;
  if (a4 != result)
    goto LABEL_7;
  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    __break(1u);
  }
  if ((a3 & 1) == 0)
  {
    v16 = a5 < a2;
LABEL_7:
    v17 = v16;
    if (v17 && a7 >> 62)
      goto LABEL_59;
    while (v11 != v13)
    {
      v36 = v13;
      if (v11 < v13)
      {
        result = sub_18C96380C(v13, v12, v14, v11, v10, v15);
        v33 = v12;
        v18 = v14;
        v12 = v11;
        if ((result & 1) == 0)
          goto LABEL_24;
        __break(1u);
        goto LABEL_18;
      }
LABEL_23:
      v33 = v10;
      v18 = v15;
      v10 = v12;
      v15 = v14;
      v12 = v13;
      v13 = v11;
LABEL_24:
      v35 = v11;
      v34 = v18;
      if ((v15 & 1) != 0)
      {
        if (v12 < v13)
        {
          v10 = 0;
          v11 = a7 & 0xC000000000000001;
          goto LABEL_34;
        }
        v10 = 0;
        if ((v18 & 1) == 0)
          goto LABEL_49;
LABEL_47:
        v13 = v35;
        goto LABEL_52;
      }
      v11 = a7 & 0xC000000000000001;
      sub_18C956E4C(v12, (a7 & 0xC000000000000001) == 0);
      if ((a7 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        v23 = (id)MEMORY[0x18D788880](v12, a7);
      }
      else
      {
        v22 = *(void **)(a7 + 8 * v12 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        v23 = v22;
      }
      v24 = v23;
      v37 = v23;
      a8(&v38, &v37);
      swift_release();
      swift_bridgeObjectRelease();

      v15 = v38;
      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      result = swift_bridgeObjectRelease();
      v21 = __OFSUB__(v14, v10);
      v10 = v14 - v10;
      if (v21)
      {
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      v21 = __OFADD__(v12++, 1);
      v25 = v34;
      if (v21)
        goto LABEL_64;
      if (v12 >= v13)
      {
LABEL_46:
        if ((v25 & 1) != 0)
          goto LABEL_47;
LABEL_49:
        sub_18C956E4C(v12, (a7 & 0xC000000000000001) == 0);
        v13 = v35;
        if ((a7 & 0xC000000000000001) == 0)
        {
          v30 = *(void **)(a7 + 8 * v12 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          v31 = v30;
          goto LABEL_51;
        }
LABEL_65:
        swift_bridgeObjectRetain();
        swift_retain();
        v31 = (id)MEMORY[0x18D788880](v12, a7);
LABEL_51:
        v32 = v31;
        v37 = v31;
        a8(&v38, &v37);
        swift_release();
        swift_bridgeObjectRelease();

        result = swift_bridgeObjectRelease();
        v21 = __OFADD__(v10, v33);
        v10 += v33;
        if (v21)
        {
          __break(1u);
        }
        else
        {
LABEL_52:
          if (v13 >= v36)
            return v10;
          v21 = __OFSUB__(0, v10);
          v10 = -v10;
          if (!v21)
            return v10;
        }
        __break(1u);
        goto LABEL_68;
      }
      while (1)
      {
LABEL_34:
        if (v11)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          v26 = (id)MEMORY[0x18D788880](v12, a7);
        }
        else
        {
          if (v12 < 0)
            goto LABEL_57;
          if ((unint64_t)v12 >= *(_QWORD *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_58;
          v27 = *(void **)(a7 + 8 * v12 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          v26 = v27;
        }
        v28 = v26;
        v37 = v26;
        a8(&v38, &v37);
        swift_release();
        swift_bridgeObjectRelease();

        v15 = v38;
        if (v38 >> 62)
        {
          swift_bridgeObjectRetain();
          v14 = sub_18CEC1EC4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v14 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        result = swift_bridgeObjectRelease();
        v21 = __OFADD__(v10, v14);
        v10 += v14;
        if (v21)
          break;
        v29 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_56;
        ++v12;
        if (v29 >= v13)
        {
          v12 = v29;
          v25 = v34;
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain();
      swift_retain();
      sub_18CEC1EC4();
      swift_release();
      result = swift_bridgeObjectRelease();
    }
    if (v14 | v15)
      return 0;
LABEL_18:
    sub_18C956E4C(v11, (a7 & 0xC000000000000001) == 0);
    if ((a7 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x18D788880](v11, a7);
    else
      v19 = *(id *)(a7 + 8 * v11 + 32);
    v20 = v19;
    v37 = v19;
    a8(&v38, &v37);

    result = swift_bridgeObjectRelease();
    v21 = __OFSUB__(v10, v12);
    v10 -= v12;
    if (!v21)
      return v10;
    __break(1u);
    goto LABEL_23;
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_18C9635A4(uint64_t a1, uint64_t a2, char a3, unint64_t a4, void (*a5)(id *))
{
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v16;
  void (*v17)(_QWORD *);
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;

  v9 = a1;
  v10 = a4 & 0xC000000000000001;
  sub_18C956E4C(a1, (a4 & 0xC000000000000001) == 0);
  if (v10)
    v11 = (id)MEMORY[0x18D788880](v9, a4);
  else
    v11 = *(id *)(a4 + 8 * v9 + 32);
  v12 = v11;
  v23 = v11;
  ((void (*)(_QWORD *__return_ptr, id *))a5)(v22, &v23);

  if ((a3 & 1) != 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else if (!(v22[0] >> 62))
  {
    v13 = *(_QWORD *)((v22[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v13 = sub_18CEC1EC4();
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  if (a2 + 1 != v13)
    return v9;
  if (__OFADD__(v9++, 1))
    goto LABEL_26;
  if (!(a4 >> 62))
  {
    v16 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_27:
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = sub_18CEC1EC4();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_15:
  if (v9 != v16)
  {
    while (1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055E98);
      sub_18C9639D4();
      v17 = sub_18C96383C(v22, v9, a4, a5);
      v19 = *v18;
      swift_bridgeObjectRetain();
      ((void (*)(_QWORD *, _QWORD))v17)(v22, 0);
      swift_release();
      swift_bridgeObjectRelease();
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_18CEC1EC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v20)
        break;
      v21 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      ++v9;
      if (v21 == v16)
        return v16;
    }
  }
  return v9;
}

BOOL sub_18C96380C(_BOOL8 result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v6;

  v6 = result < a4;
  if (result != a4)
    return v6;
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
      return 0;
    __break(1u);
    goto LABEL_11;
  }
  if ((a6 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  return a2 < a5;
}

void (*sub_18C96383C(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(id *)))(_QWORD *a1)
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_18C9638D4((uint64_t)v8, a2, a3, a4);
  return sub_18C9638A8;
}

void sub_18C9638A8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_18C9638D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id *)))()
{
  unint64_t v7;
  id v8;
  void *v9;
  id v11;

  v7 = a3 & 0xC000000000000001;
  sub_18C956E4C(a2, (a3 & 0xC000000000000001) == 0);
  if (v7)
    v8 = (id)MEMORY[0x18D788880](a2, a3);
  else
    v8 = *(id *)(a3 + 8 * a2 + 32);
  v9 = v8;
  v11 = v8;
  a4(&v11);

  return sub_18C888BD8;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_20_12();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_18_15();
  return swift_deallocObject();
}

uint64_t sub_18C9639A0(void **a1)
{
  uint64_t v1;

  return sub_18C961710(a1, v1 + 16);
}

uint64_t sub_18C9639A8(uint64_t a1)
{
  destroy for GranularNotificationAction(a1);
  return a1;
}

unint64_t sub_18C9639D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE055EA0;
  if (!qword_1EE055EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE055E98);
    sub_18C878228(&qword_1EE055EA8, &qword_1EE055EB0, MEMORY[0x1E0DEAF50]);
    v3 = v2;
    result = MEMORY[0x18D78AB48](MEMORY[0x1E0DEC860], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE055EA0);
  }
  return result;
}

id sub_18C963A54()
{
  uint64_t v0;

  return sub_18C961794(v0 + 16, *(_QWORD *)(v0 + 80), *(void **)(v0 + 88));
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_20_12();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_18_15();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_18C963AA4(uint64_t a1)
{
  uint64_t v1;

  sub_18C961BC4(a1, v1 + 16, *(_QWORD *)(v1 + 80), *(void **)(v1 + 88));
}

uint64_t storeEnumTagSinglePayload for GranularNotificationAction.PerformError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18C963B08 + 4 * byte_18CF0B015[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18C963B3C + 4 * byte_18CF0B010[v4]))();
}

uint64_t sub_18C963B3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C963B44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C963B4CLL);
  return result;
}

uint64_t sub_18C963B58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C963B60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18C963B64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C963B6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GranularNotificationAction.PerformError()
{
  return &type metadata for GranularNotificationAction.PerformError;
}

uint64_t destroy for GranularNotificationAction.Parameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s18AppleMediaServices26GranularNotificationActionV10ParametersVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for GranularNotificationAction.Parameters(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GranularNotificationAction.Parameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GranularNotificationAction.Parameters()
{
  return &type metadata for GranularNotificationAction.Parameters;
}

unint64_t sub_18C963CA8()
{
  unint64_t result;

  result = qword_1EE055EC0[0];
  if (!qword_1EE055EC0[0])
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B108, &type metadata for GranularNotificationAction.PerformError);
    atomic_store(result, qword_1EE055EC0);
  }
  return result;
}

uint64_t dispatch thunk of JSONRepresentable.jsonRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_18C963D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void sub_18C963D58()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C963D84()
{
  sub_18C963DE8();
}

void sub_18C963DA0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C963DCC()
{
  sub_18C963DE8();
}

void sub_18C963DE8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C963E1C(uint64_t a1)
{
  sub_18C963E8C(a1, (void (*)(uint64_t))sub_18C942A10);
}

void sub_18C963E28(uint64_t a1)
{
  sub_18C963E8C(a1, (void (*)(uint64_t))sub_18C94D6D8);
}

void sub_18C963E34(uint64_t a1)
{
  sub_18C963E8C(a1, (void (*)(uint64_t))sub_18C959768);
}

void sub_18C963E40()
{
  sub_18C9644F4();
}

void sub_18C963E4C(uint64_t a1)
{
  sub_18C963E8C(a1, (void (*)(uint64_t))sub_18C95C56C);
}

void sub_18C963E58()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C963E80(uint64_t a1)
{
  sub_18C963E8C(a1, (void (*)(uint64_t))sub_18C97E424);
}

void sub_18C963E8C(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_12();
  a2(a1);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C963ED4(char a1)
{
  sub_18C9643CC(0, a1);
}

void sub_18C963EE0()
{
  sub_18C964290();
}

uint64_t sub_18C963EEC()
{
  OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_2_26();
}

uint64_t sub_18C963F40(uint64_t a1, uint64_t a2)
{
  return sub_18C96401C(a1, a2, (void (*)(uint64_t))sub_18C95C56C);
}

uint64_t sub_18C963F4C()
{
  return sub_18CEC1888();
}

void sub_18C963F68()
{
  OUTLINED_FUNCTION_3_27();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C963F80(uint64_t a1, char a2)
{
  if (a2)
    OUTLINED_FUNCTION_9();
  else
    OUTLINED_FUNCTION_24_15();
  OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_2_26();
}

void sub_18C963FE4()
{
  sub_18CEC2128();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C964004(uint64_t a1, uint64_t a2)
{
  return sub_18C96401C(a1, a2, (void (*)(uint64_t))sub_18C94D6D8);
}

uint64_t sub_18C964010(uint64_t a1, uint64_t a2)
{
  return sub_18C96401C(a1, a2, (void (*)(uint64_t))sub_18C97E424);
}

uint64_t sub_18C96401C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_18CEC1888();
  return OUTLINED_FUNCTION_2_26();
}

void sub_18C964058(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18C96409C()
{
  OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_2_26();
}

void sub_18C964118(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18C964158()
{
  OUTLINED_FUNCTION_24_15();
  OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_2_26();
}

void sub_18C9641D0()
{
  sub_18CEC2128();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C9641F0()
{
  return sub_18CEC1888();
}

void sub_18C96420C()
{
  sub_18CEC2128();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C96422C()
{
  OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_2_26();
}

void sub_18C964290()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C964304()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C964328()
{
  sub_18C96446C();
}

void sub_18C964344()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C964370(uint64_t a1, uint64_t a2)
{
  sub_18C9644AC(a1, a2, (void (*)(uint64_t))sub_18C942A10);
}

void sub_18C96437C(uint64_t a1, uint64_t a2)
{
  sub_18C9644AC(a1, a2, (void (*)(uint64_t))sub_18C959768);
}

void sub_18C964388(uint64_t a1, uint64_t a2)
{
  sub_18C9644AC(a1, a2, (void (*)(uint64_t))sub_18C97E424);
}

void sub_18C964394(uint64_t a1, uint64_t a2)
{
  sub_18C9644AC(a1, a2, (void (*)(uint64_t))sub_18C94D6D8);
}

void sub_18C9643A0()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C9643CC(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_8_17();
  if (a2)
    OUTLINED_FUNCTION_9();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C964450()
{
  sub_18C96446C();
}

void sub_18C96446C()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C9644A0(uint64_t a1, uint64_t a2)
{
  sub_18C9644AC(a1, a2, (void (*)(uint64_t))sub_18C95C56C);
}

void sub_18C9644AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_8_17();
  a3(a2);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C9644F4()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C96455C()
{
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

uint64_t sub_18C964584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = j__OUTLINED_FUNCTION_6_4();
  *a1 = result;
  return result;
}

uint64_t sub_18C9645A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_18C9645D4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_18C9645D4(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void sub_18C9645DC(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_18C90C2DC(*a1, *v2);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C964604@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_18C964630(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_18C964630(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_18C964638(_QWORD *a1, uint64_t *a2)
{
  return sub_18C90C2E4(a1, *a2);
}

uint64_t sub_18C964640@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_18C964670(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_18C964670(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

uint64_t sub_18C964694@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_18C9646C4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_18C9646C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_18C9646DC(uint64_t *a1)
{
  return sub_18C90C310(*a1);
}

uint64_t sub_18C9646E4(uint64_t *a1)
{
  return sub_18C90C320(*a1);
}

uint64_t sub_18C9646EC(uint64_t *a1)
{
  return sub_18C9646F4(*a1);
}

uint64_t sub_18C9646F4(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_18C964704@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_18C964730(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_18C964730(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_18C964738(uint64_t *a1)
{
  uint64_t *v1;

  return sub_18C964744(*a1, *v1);
}

BOOL sub_18C964744(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_18C964750(uint64_t *a1)
{
  uint64_t *v1;

  return sub_18C96475C(*a1, *v1);
}

BOOL sub_18C96475C(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_18C964768(uint64_t *a1)
{
  uint64_t *v1;

  return sub_18C964774(*a1, *v1);
}

BOOL sub_18C964774(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_18C964780()
{
  uint64_t *v0;

  return sub_18C964788(*v0);
}

BOOL sub_18C964788(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_18C964794()
{
  return sub_18CEC1CC0();
}

uint64_t sub_18C9647AC(uint64_t *a1)
{
  return sub_18C9647B4(*a1);
}

uint64_t sub_18C9647B4(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

_QWORD *sub_18C9647C4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_18C9647D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_18C963D04(a1);
  *a2 = result;
  return result;
}

uint64_t sub_18C9647F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  char isEscapingClosureAtFileLocation;
  uint64_t v20;

  v13 = sub_18CEC169C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_17_13();
  swift_bridgeObjectRetain();
  v15 = sub_18C894BAC(a1, a2, a3);
  if (!v15 || *(_BYTE *)(v15 + 56) != 1)
    goto LABEL_5;
  swift_retain();
  sub_18CEC1678();
  sub_18C8700F4(&qword_1ECEA95D0, (void (*)(uint64_t))MEMORY[0x1E0DEF5B0]);
  v16 = sub_18CEC17E0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v13);
  if ((v16 & 1) != 0)
  {
    v15 = OUTLINED_FUNCTION_287();
LABEL_5:
    a5(v15);
    return OUTLINED_FUNCTION_287();
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  sub_18C964998((uint64_t)sub_18C967214, v18, a4);
  OUTLINED_FUNCTION_287();
  if (v20)
  {
    swift_release();
    return OUTLINED_FUNCTION_287();
  }
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return OUTLINED_FUNCTION_287();
  __break(1u);
  return result;
}

uint64_t sub_18C964998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v6 = sub_18CEC1654();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_18CEC169C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  sub_18CEC1648();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v11;
  aBlock[4] = sub_18C967284;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18C95F2F8;
  aBlock[3] = &block_descriptor_20_0;
  _Block_copy(aBlock);
  sub_18CEC16D8();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_18CEC16C0();
  swift_release();
  sub_18CEC16CC();
  swift_release();
  swift_beginAccess();
  v13 = *(void **)(v11 + 16);
  if (v13)
  {
    v14 = v13;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_18C964B8C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_18C964BE8()
{
  _QWORD *v0;

  return sub_18C873368(*v0);
}

uint64_t sub_18C964BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  unsigned int v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  Swift::String v31;
  os_log_type_t v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  Swift::String v46;
  os_log_type_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  os_log_type_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  Swift::String v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  Swift::String v84;
  os_log_type_t v85;
  void *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  _BYTE v107[32];
  __int128 v108;
  __int128 v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v3 = v2;
  v114 = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend((id)objc_opt_self(), sel_processAssertionsEnabled))
  {
    if (qword_1ECEAA4A8 != -1)
      swift_once();
    v41 = (void *)qword_1ECEAA3A0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_18CF073C0;
    v43 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                    + 8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v44 = swift_allocObject();
    v100 = xmmword_18CF07380;
    *(_OWORD *)(v44 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain_n();
    v45 = v41;
    sub_18C8730C4(v43, v44 + 32);
    *(_QWORD *)(v42 + 32) = v44;
    swift_bridgeObjectRelease();
    v46._countAndFlagsBits = 0xD000000000000056;
    v46._object = (void *)0x800000018CEE5F10;
    LogInterpolation.init(stringLiteral:)(v46);
    v47 = sub_18CEC1B70();
    if (os_log_type_enabled(v45, v47))
    {
      v48 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 == -1)
        goto LABEL_23;
      goto LABEL_44;
    }
LABEL_24:

    goto LABEL_25;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v7 = objc_msgSend(v6, sel_isManaged);

  if (!v7)
  {
    if (qword_1ECEAA4A8 != -1)
      swift_once();
    v49 = (void *)qword_1ECEAA3A0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_18CF073C0;
    v50 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                    + 8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v51 = swift_allocObject();
    v100 = xmmword_18CF07380;
    *(_OWORD *)(v51 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain_n();
    v45 = v49;
    sub_18C8730C4(v50, v51 + 32);
    *(_QWORD *)(v42 + 32) = v51;
    swift_bridgeObjectRelease();
    v52._countAndFlagsBits = 0xD000000000000044;
    v52._object = (void *)0x800000018CEE5F70;
    LogInterpolation.init(stringLiteral:)(v52);
    v53 = sub_18CEC1B70();
    if (os_log_type_enabled(v45, v53))
    {
      v48 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 == -1)
      {
LABEL_23:
        v54 = byte_1ECEA9E18;
        v55 = swift_allocObject();
        *(_BYTE *)(v55 + 16) = v54;
        *(_QWORD *)&v108 = v42;
        *((_QWORD *)&v108 + 1) = sub_18C84C730;
        *(_QWORD *)&v109 = v55;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v56 = sub_18CEC17C8();
        v58 = v57;
        swift_release();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v48);
        v59 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = v100;
        *(_QWORD *)(v60 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v60 + 64) = sub_18C872FBC();
        *(_QWORD *)(v60 + 32) = v56;
        *(_QWORD *)(v60 + 40) = v58;
        swift_bridgeObjectRetain();
        sub_18CEC1594();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v59);

        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
        return 0;
      }
LABEL_44:
      swift_once();
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  v8 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v8, sel_currentProcess);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA180);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_18CF0B590;
  sub_18C86EEE0(0, (unint64_t *)&unk_1ECEAA0D8);
  *(_QWORD *)(v10 + 32) = sub_18C873EC8();
  *(_QWORD *)&v108 = v10;
  sub_18CEC19B4();
  v11 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
  v12 = sub_18C873F58(a1, a2, v9);
  objc_msgSend(v12, sel_addObserver_, v3);
  v13 = OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_assertion;
  v14 = *(void **)(v3
                 + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_assertion);
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_assertion) = v12;
  v15 = v12;

  *(_QWORD *)&v108 = 0;
  if (!objc_msgSend(v15, sel_acquireWithError_, &v108))
  {
    v101 = v15;
    v62 = (id)v108;
    v63 = (void *)sub_18CEC1360();

    swift_willThrow();
    v64 = *(void **)(v3 + v13);
    *(_QWORD *)(v3 + v13) = 0;

    if (qword_1ECEAA4A8 != -1)
      swift_once();
    v65 = (void *)qword_1ECEAA3A0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_18CF073C0;
    v67 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                    + 8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_18CF07380;
    swift_bridgeObjectRetain_n();
    v69 = v65;
    sub_18C8730C4(v67, v68 + 32);
    *(_QWORD *)(v66 + 32) = v68;
    swift_bridgeObjectRelease();
    sub_18C872FF8();
    v104 = v70;
    v71._countAndFlagsBits = 0xD00000000000002BLL;
    v71._object = (void *)0x800000018CEE5FC0;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v71);
    v72 = MEMORY[0x1E0DEA968];
    v113 = MEMORY[0x1E0DEA968];
    v111 = a1;
    v112 = a2;
    sub_18C873014((uint64_t)&v111, (uint64_t)v107, (uint64_t *)&unk_1ECEAA5F0);
    v105 = 0u;
    v106 = 0u;
    swift_bridgeObjectRetain();
    sub_18C872190((uint64_t)v107, (uint64_t)&v105, (uint64_t *)&unk_1ECEAA5F0);
    v110 = 0;
    v108 = v105;
    v109 = v106;
    v73 = v104;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_18C872FF8();
      v73 = v96;
    }
    v74 = *(_QWORD *)(v73 + 16);
    if (v74 >= *(_QWORD *)(v73 + 24) >> 1)
    {
      sub_18C872FF8();
      v73 = v97;
    }
    *(_QWORD *)(v73 + 16) = v74 + 1;
    v75 = v73 + 40 * v74;
    v76 = v108;
    v77 = v109;
    *(_BYTE *)(v75 + 64) = v110;
    *(_OWORD *)(v75 + 32) = v76;
    *(_OWORD *)(v75 + 48) = v77;
    sub_18C86752C((uint64_t)&v111, (uint64_t *)&unk_1ECEAA5F0);
    v78._countAndFlagsBits = 0x2068746977202C29;
    v78._object = (void *)0xEF203A726F727265;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v78);
    swift_getErrorValue();
    v113 = v102;
    v79 = __swift_allocate_boxed_opaque_existential_0(&v111);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v102 - 8) + 16))(v79);
    sub_18C873014((uint64_t)&v111, (uint64_t)v107, (uint64_t *)&unk_1ECEAA5F0);
    v105 = 0u;
    v106 = 0u;
    sub_18C872190((uint64_t)v107, (uint64_t)&v105, (uint64_t *)&unk_1ECEAA5F0);
    v110 = 0;
    v108 = v105;
    v109 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_18C872FF8();
      v73 = v98;
    }
    v80 = *(_QWORD *)(v73 + 16);
    if (v80 >= *(_QWORD *)(v73 + 24) >> 1)
    {
      sub_18C872FF8();
      v73 = v99;
    }
    *(_QWORD *)(v73 + 16) = v80 + 1;
    v81 = v73 + 40 * v80;
    v82 = v108;
    v83 = v109;
    *(_BYTE *)(v81 + 64) = v110;
    *(_OWORD *)(v81 + 32) = v82;
    *(_OWORD *)(v81 + 48) = v83;
    sub_18C86752C((uint64_t)&v111, (uint64_t *)&unk_1ECEAA5F0);
    v84._countAndFlagsBits = 46;
    v84._object = (void *)0xE100000000000000;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v84);
    *(_QWORD *)(v66 + 40) = v73;
    v85 = sub_18CEC1B94();
    if (os_log_type_enabled(v69, v85))
    {
      v86 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v87 = byte_1ECEA9E18;
      v88 = swift_allocObject();
      *(_BYTE *)(v88 + 16) = v87;
      *(_QWORD *)&v108 = v66;
      *((_QWORD *)&v108 + 1) = sub_18C84C730;
      *(_QWORD *)&v109 = v88;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v89 = sub_18CEC17C8();
      v91 = v90;
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v86);
      v92 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v93 + 56) = v72;
      *(_QWORD *)(v93 + 64) = sub_18C872FBC();
      *(_QWORD *)(v93 + 32) = v89;
      *(_QWORD *)(v93 + 40) = v91;
      swift_bridgeObjectRetain();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v92);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    return 0;
  }
  v16 = qword_1ECEAA4A8;
  v17 = (id)v108;
  if (v16 != -1)
    swift_once();
  v18 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_18CF073C0;
  v20 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                  + 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain_n();
  v22 = v18;
  sub_18C8730C4(v20, v21 + 32);
  *(_QWORD *)(v19 + 32) = v21;
  swift_bridgeObjectRelease();
  sub_18C872FF8();
  v103 = v23;
  v24._countAndFlagsBits = 0xD000000000000019;
  v24._object = (void *)0x800000018CEE5E00;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v24);
  v25 = MEMORY[0x1E0DEA968];
  v113 = MEMORY[0x1E0DEA968];
  v111 = a1;
  v112 = a2;
  sub_18C873014((uint64_t)&v111, (uint64_t)v107, (uint64_t *)&unk_1ECEAA5F0);
  v105 = 0u;
  v106 = 0u;
  swift_bridgeObjectRetain();
  sub_18C872190((uint64_t)v107, (uint64_t)&v105, (uint64_t *)&unk_1ECEAA5F0);
  v110 = 0;
  v108 = v105;
  v109 = v106;
  v26 = v103;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v26 = v94;
  }
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
  {
    sub_18C872FF8();
    v26 = v95;
  }
  *(_QWORD *)(v26 + 16) = v27 + 1;
  v28 = v26 + 40 * v27;
  v29 = v108;
  v30 = v109;
  *(_BYTE *)(v28 + 64) = v110;
  *(_OWORD *)(v28 + 32) = v29;
  *(_OWORD *)(v28 + 48) = v30;
  sub_18C86752C((uint64_t)&v111, (uint64_t *)&unk_1ECEAA5F0);
  v31._object = (void *)0x800000018CEE5FF0;
  v31._countAndFlagsBits = 0xD000000000000018;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v31);
  *(_QWORD *)(v19 + 40) = v26;
  v32 = sub_18CEC1B70();
  if (os_log_type_enabled(v22, v32))
  {
    v33 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v34 = byte_1ECEA9E18;
    v35 = swift_allocObject();
    *(_BYTE *)(v35 + 16) = v34;
    *(_QWORD *)&v108 = v19;
    *((_QWORD *)&v108 + 1) = sub_18C84C730;
    *(_QWORD *)&v109 = v35;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v36 = sub_18CEC17C8();
    v38 = v37;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v33);
    v39 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v40 + 56) = v25;
    *(_QWORD *)(v40 + 64) = sub_18C872FBC();
    *(_QWORD *)(v40 + 32) = v36;
    *(_QWORD *)(v40 + 40) = v38;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v39);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  swift_bridgeObjectRelease();

  return 1;
}

uint64_t sub_18C965A14(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  os_log_type_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t result;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[4];
  uint64_t v43;

  v2 = v1;
  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v4 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_18CF073C0;
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                 + 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain_n();
  v8 = v4;
  sub_18C8730C4(v6, v7 + 32);
  *(_QWORD *)(v5 + 32) = v7;
  swift_bridgeObjectRelease();
  sub_18C872FF8();
  v43 = v9;
  v10._object = (void *)0x800000018CEE5E00;
  v10._countAndFlagsBits = 0xD000000000000019;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v10);
  v11 = objc_msgSend(a1, sel_explanation);
  v12 = sub_18CEC181C();
  v14 = v13;

  v15 = MEMORY[0x1E0DEA968];
  v42[3] = MEMORY[0x1E0DEA968];
  v42[0] = v12;
  v42[1] = v14;
  sub_18C873014((uint64_t)v42, (uint64_t)v38, (uint64_t *)&unk_1ECEAA5F0);
  v36 = 0u;
  v37 = 0u;
  sub_18C872190((uint64_t)v38, (uint64_t)&v36, (uint64_t *)&unk_1ECEAA5F0);
  v41 = 0;
  v39 = v36;
  v40 = v37;
  v16 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v16 = v34;
  }
  v17 = *(_QWORD *)(v16 + 16);
  if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
  {
    sub_18C872FF8();
    v16 = v35;
  }
  *(_QWORD *)(v16 + 16) = v17 + 1;
  v18 = v16 + 40 * v17;
  v19 = v39;
  v20 = v40;
  *(_BYTE *)(v18 + 64) = v41;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = v20;
  v43 = v16;
  sub_18C86752C((uint64_t)v42, (uint64_t *)&unk_1ECEAA5F0);
  v21._countAndFlagsBits = 0xD000000000000020;
  v21._object = (void *)0x800000018CEE62A0;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v21);
  *(_QWORD *)(v5 + 40) = v43;
  v22 = sub_18CEC1B88();
  if (os_log_type_enabled(v8, v22))
  {
    v23 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v24 = byte_1ECEA9E18;
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v24;
    *(_QWORD *)&v39 = v5;
    *((_QWORD *)&v39 + 1) = sub_18C84C730;
    *(_QWORD *)&v40 = v25;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v26 = sub_18CEC17C8();
    v28 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v23);
    v29 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v30 + 56) = v15;
    *(_QWORD *)(v30 + 64) = sub_18C872FBC();
    *(_QWORD *)(v30 + 32) = v26;
    *(_QWORD *)(v30 + 40) = v28;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v29);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  result = swift_bridgeObjectRelease();
  v32 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_invalidationHandler);
  if (v32)
  {
    v33 = swift_retain();
    v32(v33);
    return sub_18C8735E4((uint64_t)v32);
  }
  return result;
}

uint64_t sub_18C965E84(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  Swift::String v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  Swift::String v29;
  os_log_type_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[32];
  __int128 v48;
  __int128 v49;
  char v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v5 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_18CF073C0;
  v7 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941621RBSAssertionComponent_logKey
                 + 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain_n();
  v9 = v5;
  sub_18C8730C4(v7, v8 + 32);
  *(_QWORD *)(v6 + 32) = v8;
  swift_bridgeObjectRelease();
  sub_18C872FF8();
  v53 = v10;
  v11._object = (void *)0x800000018CEE5E00;
  v11._countAndFlagsBits = 0xD000000000000019;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v11);
  v12 = objc_msgSend(a1, sel_explanation);
  v13 = sub_18CEC181C();
  v15 = v14;

  v16 = MEMORY[0x1E0DEA968];
  *((_QWORD *)&v52 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v51 = v13;
  *((_QWORD *)&v51 + 1) = v15;
  sub_18C873014((uint64_t)&v51, (uint64_t)v47, (uint64_t *)&unk_1ECEAA5F0);
  v45 = 0u;
  v46 = 0u;
  sub_18C872190((uint64_t)v47, (uint64_t)&v45, (uint64_t *)&unk_1ECEAA5F0);
  v50 = 0;
  v48 = v45;
  v49 = v46;
  v17 = v53;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v17 = v40;
  }
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
  {
    sub_18C872FF8();
    v17 = v41;
  }
  *(_QWORD *)(v17 + 16) = v18 + 1;
  v19 = v17 + 40 * v18;
  v20 = v48;
  v21 = v49;
  *(_BYTE *)(v19 + 64) = v50;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = v21;
  v53 = v17;
  sub_18C86752C((uint64_t)&v51, (uint64_t *)&unk_1ECEAA5F0);
  v22._countAndFlagsBits = 0xD00000000000001DLL;
  v22._object = (void *)0x800000018CEE6280;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v22);
  if (a2)
  {
    swift_getErrorValue();
    *((_QWORD *)&v52 + 1) = v44;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v51);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v44 - 8) + 16))(boxed_opaque_existential_0);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  sub_18C873014((uint64_t)&v51, (uint64_t)v47, (uint64_t *)&unk_1ECEAA5F0);
  v45 = 0u;
  v46 = 0u;
  sub_18C872190((uint64_t)v47, (uint64_t)&v45, (uint64_t *)&unk_1ECEAA5F0);
  v50 = 0;
  v48 = v45;
  v49 = v46;
  v24 = v53;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_18C872FF8();
    v24 = v42;
  }
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 >= *(_QWORD *)(v24 + 24) >> 1)
  {
    sub_18C872FF8();
    v24 = v43;
  }
  *(_QWORD *)(v24 + 16) = v25 + 1;
  v26 = v24 + 40 * v25;
  v27 = v48;
  v28 = v49;
  *(_BYTE *)(v26 + 64) = v50;
  *(_OWORD *)(v26 + 32) = v27;
  *(_OWORD *)(v26 + 48) = v28;
  v53 = v24;
  sub_18C86752C((uint64_t)&v51, (uint64_t *)&unk_1ECEAA5F0);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v29);
  *(_QWORD *)(v6 + 40) = v53;
  v30 = sub_18CEC1B88();
  if (os_log_type_enabled(v9, v30))
  {
    v31 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v32 = byte_1ECEA9E18;
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = v32;
    *(_QWORD *)&v48 = v6;
    *((_QWORD *)&v48 + 1) = sub_18C84C730;
    *(_QWORD *)&v49 = v33;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v34 = sub_18CEC17C8();
    v36 = v35;
    swift_release();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v31);
    v37 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v38 + 56) = v16;
    *(_QWORD *)(v38 + 64) = sub_18C872FBC();
    *(_QWORD *)(v38 + 32) = v34;
    *(_QWORD *)(v38 + 40) = v36;
    swift_bridgeObjectRetain();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v37);

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C9663F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_18CEC1870();
  v1 = os_transaction_create();
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  swift_unknownObjectRelease();
  return 1;
}

void sub_18C96643C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_signpost_type_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;

  v1 = sub_18CEC15E8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA398);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18CEC15B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0
      + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941619OSSignpostComponent_signpostID;
  swift_beginAccess();
  sub_18C873014(v12, (uint64_t)v7, &qword_1ECEAA398);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_18C86752C((uint64_t)v7, &qword_1ECEAA398);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    if (qword_1ECEAA1E8 != -1)
      swift_once();
    v13 = (id)qword_1ECEAA240;
    sub_18CEC15D0();
    v14 = sub_18CEC15DC();
    v15 = sub_18CEC1C00();
    if ((sub_18CEC1C3C() & 1) != 0)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = sub_18CEC15AC();
      _os_signpost_emit_with_name_impl(&dword_18C849000, v14, v15, v17, "KeepAlive invalidation warning", "", v16, 2u);
      MEMORY[0x18D78AC14](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_18C966674(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_signpost_id_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _BYTE v30[12];
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void (*v35)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];

  v3 = v2;
  v36 = a1;
  v37 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA398);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_18CEC15B8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v30[-v12];
  v14 = sub_18CEC15E8();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ECEAA1E8 != -1)
    swift_once();
  v17 = (id)qword_1ECEAA240;
  sub_18CEC15D0();
  LODWORD(v18) = sub_18CEC15C4();
  if ((v18 & 1) != 0)
  {
    sub_18CEC15DC();
    swift_unknownObjectRetain();
    sub_18CEC15A0();
    v35 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
    v35(v6, v13, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    v19 = v2
        + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941619OSSignpostComponent_signpostID;
    swift_beginAccess();
    sub_18C872190((uint64_t)v6, v19, &qword_1ECEAA398);
    swift_endAccess();
    v20 = v37;
    swift_bridgeObjectRetain_n();
    v21 = sub_18CEC15DC();
    v34 = sub_18CEC1BF4();
    if ((sub_18CEC1C3C() & 1) != 0)
    {
      v35(v11, v13, v7);
      v32 = v8;
      v22 = swift_slowAlloc();
      v31 = (int)v18;
      v18 = (uint8_t *)v22;
      v23 = swift_slowAlloc();
      v33 = v2;
      v24 = v23;
      v41[0] = v23;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      v40 = sub_18C8735F4(v36, v20, v41);
      v8 = v32;
      sub_18CEC1C60();
      swift_bridgeObjectRelease_n();
      v25 = sub_18CEC15AC();
      _os_signpost_emit_with_name_impl(&dword_18C849000, v21, (os_signpost_type_t)v34, v25, "KeepAlive", "%s", v18, 0xCu);
      swift_arrayDestroy();
      v26 = v24;
      v3 = v33;
      MEMORY[0x18D78AC14](v26, -1, -1);
      v27 = v18;
      LOBYTE(v18) = v31;
      MEMORY[0x18D78AC14](v27, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v35(v11, v13, v7);
    sub_18CEC1618();
    swift_allocObject();
    v28 = sub_18CEC160C();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v16, v39);
    *(_QWORD *)(v3
              + OBJC_IVAR____TtCV18AppleMediaServices9KeepAliveP33_8D5EA5EE57B6E86A66C300315FB9941619OSSignpostComponent_signpostIntervalState) = v28;
    swift_release();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v16, v39);
  }
  return v18 & 1;
}

uint64_t sub_18C966A58()
{
  return type metadata accessor for KeepAlive.OSSignpostComponent();
}

unint64_t sub_18C966A60(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

void sub_18C966A70()
{
  sub_18C963E58();
}

void sub_18C966A88()
{
  sub_18C96455C();
}

unint64_t sub_18C966AA0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_18C966A60(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_18C966B08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AMSRBSKeepAlive_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18C966B60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMSRBSKeepAlive_style);
}

void sub_18C966B70(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  OUTLINED_FUNCTION_163();
  sub_18C894AC8(a1, a2, 0);
  OUTLINED_FUNCTION_253();
}

uint64_t sub_18C966C10(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v11 = sub_18CEC169C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_16_14();
  if (a3 >= 4)
  {
    result = OUTLINED_FUNCTION_18_16();
    __break(1u);
  }
  else
  {
    v13 = qword_18CF0B560[a3];
    sub_18CEC1678();
    sub_18C9647F8(a1, a2, v13, v5, a4, a5);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v5, v11);
  }
  return result;
}

uint64_t sub_18C966D60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9F38);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_16_14();
  v14 = sub_18CEC169C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_17_13();
  if (a3 < 4)
  {
    v16 = qword_18CF0B560[a3];
    sub_18CEC1660();
    v17 = sub_18CEC166C();
    if (__swift_getEnumTagSinglePayload(v7, 1, v17) != 1)
    {
      sub_18CEC1690();
      sub_18C9647F8(a1, a2, v16, v8, a6, a7);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v8, v14);
    }
    __break(1u);
  }
  result = OUTLINED_FUNCTION_18_16();
  __break(1u);
  return result;
}

void sub_18C966F38()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for KeepAlive._Objc()
{
  return objc_opt_self();
}

void type metadata accessor for KeepAlive._Objc.Style()
{
  OUTLINED_FUNCTION_175();
}

_QWORD *sub_18C966F9C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_18C966FC8()
{
  return swift_release();
}

_QWORD *sub_18C966FD0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_18C967008(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_18C967038(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_18C96708C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for KeepAlive()
{
  OUTLINED_FUNCTION_175();
}

unint64_t sub_18C9670EC()
{
  unint64_t result;

  result = qword_1EE055F80;
  if (!qword_1EE055F80)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B328, &unk_1E251E0C8);
    atomic_store(result, (unint64_t *)&qword_1EE055F80);
  }
  return result;
}

void sub_18C967128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055F90);
    v4 = (_QWORD *)OUTLINED_FUNCTION_2();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_0();
}

void sub_18C967184(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_18CEC1900();
    OUTLINED_FUNCTION_14_18(v4);
  }
  else
  {
    v3 = MEMORY[0x18D7883B8](15, a1 >> 16);
    OUTLINED_FUNCTION_14_18(v3);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C9671E0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18C967204()
{
  return swift_deallocObject();
}

uint64_t sub_18C967214()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_18C967234()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18C967258()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C967284()
{
  uint64_t v0;

  return sub_18C964B8C(*(uint64_t (**)(void))(v0 + 16));
}

void *sub_18C967290(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_18CEC1EE8();
  __break(1u);
  return result;
}

uint64_t sub_18C967354(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_18C9673E8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_18C967558(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_18C967558((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_18C9673E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_18CEC18C4();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  sub_18C967128(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_18CEC1D98();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_18CEC1EE8();
  __break(1u);
LABEL_14:
  result = sub_18CEC1EA0();
  __break(1u);
  return result;
}

char *sub_18C967558(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055F90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_18C9676F0(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_18C96762C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_18C96762C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_18CEC1EE8();
  __break(1u);
  return result;
}

char *sub_18C9676F0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_18CEC1EE8();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_18C967770()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_18C967794()
{
  sub_18C96643C();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for KeepAlive.Style()
{
  OUTLINED_FUNCTION_175();
}

unint64_t sub_18C9677E0()
{
  unint64_t result;

  result = qword_1EE055F98;
  if (!qword_1EE055F98)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B3F8, &unk_1E251E0A0);
    atomic_store(result, (unint64_t *)&qword_1EE055F98);
  }
  return result;
}

unint64_t sub_18C967820()
{
  unint64_t result;

  result = qword_1EE055FA0;
  if (!qword_1EE055FA0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B3C8, &unk_1E251E0A0);
    atomic_store(result, (unint64_t *)&qword_1EE055FA0);
  }
  return result;
}

unint64_t sub_18C967860()
{
  unint64_t result;

  result = qword_1EE055FA8;
  if (!qword_1EE055FA8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B420, &unk_1E251E0A0);
    atomic_store(result, (unint64_t *)&qword_1EE055FA8);
  }
  return result;
}

unint64_t sub_18C9678A0()
{
  unint64_t result;

  result = qword_1EE055FB0;
  if (!qword_1EE055FB0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0B458, &unk_1E251E0A0);
    atomic_store(result, (unint64_t *)&qword_1EE055FB0);
  }
  return result;
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(optional:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_18CEC1C54();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return sub_18CEC18AC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, a2);
    sub_18CEC2044();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
}

uint64_t Log.fault(_:)(uint64_t a1)
{
  return sub_18C86B894(a1, MEMORY[0x1E0DF2288]);
}

uint64_t Log.error(_:)(uint64_t a1)
{
  return sub_18C86B894(a1, MEMORY[0x1E0DF2280]);
}

uint64_t Log.init(subsystem:category:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  id v10;
  uint64_t result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v10 = sub_18C87DB24(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_96();
  *a5 = v10;
  return result;
}

unint64_t LogCategory.init(rawValue:)(unint64_t result)
{
  if (result > 0x32)
    return 0;
  return result;
}

unint64_t sub_18C967AE8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = LogCategory.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id static Log.accounts.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1ECEA9860, (void **)&qword_1ECEA98F0, a1);
}

id sub_18C967B34()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD00000000000001FLL, 0x800000018CEE6550);
  qword_1EE055FC0 = (uint64_t)result;
  return result;
}

id static Log.accountsAuthenticationPlugin.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054618, (void **)&qword_1EE055FC0, a1);
}

id sub_18C967BD8()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000010, 0x800000018CEE6530);
  qword_1EE055FC8 = (uint64_t)result;
  return result;
}

id static Log.accountsCookies.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054620, (void **)&qword_1EE055FC8, a1);
}

id sub_18C967C7C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x73746E756F636361, 0xEF6E6F6D6561642ELL);
  qword_1EE053628 = (uint64_t)result;
  return result;
}

void sub_18C967D08()
{
  if (qword_1ECEAA668 != -1)
    swift_once();
  qword_1EE0535D0 = (uint64_t)sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000012, 0x800000018CEE6510);
  OUTLINED_FUNCTION_0();
}

id sub_18C967D8C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x73746E756F636361, 0xEF74756F676F6C2ELL);
  qword_1EE055FD0 = (uint64_t)result;
  return result;
}

id static Log.accountsLogout.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054628, (void **)&qword_1EE055FD0, a1);
}

id sub_18C967E34()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000012, 0x800000018CEE64F0);
  qword_1EE055FD8 = (uint64_t)result;
  return result;
}

id static Log.accountsMigration.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054630, (void **)&qword_1EE055FD8, a1);
}

id sub_18C967ED8()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD00000000000001BLL, 0x800000018CEE64D0);
  qword_1EE055FE0 = (uint64_t)result;
  return result;
}

id static Log.accountsMigrationOversize.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054638, (void **)&qword_1EE055FE0, a1);
}

id sub_18C967F7C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000012, 0x800000018CEE64B0);
  qword_1EE055FE8 = (uint64_t)result;
  return result;
}

id static Log.accountsMultiUser.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054640, (void **)&qword_1EE055FE8, a1);
}

id sub_18C968020()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD00000000000001DLL, 0x800000018CEE6490);
  qword_1EE055FF0 = (uint64_t)result;
  return result;
}

id static Log.accountsNotificationPlugin.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054648, (void **)&qword_1EE055FF0, a1);
}

id sub_18C9680C4()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000011, 0x800000018CEE6470);
  qword_1EE055FF8 = (uint64_t)result;
  return result;
}

id static Log.accountsOversize.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE054650, (void **)&qword_1EE055FF8, a1);
}

void sub_18C968168()
{
  unint64_t v0;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_12_15();
  qword_1ECEA9B28 = (uint64_t)OUTLINED_FUNCTION_3_28(v0, 0x800000018CEE1740, (uint64_t)"accounts.storefront");
  OUTLINED_FUNCTION_0();
}

id static Log.accountsStorefront.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1ECEA9B18, (void **)&qword_1ECEA9B28, a1);
}

id sub_18C9681F0()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000015, 0x800000018CEE6430);
  qword_1EE056000 = (uint64_t)result;
  return result;
}

id static Log.accountsSyncPlugin.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054660, (void **)&qword_1EE056000, a1);
}

void sub_18C968294()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_6_23();
  qword_1EE056008 = (uint64_t)sub_18C87DB24(v0, v1, v2, 0xE600000000000000);
  OUTLINED_FUNCTION_0();
}

id static Log.action.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054668, (void **)&qword_1EE056008, a1);
}

void sub_18C968310()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_6_23();
  qword_1EE056010 = (uint64_t)sub_18C87DB24(v0, v2, v1 & 0xFFFFFFFFFFFFLL | 0x722D000000000000, 0xED000072656E6E75);
  OUTLINED_FUNCTION_0();
}

id static Log.actionRunner.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054670, (void **)&qword_1EE056010, a1);
}

id sub_18C96839C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000011, 0x800000018CEE6410);
  qword_1EE056018 = (uint64_t)result;
  return result;
}

id static Log.anisette.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054678, (void **)&qword_1EE056018, a1);
}

id sub_18C968440()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000014, 0x800000018CEE63F0);
  qword_1EE056020 = (uint64_t)result;
  return result;
}

id static Log.attestation.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE054680, (void **)&qword_1EE056020, a1);
}

id static Log.bag.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1ECEAA288, (void **)&qword_1ECEAA2B0, a1);
}

id sub_18C968500()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x686361632E676162, 0xE900000000000065);
  qword_1EE056028 = (uint64_t)result;
  return result;
}

id static Log.bagCache.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054690, (void **)&qword_1EE056028, a1);
}

id sub_18C9685A0()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x697274656D6F6962, 0xEA00000000007363);
  qword_1EE056030 = (uint64_t)result;
  return result;
}

id static Log.biometrics.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054698, (void **)&qword_1EE056030, a1);
}

void sub_18C968640()
{
  unint64_t v0;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_12_15();
  off_1EE056038 = OUTLINED_FUNCTION_3_28(v0, 0x800000018CEE1740, (uint64_t)"campaign-attributor");
  OUTLINED_FUNCTION_0();
}

id static Log.campaignAttributor.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546A0, (void **)&off_1EE056038, a1);
}

id sub_18C9686C8()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x7669746341736164, 0xEB00000000797469);
  qword_1EE0535A8 = (uint64_t)result;
  return result;
}

id static Log.dasActivity.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE0535B8, (void **)&qword_1EE0535A8, a1);
}

id sub_18C96876C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x7267696D61746164, 0xED00006E6F697461);
  qword_1EE056040 = (uint64_t)result;
  return result;
}

id static Log.dataMigration.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546B0, (void **)&qword_1EE056040, a1);
}

id sub_18C968814()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6E654D6775626564, 0xE900000000000075);
  qword_1EE056048 = (uint64_t)result;
  return result;
}

id static Log.debugMenu.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546B8, (void **)&qword_1EE056048, a1);
}

void sub_18C9688B4()
{
  unint64_t v0;
  uint64_t v1;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_19();
  qword_1EE056050 = (uint64_t)sub_18C87DB24(v0, v1, 0x666F656369766564, 0xEC00000073726566);
  OUTLINED_FUNCTION_0();
}

id static Log.deviceOffers.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546C0, (void **)&qword_1EE056050, a1);
}

void sub_18C968948()
{
  unint64_t v0;
  uint64_t v1;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_19();
  qword_1EE054450 = (uint64_t)sub_18C87DB24(v0, v1, 0x656D656761676E65, 0xEA0000000000746ELL);
  OUTLINED_FUNCTION_0();
}

id static Log.engagement.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054458, (void **)&qword_1EE054450, a1);
}

id sub_18C9689D8()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x7075776F6C6C6F66, 0xE800000000000000);
  qword_1EE056058 = (uint64_t)result;
  return result;
}

id static Log.followUp.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE0546D0, (void **)&qword_1EE056058, a1);
}

id static Log.general.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1ECEAA4A8, (void **)&qword_1ECEAA3A0, a1);
}

id sub_18C968A90()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6E6961686379656BLL, 0xE800000000000000);
  qword_1EE056060 = (uint64_t)result;
  return result;
}

id static Log.keychain.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546E0, (void **)&qword_1EE056060, a1);
}

id sub_18C968B2C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6E6974656B72616DLL, 0xED00006D65746967);
  qword_1EE056068 = (uint64_t)result;
  return result;
}

id static Log.marketingItem.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546E8, (void **)&qword_1EE056068, a1);
}

id sub_18C968BD4()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x616964656DLL, 0xE500000000000000);
  qword_1EE056070 = (uint64_t)result;
  return result;
}

id static Log.media.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0546F0, (void **)&qword_1EE056070, a1);
}

id sub_18C968C6C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x63612E616964656DLL, 0xE900000000000069);
  qword_1EE056078 = (uint64_t)result;
  return result;
}

id static Log.mediaAccessControlIdentifier.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE0546F8, (void **)&qword_1EE056078, a1);
}

id sub_18C968D0C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000022, 0x800000018CEE63A0);
  qword_1EE0544F8 = (uint64_t)result;
  return result;
}

id static Log.mediaServiceOwner.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE0544F0, (void **)&qword_1EE0544F8, a1);
}

void sub_18C968DB0()
{
  unint64_t v0;
  uint64_t v1;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_19();
  qword_1EE056080 = (uint64_t)OUTLINED_FUNCTION_9_20(v0, v1, 0x7363697274656DLL);
  OUTLINED_FUNCTION_0();
}

id static Log.metrics.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054708, (void **)&qword_1EE056080, a1);
}

id sub_18C968E38()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6E6967617373656DLL, 0xEC00000069752D67);
  qword_1EE056088 = (uint64_t)result;
  return result;
}

id static Log.messagingUI.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054710, (void **)&qword_1EE056088, a1);
}

id sub_18C968EDC()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x7265766F2E736D61, 0xEC000000657A6973);
  qword_1EE056090 = (uint64_t)result;
  return result;
}

id static Log.oversize.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054718, (void **)&qword_1EE056090, a1);
}

void sub_18C968F80()
{
  unint64_t v0;
  uint64_t v1;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_19();
  qword_1EE056098 = (uint64_t)OUTLINED_FUNCTION_9_20(v0, v1, 0x79636176697270);
  OUTLINED_FUNCTION_0();
}

id static Log.privacy.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054720, (void **)&qword_1EE056098, a1);
}

id sub_18C969008()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6573696D6F7270, 0xE700000000000000);
  qword_1EE0560A0 = (uint64_t)result;
  return result;
}

id static Log.promise.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054728, (void **)&qword_1EE0560A0, a1);
}

id sub_18C9690A4()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6573616863727570, 0xE800000000000000);
  qword_1EE0560A8 = (uint64_t)result;
  return result;
}

id static Log.purchase.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054730, (void **)&qword_1EE0560A8, a1);
}

id sub_18C969140()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000010, 0x800000018CEE6380);
  qword_1EE0560B0 = (uint64_t)result;
  return result;
}

id static Log.pushNotification.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054738, (void **)&qword_1EE0560B0, a1);
}

id sub_18C9691E4()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x7073676E69746172, 0xEF72656469766F72);
  qword_1EE0560B8 = (uint64_t)result;
  return result;
}

id static Log.ratingsProvider.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054740, (void **)&qword_1EE0560B8, a1);
}

id sub_18C96928C()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000015, 0x800000018CEE6360);
  qword_1EE0560C0 = (uint64_t)result;
  return result;
}

id static Log.regulatoryEligiblity.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054748, (void **)&qword_1EE0560C0, a1);
}

id sub_18C969330()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x73776569766572, 0xE700000000000000);
  qword_1EE0560C8 = (uint64_t)result;
  return result;
}

id static Log.reviews.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054750, (void **)&qword_1EE0560C8, a1);
}

id sub_18C9693CC()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000011, 0x800000018CEE6340);
  qword_1EE0560D0 = (uint64_t)result;
  return result;
}

id static Log.serverDataCache.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE054758, (void **)&qword_1EE0560D0, a1);
}

id static Log.storeReviewGating.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1ECEA9470, (void **)&qword_1ECEA9460, a1);
}

void sub_18C96948C()
{
  unint64_t v0;
  uint64_t v1;

  if (qword_1ECEAA668 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_19();
  qword_1EE0560D8 = (uint64_t)OUTLINED_FUNCTION_9_20(v0, v1, 0x44496563617274);
  OUTLINED_FUNCTION_0();
}

id static Log.traceID.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054768, (void **)&qword_1EE0560D8, a1);
}

id sub_18C969514()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x6E656D7461657274, 0xEA00000000007374);
  qword_1EE0560E0 = (uint64_t)result;
  return result;
}

id static Log.treatments.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054770, (void **)&qword_1EE0560E0, a1);
}

id sub_18C9695B4()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x64616F6C2D6C7275, 0xEB00000000676E69);
  qword_1EE0560E8 = (uint64_t)result;
  return result;
}

id static Log.urlLoading.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054778, (void **)&qword_1EE0560E8, a1);
}

id sub_18C969658()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0xD000000000000010, 0x800000018CEE6300);
  qword_1EE0560F0 = (uint64_t)result;
  return result;
}

id static Log.userNotification.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054780, (void **)&qword_1EE0560F0, a1);
}

id sub_18C9696FC()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x69752D626577, 0xE600000000000000);
  qword_1EE0560F8 = (uint64_t)result;
  return result;
}

id static Log.webUI.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(&qword_1EE054788, (void **)&qword_1EE0560F8, a1);
}

id sub_18C969794()
{
  id result;

  if (qword_1ECEAA668 != -1)
    swift_once();
  result = sub_18C87DB24(0xD00000000000001CLL, 0x800000018CEE1740, 0x65722D6475617266, 0xEC00000074726F70);
  qword_1EE056100 = (uint64_t)result;
  return result;
}

id static Log.fraudReport.getter@<X0>(void **a1@<X8>)
{
  return sub_18C900E18(qword_1EE054790, (void **)&qword_1EE056100, a1);
}

unint64_t static Log.amsSubsystem.getter()
{
  return OUTLINED_FUNCTION_1_19();
}

id Log.osLog.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_18C969858()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_68_0();
  return swift_bridgeObjectRelease();
}

void sub_18C9698B8()
{
  sub_18CEC211C();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_96();
  sub_18CEC214C();
  OUTLINED_FUNCTION_2_3();
}

void sub_18C969918()
{
  sub_18C9698B8();
}

uint64_t sub_18C969924()
{
  return sub_18C969858();
}

uint64_t sub_18C969930()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_18C969954()
{
  sub_18C969930();
  return swift_deallocClassInstance();
}

unint64_t sub_18C96998C()
{
  unint64_t result;

  result = qword_1EE056108;
  if (!qword_1EE056108)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogCategory, &type metadata for LogCategory);
    atomic_store(result, (unint64_t *)&qword_1EE056108);
  }
  return result;
}

void type metadata accessor for LogCategory()
{
  OUTLINED_FUNCTION_175();
}

id AMSLogBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AMSLogBridge.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AMSLogBridge();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AMSLogBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AMSLogBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AMSLogBridge()
{
  return objc_opt_self();
}

void static LogInterpolation.prefix<A>(_:_:)(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v4 = OUTLINED_FUNCTION_1_2();
  *(_OWORD *)(v4 + 16) = xmmword_18CF07380;
  swift_bridgeObjectRetain();
  sub_18C969D9C(a1, v4 + 32);
  *a2 = v4;
}

void LogInterpolation.StringInterpolation.appendInterpolation(sensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v7 = OUTLINED_FUNCTION_14_20(a1, a2, a3, a4, a5, a6, a7);
  v15 = OUTLINED_FUNCTION_1_20(v7, v8, v9, v10, v11, v12, v13, v14, v23, v25, v27, v28, v29);
  OUTLINED_FUNCTION_8_18(v15, v16, v17, v18, v19, v20, v21, v22, v24, v26);
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_7_19();
}

uint64_t static LogInterpolation.describe(contentsOf:withRedaction:separator:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = a2;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18_17();
  OUTLINED_FUNCTION_21_13((unint64_t *)&qword_1ECEAA580, v2, &qword_1ECEAA620, &qword_1ECEAA600);
  v3 = sub_18CEC17C8();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

BOOL static LogInterpolation.ValueTreatment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LogInterpolation.ValueTreatment.hash(into:)()
{
  return sub_18CEC2128();
}

uint64_t LogInterpolation.ValueTreatment.hashValue.getter()
{
  sub_18CEC211C();
  sub_18CEC2128();
  return sub_18CEC214C();
}

uint64_t sub_18C969CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;
  uint64_t v9;

  sub_18CEC17D4();
  sub_18C96A94C();
  sub_18CEC1924();
  swift_getObjectType();
  *(_QWORD *)&v5 = sub_18CEC21E8();
  *((_QWORD *)&v5 + 1) = v2;
  sub_18CEC18AC();
  sub_18CEC18AC();
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x1E0DEA968];
  v8 = v5;
  v5 = 0u;
  v6 = 0u;
  sub_18C872148((uint64_t)&v8, (uint64_t)&v5);
  v7 = 0;
  *(_BYTE *)(a1 + 32) = 0;
  v3 = v6;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v3;
  return swift_unknownObjectRelease();
}

double sub_18C969D9C@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if (a1)
  {
    *(_QWORD *)&v7 = sub_18CEC21E8();
    *((_QWORD *)&v7 + 1) = v3;
    sub_18CEC18AC();
    sub_18CEC18AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v7 = sub_18CEC21E8();
    *((_QWORD *)&v7 + 1) = v4;
  }
  sub_18CEC18AC();
  v10 = MEMORY[0x1E0DEA968];
  v9 = v7;
  v7 = 0u;
  v8 = 0u;
  sub_18C872148((uint64_t)&v9, (uint64_t)&v7);
  *(_BYTE *)(a2 + 32) = 0;
  result = *(double *)&v7;
  v6 = v8;
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t static LogInterpolation.isRedactionEnabled.getter()
{
  if (qword_1ECEAA560 != -1)
    swift_once();
  return byte_1ECEA9E18;
}

uint64_t static LogInterpolation.identity(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_19_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v1 = OUTLINED_FUNCTION_1_2();
  *(_OWORD *)(v1 + 16) = xmmword_18CF07380;
  swift_unknownObjectRetain();
  result = sub_18C969CB4(v1 + 32);
  *v0 = v1;
  return result;
}

uint64_t static LogInterpolation.values(of:withRedaction:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int8 v35;
  _OWORD v36[2];
  _BYTE v37[40];

  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
    return MEMORY[0x1E0DEE9D8];
  v30 = a1;
  v31 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEA968];
  do
  {
    v6 = *(_QWORD *)(v31 + 8 * v3);
    v7 = *(_QWORD *)(v6 + 16);
    if (!v7)
      goto LABEL_23;
    v8 = v6 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_18C96A2DC(v8, (uint64_t)v37);
      sub_18C872D48((uint64_t)v37, (uint64_t)&v33);
      if (!v34)
      {
        sub_18C86752C((uint64_t)&v33, (uint64_t *)&unk_1ECEAA5F0);
        goto LABEL_10;
      }
      sub_18C872D90(&v33, v36);
      sub_18C96A2DC((uint64_t)v37, (uint64_t)&v33);
      if ((a2 & 1) != 0)
      {
        v9 = v35;
        sub_18C96A310((uint64_t)&v33);
        if (v9)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
LABEL_10:
          v10 = sub_18C8726B4(1);
          v34 = v5;
          *(_QWORD *)&v33 = v10;
          *((_QWORD *)&v33 + 1) = v11;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_10_21();
            v4 = isUniquelyReferenced_nonNull_native;
          }
          if (*(_QWORD *)(v4 + 16) >= *(_QWORD *)(v4 + 24) >> 1)
          {
            OUTLINED_FUNCTION_10_21();
            v4 = isUniquelyReferenced_nonNull_native;
          }
          OUTLINED_FUNCTION_11_22(isUniquelyReferenced_nonNull_native, v13, v14, v15, v16, v17, v18, v19, v29, v30, v31, v32, v33);
          goto LABEL_21;
        }
      }
      else
      {
        sub_18C96A310((uint64_t)&v33);
      }
      sub_18C872C64((uint64_t)v36, (uint64_t)&v33);
      v20 = swift_isUniquelyReferenced_nonNull_native();
      if ((v20 & 1) == 0)
      {
        OUTLINED_FUNCTION_10_21();
        v4 = v20;
      }
      if (*(_QWORD *)(v4 + 16) >= *(_QWORD *)(v4 + 24) >> 1)
      {
        OUTLINED_FUNCTION_10_21();
        v4 = v20;
      }
      OUTLINED_FUNCTION_11_22(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
LABEL_21:
      sub_18C96A310((uint64_t)v37);
      v8 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
LABEL_23:
    ++v3;
  }
  while (v3 != v32);
  swift_bridgeObjectRelease();
  return v4;
}

void LogInterpolation.StringInterpolation.appendInterpolation(traceableSensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v7 = OUTLINED_FUNCTION_14_20(a1, a2, a3, a4, a5, a6, a7);
  v15 = OUTLINED_FUNCTION_1_20(v7, v8, v9, v10, v11, v12, v13, v14, v23, v25, v27, v28, v29);
  OUTLINED_FUNCTION_8_18(v15, v16, v17, v18, v19, v20, v21, v22, v24, v26);
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_7_19();
}

double LogInterpolation.StringInterpolation.appendInterpolation(identity:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  swift_unknownObjectRetain();
  sub_18C969CB4((uint64_t)v6);
  sub_18C872F1C();
  OUTLINED_FUNCTION_2_27();
  v2 = *v1;
  *(_QWORD *)(v2 + 16) = v0 + 1;
  v3 = v2 + 40 * v0;
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)(v3 + 32) = v6[0];
  *(_OWORD *)(v3 + 48) = v5;
  *(_BYTE *)(v3 + 64) = v7;
  *v1 = v2;
  return result;
}

void sub_18C96A1D4(Swift::String *a1)
{
  LogInterpolation.StringInterpolation.appendLiteral(_:)(*a1);
}

uint64_t LogInterpolation.description.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ECEAA560 != -1)
    swift_once();
  v0 = byte_1ECEA9E18;
  *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = v0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18_17();
  OUTLINED_FUNCTION_21_13(&qword_1ECEAA628, v1, &qword_1ECEAA618, &qword_1ECEAA610);
  OUTLINED_FUNCTION_20_13();
  v2 = sub_18CEC17C8();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

AppleMediaServices::LogInterpolation sub_18C96A2CC(Swift::String *a1)
{
  return LogInterpolation.init(stringLiteral:)(*a1);
}

uint64_t sub_18C96A2DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LogInterpolation.Component(a2, a1);
  return a2;
}

uint64_t sub_18C96A310(uint64_t a1)
{
  destroy for LogInterpolation.Component(a1);
  return a1;
}

unint64_t sub_18C96A344()
{
  unint64_t result;

  result = qword_1EE056110;
  if (!qword_1EE056110)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogInterpolation.ValueTreatment, &type metadata for LogInterpolation.ValueTreatment);
    atomic_store(result, (unint64_t *)&qword_1EE056110);
  }
  return result;
}

uint64_t sub_18C96A380()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_18C96A390()
{
  unint64_t result;

  result = qword_1EE056118;
  if (!qword_1EE056118)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogInterpolation, &type metadata for LogInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EE056118);
  }
  return result;
}

unint64_t sub_18C96A3D0()
{
  unint64_t result;

  result = qword_1EE056120;
  if (!qword_1EE056120)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogInterpolation.StringInterpolation, &type metadata for LogInterpolation.StringInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EE056120);
  }
  return result;
}

unint64_t sub_18C96A410()
{
  unint64_t result;

  result = qword_1EE056128;
  if (!qword_1EE056128)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogInterpolation, &type metadata for LogInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EE056128);
  }
  return result;
}

unint64_t sub_18C96A450()
{
  unint64_t result;

  result = qword_1EE056130;
  if (!qword_1EE056130)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for LogInterpolation, &type metadata for LogInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EE056130);
  }
  return result;
}

uint64_t sub_18C96A48C()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_18C96A498()
{
  return MEMORY[0x1E0DEA9F8];
}

uint64_t storeEnumTagSinglePayload for LogInterpolation.ValueTreatment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18C96A4F0 + 4 * byte_18CF0B775[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18C96A524 + 4 * byte_18CF0B770[v4]))();
}

uint64_t sub_18C96A524(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C96A52C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C96A534);
  return result;
}

uint64_t sub_18C96A540(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C96A548);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18C96A54C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C96A554(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t assignWithCopy for LogInterpolation.Component(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for LogInterpolation.Component(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t sub_18C96A77C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_18CEC11B0();
  if (!result || (result = sub_18CEC11C8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_18CEC11BC();
      sub_18CEC1744();
      sub_18C8783D4(&qword_1EE056138, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9988], MEMORY[0x1E0CA9978]);
      return sub_18CEC16F0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18C96A840()
{
  sub_18CEC1744();
  sub_18C8783D4(&qword_1EE056138, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9988], MEMORY[0x1E0CA9978]);
  return sub_18CEC16F0();
}

unint64_t sub_18C96A94C()
{
  unint64_t result;

  result = qword_1EE056148;
  if (!qword_1EE056148)
  {
    result = MEMORY[0x18D78AB48](MEMORY[0x1E0DEBBD8], MEMORY[0x1E0DEBB98]);
    atomic_store(result, (unint64_t *)&qword_1EE056148);
  }
  return result;
}

uint64_t sub_18C96A994(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  sub_18C8FBCB4(v20, a1);
  v3 = v20[0];
  v21 = v20[1];
  v4 = v20[3];
  v5 = v20[4];
  v6 = (unint64_t)(v20[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v9);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v15, v16, v18, v19);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v6)
      return swift_release();
    v11 = *(_QWORD *)(v21 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v6)
        return swift_release();
      v11 = *(_QWORD *)(v21 + 8 * v12);
      if (!v11)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v6)
          return swift_release();
        v11 = *(_QWORD *)(v21 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v6)
            return swift_release();
          v11 = *(_QWORD *)(v21 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v6)
              return swift_release();
            v11 = *(_QWORD *)(v21 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 6;
              while (v13 < v6)
              {
                v11 = *(_QWORD *)(v21 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v4 = v12;
  }
  __break(1u);
  return result;
}

uint64_t static AMSMediaArtwork.url(URLTemplate:size:cropStyle:format:quality:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!a2)
  {
    v28 = sub_18CEC142C();
    return __swift_storeEnumTagSinglePayload(a9, 1, 1, v28);
  }
  if (a6)
    v12 = a5;
  else
    v12 = 6778986;
  if (a6)
    v13 = a6;
  else
    v13 = 0xE300000000000000;
  if (a4)
    v14 = a3;
  else
    v14 = 25186;
  if (a4)
    v15 = a4;
  else
    v15 = 0xE200000000000000;
  if (a8)
    v16 = a7;
  else
    v16 = 12343;
  if (a8)
    v17 = a8;
  else
    v17 = 0xE200000000000000;
  if ((~*(_QWORD *)&a11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (a11 <= -1.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (a11 >= 1.84467441e19)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_18CEC202C();
  if ((~*(_QWORD *)&a10 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (a10 > -1.0)
  {
    if (a10 < 1.84467441e19)
    {
      v20 = result;
      v21 = v19;
      v22 = sub_18CEC202C();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA310);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_18CF08890;
      *(_QWORD *)(inited + 32) = 8217467;
      *(_QWORD *)(inited + 40) = 0xE300000000000000;
      *(_QWORD *)(inited + 48) = v14;
      *(_QWORD *)(inited + 56) = v15;
      *(_QWORD *)(inited + 64) = 8218235;
      *(_QWORD *)(inited + 72) = 0xE300000000000000;
      *(_QWORD *)(inited + 80) = v12;
      *(_QWORD *)(inited + 88) = v13;
      *(_QWORD *)(inited + 96) = 8218747;
      *(_QWORD *)(inited + 104) = 0xE300000000000000;
      *(_QWORD *)(inited + 112) = v20;
      *(_QWORD *)(inited + 120) = v21;
      *(_QWORD *)(inited + 128) = 8221051;
      *(_QWORD *)(inited + 136) = 0xE300000000000000;
      *(_QWORD *)(inited + 144) = v16;
      *(_QWORD *)(inited + 152) = v17;
      *(_QWORD *)(inited + 160) = 8222587;
      *(_QWORD *)(inited + 168) = 0xE300000000000000;
      *(_QWORD *)(inited + 176) = v22;
      *(_QWORD *)(inited + 184) = v24;
      v26 = sub_18CEC178C();
      v27 = MEMORY[0x1E0C80A78](v26);
      sub_18C96A994(v27, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_18C96AF88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18CEC13FC();
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_33;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_18C96AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;

  sub_18C870D04();
  *a5 = sub_18CEC1C84();
  a5[1] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C96AF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18C96AF0C(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

id sub_18C96B120()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___AMSMescalFairplaySession____lazy_storage___urlSession;
  v2 = *(void **)(v0 + OBJC_IVAR___AMSMescalFairplaySession____lazy_storage___urlSession);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___AMSMescalFairplaySession____lazy_storage___urlSession);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_defaultSession);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

BOOL sub_18C96B198()
{
  void *v0;
  void *v1;
  id v2;
  _OWORD v4[2];

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_18CEC17F8();
  v2 = objc_msgSend(v0, sel_valueForEntitlement_, v1);

  if (v2)
  {
    sub_18CEC1CB4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_18C87B358((uint64_t)v4);
  return v2 != 0;
}

id MescalFairplaySession.__allocating_init(mescalType:cachedCertificateProvider:certificateCacher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return MescalFairplaySession.init(mescalType:cachedCertificateProvider:certificateCacher:)(a1, a2, a3, a4, a5);
}

id MescalFairplaySession.init(mescalType:cachedCertificateProvider:certificateCacher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = OBJC_IVAR___AMSMescalFairplaySession_queue;
  type metadata accessor for AsyncSerialQueue();
  swift_allocObject();
  v13 = v5;
  sub_18C9393B4(0);
  *(_QWORD *)&v5[v12] = v14;
  *(_QWORD *)&v13[OBJC_IVAR___AMSMescalFairplaySession____lazy_storage___urlSession] = 0;
  *(_QWORD *)&v13[OBJC_IVAR___AMSMescalFairplaySession_currentFairplayManager] = 0;
  *(_OWORD *)&v13[OBJC_IVAR___AMSMescalFairplaySession_certificateData] = xmmword_18CF0B9A0;
  v15 = &v13[OBJC_IVAR___AMSMescalFairplaySession_logKey];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *(_QWORD *)&v13[OBJC_IVAR___AMSMescalFairplaySession_mescalType] = a1;
  v16 = &v13[OBJC_IVAR___AMSMescalFairplaySession_cachedCertificateProvider];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v17 = &v13[OBJC_IVAR___AMSMescalFairplaySession_certificateCacher];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  swift_retain();
  swift_retain();

  v20.receiver = v13;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, sel_init);
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_18C96B490(uint64_t a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_18CEC1450();

  return v3;
}

void sub_18C96B4EC(double a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;

  if (a3 >> 60 == 15)
    v6 = 0;
  else
    v6 = sub_18CEC1444();
  v7 = (id)v6;
  (*(void (**)(uint64_t, double))(a4 + 16))(a4, a1);

}

uint64_t MescalFairplaySession.signData(_:bag:logKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C96B568()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_18C878494(v0[4], v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = v1;
  *v1 = v0;
  v1[1] = sub_18C96B5EC;
  return sub_18C96B74C((uint64_t)(v0 + 2), v0[6], 0x6769732061746144, 0xEC000000676E696ELL, v0[7], v0[8], v0[9], v0[4]);
}

uint64_t sub_18C96B5EC()
{
  OUTLINED_FUNCTION_75_4();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96B628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_18C96B690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t (*v6)(void);

  v3 = OUTLINED_FUNCTION_138_1();
  *(_QWORD *)(v1 + 16) = 0;
  v4 = OUTLINED_FUNCTION_136_1(v3, sel_signData_error_);
  OUTLINED_FUNCTION_133_1();
  v5 = *(id *)(v1 + 16);
  if (v0)
  {
    OUTLINED_FUNCTION_156_1();
    OUTLINED_FUNCTION_162_1();
    *v2 = v3;
    v2[1] = v1 + 16;
  }
  else
  {
    sub_18CEC1360();
    OUTLINED_FUNCTION_133_1();
    OUTLINED_FUNCTION_74();
  }
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_2();
  return OUTLINED_FUNCTION_66_5(v6);
}

uint64_t sub_18C96B74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v10;

  v8[9] = a8;
  v8[10] = v10;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_18C878494(a8, v10);
  return swift_task_switch();
}

uint64_t sub_18C96B7A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_57_7(*(void **)(v0 + 64));
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_163();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_51_8(v1);
  return OUTLINED_FUNCTION_67_6(v2);
}

uint64_t sub_18C96B80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_62_6();
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_186();
  }
  else
  {
    sub_18C877F28(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    return OUTLINED_FUNCTION_185(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_18C96B850()
{
  uint64_t v0;

  sub_18C877F28(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C96B884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v10;

  v8[9] = a8;
  v8[10] = v10;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_18C878494(a8, v10);
  return swift_task_switch();
}

uint64_t sub_18C96B8DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_57_7(*(void **)(v0 + 64));
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_163();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_51_8(v1);
  return OUTLINED_FUNCTION_67_6(v2);
}

uint64_t sub_18C96B944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_62_6();
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_186();
  }
  else
  {
    sub_18C877F28(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    return OUTLINED_FUNCTION_185(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_18C96B988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  _QWORD *v8;
  id v9;
  void *v11;

  v8[9] = a8;
  v8[10] = v11;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_18C878494(a7, a8);
  v9 = v11;
  return swift_task_switch();
}

void sub_18C96B9E4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_57_7(*(void **)(v0 + 56));
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_163();
  v1 = (_QWORD *)OUTLINED_FUNCTION_157_1();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_18C96BA80;
  __asm { BR              X8 }
}

uint64_t sub_18C96BA80(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v6;

  v4 = *v2;
  *(_QWORD *)(v4 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
  else
  {
    v6 = *(void **)(v4 + 80);
    sub_18C877F28(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72));

    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
  }
}

uint64_t sub_18C96BB04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  sub_18C877F28(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_18C96BBCC(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v5[2] = a2;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  v10 = a3;
  v11 = a1;
  swift_unknownObjectRetain();
  a5;
  v12 = sub_18CEC1450();
  v14 = v13;

  v5[5] = v12;
  v5[6] = v14;
  if (a3)
  {
    a3 = (void *)sub_18CEC181C();
    v16 = v15;

  }
  else
  {
    v16 = 0;
  }
  v5[7] = v16;
  v17 = (_QWORD *)swift_task_alloc();
  v5[8] = v17;
  *v17 = v5;
  v17[1] = sub_18C96BCBC;
  return MescalFairplaySession.signData(_:bag:logKey:)(v12, v14, a2, (uint64_t)a3, v16);
}

uint64_t sub_18C96BCBC()
{
  uint64_t v0;
  const void *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_121_1();
  v4 = *(void **)(v3 + 24);
  v5 = *v2;
  OUTLINED_FUNCTION_10_0(v6);
  OUTLINED_FUNCTION_148_0();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_113_0();
  if (v0)
  {
    v7 = OUTLINED_FUNCTION_168_1();
    OUTLINED_FUNCTION_110_1();
    v8 = (void *)v7;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_19_18();
    v8 = (void *)v9;
  }
  OUTLINED_FUNCTION_99_2();

  _Block_release(v1);
  return OUTLINED_FUNCTION_34(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t MescalFairplaySession.primeSignature(forData:bag:logKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C96BD74()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[8];
  sub_18C878494(v0[4], v0[5]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = sub_18C96BDFC;
  return sub_18C96B884((uint64_t)(v0 + 2), v0[6], 0xD00000000000001ALL, 0x800000018CEE6670, v0[7], v1, v0[9], v0[4]);
}

uint64_t sub_18C96BDFC()
{
  OUTLINED_FUNCTION_75_4();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96BE38()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18C96BE48()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C96BE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_18C96BEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t (*v6)(void);

  v3 = OUTLINED_FUNCTION_138_1();
  *(_QWORD *)(v1 + 16) = 0;
  v4 = OUTLINED_FUNCTION_136_1(v3, sel_primingSignatureForData_error_);
  OUTLINED_FUNCTION_133_1();
  v5 = *(id *)(v1 + 16);
  if (v0)
  {
    OUTLINED_FUNCTION_156_1();
    OUTLINED_FUNCTION_162_1();
    *v2 = v3;
    v2[1] = v1 + 16;
  }
  else
  {
    sub_18CEC1360();
    OUTLINED_FUNCTION_133_1();
    OUTLINED_FUNCTION_74();
  }
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_2();
  return OUTLINED_FUNCTION_66_5(v6);
}

uint64_t sub_18C96C000(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v5[2] = a2;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  v10 = a1;
  swift_unknownObjectRetain();
  v11 = a3;
  a5;
  v12 = sub_18CEC1450();
  v14 = v13;

  v5[5] = v12;
  v5[6] = v14;
  v15 = sub_18CEC181C();
  v17 = v16;

  v5[7] = v17;
  v18 = (_QWORD *)swift_task_alloc();
  v5[8] = v18;
  *v18 = v5;
  v18[1] = sub_18C96C0E4;
  return MescalFairplaySession.primeSignature(forData:bag:logKey:)(v12, v14, a2, v15, v17);
}

uint64_t sub_18C96C0E4()
{
  uint64_t v0;
  const void *v1;
  uint64_t *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_121_1();
  v4 = (void *)v3[3];
  v5 = *v2;
  OUTLINED_FUNCTION_10_0(v6);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_18C877F28(v3[5], v3[6]);
  if (v0)
  {
    v7 = OUTLINED_FUNCTION_168_1();
    OUTLINED_FUNCTION_110_1();
    v8 = (void *)v7;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_19_18();
    v8 = (void *)v9;
  }
  OUTLINED_FUNCTION_99_2();

  _Block_release(v1);
  return OUTLINED_FUNCTION_58_6(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t MescalFairplaySession.verifyData(_:signature:bag:logKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C96C194()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = v0[7];
  v2 = (void *)v0[2];
  sub_18C878494(v0[3], v0[4]);
  v3 = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_18C96C228;
  v5 = OUTLINED_FUNCTION_52_5(v0[5]);
  return sub_18C96B988(v5, 0xD000000000000011, v6, v7, v1, v8, v9, v10);
}

uint64_t sub_18C96C228(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_136();
  v4 = *v2;
  OUTLINED_FUNCTION_10_0(&v7);
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return OUTLINED_FUNCTION_90_2(v5, *(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_18C96C308(void *a1, void *a2, uint64_t a3, void *a4, void *aBlock, void *a6)
{
  _QWORD *v6;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v6[3] = a3;
  v6[4] = a6;
  v6[2] = a1;
  v6[5] = _Block_copy(aBlock);
  v12 = a1;
  v13 = a2;
  swift_unknownObjectRetain();
  v14 = a4;
  a6;
  v15 = sub_18CEC1450();
  v17 = v16;

  v6[6] = v15;
  v6[7] = v17;
  v18 = sub_18CEC181C();
  v20 = v19;

  v6[8] = v20;
  v21 = (_QWORD *)swift_task_alloc();
  v6[9] = v21;
  *v21 = v6;
  v21[1] = sub_18C96C400;
  return MescalFairplaySession.verifyData(_:signature:bag:logKey:)((uint64_t)v12, v15, v17, a3, v18, v20);
}

uint64_t sub_18C96C400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;

  OUTLINED_FUNCTION_37();
  a17 = v20;
  a18 = v21;
  a16 = v19;
  v22 = *v19;
  a16 = (_QWORD *)v22;
  v23 = *(void **)(v22 + 32);
  v24 = *(void **)(v22 + 16);
  v25 = *v19;
  OUTLINED_FUNCTION_10_0(&a16);

  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_44();
  sub_18C877F28(*(_QWORD *)(v22 + 48), *(_QWORD *)(v22 + 56));
  if (v18)
  {
    v26 = (void *)sub_18CEC1354();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_115_2();

  }
  else
  {
    OUTLINED_FUNCTION_116_2();
  }
  _Block_release(*(const void **)(v22 + 40));
  return OUTLINED_FUNCTION_58_6(*(uint64_t (**)(void))(v25 + 8));
}

uint64_t MescalFairplaySession.verifyPrimeSignature(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C96C4A4()
{
  _QWORD *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[3];
  v1 = (char *)v0[4];
  v3 = v0[2];
  v4 = *(_QWORD *)&v1[OBJC_IVAR___AMSMescalFairplaySession_queue];
  v5 = v1;
  sub_18C878494(v3, v2);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE055878 + dword_1EE055878);
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_18C96C534;
  return v8(v4, v0[4], v0[2], v0[3]);
}

uint64_t sub_18C96C534(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_136();
  v4 = *v2;
  OUTLINED_FUNCTION_10_0(&v7);
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return OUTLINED_FUNCTION_90_2(v5, *(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_18C96C57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96C5D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  void *v5;
  id v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t v9;
  id v10;
  os_log_type_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v1 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR___AMSMescalFairplaySession_currentFairplayManager);
  if (!v1)
  {
    if (qword_1ECEAA4A8 != -1)
      swift_once();
    v8 = (void *)qword_1ECEAA3A0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v9 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v9 + 16) = xmmword_18CF073C0;
    v10 = v8;
    sub_18C96C8B0((uint64_t *)(v9 + 32));
    OUTLINED_FUNCTION_72(69, 0x800000018CEE68B0);
    v11 = sub_18CEC1B88();
    if (OUTLINED_FUNCTION_29(v11))
    {
      v12 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v13 = byte_1ECEA9E18;
      v14 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v14 + 16) = v13;
      *(_QWORD *)(v0 + 16) = v9;
      *(_QWORD *)(v0 + 24) = sub_18C84C6D8;
      *(_QWORD *)(v0 + 32) = v14;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v15 = sub_18CEC17C8();
      v17 = v16;
      OUTLINED_FUNCTION_96();
      swift_release();
      objc_autoreleasePoolPop(v12);
      v18 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v19 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v19 + 16) = xmmword_18CF07380;
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v19 + 64) = sub_18C872FBC();
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = v17;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v18);
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    v4 = 0;
    goto LABEL_12;
  }
  v2 = v1;
  OUTLINED_FUNCTION_146_0();
  v3 = (void *)sub_18CEC1444();
  *(_QWORD *)(v0 + 16) = 0;
  v4 = objc_msgSend(v2, sel_verifyPrimeSignature_error_, v3, v0 + 16);

  v5 = *(void **)(v0 + 16);
  if (!v5)
  {

LABEL_12:
    **(_BYTE **)(v0 + 40) = v4;
    v7 = *(uint64_t (**)(void))(v0 + 8);
    return OUTLINED_FUNCTION_12_2(v7);
  }
  v6 = v5;
  OUTLINED_FUNCTION_161_1();

  v7 = *(uint64_t (**)(void))(v0 + 8);
  return OUTLINED_FUNCTION_12_2(v7);
}

uint64_t sub_18C96C8B0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE v7[32];
  _QWORD v8[4];

  v8[3] = swift_getObjectType();
  v8[0] = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR___AMSMescalFairplaySession_logKey + 8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_18CF07380;
  sub_18C872C64((uint64_t)v8, (uint64_t)v7);
  swift_bridgeObjectRetain_n();
  v5 = v1;
  sub_18C87AF5C((uint64_t)v7, v3, v4 + 32);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_18C96C9DC(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = sub_18CEC1450();
  v9 = v8;

  v3[4] = v7;
  v3[5] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v3[6] = v10;
  *v10 = v3;
  v10[1] = sub_18C96CA70;
  return MescalFairplaySession.verifyPrimeSignature(_:)(v7, v9);
}

uint64_t sub_18C96CA70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  v2 = *v1;
  v7 = v2;
  v3 = *(void **)(v2 + 16);
  v4 = *v1;
  OUTLINED_FUNCTION_10_0(&v7);

  sub_18C877F28(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  if (v0)
  {
    v5 = (void *)sub_18CEC1354();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_115_2();

  }
  else
  {
    OUTLINED_FUNCTION_116_2();
  }
  _Block_release(*(const void **)(v2 + 24));
  return OUTLINED_FUNCTION_34(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_18C96CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;

  v9[33] = a8;
  v9[34] = a9;
  v9[31] = a6;
  v9[32] = a7;
  v9[29] = a4;
  v9[30] = a5;
  v9[27] = a2;
  v9[28] = a3;
  v9[26] = a1;
  return OUTLINED_FUNCTION_82_3();
}

uint64_t sub_18C96CB1C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_83_4(v0[29], v0[28]);
  OUTLINED_FUNCTION_17();
  v1 = (_QWORD *)swift_task_alloc();
  v0[35] = (uint64_t)v1;
  v2 = OUTLINED_FUNCTION_13_18(v1, (uint64_t)sub_18C96CB6C);
  return OUTLINED_FUNCTION_45_9(v2);
}

uint64_t sub_18C96CB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_59_7(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 304) = v4;
    v5 = OUTLINED_FUNCTION_35_9(v4);
    return OUTLINED_FUNCTION_77_5(v5, v6, v7, v8);
  }
}

uint64_t sub_18C96CBC8()
{
  OUTLINED_FUNCTION_74_5();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

#error "18C96CC44: call analysis failed (funcsize=85)"

uint64_t sub_18C96CE30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 264);

  OUTLINED_FUNCTION_24_16(v1);
  return OUTLINED_FUNCTION_185(*(uint64_t (**)(void))(v0 + 8));
}

#error "18C96CEAC: call analysis failed (funcsize=86)"

uint64_t sub_18C96D098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_60_6(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 360) = v4;
    v5 = OUTLINED_FUNCTION_35_9(v4);
    return OUTLINED_FUNCTION_77_5(v5, v6, v7, v8);
  }
}

uint64_t sub_18C96D0F4()
{
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96D130()
{
  uint64_t v0;

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96D16C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 264);

  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_24_16(v2);
  return OUTLINED_FUNCTION_6_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96D1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 *v4;
  uint64_t v5;
  void *v6;
  __CFString *v7;
  void *v8;
  os_log_type_t v9;
  char v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;

  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_149_1();
  v3 = (void *)qword_1ECEAA3A0;
  v4 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_163_1(v4, (__n128)xmmword_18CF09A00);
  OUTLINED_FUNCTION_172_1();
  v5 = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_165_1();
  sub_18C87B358(v2);
  OUTLINED_FUNCTION_72(58, 0x800000018CEE6930);
  v6 = (void *)sub_18CEC1354();
  v7 = AMSLogableError(v6);

  sub_18CEC181C();
  OUTLINED_FUNCTION_160_1();
  *(_QWORD *)(v0 + 48) = v1;
  v8 = (void *)(v0 + 48);
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v0 + 56) = v2;
  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_54_8();
  v9 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_29(v9))
  {
    v8 = (void *)(v0 + 168);
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v10 = byte_1ECEA9E18;
    v11 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v11 + 16) = v10;
    *(_QWORD *)(v0 + 168) = v4;
    *(_QWORD *)(v0 + 176) = sub_18C84C730;
    *(_QWORD *)(v0 + 184) = v11;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_9_22();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v12 = (__n128 *)OUTLINED_FUNCTION_2();
    v13 = OUTLINED_FUNCTION_61(v12, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_5_11(v13);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  OUTLINED_FUNCTION_124_2();
  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_12_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;

  v9[33] = a8;
  v9[34] = a9;
  v9[31] = a6;
  v9[32] = a7;
  v9[29] = a4;
  v9[30] = a5;
  v9[27] = a2;
  v9[28] = a3;
  v9[26] = a1;
  return OUTLINED_FUNCTION_82_3();
}

uint64_t sub_18C96D3BC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_83_4(v0[29], v0[28]);
  OUTLINED_FUNCTION_17();
  v1 = (_QWORD *)swift_task_alloc();
  v0[35] = (uint64_t)v1;
  v2 = OUTLINED_FUNCTION_13_18(v1, (uint64_t)sub_18C96D40C);
  return OUTLINED_FUNCTION_45_9(v2);
}

uint64_t sub_18C96D40C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_59_7(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 304) = v4;
    v5 = OUTLINED_FUNCTION_35_9(v4);
    return OUTLINED_FUNCTION_79_3(v5, v6, v7, v8);
  }
}

uint64_t sub_18C96D468()
{
  OUTLINED_FUNCTION_74_5();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

#error "18C96D4E4: call analysis failed (funcsize=85)"

#error "18C96D714: call analysis failed (funcsize=86)"

uint64_t sub_18C96D900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_60_6(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 360) = v4;
    v5 = OUTLINED_FUNCTION_35_9(v4);
    return OUTLINED_FUNCTION_79_3(v5, v6, v7, v8);
  }
}

uint64_t sub_18C96D95C()
{
  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96D998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 *v4;
  uint64_t v5;
  void *v6;
  __CFString *v7;
  void *v8;
  os_log_type_t v9;
  char v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;

  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_149_1();
  v3 = (void *)qword_1ECEAA3A0;
  v4 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_163_1(v4, (__n128)xmmword_18CF09A00);
  OUTLINED_FUNCTION_172_1();
  v5 = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_165_1();
  sub_18C87B358(v2);
  OUTLINED_FUNCTION_72(58, 0x800000018CEE6930);
  v6 = (void *)sub_18CEC1354();
  v7 = AMSLogableError(v6);

  sub_18CEC181C();
  OUTLINED_FUNCTION_160_1();
  *(_QWORD *)(v0 + 48) = v1;
  v8 = (void *)(v0 + 48);
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v0 + 56) = v2;
  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_54_8();
  v9 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_29(v9))
  {
    v8 = (void *)(v0 + 168);
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v10 = byte_1ECEA9E18;
    v11 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v11 + 16) = v10;
    *(_QWORD *)(v0 + 168) = v4;
    *(_QWORD *)(v0 + 176) = sub_18C84C730;
    *(_QWORD *)(v0 + 184) = v11;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_9_22();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v12 = (__n128 *)OUTLINED_FUNCTION_2();
    v13 = OUTLINED_FUNCTION_61(v12, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_5_11(v13);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  OUTLINED_FUNCTION_124_2();
  OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_12_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96DB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[35] = a8;
  v8[36] = v10;
  v8[33] = a6;
  v8[34] = a7;
  v8[31] = a4;
  v8[32] = a5;
  v8[29] = a2;
  v8[30] = a3;
  v8[28] = a1;
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C96DBE4()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_83_4(v0[30], v0[29]);
  OUTLINED_FUNCTION_17();
  v1 = (_QWORD *)swift_task_alloc();
  v0[37] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_18C96DC6C;
  v2 = OUTLINED_FUNCTION_52_5(v0[31]);
  return OUTLINED_FUNCTION_45_9(v2);
}

uint64_t sub_18C96DC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_101_1();
  *(_QWORD *)(v2 + 304) = v1;
  *(_QWORD *)(v2 + 312) = v0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96DCF8()
{
  void *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  __n128 *v11;
  __CFString *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v22)(void);
  uint64_t v23;
  void *v24;

  OUTLINED_FUNCTION_122_2();
  v2 = (void *)v1[38];
  v3 = (void *)OUTLINED_FUNCTION_171_1();
  v1[27] = 0;
  v4 = objc_msgSend(v2, sel_verifySignature_forData_error_, v3, v0, v1 + 27);

  v5 = (void *)v1[27];
  v6 = (void *)v1[38];
  if (!v5)
  {

    OUTLINED_FUNCTION_1_9();
    OUTLINED_FUNCTION_131_0();
    OUTLINED_FUNCTION_108_2();
    v23 = (uint64_t)v4;
    return OUTLINED_FUNCTION_15_19(v23, v22);
  }
  v7 = v5;
  OUTLINED_FUNCTION_161_1();

  v1[24] = v0;
  v8 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
  OUTLINED_FUNCTION_46_10();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    v24 = (void *)v1[36];
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_19_18();

    OUTLINED_FUNCTION_108_2();
    v23 = 0;
    return OUTLINED_FUNCTION_15_19(v23, v22);
  }
  v9 = (void *)v1[26];
  if ((OUTLINED_FUNCTION_47_9() & 1) == 0)
  {

    goto LABEL_13;
  }
  OUTLINED_FUNCTION_110_1();
  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v10 = (void *)v1[33];
  v1[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v11 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_43_9(v11, (__n128)xmmword_18CF09A00);
  OUTLINED_FUNCTION_42_7();
  OUTLINED_FUNCTION_117_2();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_70_6();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_86_3();
  v12 = OUTLINED_FUNCTION_94_2();
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_93_2();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_166_1();
  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_54_8();
  v13 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_22_12(v13))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_111_2();
    v14 = OUTLINED_FUNCTION_2();
    v15 = OUTLINED_FUNCTION_112_1(v14);
    OUTLINED_FUNCTION_21_14(v15, (uint64_t)sub_18C84C730);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_9_22();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v16 = (__n128 *)OUTLINED_FUNCTION_2();
    v17 = OUTLINED_FUNCTION_89_2(v16, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_5_11(v17);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  OUTLINED_FUNCTION_41_8(v1[28]);
  v18 = (_QWORD *)swift_task_alloc();
  v1[42] = v18;
  OUTLINED_FUNCTION_141_1(v18, (uint64_t)sub_18C96E2C4);
  v20 = OUTLINED_FUNCTION_52_5(v19);
  return OUTLINED_FUNCTION_53_7(v20);
}

uint64_t sub_18C96E028()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  __n128 *v5;
  __CFString *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t (*v17)(void);

  OUTLINED_FUNCTION_122_2();
  v1 = (void *)v0[39];
  v0[24] = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
  OUTLINED_FUNCTION_46_10();
  if (!OUTLINED_FUNCTION_11_23())
    goto LABEL_11;
  v3 = (void *)v0[26];
  if ((OUTLINED_FUNCTION_47_9() & 1) == 0)
  {

LABEL_11:
    v16 = (void *)v0[36];
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_19_18();

    OUTLINED_FUNCTION_108_2();
    return OUTLINED_FUNCTION_15_19(0, v17);
  }
  OUTLINED_FUNCTION_110_1();
  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v4 = (void *)v0[33];
  v0[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v5 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_43_9(v5, (__n128)xmmword_18CF09A00);
  OUTLINED_FUNCTION_42_7();
  OUTLINED_FUNCTION_117_2();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_70_6();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_86_3();
  v6 = OUTLINED_FUNCTION_94_2();
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_93_2();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_166_1();
  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_54_8();
  v7 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_22_12(v7))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_111_2();
    v8 = OUTLINED_FUNCTION_2();
    v9 = OUTLINED_FUNCTION_112_1(v8);
    OUTLINED_FUNCTION_21_14(v9, (uint64_t)sub_18C84C730);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_9_22();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v10 = (__n128 *)OUTLINED_FUNCTION_2();
    v11 = OUTLINED_FUNCTION_89_2(v10, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_5_11(v11);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  OUTLINED_FUNCTION_41_8(v0[28]);
  v12 = (_QWORD *)swift_task_alloc();
  v0[42] = v12;
  OUTLINED_FUNCTION_141_1(v12, (uint64_t)sub_18C96E2C4);
  v14 = OUTLINED_FUNCTION_52_5(v13);
  return OUTLINED_FUNCTION_53_7(v14);
}

uint64_t sub_18C96E2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_101_1();
  *(_QWORD *)(v2 + 344) = v1;
  *(_QWORD *)(v2 + 352) = v0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96E350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  __CFString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  void *v28;

  OUTLINED_FUNCTION_122_2();
  v2 = *(void **)(v1 + 344);
  v3 = (void *)OUTLINED_FUNCTION_171_1();
  *(_QWORD *)(v1 + 200) = 0;
  v4 = objc_msgSend(v2, sel_verifySignature_forData_error_, v3, v0, v1 + 200);

  if (*(_QWORD *)(v1 + 200))
  {
    v6 = *(_QWORD *)(v1 + 256);
    v5 = *(_QWORD *)(v1 + 264);
    v7 = *(id *)(v1 + 200);
    OUTLINED_FUNCTION_161_1();
    v8 = (void *)qword_1ECEAA3A0;
    v9 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v9 + 16) = xmmword_18CF09A00;
    v10 = v8;
    sub_18C96C8B0((uint64_t *)(v9 + 32));
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v1 + 40) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v1 + 16) = v6;
    *(_QWORD *)(v1 + 24) = v5;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_70_6();
    OUTLINED_FUNCTION_72(58, 0x800000018CEE6930);
    v12 = (void *)OUTLINED_FUNCTION_168_1();
    v13 = AMSLogableError(v12);
    OUTLINED_FUNCTION_86_3();
    v14 = sub_18CEC181C();
    v16 = v15;

    *(_QWORD *)(v1 + 112) = v14;
    *(_QWORD *)(v1 + 136) = v11;
    *(_QWORD *)(v1 + 120) = v16;
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_70_6();
    LOBYTE(v14) = sub_18CEC1B88();
    if (os_log_type_enabled(v10, (os_log_type_t)v14))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v17 = byte_1ECEA9E18;
      v18 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v18 + 16) = v17;
      *(_QWORD *)(v1 + 168) = v9;
      *(_QWORD *)(v1 + 176) = sub_18C84C730;
      *(_QWORD *)(v1 + 184) = v18;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v19 = sub_18CEC17C8();
      v21 = v20;
      OUTLINED_FUNCTION_44();
      swift_release();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v22 = (__n128 *)OUTLINED_FUNCTION_2();
      v22[4].n128_u64[0] = OUTLINED_FUNCTION_89_2(v22, (__n128)xmmword_18CF07380);
      v22[2].n128_u64[0] = v19;
      v22[2].n128_u64[1] = v21;
      OUTLINED_FUNCTION_35();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_44();

    v23 = *(void **)(v1 + 344);
    v24 = *(void **)(v1 + 320);
    swift_willThrow();

    v25 = *(void **)(v1 + 288);
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_19_18();

    OUTLINED_FUNCTION_108_2();
    v27 = 0;
  }
  else
  {
    v28 = *(void **)(v1 + 320);

    OUTLINED_FUNCTION_1_9();
    OUTLINED_FUNCTION_131_0();
    OUTLINED_FUNCTION_108_2();
    v27 = (uint64_t)v4;
  }
  return OUTLINED_FUNCTION_15_19(v27, v26);
}

uint64_t sub_18C96E66C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 288);
  OUTLINED_FUNCTION_87_3();
  OUTLINED_FUNCTION_1_9();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_18C96E6F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_18C96E754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  uint64_t v20;

  if (!sub_18C96B198())
  {
    OUTLINED_FUNCTION_66_0();
    v6 = (void *)OUTLINED_FUNCTION_18_18();
    v7 = (void *)OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_44_6(8, v6);

    OUTLINED_FUNCTION_74();
    return OUTLINED_FUNCTION_107_2(*(uint64_t (**)(void))(v0 + 8));
  }
  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR___AMSMescalFairplaySession_currentFairplayManager;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR___AMSMescalFairplaySession_currentFairplayManager;
  v3 = *(void **)(v1 + v2);
  if (!v3)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR___AMSMescalFairplaySession_mescalType);
    v10 = (uint64_t *)(v1 + OBJC_IVAR___AMSMescalFairplaySession_logKey);
    v11 = *v10;
    v12 = v10[1];
    *(_QWORD *)(v0 + 16) = 0;
    objc_allocWithZone((Class)AMSMescalFairPlay);
    swift_bridgeObjectRetain();
    v13 = sub_18C970454(v9, v11, v12, v0 + 16);
    *(_QWORD *)(v0 + 64) = v13;
    v14 = *(void **)(v0 + 16);
    if (!v14)
    {
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v19;
      *v19 = v0;
      v19[1] = sub_18C96E980;
      v20 = OUTLINED_FUNCTION_52_5(*(_QWORD *)(v0 + 40));
      return sub_18C96F164(v20);
    }
    v15 = v13;
    v16 = v14;
    swift_willThrow();

    return OUTLINED_FUNCTION_107_2(*(uint64_t (**)(void))(v0 + 8));
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR___AMSMescalFairplaySession_logKey + 8))
  {
    v4 = v3;
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_146_0();
    v5 = (void *)sub_18CEC17F8();
    OUTLINED_FUNCTION_96();
  }
  else
  {
    v17 = v3;
    v5 = 0;
  }
  objc_msgSend(v3, sel_setLogKey_, v5);

  OUTLINED_FUNCTION_108_2();
  return OUTLINED_FUNCTION_106_1((uint64_t)v3, v18);
}

uint64_t sub_18C96E980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_101_1();
  v3[10] = v1;
  v3[11] = v2;
  v3[12] = v0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96EA10()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  void *v35;
  id v36;

  OUTLINED_FUNCTION_152();
  v1 = (void *)sub_18CEC1444();
  *(_QWORD *)(v0 + 24) = 0;
  v2 = OUTLINED_FUNCTION_135_0((uint64_t)v1, sel_exchangeData_error_);

  v3 = *(void **)(v0 + 24);
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(void **)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = v3;
    OUTLINED_FUNCTION_72_2();
    OUTLINED_FUNCTION_103_2();
    v9 = *(_QWORD *)(v7 + OBJC_IVAR___AMSMescalFairplaySession_certificateData);
    v10 = *(_QWORD *)(v7 + OBJC_IVAR___AMSMescalFairplaySession_certificateData + 8);
    *(_OWORD *)(v7 + OBJC_IVAR___AMSMescalFairplaySession_certificateData) = xmmword_18CF0B9A0;
    sub_18C9703F8(v9, v10);
    OUTLINED_FUNCTION_102_2(OBJC_IVAR___AMSMescalFairplaySession_certificateCacher);
LABEL_3:
    OUTLINED_FUNCTION_103_2();

    v11 = v5;
    v12 = v4;
LABEL_4:
    sub_18C877F28(v11, v12);
    v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_2();
    return OUTLINED_FUNCTION_20_0(v13);
  }
  if (!v2)
  {
    v5 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(void **)(v0 + 64);
    v20 = (uint64_t *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR___AMSMescalFairplaySession_certificateData);
    v21 = *v20;
    v22 = v20[1];
    *(_OWORD *)v20 = xmmword_18CF0B9A0;
    sub_18C9703F8(v21, v22);
    OUTLINED_FUNCTION_102_2(OBJC_IVAR___AMSMescalFairplaySession_certificateCacher);
    v23 = (void *)OUTLINED_FUNCTION_14_21();
    OUTLINED_FUNCTION_24_2();
    v24 = OUTLINED_FUNCTION_44_6(0, v23);
    OUTLINED_FUNCTION_72_2();

    goto LABEL_3;
  }
  v15 = *(void **)(v0 + 64);
  v16 = sub_18CEC1450();
  v18 = v17;

  if ((objc_msgSend(v15, sel_isComplete) & 1) != 0 || v18 >> 60 == 15)
  {
    v25 = objc_msgSend(*(id *)(v0 + 64), sel_isComplete);
    v27 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    v28 = *(void **)(v0 + 64);
    if (!v25)
    {
      v35 = (void *)OUTLINED_FUNCTION_14_21();
      OUTLINED_FUNCTION_24_2();
      v36 = OUTLINED_FUNCTION_44_6(0, v35);
      OUTLINED_FUNCTION_72_2();

      OUTLINED_FUNCTION_103_2();
      OUTLINED_FUNCTION_167_1();

      v11 = v27;
      v12 = v26;
      goto LABEL_4;
    }
    v30 = *(_QWORD *)(v0 + 48);
    v29 = *(_QWORD *)(v0 + 56);
    OUTLINED_FUNCTION_167_1();
    sub_18C877F28(v27, v26);
    v31 = *(void **)(v30 + v29);
    *(_QWORD *)(v30 + v29) = v28;
    v32 = v28;

    v33 = OUTLINED_FUNCTION_140_1();
    return OUTLINED_FUNCTION_48_8(v33, v34);
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v18;
    *(_QWORD *)(v0 + 112) = v16;
    sub_18C878494(v16, v18);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v19;
    *v19 = v0;
    v19[1] = sub_18C96ECC0;
    return OUTLINED_FUNCTION_49_9(v16, v18, *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_18C96ECC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_56_6();
  OUTLINED_FUNCTION_101_1();
  v3[16] = v1;
  v3[17] = v2;
  v3[18] = v0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96ED50()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unsigned int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  void *v19;
  void *v20;
  uint64_t (*v21)(void);

  OUTLINED_FUNCTION_152();
  v1 = (void *)sub_18CEC1444();
  *(_QWORD *)(v0 + 32) = 0;
  v2 = OUTLINED_FUNCTION_135_0((uint64_t)v1, sel_exchangeData_error_);

  v3 = *(void **)(v0 + 32);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 128);
    v5 = v3;

    swift_willThrow();
    OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_24_16(v4);
    OUTLINED_FUNCTION_85_2();

  }
  else
  {
    if (v2)
    {
      v6 = sub_18CEC1450();
      v7 = v8;
      OUTLINED_FUNCTION_127_1();

      OUTLINED_FUNCTION_85_2();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_127_1();
    OUTLINED_FUNCTION_85_2();
  }
  v6 = 0;
  v7 = 0xF000000000000000;
LABEL_6:
  if ((OUTLINED_FUNCTION_130_1(*(void **)(v0 + 64)) & 1) != 0 || v7 >> 60 == 15)
  {
    v11 = OUTLINED_FUNCTION_130_1(*(void **)(v0 + 64));
    v12 = *(void **)(v0 + 64);
    if (v11)
    {
      v14 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 56);
      OUTLINED_FUNCTION_170_1();
      OUTLINED_FUNCTION_113_0();
      v15 = *(void **)(v14 + v13);
      *(_QWORD *)(v14 + v13) = v12;
      v16 = v12;

      v17 = OUTLINED_FUNCTION_140_1();
      return OUTLINED_FUNCTION_48_8(v17, v18);
    }
    else
    {
      v19 = (void *)OUTLINED_FUNCTION_14_21();
      v20 = (void *)OUTLINED_FUNCTION_24_2();
      OUTLINED_FUNCTION_44_6(0, v19);

      swift_willThrow();
      OUTLINED_FUNCTION_170_1();

      OUTLINED_FUNCTION_113_0();
      v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_2();
      return OUTLINED_FUNCTION_20_0(v21);
    }
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v7;
    *(_QWORD *)(v0 + 112) = v6;
    sub_18C878494(v6, v7);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v9;
    *v9 = v0;
    v9[1] = sub_18C96ECC0;
    return OUTLINED_FUNCTION_49_9(v6, v7, *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_18C96EF70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C96EFD0()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v11;
  void *v12;
  uint64_t (*v13)(void);

  OUTLINED_FUNCTION_169_1();
  OUTLINED_FUNCTION_169_1();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_130_1(*(void **)(v0 + 64));
  v1 = OUTLINED_FUNCTION_130_1(*(void **)(v0 + 64));
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(void **)(v0 + 64);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    OUTLINED_FUNCTION_151_1();
    OUTLINED_FUNCTION_24_16(v2);
    v6 = *(void **)(v5 + v4);
    *(_QWORD *)(v5 + v4) = v3;
    v7 = v3;

    v8 = OUTLINED_FUNCTION_140_1();
    return OUTLINED_FUNCTION_106_1(v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_66_0();
    v11 = (void *)OUTLINED_FUNCTION_18_18();
    v12 = (void *)OUTLINED_FUNCTION_24_2();
    AMSError(0, v11, v12, 0);

    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_151_1();

    OUTLINED_FUNCTION_24_16(v2);
    v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_2();
    return OUTLINED_FUNCTION_107_2(v13);
  }
}

uint64_t sub_18C96F124()
{
  void *v0;
  uint64_t IsEqual;

  v0 = (void *)sub_18CEC1354();
  IsEqual = AMSErrorIsEqual(v0, CFSTR("AMSErrorDomain"), 302);

  return IsEqual;
}

uint64_t sub_18C96F164(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[45] = a1;
  v2[46] = v1;
  v3 = sub_18CEC142C();
  v2[47] = v3;
  v2[48] = *(_QWORD *)(v3 - 8);
  v2[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C96F1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = OBJC_IVAR___AMSMescalFairplaySession_certificateData;
  *(_QWORD *)(v0 + 400) = OBJC_IVAR___AMSMescalFairplaySession_certificateData;
  v3 = (uint64_t *)(v1 + v2);
  v4 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 408) = v4;
  v5 = *(_QWORD *)(v1 + v2 + 8);
  *(_QWORD *)(v0 + 416) = v5;
  if (v5 >> 60 == 15)
  {
    v6 = (*(uint64_t (**)(void))(v1 + OBJC_IVAR___AMSMescalFairplaySession_cachedCertificateProvider))();
    if (v7 >> 60 == 15)
    {
      v8 = *(void **)(v0 + 360);
      *(_QWORD *)(v0 + 424) = objc_msgSend(objc_allocWithZone((Class)AMSURLRequestEncoder), sel_initWithBag_, v8);
      v9 = objc_msgSend(v8, sel_URLForKey_, CFSTR("sign-sap-setup-cert"));
      *(_QWORD *)(v0 + 432) = objc_msgSend(v9, sel_valuePromise);

      *(_QWORD *)(v0 + 56) = v0 + 352;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_18C96F378;
      v10 = OUTLINED_FUNCTION_4();
      *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
      v11 = (_QWORD *)(v0 + 184);
      v11[1] = 0x40000000;
      v11[2] = sub_18C8FDB6C;
      v11[3] = &block_descriptor_55;
      v11[4] = v10;
      OUTLINED_FUNCTION_144_0(v10, sel_resultWithCompletion_);
      return swift_continuation_await();
    }
    v13 = v6;
    v14 = v7;
    *v3 = v6;
    v3[1] = v7;
    sub_18C878494(v6, v7);
    v15 = OUTLINED_FUNCTION_147_0();
    sub_18C9703F8(v15, v16);
    v4 = *(_QWORD *)(v0 + 408);
    v5 = *(_QWORD *)(v0 + 416);
  }
  else
  {
    v13 = v4;
    v14 = v5;
  }
  sub_18C9704D4(v4, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v13, v14);
}

uint64_t sub_18C96F378()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 440) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96F3B8()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;

  v1 = (void *)v0[54];
  v0[56] = v0[44];

  sub_18CEC13C0();
  v2 = (_QWORD *)swift_task_alloc();
  v0[57] = v2;
  *v2 = v0;
  v2[1] = sub_18C96F42C;
  return sub_18C97C1B4(2, v0[49], 0);
}

uint64_t sub_18C96F42C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[58] = a1;
  v3[59] = v1;
  OUTLINED_FUNCTION_91();
  (*(void (**)(_QWORD, _QWORD))(v3[48] + 8))(v3[49], v3[47]);
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_186();
}

uint64_t sub_18C96F498()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = v0[58];
  v2 = sub_18C96B120();
  v0[60] = objc_msgSend(v2, sel_dataTaskPromiseWithRequest_, v1);

  v0[15] = v0 + 43;
  v0[10] = v0;
  v0[11] = sub_18C96F550;
  v3 = OUTLINED_FUNCTION_4();
  v0[18] = MEMORY[0x1E0C809B0];
  v0[19] = 0x40000000;
  v0[20] = sub_18C8FDB6C;
  v0[21] = &block_descriptor_57;
  v0[22] = v3;
  OUTLINED_FUNCTION_145_1(v3, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_0();
}

uint64_t sub_18C96F550()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_119_1();
  *(_QWORD *)(v0 + 488) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96F590()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  void (*v14)(uint64_t, double);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void *v21;
  id v22;

  v4 = *(void **)(v0 + 344);

  if (objc_msgSend(v4, sel_object))
  {
    OUTLINED_FUNCTION_153_1();
    OUTLINED_FUNCTION_148_0();
  }
  else
  {
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  sub_18C8FAA70(v0 + 256, v0 + 288);
  if (!*(_QWORD *)(v0 + 312))
  {
    OUTLINED_FUNCTION_54_8();
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
  v1 = (void *)MEMORY[0x1E0DEE9B8];
  if ((OUTLINED_FUNCTION_14_14() & 1) == 0)
  {
LABEL_13:
    OUTLINED_FUNCTION_128_2();
    v21 = (void *)OUTLINED_FUNCTION_14_21();
LABEL_16:
    OUTLINED_FUNCTION_24_2();
    v22 = OUTLINED_FUNCTION_44_6(8, v21);
    OUTLINED_FUNCTION_72_2();

    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_125_1();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 336);
  OUTLINED_FUNCTION_66_0();
  sub_18C928F10(v5, (_OWORD *)(v0 + 224));
  OUTLINED_FUNCTION_44();
  if (!*(_QWORD *)(v0 + 248))
  {
    OUTLINED_FUNCTION_54_8();
    goto LABEL_15;
  }
  if ((OUTLINED_FUNCTION_14_14() & 1) == 0)
  {
LABEL_15:
    OUTLINED_FUNCTION_128_2();
    v21 = (void *)OUTLINED_FUNCTION_18_18();
    goto LABEL_16;
  }
  v6 = (uint64_t *)(*(_QWORD *)(v0 + 368) + *(_QWORD *)(v0 + 400));
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *v6;
  v9 = (void *)v6[1];
  *v6 = *(_QWORD *)(v0 + 320);
  v6[1] = v7;
  OUTLINED_FUNCTION_148_1();
  sub_18C9703F8(v8, (unint64_t)v9);
  v10 = objc_msgSend(v4, sel_response);
  if (!v10 || (v11 = v10, objc_msgSend(v10, sel_ams_expirationInterval), v13 = v12, v11, v13 <= 0.0))
    v13 = 86400.0;
  OUTLINED_FUNCTION_128_2();
  v14 = *(void (**)(uint64_t, double))(*(_QWORD *)(v0 + 368)
                                               + OBJC_IVAR___AMSMescalFairplaySession_certificateCacher);
  OUTLINED_FUNCTION_148_1();
  v15 = OUTLINED_FUNCTION_147_0();
  v14(v15, v13);

  v16 = OUTLINED_FUNCTION_147_0();
  sub_18C877F28(v16, v17);
  sub_18C9704D4(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416));
  swift_task_dealloc();
  v18 = OUTLINED_FUNCTION_147_0();
  return v19(v18);
}

uint64_t sub_18C96F840()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 432);
  v2 = *(void **)(v0 + 424);
  swift_willThrow();

  OUTLINED_FUNCTION_125_1();
  return OUTLINED_FUNCTION_1_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96F884()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 424);

  OUTLINED_FUNCTION_125_1();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96F8BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 480);
  v2 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 448);
  v4 = *(void **)(v0 + 424);
  swift_willThrow();

  OUTLINED_FUNCTION_125_1();
  return OUTLINED_FUNCTION_6_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96F910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[55] = a3;
  v4[56] = v3;
  v4[53] = a1;
  v4[54] = a2;
  v5 = sub_18CEC142C();
  v4[57] = v5;
  v4[58] = *(_QWORD *)(v5 - 8);
  v4[59] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C96F974()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0 + 440), sel_URLForKey_, CFSTR("sign-sap-setup"));
  *(_QWORD *)(v0 + 480) = objc_msgSend(v1, sel_valuePromise);

  *(_QWORD *)(v0 + 56) = v0 + 416;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_18C96FA3C;
  v2 = OUTLINED_FUNCTION_4();
  *(_QWORD *)(v0 + 248) = MEMORY[0x1E0C809B0];
  v3 = (_QWORD *)(v0 + 248);
  v3[1] = 0x40000000;
  v3[2] = sub_18C8FDB6C;
  v3[3] = &block_descriptor_14;
  v3[4] = v2;
  OUTLINED_FUNCTION_144_0(v2, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_0();
}

uint64_t sub_18C96FA3C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 488) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96FA7C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t inited;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_37();
  v1 = (void *)v0[60];
  v3 = v0[54];
  v2 = v0[55];
  v4 = v0[53];
  v0[62] = v0[52];

  v5 = objc_msgSend(objc_allocWithZone((Class)AMSURLRequestEncoder), sel_initWithBag_, v2);
  v0[63] = v5;
  objc_msgSend(v5, sel_setRequestEncoding_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18CF07380;
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_QWORD *)(inited + 40) = 0x800000018CEE6A30;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  sub_18C878494(v4, v3);
  OUTLINED_FUNCTION_158_1();
  sub_18CEC178C();
  sub_18CEC13C0();
  OUTLINED_FUNCTION_158_1();
  v0[64] = sub_18CEC175C();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_task_alloc();
  v0[65] = v7;
  *v7 = v0;
  v7[1] = sub_18C96FBB8;
  OUTLINED_FUNCTION_129_1();
  return sub_18C97C1B4(v8, v9, v10);
}

uint64_t sub_18C96FBB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)*v2;
  v3[66] = a1;
  v3[67] = v1;
  OUTLINED_FUNCTION_91();
  v4 = (void *)v3[64];
  (*(void (**)(_QWORD, _QWORD))(v3[58] + 8))(v3[59], v3[57]);

  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_28();
}

uint64_t sub_18C96FC34()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = v0[66];
  v2 = sub_18C96B120();
  v0[68] = objc_msgSend(v2, sel_dataTaskPromiseWithRequest_, v1);

  v0[15] = v0 + 51;
  v0[10] = v0;
  v0[11] = sub_18C96FCEC;
  v3 = OUTLINED_FUNCTION_4();
  v0[26] = MEMORY[0x1E0C809B0];
  v0[27] = 0x40000000;
  v0[28] = sub_18C8FDB6C;
  v0[29] = &block_descriptor_53;
  v0[30] = v3;
  OUTLINED_FUNCTION_145_1(v3, sel_resultWithCompletion_);
  return OUTLINED_FUNCTION_15_0();
}

uint64_t sub_18C96FCEC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_119_1();
  *(_QWORD *)(v0 + 552) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C96FD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t (*v32)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_37();
  v11 = *(void **)(v10 + 408);

  if (objc_msgSend(v11, sel_object))
  {
    OUTLINED_FUNCTION_153_1();
    OUTLINED_FUNCTION_148_0();
  }
  else
  {
    *(_OWORD *)(v10 + 320) = 0u;
    *(_OWORD *)(v10 + 336) = 0u;
  }
  v12 = OUTLINED_FUNCTION_146_0();
  sub_18C8FAA70(v12, v13);
  if (*(_QWORD *)(v10 + 376))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
    OUTLINED_FUNCTION_146_0();
    if ((OUTLINED_FUNCTION_14_14() & 1) != 0)
    {
      v14 = *(_QWORD *)(v10 + 400);
      OUTLINED_FUNCTION_66_0();
      sub_18C928F10(v14, (_OWORD *)(v10 + 288));
      OUTLINED_FUNCTION_44();
      if (*(_QWORD *)(v10 + 312))
      {
        if ((OUTLINED_FUNCTION_14_14() & 1) != 0)
        {
          v15 = *(void **)(v10 + 528);
          v17 = *(void **)(v10 + 496);
          v16 = *(void **)(v10 + 504);

          swift_task_dealloc();
          OUTLINED_FUNCTION_129_1();
          return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
        }
      }
      else
      {
        sub_18C87B358(v10 + 288);
      }
    }
  }
  else
  {
    sub_18C87B358(v10 + 352);
  }
  v27 = *(void **)(v10 + 528);
  v29 = *(void **)(v10 + 496);
  v28 = *(void **)(v10 + 504);
  v30 = (void *)OUTLINED_FUNCTION_18_18();
  OUTLINED_FUNCTION_24_2();
  v31 = OUTLINED_FUNCTION_44_6(0, v30);
  OUTLINED_FUNCTION_72_2();

  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_129_1();
  return v32(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10);
}

uint64_t sub_18C96FF24()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 480);
  swift_willThrow();

  OUTLINED_FUNCTION_137_0();
  return OUTLINED_FUNCTION_1_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96FF60()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 504);

  OUTLINED_FUNCTION_137_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C96FF94()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 544);
  v2 = *(void **)(v0 + 528);
  v4 = *(void **)(v0 + 496);
  v3 = *(void **)(v0 + 504);
  swift_willThrow();

  OUTLINED_FUNCTION_137_0();
  return OUTLINED_FUNCTION_6_3(*(uint64_t (**)(void))(v0 + 8));
}

id MescalFairplaySession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MescalFairplaySession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MescalFairplaySession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MescalFairplaySession()
{
  return objc_opt_self();
}

uint64_t method lookup function for MescalFairplaySession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MescalFairplaySession.__allocating_init(mescalType:cachedCertificateProvider:certificateCacher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_18C970140()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_5();
  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_18C970170()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_18C970500;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1EE0561D0 + dword_1EE0561D0))(v2, v3, v4);
}

uint64_t sub_18C9701DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_5();

  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_18C970224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_37();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v11;
  *v11 = v10;
  v11[1] = sub_18C9702A0;
  OUTLINED_FUNCTION_129_1();
  return v18(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_18C9702A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_136();
  v1 = *v0;
  OUTLINED_FUNCTION_10_0(&v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_18C9702E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_1(v1, (uint64_t)sub_18C970500);
  return OUTLINED_FUNCTION_3_0(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_5();
  swift_unknownObjectRelease();

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_18C970374()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_1(v1, (uint64_t)sub_18C970500);
  return OUTLINED_FUNCTION_3_0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_18C9703C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18C9703E8()
{
  uint64_t v0;

  return sub_18C96B490(*(_QWORD *)(v0 + 16));
}

void sub_18C9703F0(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;

  sub_18C96B4EC(a3, a1, a2, *(_QWORD *)(v3 + 16));
}

uint64_t sub_18C9703F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18C877F28(a1, a2);
  return a1;
}

unint64_t sub_18C970410()
{
  unint64_t result;

  result = qword_1ECEA9B20;
  if (!qword_1ECEA9B20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECEA9B20);
  }
  return result;
}

id sub_18C970454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;

  if (a3)
  {
    v7 = (void *)sub_18CEC17F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithMescalType_logKey_error_, a1, v7, a4);

  return v8;
}

uint64_t sub_18C9704D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18C878494(a1, a2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_74_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 312) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_75_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_79_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18C96BE54(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_86_3()
{
  void *v0;

}

void OUTLINED_FUNCTION_87_3()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_95_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void OUTLINED_FUNCTION_97_1()
{
  void *v0;

}

id OUTLINED_FUNCTION_100_1()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_101_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_106_1(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_18C877F28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  char v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v1, v0 & 1, 0);
}

uint64_t OUTLINED_FUNCTION_117_2()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = v3;
  v1[6] = v0;
  v1[7] = v2;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_121_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_125_1()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_130_1(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1330));
}

void OUTLINED_FUNCTION_131_0()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_134_0()
{
  JUMPOUT(0x18D789CA8);
}

id OUTLINED_FUNCTION_135_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

id OUTLINED_FUNCTION_136_1(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_144_0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id OUTLINED_FUNCTION_145_1(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_148_1()
{
  uint64_t v0;
  unint64_t v1;

  return sub_18C878494(v0, v1);
}

uint64_t OUTLINED_FUNCTION_149_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 328);
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  return sub_18C9703F8(0, 0xF000000000000000);
}

uint64_t OUTLINED_FUNCTION_153_1()
{
  return sub_18CEC1CB4();
}

uint64_t OUTLINED_FUNCTION_155_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_157_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_158_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_165_1()
{
  static LogInterpolation.safe(_:)();
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  uint64_t v0;
  unint64_t v1;

  return sub_18C9703F8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return sub_18CEC1354();
}

uint64_t OUTLINED_FUNCTION_171_1()
{
  return sub_18CEC1444();
}

uint64_t static AMSMescal.signature(fromData:type:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C970770()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[18];
  v1 = v0[19];
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_18CEC1444();
  v5 = objc_msgSend(v3, sel_signaturePromiseFromData_type_bag_, v4, v2, v1);
  v0[20] = v5;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_18C970870;
  v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v7 = v0 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_18C85144C;
  v7[3] = &block_descriptor_15;
  v7[4] = v6;
  objc_msgSend(v5, sel_resultWithCompletion_, v7);
  return swift_continuation_await();
}

uint64_t sub_18C970870()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 168) = v1;
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C9708B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(void **)(v0 + 160);
  sub_18CEC1450();
  OUTLINED_FUNCTION_162_1();

  v2 = OUTLINED_FUNCTION_8_19();
  return OUTLINED_FUNCTION_4_19(v2, v3, v4);
}

uint64_t sub_18C9708F0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return OUTLINED_FUNCTION_1_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static AMSMescal.signature(fromRequest:type:bag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C97093C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = v0[17];
  v1 = v0[18];
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_18CEC1090();
  v5 = objc_msgSend(v3, sel_signaturePromiseFromRequest_type_bag_, v4, v2, v1);
  v0[19] = v5;

  v0[7] = v0 + 15;
  v6 = OUTLINED_FUNCTION_6_25((uint64_t)sub_18C970A20);
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_18C970B08;
  v0[13] = &block_descriptor_2_1;
  v0[14] = v6;
  objc_msgSend(v5, sel_resultWithCompletion_, v0 + 10);
  return OUTLINED_FUNCTION_5_21();
}

uint64_t sub_18C970A20()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 160) = v1;
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C970A64()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(void **)(v0 + 120);

  v2 = objc_msgSend(v1, sel_value);
  if (v2)
  {
    v3 = v2;
    sub_18CEC1450();
    OUTLINED_FUNCTION_162_1();

  }
  else
  {

  }
  v4 = OUTLINED_FUNCTION_8_19();
  return OUTLINED_FUNCTION_4_19(v4, v5, v6);
}

uint64_t sub_18C970AD0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return OUTLINED_FUNCTION_1_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C970B08(uint64_t a1, void *a2, void *a3)
{
  return sub_18C851048(a1, a2, a3, (uint64_t (*)(_QWORD, void *))sub_18C8514D8, (uint64_t (*)(_QWORD, void *))sub_18C955EC4);
}

uint64_t static AMSMescal.verifyResponse(inTask:data:type:bag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C970B34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = v0[18];
  v1 = v0[19];
  v4 = v0[16];
  v3 = v0[17];
  v5 = v0[15];
  sub_18C970D2C();
  sub_18C878494(v4, v3);
  v6 = sub_18C970D68(v4, v3);
  v0[20] = v6;
  v7 = objc_msgSend((id)objc_opt_self(), sel_verificationPromiseForTask_data_type_bag_, v5, v6, v2, v1);
  v0[21] = v7;
  v0[7] = v0 + 23;
  v8 = OUTLINED_FUNCTION_6_25((uint64_t)sub_18C970C44);
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_18C8FFDDC;
  v0[13] = &block_descriptor_4_0;
  v0[14] = v8;
  objc_msgSend(v7, sel_resultWithCompletion_, v0 + 10);
  return OUTLINED_FUNCTION_5_21();
}

uint64_t sub_18C970C44()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 176) = v1;
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C970C88()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 160);

  v2 = v1;
  v3 = sub_18CEC1450();
  v5 = v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v5);
}

uint64_t sub_18C970CEC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 160);
  swift_willThrow();

  return OUTLINED_FUNCTION_1_0(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_18C970D2C()
{
  unint64_t result;

  result = qword_1EE056278;
  if (!qword_1EE056278)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE056278);
  }
  return result;
}

id sub_18C970D68(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_18CEC1444();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_18C877F28(a1, a2);

  return v6;
}

uint64_t sub_18C970DDC()
{
  sub_18CEC2128();
  return sub_18CEC1564();
}

uint64_t sub_18C970E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a3)
    return sub_18CEC1558();
  else
    return 0;
}

uint64_t sub_18C970E28()
{
  sub_18CEC211C();
  sub_18CEC2128();
  sub_18CEC1564();
  return sub_18CEC214C();
}

uint64_t sub_18C970E84()
{
  return sub_18C970E28();
}

uint64_t sub_18C970E8C()
{
  return sub_18C970DDC();
}

uint64_t sub_18C970E94()
{
  sub_18CEC211C();
  sub_18CEC2128();
  sub_18CEC1564();
  return sub_18CEC214C();
}

uint64_t sub_18C970EE8(uint64_t *a1, uint64_t *a2)
{
  return sub_18C970E0C(*a1, a1[1], *a2);
}

uint64_t sub_18C970EFC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA010);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  off_1ECEAA018 = (_UNKNOWN *)result;
  return result;
}

id static MethodImplementationCache.implementation(of:forInstancesOf:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  os_unfair_lock_s *v5;
  void *v6;
  id v7;

  if (qword_1ECEA9FE8 != -1)
    swift_once();
  v4 = off_1ECEAA018;
  v5 = (os_unfair_lock_s *)((char *)off_1ECEAA018 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ECEAA018 + 6);
  sub_18C9290F8(a2, a1, v4[2]);
  v7 = v6;
  if (!v6)
  {
    v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_instanceMethodForSelector_, a1);
    if (v7)
      sub_18C958AD4();
    else
      sub_18C971500();
  }
  os_unfair_lock_unlock(v5);
  return v7;
}

BOOL static MethodImplementationCache.implementations(of:areEqualIn:and:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  _BOOL4 v7;

  v5 = static MethodImplementationCache.implementation(of:forInstancesOf:)(a1, a2);
  v6 = static MethodImplementationCache.implementation(of:forInstancesOf:)(a1, a3);
  v7 = v5 == v6;
  if (!v6)
    v7 = v5 == 0;
  if (v5)
    return v7;
  else
    return v6 == 0;
}

id MethodImplementationCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MethodImplementationCache.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MethodImplementationCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void static MethodImplementationCache.clear()()
{
  os_unfair_lock_s *v0;

  if (qword_1ECEA9FE8 != -1)
    swift_once();
  v0 = (os_unfair_lock_s *)((char *)off_1ECEAA018 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1ECEAA018 + 6);
  sub_18C971214();
  os_unfair_lock_unlock(v0);
}

uint64_t sub_18C971214()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056280);
  return sub_18CEC1798();
}

void sub_18C971250()
{
  _QWORD *v0;
  _OWORD *v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_7_20();
  sub_18C86ECD4();
  OUTLINED_FUNCTION_4_20();
  if ((v2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_2_29();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9E30);
    OUTLINED_FUNCTION_0_18();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_22();
    OUTLINED_FUNCTION_7_20();
    sub_18CEC1E70();
    *v0 = v3;
    OUTLINED_FUNCTION_8_1();
  }
  else
  {
    *v1 = 0u;
    v1[1] = 0u;
    OUTLINED_FUNCTION_3_29();
  }
}

uint64_t sub_18C971304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_18C8FABB8(a1, a2, a3);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v18 = *v5;
    *v5 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054EE8);
    OUTLINED_FUNCTION_0_18();
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v18 + 56);
    v13 = type metadata accessor for AccountCachedServerData.AccountData(0);
    sub_18C905E8C(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v10, a4);
    sub_18C9070E0();
    OUTLINED_FUNCTION_7_20();
    sub_18CEC1E70();
    *v5 = v18;
    swift_bridgeObjectRelease();
    v14 = a4;
    v15 = 0;
    v16 = v13;
  }
  else
  {
    v16 = type metadata accessor for AccountCachedServerData.AccountData(0);
    v14 = a4;
    v15 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v14, v15, 1, v16);
}

void sub_18C97143C(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v1;
  OUTLINED_FUNCTION_6_26();
  sub_18C92A6E0(a1);
  OUTLINED_FUNCTION_4_20();
  if ((v4 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_2_29();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE055C68);
    OUTLINED_FUNCTION_0_18();
    v7 = *(_QWORD *)(v9 + 48);
    v8 = sub_18CEC1E40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v3, v8);
    OUTLINED_FUNCTION_5_22();
    OUTLINED_FUNCTION_7_20();
    sub_18CEC1E70();
    *v5 = v9;
    OUTLINED_FUNCTION_8_1();
  }
  else
  {
    *v2 = 0u;
    v2[1] = 0u;
    OUTLINED_FUNCTION_3_29();
  }
}

uint64_t sub_18C971500()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0;
  swift_bridgeObjectRetain();
  v2 = sub_18C92A7C4();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA008);
  sub_18CEC1E58();
  v5 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v2);
  sub_18C971614();
  sub_18CEC1E70();
  *v1 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t type metadata accessor for MethodImplementationCache()
{
  return objc_opt_self();
}

unint64_t sub_18C971614()
{
  unint64_t result;

  result = qword_1EE056288;
  if (!qword_1EE056288)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BA4C, &type metadata for MethodImplementationCache.Key);
    atomic_store(result, (unint64_t *)&qword_1EE056288);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MethodImplementationCache.Key(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 16))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MethodImplementationCache.Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MethodImplementationCache.Key()
{
  return &type metadata for MethodImplementationCache.Key;
}

unint64_t sub_18C9716DC()
{
  unint64_t result;

  result = qword_1ECEA9FF0;
  if (!qword_1ECEA9FF0)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BA24, &type metadata for MethodImplementationCache.Key);
    atomic_store(result, (unint64_t *)&qword_1ECEA9FF0);
  }
  return result;
}

void MockAccount.accountType.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_0_3();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *a1 = v3;
  a1[1] = v4;
  sub_18C97174C(v3, v4);
  OUTLINED_FUNCTION_21_11();
}

uint64_t sub_18C97174C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

void MockAccount.accountType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_48_0();
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  sub_18C97179C(v4, v5);
  OUTLINED_FUNCTION_130_0();
}

uint64_t sub_18C97179C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void MockAccount.accountType.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void MockAccount.altDSID.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_11();
}

void MockAccount.altDSID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.altDSID.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MockAccount.dsid.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_3();
  return *(_QWORD *)(v0 + 48);
}

void MockAccount.dsid.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v2 + 48) = a1;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.dsid.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void MockAccount.firstName.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_11();
}

void MockAccount.firstName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.firstName.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void MockAccount.identifier.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_11();
}

void MockAccount.identifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.identifier.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void MockAccount.lastName.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_11();
}

void MockAccount.lastName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.lastName.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void MockAccount.username.getter()
{
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_21_11();
}

void MockAccount.username.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_130_0();
}

void MockAccount.username.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MockAccount.__allocating_init(accountType:altDSID:dsid:firstName:identifier:lastName:username:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  char v27;
  char v28;
  uint64_t v29;

  OUTLINED_FUNCTION_29_10();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = swift_allocObject();
  MockAccount.init(accountType:altDSID:dsid:firstName:identifier:lastName:username:)(v26, v24, v22, v20, v28, v18, v16, v14, a9, a10, a11, a12, a13);
  return v29;
}

uint64_t MockAccount.init(accountType:altDSID:dsid:firstName:identifier:lastName:username:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = *a1;
  v14 = a1[1];
  *(_OWORD *)(v13 + 16) = xmmword_18CF0A010;
  *(_QWORD *)(v13 + 40) = 0;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_BYTE *)(v13 + 56) = 1;
  *(_OWORD *)(v13 + 112) = 0u;
  *(_OWORD *)(v13 + 96) = 0u;
  *(_OWORD *)(v13 + 80) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(_QWORD *)(v13 + 128) = MEMORY[0x1E0DEE9E8];
  OUTLINED_FUNCTION_48_0();
  v16 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = v14;
  sub_18C97179C(v16, v17);
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a3;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 48) = a4;
  *(_BYTE *)(v13 + 56) = a5 & 1;
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 64) = a6;
  *(_QWORD *)(v13 + 72) = a7;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 80) = a8;
  *(_QWORD *)(v13 + 88) = a9;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 96) = a10;
  *(_QWORD *)(v13 + 104) = a11;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v13 + 112) = a12;
  *(_QWORD *)(v13 + 120) = a13;
  swift_bridgeObjectRelease();
  return v13;
}

Swift::Bool __swiftcall MockAccount.isActive(for:)(__C::AMSAccountMediaType a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_35();
  v1 = OUTLINED_FUNCTION_14_1();
  v3 = sub_18C945940(v1, v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Void __swiftcall MockAccount.setActive(_:for:)(Swift::Bool _, __C::AMSAccountMediaType a2)
{
  void *v3;
  id v4;

  if (_)
  {
    OUTLINED_FUNCTION_48_0();
    sub_18C972900(&v4, a2._rawValue);
    swift_endAccess();

  }
  else
  {
    OUTLINED_FUNCTION_48_0();
    v3 = (void *)sub_18C975CCC();
    swift_endAccess();

  }
  OUTLINED_FUNCTION_21_11();
}

uint64_t MockAccount.deinit()
{
  uint64_t v0;

  sub_18C97179C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MockAccount.__deallocating_deinit()
{
  MockAccount.deinit();
  return swift_deallocClassInstance();
}

void sub_18C971F80(uint64_t *a1@<X8>)
{
  MockAccount.accountType.getter(a1);
}

void sub_18C971FA0()
{
  MockAccount.altDSID.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C971FBC()
{
  return MockAccount.dsid.getter();
}

void sub_18C971FE0()
{
  MockAccount.firstName.getter();
}

void sub_18C972000()
{
  MockAccount.lastName.getter();
}

void sub_18C972020()
{
  MockAccount.username.getter();
  OUTLINED_FUNCTION_0();
}

BOOL sub_18C97203C(__C::AMSAccountMediaType a1)
{
  return MockAccount.isActive(for:)(a1);
}

void sub_18C972060(Swift::Bool a1, __C::AMSAccountMediaType a2)
{
  MockAccount.setActive(_:for:)(a1, a2);
}

uint64_t static MockAccount.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_0_3();
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_0_3();
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (v4 == 1)
  {
    if (v6 == 1)
      goto LABEL_3;
LABEL_13:
    sub_18C97174C(v7, v6);
    sub_18C97179C(v5, v4);
    sub_18C97179C(v7, v6);
    goto LABEL_14;
  }
  if (v6 == 1)
  {
    OUTLINED_FUNCTION_129();
    goto LABEL_13;
  }
  if (v4)
  {
    if (!v6)
    {
      sub_18C97174C(v5, v4);
      OUTLINED_FUNCTION_44();
      goto LABEL_14;
    }
    if (v5 == v7 && v4 == v6)
    {
      sub_18C97174C(v5, v4);
      OUTLINED_FUNCTION_44();
    }
    else
    {
      v16 = OUTLINED_FUNCTION_117();
      sub_18C97174C(v5, v4);
      OUTLINED_FUNCTION_44();
      v12 = 0;
      if ((v16 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v6)
  {
    goto LABEL_14;
  }
LABEL_3:
  OUTLINED_FUNCTION_0_3();
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  OUTLINED_FUNCTION_0_3();
  v10 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v10)
      goto LABEL_14;
    if (v8 != *(_QWORD *)(a2 + 32) || v9 != v10)
    {
      OUTLINED_FUNCTION_117();
      v12 = OUTLINED_FUNCTION_138();
      if ((v13 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v10)
  {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_0_3();
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  OUTLINED_FUNCTION_0_3();
  v19 = *(_BYTE *)(a2 + 56);
  if ((v18 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      goto LABEL_14;
  }
  else
  {
    if (v17 != *(_QWORD *)(a2 + 48))
      v19 = 1;
    if ((v19 & 1) != 0)
      goto LABEL_14;
  }
  OUTLINED_FUNCTION_0_3();
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  OUTLINED_FUNCTION_0_3();
  v22 = *(_QWORD *)(a2 + 72);
  if (v21)
  {
    if (!v22)
      goto LABEL_14;
    if (v20 != *(_QWORD *)(a2 + 64) || v21 != v22)
    {
      OUTLINED_FUNCTION_117();
      v12 = OUTLINED_FUNCTION_138();
      if ((v24 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v22)
  {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_0_3();
  v25 = *(_QWORD *)(a1 + 80);
  v26 = *(_QWORD *)(a1 + 88);
  OUTLINED_FUNCTION_0_3();
  v27 = *(_QWORD *)(a2 + 88);
  if (v26)
  {
    if (!v27)
      goto LABEL_14;
    if (v25 != *(_QWORD *)(a2 + 80) || v26 != v27)
    {
      OUTLINED_FUNCTION_117();
      v12 = OUTLINED_FUNCTION_138();
      if ((v29 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v27)
  {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_0_3();
  v30 = *(_QWORD *)(a1 + 96);
  v31 = *(_QWORD *)(a1 + 104);
  OUTLINED_FUNCTION_0_3();
  v32 = *(_QWORD *)(a2 + 104);
  if (v31)
  {
    if (v32)
    {
      if (v30 != *(_QWORD *)(a2 + 96) || v31 != v32)
      {
        OUTLINED_FUNCTION_117();
        v12 = OUTLINED_FUNCTION_138();
        if ((v34 & 1) == 0)
          return v12 & 1;
      }
      goto LABEL_62;
    }
LABEL_14:
    v12 = 0;
    return v12 & 1;
  }
  if (v32)
    goto LABEL_14;
LABEL_62:
  OUTLINED_FUNCTION_0_3();
  v36 = *(_QWORD *)(a1 + 112);
  v35 = *(_QWORD *)(a1 + 120);
  OUTLINED_FUNCTION_0_3();
  v37 = *(_QWORD *)(a2 + 120);
  v12 = (v35 | v37) == 0;
  if (v35 && v37)
  {
    if (v36 == *(_QWORD *)(a2 + 112) && v35 == v37)
      v12 = 1;
    else
      v12 = OUTLINED_FUNCTION_117();
  }
  return v12 & 1;
}

uint64_t sub_18C972390(uint64_t *a1, uint64_t *a2)
{
  return static MockAccount.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t MockAccount.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_0_3();
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_5_12();
    if (v1)
    {
      OUTLINED_FUNCTION_5_12();
      OUTLINED_FUNCTION_42();
      sub_18CEC1888();
      v3 = v2;
      v4 = v1;
    }
    else
    {
      OUTLINED_FUNCTION_10_16();
      sub_18C97179C(v2, 0);
      v3 = v2;
      v4 = 0;
    }
    sub_18C97179C(v3, v4);
  }
  OUTLINED_FUNCTION_0_3();
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  OUTLINED_FUNCTION_0_3();
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    OUTLINED_FUNCTION_5_12();
    sub_18CEC2128();
  }
  OUTLINED_FUNCTION_0_3();
  if (*(_QWORD *)(v0 + 72))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  OUTLINED_FUNCTION_0_3();
  if (*(_QWORD *)(v0 + 88))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  OUTLINED_FUNCTION_0_3();
  if (*(_QWORD *)(v0 + 104))
  {
    OUTLINED_FUNCTION_5_12();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_20_9();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_10_16();
  }
  OUTLINED_FUNCTION_0_3();
  if (!*(_QWORD *)(v0 + 120))
    return OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  return swift_bridgeObjectRelease();
}

void MockAccount.hashValue.getter()
{
  sub_18CEC211C();
  MockAccount.hash(into:)();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C9725C8()
{
  MockAccount.hashValue.getter();
}

uint64_t sub_18C9725E8()
{
  return MockAccount.hash(into:)();
}

void sub_18C972608()
{
  sub_18CEC211C();
  MockAccount.hash(into:)();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_24_1();
}

void sub_18C972638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_29_10();
  v11 = v9;
  v13 = v12;
  v15 = v14;
  v16 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    sub_18CEC211C();
    OUTLINED_FUNCTION_157();
    MockAccount.hash(into:)();
    v19 = sub_18CEC214C() & ~(-1 << *(_BYTE *)(v16 + 32));
    if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
    {
      type metadata accessor for MockAccount();
      v20 = OUTLINED_FUNCTION_30_10();
      static MockAccount.== infix(_:_:)(v20, v13);
      OUTLINED_FUNCTION_40_8();
      if ((v10 & 1) != 0)
      {
LABEL_11:
        OUTLINED_FUNCTION_242();
        OUTLINED_FUNCTION_115();
        *v15 = *(_QWORD *)(*(_QWORD *)(*v9 + 48) + 8 * v19);
        swift_retain();
        goto LABEL_19;
      }
      while (1)
      {
        OUTLINED_FUNCTION_41_9();
        if (((*(_QWORD *)(v16 + 56 + v21) >> v19) & 1) == 0)
          break;
        v22 = OUTLINED_FUNCTION_30_10();
        static MockAccount.== infix(_:_:)(v22, v13);
        OUTLINED_FUNCTION_40_8();
        if ((v10 & 1) != 0)
          goto LABEL_11;
      }
    }
    OUTLINED_FUNCTION_115();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_37_8();
    v27 = OUTLINED_FUNCTION_25_10();
    sub_18C973BA4(v27, v19, isUniquelyReferenced_nonNull_native);
    *v9 = a9;
LABEL_18:
    swift_bridgeObjectRelease();
    *v15 = v13;
    goto LABEL_19;
  }
  if (v16 < 0)
    v17 = *v9;
  else
    v17 = v16 & 0xFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_25_10();
  v18 = sub_18CEC1D14();
  OUTLINED_FUNCTION_242();
  if (v18)
  {
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_242();
    type metadata accessor for MockAccount();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *v15 = a9;
    swift_unknownObjectRelease();
LABEL_19:
    OUTLINED_FUNCTION_17_14();
    return;
  }
  v23 = sub_18CEC1D08();
  if (!__OFADD__(v23, 1))
  {
    v24 = sub_18C972B28(v17, v23 + 1);
    v28 = v24;
    if (*(_QWORD *)(v24 + 24) <= *(_QWORD *)(v24 + 16))
    {
      OUTLINED_FUNCTION_25_10();
      sub_18C972FC8();
      v25 = v28;
    }
    else
    {
      v25 = v24;
      OUTLINED_FUNCTION_25_10();
    }
    sub_18C973B04(v13, v25);
    *v11 = v25;
    goto LABEL_18;
  }
  __break(1u);
}

#error "18C9728F0: call analysis failed (funcsize=49)"

uint64_t sub_18C972900(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_18CEC181C();
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  v7 = sub_18CEC214C();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_18C973EE8((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_18CEC181C();
  v12 = v11;
  if (v10 == sub_18CEC181C() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_18CEC205C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_18CEC181C();
        v19 = v18;
        if (v17 == sub_18CEC181C() && v19 == v20)
          goto LABEL_16;
        v22 = sub_18CEC205C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_18C972B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A8);
    v2 = sub_18CEC1D74();
    v6 = v2;
    sub_18CEC1CFC();
    if (sub_18CEC1D20())
    {
      type metadata accessor for MockAccount();
      do
      {
        swift_dynamicCast();
        v2 = v6;
        if (*(_QWORD *)(v6 + 24) <= *(_QWORD *)(v6 + 16))
        {
          sub_18C972FC8();
          v2 = v6;
        }
        sub_18CEC211C();
        MockAccount.hash(into:)();
        sub_18CEC214C();
        v3 = sub_18CEC1CF0();
        *(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3) = v5;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_18CEC1D20());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_18C972CA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055940);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * i);
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      sub_18CEC211C();
      swift_bridgeObjectRetain();
      sub_18CEC1888();
      swift_bridgeObjectRelease();
      sub_18CEC2140();
      result = sub_18CEC214C();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 24 * v24);
      *v29 = v18;
      v29[1] = v19;
      v29[2] = v20;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v31)
        goto LABEL_32;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_32;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_32;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_18C8FD834(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v31)
                  goto LABEL_32;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_18C972FC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A8);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_18CEC211C();
      MockAccount.hash(into:)();
      sub_18CEC214C();
      result = sub_18CEC1CF0();
      *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v15 >= v9)
        goto LABEL_23;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_23;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_23;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_23:
              swift_release();
              v19 = 1 << *(_BYTE *)(v2 + 32);
              if (v19 > 63)
                sub_18C8FD834(0, (unint64_t)(v19 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v19;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v9)
                  goto LABEL_23;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18C973210()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0562A0);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * i);
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      sub_18CEC211C();
      swift_bridgeObjectRetain();
      sub_18CEC1888();
      swift_bridgeObjectRelease();
      sub_18CEC2128();
      result = sub_18CEC214C();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 24 * v24);
      *v29 = v18;
      v29[1] = v19;
      v29[2] = v20;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v31)
        goto LABEL_32;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_32;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_32;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_18C8FD834(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v31)
                  goto LABEL_32;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18C973534()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0543F8);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_QWORD *)(v2 + 48) + 40 * i;
      v29 = *(_OWORD *)v18;
      v30 = *(_OWORD *)(v18 + 16);
      v31 = *(_QWORD *)(v18 + 32);
      result = sub_18CEC1D38();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v27 = *(_QWORD *)(v4 + 48) + 40 * v22;
      *(_OWORD *)v27 = v29;
      *(_OWORD *)(v27 + 16) = v30;
      *(_QWORD *)(v27 + 32) = v31;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v28 = 1 << *(_BYTE *)(v2 + 32);
              if (v28 > 63)
                sub_18C8FD834(0, (unint64_t)(v28 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18C9737F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056298);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_18CEC181C();
      sub_18CEC211C();
      sub_18CEC1888();
      v17 = sub_18CEC214C();
      result = swift_bridgeObjectRelease();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v16;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v28)
        goto LABEL_32;
      v14 = v29[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_32;
        v14 = v29[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_32;
          v14 = v29[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_32:
              swift_release();
              v1 = v27;
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_18C8FD834(0, (unint64_t)(v26 + 63) >> 6, v29);
              else
                *v29 = -1 << v26;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v28)
                  goto LABEL_32;
                v14 = v29[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_18C973B04(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_18CEC211C();
  MockAccount.hash(into:)();
  sub_18CEC214C();
  result = sub_18CEC1CF0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_18C973BA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_18C972FC8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_18C9742D0();
      goto LABEL_14;
    }
    sub_18C974E40();
  }
  v8 = *v3;
  sub_18CEC211C();
  MockAccount.hash(into:)();
  result = sub_18CEC214C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for MockAccount();
    v10 = swift_retain();
    v11 = static MockAccount.== infix(_:_:)(v10, v5);
    result = swift_release();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      result = sub_18CEC2098();
      __break(1u);
    }
    else
    {
      v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v13 = swift_retain();
        v14 = static MockAccount.== infix(_:_:)(v13, v5);
        result = swift_release();
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = v5;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

uint64_t sub_18C973D38(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v10 = result;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_17;
  if ((a5 & 1) != 0)
  {
    sub_18C973210();
  }
  else
  {
    if (v12 > v11)
    {
      result = (uint64_t)sub_18C974478();
      goto LABEL_17;
    }
    sub_18C975054();
  }
  v13 = *v5;
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  swift_bridgeObjectRelease();
  sub_18CEC2128();
  result = sub_18CEC214C();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  a4 = result & ~v14;
  v15 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v13 + 48);
    do
    {
      v18 = (uint64_t *)(v17 + 24 * a4);
      result = *v18;
      v19 = v18[2];
      v20 = *v18 == v10 && v18[1] == a2;
      if (v20 || (result = sub_18CEC205C(), (result & 1) != 0))
      {
        if (v19 == a3)
          goto LABEL_20;
      }
      a4 = (a4 + 1) & v16;
    }
    while (((*(_QWORD *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  v21 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 24 * a4);
  *v22 = v10;
  v22[1] = a2;
  v22[2] = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_20:
  result = sub_18CEC2098();
  __break(1u);
  return result;
}

uint64_t sub_18C973EE8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_18C9737F8();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_18C9749B0();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_18C975870();
  }
  v9 = *v3;
  sub_18CEC181C();
  sub_18CEC211C();
  sub_18CEC1888();
  v10 = sub_18CEC214C();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_18CEC181C();
  v14 = v13;
  if (v12 == sub_18CEC181C() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_18CEC205C();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_18CEC181C();
      v21 = v20;
      if (v19 == sub_18CEC181C() && v21 == v22)
        goto LABEL_25;
      v24 = sub_18CEC205C();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for AMSAccountMediaType(0);
  result = sub_18CEC2098();
  __break(1u);
  return result;
}

void *sub_18C974114()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055940);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 8 * v20);
    v23 = *v21;
    v22 = v21[1];
    v24 = v21[2];
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v20);
    *v25 = v23;
    v25[1] = v22;
    v25[2] = v24;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18C9742D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A8);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = (void *)swift_retain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18C974478()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0562A0);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 8 * v20);
    v23 = *v21;
    v22 = v21[1];
    v24 = v21[2];
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v20);
    *v25 = v23;
    v25[1] = v22;
    v25[2] = v24;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18C974634()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[2];
  uint64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0543F8);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    result = (void *)sub_18C866A58(*(_QWORD *)(v2 + 48) + 40 * i, (uint64_t)v24);
    v21 = *(_QWORD *)(v4 + 48) + 8 * v20;
    v22 = v24[0];
    v23 = v24[1];
    *(_QWORD *)(v21 + 32) = v25;
    *(_OWORD *)v21 = v22;
    *(_OWORD *)(v21 + 16) = v23;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18C974800()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054440);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_18C9749B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056298);
  v2 = *v0;
  v3 = sub_18CEC1D5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    result = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_18C974B58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055940);
  v2 = sub_18CEC1D68();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_34:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    sub_18CEC211C();
    swift_bridgeObjectRetain_n();
    sub_18CEC1888();
    swift_bridgeObjectRelease();
    sub_18CEC2140();
    result = sub_18CEC214C();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v7 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v22);
    *v27 = v16;
    v27[1] = v17;
    v27[2] = v18;
    ++*(_QWORD *)(v3 + 16);
    if (v6)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    if (v12 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_18C974E40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0559A8);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_18CEC211C();
    swift_retain();
    MockAccount.hash(into:)();
    sub_18CEC214C();
    result = sub_18CEC1CF0();
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v18;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_23;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_23;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_18C975054()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0562A0);
  v2 = sub_18CEC1D68();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_34:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    sub_18CEC211C();
    swift_bridgeObjectRetain_n();
    sub_18CEC1888();
    swift_bridgeObjectRelease();
    sub_18CEC2128();
    result = sub_18CEC214C();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v7 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v22);
    *v27 = v16;
    v27[1] = v17;
    v27[2] = v18;
    ++*(_QWORD *)(v3 + 16);
    if (v6)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    if (v12 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18C97533C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0543F8);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    sub_18C866A58(*(_QWORD *)(v2 + 48) + 40 * i, (uint64_t)v29);
    result = sub_18CEC1D38();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v10 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v10 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = *(_QWORD *)(v4 + 48) + 40 * v21;
    v27 = v29[0];
    v28 = v29[1];
    *(_QWORD *)(v26 + 32) = v30;
    *(_OWORD *)v26 = v27;
    *(_OWORD *)(v26 + 16) = v28;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_36;
    if (v15 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_32;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_32;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18C9755C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054440);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_18CEC211C();
    swift_bridgeObjectRetain();
    sub_18CEC1888();
    result = sub_18CEC214C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18C975870()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056298);
  v3 = sub_18CEC1D68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_18CEC181C();
    sub_18CEC211C();
    v17 = v16;
    sub_18CEC1888();
    v18 = sub_18CEC214C();
    result = swift_bridgeObjectRelease();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v29)
        goto LABEL_32;
      v14 = *(_QWORD *)(v28 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v29)
          goto LABEL_32;
        v14 = *(_QWORD *)(v28 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18C975B48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_27_13();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v21 = v7;
  v8 = *v0;
  sub_18CEC211C();
  OUTLINED_FUNCTION_42();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  OUTLINED_FUNCTION_158();
  sub_18CEC2140();
  v9 = OUTLINED_FUNCTION_32_9() & ~(-1 << *(_BYTE *)(v8 + 32));
  if (((*(_QWORD *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    while (1)
    {
      v11 = (_QWORD *)(v10 + 24 * v9);
      v12 = v11[2];
      v13 = *v11 == v6 && v11[1] == v4;
      if ((v13 || (OUTLINED_FUNCTION_117() & 1) != 0) && v12 == v2)
        break;
      OUTLINED_FUNCTION_6_27();
      if ((v14 & 1) == 0)
        goto LABEL_10;
    }
    OUTLINED_FUNCTION_43();
    v16 = OUTLINED_FUNCTION_23_11();
    v17 = MEMORY[0x18];
    v22 = MEMORY[0x18];
    MEMORY[0x18] = 0x8000000000000000;
    if ((v16 & 1) == 0)
    {
      sub_18C974114();
      v17 = v22;
    }
    v18 = *(_QWORD *)(v17 + 48) + 24 * v9;
    v19 = *(_OWORD *)v18;
    v20 = *(_QWORD *)(v18 + 16);
    *(_OWORD *)v21 = v19;
    *(_QWORD *)(v21 + 16) = v20;
    sub_18C975F78(v9);
    MEMORY[0x18] = v22;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    result = OUTLINED_FUNCTION_43();
    *(_QWORD *)v21 = 0;
    *(_QWORD *)(v21 + 8) = 0;
    *(_QWORD *)(v21 + 16) = 0;
  }
  return result;
}

uint64_t sub_18C975CCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  sub_18CEC181C();
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18CEC1888();
  v3 = sub_18CEC214C();
  swift_bridgeObjectRelease();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = sub_18CEC181C();
  v8 = v7;
  if (v6 == sub_18CEC181C() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_18CEC205C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      do
      {
        v5 = (v5 + 1) & v12;
        if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
        v13 = sub_18CEC181C();
        v15 = v14;
        if (v13 == sub_18CEC181C() && v15 == v16)
          goto LABEL_16;
        v18 = sub_18CEC205C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v1;
  v23 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18C9749B0();
    v21 = v23;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v5);
  sub_18C976154(v5);
  *v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

_UNKNOWN **sub_18C975EDC()
{
  return &protocol witness table for MockAccountType;
}

unint64_t sub_18C975EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE056290;
  if (!qword_1EE056290)
  {
    v1 = type metadata accessor for MockAccount();
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for MockAccount, v1);
    atomic_store(result, (unint64_t *)&qword_1EE056290);
  }
  return result;
}

uint64_t type metadata accessor for MockAccount()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockAccount()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockAccount.__allocating_init(accountType:altDSID:dsid:firstName:identifier:lastName:username:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 144))(a1, a2, a3, a4, a5 & 1);
}

unint64_t sub_18C975F78(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  BOOL v17;
  __int128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_18CEC1CD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_18CEC211C();
        swift_bridgeObjectRetain();
        sub_18CEC1888();
        sub_18CEC2140();
        v10 = sub_18CEC214C();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = v14 + 24 * v2;
            v16 = (__int128 *)(v14 + 24 * v6);
            v17 = v2 != v6 || v15 >= (unint64_t)v16 + 24;
            v2 = v6;
            if (v17)
            {
              v18 = *v16;
              *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
              *(_OWORD *)v15 = v18;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_18C976154(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_18CEC1CD8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
        sub_18CEC181C();
        sub_18CEC211C();
        v11 = v10;
        sub_18CEC1888();
        v12 = sub_18CEC214C();

        swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= (uint64_t)v13)
          {
LABEL_15:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            v19 = v2 != v6 || v17 >= v18 + 1;
            v2 = v6;
            if (v19)
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= (uint64_t)v13)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void static MockAccountStore.shared.getter()
{
  OUTLINED_FUNCTION_0_3();
  swift_retain();
  OUTLINED_FUNCTION_21_11();
}

void static MockAccountStore.shared.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_48_0();
  qword_1EE0562A8 = a1;
  swift_release();
  OUTLINED_FUNCTION_21_11();
}

void static MockAccountStore.shared.modify()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void sub_18C9763D4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_18C976438((uint64_t)v1);
}

void sub_18C976404()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_0_3();
  v1 = *(id *)(v0 + 24);
  OUTLINED_FUNCTION_21_11();
}

void sub_18C976438(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_48_0();
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

  OUTLINED_FUNCTION_21_11();
}

void sub_18C976470()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

void sub_18C9764A4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_18C9764F8(v0);
}

uint64_t sub_18C9764CC()
{
  OUTLINED_FUNCTION_0_3();
  return swift_bridgeObjectRetain();
}

void sub_18C9764F8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 32) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_11();
}

void sub_18C976530()
{
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MockAccountStore.__allocating_init(accounts:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MockAccountStore.init(accounts:)(a1);
  return v2;
}

_QWORD *MockAccountStore.init(accounts:)(uint64_t a1)
{
  _QWORD *v1;

  v1[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
  v1[4] = sub_18CEC178C();
  v1[2] = a1;
  return v1;
}

uint64_t sub_18C9765F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C97660C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v21;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_0_3();
  v3 = *(_QWORD *)(v2 + 16);
  v21 = MEMORY[0x1E0DEE9D8];
  sub_18C8FBCB4((_QWORD *)(v0 + 16), v3);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = (unint64_t)(*(_QWORD *)(v0 + 32) + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v6 &= v6 - 1;
  while (1)
  {
    v12 = swift_bridgeObjectRetain();
    v1 = (unint64_t)&v21;
    sub_18C946CB4(v12);
    if (v6)
      goto LABEL_2;
LABEL_3:
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v8 >= v7)
      goto LABEL_23;
    v9 = *(_QWORD *)(v4 + 8 * v8);
    v10 = v5 + 1;
    if (!v9)
    {
      v10 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_23;
      v9 = *(_QWORD *)(v4 + 8 * v10);
      if (!v9)
      {
        v10 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_23;
        v9 = *(_QWORD *)(v4 + 8 * v10);
        if (!v9)
        {
          v10 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_23;
          v9 = *(_QWORD *)(v4 + 8 * v10);
          if (!v9)
          {
            v10 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_23;
            v9 = *(_QWORD *)(v4 + 8 * v10);
            if (!v9)
            {
              v10 = v5 + 6;
              if (v5 + 6 >= v7)
                goto LABEL_23;
              v9 = *(_QWORD *)(v4 + 8 * v10);
              if (!v9)
                break;
            }
          }
        }
      }
    }
LABEL_20:
    v6 = (v9 - 1) & v9;
    v5 = v10;
  }
  v11 = v5 + 7;
  while (v11 < v7)
  {
    v9 = *(_QWORD *)(v4 + 8 * v11++);
    if (v9)
    {
      v10 = v11 - 1;
      goto LABEL_20;
    }
  }
LABEL_23:
  swift_release();
  OUTLINED_FUNCTION_44();
  v1 = v21;
  if (v21 >> 62)
    goto LABEL_46;
  v13 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_35();
  while (1)
  {
    v14 = *(_QWORD *)(v0 + 112);
    if (!v13)
      break;
    v15 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v16 = MEMORY[0x18D788880](v15, v1);
      }
      else
      {
        v16 = *(_QWORD *)(v1 + 8 * v15 + 32);
        swift_retain();
      }
      v17 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      OUTLINED_FUNCTION_0_3();
      v18 = *(_QWORD *)(v16 + 88);
      if (v18)
      {
        if (v14)
        {
          v19 = *(_QWORD *)(v16 + 80) == *(_QWORD *)(v0 + 104) && v18 == *(_QWORD *)(v0 + 112);
          if (v19 || (sub_18CEC205C() & 1) != 0)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_17();
            goto LABEL_43;
          }
        }
      }
      else if (!v14)
      {
        goto LABEL_42;
      }
      swift_release();
      ++v15;
      if (v17 == v13)
        goto LABEL_41;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35();
    v13 = sub_18CEC1EC4();
  }
LABEL_41:
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  v16 = 0;
LABEL_43:
  OUTLINED_FUNCTION_17();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_18C9768C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C9768D4()
{
  _QWORD *v0;
  uint64_t result;
  _QWORD *v2;
  uint64_t (*v3)(void);

  result = v0[4];
  if (result)
  {
    v2 = (_QWORD *)v0[2];
    *v2 = v0[3];
    v2[1] = result;
    v3 = (uint64_t (*)(void))v0[1];
    swift_bridgeObjectRetain();
    return OUTLINED_FUNCTION_8(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18C976918(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C976930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_0_3();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_35();
  if (v3 && (v4 = sub_18C92A684(), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0 || !sub_18CEC1EC4())
    {
      OUTLINED_FUNCTION_17();
      v6 = MEMORY[0x1E0DEE9E8];
      goto LABEL_7;
    }
    sub_18C946150(MEMORY[0x1E0DEE9D8]);
    v6 = v9;
  }
  OUTLINED_FUNCTION_17();
LABEL_7:
  swift_bridgeObjectRelease();
  v7 = sub_18C956F5C(v6);
  OUTLINED_FUNCTION_44();
  return OUTLINED_FUNCTION_7_22(v7, *(uint64_t (**)(void))(v0 + 8));
}

void sub_18C976A10(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_18CEC1EC4())
    sub_18C946150(MEMORY[0x1E0DEE9D8]);
  else
    v2 = MEMORY[0x1E0DEE9E8];
  *a1 = v2;
}

uint64_t sub_18C976A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_18C976A78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[2];

  v1 = v0[17];
  v2 = (uint64_t *)(v1 + 80);
  result = OUTLINED_FUNCTION_0_3();
  v4 = *(_QWORD *)(v1 + 88);
  if (v4)
  {
    v5 = v0[18];
    v6 = *v2;
    OUTLINED_FUNCTION_0_3();
    v7 = *(_QWORD *)(v5 + 32);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35();
    sub_18C928F90(v6, v4, v7);
    v9 = v8;
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_17();
    if (v9)
    {
LABEL_5:
      swift_willThrow();
      v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
    v10 = v0[18];
    OUTLINED_FUNCTION_0_3();
    v11 = *(void **)(v10 + 24);
    if (v11)
    {
      v12 = v11;
      goto LABEL_5;
    }
    v14 = v0[17];
    result = OUTLINED_FUNCTION_0_3();
    v15 = *(_QWORD *)(v14 + 24);
    if (v15 == 1)
      goto LABEL_18;
    v16 = *(_QWORD *)(v14 + 16);
    v17 = (uint64_t *)(v0[18] + 16);
    OUTLINED_FUNCTION_48_0();
    sub_18C97174C(v16, v15);
    swift_retain();
    swift_isUniquelyReferenced_nonNull_native();
    v33[0] = *v17;
    v18 = v33[0];
    *v17 = 0x8000000000000000;
    result = OUTLINED_FUNCTION_19_19();
    if (!__OFADD__(*(_QWORD *)(v18 + 16), (v19 & 1) == 0))
    {
      v20 = result;
      v21 = v19;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE0562D0);
      if ((sub_18CEC1E58() & 1) != 0)
      {
        v22 = OUTLINED_FUNCTION_19_19();
        if ((v21 & 1) != (v23 & 1))
          return sub_18CEC20A4();
        v20 = v22;
      }
      *v17 = v33[0];
      swift_bridgeObjectRelease();
      v24 = *v17;
      if ((v21 & 1) == 0)
      {
        OUTLINED_FUNCTION_35();
        sub_18C976A10(v33);
        sub_18C959310(v20, v16, v15, v33[0], v24);
      }
      v25 = v0[17];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_17();
      sub_18C972638((uint64_t)v33, v25, v26, v27, v28, v29, v30, v31, v32);
      swift_endAccess();
      swift_release();
      sub_18C97179C(v16, v15);
      v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t MockAccountStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MockAccountStore.__deallocating_deinit()
{
  MockAccountStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18C976D24(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v4 = a2[1];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v5;
  *v5 = v2;
  v5[1] = sub_18C936F98;
  return sub_18C9765F8(v3, v4);
}

uint64_t sub_18C976D84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_18C92473C;
  return sub_18C9768C0(a1, v4, v5);
}

uint64_t sub_18C976DE8()
{
  uint64_t v0;
  _QWORD *v1;
  _OWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (_OWORD *)OUTLINED_FUNCTION_14_22(v1, (uint64_t)sub_18C976E30);
  return sub_18C976918(v2);
}

uint64_t sub_18C976E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_0();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_90_2(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_18C976E60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_14_22(v1, (uint64_t)sub_18C91C3F4);
  return sub_18C976A68(v2);
}

uint64_t MockAccountStore.account(withIdentifier:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v22;
  _QWORD v23[5];

  OUTLINED_FUNCTION_0_3();
  v5 = *(_QWORD *)(v2 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  sub_18C8FBCB4(v23, v5);
  v6 = v23[1];
  v7 = v23[3];
  v8 = v23[4];
  v9 = (unint64_t)(v23[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (!v8)
    goto LABEL_3;
LABEL_2:
  v8 &= v8 - 1;
  while (1)
  {
    v14 = swift_bridgeObjectRetain();
    v2 = (unint64_t)&v22;
    sub_18C946CB4(v14);
    if (v8)
      goto LABEL_2;
LABEL_3:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v9)
      goto LABEL_23;
    v11 = *(_QWORD *)(v6 + 8 * v10);
    v12 = v7 + 1;
    if (!v11)
    {
      v12 = v7 + 2;
      if (v7 + 2 >= v9)
        goto LABEL_23;
      v11 = *(_QWORD *)(v6 + 8 * v12);
      if (!v11)
      {
        v12 = v7 + 3;
        if (v7 + 3 >= v9)
          goto LABEL_23;
        v11 = *(_QWORD *)(v6 + 8 * v12);
        if (!v11)
        {
          v12 = v7 + 4;
          if (v7 + 4 >= v9)
            goto LABEL_23;
          v11 = *(_QWORD *)(v6 + 8 * v12);
          if (!v11)
          {
            v12 = v7 + 5;
            if (v7 + 5 >= v9)
              goto LABEL_23;
            v11 = *(_QWORD *)(v6 + 8 * v12);
            if (!v11)
            {
              v12 = v7 + 6;
              if (v7 + 6 >= v9)
                goto LABEL_23;
              v11 = *(_QWORD *)(v6 + 8 * v12);
              if (!v11)
                break;
            }
          }
        }
      }
    }
LABEL_20:
    v8 = (v11 - 1) & v11;
    v7 = v12;
  }
  v13 = v7 + 7;
  while (v13 < v9)
  {
    v11 = *(_QWORD *)(v6 + 8 * v13++);
    if (v11)
    {
      v12 = v13 - 1;
      goto LABEL_20;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_release();
  v2 = v22;
  if (v22 >> 62)
    goto LABEL_44;
  v15 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_35();
  for (; v15; v15 = sub_18CEC1EC4())
  {
    v16 = 4;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v17 = MEMORY[0x18D788880](v16 - 4, v2);
      }
      else
      {
        v17 = *(_QWORD *)(v2 + 8 * v16);
        swift_retain();
      }
      v18 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
        break;
      OUTLINED_FUNCTION_0_3();
      v19 = *(_QWORD *)(v17 + 88);
      if (v19)
      {
        if (a2)
        {
          v20 = *(_QWORD *)(v17 + 80) == a1 && v19 == a2;
          if (v20 || (sub_18CEC205C() & 1) != 0)
          {
LABEL_41:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_17();
            goto LABEL_47;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_41;
      }
      swift_release();
      ++v16;
      if (v18 == v15)
      {
        OUTLINED_FUNCTION_43();
        goto LABEL_46;
      }
    }
LABEL_43:
    __break(1u);
LABEL_44:
    OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_35();
  }
  OUTLINED_FUNCTION_17();
LABEL_46:
  swift_bridgeObjectRelease();
  v17 = 0;
LABEL_47:
  OUTLINED_FUNCTION_17();
  return v17;
}

AppleMediaServices::MockAccountType_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MockAccountStore.accountType(withIdentifier:)(AppleMediaServices::MockAccountType_optional withIdentifier)
{
  AppleMediaServices::MockAccountType_optional *v1;

  if (withIdentifier.value.identifier.value._object)
  {
    *v1 = withIdentifier;
    withIdentifier.value.identifier.value._countAndFlagsBits = swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return withIdentifier;
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MockAccountStore.accounts(with:)(AppleMediaServices::MockAccountType with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Bool v8;
  void *v9;
  uint64_t v10;
  Swift::OpaquePointer_optional result;

  OUTLINED_FUNCTION_0_3();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_35();
  if (v3 && (v4 = sub_18C92A684(), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_43();
  }
  else
  {
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0 || !sub_18CEC1EC4())
    {
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_43();
      v6 = MEMORY[0x1E0DEE9E8];
      goto LABEL_7;
    }
    sub_18C946150(MEMORY[0x1E0DEE9D8]);
    v6 = v10;
    OUTLINED_FUNCTION_17();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  v7 = sub_18C956F5C(v6);
  swift_bridgeObjectRelease();
  v9 = (void *)v7;
  result.value._rawValue = v9;
  result.is_nil = v8;
  return result;
}

uint64_t sub_18C977264@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = MockAccountStore.account(withIdentifier:)(*a1, a1[1]);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18C977298(Swift::String_optional *a1)
{
  return MockAccountStore.accountType(withIdentifier:)(*a1).value.identifier.value._countAndFlagsBits;
}

unint64_t sub_18C9772B4(uint64_t a1, uint64_t a2)
{
  return (unint64_t)MockAccountStore.accounts(with:)(*(AppleMediaServices::MockAccountType *)&a1);
}

_UNKNOWN **sub_18C9772D4()
{
  return &protocol witness table for MockAccount;
}

void sub_18C9772E0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_18C976404();
  *a1 = v2;
}

uint64_t sub_18C97730C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_18C9764CC();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for MockAccountStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockAccountStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockAccountStore.saveError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockAccountStore.saveError.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockAccountStore.saveError.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MockAccountStore.targetedSaveErrors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MockAccountStore.targetedSaveErrors.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MockAccountStore.targetedSaveErrors.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MockAccountStore.__allocating_init(accounts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MockAccountStore.account(withIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)OUTLINED_FUNCTION_2_4();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18C977414;
  return v7(a1, a2);
}

uint64_t sub_18C977414(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_90_2(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of MockAccountStore.accountType(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_11_3();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18C92473C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of MockAccountStore.accounts(with:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_11_3();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_14_22(v1, (uint64_t)sub_18C977554);
  return OUTLINED_FUNCTION_7_22(v2, v4);
}

uint64_t dispatch thunk of MockAccountStore.saveAccount(_:doVerify:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)OUTLINED_FUNCTION_2_4();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18C91C3F4;
  return v7(a1, a2);
}

AppleMediaServices::MockAccountType __swiftcall MockAccountType.init(identifier:)(AppleMediaServices::MockAccountType identifier)
{
  AppleMediaServices::MockAccountType *v1;

  *v1 = identifier;
  return identifier;
}

uint64_t MockAccountType.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void MockAccountType.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_253();
}

uint64_t (*MockAccountType.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static MockAccountType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_18CEC205C() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

void MockAccountType.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_18CEC2134();
    OUTLINED_FUNCTION_163();
    sub_18CEC1888();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18CEC2134();
    OUTLINED_FUNCTION_253();
  }
}

void MockAccountType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_18CEC211C();
  sub_18CEC2134();
  if (v1)
  {
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_2_30();
    swift_bridgeObjectRelease();
  }
  sub_18CEC214C();
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_18C9776E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = static MockAccountType.iTunesTypeIdentifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static MockAccountType.iTunesTypeIdentifier.getter()
{
  uint64_t v0;

  if (qword_1EE0547A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_48_0();
  v0 = qword_1ECEA9E40;
  OUTLINED_FUNCTION_163();
  return v0;
}

uint64_t sub_18C977778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MockAccountType.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_18C9777A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_18CEC211C();
  sub_18CEC2134();
  if (v1)
  {
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_2_30();
    swift_bridgeObjectRelease();
  }
  sub_18CEC214C();
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_18C977804()
{
  uint64_t result;
  uint64_t v1;

  result = sub_18CEC181C();
  qword_1ECEA9E40 = result;
  qword_1ECEA9E48 = v1;
  return result;
}

uint64_t static MockAccountType.iTunesTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EE0547A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_48_0();
  qword_1ECEA9E40 = a1;
  qword_1ECEA9E48 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MockAccountType.iTunesTypeIdentifier.modify())()
{
  if (qword_1EE0547A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_48_0();
  return j__swift_endAccess;
}

unint64_t sub_18C977918()
{
  unint64_t result;

  result = qword_1EE056318;
  if (!qword_1EE056318)
  {
    result = MEMORY[0x18D78AB48](&protocol conformance descriptor for MockAccountType, &type metadata for MockAccountType);
    atomic_store(result, (unint64_t *)&qword_1EE056318);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MockAccountType(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MockAccountType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MockAccountType()
{
  return &type metadata for MockAccountType;
}

uint64_t MockAuthenticateResult.account.getter()
{
  return swift_retain();
}

uint64_t sub_18C977A10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = MockAuthenticateResult.account.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MockAuthenticateResult()
{
  return &type metadata for MockAuthenticateResult;
}

uint64_t sub_18C977A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_18CEC142C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_18C977A80(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18CEC142C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_18C977AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_18CEC142C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_18C977AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_18CEC142C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_18C977B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_18CEC142C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_18C977B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_18CEC142C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_18C977BC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18C977BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_19();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_18C977BF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18C977C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_19();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for OpenURLAction()
{
  uint64_t result;

  result = qword_1EE056320;
  if (!qword_1EE056320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18C977C68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18CEC142C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_18C977CD0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_18CEC181C();
  qword_1ECEADAC0 = result;
  *(_QWORD *)algn_1ECEADAC8 = v1;
  return result;
}

uint64_t *sub_18C977CFC()
{
  if (qword_1EE0547A8 != -1)
    swift_once();
  return &qword_1ECEADAC0;
}

uint64_t sub_18C977D3C()
{
  return sub_18CEC1858();
}

BOOL sub_18C977D48(uint64_t a1)
{
  return a1 != 0;
}

BOOL sub_18C977D60@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_18C977D48(*a1);
  *a2 = result;
  return result;
}

void sub_18C977D90(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_18C977D98()
{
  uint64_t v0;

  sub_18C977CFC();
  v0 = qword_1ECEADAC0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_18C977DD0()
{
  sub_18C9783D0();
  sub_18C90B66C();
  return sub_18CEC1168();
}

uint64_t sub_18C977E18()
{
  sub_18C978394();
  return sub_18CEC20C8();
}

uint64_t sub_18C977E40()
{
  sub_18C978394();
  sub_18C9783D0();
  sub_18C90B66C();
  return sub_18CEC20B0();
}

uint64_t sub_18C977E88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_18C977EA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t inited;
  uint64_t v4;

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_18CEC13B4();
  LOBYTE(v1) = objc_msgSend(v1, sel_openStandardURL_, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0551C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18CF07380;
  *(_QWORD *)(inited + 32) = 0x737574617473;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = (_BYTE)v1;
  v4 = sub_18CEC178C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_18C977F74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_18C936F98;
  return sub_18C977E88();
}

void sub_18C977FBC(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = sub_18CEC142C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18C928F10(a1, &v20);
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_18C872CA0((uint64_t)&v20, (uint64_t *)&unk_1ECEAA5F0);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    sub_18C928C34();
    OUTLINED_FUNCTION_49();
    *v15 = 1;
    v16 = swift_willThrow();
    OUTLINED_FUNCTION_2_31(v16, (uint64_t *)&unk_1EE055E70);
    return;
  }
  sub_18CEC13FC();
  swift_bridgeObjectRelease();
  sub_18C978230();
  v14 = (void *)OUTLINED_FUNCTION_49();
  sub_18C97826C((uint64_t)v9, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10) == 1)
  {
    sub_18C872CA0((uint64_t)v7, (uint64_t *)&unk_1ECEAA300);
    swift_willThrow();
    OUTLINED_FUNCTION_2_31((uint64_t)v14, (uint64_t *)&unk_1EE055E70);
    sub_18C872CA0((uint64_t)v9, (uint64_t *)&unk_1ECEAA300);

  }
  else
  {
    v17 = *(uint64_t (**)(char *, char *, uint64_t))(v11 + 32);
    v18 = v17(v13, v7, v10);
    OUTLINED_FUNCTION_2_31(v18, (uint64_t *)&unk_1EE055E70);
    sub_18C872CA0((uint64_t)v9, (uint64_t *)&unk_1ECEAA300);

    v17(a2, v13, v10);
  }
}

void sub_18C97821C(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_18C977FBC(a1, a2);
}

unint64_t sub_18C978230()
{
  unint64_t result;

  result = qword_1EE056338;
  if (!qword_1EE056338)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BE5C, &type metadata for OpenURLAction.PerformError);
    atomic_store(result, &qword_1EE056338);
  }
  return result;
}

uint64_t sub_18C97826C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for OpenURLAction.PerformError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18C9782F4 + 4 * asc_18CF0BCE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18C978314 + 4 * byte_18CF0BCE5[v4]))();
}

_BYTE *sub_18C9782F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18C978314(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18C97831C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18C978324(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18C97832C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18C978334(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OpenURLAction.PerformError()
{
  return &type metadata for OpenURLAction.PerformError;
}

unint64_t sub_18C978358()
{
  unint64_t result;

  result = qword_1EE056348;
  if (!qword_1EE056348)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BE34, &type metadata for OpenURLAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE056348);
  }
  return result;
}

unint64_t sub_18C978394()
{
  unint64_t result;

  result = qword_1EE056350;
  if (!qword_1EE056350)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BD7C, &type metadata for OpenURLAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE056350);
  }
  return result;
}

unint64_t sub_18C9783D0()
{
  unint64_t result;

  result = qword_1EE056358;
  if (!qword_1EE056358)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0BDBC, &type metadata for OpenURLAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE056358);
  }
  return result;
}

uint64_t sub_18C97840C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_18C978424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_1EE0547A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_48_0();
  v2 = qword_1ECEA9E40;
  v1 = qword_1ECEA9E48;
  *(_QWORD *)(v0 + 80) = qword_1ECEA9E48;
  OUTLINED_FUNCTION_163();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_18C9784E0;
  return sub_18C9768C0(v0 + 56, v2, v1);
}

uint64_t sub_18C9784E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136();
  *v2 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C97853C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1 == 1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 48) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v3;
  *v3 = v0;
  v3[1] = sub_18C9785C8;
  return sub_18C976918((_OWORD *)(v0 + 40));
}

uint64_t sub_18C9785BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C9785C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 120) = a1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_28();
}

uint64_t sub_18C97862C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_18C978664()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C978690(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (__cdecl *v9)();

  *(_QWORD *)(v6 + 112) = a5;
  *(_QWORD *)(v6 + 120) = a6;
  *(_BYTE *)(v6 + 144) = a4;
  *(_QWORD *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 88) = a1;
  v9 = (uint64_t (__cdecl *)())((char *)&dword_1EE056388 + dword_1EE056388);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 128) = v7;
  *v7 = v6;
  v7[1] = sub_18C9786F8;
  return v9();
}

uint64_t sub_18C9786F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C978758()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  BOOL v12;

  v1 = *(_QWORD *)(v0 + 136);
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if (v1 >> 62)
    goto LABEL_31;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_163();
  for (; v2; v2 = sub_18CEC1EC4())
  {
    v3 = 0;
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 136) & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        v7 = MEMORY[0x18D788880](v3, v1);
      }
      else
      {
        v7 = *(_QWORD *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      v8 = v3 + 1;
      if (__OFADD__(v3, 1))
        break;
      if (v5
        && (OUTLINED_FUNCTION_48_0(), (v9 = *(_QWORD *)(v7 + 40)) != 0)
        && (*(_QWORD *)(v7 + 32) == *(_QWORD *)(v0 + 88) ? (v10 = v9 == *(_QWORD *)(v0 + 96)) : (v10 = 0),
            v10 || (sub_18CEC205C() & 1) != 0)
        || (*(_BYTE *)(v0 + 144) & 1) == 0
        && (OUTLINED_FUNCTION_48_0(), (*(_BYTE *)(v7 + 56) & 1) == 0)
        && *(_QWORD *)(v7 + 48) == *(_QWORD *)(v0 + 104)
        || v4
        && (OUTLINED_FUNCTION_48_0(), (v11 = *(_QWORD *)(v7 + 120)) != 0)
        && (*(_QWORD *)(v7 + 112) == *(_QWORD *)(v0 + 112) ? (v12 = v11 == *(_QWORD *)(v0 + 120)) : (v12 = 0),
            v12 || (sub_18CEC205C() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_96();
        OUTLINED_FUNCTION_17();
        goto LABEL_33;
      }
      swift_release();
      ++v3;
      if (v8 == v2)
        goto LABEL_32;
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_163();
  }
LABEL_32:
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_96();
  v7 = 0;
LABEL_33:
  OUTLINED_FUNCTION_17();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t PassingMockAuthenticateTask.__allocating_init(authenticationResults:options:)(int a1, void *a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2();
  PassingMockAuthenticateTask.init(authenticationResults:options:)(a1, a2);
  return v4;
}

uint64_t PassingMockAuthenticateTask.init(authenticationResults:options:)(int a1, id a2)
{
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a2)
  {
    v4 = objc_msgSend(a2, sel_clientInfo);
    v5 = objc_msgSend(v4, sel_accountMediaType);

  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_18CEC181C();
  OUTLINED_FUNCTION_10_23(v6, v7);
  v9 = v8;
  OUTLINED_FUNCTION_115();
  if (v9)
  {
    v31 = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE055910);
    v10 = OUTLINED_FUNCTION_19_20();
    v11 = v29;
    v12 = v30;
    if (!v10)
    {
      v11 = 0;
      v12 = 0;
    }
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  *(_QWORD *)(v2 + 24) = v11;
  *(_QWORD *)(v2 + 32) = v12;
  if (a2)
    v13 = objc_msgSend(a2, sel_canMakeAccountActive);
  else
    v13 = 0;
  *(_BYTE *)(v2 + 40) = v13;
  v14 = sub_18CEC181C();
  OUTLINED_FUNCTION_10_23(v14, v15);
  v17 = v16;
  OUTLINED_FUNCTION_115();
  if (v17)
  {
    v29 = v17;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE055910);
    v18 = swift_dynamicCast();
    v19 = v31;
    if (!v18)
      v19 = 0;
    v20 = v18 ^ 1;
  }
  else
  {
    v19 = 0;
    v20 = 1;
  }
  *(_QWORD *)(v2 + 48) = v19;
  *(_BYTE *)(v2 + 56) = v20;
  v21 = sub_18CEC181C();
  OUTLINED_FUNCTION_10_23(v21, v22);
  v24 = v23;
  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();

  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE055910);
    v25 = OUTLINED_FUNCTION_19_20();
    v26 = v29;
    v27 = v30;
    if (!v25)
    {
      v26 = 0;
      v27 = 0;
    }
  }
  else
  {
    v26 = 0;
    v27 = 0;
  }
  *(_QWORD *)(v2 + 64) = v26;
  *(_QWORD *)(v2 + 72) = v27;
  return v2;
}

uint64_t PassingMockAuthenticateTask.performAuthentication()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[17] = a1;
  v2[18] = v1;
  v3 = sub_18CEC1504();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C978BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  __C::AMSAccountMediaType v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t);

  OUTLINED_FUNCTION_48_0();
  v1 = qword_1EE0562A8;
  *(_QWORD *)(v0 + 176) = qword_1EE0562A8;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(_QWORD *)(v2 + 32);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = *(_BYTE *)(v2 + 56);
    v7 = *(_QWORD *)(v2 + 64);
    v8 = *(_QWORD *)(v2 + 72);
    v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EE056370
                                                                                    + dword_1EE056370);
    OUTLINED_FUNCTION_48();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v9;
    *v9 = v0;
    v9[1] = sub_18C978E20;
    return v26(v3, v4, v5, v6, v7, v8);
  }
  else
  {
    if (qword_1EE0547A0 != -1)
      swift_once();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_21_15();
    sub_18CEC14F8();
    sub_18CEC14EC();
    OUTLINED_FUNCTION_7_23();
    type metadata accessor for MockAccount();
    v11 = OUTLINED_FUNCTION_2();
    v17 = OUTLINED_FUNCTION_0_20(v11, v12, v13, v14, v15, v16);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = *(_QWORD *)(v0 + 144);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_14_23();
    OUTLINED_FUNCTION_115();
    v19 = *(_QWORD *)(v18 + 48);
    v20 = *(_BYTE *)(v18 + 56);
    OUTLINED_FUNCTION_48_0();
    *(_QWORD *)(v17 + 48) = v19;
    *(_BYTE *)(v17 + 56) = v20;
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_20_15();
    OUTLINED_FUNCTION_96();
    if (*(_BYTE *)(v18 + 40) == 1)
    {
      v21 = *(void **)(*(_QWORD *)(v0 + 144) + 16);
      if (v21)
      {
        v22._rawValue = v21;
        OUTLINED_FUNCTION_15_20(v22);

      }
    }
    v23 = qword_1EE0562A8;
    *(_QWORD *)(v0 + 208) = qword_1EE0562A8;
    if (v23)
    {
      swift_retain();
      OUTLINED_FUNCTION_48();
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v24;
      v25 = OUTLINED_FUNCTION_17_15(v24, (uint64_t)sub_18C979030);
      return OUTLINED_FUNCTION_5_24(v25);
    }
    else
    {
      OUTLINED_FUNCTION_6_28();
      return OUTLINED_FUNCTION_4_21(*(uint64_t (**)(void))(v0 + 8));
    }
  }
}

uint64_t sub_18C978E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_25();
    return OUTLINED_FUNCTION_2_28();
  }
}

uint64_t sub_18C978EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  __C::AMSAccountMediaType v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 192);
  if (!v1)
  {
    if (qword_1EE0547A0 != -1)
      swift_once();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_21_15();
    sub_18CEC14F8();
    sub_18CEC14EC();
    OUTLINED_FUNCTION_7_23();
    type metadata accessor for MockAccount();
    v2 = OUTLINED_FUNCTION_2();
    v1 = OUTLINED_FUNCTION_0_20(v2, v3, v4, v5, v6, v7);
  }
  *(_QWORD *)(v0 + 200) = v1;
  v8 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_14_23();
  OUTLINED_FUNCTION_115();
  v9 = *(_QWORD *)(v8 + 48);
  v10 = *(_BYTE *)(v8 + 56);
  OUTLINED_FUNCTION_48_0();
  *(_QWORD *)(v1 + 48) = v9;
  *(_BYTE *)(v1 + 56) = v10;
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_20_15();
  OUTLINED_FUNCTION_96();
  if (*(_BYTE *)(v8 + 40) == 1)
  {
    v11 = *(void **)(*(_QWORD *)(v0 + 144) + 16);
    if (v11)
    {
      v12._rawValue = v11;
      OUTLINED_FUNCTION_15_20(v12);

    }
  }
  v13 = qword_1EE0562A8;
  *(_QWORD *)(v0 + 208) = qword_1EE0562A8;
  if (v13)
  {
    swift_retain();
    OUTLINED_FUNCTION_48();
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v14;
    v15 = OUTLINED_FUNCTION_17_15(v14, (uint64_t)sub_18C979030);
    return OUTLINED_FUNCTION_5_24(v15);
  }
  else
  {
    OUTLINED_FUNCTION_6_28();
    return OUTLINED_FUNCTION_4_21(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C979030()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136();
  *v2 = *v1;
  *(_QWORD *)(v3 + 224) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_28();
}

uint64_t sub_18C979098()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_28();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C9790C0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PassingMockAuthenticateTask.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PassingMockAuthenticateTask.__deallocating_deinit()
{
  PassingMockAuthenticateTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18C979140@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = PassingMockAuthenticateTask.__allocating_init(authenticationResults:options:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18C979164(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_18C9791B8;
  return PassingMockAuthenticateTask.performAuthentication()(a1);
}

uint64_t sub_18C9791B8()
{
  uint64_t *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_136();
  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for PassingMockAuthenticateTask()
{
  return objc_opt_self();
}

uint64_t method lookup function for PassingMockAuthenticateTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PassingMockAuthenticateTask.__allocating_init(authenticationResults:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

id PromiseSerialQueue.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PromiseSerialQueue.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  objc_class *v24;
  id v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA200);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_120();
  v32 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEA9D38);
  v34 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_120();
  v33 = v7;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CE8);
  v8 = *(_QWORD *)(v31 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v31);
  v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v28 = (char *)&v27 - v11;
  v12 = OBJC_IVAR___AMSPromiseSerialQueue_serialQueue;
  type metadata accessor for AsyncSerialQueue();
  swift_allocObject();
  v13 = v0;
  sub_18C9393B4(0);
  *(_QWORD *)&v0[v12] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CF8);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  v15 = v28;
  v16 = v33;
  sub_18CEC1AB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(&v13[OBJC_IVAR___AMSPromiseSerialQueue_actionContinuation], v16, v30);

  v18 = sub_18CEC1AA4();
  v19 = v32;
  __swift_storeEnumTagSinglePayload(v32, 1, 1, v18);
  v20 = v29;
  v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v15, v31);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23 + v22, v20, v21);
  sub_18C924DB4(v19);
  swift_release();
  sub_18C872CA0(v19, &qword_1ECEAA200);
  v24 = (objc_class *)OUTLINED_FUNCTION_23_12();
  v35.receiver = v13;
  v35.super_class = v24;
  v25 = objc_msgSendSuper2(&v35, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v21);
  return v25;
}

uint64_t sub_18C979528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CE0);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C97958C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CE8);
  sub_18CEC1AEC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_18C979610;
  OUTLINED_FUNCTION_25();
  return sub_18CEC1AF8();
}

uint64_t sub_18C979610()
{
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C979644()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(v0 + 16);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 24);
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_18C9796D4;
    return v4();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C9796D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_18C8735E4(v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v3;
  v4[1] = sub_18C979610;
  OUTLINED_FUNCTION_25();
  return sub_18CEC1AF8();
}

uint64_t sub_18C97976C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_18C9797E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9CE8) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_18C97AD4C;
  return sub_18C979528(a1, v5, v6, v7);
}

uint64_t type metadata accessor for PromiseSerialQueue()
{
  uint64_t result;

  result = qword_1ECEA9D70;
  if (!qword_1ECEA9D70)
    return swift_getSingletonMetadata();
  return result;
}

void PromiseSerialQueue.__deallocating_deinit()
{
  void *v0;
  objc_super v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEA9D38);
  sub_18CEC1AD4();
  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_23_12();
  objc_msgSendSuper2(&v1, sel_dealloc);
  OUTLINED_FUNCTION_20_16();
}

void sub_18C97998C()
{
  id v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)AMSMutableBinaryPromise), sel_init);
  v1 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_17_16(v1);
  v2 = objc_msgSend(v0, sel_completionHandlerAdapter);
  v3 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v4 + 16) = sub_18C979B08;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v5 + 16) = sub_18C8CDCE0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_18C979EA0((uint64_t)sub_18C979A88, v1, 0, (uint64_t)sub_18C979B34, v5);
  OUTLINED_FUNCTION_242();
  swift_release();
  OUTLINED_FUNCTION_146();
}

uint64_t sub_18C979A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18C979CCC(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1E252B1C8, (uint64_t)sub_18C97AD24);
}

void sub_18C979AB0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_18CEC1354();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_18C979B08(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_18C979AB0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_18C979B10()
{
  swift_release();
  return swift_deallocObject();
}

void sub_18C979B34(unsigned __int8 *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_18C979B70(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_18C979BD0()
{
  id v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)AMSMutablePromise), sel_init);
  v1 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_17_16(v1);
  v2 = objc_msgSend(v0, sel_completionHandlerAdapter);
  v3 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v4 + 16) = sub_18C97A038;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v5 + 16) = sub_18C8CDCE0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_18C97A060((uint64_t)sub_18C979FEC, v1, 0, (uint64_t)sub_18C97A040, v5);
  OUTLINED_FUNCTION_242();
  swift_release();
  OUTLINED_FUNCTION_146();
}

uint64_t sub_18C979CCC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_17_16(v8);
  a3(a6, v8);
  return swift_release();
}

void sub_18C979D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_18CEC1354();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id sub_18C979DA0(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;

  v9 = _Block_copy(aBlock);
  v10 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = a1;
  v12 = (void *)a6(a5, v10);
  OUTLINED_FUNCTION_242();

  return v12;
}

uint64_t sub_18C979E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  void (*v7)(uint64_t, void *);
  _QWORD v9[6];

  v9[4] = a1;
  v9[5] = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = a4;
  v9[3] = a5;
  v6 = _Block_copy(v9);
  v7 = *(void (**)(uint64_t, void *))(a3 + 16);
  OUTLINED_FUNCTION_48();
  v7(a3, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t sub_18C979EA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v23 = a1;
  v24 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B58);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = AMSLogKey();
  if (v13)
  {
    v14 = v13;
    v15 = sub_18CEC181C();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v5;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = v23;
  *(_QWORD *)(v18 + 32) = v17;
  *(_QWORD *)(v18 + 40) = v19;
  v20 = v24;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v20;
  *(_QWORD *)(v18 + 64) = a5;
  *(_BYTE *)(v18 + 72) = a3 & 1;
  v25 = &unk_1EE0563D0;
  v26 = v18;
  v21 = v5;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEA9D38);
  sub_18CEC1AC8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_18C979FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18C979CCC(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1E252B150, (uint64_t)sub_18C97AC3C);
}

uint64_t sub_18C97A014()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_18C97A038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_18C979D2C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_18C97A040(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C97A060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v22 = a1;
  v23 = a4;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B58);
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = AMSLogKey();
  if (v12)
  {
    v13 = v12;
    v14 = sub_18CEC181C();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v25[0] = a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = v14;
  v18 = v22;
  v17[4] = v16;
  v17[5] = v18;
  v19 = v23;
  v17[6] = a2;
  v17[7] = v19;
  v17[8] = a5;
  sub_18C97AB9C((uint64_t)v25, (uint64_t)(v17 + 9));
  v25[1] = &unk_1EE0563B8;
  v25[2] = v17;
  swift_unknownObjectRetain();
  v20 = v5;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEA9D38);
  sub_18CEC1AC8();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v24);
}

void sub_18C97A1C0()
{
  unint64_t v0;

  sub_18C97A280();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PromiseSerialQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromiseSerialQueue.runBinaryPromiseBlock(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PromiseSerialQueue.runPromiseBlock(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void sub_18C97A280()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECEA9CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEA9CF8);
    v0 = sub_18CEC1AE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECEA9CB0);
  }
}

uint64_t sub_18C97A2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18C979E20(a1, a2, *(_QWORD *)(v2 + 16), (uint64_t)sub_18C933354, (uint64_t)&block_descriptor_16);
}

uint64_t sub_18C97A300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18C979E20(a1, a2, *(_QWORD *)(v2 + 16), (uint64_t)sub_18C979B70, (uint64_t)&block_descriptor_34_0);
}

uint64_t sub_18C97A328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v10;

  *(_QWORD *)(v8 + 176) = a7;
  *(_QWORD *)(v8 + 184) = a8;
  *(_QWORD *)(v8 + 160) = a5;
  *(_QWORD *)(v8 + 168) = a6;
  *(_QWORD *)(v8 + 144) = a3;
  *(_QWORD *)(v8 + 152) = a4;
  *(_QWORD *)(v8 + 136) = a2;
  *(_BYTE *)(v8 + 208) = v10;
  return swift_task_switch();
}

uint64_t sub_18C97A358()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15_21();
  swift_retain();
  OUTLINED_FUNCTION_48();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_18C97A3E0;
  return OUTLINED_FUNCTION_5_25(v3);
}

uint64_t sub_18C97A3E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136();
  *v2 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97A434()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  __n128 *v4;
  id v5;
  id v6;
  unint64_t v7;
  void *v8;
  __CFString *v9;
  os_log_type_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  __int128 v27;

  OUTLINED_FUNCTION_39_8();
  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 136);
  v3 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  *(_OWORD *)(OUTLINED_FUNCTION_2() + 16) = xmmword_18CF07370;
  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_23_12();
  *(_QWORD *)(v0 + 16) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v4 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_13_19(v4, (__n128)xmmword_18CF07380);
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v2;
  OUTLINED_FUNCTION_12_18();
  v7 = OUTLINED_FUNCTION_27_14();
  OUTLINED_FUNCTION_212(v7);
  v8 = (void *)OUTLINED_FUNCTION_34_10();
  v9 = AMSLogableError(v8);
  OUTLINED_FUNCTION_33_9();
  sub_18CEC181C();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_7_24();
  sub_18C872CA0((uint64_t)v5, (uint64_t *)&unk_1ECEAA5F0);
  v10 = sub_18CEC1B94();
  if (OUTLINED_FUNCTION_114_0(v10))
  {
    v2 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v11 = byte_1ECEA9E18;
    v12 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v12 + 16) = v11;
    OUTLINED_FUNCTION_30_11(v12, (uint64_t)sub_18C84C730);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_96();
    objc_autoreleasePoolPop(v2);
    v13 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v14 = OUTLINED_FUNCTION_2();
    v22 = OUTLINED_FUNCTION_22_13(v14, v15, v16, v17, v18, v19, v20, v21, v27);
    OUTLINED_FUNCTION_31_2(v22);
    OUTLINED_FUNCTION_18_2();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v13);
    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_96();
  v23 = *(void **)(v0 + 200);
  v24 = (void *)OUTLINED_FUNCTION_18_19();
  v25 = OUTLINED_FUNCTION_11_24(v24);
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_36_8();

  return OUTLINED_FUNCTION_3_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C97A690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[23] = a7;
  v8[24] = a8;
  v8[21] = a5;
  v8[22] = a6;
  v8[19] = a3;
  v8[20] = a4;
  v8[17] = v10;
  v8[18] = a2;
  return swift_task_switch();
}

uint64_t sub_18C97A6BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15_21();
  swift_retain();
  OUTLINED_FUNCTION_48();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v1;
  *v1 = v0;
  v1[1] = sub_18C97A744;
  return OUTLINED_FUNCTION_5_25(v3);
}

uint64_t sub_18C97A744()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136();
  *v2 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97A794()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  __n128 *v4;
  id v5;
  id v6;
  unint64_t v7;
  void *v8;
  __CFString *v9;
  os_log_type_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  __int128 v27;

  OUTLINED_FUNCTION_39_8();
  if (qword_1ECEAA4A8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  v3 = (void *)qword_1ECEAA3A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  *(_OWORD *)(OUTLINED_FUNCTION_2() + 16) = xmmword_18CF07370;
  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_23_12();
  *(_QWORD *)(v0 + 16) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v4 = (__n128 *)OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_13_19(v4, (__n128)xmmword_18CF07380);
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v2;
  OUTLINED_FUNCTION_12_18();
  v7 = OUTLINED_FUNCTION_27_14();
  OUTLINED_FUNCTION_212(v7);
  v8 = (void *)OUTLINED_FUNCTION_34_10();
  v9 = AMSLogableError(v8);
  OUTLINED_FUNCTION_33_9();
  sub_18CEC181C();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_7_24();
  sub_18C872CA0((uint64_t)v5, (uint64_t *)&unk_1ECEAA5F0);
  v10 = sub_18CEC1B94();
  if (OUTLINED_FUNCTION_114_0(v10))
  {
    v2 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v11 = byte_1ECEA9E18;
    v12 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v12 + 16) = v11;
    OUTLINED_FUNCTION_30_11(v12, (uint64_t)sub_18C84C6D8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_96();
    objc_autoreleasePoolPop(v2);
    v13 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v14 = OUTLINED_FUNCTION_2();
    v22 = OUTLINED_FUNCTION_22_13(v14, v15, v16, v17, v18, v19, v20, v21, v27);
    OUTLINED_FUNCTION_31_2(v22);
    OUTLINED_FUNCTION_18_2();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v13);
    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_96();
  v23 = *(void **)(v0 + 208);
  v24 = (void *)OUTLINED_FUNCTION_18_19();
  v25 = OUTLINED_FUNCTION_11_24(v24);
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_36_8();

  return OUTLINED_FUNCTION_3_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C97A9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_18C97AD4C;
  return sub_18C97A328(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_18C97AAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_18C97AD4C;
  return sub_18C97A690(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_18C97AB58()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18C97AB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0563B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C97ABE4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_10_24();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_1_21(v1);
  return OUTLINED_FUNCTION_4_22();
}

void sub_18C97AC3C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t v3;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = a1;
  v2(&v3);
  OUTLINED_FUNCTION_20_16();
}

uint64_t sub_18C97AC64()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C97ACA0()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_10_24();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_1_21(v1);
  return OUTLINED_FUNCTION_4_22();
}

uint64_t sub_18C97ACF4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_18C97AD24(char a1)
{
  uint64_t v1;
  void (*v2)(char *);
  char v3;

  v2 = *(void (**)(char *))(v1 + 16);
  v3 = a1;
  v2(&v3);
  OUTLINED_FUNCTION_20_16();
}

uint64_t destroy for PromptGranularNotificationAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PromptGranularNotificationAction(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = a2 + 24;
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    v8 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v5 + 32);
  }
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PromptGranularNotificationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 48) = v4;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 24);
    v6 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 40) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for PromptGranularNotificationAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptGranularNotificationAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptGranularNotificationAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptGranularNotificationAction()
{
  return &type metadata for PromptGranularNotificationAction;
}

uint64_t sub_18C97B094()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_18C97B0AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(uint64_t **)(v0 + 16);
  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_18C97B110;
  return sub_18C97B3D4(v3, v2, v4);
}

uint64_t sub_18C97B110()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  _QWORD *v5;

  OUTLINED_FUNCTION_0_21();
  if (v1)
  {
    v4 = *(uint64_t (**)(_QWORD))(v3 + 8);
  }
  else
  {
    if ((v0 & 1) != 0)
    {
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v2 + 32) = v5;
      *v5 = v3;
      v5[1] = sub_18C97B19C;
      return sub_18C95F39C();
    }
    v4 = *(uint64_t (**)(_QWORD))(v3 + 8);
  }
  return v4(0);
}

uint64_t sub_18C97B19C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_18C97B1F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_18C97B240;
  return sub_18C97B094();
}

uint64_t sub_18C97B240()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_21();
  if (!v1)
    **(_BYTE **)(v2 + 16) = v0 & 1;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_18C97B284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  _BYTE v14[40];
  _OWORD v15[4];

  sub_18C95638C(a2, (uint64_t)v15);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_18C97BC88(v7, (uint64_t)v15);
  if (v3)
  {
    sub_18C97B378(a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = v8;
    *(_QWORD *)(a3 + 8) = v9;
    *(_QWORD *)(a3 + 16) = v10;
    sub_18C95638C(a2, (uint64_t)v14);
    sub_18C9624C0(a1, (uint64_t)v14, (uint64_t)v15);
    result = sub_18C97B378(a2);
    v12 = v15[1];
    *(_OWORD *)(a3 + 24) = v15[0];
    *(_OWORD *)(a3 + 40) = v12;
    v13 = v15[3];
    *(_OWORD *)(a3 + 56) = v15[2];
    *(_OWORD *)(a3 + 72) = v13;
  }
  return result;
}

uint64_t sub_18C97B364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_18C97B284(a1, a2, a3);
}

uint64_t sub_18C97B378(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE055E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PromptNotificationAction()
{
  return &type metadata for PromptNotificationAction;
}

uint64_t sub_18C97B3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[24] = a2;
  v3[25] = a3;
  v3[23] = a1;
  return swift_task_switch();
}

uint64_t sub_18C97B3F0()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v29 = v0 + 152;
  sub_18C97BF0C();
  OUTLINED_FUNCTION_35();
  v30 = sub_18C97BDD0();
  *(_QWORD *)(v0 + 208) = v30;
  if (qword_1EE054668 != -1)
    swift_once();
  v1 = (__int128 *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = (void *)qword_1EE056008;
  *(_QWORD *)(v0 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v6 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v6 + 16) = xmmword_18CF073C0;
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = &type metadata for PromptNotificationAction;
  OUTLINED_FUNCTION_35();
  v7 = v5;
  if (AMSLogKey())
  {
    sub_18CEC181C();
    OUTLINED_FUNCTION_10_25();
  }
  v8 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 224) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v9 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v9 + 16) = xmmword_18CF07380;
  sub_18C872C64(v0 + 80, v0 + 120);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_7_25(v0 + 120, v9 + 32);
  *(_QWORD *)(v6 + 32) = v9;
  OUTLINED_FUNCTION_17();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  sub_18C872FF8();
  v31 = v10;
  v11._object = (void *)0x800000018CEE6DB0;
  v11._countAndFlagsBits = 0xD000000000000013;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v11);
  type metadata accessor for UNAuthorizationOptions(0);
  *(_QWORD *)(v0 + 176) = v12;
  *(_QWORD *)(v0 + 152) = v8;
  sub_18C872D48(v29, v0 + 120);
  *v1 = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_18C872148(v0 + 120, v0 + 80);
  *(_BYTE *)(v0 + 112) = 0;
  v32 = *v1;
  v33 = *(_OWORD *)(v0 + 96);
  v34 = *(_BYTE *)(v0 + 112);
  v13 = v31;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_3_2();
    v13 = v27;
  }
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
  {
    OUTLINED_FUNCTION_3_2();
    v13 = v28;
  }
  *(_QWORD *)(v13 + 16) = v14 + 1;
  v15 = v13 + 40 * v14;
  *(_BYTE *)(v15 + 64) = v34;
  *(_OWORD *)(v15 + 32) = v32;
  *(_OWORD *)(v15 + 48) = v33;
  sub_18C872CA0(v29, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v6 + 40) = v13;
  v16 = sub_18CEC1B70();
  if (os_log_type_enabled(v7, v16))
  {
    v17 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v18 = byte_1ECEA9E18;
    v19 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v19 + 16) = v18;
    *(_QWORD *)(v0 + 80) = v6;
    *(_QWORD *)(v0 + 88) = sub_18C84C730;
    *(_QWORD *)(v0 + 96) = v19;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_26_0();
    v20 = sub_18CEC17C8();
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_release();
    objc_autoreleasePoolPop(v17);
    v23 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v24 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v24 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 64) = sub_18C872FBC();
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v22;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v23);
    OUTLINED_FUNCTION_17();
  }
  swift_bridgeObjectRelease();

  v25 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_18C97B848;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_18C8FFDDC;
  *(_QWORD *)(v0 + 104) = &block_descriptor_17;
  objc_msgSend(v30, sel_requestAuthorizationWithOptions_completionHandler_, v25, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_18C97B848()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18C97B8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v27 = *(unsigned __int8 *)(v0 + 120);
  v4 = (void *)qword_1EE056008;
  v5 = OUTLINED_FUNCTION_2();
  *(_QWORD *)(v0 + 80) = v3;
  v6 = (__int128 *)(v0 + 80);
  *(_OWORD *)(v5 + 16) = xmmword_18CF073C0;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = &type metadata for PromptNotificationAction;
  *(_QWORD *)(v0 + 88) = v1;
  OUTLINED_FUNCTION_35();
  v7 = v4;
  if (AMSLogKey())
  {
    sub_18CEC181C();
    OUTLINED_FUNCTION_10_25();
  }
  v8 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v8 + 16) = xmmword_18CF07380;
  sub_18C872C64(v0 + 80, v0 + 120);
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_7_25(v0 + 120, v8 + 32);
  *(_QWORD *)(v5 + 32) = v8;
  OUTLINED_FUNCTION_17();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  sub_18C872FF8();
  v28 = v9;
  v10._object = (void *)0x800000018CEE6DD0;
  v10._countAndFlagsBits = 0xD000000000000012;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(v10);
  *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v0 + 120) = v27;
  sub_18C872D48(v0 + 120, v0 + 152);
  *v6 = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_18C872148(v0 + 152, v0 + 80);
  *(_BYTE *)(v0 + 112) = 0;
  v29 = *v6;
  v30 = *(_OWORD *)(v0 + 96);
  v31 = *(_BYTE *)(v0 + 112);
  v11 = v28;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_3_2();
    v11 = v25;
  }
  v12 = *(_QWORD *)(v11 + 16);
  if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
  {
    OUTLINED_FUNCTION_3_2();
    v11 = v26;
  }
  *(_QWORD *)(v11 + 16) = v12 + 1;
  v13 = v11 + 40 * v12;
  *(_BYTE *)(v13 + 64) = v31;
  *(_OWORD *)(v13 + 32) = v29;
  *(_OWORD *)(v13 + 48) = v30;
  sub_18C872CA0(v0 + 120, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v5 + 40) = v11;
  v14 = sub_18CEC1BA0();
  if (os_log_type_enabled(v7, v14))
  {
    v15 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v16 = *(void **)(v0 + 208);
    v17 = byte_1ECEA9E18;
    v18 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v18 + 16) = v17;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = sub_18C84C6D8;
    *(_QWORD *)(v0 + 96) = v18;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    OUTLINED_FUNCTION_26_0();
    v19 = sub_18CEC17C8();
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    objc_autoreleasePoolPop(v15);
    v22 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v23 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v23 + 16) = xmmword_18CF07380;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 64) = sub_18C872FBC();
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v21;
    OUTLINED_FUNCTION_35();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v22);
    OUTLINED_FUNCTION_17();
  }
  else
  {
    v16 = *(void **)(v0 + 208);
  }
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v27);
}

uint64_t sub_18C97BC40()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 208);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_18C97BC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  sub_18C928F10(a1, &v8);
  if (!v9)
  {
    OUTLINED_FUNCTION_115();
LABEL_7:
    sub_18C872CA0((uint64_t)&v8, (uint64_t *)&unk_1ECEAA5F0);
    goto LABEL_9;
  }
  if ((OUTLINED_FUNCTION_4_23() & 1) == 0)
  {
    OUTLINED_FUNCTION_115();
    goto LABEL_9;
  }
  v2 = v7;
  sub_18C928F10(a1, &v8);
  OUTLINED_FUNCTION_115();
  if (!v9)
    goto LABEL_7;
  if ((OUTLINED_FUNCTION_4_23() & 1) == 0)
  {
LABEL_9:
    sub_18C97BED0();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
    sub_18C872CA0(a2, (uint64_t *)&unk_1EE055E70);
    return v2;
  }
  sub_18C872CA0(a2, (uint64_t *)&unk_1EE055E70);
  return v2;
}

id sub_18C97BDD0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_18CEC17F8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_, v1);

  return v2;
}

uint64_t sub_18C97BE40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v6;
  *v6 = v2;
  v6[1] = sub_18C962460;
  return sub_18C97B3D4(v3, v4, v5);
}

uint64_t sub_18C97BEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = sub_18C97BC88(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
    a3[2] = v7;
  }
  return result;
}

unint64_t sub_18C97BED0()
{
  unint64_t result;

  result = qword_1EE0563F8;
  if (!qword_1EE0563F8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C0A4, &type metadata for PromptNotificationAction.PerformError);
    atomic_store(result, &qword_1EE0563F8);
  }
  return result;
}

unint64_t sub_18C97BF0C()
{
  unint64_t result;

  result = qword_1EE056408;
  if (!qword_1EE056408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE056408);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PromptNotificationAction.PerformError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18C97BF9C + 4 * byte_18CF0BF95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18C97BFD0 + 4 * byte_18CF0BF90[v4]))();
}

uint64_t sub_18C97BFD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C97BFD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18C97BFE0);
  return result;
}

uint64_t sub_18C97BFEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18C97BFF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18C97BFF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C97C000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptNotificationAction.PerformError()
{
  return &type metadata for PromptNotificationAction.PerformError;
}

uint64_t initializeBufferWithCopyOfBuffer for PromptNotificationAction.Parameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PromptNotificationAction.Parameters()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s18AppleMediaServices24PromptNotificationActionV10ParametersVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17();
  return a1;
}

uint64_t assignWithTake for PromptNotificationAction.Parameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18AppleMediaServices24PromptNotificationActionV10ParametersVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_18C97C114(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptNotificationAction.Parameters()
{
  return &type metadata for PromptNotificationAction.Parameters;
}

unint64_t sub_18C97C16C()
{
  unint64_t result;

  result = qword_1EE056410;
  if (!qword_1EE056410)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C07C, &type metadata for PromptNotificationAction.PerformError);
    atomic_store(result, (unint64_t *)&qword_1EE056410);
  }
  return result;
}

uint64_t sub_18C97C1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  return swift_task_switch();
}

uint64_t sub_18C97C1D0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = v0[18];
  v1 = (void *)v0[19];
  v3 = v0[16];
  v4 = (void *)sub_18CEC13B4();
  v5 = objc_msgSend(v1, sel_requestWithMethod_URL_parameters_, v3, v4, v2);
  v0[20] = v5;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_18C97C2B4;
  v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_18C8FDB6C;
  v0[13] = &block_descriptor_18;
  v0[14] = v6;
  objc_msgSend(v5, sel_resultWithCompletion_, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_18C97C2B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18C97C314()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_18C97C350()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static StorefrontHeaderValueCreation.storefrontHeaderValue(forAccount:bag:mediaType:allowFailedSuffixFetch:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;

  *(_BYTE *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = v4;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v8;
  *v8 = v5;
  v8[1] = sub_18C97C3F4;
  return sub_18C97C5B0(a1, a3);
}

uint64_t sub_18C97C3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v6;

  v4 = *v3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v4 + 8))();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 56) = v6;
  *v6 = v4;
  v6[1] = sub_18C97C484;
  return sub_18C97C95C(*(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 88));
}

uint64_t sub_18C97C484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v3;
  v5[8] = a2;
  v5[9] = v2;
  swift_task_dealloc();
  if (!v2)
    v5[10] = a1;
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C97C4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = static StorefrontHeaderValueCreation.combinedStorefront(fromStorefront:suffix:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
  else
    return OUTLINED_FUNCTION_4_24(v2, v4, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C97C57C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C97C5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch();
}

uint64_t sub_18C97C5C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v3 = v1;
    v4 = OUTLINED_FUNCTION_48_1(v3, sel_ams_storefrontForMediaType_);
    if (v4)
    {
      v5 = v4;
      v6 = sub_18CEC181C();
      v8 = v7;

      return OUTLINED_FUNCTION_4_24(v6, v8, *(uint64_t (**)(void))(v0 + 8));
    }
    if (objc_msgSend(v3, sel_ams_isLocalAccount))
    {
      v10 = (void *)OUTLINED_FUNCTION_1_22();
      v11 = (void *)OUTLINED_FUNCTION_24_2();
      OUTLINED_FUNCTION_11_25(v11);

      OUTLINED_FUNCTION_103_2();
      return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
    }

  }
  *(_QWORD *)(v0 + 144) = v2;
  v12 = (void *)objc_opt_self();
  v13 = OUTLINED_FUNCTION_48_1(v12, sel_ams_sharedAccountStoreForMediaType_);
  *(_QWORD *)(v0 + 152) = v13;
  v14 = objc_msgSend(v13, sel_ams_fetchLocaliTunesAccount);
  *(_QWORD *)(v0 + 160) = v14;
  *(_QWORD *)(v0 + 56) = v0 + 120;
  v15 = OUTLINED_FUNCTION_7_3((uint64_t)sub_18C97C774);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v16 = (_QWORD *)(v0 + 80);
  v16[1] = 0x40000000;
  v16[2] = sub_18C8FDB6C;
  v16[3] = &block_descriptor_24;
  v16[4] = v15;
  objc_msgSend(v14, sel_resultWithCompletion_, v16);
  return swift_continuation_await();
}

uint64_t sub_18C97C774()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 168) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97C7B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void *v10;

  v1 = *(void **)(v0 + 160);
  v2 = *(id *)(v0 + 120);

  v3 = OUTLINED_FUNCTION_48_1(v2, sel_ams_storefrontForMediaType_);
  v4 = *(void **)(v0 + 152);
  if (v3)
  {
    v5 = sub_18CEC181C();
    v7 = v6;

    return OUTLINED_FUNCTION_4_24(v5, v7, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v9 = (void *)OUTLINED_FUNCTION_1_22();
    v10 = (void *)OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_11_25(v10);

    OUTLINED_FUNCTION_103_2();
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C97C8A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  swift_willThrow();

  v4 = (void *)OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_24_2();
  v5 = (void *)OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_21_16(0);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18C97C95C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 49) = a2;
  *(_QWORD *)(v3 + 240) = a1;
  *(_QWORD *)(v3 + 248) = v2;
  return swift_task_switch();
}

uint64_t sub_18C97C978()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _OWORD *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  Swift::String v13;
  os_log_type_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 240);
  if (v1)
  {
    swift_unknownObjectRetain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v2;
    *v2 = v0;
    v2[1] = sub_18C97CC7C;
    return sub_18C97D6F8(v1);
  }
  else
  {
    v4 = (_OWORD *)(v0 + 56);
    if (qword_1ECEA9B18 != -1)
      swift_once();
    v5 = (void *)qword_1ECEA9B28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v6 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v6 + 16) = xmmword_18CF073C0;
    v7 = v5;
    v8 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v9 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_29_11((__n128 *)v9, (__n128)xmmword_18CF07380);
    swift_bridgeObjectRetain();
    v24 = OUTLINED_FUNCTION_6_1();
    v25 = v10;
    OUTLINED_FUNCTION_4_1();
    sub_18CEC18AC();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_5_0();
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 152) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 128) = v24;
    *(_QWORD *)(v0 + 136) = v25;
    *v4 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_18C872148(v0 + 128, v0 + 56);
    *(_BYTE *)(v0 + 88) = 0;
    v12 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v9 + 32) = *v4;
    *(_OWORD *)(v9 + 48) = v12;
    *(_BYTE *)(v9 + 64) = *(_BYTE *)(v0 + 88);
    *(_QWORD *)(v6 + 32) = v9;
    OUTLINED_FUNCTION_155();
    v13._object = (void *)0x800000018CEE6F80;
    v13._countAndFlagsBits = 0xD00000000000002CLL;
    LogInterpolation.init(stringLiteral:)(v13);
    v14 = sub_18CEC1BA0();
    if (os_log_type_enabled(v7, v14))
    {
      v15 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v16 = byte_1ECEA9E18;
      v17 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v17 + 16) = v16;
      *(_QWORD *)(v0 + 192) = v6;
      *(_QWORD *)(v0 + 200) = sub_18C84C730;
      *(_QWORD *)(v0 + 208) = v17;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      swift_release();
      objc_autoreleasePoolPop(v15);
      v18 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v19 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v19 + 16) = v23;
      *(_QWORD *)(v19 + 56) = v11;
      v20 = sub_18C872FBC();
      OUTLINED_FUNCTION_5_11(v20);
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_155();
      objc_autoreleasePoolPop(v18);
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    v21 = OUTLINED_FUNCTION_10_26();
    return v22(v21);
  }
}

uint64_t sub_18C97CC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 264) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 272) = a2;
    *(_QWORD *)(v6 + 280) = a1;
  }
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C97CCF0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 272));
}

uint64_t sub_18C97CD28()
{
  uint64_t v0;
  _OWORD *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  NSObject *v10;
  Swift::String v11;
  void *v12;
  __CFString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  if (*(_BYTE *)(v0 + 49) == 1)
  {
    v1 = (_OWORD *)(v0 + 16);
    if (qword_1ECEA9B18 != -1)
      swift_once();
    v2 = (void *)qword_1ECEA9B28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v3 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v3 + 16) = xmmword_18CF07370;
    v4 = v2;
    v5 = AMSSetLogKeyIfNeeded();
    sub_18CEC181C();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
    v6 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_29_11((__n128 *)v6, (__n128)xmmword_18CF07380);
    swift_bridgeObjectRetain();
    v36 = OUTLINED_FUNCTION_6_1();
    v37 = v7;
    OUTLINED_FUNCTION_4_1();
    sub_18CEC18AC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_0();
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 96) = v36;
    *(_QWORD *)(v0 + 104) = v37;
    *v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_18C872148(v0 + 96, v0 + 16);
    *(_BYTE *)(v0 + 48) = 0;
    v9 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v6 + 32) = *v1;
    *(_OWORD *)(v6 + 48) = v9;
    *(_BYTE *)(v6 + 64) = *(_BYTE *)(v0 + 48);
    *(_QWORD *)(v3 + 32) = v6;
    v10 = v4;
    swift_bridgeObjectRelease();
    v11._object = (void *)0x800000018CEE6FB0;
    v11._countAndFlagsBits = 0xD000000000000042;
    LogInterpolation.init(stringLiteral:)(v11);
    v12 = (void *)sub_18CEC1354();
    v13 = AMSLogableError(v12);

    v14 = sub_18CEC181C();
    v16 = v15;

    *(_QWORD *)(v0 + 184) = v8;
    *(_QWORD *)(v0 + 160) = v14;
    *(_QWORD *)(v0 + 168) = v16;
    static LogInterpolation.safe(_:)();
    sub_18C87B358(v0 + 160);
    v17 = sub_18CEC1BA0();
    if (os_log_type_enabled(v10, v17))
    {
      v18 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v19 = byte_1ECEA9E18;
      v20 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v20 + 16) = v19;
      *(_QWORD *)(v0 + 216) = v3;
      *(_QWORD *)(v0 + 224) = sub_18C84C730;
      *(_QWORD *)(v0 + 232) = v20;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      swift_release();
      objc_autoreleasePoolPop(v18);
      v21 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v22 = OUTLINED_FUNCTION_2();
      v30 = OUTLINED_FUNCTION_22_4(v22, v23, v24, v25, v26, v27, v28, v29, v35);
      OUTLINED_FUNCTION_5_11(v30);
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_155();
      objc_autoreleasePoolPop(v21);
      OUTLINED_FUNCTION_17();
    }
    swift_unknownObjectRelease();

    OUTLINED_FUNCTION_96();
    v32 = OUTLINED_FUNCTION_10_26();
    return OUTLINED_FUNCTION_6_29(v32, v33, v34);
  }
  else
  {
    swift_unknownObjectRelease();
    return OUTLINED_FUNCTION_3_4(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t static StorefrontHeaderValueCreation.combinedStorefront(fromStorefront:suffix:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 *v7;
  NSObject *v8;
  Swift::String v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  __int128 v18;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v5 = a1;
    if (a4 && (sub_18C870D04(), (sub_18CEC1CA8() & 1) == 0))
      return sub_18C97D588();
    else
      swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1ECEA9B18 != -1)
      swift_once();
    v6 = (void *)qword_1ECEA9B28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v7 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_29_11(v7, (__n128)xmmword_18CF07380);
    v8 = v6;
    OUTLINED_FUNCTION_66_0();
    LogInterpolation.init(stringLiteral:)(v9);
    v5 = sub_18CEC1B88();
    if (os_log_type_enabled(v8, (os_log_type_t)v5))
    {
      v10 = (void *)MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v11 = byte_1ECEA9E18;
      *(_BYTE *)(OUTLINED_FUNCTION_2() + 16) = v11;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      sub_18CEC17C8();
      swift_release();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v10);
      v12 = (void *)MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v13 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v13 + 16) = v18;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      v14 = sub_18C872FBC();
      OUTLINED_FUNCTION_5_11(v14);
      OUTLINED_FUNCTION_41();
      sub_18CEC1594();
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v12);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_66_0();
    v15 = (void *)sub_18CEC17F8();
    OUTLINED_FUNCTION_66_0();
    v16 = (void *)sub_18CEC17F8();
    AMSError(2, v15, v16, 0);

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_18C97D3F8(void *a1, uint64_t a2, void *a3, char a4, void *aBlock)
{
  _QWORD *v5;
  id v10;
  id v11;
  _QWORD *v12;

  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  swift_getObjCClassMetadata();
  v10 = a1;
  swift_unknownObjectRetain();
  v11 = a3;
  v12 = (_QWORD *)swift_task_alloc();
  v5[6] = v12;
  *v12 = v5;
  v12[1] = sub_18C97D4A4;
  return static StorefrontHeaderValueCreation.storefrontHeaderValue(forAccount:bag:mediaType:allowFailedSuffixFetch:)((uint64_t)a1, a2, (uint64_t)a3, a4);
}

uint64_t sub_18C97D4A4()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 32);
  v5 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  if (v0)
  {
    v7 = sub_18CEC1354();

    v8 = 0;
    v9 = (void *)v7;
  }
  else
  {
    v8 = sub_18CEC17F8();
    OUTLINED_FUNCTION_17();
    v7 = 0;
    v9 = (void *)v8;
  }
  v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 40);
  v10[2](v10, v8, v7);

  _Block_release(v10);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_18C97D588()
{
  uint64_t v1;

  swift_bridgeObjectRetain();
  v1 = sub_18CEC1930();
  sub_18CEC18A0();
  return v1;
}

uint64_t sub_18C97D6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v1;
  return swift_task_switch();
}

uint64_t sub_18C97D710()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(*(id *)(v0 + 168), sel_stringForKey_, CFSTR("storefront-header-suffix"));
  v2 = objc_msgSend(v1, sel_valuePromise);
  *(_QWORD *)(v0 + 184) = v2;

  *(_QWORD *)(v0 + 56) = v0 + 120;
  v3 = OUTLINED_FUNCTION_7_3((uint64_t)sub_18C97D7E4);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_18C8FDB6C;
  v4[3] = &block_descriptor_19;
  v4[4] = v3;
  objc_msgSend(v2, sel_resultWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_18C97D7E4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5();
  *(_QWORD *)(v0 + 192) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97D824()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 120);
  v3 = sub_18CEC181C();
  v5 = v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v5);
}

uint64_t sub_18C97D880()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  _OWORD *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  Swift::String v14;
  os_log_type_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  void *v35;
  void *v36;
  void *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  OUTLINED_FUNCTION_103_2();

  *(_QWORD *)(v0 + 152) = v2;
  v3 = v2;
  v4 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA100);
  sub_18C970410();
  if (!swift_dynamicCast())
    goto LABEL_11;
  v5 = *(void **)(v0 + 160);
  if (!objc_msgSend(v5, sel_ams_isBagValueMissingError))
  {

LABEL_11:
    v35 = *(void **)(v0 + 192);

    OUTLINED_FUNCTION_66_0();
    v36 = (void *)sub_18CEC17F8();
    sub_18CEC17F8();
    v37 = (void *)OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_21_16(203);

    swift_willThrow();
    return OUTLINED_FUNCTION_3_4(*(uint64_t (**)(void))(v0 + 8));
  }
  v6 = (_OWORD *)(v0 + 80);

  if (qword_1ECEA9B18 != -1)
    swift_once();
  v7 = (void *)qword_1ECEA9B28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v8 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v8 + 16) = xmmword_18CF073C0;
  v9 = v7;
  v10 = AMSSetLogKeyIfNeeded();
  sub_18CEC181C();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA5E0);
  v11 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_29_11((__n128 *)v11, (__n128)xmmword_18CF07380);
  swift_bridgeObjectRetain();
  v39 = OUTLINED_FUNCTION_6_1();
  v40 = v12;
  OUTLINED_FUNCTION_4_1();
  sub_18CEC18AC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_0();
  *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 120) = v39;
  *(_QWORD *)(v0 + 128) = v40;
  *v6 = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_18C872148(v0 + 120, (uint64_t)v6);
  *(_BYTE *)(v0 + 112) = 0;
  v13 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v11 + 32) = *v6;
  *(_OWORD *)(v11 + 48) = v13;
  *(_BYTE *)(v11 + 64) = *(_BYTE *)(v0 + 112);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD00000000000002ELL;
  v14._object = (void *)0x800000018CEE7020;
  LogInterpolation.init(stringLiteral:)(v14);
  v15 = sub_18CEC1BA0();
  if (os_log_type_enabled(v9, v15))
  {
    v16 = (void *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    v17 = byte_1ECEA9E18;
    v18 = OUTLINED_FUNCTION_2();
    *(_BYTE *)(v18 + 16) = v17;
    *(_QWORD *)(v0 + 80) = v8;
    *(_QWORD *)(v0 + 88) = sub_18C84C730;
    *(_QWORD *)(v0 + 96) = v18;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    sub_18C872F40();
    v19 = sub_18CEC17C8();
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    objc_autoreleasePoolPop(v16);
    v22 = (void *)MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v23 = (_QWORD *)OUTLINED_FUNCTION_2();
    v23[8] = OUTLINED_FUNCTION_22_4((uint64_t)v23, v24, v25, v26, v27, v28, v29, v30, v38);
    v23[4] = v19;
    v23[5] = v21;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_41();
    sub_18CEC1594();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v22);
    OUTLINED_FUNCTION_17();
  }
  swift_bridgeObjectRelease();

  v31 = OUTLINED_FUNCTION_10_26();
  return OUTLINED_FUNCTION_6_29(v31, v32, v33);
}

id StorefrontHeaderValueCreation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StorefrontHeaderValueCreation.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorefrontHeaderValueCreation();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for StorefrontHeaderValueCreation()
{
  return objc_opt_self();
}

id StorefrontHeaderValueCreation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StorefrontHeaderValueCreation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C97DD1C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_18C97DD58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  _QWORD *v7;

  v2 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  v6 = *(void **)(v0 + 48);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_18C924A04;
  return ((uint64_t (*)(void *, uint64_t, void *, char, void *))((char *)&dword_1EE056510 + dword_1EE056510))(v2, v3, v4, v5, v6);
}

uint64_t sub_18C97DDF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C97DDFC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18C97DE60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18C97DED0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18C97DF38(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 56);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_18C97DF8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

uint64_t sub_18C97DFF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_18C97ED80(a1, a2);
  OUTLINED_FUNCTION_96();
  return sub_18CEC2140();
}

uint64_t sub_18C97E044(_QWORD *a1, _QWORD *a2, double a3, double a4)
{
  return sub_18C97EB4C(a1, a2) & (a3 == a4);
}

uint64_t sub_18C97E074(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449656C646E7562 && a2 == 0xE900000000000073;
  if (v2 || (sub_18CEC205C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000018CEE7150)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_18CEC205C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_18C97E16C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056570);
  OUTLINED_FUNCTION_10_27();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C86C450();
  OUTLINED_FUNCTION_4_25();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA330);
  sub_18C86C3FC(&qword_1EE055AB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  OUTLINED_FUNCTION_7_26();
  sub_18CEC2008();
  if (!v1)
  {
    OUTLINED_FUNCTION_7_26();
    sub_18CEC1FF0();
  }
  return OUTLINED_FUNCTION_21_10();
}

uint64_t sub_18C97E298(uint64_t a1)
{
  _BYTE v3[72];

  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRetain();
  sub_18C97ED80((uint64_t)v3, a1);
  OUTLINED_FUNCTION_96();
  sub_18CEC2140();
  return sub_18CEC214C();
}

uint64_t sub_18C97E300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18C97E074(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18C97E324()
{
  sub_18C86C450();
  return sub_18CEC21D0();
}

uint64_t sub_18C97E34C()
{
  sub_18C86C450();
  return sub_18CEC21DC();
}

uint64_t sub_18C97E374(_QWORD *a1)
{
  return sub_18C97E16C(a1);
}

uint64_t sub_18C97E390()
{
  uint64_t *v0;

  return sub_18C97E298(*v0);
}

uint64_t sub_18C97E39C(uint64_t a1)
{
  uint64_t *v1;

  return sub_18C97DFF0(a1, *v1);
}

uint64_t sub_18C97E3A8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_18CEC211C();
  swift_bridgeObjectRetain();
  sub_18C97ED80((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18CEC2140();
  return sub_18CEC214C();
}

uint64_t sub_18C97E408(uint64_t a1, uint64_t a2)
{
  return sub_18C97E044(*(_QWORD **)a1, *(_QWORD **)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

uint64_t sub_18C97E424(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18C97E460 + 4 * byte_18CF0C175[a1]))(0xD00000000000001BLL, 0x800000018CEE1940);
}

unint64_t sub_18C97E460()
{
  return 0xD000000000000021;
}

uint64_t sub_18C97E4A8()
{
  unint64_t v0;

  v0 = sub_18CEC1F18();
  OUTLINED_FUNCTION_96();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_18C97E4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  if (*(_BYTE *)v2 != 2)
    OUTLINED_FUNCTION_5_12();
  sub_18CEC2134();
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    OUTLINED_FUNCTION_5_12();
    sub_18CEC2128();
  }
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    OUTLINED_FUNCTION_5_12();
    sub_18CEC2140();
  }
  if (*(_BYTE *)(v2 + 48) == 1)
  {
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    OUTLINED_FUNCTION_5_12();
    sub_18CEC2140();
  }
  v4 = *(_QWORD *)(v2 + 56);
  if (!v4)
    return OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRetain();
  sub_18C97EDF4(a1, v4);
  return sub_18C97EECC(v2);
}

uint64_t sub_18C97E5E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
  {
    if (v3 != 2)
      return 0;
  }
  else
  {
    v4 = 0;
    v5 = (v2 & 1) == 0;
    if (v3 == 2 || ((v5 ^ v3) & 1) == 0)
      return v4;
  }
  v4 = a2[16];
  if ((a1[16] & 1) != 0)
  {
    if (!a2[16])
      return v4;
  }
  else
  {
    if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
      LOBYTE(v4) = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v4 = a2[32];
  if ((a1[32] & 1) != 0)
  {
    if (!a2[32])
      return v4;
  }
  else
  {
    if (*((double *)a1 + 3) != *((double *)a2 + 3))
      LOBYTE(v4) = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v4 = a2[48];
  if ((a1[48] & 1) != 0)
  {
    if (!a2[48])
      return v4;
  }
  else
  {
    if (*((double *)a1 + 5) != *((double *)a2 + 5))
      LOBYTE(v4) = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a2 + 7);
  if (v6)
  {
    if (!v7 || (sub_18C97EC18(v6, v7) & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_18C97E6D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v7[8];
  _BYTE v8[8];

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056530);
  OUTLINED_FUNCTION_10_27();
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C8694F0();
  OUTLINED_FUNCTION_4_25();
  v7[0] = 0;
  OUTLINED_FUNCTION_7_26();
  sub_18CEC1FB4();
  if (!v2)
  {
    v7[0] = 1;
    OUTLINED_FUNCTION_7_26();
    sub_18CEC1FCC();
    OUTLINED_FUNCTION_3_30(2);
    OUTLINED_FUNCTION_3_30(3);
    sub_18C97EAC8(v3 + 56, (uint64_t)v8);
    sub_18C97EAC8((uint64_t)v8, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA93F0);
    sub_18C869494(&qword_1EE056538, (uint64_t (*)(void))sub_18C97EB10, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_7_26();
    sub_18CEC1FD8();
  }
  return OUTLINED_FUNCTION_21_10();
}

uint64_t sub_18C97E860()
{
  _BYTE v1[72];

  OUTLINED_FUNCTION_12();
  sub_18C97E4F0((uint64_t)v1);
  return sub_18CEC214C();
}

void sub_18C97E894(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_18C91CAEC(*a1, *a2);
}

void sub_18C97E8A0()
{
  unsigned __int8 *v0;

  sub_18C963E80(*v0);
}

uint64_t sub_18C97E8A8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_18C964010(a1, *v1);
}

void sub_18C97E8B0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_18C964388(a1, *v1);
}

uint64_t sub_18C97E8B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C97E4A8();
  *a1 = result;
  return result;
}

uint64_t sub_18C97E8E4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18C97E424(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18C97E90C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C97E4EC();
  *a1 = result;
  return result;
}

void sub_18C97E930(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E251C450;
}

uint64_t sub_18C97E940()
{
  sub_18C8694F0();
  return sub_18CEC21D0();
}

uint64_t sub_18C97E968()
{
  sub_18C8694F0();
  return sub_18CEC21DC();
}

uint64_t sub_18C97E990(_QWORD *a1)
{
  return sub_18C97E6D4(a1);
}

uint64_t sub_18C97E9C8()
{
  return sub_18C97E860();
}

uint64_t sub_18C97EA00(uint64_t a1)
{
  return sub_18C97E4F0(a1);
}

uint64_t sub_18C97EA38()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v1 = v0[1];
  v5 = *v0;
  v6 = v1;
  v2 = v0[3];
  v7 = v0[2];
  v8 = v2;
  sub_18CEC211C();
  sub_18C97E4F0((uint64_t)v4);
  return sub_18CEC214C();
}

unint64_t sub_18C97EA8C()
{
  unint64_t result;

  result = qword_1EE056528;
  if (!qword_1EE056528)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C1B8, &unk_1E251C5C0);
    atomic_store(result, (unint64_t *)&qword_1EE056528);
  }
  return result;
}

uint64_t sub_18C97EAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_18C97EB10()
{
  unint64_t result;

  result = qword_1EE056540;
  if (!qword_1EE056540)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C428, &unk_1E251C3E0);
    atomic_store(result, &qword_1EE056540);
  }
  return result;
}

uint64_t sub_18C97EB4C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t result;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    v7 = sub_18CEC205C();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  if (v2 == 1)
    return 1;
  v8 = a2 + 7;
  v9 = a1 + 7;
  v10 = 1;
  while (v10 < v2)
  {
    result = *(v9 - 1);
    if (result != *(v8 - 1) || *v9 != *v8)
    {
      result = sub_18CEC205C();
      if ((result & 1) == 0)
        return 0;
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10)
      return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_18C97EC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v5;
  double v6;
  _BOOL8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t *v12;
  double *v13;
  uint64_t *v14;
  unint64_t v15;
  double v16;
  double v17;
  BOOL v18;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(double *)(a1 + 40);
  v6 = *(double *)(a2 + 40);
  v7 = 0;
  if ((sub_18C97EB4C(*(_QWORD **)(a1 + 32), *(_QWORD **)(a2 + 32)) & 1) != 0 && v5 == v6)
  {
    v8 = a1 + 32;
    v9 = a2 + 32;
    v10 = 1;
    do
    {
      v7 = v10 == v2;
      if (v10 == v2)
        break;
      v11 = (double *)(v8 + 16 * v10);
      v12 = *(uint64_t **)v11;
      v13 = (double *)(v9 + 16 * v10);
      v14 = *(uint64_t **)v13;
      v15 = *(_QWORD *)(*(_QWORD *)v11 + 16);
      if (v15 != *(_QWORD *)(*(_QWORD *)v13 + 16))
        break;
      v16 = v11[1];
      v17 = v13[1];
      if (v15)
        v18 = v12 == v14;
      else
        v18 = 1;
      if (!v18)
      {
        result = v12[4];
        if (result != v14[4] || v12[5] != v14[5])
        {
          result = sub_18CEC205C();
          if ((result & 1) == 0)
            return v7;
        }
        if (v15 != 1)
        {
          v21 = v14 + 7;
          v22 = v12 + 7;
          v23 = 1;
          while (v23 < v15)
          {
            result = *(v22 - 1);
            if (result != *(v21 - 1) || *v22 != *v21)
            {
              result = sub_18CEC205C();
              if ((result & 1) == 0)
                return 0;
            }
            ++v23;
            v21 += 2;
            v22 += 2;
            if (v15 == v23)
              goto LABEL_27;
          }
          __break(1u);
          return result;
        }
      }
LABEL_27:
      ++v10;
    }
    while (v16 == v17);
  }
  return v7;
}

uint64_t sub_18C97ED80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_18CEC2128();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_18CEC1888();
      result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_18C97EDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_18CEC2128();
  if (v3)
  {
    v5 = 0;
    v6 = a2 + 32;
    do
    {
      v7 = *(_QWORD *)(v6 + 16 * v5);
      sub_18CEC2128();
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        v9 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_18CEC1888();
          swift_bridgeObjectRelease();
          v9 += 16;
          --v8;
        }
        while (v8);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      ++v5;
      sub_18CEC2140();
      result = swift_bridgeObjectRelease();
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_18C97EECC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18C97EEF4()
{
  return swift_deallocObject();
}

_QWORD *sub_18C97EF04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_18C97EF30(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_18C97EF7C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

unint64_t sub_18C97EFBC()
{
  unint64_t result;

  result = qword_1EE056550;
  if (!qword_1EE056550)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C288, &unk_1E251C3E0);
    atomic_store(result, (unint64_t *)&qword_1EE056550);
  }
  return result;
}

uint64_t sub_18C97EFF8()
{
  return sub_18C8782A0(&qword_1EE056558, &qword_1EE056560, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_18C97F028()
{
  unint64_t result;

  result = qword_1EE056568;
  if (!qword_1EE056568)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C400, &unk_1E251C530);
    atomic_store(result, (unint64_t *)&qword_1EE056568);
  }
  return result;
}

unint64_t sub_18C97F068()
{
  unint64_t result;

  result = qword_1EE056578;
  if (!qword_1EE056578)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C558, &type metadata for StoreReviewGatingBag.GatingGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE056578);
  }
  return result;
}

uint64_t StoreReviewGatingController.bag.getter()
{
  return swift_unknownObjectRetain();
}

unint64_t static StoreReviewGatingController.defaultBagProfileName.getter()
{
  return 0xD000000000000014;
}

uint64_t static StoreReviewGatingController.defaultBagProfileVersion.getter()
{
  return 49;
}

void StoreReviewGatingController.__allocating_init(bag:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  StoreReviewGatingController.init(bag:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_18C97F12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = a1;
  *(_QWORD *)(v2 + 272) = v1;
  return swift_task_switch();
}

uint64_t sub_18C97F144()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(*(_QWORD *)(v0 + 264) + OBJC_IVAR___AMSStoreReviewGatingController_ledger);
  return OUTLINED_FUNCTION_6_5();
}

uint64_t StoreReviewGatingController.didPrompt()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_18C97F1A4;
  return OUTLINED_FUNCTION_37_9();
}

uint64_t sub_18C97F1A4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 40) = a1;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97F1F0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) != 1)
    return OUTLINED_FUNCTION_33();
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___AMSStoreReviewGatingController_ledger);
  return OUTLINED_FUNCTION_6_5();
}

uint64_t sub_18C97F220()
{
  uint64_t v0;

  sub_18C983030();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C97F25C(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_18C982EE8;
  return StoreReviewGatingController.didPrompt()();
}

uint64_t sub_18C97F2D0(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_18C982EE4;
  return StoreReviewGatingController.isEnabled()();
}

uint64_t StoreReviewGatingController.canPrompt()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[32] = v0;
  v1[33] = OUTLINED_FUNCTION_107();
  v2 = (_QWORD *)swift_task_alloc();
  v1[34] = v2;
  *v2 = v1;
  v2[1] = sub_18C97F378;
  return OUTLINED_FUNCTION_37_9();
}

uint64_t sub_18C97F378()
{
  char v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_8();
  *(_BYTE *)(v1 + 329) = v0;
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97F3AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;

  OUTLINED_FUNCTION_57_8();
  if (*(_BYTE *)(v0 + 329) == 1)
  {
    OUTLINED_FUNCTION_37_6();
    v1 = (_QWORD *)OUTLINED_FUNCTION_107_3();
    *(_QWORD *)(v0 + 280) = v1;
    v2 = OUTLINED_FUNCTION_60_7(v1);
    return OUTLINED_FUNCTION_40_9(v2, v3);
  }
  else
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v5 = (__n128 *)OUTLINED_FUNCTION_2();
    v6 = OUTLINED_FUNCTION_10_2(v5, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(71, v7);
    v8 = sub_18CEC1B70();
    if (OUTLINED_FUNCTION_29(v8))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v9 = OUTLINED_FUNCTION_2();
      v10 = OUTLINED_FUNCTION_275(v9);
      *(_QWORD *)(v0 + 208) = v5;
      *(_QWORD *)(v0 + 216) = sub_18C84C730;
      *(_QWORD *)(v0 + 224) = v10;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v11 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_37_1(v11, v12, v13, v14, v15, v16, v17, v18, v19);
      v21 = OUTLINED_FUNCTION_68(v20, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v21);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }

    OUTLINED_FUNCTION_96();
    return OUTLINED_FUNCTION_11_0(0, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_18C97F580()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = v3;
  OUTLINED_FUNCTION_47(&v3);
  *(_QWORD *)(v1 + 288) = *(_QWORD *)(v1 + 200);
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97F5C4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  id v3;
  uint64_t v4;
  os_log_type_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _QWORD *v25;

  OUTLINED_FUNCTION_57_8();
  OUTLINED_FUNCTION_120_2(v0 + 144, v1, &qword_1ECEA93A0);
  if (*(_QWORD *)(v0 + 136) == 1)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v2 = (__n128 *)OUTLINED_FUNCTION_2();
    v3 = OUTLINED_FUNCTION_10_2(v2, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_72(65, v4);
    v5 = sub_18CEC1B70();
    v6 = OUTLINED_FUNCTION_29(v5);
    if (v6)
    {
      MEMORY[0x18D789CA8](v6, v7);
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v8 = OUTLINED_FUNCTION_2();
      v9 = OUTLINED_FUNCTION_275(v8);
      *(_QWORD *)(v0 + 232) = v2;
      *(_QWORD *)(v0 + 240) = sub_18C84C730;
      *(_QWORD *)(v0 + 248) = v9;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8](v10, v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v12 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_37_1(v12, v13, v14, v15, v16, v17, v18, v19, v20);
      v22 = OUTLINED_FUNCTION_68(v21, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v22);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }

    OUTLINED_FUNCTION_96();
    return OUTLINED_FUNCTION_11_0(0, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_111_3(v0 + 16);
    *(_QWORD *)(v0 + 296) = *(_QWORD *)(v24 + OBJC_IVAR___AMSStoreReviewGatingController_ledger);
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v25;
    *v25 = v0;
    v25[1] = sub_18C97F7DC;
    return sub_18C97F12C(v0 + 144);
  }
}

uint64_t sub_18C97F7DC()
{
  OUTLINED_FUNCTION_58_7();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_86_4();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97F814()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[37];
  v2 = v0[33];
  v3 = (_QWORD *)swift_task_alloc();
  v0[39] = v3;
  v3[2] = v0 + 2;
  v3[3] = v1;
  v3[4] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[40] = v4;
  *v4 = v0;
  v4[1] = sub_18C97F8C4;
  return sub_18CEC1DC8();
}

uint64_t sub_18C97F8C4()
{
  OUTLINED_FUNCTION_58_7();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_86_4();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_186();
}

uint64_t sub_18C97F900()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 328));
}

uint64_t sub_18C97F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE054200);
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA200);
  v5[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C97F99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 208);
  sub_18CEC1AA4();
  OUTLINED_FUNCTION_44_7();
  v2 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_14(v2);
  OUTLINED_FUNCTION_99_3();
  sub_18C980838(v1, (uint64_t)&unk_1EE056618, v2);
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_44_7();
  v3 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_14(v3);
  OUTLINED_FUNCTION_99_3();
  sub_18C980838(v1, (uint64_t)&unk_1EE056628, v3);
  OUTLINED_FUNCTION_77_6();
  OUTLINED_FUNCTION_44_7();
  v4 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_14(v4);
  OUTLINED_FUNCTION_99_3();
  sub_18C980838(v1, (uint64_t)&unk_1EE056638, v4);
  OUTLINED_FUNCTION_77_6();
  sub_18CEC1A2C();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v5;
  *v5 = v0;
  v5[1] = sub_18C97FAFC;
  OUTLINED_FUNCTION_25();
  return sub_18CEC1A38();
}

uint64_t sub_18C97FAFC()
{
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97FB30()
{
  uint64_t v0;
  int v1;
  __int128 *v2;
  uint64_t v3;
  __n128 *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;

  v1 = *(unsigned __int8 *)(v0 + 49);
  if (v1 != 2)
  {
    if ((v1 & 1) != 0)
    {
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v34;
      *v34 = v0;
      v34[1] = sub_18C97FAFC;
      OUTLINED_FUNCTION_25();
      return sub_18CEC1A38();
    }
    sub_18CEC1A44();
  }
  v2 = (__int128 *)(v0 + 16);
  v3 = MEMORY[0x1E0DEAFA0];
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  if (qword_1ECEA9470 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v4 = (__n128 *)OUTLINED_FUNCTION_2();
  v5 = OUTLINED_FUNCTION_46(v4, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_18();
  v38 = v6;
  OUTLINED_FUNCTION_92_2();
  OUTLINED_FUNCTION_31_0(45, v7);
  *(_QWORD *)(v0 + 80) = v3;
  *(_BYTE *)(v0 + 56) = v1 == 2;
  sub_18C873014(v0 + 56, v0 + 88, (uint64_t *)&unk_1ECEAA5F0);
  *v2 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_18C872148(v0 + 88, v0 + 16);
  *(_BYTE *)(v0 + 48) = 3;
  v40 = *v2;
  v41 = *(_OWORD *)(v0 + 32);
  if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
    OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_55_7();
  if (v17)
    OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_25_13(v8, v9, v10, v11, v12, v13, v14, v15, v35, v36, v37, v38, v16, v40, v41);
  OUTLINED_FUNCTION_100_2(v18, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_34_0();
  v19 = OUTLINED_FUNCTION_108_3(v39);
  if (OUTLINED_FUNCTION_29(v19))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v20 = OUTLINED_FUNCTION_2();
    v21 = OUTLINED_FUNCTION_275(v20);
    *(_QWORD *)(v0 + 120) = v4;
    *(_QWORD *)(v0 + 128) = sub_18C84C730;
    *(_QWORD *)(v0 + 136) = v21;
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_49_0();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v22 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_37_1(v22, v23, v24, v25, v26, v27, v28, v29, v30);
    v32 = OUTLINED_FUNCTION_68(v31, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v32);
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_96();

  **(_BYTE **)(v0 + 144) = v1 == 2;
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_38_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C97FE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  *(_QWORD *)(v5 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v8;
  *v8 = v5;
  v8[1] = sub_18C97FEA8;
  return sub_18C97FED4(a4, a5);
}

uint64_t sub_18C97FEA8(char a1)
{
  OUTLINED_FUNCTION_12_19(a1);
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C97FED4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[49] = a1;
  v2[50] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  v2[51] = swift_task_alloc();
  v3 = sub_18CEC14E0();
  v2[52] = v3;
  v2[53] = *(_QWORD *)(v3 - 8);
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C97FF6C()
{
  sub_18C904D20();
  sub_18C9831B8();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_25();
  return swift_task_switch();
}

uint64_t sub_18C97FFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t EnumTagSinglePayload;
  __n128 *v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 *v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  double v28;
  double v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  NSObject *v61;
  os_log_type_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;

  v2 = *(_QWORD *)(v0 + 408);
  v1 = *(_QWORD *)(v0 + 416);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v1);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_87_4(EnumTagSinglePayload, &qword_1ECEA9B40);
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v4 = (__n128 *)OUTLINED_FUNCTION_2();
    v5 = OUTLINED_FUNCTION_10_2(v4, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_68_5();
    OUTLINED_FUNCTION_11(v6 + 27, (uint64_t)"StoreReviewGatingController: no prompts yet");
    v7 = sub_18CEC1B70();
    if (OUTLINED_FUNCTION_29(v7))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v8 = OUTLINED_FUNCTION_2();
      v9 = OUTLINED_FUNCTION_275(v8);
      *(_QWORD *)(v0 + 336) = v4;
      *(_QWORD *)(v0 + 344) = sub_18C84C730;
      *(_QWORD *)(v0 + 352) = v9;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v10 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v10 + 16) = xmmword_18CF07380;
      v11 = OUTLINED_FUNCTION_68(v10, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v11);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    goto LABEL_9;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 424) + 32))(*(_QWORD *)(v0 + 440), v2, v1);
  *(_QWORD *)(v0 + 40) = &type metadata for FlagKeys;
  v13 = sub_18C900AD8();
  *(_BYTE *)(v0 + 16) = 22;
  OUTLINED_FUNCTION_71_6(v13);
  OUTLINED_FUNCTION_70_7();
  if ((v1 & 1) == 0)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v20 = (__n128 *)OUTLINED_FUNCTION_2();
    v83 = xmmword_18CF07380;
    v15 = OUTLINED_FUNCTION_10_2(v20, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_68_5();
    OUTLINED_FUNCTION_11(v21 + 53, (uint64_t)"StoreReviewGatingController: re-prompt feature is off, so don't allow");
    v22 = sub_18CEC1B70();
    if (!OUTLINED_FUNCTION_29(v22))
      goto LABEL_25;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v23 = OUTLINED_FUNCTION_2();
    v24 = OUTLINED_FUNCTION_275(v23);
    *(_QWORD *)(v0 + 312) = v20;
    *(_QWORD *)(v0 + 320) = sub_18C84C730;
    *(_QWORD *)(v0 + 328) = v24;
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_78_2(*(_QWORD *)(v0 + 392) + 40, v0 + 360);
  OUTLINED_FUNCTION_78_2(v0 + 360, v0 + 376);
  if ((*(_BYTE *)(v0 + 384) & 1) != 0)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v14 = (__n128 *)OUTLINED_FUNCTION_2();
    v83 = xmmword_18CF07380;
    v15 = OUTLINED_FUNCTION_10_2(v14, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_68_5();
    OUTLINED_FUNCTION_11(v16 + 59, (uint64_t)"StoreReviewGatingController: no re-prompt policy in the bag, so don't allow");
    v17 = sub_18CEC1B70();
    if (!OUTLINED_FUNCTION_29(v17))
      goto LABEL_25;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v18 = OUTLINED_FUNCTION_2();
    v19 = OUTLINED_FUNCTION_275(v18);
    *(_QWORD *)(v0 + 288) = v14;
    *(_QWORD *)(v0 + 296) = sub_18C84C730;
    *(_QWORD *)(v0 + 304) = v19;
LABEL_24:
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v25 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v25 + 16) = v83;
    v26 = OUTLINED_FUNCTION_68(v25, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v26);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
LABEL_25:
    OUTLINED_FUNCTION_96();

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
LABEL_26:
    v12 = 0;
    goto LABEL_27;
  }
  v28 = *(double *)(v0 + 376);
  sub_18CEC14D4();
  sub_18CEC14C8();
  if (v29 < v28)
  {
    v30 = (__int128 *)(v0 + 96);
    if (qword_1ECEA9470 != -1)
      swift_once();
    v31 = *(_QWORD *)(v0 + 440);
    v32 = *(_QWORD *)(v0 + 416);
    v33 = *(_QWORD *)(v0 + 424);
    v34 = (void *)qword_1ECEA9460;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v35 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v35 + 16) = xmmword_18CF07380;
    v80 = v34;
    OUTLINED_FUNCTION_18();
    v89 = v36;
    OUTLINED_FUNCTION_95_3(0xD000000000000029, (uint64_t)"StoreReviewGatingController: last prompt ");
    *(_QWORD *)(v0 + 160) = v32;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 136));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 16))(boxed_opaque_existential_0, v31, v32);
    sub_18C873014(v0 + 136, v0 + 232, (uint64_t *)&unk_1ECEAA5F0);
    *v30 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_18C872148(v0 + 232, v0 + 96);
    *(_BYTE *)(v0 + 128) = 3;
    v92 = *v30;
    v94 = *(_OWORD *)(v0 + 112);
    v38 = v89;
    v39 = OUTLINED_FUNCTION_11_1();
    if ((v39 & 1) == 0)
    {
      OUTLINED_FUNCTION_2_6();
      v38 = v39;
    }
    v48 = (__int128 *)(v0 + 56);
    if (*(_QWORD *)(v38 + 16) >= *(_QWORD *)(v38 + 24) >> 1)
      OUTLINED_FUNCTION_3_2();
    OUTLINED_FUNCTION_50_9(v39, v40, v41, v42, v43, v44, v45, v46, 1, 2, (uint64_t)v80, v0 + 200, v0 + 168, v85, v87, v89, v47, v92, v94);
    sub_18C86752C(v0 + 136, (uint64_t *)&unk_1ECEAA5F0);
    OUTLINED_FUNCTION_68_5();
    OUTLINED_FUNCTION_95_3(v49 + 12, (uint64_t)" has not surpassed interval ");
    *(_QWORD *)(v0 + 192) = MEMORY[0x1E0DEB070];
    *(double *)(v0 + 168) = v28;
    v50 = v84;
    sub_18C873014(v84, v82, (uint64_t *)&unk_1ECEAA5F0);
    *v48 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_18C872148(v82, v0 + 56);
    *(_BYTE *)(v0 + 88) = 3;
    v93 = *v48;
    v95 = *(_OWORD *)(v0 + 72);
    v51 = v90;
    v52 = OUTLINED_FUNCTION_11_1();
    if ((v52 & 1) == 0)
    {
      OUTLINED_FUNCTION_2_6();
      v51 = v52;
    }
    v61 = v81;
    if (*(_QWORD *)(v51 + 16) >= *(_QWORD *)(v51 + 24) >> 1)
      OUTLINED_FUNCTION_3_2();
    OUTLINED_FUNCTION_50_9(v52, v53, v54, v55, v56, v57, v58, v59, v78, v79, v81, v82, v84, v86, v88, v90, v60, v93, v95);
    sub_18C86752C(v50, (uint64_t *)&unk_1ECEAA5F0);
    OUTLINED_FUNCTION_31_0(16, 0x800000018CEE75D0);
    v62 = OUTLINED_FUNCTION_108_3(v91);
    if (os_log_type_enabled(v61, v62))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      v63 = byte_1ECEA9E18;
      v64 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v64 + 16) = v63;
      *(_QWORD *)(v0 + 264) = v35;
      *(_QWORD *)(v0 + 272) = sub_18C84C730;
      *(_QWORD *)(v0 + 280) = v64;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      sub_18C872F40();
      v65 = sub_18CEC17C8();
      v67 = v66;
      OUTLINED_FUNCTION_96();
      swift_release();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v68 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_232(v68, v69, v70, v71, v72, v73, v74, v75, v76);
      v68[4].n128_u64[0] = OUTLINED_FUNCTION_68(v77, MEMORY[0x1E0DEA968]);
      v68[2].n128_u64[0] = v65;
      v68[2].n128_u64[1] = v67;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_101_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_130();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_118_1();
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_118_1();
LABEL_9:
  v12 = 1;
LABEL_27:
  swift_task_dealloc();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_62();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_18C980838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA200);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_taskGroup_addPending();
  if ((v11 & 1) != 0)
  {
    sub_18C873014(a1, (uint64_t)v10, &qword_1ECEAA200);
    v12 = sub_18CEC1AA4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12) == 1)
    {
      sub_18C86752C((uint64_t)v10, &qword_1ECEAA200);
    }
    else
    {
      sub_18CEC1A98();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    }
    if (*(_QWORD *)(a3 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_18CEC19FC();
      v15 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v16 = *v4;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = a3;
    v18 = (_QWORD *)(v15 | v13);
    if (v15 | v13)
    {
      v21[0] = 0;
      v21[1] = 0;
      v18 = v21;
      v21[2] = v13;
      v21[3] = v15;
    }
    v20[1] = 1;
    v20[2] = v18;
    v20[3] = v16;
    swift_task_create();
  }
  swift_release();
  return v11 & 1;
}

uint64_t sub_18C980A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  *(_QWORD *)(v5 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v8;
  *v8 = v5;
  v8[1] = sub_18C980A64;
  return sub_18C980AA0(a4, a5);
}

uint64_t sub_18C980A64(char a1)
{
  OUTLINED_FUNCTION_12_19(a1);
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C980A90()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 32);
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_18C980AA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[77] = a2;
  v2[76] = a1;
  v3 = sub_18CEC14E0();
  v2[78] = v3;
  v2[79] = *(_QWORD *)(v3 - 8);
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  v2[82] = swift_task_alloc();
  v2[83] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18C980B78()
{
  char v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;

  OUTLINED_FUNCTION_57_8();
  *(_QWORD *)(v1 + 40) = &type metadata for FlagKeys;
  v2 = sub_18C900AD8();
  *(_BYTE *)(v1 + 16) = 24;
  OUTLINED_FUNCTION_71_6(v2);
  OUTLINED_FUNCTION_70_7();
  if ((v0 & 1) == 0)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v7 = (__n128 *)OUTLINED_FUNCTION_2();
    v8 = OUTLINED_FUNCTION_48_9(v7, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_94_3(0xD00000000000005ELL, (uint64_t)"StoreReviewGatingController: grouped logic feature is off, so don't check for group, and allow");
    v9 = sub_18CEC1B70();
    if (!OUTLINED_FUNCTION_29(v9))
      goto LABEL_17;
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v10 = OUTLINED_FUNCTION_2();
    v11 = OUTLINED_FUNCTION_275(v10);
    *(_QWORD *)(v1 + 568) = v7;
    *(_QWORD *)(v1 + 576) = sub_18C84C730;
    *(_QWORD *)(v1 + 584) = v11;
    goto LABEL_16;
  }
  sub_18C878C8C(*(_QWORD *)(v1 + 608) + 56, v1 + 592, &qword_1ECEA9400);
  v3 = OUTLINED_FUNCTION_288();
  sub_18C878C8C(v3, v4, &qword_1ECEA9400);
  v5 = *(_QWORD *)(v1 + 600);
  *(_QWORD *)(v1 + 704) = v5;
  if (v5)
    return OUTLINED_FUNCTION_41_10();
  if (qword_1ECEA9470 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v12 = (__n128 *)OUTLINED_FUNCTION_2();
  v8 = OUTLINED_FUNCTION_48_9(v12, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_72(48, 0x800000018CEE74C0);
  v13 = sub_18CEC1B70();
  if (OUTLINED_FUNCTION_29(v13))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v14 = OUTLINED_FUNCTION_2();
    v15 = OUTLINED_FUNCTION_275(v14);
    *(_QWORD *)(v1 + 544) = v12;
    *(_QWORD *)(v1 + 552) = sub_18C84C730;
    *(_QWORD *)(v1 + 560) = v15;
LABEL_16:
    OUTLINED_FUNCTION_163();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v16 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_37_1(v16, v17, v18, v19, v20, v21, v22, v23, v24);
    v26 = OUTLINED_FUNCTION_68(v25, MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_5_11(v26);
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
LABEL_17:
  OUTLINED_FUNCTION_96();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_117_3();
  return OUTLINED_FUNCTION_11_0(1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_18C980EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_18C904D20();
  *(_QWORD *)(v0 + 712) = v1;
  *(_QWORD *)(v0 + 720) = v2;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C980EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t EnumTagSinglePayload;
  uint64_t v39;
  void *v40;
  __n128 *v41;
  unint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  __n128 *v51;
  NSObject *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *boxed_opaque_existential_0;
  __int128 v61;
  uint64_t v62;
  __n128 *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __n128 *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  __n128 v149;
  __int128 v150;
  char v151;

  v1 = *(_QWORD *)(v0 + 704);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = 0;
    v133 = v0 + 136;
    v136 = v0 + 248;
    v118 = v0 + 96;
    v121 = v0 + 280;
    v127 = (__n128 *)(v0 + 56);
    v130 = v0 + 344;
    v124 = v0 + 408;
    v112 = v0 + 472;
    v115 = v0 + 312;
    v4 = v1 + 32;
    do
    {
      v5 = (_QWORD *)(v4 + 16 * v3);
      v6 = (_QWORD *)*v5;
      *(_QWORD *)(v0 + 728) = *v5;
      *(_QWORD *)(v0 + 736) = v5[1];
      v7 = v6[2];
      if (v7)
      {
        v8 = v6[4] == *(_QWORD *)(v0 + 712) && v6[5] == *(_QWORD *)(v0 + 720);
        if (v8 || (OUTLINED_FUNCTION_117() & 1) != 0)
        {
LABEL_29:
          v30 = *(_QWORD *)(v0 + 696);
          v31 = *(_QWORD *)(v0 + 624);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          __swift_storeEnumTagSinglePayload(v30, 1, 1, v31);
          v32 = v6[2];
          *(_QWORD *)(v0 + 744) = v32;
          if (v32)
          {
            *(_QWORD *)(v0 + 768) = 0;
            *(_OWORD *)(v0 + 752) = 0u;
            OUTLINED_FUNCTION_66_6(*(_QWORD *)(v0 + 728));
            return swift_task_switch();
          }
          v34 = *(_QWORD *)(v0 + 672);
          v35 = *(_QWORD *)(v0 + 624);
          v36 = swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_65_4(v36, v37, &qword_1ECEA9B40);
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v34, 1, v35);
          if ((_DWORD)EnumTagSinglePayload == 1)
          {
            v39 = swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_1(v39, &qword_1ECEA9B40);
            if (qword_1ECEA9470 != -1)
              swift_once();
            v40 = (void *)qword_1ECEA9460;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
            v41 = (__n128 *)OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_48_9(v41, (__n128)xmmword_18CF07380);
            v42 = OUTLINED_FUNCTION_80_2();
            OUTLINED_FUNCTION_94_3(v42, (uint64_t)"StoreReviewGatingController: no prompts from this group yet");
            v43 = sub_18CEC1B70();
            if (OUTLINED_FUNCTION_29(v43))
            {
              MEMORY[0x18D789CA8]();
              if (qword_1ECEAA560 != -1)
                swift_once();
              OUTLINED_FUNCTION_188();
              v44 = OUTLINED_FUNCTION_2();
              v45 = OUTLINED_FUNCTION_275(v44);
              *(_QWORD *)(v0 + 496) = v41;
              *(_QWORD *)(v0 + 504) = sub_18C84C730;
              *(_QWORD *)(v0 + 512) = v45;
              OUTLINED_FUNCTION_163();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
              OUTLINED_FUNCTION_159();
              OUTLINED_FUNCTION_12_1();
              OUTLINED_FUNCTION_96();
              OUTLINED_FUNCTION_154();
              OUTLINED_FUNCTION_269();
              MEMORY[0x18D789CA8]();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
              v46 = OUTLINED_FUNCTION_2();
              *(_OWORD *)(v46 + 16) = xmmword_18CF07380;
              v47 = OUTLINED_FUNCTION_68(v46, MEMORY[0x1E0DEA968]);
              OUTLINED_FUNCTION_5_11(v47);
              OUTLINED_FUNCTION_21_3();
              OUTLINED_FUNCTION_155();
              OUTLINED_FUNCTION_269();
              OUTLINED_FUNCTION_17();
            }
            OUTLINED_FUNCTION_96();

            v48 = *(_QWORD *)(v0 + 696);
            goto LABEL_60;
          }
          v49 = *(double *)(v0 + 736);
          OUTLINED_FUNCTION_75_5(EnumTagSinglePayload, *(_QWORD *)(v0 + 672));
          sub_18CEC14D4();
          sub_18CEC14C8();
          if (v50 >= v49)
          {
            v89 = *(_QWORD *)(v0 + 696);
            v90 = *(_QWORD *)(v0 + 648);
            v91 = *(_QWORD *)(v0 + 640);
            v92 = *(_QWORD *)(v0 + 632);
            v93 = *(_QWORD *)(v0 + 624);
            swift_bridgeObjectRelease();
            v94 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
            v94(v91, v93);
            v94(v90, v93);
            v48 = v89;
LABEL_60:
            sub_18C86752C(v48, &qword_1ECEA9B40);
            goto LABEL_61;
          }
          if (qword_1ECEA9470 != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
          v51 = (__n128 *)OUTLINED_FUNCTION_2();
          v52 = OUTLINED_FUNCTION_46(v51, (__n128)xmmword_18CF07380);
          OUTLINED_FUNCTION_18();
          v148 = v53;
          OUTLINED_FUNCTION_52_6(0xD00000000000002CLL, (uint64_t)"StoreReviewGatingController: last prompt by ");
          *(_QWORD *)(v0 + 272) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v0 + 248) = 0;
          *(_QWORD *)(v0 + 256) = 0xE000000000000000;
          sub_18C873014(v136, v124, (uint64_t *)&unk_1ECEAA5F0);
          *v127 = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
          sub_18C872148(v124, (uint64_t)v127);
          *(_BYTE *)(v0 + 88) = 3;
          v54 = *(_OWORD *)(v0 + 72);
          v149 = *v127;
          v150 = v54;
          v151 = *(_BYTE *)(v0 + 88);
          v55 = v148;
          if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
          {
            OUTLINED_FUNCTION_2_6();
            v55 = v97;
          }
          v56 = *(_QWORD *)(v55 + 16);
          if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
          {
            OUTLINED_FUNCTION_3_2();
            v55 = v98;
          }
          v57 = *(_QWORD *)(v0 + 648);
          v58 = *(_QWORD *)(v0 + 632);
          v59 = *(_QWORD *)(v0 + 624);
          *(_QWORD *)(v55 + 16) = v56 + 1;
          OUTLINED_FUNCTION_46_3(v55 + 40 * v56, v103, v106, v109, v112, v115, v118, v121, v124, (uint64_t)v127, v130, v133, v136, v0 + 376, v142, v145, v148, v149, v150,
            v151);
          OUTLINED_FUNCTION_121_2(v137);
          OUTLINED_FUNCTION_84_4();
          *(_QWORD *)(v0 + 400) = v59;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v140);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 16))(boxed_opaque_existential_0, v57, v59);
          OUTLINED_FUNCTION_110_2((uint64_t)v140, v131);
          *(_OWORD *)v134 = 0u;
          *(_OWORD *)(v134 + 16) = 0u;
          sub_18C872148(v131, v134);
          *(_BYTE *)(v0 + 168) = 3;
          v61 = *(_OWORD *)(v134 + 16);
          v149 = *(__n128 *)v134;
          v150 = v61;
          v151 = *(_BYTE *)(v134 + 32);
          v62 = v148;
          if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
          {
            OUTLINED_FUNCTION_2_6();
            v62 = v99;
          }
          v64 = v119;
          v63 = (__n128 *)v122;
          v65 = v116;
          v66 = *(_QWORD *)(v62 + 16);
          if (v66 >= *(_QWORD *)(v62 + 24) >> 1)
          {
            OUTLINED_FUNCTION_3_2();
            v62 = v100;
          }
          v67 = *(_QWORD *)(v0 + 736);
          *(_QWORD *)(v62 + 16) = v66 + 1;
          OUTLINED_FUNCTION_46_3(v62 + 40 * v66, v104, v107, v110, v113, v116, v119, v122, v125, v128, v131, v134, v137, (uint64_t)v140, v143, v146, v148, v149, v150,
            v151);
          OUTLINED_FUNCTION_121_2(v141);
          OUTLINED_FUNCTION_52_6(0xD000000000000022, (uint64_t)" has not surpassed group interval ");
          *(_QWORD *)(v0 + 304) = MEMORY[0x1E0DEB070];
          *(_QWORD *)(v0 + 280) = v67;
          OUTLINED_FUNCTION_110_2((uint64_t)v63, v65);
          *(_OWORD *)v64 = 0u;
          *(_OWORD *)(v64 + 16) = 0u;
          sub_18C872148(v65, v64);
          *(_BYTE *)(v0 + 128) = 3;
          v68 = *(_OWORD *)(v64 + 16);
          v149 = *(__n128 *)v64;
          v150 = v68;
          v151 = *(_BYTE *)(v64 + 32);
          v69 = v148;
          if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
          {
            OUTLINED_FUNCTION_2_6();
            v69 = v101;
          }
          v70 = *(_QWORD *)(v69 + 16);
          if (v70 >= *(_QWORD *)(v69 + 24) >> 1)
          {
            OUTLINED_FUNCTION_3_2();
            v69 = v102;
          }
          *(_QWORD *)(v69 + 16) = v70 + 1;
          OUTLINED_FUNCTION_46_3(v69 + 40 * v70, v105, v108, v111, v114, v117, v120, v123, v126, v129, v132, v135, v138, v141, v144, v147, v148, v149, v150,
            v151);
          OUTLINED_FUNCTION_67_1(v71, (uint64_t *)&unk_1ECEAA5F0);
          OUTLINED_FUNCTION_31_0(16, 0x800000018CEE75D0);
          v51[2].n128_u64[0] = v148;
          v72 = sub_18CEC1B70();
          if (os_log_type_enabled(v52, v72))
          {
            MEMORY[0x18D789CA8]();
            if (qword_1ECEAA560 != -1)
              swift_once();
            OUTLINED_FUNCTION_41_0();
            v73 = OUTLINED_FUNCTION_2();
            *(_BYTE *)(v73 + 16) = &v148;
            *(_QWORD *)(v0 + 472) = v51;
            *(_QWORD *)(v0 + 480) = sub_18C84C730;
            *(_QWORD *)(v0 + 488) = v73;
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
            OUTLINED_FUNCTION_55();
            v74 = sub_18CEC17C8();
            v76 = v75;
            swift_bridgeObjectRelease();
            swift_release();
            OUTLINED_FUNCTION_130();
            MEMORY[0x18D789CA8]();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
            v63 = (__n128 *)OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_232(v63, v77, v78, v79, v80, v81, v82, v83, v84);
            v63[4].n128_u64[0] = OUTLINED_FUNCTION_68(v85, MEMORY[0x1E0DEA968]);
            v63[2].n128_u64[0] = v74;
            v63[2].n128_u64[1] = v76;
            OUTLINED_FUNCTION_35();
            OUTLINED_FUNCTION_41();
            sub_18CEC1594();
            OUTLINED_FUNCTION_115();
            OUTLINED_FUNCTION_130();
            OUTLINED_FUNCTION_17();
          }
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_56_7();
          v86 = OUTLINED_FUNCTION_288();
          v87 = ((uint64_t (*)(uint64_t))v63)(v86);
          OUTLINED_FUNCTION_87_4(v87, &qword_1ECEA9B40);
          v88 = 0;
          goto LABEL_62;
        }
        if (v7 != 1)
        {
          v9 = v6 + 7;
          v10 = 1;
          while (1)
          {
            v11 = v10 + 1;
            if (__OFADD__(v10, 1))
              break;
            v12 = *(v9 - 1) == *(_QWORD *)(v0 + 712) && *v9 == *(_QWORD *)(v0 + 720);
            if (v12 || (OUTLINED_FUNCTION_117() & 1) != 0)
              goto LABEL_29;
            ++v10;
            v9 += 2;
            if (v11 == v7)
              goto LABEL_18;
          }
          __break(1u);
          goto LABEL_64;
        }
      }
LABEL_18:
      ++v3;
    }
    while (v3 != v2);
  }
  v2 = v0 + 176;
  v7 = v0 + 216;
  v3 = v0 + 440;
  if (qword_1ECEA9470 != -1)
LABEL_64:
    swift_once();
  v13 = *(_QWORD *)(v0 + 720);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = (void *)qword_1ECEA9460;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v16 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v16 + 16) = xmmword_18CF07380;
  v17 = v15;
  OUTLINED_FUNCTION_18();
  v148 = v18;
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_52_6(v19 + 31, (uint64_t)"StoreReviewGatingController: no group contains ");
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 216) = v14;
  *(_QWORD *)(v0 + 224) = v13;
  sub_18C873014(v7, v3, (uint64_t *)&unk_1ECEAA5F0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  sub_18C872148(v3, v2);
  *(_BYTE *)(v0 + 208) = 3;
  v21 = *(_OWORD *)(v2 + 16);
  v149 = *(__n128 *)v2;
  v150 = v21;
  v151 = *(_BYTE *)(v2 + 32);
  v22 = v148;
  if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_6();
    v22 = v95;
  }
  v23 = *(_QWORD *)(v22 + 16);
  if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
  {
    OUTLINED_FUNCTION_3_2();
    v22 = v96;
  }
  *(_QWORD *)(v22 + 16) = v23 + 1;
  OUTLINED_FUNCTION_46_3(v22 + 40 * v23, v103, v106, v109, v112, v115, v118, v121, v124, (uint64_t)v127, v130, v133, v136, 1, 2, v145, v148, v149, v150,
    v151);
  OUTLINED_FUNCTION_67_1(v24, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_34_0();
  *(_QWORD *)(v16 + 32) = v148;
  v25 = sub_18CEC1B70();
  if (os_log_type_enabled(v17, v25))
  {
    MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 != -1)
      swift_once();
    OUTLINED_FUNCTION_188();
    v26 = OUTLINED_FUNCTION_2();
    v27 = OUTLINED_FUNCTION_275(v26);
    *(_QWORD *)(v0 + 520) = v16;
    *(_QWORD *)(v0 + 528) = sub_18C84C730;
    *(_QWORD *)(v0 + 536) = v27;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
    OUTLINED_FUNCTION_159();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_269();
    MEMORY[0x18D789CA8]();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
    v28 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v28 + 16) = v139;
    *(_QWORD *)(v28 + 56) = v20;
    v29 = sub_18C872FBC();
    OUTLINED_FUNCTION_5_11(v29);
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_155();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_17();
  }
  OUTLINED_FUNCTION_44();

LABEL_61:
  v88 = 1;
LABEL_62:
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_117_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v88);
}

uint64_t sub_18C9819DC()
{
  sub_18C9831B8();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C981A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t EnumTagSinglePayload;
  uint64_t v30;
  void *v31;
  __n128 *v32;
  unint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  double v41;
  double v42;
  __n128 *v43;
  __n128 *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __n128 *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v56;
  NSObject *v57;
  __n128 *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  char v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  __n128 *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  __n128 v126;
  __n128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  char v131;
  char v132;
  char v133;

  v1 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = OUTLINED_FUNCTION_57(v1);
  v4 = *(_QWORD *)(v0 + 784);
  if (v3 != 1)
  {
    v6 = *(_QWORD *)(v0 + 696);
    v7 = *(_QWORD *)(v0 + 680);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 632) + 32);
    v8(*(_QWORD *)(v0 + 664), v1, v2);
    sub_18C873014(v6, v7, &qword_1ECEA9B40);
    if (OUTLINED_FUNCTION_57(v7) == 1)
    {
      v9 = (uint64_t *)(v0 + 776);
      v10 = *(_QWORD *)(v0 + 696);
      v11 = *(_QWORD *)(v0 + 680);
      v12 = *(_QWORD *)(v0 + 664);
      v13 = *(_QWORD *)(v0 + 624);
      swift_bridgeObjectRelease();
      sub_18C86752C(v10, &qword_1ECEA9B40);
      sub_18C86752C(v11, &qword_1ECEA9B40);
      v8(v10, v12, v13);
      v14 = v10;
      v15 = v13;
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 632);
      v8(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 624));
      v17 = sub_18CEC148C();
      v18 = *(void (**)(uint64_t))(v16 + 8);
      v19 = OUTLINED_FUNCTION_288();
      v18(v19);
      if ((v17 & 1) == 0)
      {
        ((void (*)(_QWORD, _QWORD))v18)(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 624));
        OUTLINED_FUNCTION_17();
        goto LABEL_9;
      }
      v9 = (uint64_t *)(v0 + 776);
      v20 = *(_QWORD *)(v0 + 696);
      v21 = *(_QWORD *)(v0 + 664);
      v22 = *(_QWORD *)(v0 + 624);
      v23 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_87_4(v23, &qword_1ECEA9B40);
      v8(v20, v21, v22);
      v14 = v20;
      v15 = v22;
    }
    __swift_storeEnumTagSinglePayload(v14, 0, 1, v15);
    goto LABEL_10;
  }
  v5 = OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_1(v5, &qword_1ECEA9B40);
LABEL_9:
  v4 = *(_QWORD *)(v0 + 760);
  v9 = (uint64_t *)(v0 + 752);
LABEL_10:
  v24 = *v9;
  v25 = *(_QWORD *)(v0 + 768) + 1;
  if (v25 != *(_QWORD *)(v0 + 744))
  {
    *(_QWORD *)(v0 + 768) = v25;
    *(_QWORD *)(v0 + 760) = v4;
    *(_QWORD *)(v0 + 752) = v24;
    OUTLINED_FUNCTION_66_6(*(_QWORD *)(v0 + 728) + 16 * v25);
    return swift_task_switch();
  }
  v26 = *(_QWORD *)(v0 + 696);
  v27 = *(_QWORD *)(v0 + 672);
  v28 = *(_QWORD *)(v0 + 624);
  swift_bridgeObjectRelease();
  sub_18C873014(v26, v27, &qword_1ECEA9B40);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v27, 1, v28);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    v30 = OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_87_4(v30, &qword_1ECEA9B40);
    if (qword_1ECEA9470 != -1)
      swift_once();
    v31 = (void *)qword_1ECEA9460;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v32 = (__n128 *)OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_10_2(v32, (__n128)xmmword_18CF07380);
    v33 = OUTLINED_FUNCTION_80_2();
    OUTLINED_FUNCTION_11(v33, (uint64_t)"StoreReviewGatingController: no prompts from this group yet");
    v34 = sub_18CEC1B70();
    if (OUTLINED_FUNCTION_29(v34))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_188();
      v35 = OUTLINED_FUNCTION_2();
      v36 = OUTLINED_FUNCTION_275(v35);
      *(_QWORD *)(v0 + 496) = v32;
      *(_QWORD *)(v0 + 504) = sub_18C84C730;
      *(_QWORD *)(v0 + 512) = v36;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v37 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v37 + 16) = xmmword_18CF07380;
      v38 = OUTLINED_FUNCTION_68(v37, MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_5_11(v38);
      OUTLINED_FUNCTION_21_3();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_17();
    }
    OUTLINED_FUNCTION_96();

  }
  else
  {
    v41 = *(double *)(v0 + 736);
    OUTLINED_FUNCTION_75_5(EnumTagSinglePayload, *(_QWORD *)(v0 + 672));
    sub_18CEC14D4();
    sub_18CEC14C8();
    if (v42 < v41)
    {
      v43 = (__n128 *)(v0 + 56);
      if (qword_1ECEA9470 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v44 = (__n128 *)OUTLINED_FUNCTION_2();
      v103 = OUTLINED_FUNCTION_46(v44, (__n128)xmmword_18CF07380);
      OUTLINED_FUNCTION_18();
      v121 = v45;
      OUTLINED_FUNCTION_90_3(0xD00000000000002CLL, (uint64_t)"StoreReviewGatingController: last prompt by ");
      *(_QWORD *)(v0 + 272) = MEMORY[0x1E0DEA968];
      if (v4)
        v46 = v24;
      else
        v46 = 0;
      v47 = 0xE000000000000000;
      if (v4)
        v47 = v4;
      *(_QWORD *)(v0 + 248) = v46;
      *(_QWORD *)(v0 + 256) = v47;
      sub_18C873014(v0 + 248, v0 + 408, (uint64_t *)&unk_1ECEAA5F0);
      *v43 = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_18C872148(v0 + 408, v0 + 56);
      *(_BYTE *)(v0 + 88) = 3;
      v125 = *v43;
      v128 = *(_OWORD *)(v0 + 72);
      v131 = *(_BYTE *)(v0 + 88);
      v48 = v121;
      if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_6();
        v48 = v91;
      }
      v49 = (__n128 *)(v0 + 136);
      v50 = *(_QWORD *)(v48 + 16);
      v106 = (uint64_t)v44;
      if (v50 >= *(_QWORD *)(v48 + 24) >> 1)
      {
        OUTLINED_FUNCTION_3_2();
        v48 = v92;
      }
      v51 = *(_QWORD *)(v0 + 648);
      v52 = *(_QWORD *)(v0 + 632);
      v53 = *(_QWORD *)(v0 + 624);
      *(_QWORD *)(v48 + 16) = v50 + 1;
      OUTLINED_FUNCTION_43_0(v48 + 40 * v50, v97, v100, (uint64_t)v103, v106, v0 + 312, v0 + 280, v0 + 376, v115, v118, v121, v125, v128, v131);
      sub_18C86752C(v0 + 248, (uint64_t *)&unk_1ECEAA5F0);
      OUTLINED_FUNCTION_84_4();
      *(_QWORD *)(v0 + 400) = v53;
      v54 = (uint64_t)v113;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v113);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v52 + 16))(boxed_opaque_existential_0, v51, v53);
      sub_18C873014((uint64_t)v113, v0 + 344, (uint64_t *)&unk_1ECEAA5F0);
      *v49 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      sub_18C872148(v0 + 344, v0 + 136);
      *(_BYTE *)(v0 + 168) = 3;
      v126 = *v49;
      v129 = *(_OWORD *)(v0 + 152);
      v132 = *(_BYTE *)(v0 + 168);
      v56 = v122;
      if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_6();
        v56 = v93;
      }
      v57 = v104;
      v58 = (__n128 *)(v0 + 96);
      v59 = *(_QWORD *)(v56 + 16);
      v60 = v111;
      if (v59 >= *(_QWORD *)(v56 + 24) >> 1)
      {
        OUTLINED_FUNCTION_3_2();
        v56 = v94;
      }
      v61 = *(_QWORD *)(v0 + 736);
      *(_QWORD *)(v56 + 16) = v59 + 1;
      OUTLINED_FUNCTION_43_0(v56 + 40 * v59, v98, v101, v104, v107, v109, v111, (uint64_t)v113, v116, v119, v122, v126, v129, v132);
      OUTLINED_FUNCTION_121_2(v54);
      OUTLINED_FUNCTION_68_5();
      OUTLINED_FUNCTION_90_3(v62 + 18, (uint64_t)" has not surpassed group interval ");
      *(_QWORD *)(v0 + 304) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v0 + 280) = v61;
      OUTLINED_FUNCTION_110_2(v60, v110);
      *v58 = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      sub_18C872148(v110, v0 + 96);
      *(_BYTE *)(v0 + 128) = 3;
      v127 = *v58;
      v130 = *(_OWORD *)(v0 + 112);
      v133 = *(_BYTE *)(v0 + 128);
      v63 = v123;
      if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_6();
        v63 = v95;
      }
      v64 = v108;
      v65 = *(_QWORD *)(v63 + 16);
      v66 = v65 + 1;
      if (v65 >= *(_QWORD *)(v63 + 24) >> 1)
      {
        OUTLINED_FUNCTION_3_2();
        v63 = v96;
      }
      *(_QWORD *)(v63 + 16) = v66;
      OUTLINED_FUNCTION_43_0(v63 + 40 * v65, v99, v102, v105, v108, v110, v112, v114, v117, v120, v123, v127, v130, v133);
      OUTLINED_FUNCTION_67_1(v67, (uint64_t *)&unk_1ECEAA5F0);
      OUTLINED_FUNCTION_31_0(16, 0x800000018CEE75D0);
      *(_QWORD *)(v64 + 32) = v124;
      v68 = (uint64_t (*)(uint64_t, uint64_t))sub_18CEC1B70();
      if (os_log_type_enabled(v57, (os_log_type_t)v68))
      {
        MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        v69 = byte_1ECEA9E18;
        v70 = OUTLINED_FUNCTION_2();
        *(_BYTE *)(v70 + 16) = v69;
        *(_QWORD *)(v0 + 472) = v64;
        *(_QWORD *)(v0 + 480) = sub_18C84C730;
        *(_QWORD *)(v0 + 488) = v70;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v66 = sub_18CEC17C8();
        v72 = v71;
        OUTLINED_FUNCTION_155();
        swift_release();
        OUTLINED_FUNCTION_269();
        v73 = (void *)MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v74 = (__n128 *)OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_232(v74, v75, v76, v77, v78, v79, v80, v81, v82);
        v74[4].n128_u64[0] = OUTLINED_FUNCTION_68(v83, MEMORY[0x1E0DEA968]);
        v74[2].n128_u64[0] = v66;
        v74[2].n128_u64[1] = v72;
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_101_2();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v73);
        OUTLINED_FUNCTION_17();
      }
      OUTLINED_FUNCTION_155();

      v84 = *(_QWORD *)(v0 + 648);
      OUTLINED_FUNCTION_56_7();
      v39 = v68(v84, v66);
      v85 = 0;
      goto LABEL_47;
    }
    v86 = *(_QWORD *)(v0 + 648);
    v87 = *(_QWORD *)(v0 + 640);
    v88 = *(_QWORD *)(v0 + 632);
    v89 = *(_QWORD *)(v0 + 624);
    OUTLINED_FUNCTION_115();
    v90 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
    v90(v87, v89);
    v39 = ((uint64_t (*)(uint64_t, uint64_t))v90)(v86, v89);
  }
  v85 = 1;
LABEL_47:
  OUTLINED_FUNCTION_1(v39, &qword_1ECEA9B40);
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_117_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v85);
}

uint64_t sub_18C982338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  *(_QWORD *)(v5 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v8;
  *v8 = v5;
  v8[1] = sub_18C97FEA8;
  return sub_18C98239C(a4, a5);
}

uint64_t sub_18C98239C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return swift_task_switch();
}

uint64_t sub_18C9823B0()
{
  uint64_t v0;
  char v1;

  *(_QWORD *)(v0 + 168) = sub_18C982F88();
  *(_BYTE *)(v0 + 49) = v1;
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_18C9823E8()
{
  uint64_t v0;
  __int128 *v1;
  __n128 *v2;
  id v3;
  os_log_type_t v4;
  _BOOL8 v5;
  uint64_t v6;
  _QWORD *v7;
  os_log_type_t v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;

  v1 = (__int128 *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 49) & 1) != 0)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v2 = (__n128 *)OUTLINED_FUNCTION_2();
    v3 = OUTLINED_FUNCTION_10_2(v2, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_11(0xD00000000000003CLL, (uint64_t)"StoreReviewGatingController: no sessions yet, so don't allow");
    v8 = sub_18CEC1B70();
    v9 = OUTLINED_FUNCTION_29(v8);
    if (!v9)
      goto LABEL_23;
    v7 = (_QWORD *)MEMORY[0x18D789CA8](v9, v10);
    if (qword_1ECEAA560 == -1)
      goto LABEL_22;
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_78_2(*(_QWORD *)(v0 + 152) + 8, v0 + 120);
  OUTLINED_FUNCTION_78_2(v0 + 120, v0 + 136);
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {
    if (qword_1ECEA9470 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v2 = (__n128 *)OUTLINED_FUNCTION_2();
    v3 = OUTLINED_FUNCTION_10_2(v2, (__n128)xmmword_18CF07380);
    OUTLINED_FUNCTION_11(0xD000000000000044, (uint64_t)"StoreReviewGatingController: no session count in bag, so don't allow");
    v4 = sub_18CEC1B88();
    v5 = OUTLINED_FUNCTION_29(v4);
    if (!v5)
      goto LABEL_23;
    v7 = (_QWORD *)MEMORY[0x18D789CA8](v5, v6);
    if (qword_1ECEAA560 == -1)
      goto LABEL_22;
    goto LABEL_26;
  }
  v11 = *(_QWORD *)(v0 + 168);
  if (v11 >= *(_QWORD *)(v0 + 136))
  {
    v45 = 1;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v45);
  }
  if (qword_1ECEA9470 != -1)
  {
    swift_once();
    v11 = *(_QWORD *)(v0 + 168);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
  v2 = (__n128 *)OUTLINED_FUNCTION_2();
  v3 = OUTLINED_FUNCTION_109_2(v2, (__n128)xmmword_18CF07380);
  OUTLINED_FUNCTION_18();
  v50 = v12;
  OUTLINED_FUNCTION_93_3(0xD000000000000031, (uint64_t)"StoreReviewGatingController: not enough sessions ");
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v0 + 56) = v11;
  OUTLINED_FUNCTION_65_4(v13, v14, (uint64_t *)&unk_1ECEAA5F0);
  *v1 = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  OUTLINED_FUNCTION_103_3();
  *(_BYTE *)(v0 + 48) = 3;
  v52 = *v1;
  v53 = *(_OWORD *)(v0 + 32);
  if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
    OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_55_7();
  if (v24)
    OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_25_13(v15, v16, v17, v18, v19, v20, v21, v22, v47, v48, v49, v50, v23, v52, v53);
  OUTLINED_FUNCTION_100_2(v25, (uint64_t *)&unk_1ECEAA5F0);
  OUTLINED_FUNCTION_92_2();
  OUTLINED_FUNCTION_31_0(22, v26);
  v2[2].n128_u64[0] = v51;
  v27 = sub_18CEC1B88();
  if (OUTLINED_FUNCTION_29(v27))
  {
    v7 = (_QWORD *)MEMORY[0x18D789CA8]();
    if (qword_1ECEAA560 == -1)
    {
LABEL_22:
      OUTLINED_FUNCTION_41_0();
      v28 = OUTLINED_FUNCTION_2();
      v29 = OUTLINED_FUNCTION_97_2(v28);
      *(_QWORD *)(v0 + 16) = v2;
      *(_QWORD *)(v0 + 24) = sub_18C84C730;
      *(_QWORD *)(v0 + 32) = v29;
      OUTLINED_FUNCTION_163();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_55();
      v30 = OUTLINED_FUNCTION_61_7();
      v32 = v31;
      OUTLINED_FUNCTION_96();
      swift_release();
      OUTLINED_FUNCTION_5_7();
      MEMORY[0x18D789CA8](v33, v34);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v35 = (__n128 *)OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_37_1(v35, v36, v37, v38, v39, v40, v41, v42, v43);
      v7[8] = OUTLINED_FUNCTION_68(v44, MEMORY[0x1E0DEA968]);
      v7[4] = v30;
      v7[5] = v32;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_17();
      goto LABEL_23;
    }
LABEL_26:
    swift_once();
    goto LABEL_22;
  }
LABEL_23:
  OUTLINED_FUNCTION_96();

  v45 = 0;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v45);
}

uint64_t sub_18C982890(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_18C9828F0;
  return StoreReviewGatingController.canPrompt()();
}

uint64_t sub_18C9828F0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void (**v4)(_QWORD, _QWORD);
  void *v5;

  OUTLINED_FUNCTION_136();
  v4 = *(void (***)(_QWORD, _QWORD))(v3 + 24);
  v5 = *(void **)(v3 + 16);
  OUTLINED_FUNCTION_6();

  v4[2](v4, a1 & 1);
  _Block_release(v4);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

id StoreReviewGatingController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StoreReviewGatingController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StoreReviewGatingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_107();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t *sub_18C9829E0(uint64_t *a1)
{
  sub_18C888B3C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_18C982A20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_73(v9);
  *v10 = v3;
  v10[1] = sub_18C91A8F0;
  return sub_18C97F90C(a1, a2, v6, v7, v8);
}

uint64_t type metadata accessor for StoreReviewGatingController()
{
  return objc_opt_self();
}

uint64_t method lookup function for StoreReviewGatingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreReviewGatingController.__allocating_init(bag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_18C982AD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_81_3();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_21_17(v1, (uint64_t)sub_18C91A8F0);
  return OUTLINED_FUNCTION_14_25(v2, v3, v4);
}

uint64_t sub_18C982B14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_81_3();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_21_17(v1, (uint64_t)sub_18C91A8F0);
  return OUTLINED_FUNCTION_14_25(v2, v3, v4);
}

uint64_t sub_18C982B58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_81_3();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_21_17(v1, (uint64_t)sub_18C91A8F0);
  return OUTLINED_FUNCTION_14_25(v2, v3, v4);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_18C982BCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_59_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_73(v0);
  v2 = OUTLINED_FUNCTION_58_0(v1);
  return sub_18C97FE44(v2, v3, v4, v5, v6);
}

uint64_t sub_18C982C20(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18C982C4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_59_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_73(v0);
  v2 = OUTLINED_FUNCTION_58_0(v1);
  return sub_18C980A00(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_44Tm_0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C982CD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_59_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_73(v0);
  v2 = OUTLINED_FUNCTION_58_0(v1);
  return sub_18C982338(v2, v3, v4, v5, v6);
}

uint64_t sub_18C982D50(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_18C982DB8;
  return v5(v2 + 32);
}

uint64_t sub_18C982DB8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_BYTE **)(v1 + 16);
  OUTLINED_FUNCTION_47(&v4);
  *v2 = *(_BYTE *)(v1 + 32);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_18C982E00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C982E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_73(v5);
  *v6 = v2;
  v6[1] = sub_18C982E90;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE056660 + dword_1EE056660))(a1, v4);
}

uint64_t sub_18C982E90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_75_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 + 632) + 32))(v2, a2, *(_QWORD *)(v3 + 624));
}

unint64_t OUTLINED_FUNCTION_80_2()
{
  return 0xD00000000000003BLL;
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  return swift_task_alloc();
}

uint64_t *OUTLINED_FUNCTION_86_4()
{
  uint64_t *v0;

  return sub_18C9829E0(v0);
}

void OUTLINED_FUNCTION_87_4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_18C86752C(v2, a2);
}

void OUTLINED_FUNCTION_95_3(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  LogInterpolation.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_97_2(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

void OUTLINED_FUNCTION_100_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_18C86752C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  return sub_18CEC1594();
}

uint64_t OUTLINED_FUNCTION_117_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_118_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_120_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_18C878C8C(a1, v3, a3);
}

void OUTLINED_FUNCTION_121_2(uint64_t a1)
{
  uint64_t *v1;

  sub_18C86752C(a1, v1);
}

uint64_t sub_18C982F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA93E8);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_117_0();
  sub_18C904D20();
  sub_18C904B98(v0);
  OUTLINED_FUNCTION_44();
  v2 = OUTLINED_FUNCTION_21_18();
  OUTLINED_FUNCTION_54(v0);
  if (v3)
  {
    sub_18C86752C(v0, &qword_1ECEA93E8);
    return 0;
  }
  else
  {
    v4 = *(_QWORD *)(v0 + *(int *)(v2 + 20));
    sub_18C87D46C(v0);
  }
  return v4;
}

uint64_t sub_18C983030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_117_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA93E8);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_21_18();
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18C904D20();
  sub_18C904B98((uint64_t)v4);
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_100((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_72_5((uint64_t)v8);
    v10 = &v8[*(int *)(v5 + 20)];
    *(_QWORD *)v10 = 0;
    v10[8] = 1;
    OUTLINED_FUNCTION_72_5((uint64_t)&v8[*(int *)(v5 + 24)]);
    sub_18C86752C((uint64_t)v4, &qword_1ECEA93E8);
  }
  else
  {
    sub_18C9048BC((uint64_t)v4, (uint64_t)v8);
  }
  sub_18CEC14D4();
  v11 = OUTLINED_FUNCTION_142();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v11);
  sub_18C872190(v0, (uint64_t)&v8[*(int *)(v5 + 24)], &qword_1ECEA9B40);
  sub_18C904D20();
  sub_18C983530();
  OUTLINED_FUNCTION_96();
  return sub_18C87D46C((uint64_t)v8);
}

void sub_18C9831B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  Swift::String v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[32];
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[4];
  uint64_t v43;

  OUTLINED_FUNCTION_61_3();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA93E8);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_21_18();
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2_24();
  sub_18C904B98((uint64_t)v9);
  OUTLINED_FUNCTION_100((uint64_t)v9, 1, v10);
  if (v12)
  {
    sub_18C86752C((uint64_t)v9, &qword_1ECEA93E8);
    if (qword_1ECEA9470 != -1)
      swift_once();
    v13 = (void *)qword_1ECEA9460;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
    v14 = OUTLINED_FUNCTION_2();
    v35 = xmmword_18CF07380;
    *(_OWORD *)(v14 + 16) = xmmword_18CF07380;
    v15 = v13;
    OUTLINED_FUNCTION_18();
    v43 = v16;
    v17._countAndFlagsBits = 0xD000000000000025;
    v17._object = (void *)0x800000018CEE7860;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v17);
    v18 = MEMORY[0x1E0DEA968];
    v42[3] = MEMORY[0x1E0DEA968];
    v42[0] = v4;
    v42[1] = v2;
    OUTLINED_FUNCTION_34_11((uint64_t)v42, (uint64_t)v38);
    v36 = 0u;
    v37 = 0u;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_10((uint64_t)v38, (uint64_t)&v36);
    v41 = 3;
    v39 = v36;
    v40 = v37;
    v19 = v43;
    if ((OUTLINED_FUNCTION_11_1() & 1) == 0)
    {
      OUTLINED_FUNCTION_2_6();
      v19 = v33;
    }
    v20 = *(_QWORD *)(v19 + 16);
    if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_2();
      v19 = v34;
    }
    *(_QWORD *)(v19 + 16) = v20 + 1;
    v21 = v19 + 40 * v20;
    v22 = v39;
    v23 = v40;
    *(_BYTE *)(v21 + 64) = v41;
    *(_OWORD *)(v21 + 32) = v22;
    *(_OWORD *)(v21 + 48) = v23;
    v43 = v19;
    sub_18C86752C((uint64_t)v42, (uint64_t *)&unk_1ECEAA5F0);
    v24._object = (void *)0x800000018CEE7890;
    v24._countAndFlagsBits = 0xD000000000000011;
    LogInterpolation.StringInterpolation.appendLiteral(_:)(v24);
    *(_QWORD *)(v14 + 32) = v43;
    v25 = sub_18CEC1B70();
    if (OUTLINED_FUNCTION_19_1(v25))
    {
      MEMORY[0x18D789CA8]();
      if (qword_1ECEAA560 != -1)
        swift_once();
      OUTLINED_FUNCTION_41_0();
      v26 = OUTLINED_FUNCTION_2();
      *(_BYTE *)(v26 + 16) = &v43;
      *(_QWORD *)&v39 = v14;
      *((_QWORD *)&v39 + 1) = sub_18C84C730;
      *(_QWORD *)&v40 = v26;
      OUTLINED_FUNCTION_129();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_269();
      MEMORY[0x18D789CA8]();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
      v27 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v27 + 16) = v35;
      *(_QWORD *)(v27 + 56) = v18;
      v28 = sub_18C872FBC();
      OUTLINED_FUNCTION_5_11(v28);
      OUTLINED_FUNCTION_40_4();
      OUTLINED_FUNCTION_155();
      OUTLINED_FUNCTION_269();

      OUTLINED_FUNCTION_44();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_142();
    v29 = OUTLINED_FUNCTION_57_9();
    __swift_storeEnumTagSinglePayload(v29, v30, v31, v32);
  }
  else
  {
    sub_18C9048BC((uint64_t)v9, v0);
    sub_18C873014(v0 + *(int *)(v10 + 24), v6, &qword_1ECEA9B40);
    sub_18C87D46C(v0);
  }
  OUTLINED_FUNCTION_174();
}

void sub_18C983530()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  char v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;

  v1 = v0;
  v70 = *MEMORY[0x1E0C80C00];
  sub_18CEC10F0();
  swift_allocObject();
  sub_18CEC10E4();
  OUTLINED_FUNCTION_21_18();
  sub_18C8783D4((unint64_t *)&unk_1ECEA93C0, (uint64_t (*)(uint64_t))type metadata accessor for StoreReviewGatingLedger.StateData, (uint64_t)&unk_18CF0C718);
  sub_18CEC10D8();
  OUTLINED_FUNCTION_55_0();
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_18CEC1444();
  *(_QWORD *)&v57 = 0;
  v4 = objc_msgSend(v2, sel_JSONObjectWithData_options_error_, v3, 0, &v57);

  v5 = (id)v57;
  if (v4)
  {
    sub_18CEC1CB4();
    OUTLINED_FUNCTION_81_4();
    swift_unknownObjectRelease();
    sub_18C872D90(&v65, &v57);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9D80);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v68;
      *(_QWORD *)&v65 = 0xD00000000000001CLL;
      *((_QWORD *)&v65 + 1) = 0x800000018CEE7810;
      sub_18CEC18AC();
      v8 = v65;
      if (qword_1ECEA9470 != -1)
        swift_once();
      v9 = (void *)qword_1ECEA9460;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA530);
      v10 = OUTLINED_FUNCTION_2();
      *(_OWORD *)(v10 + 16) = xmmword_18CF07380;
      v11 = v9;
      OUTLINED_FUNCTION_18();
      v55 = v12;
      v13._countAndFlagsBits = 0xD00000000000002CLL;
      v13._object = (void *)0x800000018CEE7830;
      LogInterpolation.StringInterpolation.appendLiteral(_:)(v13);
      v69 = MEMORY[0x1E0DEA968];
      v68 = v8;
      OUTLINED_FUNCTION_34_11((uint64_t)&v68, (uint64_t)&v61);
      v57 = 0u;
      v58 = 0u;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_35_10((uint64_t)&v61, (uint64_t)&v57);
      v67 = 3;
      v65 = v57;
      v66 = v58;
      v14 = v55;
      v15 = OUTLINED_FUNCTION_11_1();
      if ((v15 & 1) == 0)
      {
        OUTLINED_FUNCTION_2_6();
        v14 = v15;
      }
      v25 = *(_QWORD *)(v14 + 16);
      v24 = *(_QWORD *)(v14 + 24);
      if (v25 >= v24 >> 1)
      {
        OUTLINED_FUNCTION_77_7(v24);
        OUTLINED_FUNCTION_3_2();
        v14 = v15;
      }
      *(_QWORD *)(v14 + 16) = v25 + 1;
      OUTLINED_FUNCTION_32_11(v15, v16, v17, v18, v19, v20, v21, v22, 1, 2, v52, v8, v55, v56, v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v23,
        v65,
        v66);
      sub_18C86752C((uint64_t)&v68, (uint64_t *)&unk_1ECEAA5F0);
      v26._countAndFlagsBits = 2112032;
      v26._object = (void *)0xE300000000000000;
      LogInterpolation.StringInterpolation.appendLiteral(_:)(v26);
      v69 = v6;
      *(_QWORD *)&v68 = v7;
      sub_18C873014((uint64_t)&v68, (uint64_t)&v61, (uint64_t *)&unk_1ECEAA5F0);
      v57 = 0u;
      v58 = 0u;
      OUTLINED_FUNCTION_129();
      sub_18C872190((uint64_t)&v61, (uint64_t)&v57, (uint64_t *)&unk_1ECEAA5F0);
      v67 = 3;
      v65 = v57;
      v66 = v58;
      v27 = v55;
      v28 = OUTLINED_FUNCTION_11_1();
      if ((v28 & 1) == 0)
      {
        OUTLINED_FUNCTION_2_6();
        v27 = v28;
      }
      v38 = *(_QWORD *)(v27 + 16);
      v37 = *(_QWORD *)(v27 + 24);
      if (v38 >= v37 >> 1)
      {
        OUTLINED_FUNCTION_77_7(v37);
        OUTLINED_FUNCTION_3_2();
        v27 = v28;
      }
      *(_QWORD *)(v27 + 16) = v38 + 1;
      OUTLINED_FUNCTION_32_11(v28, v29, v30, v31, v32, v33, v34, v35, v49, v51, v53, v54, v55, v56, v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v36,
        v65,
        v66);
      OUTLINED_FUNCTION_14_0(v39, (uint64_t *)&unk_1ECEAA5F0);
      OUTLINED_FUNCTION_34_0();
      *(_QWORD *)(v10 + 32) = v55;
      v40 = sub_18CEC1B70();
      if (OUTLINED_FUNCTION_66_7(v40))
      {
        MEMORY[0x18D789CA8]();
        if (qword_1ECEAA560 != -1)
          swift_once();
        OUTLINED_FUNCTION_41_0();
        v41 = OUTLINED_FUNCTION_2();
        *(_BYTE *)(v41 + 16) = &v55;
        *(_QWORD *)&v65 = v10;
        *((_QWORD *)&v65 + 1) = sub_18C84C6D8;
        *(_QWORD *)&v66 = v41;
        OUTLINED_FUNCTION_184();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECEAA590);
        sub_18C872F40();
        v42 = sub_18CEC17C8();
        OUTLINED_FUNCTION_82_4();
        OUTLINED_FUNCTION_158();
        OUTLINED_FUNCTION_68_6();
        MEMORY[0x18D789CA8]();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA5A0);
        v43 = OUTLINED_FUNCTION_2();
        *(_OWORD *)(v43 + 16) = v50;
        *(_QWORD *)(v43 + 64) = OUTLINED_FUNCTION_68(v43, MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v43 + 32) = v42;
        *(_QWORD *)(v43 + 40) = &v65;
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_79_4();
        sub_18CEC1594();
        OUTLINED_FUNCTION_122();
        OUTLINED_FUNCTION_68_6();

        OUTLINED_FUNCTION_158();
        OUTLINED_FUNCTION_17();
      }
      else
      {

        OUTLINED_FUNCTION_158();
      }
      v46 = *(id *)(v1 + 112);
      v47 = (void *)sub_18CEC175C();
      OUTLINED_FUNCTION_44();
      v48 = (void *)sub_18CEC17F8();
      OUTLINED_FUNCTION_43();
      objc_msgSend(v46, sel_setObject_forKey_, v47, v48);

    }
  }
  else
  {
    v44 = v5;
    v45 = (void *)sub_18CEC1360();

    swift_willThrow();
    OUTLINED_FUNCTION_81_4();

  }
}

uint64_t sub_18C983AEC()
{
  unint64_t v0;

  v0 = sub_18CEC1F18();
  OUTLINED_FUNCTION_96();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void sub_18C983B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  OUTLINED_FUNCTION_61_3();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v25 = OUTLINED_FUNCTION_142();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_2_24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_37_4();
  v30 = v28 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&a9 - v32;
  v34 = OUTLINED_FUNCTION_90_4();
  sub_18C873014(v34, v35, &qword_1ECEA9B40);
  OUTLINED_FUNCTION_100((uint64_t)v33, 1, v25);
  if (v36)
  {
    OUTLINED_FUNCTION_41_11();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v21, v33, v25);
    OUTLINED_FUNCTION_41_11();
    sub_18C8783D4(&qword_1EE056688, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    OUTLINED_FUNCTION_50_10();
    OUTLINED_FUNCTION_67_7();
  }
  v37 = OUTLINED_FUNCTION_21_18();
  if (*(_BYTE *)(v24 + *(int *)(v37 + 20) + 8) == 1)
  {
    OUTLINED_FUNCTION_41_11();
  }
  else
  {
    OUTLINED_FUNCTION_41_11();
    sub_18CEC2128();
  }
  sub_18C873014(v24 + *(int *)(v37 + 24), v30, &qword_1ECEA9B40);
  OUTLINED_FUNCTION_100(v30, 1, v25);
  if (v36)
  {
    OUTLINED_FUNCTION_41_11();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v21, v30, v25);
    OUTLINED_FUNCTION_41_11();
    sub_18C8783D4(&qword_1EE056688, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    OUTLINED_FUNCTION_50_10();
    OUTLINED_FUNCTION_67_7();
  }
  OUTLINED_FUNCTION_174();
}

BOOL sub_18C983CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_61_3();
  v65 = v0;
  v66 = v1;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_142();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_192();
  v61 = v9 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE0545D0);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_101();
  v64 = v12;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  OUTLINED_FUNCTION_118();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_101();
  v58 = v17;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v18);
  v59 = (uint64_t)&v57 - v19;
  OUTLINED_FUNCTION_15_10();
  MEMORY[0x1E0C80A78](v20);
  v60 = (uint64_t)&v57 - v21;
  OUTLINED_FUNCTION_15_10();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v57 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v57 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v57 - v29;
  v62 = v5;
  OUTLINED_FUNCTION_63(v5, (uint64_t)&v57 - v29);
  v63 = v3;
  OUTLINED_FUNCTION_63(v3, (uint64_t)v28);
  v31 = (uint64_t)&v15[*(int *)(v10 + 48)];
  OUTLINED_FUNCTION_63((uint64_t)v30, (uint64_t)v15);
  OUTLINED_FUNCTION_63((uint64_t)v28, v31);
  OUTLINED_FUNCTION_54((uint64_t)v15);
  if (v32)
  {
    sub_18C86752C((uint64_t)v28, &qword_1ECEA9B40);
    sub_18C86752C((uint64_t)v30, &qword_1ECEA9B40);
    OUTLINED_FUNCTION_54(v31);
    if (v32)
    {
      sub_18C86752C((uint64_t)v15, &qword_1ECEA9B40);
      goto LABEL_13;
    }
LABEL_9:
    v33 = (uint64_t)v15;
LABEL_10:
    sub_18C86752C(v33, &qword_1EE0545D0);
    return 0;
  }
  sub_18C873014((uint64_t)v15, (uint64_t)v25, &qword_1ECEA9B40);
  OUTLINED_FUNCTION_54(v31);
  if (v32)
  {
    OUTLINED_FUNCTION_28_10((uint64_t)v28);
    OUTLINED_FUNCTION_28_10((uint64_t)v30);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    goto LABEL_9;
  }
  v35 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v61, v31, v6);
  sub_18C8783D4((unint64_t *)&qword_1EE054508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v36 = sub_18CEC17E0();
  v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v37(v35, v6);
  OUTLINED_FUNCTION_52((uint64_t)v28);
  OUTLINED_FUNCTION_52((uint64_t)v30);
  v37((uint64_t)v25, v6);
  OUTLINED_FUNCTION_52((uint64_t)v15);
  if ((v36 & 1) == 0)
    return 0;
LABEL_13:
  v38 = OUTLINED_FUNCTION_21_18();
  v39 = v38;
  v40 = *(int *)(v38 + 20);
  v41 = v63;
  v42 = (_QWORD *)(v62 + v40);
  v43 = *(_BYTE *)(v62 + v40 + 8);
  v44 = (_QWORD *)(v63 + v40);
  v45 = *(unsigned __int8 *)(v63 + v40 + 8);
  if ((v43 & 1) != 0)
  {
    if (!v45)
      return 0;
  }
  else
  {
    if (*v42 != *v44)
      LOBYTE(v45) = 1;
    if ((v45 & 1) != 0)
      return 0;
  }
  v46 = v60;
  OUTLINED_FUNCTION_65_5(v62 + *(int *)(v38 + 24), v60);
  v47 = v59;
  OUTLINED_FUNCTION_65_5(v41 + *(int *)(v39 + 24), v59);
  v48 = v64;
  v49 = v64 + *(int *)(v10 + 48);
  OUTLINED_FUNCTION_65_5(v46, v64);
  OUTLINED_FUNCTION_65_5(v47, v49);
  OUTLINED_FUNCTION_54(v48);
  if (!v32)
  {
    sub_18C873014(v64, v58, &qword_1ECEA9B40);
    OUTLINED_FUNCTION_54(v49);
    if (!v50)
    {
      v53 = v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v61, v49, v6);
      sub_18C8783D4((unint64_t *)&qword_1EE054508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v54 = sub_18CEC17E0();
      v55 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v55(v53, v6);
      OUTLINED_FUNCTION_28_10(v47);
      OUTLINED_FUNCTION_28_10(v46);
      v56 = OUTLINED_FUNCTION_90_4();
      ((void (*)(uint64_t))v55)(v56);
      OUTLINED_FUNCTION_28_10(v64);
      return (v54 & 1) != 0;
    }
    sub_18C86752C(v47, &qword_1ECEA9B40);
    sub_18C86752C(v46, &qword_1ECEA9B40);
    v51 = OUTLINED_FUNCTION_90_4();
    v52(v51);
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_28_10(v47);
  OUTLINED_FUNCTION_28_10(v46);
  OUTLINED_FUNCTION_54(v49);
  if (!v32)
  {
LABEL_27:
    v33 = v64;
    goto LABEL_10;
  }
  sub_18C86752C(v64, &qword_1ECEA9B40);
  return 1;
}

void sub_18C984184(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9430);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_24();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C904B5C();
  sub_18CEC21B8();
  sub_18CEC14E0();
  sub_18C8783D4(qword_1ECEA94D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_42_9();
  if (!v1)
  {
    type metadata accessor for StoreReviewGatingLedger.StateData();
    sub_18CEC1FCC();
    OUTLINED_FUNCTION_42_9();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_76();
}

uint64_t sub_18C9842D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9[11];

  sub_18CEC211C();
  sub_18C983B34((uint64_t)v9, v0, v1, v2, v3, v4, v5, v6, v8, v9[0], v9[1], v9[2], v9[3], v9[4], v9[5], v9[6], v9[7], v9[8], v9[9],
    v9[10]);
  return sub_18CEC214C();
}

void sub_18C98430C(char *a1, char *a2)
{
  sub_18C91CA14(*a1, *a2);
}

void sub_18C984318()
{
  char *v0;

  sub_18C963ED4(*v0);
}

uint64_t sub_18C984320(uint64_t a1)
{
  char *v1;

  return sub_18C963F80(a1, *v1);
}

void sub_18C984328(uint64_t a1)
{
  char *v1;

  sub_18C9643CC(a1, *v1);
}

uint64_t sub_18C984330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C983AEC();
  *a1 = result;
  return result;
}

void sub_18C98435C(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;

  sub_18C867F98(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t sub_18C984384@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C983B30();
  *a1 = result;
  return result;
}

void sub_18C9843A8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_18C9843B4()
{
  sub_18C904B5C();
  return sub_18CEC21D0();
}

uint64_t sub_18C9843DC()
{
  sub_18C904B5C();
  return sub_18CEC21DC();
}

void sub_18C984404(_QWORD *a1)
{
  sub_18C984184(a1);
}

uint64_t sub_18C984420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9[11];

  sub_18CEC211C();
  sub_18C983B34((uint64_t)v9, v0, v1, v2, v3, v4, v5, v6, v8, v9[0], v9[1], v9[2], v9[3], v9[4], v9[5], v9[6], v9[7], v9[8], v9[9],
    v9[10]);
  return sub_18CEC214C();
}

unint64_t sub_18C984470()
{
  unint64_t result;

  result = qword_1EE056678;
  if (!qword_1EE056678)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE056678);
  }
  return result;
}

uint64_t *sub_18C9844C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_18CEC14E0();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v10;
    v13 = (char *)a2 + v10;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = (char *)a1 + v11;
    v15 = (char *)a2 + v11;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v14, v15, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_18C984614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_18CEC14E0();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *sub_18C9846AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = sub_18CEC14E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  }
  return a1;
}

char *sub_18C9847D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_18CEC14E0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v14;
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v15], 1, v6);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v6);
  if (!v18)
  {
    v20 = *(_QWORD *)(v6 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v16, v17, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
  return a1;
}

char *sub_18C984998(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = sub_18CEC14E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  }
  return a1;
}

char *sub_18C984AC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_18CEC14E0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = &a1[v12];
  v16 = &a2[v12];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v12], 1, v6);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v6);
  if (!v17)
  {
    v19 = *(_QWORD *)(v6 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v15, v16, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v6);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v15, v16, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
  return a1;
}

uint64_t sub_18C984C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_18C984CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEA9B40);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_18C984CF4()
{
  sub_18C8783D4(&qword_1EE056680, (uint64_t (*)(uint64_t))type metadata accessor for StoreReviewGatingLedger.StateData, (uint64_t)&unk_18CF0C688);
}

unint64_t sub_18C984D24()
{
  unint64_t result;

  result = qword_1EE056690;
  if (!qword_1EE056690)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C814, &type metadata for StoreReviewGatingLedger.StateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE056690);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_76_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_18C877F28(v1, v0);
}

id OUTLINED_FUNCTION_86_5@<X0>(__n128 *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  void *v3;

  *(__n128 *)(a2 - 256) = a3;
  a1[1] = a3;
  return v3;
}

uint64_t OUTLINED_FUNCTION_95_4()
{
  uint64_t v0;

  return sub_18C87D46C(*(_QWORD *)(v0 - 336));
}

void OUTLINED_FUNCTION_100_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_18C86752C(v2 - 176, a2);
}

uint64_t sub_18C984DB0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18AppleMediaServices14ThreadSafeBool_lock);
  v2 = (os_unfair_lock_s *)(v1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v3 = *(unsigned __int8 *)(v1 + 16);
  os_unfair_lock_unlock(v2);
  return v3;
}

id sub_18C984DF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThreadSafeBool();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18C984E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v6 = (void *)objc_opt_self();
  v7 = OUTLINED_FUNCTION_4_26(v6, sel_dataWithJSONObject_options_error_);
  OUTLINED_FUNCTION_12_20((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, 0);
  if (a1)
  {
    OUTLINED_FUNCTION_14_26();
    OUTLINED_FUNCTION_59_5();
    OUTLINED_FUNCTION_9_23();
    OUTLINED_FUNCTION_92_1();
    OUTLINED_FUNCTION_11_26();
    sub_18C9855B0();
    OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_5_27();
    result = swift_release();
    if (!v2)
    {
      *(_OWORD *)a2 = v16;
      *(_BYTE *)(a2 + 16) = v17;
      *(_OWORD *)(a2 + 24) = v18;
      *(_OWORD *)(a2 + 40) = v19;
      *(_OWORD *)(a2 + 56) = v20;
      *(_QWORD *)(a2 + 72) = v21;
    }
  }
  else
  {
    OUTLINED_FUNCTION_13_20();

    return swift_willThrow();
  }
  return result;
}

id URLSentry.__allocating_init(bag:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return URLSentry.init(bag:)(a1);
}

unint64_t sub_18C984F78()
{
  unint64_t result;

  result = qword_1EE054430;
  if (!qword_1EE054430)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE054430);
  }
  return result;
}

uint64_t sub_18C984FB4()
{
  return swift_deallocObject();
}

id URLSentry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void URLSentry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id URLSentry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for URLSentry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for URLSentry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLSentry.__allocating_init(bag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of URLSentry.isTrusted(url:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18C9850D4;
  return v7(a1);
}

uint64_t sub_18C9850D4(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_0();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_18C985108()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_18C98513C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_18C9272E8;
  return v6();
}

uint64_t sub_18C985194()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_18C9272E8;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))&asc_1EE0566E0[*(int *)asc_1EE0566E0])(v2, v3, v4);
}

uint64_t sub_18C98520C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_18C9272E8;
  return v7();
}

uint64_t objectdestroy_9Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C985290(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_18C9272E8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE0566F0 + dword_1EE0566F0))(a1, v4, v5, v6);
}

uint64_t sub_18C985314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_18CEC1AA4();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_18C869BA0(a1);
  }
  else
  {
    sub_18CEC1A98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18CEC19FC();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_18C985450(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_18C9854B4;
  return v6(a1);
}

uint64_t sub_18C9854B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_18C9854DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18C985500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18C91C3F4;
  return ((uint64_t (*)(uint64_t, int *))&aP_3[*(int *)aP_3])(a1, v4);
}

unint64_t sub_18C985570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECEA93D0;
  if (!qword_1ECEA93D0)
  {
    v1 = type metadata accessor for StoreReviewGatingLedger.StateData();
    result = MEMORY[0x18D78AB48](&unk_18CF0C6F0, v1);
    atomic_store(result, (unint64_t *)&qword_1ECEA93D0);
  }
  return result;
}

unint64_t sub_18C9855B0()
{
  unint64_t result;

  result = qword_1EE056718;
  if (!qword_1EE056718)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0A0E8, &type metadata for CampaignAttributorBag);
    atomic_store(result, (unint64_t *)&qword_1EE056718);
  }
  return result;
}

uint64_t sub_18C9855EC()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_18CEC1F18();
  OUTLINED_FUNCTION_96();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_18C98563C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_18C97ED80(a1, a2);
  swift_bridgeObjectRelease();
  if (!a3)
    return sub_18CEC2134();
  sub_18CEC2134();
  swift_bridgeObjectRetain();
  sub_18C97ED80(a1, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18C9856C0(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  if ((sub_18C97EB4C(a1, a3) & 1) != 0)
  {
    if (a2)
    {
      if (a4 && (sub_18C97EB4C(a2, a4) & 1) != 0)
        return 1;
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_18C985714(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE056728);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18C8698EC();
  sub_18CEC21B8();
  v14 = a2;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECEAA330);
  sub_18C86C39C(&qword_1EE055AB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  OUTLINED_FUNCTION_2_33();
  sub_18CEC2008();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    OUTLINED_FUNCTION_2_33();
    sub_18CEC1FD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_18C98584C(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_18CEC211C();
  sub_18C98563C((uint64_t)v5, a1, a2);
  return sub_18CEC214C();
}

void sub_18C985898(char *a1, char *a2)
{
  sub_18C91CE54(*a1, *a2);
}

void sub_18C9858A4()
{
  sub_18C963EE0();
}

uint64_t sub_18C9858AC()
{
  return sub_18C96422C();
}

void sub_18C9858B4()
{
  sub_18C964290();
}

uint64_t sub_18C9858BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C9855EC();
  *a1 = result;
  return result;
}

uint64_t sub_18C9858E8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18C865B24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18C985910@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18C985638();
  *a1 = result;
  return result;
}

void sub_18C985934(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E251B5E0;
}

uint64_t sub_18C985944()
{
  sub_18C8698EC();
  return sub_18CEC21D0();
}

uint64_t sub_18C98596C()
{
  sub_18C8698EC();
  return sub_18CEC21DC();
}

uint64_t sub_18C985994(_QWORD *a1)
{
  uint64_t *v1;

  return sub_18C985714(a1, *v1, v1[1]);
}

uint64_t sub_18C9859AC()
{
  uint64_t *v0;

  return sub_18C98584C(*v0, v0[1]);
}

uint64_t sub_18C9859B4(uint64_t a1)
{
  uint64_t *v1;

  return sub_18C98563C(a1, *v1, v1[1]);
}

uint64_t sub_18C9859BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_18CEC211C();
  sub_18C98563C((uint64_t)v4, v1, v2);
  return sub_18CEC214C();
}

uint64_t sub_18C985A00(_QWORD **a1, _QWORD **a2)
{
  return sub_18C9856C0(*a1, a1[1], *a2, a2[1]);
}

uint64_t destroy for URLSentryBag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18AppleMediaServices12URLSentryBagVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for URLSentryBag(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for URLSentryBag(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for URLSentryBag()
{
  return &type metadata for URLSentryBag;
}

unint64_t sub_18C985B20()
{
  unint64_t result;

  result = qword_1EE056720;
  if (!qword_1EE056720)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0C900, &type metadata for URLSentryBag);
    atomic_store(result, (unint64_t *)&qword_1EE056720);
  }
  return result;
}

unint64_t sub_18C985B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE056730;
  if (!qword_1EE056730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECEA9F68);
    result = MEMORY[0x18D78AB48](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE056730);
  }
  return result;
}

unint64_t sub_18C985BA8()
{
  unint64_t result;

  result = qword_1ECEA95D8;
  if (!qword_1ECEA95D8)
  {
    result = MEMORY[0x18D78AB48](&unk_18CF0CAD4, &type metadata for URLSentryBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECEA95D8);
  }
  return result;
}

double AMSCore::ISchedulingProvider::makeDefault@<D0>(uint64_t a1@<X8>)
{
  AMSCore::AppleSchedulingProvider *v3;
  double result;
  __int128 v5;

  v3 = (AMSCore::AppleSchedulingProvider *)operator new();
  AMSCore::AppleSchedulingProvider::AppleSchedulingProvider(v3);
  std::shared_ptr<AMSCore::ISchedulingProvider>::shared_ptr[abi:fe180100]<AMSCore::AppleSchedulingProvider,void>(&v5, (uint64_t)v3);
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 72) = 1;
  return result;
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

AMSCore::AppleSchedulingProvider *AMSCore::AppleSchedulingProvider::AppleSchedulingProvider(AMSCore::AppleSchedulingProvider *this)
{
  NSObject *v2;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E2520F80;
  *((_QWORD *)this + 3) = objc_alloc_init(MEMORY[0x1E0CB3828]);
  dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue();
  *((_QWORD *)this + 4) = dispatch_queue_create("com.apple.MediaServices.AppleSchedulingProvider.delayed", v2);

  *((_BYTE *)this + 40) = 0;
  objc_msgSend(*((id *)this + 3), "setName:", CFSTR("com.AppleMediaServices.AppleSchedulingProvider"));
  return this;
}

uint64_t AMSCore::AppleSchedulingProvider::shutdown(id *this)
{
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(this + 5);
  do
    __ldaxr(v1);
  while (__stlxr(1u, v1));
  return objc_msgSend(this[3], "waitUntilAllOperationsAreFinished");
}

void AMSCore::AppleSchedulingProvider::~AppleSchedulingProvider(id *this)
{
  unsigned __int8 *v2;
  std::__shared_weak_count *v3;

  v2 = (unsigned __int8 *)(this + 5);
  do
    __ldaxr(v2);
  while (__stlxr(1u, v2));
  objc_msgSend(this[3], "waitUntilAllOperationsAreFinished");

  v3 = (std::__shared_weak_count *)this[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

{
  unsigned __int8 *v2;
  std::__shared_weak_count *v3;

  v2 = (unsigned __int8 *)(this + 5);
  do
    __ldaxr(v2);
  while (__stlxr(1u, v2));
  objc_msgSend(this[3], "waitUntilAllOperationsAreFinished");

  v3 = (std::__shared_weak_count *)this[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t AMSCore::AppleSchedulingProvider::submitTask@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int v13;
  std::runtime_error v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _QWORD v20[4];
  _BYTE v21[24];
  _BYTE *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = atomic_load((unsigned __int8 *)(a1 + 40));
  if ((v4 & 1) != 0)
  {
    v13 = 2;
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[43]>(&v13, "Task submitted after shutdown has started.", (uint64_t)&v14);
    std::runtime_error::runtime_error((std::runtime_error *)a3, &v14);
    *(_OWORD *)(a3 + 16) = v15;
    *(_QWORD *)a3 = off_1E2521330;
    v8 = v17;
    *(_QWORD *)(a3 + 32) = v16;
    *(_QWORD *)(a3 + 40) = v8;
    v9 = a3 + 40;
    v10 = v18;
    *(_QWORD *)(a3 + 48) = v18;
    if (v10)
    {
      *(_QWORD *)(v8 + 16) = v9;
      v16 = &v17;
      v17 = 0;
      v18 = 0;
      v8 = 0;
    }
    else
    {
      *(_QWORD *)(a3 + 32) = v9;
    }
    *(_OWORD *)(a3 + 56) = v19;
    v19 = 0uLL;
    *(_BYTE *)(a3 + 72) = 0;
    v14.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v16, (unsigned int *)v8);
    return MEMORY[0x18D7898AC](&v14);
  }
  else
  {
    v5 = *(void **)(a1 + 24);
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 3321888768;
    v20[2] = ___ZN7AMSCore23AppleSchedulingProvider10submitTaskENSt3__18functionIFvvEEE_block_invoke;
    v20[3] = &__block_descriptor_64_ea8_32c27_ZTSNSt3__18functionIFvvEEE_e5_v8__0l;
    v6 = v21;
    v7 = (_QWORD *)a2[3];
    if (v7)
    {
      if (v7 == a2)
      {
        v22 = v21;
        (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, v21);
      }
      else
      {
        v22 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v7 + 16))(v7);
      }
    }
    else
    {
      v22 = 0;
    }
    result = objc_msgSend(v5, "addOperationWithBlock:", v20);
    *(_BYTE *)(a3 + 72) = 1;
    if (v22 == v21)
    {
      v12 = 4;
    }
    else
    {
      if (!v22)
        return result;
      v12 = 5;
      v6 = v22;
    }
    return (*(uint64_t (**)(_QWORD *))(*v6 + 8 * v12))(v6);
  }
}

void sub_18C985F98(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 56);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      _Unwind_Resume(exception_object);
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 56);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[43]>@<X0>(unsigned int *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t error_code;
  const std::error_category *v6;
  const std::error_category *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::system_error v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  std::string __what_arg;
  std::error_code v18;

  error_code = AMSCore::make_error_code(*a1);
  v7 = v6;
  AMSCore::StringUtils::join<char [43]>(a2, &__what_arg);
  *(_QWORD *)&v18.__val_ = error_code;
  v18.__cat_ = v7;
  std::system_error::system_error(&v12, v18, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  v14 = 0;
  v15 = 0;
  v12.__vftable = (std::system_error_vtbl *)off_1E2521330;
  v13 = &v14;
  v16 = 0uLL;
  std::runtime_error::runtime_error((std::runtime_error *)a3, &v12);
  *(std::error_code *)(a3 + 16) = v12.__ec_;
  *(_QWORD *)a3 = off_1E2521330;
  v8 = v14;
  *(_QWORD *)(a3 + 32) = v13;
  *(_QWORD *)(a3 + 40) = v8;
  v9 = a3 + 40;
  v10 = v15;
  *(_QWORD *)(a3 + 48) = v15;
  if (v10)
  {
    *(_QWORD *)(v8 + 16) = v9;
    v8 = 0;
    v13 = &v14;
    v14 = 0;
    v15 = 0;
  }
  else
  {
    *(_QWORD *)(a3 + 32) = v9;
  }
  *(_OWORD *)(a3 + 56) = v16;
  v16 = 0uLL;
  v12.__vftable = (std::system_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v13, (unsigned int *)v8);
  return MEMORY[0x18D7898AC](&v12);
}

void sub_18C9860EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN7AMSCore23AppleSchedulingProvider10submitTaskENSt3__18functionIFvvEEE_block_invoke(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 56);
  if (!v1)
    std::__throw_bad_function_call[abi:fe180100]();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t __copy_helper_block_ea8_32c27_ZTSNSt3__18functionIFvvEEE(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 56);
  if (result)
  {
    if (result == a2 + 32)
    {
      *(_QWORD *)(a1 + 56) = a1 + 32;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 56) + 24))(*(_QWORD *)(a2 + 56), a1 + 32);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 56) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 56) = 0;
  }
  return result;
}

_QWORD *__destroy_helper_block_ea8_32c27_ZTSNSt3__18functionIFvvEEE(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  result = *(_QWORD **)(a1 + 56);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void AMSCore::AppleSchedulingProvider::submitDelayed(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_weak_owners;
  unint64_t v11;
  dispatch_time_t v12;
  NSObject *v13;
  _QWORD *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  std::runtime_error v21;
  __int128 v22;
  void (*v23)(uint64_t);
  unsigned int *v24;
  uint64_t v25;
  std::__shared_weak_count *v26[2];
  _QWORD block[5];
  _BYTE v28[24];
  _BYTE *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = atomic_load((unsigned __int8 *)(a1 + 40));
  if ((v5 & 1) == 0)
  {
    *((_QWORD *)&v22 + 1) = __Block_byref_object_copy_;
    v23 = __Block_byref_object_dispose_;
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(std::__shared_weak_count **)(a1 + 16);
    v24 = (unsigned int *)&unk_18CFC4DAA;
    v25 = v9;
    v21.__vftable = 0;
    v21.__imp_.__imp_ = (const char *)&v21;
    *(_QWORD *)&v22 = 0x4012000000;
    v26[0] = v8;
    if (v8)
    {
      p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
      do
        v11 = __ldxr(p_shared_weak_owners);
      while (__stxr(v11 + 1, p_shared_weak_owners));
    }
    v12 = dispatch_time(0, 1000000 * a2);
    v13 = *(NSObject **)(a1 + 32);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3321888768;
    block[2] = ___ZN7AMSCore23AppleSchedulingProvider13submitDelayedENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEENS1_8functionIFvvEEE_block_invoke;
    block[3] = &__block_descriptor_72_ea8_32r40c27_ZTSNSt3__18functionIFvvEEE_e5_v8__0l;
    block[4] = &v21;
    v14 = v28;
    v15 = a3[3];
    if (v15)
    {
      if ((_QWORD *)v15 == a3)
      {
        v29 = v28;
        (*(void (**)(_QWORD *, _BYTE *))(*a3 + 24))(a3, v28);
LABEL_14:
        dispatch_after(v12, v13, block);
        *(_BYTE *)(a4 + 72) = 1;
        if (v29 == v28)
        {
          v19 = 4;
        }
        else
        {
          if (!v29)
            goto LABEL_19;
          v19 = 5;
          v14 = v29;
        }
        (*(void (**)(_QWORD *))(*v14 + 8 * v19))(v14);
LABEL_19:
        _Block_object_dispose(&v21, 8);
        if (v26[0])
          std::__shared_weak_count::__release_weak(v26[0]);
        return;
      }
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
    }
    v29 = (_BYTE *)v15;
    goto LABEL_14;
  }
  v20 = 2;
  AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[43]>(&v20, "Task submitted after shutdown has started.", (uint64_t)&v21);
  std::runtime_error::runtime_error((std::runtime_error *)a4, &v21);
  *(_OWORD *)(a4 + 16) = v22;
  *(_QWORD *)a4 = off_1E2521330;
  v16 = v24;
  *(_QWORD *)(a4 + 32) = v23;
  *(_QWORD *)(a4 + 40) = v16;
  v17 = a4 + 40;
  v18 = v25;
  *(_QWORD *)(a4 + 48) = v25;
  if (v18)
  {
    *((_QWORD *)v16 + 2) = v17;
    v23 = (void (*)(uint64_t))&v24;
    v24 = 0;
    v25 = 0;
    v16 = 0;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = v17;
  }
  *(_OWORD *)(a4 + 56) = *(_OWORD *)v26;
  v26[0] = 0;
  v26[1] = 0;
  *(_BYTE *)(a4 + 72) = 0;
  v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v23, v16);
  MEMORY[0x18D7898AC](&v21);
}

void sub_18C986434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  _Block_object_dispose(&a10, 8);
  if (a17)
  {
    std::__shared_weak_count::__release_weak(a17);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void ___ZN7AMSCore23AppleSchedulingProvider13submitDelayedENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEENS1_8functionIFvvEEE_block_invoke(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  _QWORD v21[5];
  std::__shared_weak_count *v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(std::__shared_weak_count **)(v2 + 56);
  if (v3)
  {
    v4 = std::__shared_weak_count::lock(v3);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v2 + 48);
      v19 = v6;
      v20 = v4;
      if (!v6)
        goto LABEL_24;
      v7 = atomic_load((unsigned __int8 *)(v6 + 40));
      if ((v7 & 1) != 0)
      {
LABEL_23:
        v5 = v20;
LABEL_24:
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        return;
      }
      v8 = *(void **)(v19 + 24);
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3321888768;
      v21[2] = ___ZN7AMSCore23AppleSchedulingProvider13submitDelayedENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEENS1_8functionIFvvEEE_block_invoke_2;
      v21[3] = &__block_descriptor_80_ea8_32c61_ZTSNSt3__110shared_ptrIN7AMSCore23AppleSchedulingProviderEEE48c27_ZTSNSt3__18functionIFvvEEE_e5_v8__0l;
      v21[4] = v19;
      v22 = v4;
      v9 = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
      v11 = v23;
      v12 = *(_QWORD *)(a1 + 64);
      if (v12)
      {
        if (v12 == a1 + 40)
        {
          v24 = v23;
          (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v12 + 24))(v12, v23);
LABEL_13:
          objc_msgSend(v8, "addOperationWithBlock:", v21);
          if (v24 == v23)
          {
            v13 = 4;
          }
          else
          {
            if (!v24)
            {
LABEL_18:
              v14 = v22;
              if (v22)
              {
                v15 = (unint64_t *)&v22->__shared_owners_;
                do
                  v16 = __ldaxr(v15);
                while (__stlxr(v16 - 1, v15));
                if (!v16)
                {
                  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                  std::__shared_weak_count::__release_weak(v14);
                }
              }
              goto LABEL_23;
            }
            v13 = 5;
            v11 = v24;
          }
          (*(void (**)(_QWORD *))(*v11 + 8 * v13))(v11);
          goto LABEL_18;
        }
        v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
      }
      v24 = (_BYTE *)v12;
      goto LABEL_13;
    }
  }
}

void sub_18C986630(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](v2 + 32);
  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t ___ZN7AMSCore23AppleSchedulingProvider13submitDelayedENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEENS1_8functionIFvvEEE_block_invoke_2(uint64_t result)
{
  unsigned __int8 v1;
  uint64_t v2;

  v1 = atomic_load((unsigned __int8 *)(*(_QWORD *)(result + 32) + 40));
  if ((v1 & 1) == 0)
  {
    v2 = *(_QWORD *)(result + 72);
    if (!v2)
      std::__throw_bad_function_call[abi:fe180100]();
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2);
  }
  return result;
}

uint64_t __copy_helper_block_ea8_32c61_ZTSNSt3__110shared_ptrIN7AMSCore23AppleSchedulingProviderEEE48c27_ZTSNSt3__18functionIFvvEEE(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t result;

  v3 = a2[5];
  a1[4] = a2[4];
  a1[5] = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  result = a2[9];
  if (!result)
    goto LABEL_7;
  if ((_QWORD *)result != a2 + 6)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_7:
    a1[9] = result;
    return result;
  }
  a1[9] = a1 + 6;
  return (*(uint64_t (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[9] + 24))(a2[9], a1 + 6);
}

void sub_18C986744(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void __destroy_helper_block_ea8_32c61_ZTSNSt3__110shared_ptrIN7AMSCore23AppleSchedulingProviderEEE48c27_ZTSNSt3__18functionIFvvEEE(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = (_QWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 72);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

uint64_t __copy_helper_block_ea8_32r40c27_ZTSNSt3__18functionIFvvEEE(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 8);
  result = *(_QWORD *)(a2 + 64);
  if (!result)
    goto LABEL_4;
  if (result != a2 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_4:
    *(_QWORD *)(a1 + 64) = result;
    return result;
  }
  *(_QWORD *)(a1 + 64) = a1 + 40;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 64) + 24))(*(_QWORD *)(a2 + 64));
}

void sub_18C9868B8(_Unwind_Exception *a1)
{
  const void **v1;

  _Block_object_dispose(*v1, 8);
  _Unwind_Resume(a1);
}

void __destroy_helper_block_ea8_32r40c27_ZTSNSt3__18functionIFvvEEE(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 40);
  v3 = *(_QWORD **)(a1 + 64);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  _Block_object_dispose(*(const void **)(a1 + 32), 8);
}

void AMSCore::Error::~Error(AMSCore::Error *this)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(_QWORD *)this = off_1E2521330;
  v2 = (std::__shared_weak_count *)*((_QWORD *)this + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)this + 32, *((unsigned int **)this + 5));
  JUMPOUT(0x18D7898ACLL);
}

{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *(_QWORD *)this = off_1E2521330;
  v2 = (std::__shared_weak_count *)*((_QWORD *)this + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)this + 32, *((unsigned int **)this + 5));
  MEMORY[0x18D7898AC](this);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t AMSCore::StringUtils::join<char [43]>@<X0>(const char *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;
  uint64_t v10;
  size_t v11;
  uint64_t v13;
  _QWORD v14[8];
  void *__p[2];
  __int128 v16;
  int v17;
  uint64_t v18[19];

  v4 = MEMORY[0x1E0DE4FE0];
  v5 = MEMORY[0x1E0DE4FE0] + 64;
  v6 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v7 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v8 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v18[0] = MEMORY[0x1E0DE4FE0] + 64;
  v13 = v7;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v7 - 24)) = v8;
  v9 = (std::ios_base *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24));
  std::ios_base::init(v9, v14);
  v9[1].__vftable = 0;
  v9[1].__fmtflags_ = -1;
  v13 = v4 + 24;
  v18[0] = v5;
  std::streambuf::basic_streambuf();
  v10 = MEMORY[0x1E0DE4FB8];
  v14[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v16 = 0u;
  v17 = 16;
  v11 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v13, (uint64_t)a1, v11);
  std::stringbuf::str[abi:fe180100]((uint64_t)v14, a2);
  v13 = *v6;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24)) = v6[3];
  v14[0] = v10 + 16;
  if (SBYTE7(v16) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v18);
}

void sub_18C986AD8(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

_QWORD *std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  MEMORY[0x18D7898C4](v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, MEMORY[0x1E0DE4A90]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!std::__pad_and_output[abi:fe180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  MEMORY[0x18D7898D0](v13);
  return a1;
}

void sub_18C986C90(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  MEMORY[0x18D7898D0](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x18C986C70);
}

void sub_18C986CD8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::__pad_and_output[abi:fe180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  size_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *__b[2];
  int64_t v22;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if ((uint64_t)v12 >= 1)
    {
      if (v12 >= 0x7FFFFFFFFFFFFFF8)
        std::string::__throw_length_error[abi:fe180100]();
      if (v12 >= 0x17)
      {
        v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v12 | 7) != 0x17)
          v14 = v12 | 7;
        v15 = v14 + 1;
        v13 = (void **)operator new(v14 + 1);
        __b[1] = (void *)v12;
        v22 = v15 | 0x8000000000000000;
        __b[0] = v13;
      }
      else
      {
        HIBYTE(v22) = v12;
        v13 = __b;
      }
      memset(v13, __c, v12);
      *((_BYTE *)v13 + v12) = 0;
      if (v22 >= 0)
        v16 = __b;
      else
        v16 = (void **)__b[0];
      v17 = (*(uint64_t (**)(uint64_t, void **, size_t))(*(_QWORD *)v6 + 96))(v6, v16, v12);
      v18 = v17;
      if (SHIBYTE(v22) < 0)
      {
        operator delete(__b[0]);
        if (v18 != v12)
          return 0;
      }
      else if (v17 != v12)
      {
        return 0;
      }
    }
    v19 = a4 - a3;
    if (v19 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v19) == v19)
    {
      *(_QWORD *)(a5 + 24) = 0;
      return v6;
    }
    return 0;
  }
  return v6;
}

void sub_18C986E74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::string::__throw_length_error[abi:fe180100]()
{
  std::__throw_length_error[abi:fe180100]("basic_string");
}

void std::__throw_length_error[abi:fe180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:fe180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E251A538, MEMORY[0x1E0DE42D0]);
}

void sub_18C986EE0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:fe180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

std::string *std::stringbuf::str[abi:fe180100]@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v2;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t size;
  std::string *v12;
  _BYTE *v14;

  v5 = *(_DWORD *)(a1 + 96);
  if ((v5 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(a1 + 88);
    v8 = *(_QWORD *)(a1 + 48);
    if (v7 < v8)
    {
      *(_QWORD *)(a1 + 88) = v8;
      v7 = v8;
    }
    v9 = *(_QWORD *)(a1 + 40);
    v6 = v7 - v9;
    if (v6 < 0)
      goto LABEL_20;
  }
  else
  {
    if ((v5 & 8) == 0)
    {
      v6 = 0;
      goto LABEL_11;
    }
    v9 = *(_QWORD *)(a1 + 16);
    v6 = *(_QWORD *)(a1 + 32) - v9;
    if (v6 < 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  if (v6)
  {
    v10 = (_QWORD *)(a1 + 64);
    if (*(char *)(a1 + 87) < 0)
      v10 = (_QWORD *)*v10;
    v2 = v9 - (_QWORD)v10;
    goto LABEL_12;
  }
LABEL_11:
  v2 = 0;
LABEL_12:
  a2->__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 80);
  *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  v6 += v2;
  if ((SHIBYTE(a2->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    if (v6 <= size)
    {
      *((_BYTE *)&a2->__r_.__value_.__s + 23) = v6 & 0x7F;
      v12 = a2;
      goto LABEL_22;
    }
LABEL_16:
    std::string::append(a2, v6 - size, 0);
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_23;
    goto LABEL_17;
  }
  size = a2->__r_.__value_.__l.__size_;
  if (size < v6)
    goto LABEL_16;
LABEL_21:
  v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__l.__size_ = v6;
LABEL_22:
  v12->__r_.__value_.__s.__data_[v6] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_23:
    if (v2 == -1)
    {
      v14 = (_BYTE *)a2->__r_.__value_.__r.__words[0];
      a2->__r_.__value_.__l.__size_ = 0;
      *v14 = 0;
      return std::stringbuf::__init_buf_ptrs[abi:fe180100](a1);
    }
    goto LABEL_24;
  }
LABEL_17:
  if (v2 != -1)
  {
LABEL_24:
    std::string::__erase_external_with_move(a2, 0, v2);
    return std::stringbuf::__init_buf_ptrs[abi:fe180100](a1);
  }
  *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  a2->__r_.__value_.__s.__data_[0] = 0;
  return std::stringbuf::__init_buf_ptrs[abi:fe180100](a1);
}

void sub_18C98706C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *std::stringbuf::__init_buf_ptrs[abi:fe180100](uint64_t a1)
{
  std::string *result;
  unint64_t v3;
  std::string *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(a1 + 88) = 0;
  result = (std::string *)(a1 + 64);
  v3 = *(unsigned __int8 *)(a1 + 87);
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    v4 = result;
    v5 = *(unsigned __int8 *)(a1 + 87);
    v6 = *(_DWORD *)(a1 + 96);
    if ((v6 & 8) == 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v4 = *(std::string **)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
LABEL_3:
    *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = (char *)v4 + v5;
  }
LABEL_4:
  if ((v6 & 0x10) == 0)
    return result;
  *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
  if ((v3 & 0x80) != 0)
  {
    v3 = *(_QWORD *)(a1 + 72);
    v7 = (*(_QWORD *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v3 >= v7)
    {
      result = *(std::string **)(a1 + 64);
      *(_QWORD *)(a1 + 72) = v7;
LABEL_14:
      result->__r_.__value_.__s.__data_[v7] = 0;
      LODWORD(v8) = *(char *)(a1 + 87);
      if ((v8 & 0x80000000) != 0)
        goto LABEL_15;
LABEL_12:
      v8 = v8;
      goto LABEL_16;
    }
  }
  else
  {
    v7 = 22;
    if (v3 > 0x15)
    {
      *(_BYTE *)(a1 + 87) = 22;
      goto LABEL_14;
    }
  }
  result = std::string::append(result, v7 - v3, 0);
  LODWORD(v8) = *(char *)(a1 + 87);
  if ((v8 & 0x80000000) == 0)
    goto LABEL_12;
LABEL_15:
  v8 = *(_QWORD *)(a1 + 72);
LABEL_16:
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = (char *)v4 + v8;
  if ((*(_BYTE *)(a1 + 96) & 3) != 0)
  {
    if (v5 >> 31)
    {
      v9 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
      v10 = 0x7FFFFFFF * ((v9 + ((v5 - 0x80000000 - v9) >> 1)) >> 30);
      v4 = (std::string *)((char *)v4 + v10 + 0x7FFFFFFF);
      v5 = v5 - v10 - 0x7FFFFFFF;
      *(_QWORD *)(a1 + 48) = v4;
    }
    if (v5)
      *(_QWORD *)(a1 + 48) = (char *)v4 + v5;
  }
  return result;
}

void std::string::__erase_external_with_move(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  int v4;
  std::string::size_type size;
  std::string *v6;
  std::string::size_type v7;
  std::string::size_type v8;

  if (__n)
  {
    v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if (v4 < 0)
    {
      v6 = (std::string *)this->__r_.__value_.__r.__words[0];
      size = this->__r_.__value_.__l.__size_;
    }
    else
    {
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      v6 = this;
    }
    if (size - __pos >= __n)
      v7 = __n;
    else
      v7 = size - __pos;
    if (size - __pos > __n)
    {
      memmove((char *)v6 + __pos, (char *)v6 + __pos + v7, size - __pos - v7);
      LOBYTE(v4) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    }
    v8 = size - v7;
    if ((v4 & 0x80) != 0)
      this->__r_.__value_.__l.__size_ = v8;
    else
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v8 & 0x7F;
    v6->__r_.__value_.__s.__data_[v8] = 0;
  }
}

void std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  char v5;

  if (a2)
  {
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(a1, *(_QWORD *)a2);
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(a1, *((_QWORD *)a2 + 1));
    v4 = a2[20];
    if ((_DWORD)v4 != -1)
      ((void (*)(char *, unsigned int *))off_1E252BD40[v4])(&v5, a2 + 14);
    a2[20] = -1;
    if (*((char *)a2 + 55) < 0)
      operator delete(*((void **)a2 + 4));
    operator delete(a2);
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5EEE10__dispatchB8fe180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEELNS0_6_TraitE1EE9__destroyB8fe180100EvEUlRT_E_JRNS0_6__baseILS12_1EJS8_bdxySE_SG_SO_SX_S10_EEEEEEDcS14_DpT0_(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6EEE10__dispatchB8fe180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEELNS0_6_TraitE1EE9__destroyB8fe180100EvEUlRT_E_JRNS0_6__baseILS12_1EJS8_bdxySE_SG_SO_SX_S10_EEEEEEDcS14_DpT0_(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm8EEE10__dispatchB8fe180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEELNS0_6_TraitE1EE9__destroyB8fe180100EvEUlRT_E_JRNS0_6__baseILS12_1EJS8_bdxySE_SG_SO_SX_S10_EEEEEEDcS14_DpT0_(uint64_t a1, uint64_t a2)
{
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(a2, *(unsigned int **)(a2 + 8));
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm9EEE10__dispatchB8fe180100IOZNS0_6__dtorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEELNS0_6_TraitE1EE9__destroyB8fe180100EvEUlRT_E_JRNS0_6__baseILS12_1EJS8_bdxySE_SG_SO_SX_S10_EEEEEEDcS14_DpT0_(uint64_t a1, void **a2)
{
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  char v8;

  v2 = (char *)*a2;
  if (*a2)
  {
    v4 = (char *)a2[1];
    v5 = *a2;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 32;
        v7 = *((unsigned int *)v4 - 2);
        if ((_DWORD)v7 != -1)
          ((void (*)(char *, char *))off_1E252BD40[v7])(&v8, v4 - 32);
        *((_DWORD *)v4 - 2) = -1;
        v4 -= 32;
      }
      while (v6 != v2);
      v5 = *a2;
    }
    a2[1] = v2;
    operator delete(v5);
  }
}

_QWORD *std::shared_ptr<AMSCore::ISchedulingProvider>::shared_ptr[abi:fe180100]<AMSCore::AppleSchedulingProvider,void>(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  *a1 = a2;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_1E2523260;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)a2;
  a1[1] = v4;
  if (a2)
  {
    v6 = *(std::__shared_weak_count **)(a2 + 16);
    if (v6)
    {
      if (v6->__shared_owners_ != -1)
        return a1;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
      do
        v9 = __ldxr(p_shared_weak_owners);
      while (__stxr(v9 + 1, p_shared_weak_owners));
      *(_QWORD *)(a2 + 8) = a2;
      *(_QWORD *)(a2 + 16) = v4;
      std::__shared_weak_count::__release_weak(v6);
    }
    else
    {
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      v11 = (unint64_t *)&v4->__shared_weak_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      *(_QWORD *)(a2 + 8) = a2;
      *(_QWORD *)(a2 + 16) = v4;
    }
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_18C987534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<AMSCore::AppleSchedulingProvider>::~unique_ptr[abi:fe180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *std::unique_ptr<AMSCore::AppleSchedulingProvider>::~unique_ptr[abi:fe180100](uint64_t *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  std::__shared_weak_count *v4;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = (unsigned __int8 *)(v2 + 40);
    do
      __ldaxr(v3);
    while (__stlxr(1u, v3));
    objc_msgSend(*(id *)(v2 + 24), "waitUntilAllOperationsAreFinished");

    v4 = *(std::__shared_weak_count **)(v2 + 16);
    if (v4)
      std::__shared_weak_count::__release_weak(v4);
    MEMORY[0x18D789BDC](v2, 0x10A1C405B34B61CLL);
  }
  return a1;
}

void std::__shared_ptr_pointer<AMSCore::AppleSchedulingProvider *,std::shared_ptr<AMSCore::ISchedulingProvider>::__shared_ptr_default_delete<AMSCore::ISchedulingProvider,AMSCore::AppleSchedulingProvider>,std::allocator<AMSCore::AppleSchedulingProvider>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t std::__shared_ptr_pointer<AMSCore::AppleSchedulingProvider *,std::shared_ptr<AMSCore::ISchedulingProvider>::__shared_ptr_default_delete<AMSCore::ISchedulingProvider,AMSCore::AppleSchedulingProvider>,std::allocator<AMSCore::AppleSchedulingProvider>>::__on_zero_shared(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 *v2;
  std::__shared_weak_count *v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = (unsigned __int8 *)(v1 + 40);
    do
      __ldaxr(v2);
    while (__stlxr(1u, v2));
    objc_msgSend(*(id *)(v1 + 24), "waitUntilAllOperationsAreFinished");

    v3 = *(std::__shared_weak_count **)(v1 + 16);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
    JUMPOUT(0x18D789BDCLL);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<AMSCore::AppleSchedulingProvider *,std::shared_ptr<AMSCore::ISchedulingProvider>::__shared_ptr_default_delete<AMSCore::ISchedulingProvider,AMSCore::AppleSchedulingProvider>,std::allocator<AMSCore::AppleSchedulingProvider>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN7AMSCore19ISchedulingProviderEE27__shared_ptr_default_deleteIS2_NS1_23AppleSch"
                     "edulingProviderEEE"
    || ((v3 & (unint64_t)"NSt3__110shared_ptrIN7AMSCore19ISchedulingProviderEE27__shared_ptr_default_deleteIS2_NS1"
                                "_23AppleSchedulingProviderEEE" & 0x8000000000000000) != 0) != __OFSUB__(v3, "NSt3__110shared_ptrIN7AMSCore19ISchedulingProviderEE27__shared_ptr_default_deleteIS2_NS1_23AppleSchedulingProviderEEE")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN7AMSCore19ISchedulingProviderEE27__shared_ptr_default_deleteIS2_NS1_23AppleSchedulingProviderEEE" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__throw_bad_function_call[abi:fe180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x18D789BDCLL);
}

void AMSCore::Base64::decode(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  const void *v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;

  v2 = a2;
  v3 = *((char *)a1 + 23);
  if (v3 >= 0)
    v4 = a1;
  else
    v4 = (uint64_t *)*a1;
  if (v3 >= 0)
    v5 = *((unsigned __int8 *)a1 + 23);
  else
    v5 = a1[1];
  if (!v5)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    return;
  }
  v13 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithBytesNoCopy:length:encoding:freeWhenDone:", v4, v5, 4, 0);
  v6 = objc_retainAutorelease((id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBase64EncodedString:options:", v13, 0));
  v7 = (const void *)objc_msgSend(v6, "bytes");
  v8 = objc_msgSend(v6, "length");
  v9 = v8;
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  if (v8 >= 0x17)
  {
    v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v10 = v8 | 7;
    v11 = v10 + 1;
    v12 = operator new(v10 + 1);
    v2[1] = v9;
    v2[2] = v11 | 0x8000000000000000;
    *v2 = v12;
    v2 = v12;
  }
  else
  {
    *((_BYTE *)v2 + 23) = v8;
    if (!v8)
      goto LABEL_17;
  }
  memmove(v2, v7, v9);
LABEL_17:
  *((_BYTE *)v2 + v9) = 0;

}

void AMSCore::Base64::encode(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  const void *v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;

  v3 = a3;
  if (!a2)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a1, a2, 0);
  objc_msgSend(v4, "base64EncodedDataWithOptions:", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_retainAutorelease(v5);
  v6 = (const void *)objc_msgSend(v12, "bytes");
  v7 = objc_msgSend(v12, "length");
  v8 = v7;
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  if (v7 >= 0x17)
  {
    v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v9 = v7 | 7;
    v10 = v9 + 1;
    v11 = operator new(v9 + 1);
    v3[1] = v8;
    v3[2] = v10 | 0x8000000000000000;
    *v3 = v11;
    v3 = v11;
  }
  else
  {
    *((_BYTE *)v3 + 23) = v7;
    if (!v7)
      goto LABEL_11;
  }
  memmove(v3, v6, v8);
LABEL_11:
  *((_BYTE *)v3 + v8) = 0;

}

void AMSCore::JsonData::decode(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  id v2;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  AMSCore *v8;
  id v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  unsigned int v16;
  std::runtime_error v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  id v23;

  v4 = *((char *)a1 + 23);
  if (v4 >= 0)
    v5 = a1;
  else
    v5 = (uint64_t *)*a1;
  if (v4 >= 0)
    v6 = *((unsigned __int8 *)a1 + 23);
  else
    v6 = a1[1];
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytesNoCopy:length:freeWhenDone:", v5, v6, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0;
  objc_msgSend(MEMORY[0x1E0CB36D8], "JSONObjectWithData:options:error:", v7, 12, &v23);
  v8 = (AMSCore *)objc_claimAutoreleasedReturnValue();
  v9 = v23;
  v10 = v9;
  if (v8)
  {
    AMSCore::makeAny((__n128 *)&v17, v8);
    AMSCore::Any::Any(a2, (uint64_t)&v17);
    *(_BYTE *)(a2 + 72) = 1;
    if (DWORD2(v18) != -1)
      ((void (*)(const char **, std::runtime_error *))off_1E252BD90[DWORD2(v18)])(&v15, &v17);
  }
  else
  {
    v16 = 3;
    if (v9)
    {
      objc_msgSend(v9, "localizedDescription");
      v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v11 = (const char *)objc_msgSend(v2, "UTF8String");
    }
    else
    {
      v11 = "";
    }
    v15 = v11;
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[24],char const*>(&v16, "Failed to decode JSON: ", &v15, (uint64_t)&v17);
    std::runtime_error::runtime_error((std::runtime_error *)a2, &v17);
    *(_OWORD *)(a2 + 16) = v18;
    *(_QWORD *)a2 = off_1E2521330;
    v12 = v20;
    *(_QWORD *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v12;
    v13 = a2 + 40;
    v14 = v21;
    *(_QWORD *)(a2 + 48) = v21;
    if (v14)
    {
      *(_QWORD *)(v12 + 16) = v13;
      v19 = &v20;
      v20 = 0;
      v21 = 0;
      v12 = 0;
    }
    else
    {
      *(_QWORD *)(a2 + 32) = v13;
    }
    *(_OWORD *)(a2 + 56) = v22;
    v22 = 0uLL;
    *(_BYTE *)(a2 + 72) = 0;
    v17.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v19, (unsigned int *)v12);
    MEMORY[0x18D7898AC](&v17);
    if (v10)

  }
}

uint64_t AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[24],char const*>@<X0>(unsigned int *a1@<X0>, const char *a2@<X1>, const char **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t error_code;
  const std::error_category *v8;
  const std::error_category *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::system_error v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  std::string __what_arg;
  std::error_code v20;

  error_code = AMSCore::make_error_code(*a1);
  v9 = v8;
  AMSCore::StringUtils::join<char [24],char const*>(a2, a3, &__what_arg);
  *(_QWORD *)&v20.__val_ = error_code;
  v20.__cat_ = v9;
  std::system_error::system_error(&v14, v20, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  v16 = 0;
  v17 = 0;
  v14.__vftable = (std::system_error_vtbl *)off_1E2521330;
  v15 = &v16;
  v18 = 0uLL;
  std::runtime_error::runtime_error((std::runtime_error *)a4, &v14);
  *(std::error_code *)(a4 + 16) = v14.__ec_;
  *(_QWORD *)a4 = off_1E2521330;
  v10 = v16;
  *(_QWORD *)(a4 + 32) = v15;
  *(_QWORD *)(a4 + 40) = v10;
  v11 = a4 + 40;
  v12 = v17;
  *(_QWORD *)(a4 + 48) = v17;
  if (v12)
  {
    *(_QWORD *)(v10 + 16) = v11;
    v10 = 0;
    v15 = &v16;
    v16 = 0;
    v17 = 0;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = v11;
  }
  *(_OWORD *)(a4 + 56) = v18;
  v18 = 0uLL;
  v14.__vftable = (std::system_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v15, (unsigned int *)v10);
  return MEMORY[0x18D7898AC](&v14);
}

void sub_18C987C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::StringUtils::join<char [24],char const*>@<X0>(const char *a1@<X0>, const char **a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  size_t v13;
  const char *v14;
  size_t v15;
  uint64_t v17;
  _QWORD v18[8];
  void *__p[2];
  __int128 v20;
  int v21;
  uint64_t v22[19];

  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v22[0] = MEMORY[0x1E0DE4FE0] + 64;
  v17 = v9;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24));
  std::ios_base::init(v11, v18);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v17 = v6 + 24;
  v22[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v18[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v20 = 0u;
  v21 = 16;
  v13 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)a1, v13);
  v14 = *a2;
  v15 = strlen(v14);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)v14, v15);
  std::stringbuf::str[abi:fe180100]((uint64_t)v18, a3);
  v17 = *v8;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24)) = v8[3];
  v18[0] = v12 + 16;
  if (SBYTE7(v20) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v22);
}

void sub_18C987DE8(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

void AMSCore::PListData::decode(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v3;
  void *v5;
  AMSCore *v6;
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  unsigned int v14;
  std::runtime_error v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  id v21;

  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytesNoCopy:length:freeWhenDone:", a1, a2, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0;
  objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v5, 0, 0, &v21);
  v6 = (AMSCore *)objc_claimAutoreleasedReturnValue();
  v7 = v21;
  v8 = v7;
  if (v6)
  {
    AMSCore::makeAny((__n128 *)&v15, v6);
    AMSCore::Any::Any(a3, (uint64_t)&v15);
    *(_BYTE *)(a3 + 72) = 1;
    if (DWORD2(v16) != -1)
      ((void (*)(const char **, std::runtime_error *))off_1E252BDE0[DWORD2(v16)])(&v13, &v15);
  }
  else
  {
    v14 = 3;
    if (v7)
    {
      objc_msgSend(v7, "localizedDescription");
      v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v9 = (const char *)objc_msgSend(v3, "UTF8String");
    }
    else
    {
      v9 = "";
    }
    v13 = v9;
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[33],char const*>(&v14, "Failed to decode property list: ", &v13, (uint64_t)&v15);
    std::runtime_error::runtime_error((std::runtime_error *)a3, &v15);
    *(_OWORD *)(a3 + 16) = v16;
    *(_QWORD *)a3 = off_1E2521330;
    v10 = v18;
    *(_QWORD *)(a3 + 32) = v17;
    *(_QWORD *)(a3 + 40) = v10;
    v11 = a3 + 40;
    v12 = v19;
    *(_QWORD *)(a3 + 48) = v19;
    if (v12)
    {
      *(_QWORD *)(v10 + 16) = v11;
      v17 = &v18;
      v18 = 0;
      v19 = 0;
      v10 = 0;
    }
    else
    {
      *(_QWORD *)(a3 + 32) = v11;
    }
    *(_OWORD *)(a3 + 56) = v20;
    v20 = 0uLL;
    *(_BYTE *)(a3 + 72) = 0;
    v15.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v17, (unsigned int *)v10);
    MEMORY[0x18D7898AC](&v15);
    if (v8)

  }
}

uint64_t AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[33],char const*>@<X0>(unsigned int *a1@<X0>, const char *a2@<X1>, const char **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t error_code;
  const std::error_category *v8;
  const std::error_category *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::system_error v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  std::string __what_arg;
  std::error_code v20;

  error_code = AMSCore::make_error_code(*a1);
  v9 = v8;
  AMSCore::StringUtils::join<char [33],char const*>(a2, a3, &__what_arg);
  *(_QWORD *)&v20.__val_ = error_code;
  v20.__cat_ = v9;
  std::system_error::system_error(&v14, v20, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  v16 = 0;
  v17 = 0;
  v14.__vftable = (std::system_error_vtbl *)off_1E2521330;
  v15 = &v16;
  v18 = 0uLL;
  std::runtime_error::runtime_error((std::runtime_error *)a4, &v14);
  *(std::error_code *)(a4 + 16) = v14.__ec_;
  *(_QWORD *)a4 = off_1E2521330;
  v10 = v16;
  *(_QWORD *)(a4 + 32) = v15;
  *(_QWORD *)(a4 + 40) = v10;
  v11 = a4 + 40;
  v12 = v17;
  *(_QWORD *)(a4 + 48) = v17;
  if (v12)
  {
    *(_QWORD *)(v10 + 16) = v11;
    v10 = 0;
    v15 = &v16;
    v16 = 0;
    v17 = 0;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = v11;
  }
  *(_OWORD *)(a4 + 56) = v18;
  v18 = 0uLL;
  v14.__vftable = (std::system_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v15, (unsigned int *)v10);
  return MEMORY[0x18D7898AC](&v14);
}

void sub_18C9880E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::StringUtils::join<char [33],char const*>@<X0>(const char *a1@<X0>, const char **a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  size_t v13;
  const char *v14;
  size_t v15;
  uint64_t v17;
  _QWORD v18[8];
  void *__p[2];
  __int128 v20;
  int v21;
  uint64_t v22[19];

  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v22[0] = MEMORY[0x1E0DE4FE0] + 64;
  v17 = v9;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24));
  std::ios_base::init(v11, v18);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v17 = v6 + 24;
  v22[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v18[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v20 = 0u;
  v21 = 16;
  v13 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)a1, v13);
  v14 = *a2;
  v15 = strlen(v14);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)v14, v15);
  std::stringbuf::str[abi:fe180100]((uint64_t)v18, a3);
  v17 = *v8;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24)) = v8[3];
  v18[0] = v12 + 16;
  if (SBYTE7(v20) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v22);
}

void sub_18C988268(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

AMSCore::AppleDeviceInfo *AMSCore::AppleDeviceInfo::AppleDeviceInfo(AMSCore::AppleDeviceInfo *this)
{
  int *v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  size_t v6;
  utsname *p_p;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  utsname *v11;
  int *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _BOOL4 v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  char **v24;
  size_t v25;
  size_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  char *v35;
  char **v37;
  char v38;
  uint64_t v39;
  uint64_t v43;
  uint64_t v44;
  size_t v46;
  char *v47;
  utsname *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v54;
  size_t v55;
  void *v56[2];
  char v57;
  __int128 v58;
  utsname __p;
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)this = off_1E2520900;
  v57 = 14;
  v55 = 0;
  strcpy((char *)v56, "kern.osversion");
  if (sysctlbyname((const char *)v56, 0, &v55, 0, 0))
  {
    v2 = __error();
    *(_QWORD *)&v58 = strerror(*v2);
    AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&__p);
    AMSCore::Logger::log<char [39],std::string,char [23],char *>(*(uint64_t *)__p.sysname, 4, (uint64_t)"default", 7, "Unable to get result size for sysctl '", (uint64_t)v56, "' via sysctlbyname(): ", (const char **)&v58);
    v3 = *(std::__shared_weak_count **)&__p.sysname[8];
    if (*(_QWORD *)&__p.sysname[8])
    {
      v4 = (unint64_t *)(*(_QWORD *)&__p.sysname[8] + 8);
      do
        v5 = __ldaxr(v4);
      while (__stlxr(v5 - 1, v4));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    goto LABEL_29;
  }
  v6 = v55 - 1;
  if (v55 - 1 > 0x7FFFFFFFFFFFFFF7)
    std::string::__throw_length_error[abi:fe180100]();
  if (v6 >= 0x17)
  {
    v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v8 = v6 | 7;
    v9 = v8 + 1;
    p_p = (utsname *)operator new(v8 + 1);
    *(_QWORD *)&__p.sysname[8] = v6;
    *(_QWORD *)&__p.sysname[16] = v9 | 0x8000000000000000;
    *(_QWORD *)__p.sysname = p_p;
    goto LABEL_14;
  }
  __p.sysname[23] = v55 - 1;
  p_p = &__p;
  if (v55 != 1)
LABEL_14:
    bzero(p_p, v6);
  p_p->sysname[v6] = 0;
  if (v57 >= 0)
    v10 = (const char *)v56;
  else
    v10 = (const char *)v56[0];
  if (__p.sysname[23] >= 0)
    v11 = &__p;
  else
    v11 = *(utsname **)__p.sysname;
  if (sysctlbyname(v10, v11, &v55, 0, 0))
  {
    v12 = __error();
    v54 = strerror(*v12);
    AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&v58);
    AMSCore::Logger::log<char [33],std::string,char [23],char *>(v58, 4, (uint64_t)"default", 7, "Unable to get value for sysctl '", (uint64_t)v56, "' via sysctlbyname(): ", (const char **)&v54);
    v13 = (std::__shared_weak_count *)*((_QWORD *)&v58 + 1);
    if (*((_QWORD *)&v58 + 1))
    {
      v14 = (unint64_t *)(*((_QWORD *)&v58 + 1) + 8);
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    if (__p.sysname[23] < 0)
      operator delete(*(void **)__p.sysname);
LABEL_29:
    *((_BYTE *)this + 31) = 0;
    *((_BYTE *)this + 8) = 0;
    if ((v57 & 0x80000000) == 0)
      goto LABEL_31;
    goto LABEL_30;
  }
  *(_QWORD *)((char *)&v58 + 7) = *(_QWORD *)&__p.sysname[15];
  *(_QWORD *)&v58 = *(_QWORD *)&__p.sysname[8];
  v38 = __p.sysname[23];
  v39 = *(_QWORD *)&__p.sysname[8];
  *((_QWORD *)this + 1) = *(_QWORD *)__p.sysname;
  *((_QWORD *)this + 2) = v39;
  *(_QWORD *)((char *)this + 23) = *(_QWORD *)((char *)&v58 + 7);
  *((_BYTE *)this + 31) = v38;
  if (v57 < 0)
LABEL_30:
    operator delete(v56[0]);
LABEL_31:
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle", v54);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "appStoreReceiptURL");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    objc_msgSend(v17, "lastPathComponent");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v18, "isEqualToString:", CFSTR("sandboxReceipt")) & 1) != 0)
    {
      objc_msgSend(v17, "path");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19 != 0;

      goto LABEL_36;
    }

  }
  v20 = 0;
LABEL_36:

  *((_DWORD *)this + 8) = v20;
  bzero(&__p, 0x500uLL);
  if (uname(&__p))
  {
    AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(v56);
    AMSCore::Logger::log<char [46]>((uint64_t)v56[0], 4, (uint64_t)"default", 7, "Unable to get hardware type string via uname!");
    v21 = (std::__shared_weak_count *)v56[1];
    if (v56[1])
    {
      v22 = (unint64_t *)((char *)v56[1] + 8);
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    *((_BYTE *)this + 40) = 0;
    *((_BYTE *)this + 64) = 0;
    *((_QWORD *)this + 9) = 0;
    *((_QWORD *)this + 10) = 0;
    *((_QWORD *)this + 11) = 0;
    return this;
  }
  v24 = (char **)((char *)this + 40);
  v25 = strlen(__p.machine);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    std::string::__throw_length_error[abi:fe180100]();
  v26 = v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = (char *)operator new(v28 + 1);
    *((_QWORD *)this + 6) = v26;
    *((_QWORD *)this + 7) = v29 | 0x8000000000000000;
    *((_QWORD *)this + 5) = v27;
    goto LABEL_50;
  }
  *((_BYTE *)this + 63) = v25;
  v27 = (char *)this + 40;
  if (v25)
LABEL_50:
    memcpy(v27, __p.machine, v26);
  v27[v26] = 0;
  *((_BYTE *)this + 64) = 1;
  v30 = *((unsigned __int8 *)this + 63);
  v31 = (char)v30;
  if ((v30 & 0x80u) != 0)
    v30 = *((_QWORD *)this + 6);
  if (v30 >= 6)
  {
    if (v31 >= 0)
      v35 = (char *)this + 40;
    else
      v35 = *v24;
    if (*(_DWORD *)v35 == 1869107305 && *((_WORD *)v35 + 2) == 25966)
    {
      v37 = &off_1E252BE30;
      goto LABEL_105;
    }
  }
  else
  {
    if (v30 < 4)
      goto LABEL_55;
    if (v31 >= 0)
      v35 = (char *)this + 40;
    else
      v35 = *v24;
  }
  if (*(_DWORD *)v35 == 1684099177)
  {
    v37 = &off_1E252BE40;
    goto LABEL_105;
  }
  if (*(_DWORD *)v35 == 1685016681)
  {
    v37 = &off_1E252BE50;
    goto LABEL_105;
  }
  if (v30 >= 0xE)
  {
    if (*(_QWORD *)v35 == 0x6363416F69647541 && *(_QWORD *)(v35 + 6) == 0x79726F7373656363)
    {
      v37 = &off_1E252BE60;
      goto LABEL_105;
    }
    goto LABEL_87;
  }
  if (v30 >= 7)
  {
LABEL_87:
    if (*(_DWORD *)v35 == 1819308097 && *(_DWORD *)(v35 + 3) == 1448371564)
    {
      v37 = &off_1E252BE70;
      goto LABEL_105;
    }
    goto LABEL_91;
  }
  if (v30 >= 5)
  {
LABEL_91:
    if (*(_DWORD *)v35 == 1668571479 && v35[4] == 104)
    {
      v37 = &off_1E252BE80;
    }
    else
    {
      if (v30 < 0xD)
        goto LABEL_55;
      v43 = *(_QWORD *)v35;
      v44 = *(_QWORD *)(v35 + 5);
      if (v43 != 0x447974696C616552 || v44 != 0x6563697665447974)
        goto LABEL_55;
      v37 = &off_1E252BE90;
    }
LABEL_105:
    v46 = (size_t)v37[1];
    if (v46 > 0x7FFFFFFFFFFFFFF7)
      std::string::__throw_length_error[abi:fe180100]();
    v47 = *v37;
    if (v46 >= 0x17)
    {
      v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v46 | 7) != 0x17)
        v49 = v46 | 7;
      v50 = v49 + 1;
      v48 = (utsname *)operator new(v49 + 1);
      *(_QWORD *)&__p.sysname[8] = v46;
      *(_QWORD *)&__p.sysname[16] = v50 | 0x8000000000000000;
      *(_QWORD *)__p.sysname = v48;
    }
    else
    {
      __p.sysname[23] = v37[1];
      v48 = &__p;
      if (!v46)
        goto LABEL_113;
    }
    memmove(v48, v47, v46);
LABEL_113:
    v48->sysname[v46] = 0;
    *(void **)((char *)v56 + 7) = *(void **)&__p.sysname[15];
    v56[0] = *(void **)&__p.sysname[8];
    v51 = __p.sysname[23];
    v52 = *(_QWORD *)&__p.sysname[8];
    *((_QWORD *)this + 9) = *(_QWORD *)__p.sysname;
    *((_QWORD *)this + 10) = v52;
    *(void **)((char *)this + 87) = *(void **)((char *)v56 + 7);
    *((_BYTE *)this + 95) = v51;
    return this;
  }
LABEL_55:
  AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&__p);
  AMSCore::Logger::log<char [46],std::string>(*(uint64_t *)__p.sysname, 4, (uint64_t)"default", 7, "Unable to get device name for hardware type: ", (uint64_t)this + 40);
  v32 = *(std::__shared_weak_count **)&__p.sysname[8];
  if (*(_QWORD *)&__p.sysname[8])
  {
    v33 = (unint64_t *)(*(_QWORD *)&__p.sysname[8] + 8);
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  *((_BYTE *)this + 95) = 0;
  *((_BYTE *)this + 72) = 0;
  return this;
}

void sub_18C9889B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  if (a2)
  {
    std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100]((uint64_t)&a16);
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void AMSCore::AppleDeviceInfo::getBuildVersion(AMSCore::AppleDeviceInfo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((_QWORD *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 3);
  }
}

uint64_t AMSCore::AppleDeviceInfo::getBuildType(AMSCore::AppleDeviceInfo *this)
{
  return *((unsigned int *)this + 8);
}

void AMSCore::AppleDeviceInfo::getUniqueIdentifier(_BYTE *a1@<X8>)
{
  void *v3;
  id v4;
  const char *v5;
  size_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "deviceIdentifierForVendor");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "UUIDString");
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v5 = (const char *)objc_msgSend(v4, "UTF8String");
  v6 = strlen(v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = operator new(v9 + 1);
    *((_QWORD *)a1 + 1) = v7;
    *((_QWORD *)a1 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)a1 = v8;
  }
  else
  {
    a1[23] = v6;
    v8 = a1;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v8, v5, v7);
LABEL_9:
  *((_BYTE *)v8 + v7) = 0;
  a1[24] = 1;

}

void sub_18C988B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void AMSCore::AppleDeviceInfo::getHardwarePlatform(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

void AMSCore::AppleDeviceInfo::getHardwareType(AMSCore::AppleDeviceInfo *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__s.__data_[0] = 0;
  a2[1].__r_.__value_.__s.__data_[0] = 0;
  if (*((_BYTE *)this + 64))
  {
    if (*((char *)this + 63) < 0)
    {
      std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 5), *((_QWORD *)this + 6));
    }
    else
    {
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 40);
      a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 7);
    }
    a2[1].__r_.__value_.__s.__data_[0] = 1;
  }
}

void sub_18C988BEC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void AMSCore::AppleDeviceInfo::getLanguageCode(_BYTE *a1@<X8>)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  const char *v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;

  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringArrayForKey:", CFSTR("AppleLanguages"));
  v13 = (id)objc_claimAutoreleasedReturnValue();

  v4 = v13;
  if (v13)
  {
    objc_msgSend(v13, "firstObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = v13;
    if (v5)
    {
      objc_msgSend(v13, "firstObject");
      v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v7 = (const char *)objc_msgSend(v6, "UTF8String");
      v8 = strlen(v7);
      if (v8 >= 0x7FFFFFFFFFFFFFF8)
        std::string::__throw_length_error[abi:fe180100]();
      v9 = v8;
      if (v8 >= 0x17)
      {
        v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v8 | 7) != 0x17)
          v10 = v8 | 7;
        v11 = v10 + 1;
        v12 = operator new(v10 + 1);
        *((_QWORD *)a1 + 1) = v9;
        *((_QWORD *)a1 + 2) = v11 | 0x8000000000000000;
        *(_QWORD *)a1 = v12;
        a1 = v12;
      }
      else
      {
        a1[23] = v8;
        if (!v8)
          goto LABEL_12;
      }
      memmove(a1, v7, v9);
LABEL_12:
      a1[v9] = 0;

      v4 = v13;
      goto LABEL_13;
    }
  }
  a1[23] = 2;
  strcpy(a1, "en");
LABEL_13:

}

void sub_18C988D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void AMSCore::AppleDeviceInfo::getName(AMSCore::AppleDeviceInfo *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 95) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 9), *((_QWORD *)this + 10));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 72);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 11);
  }
}

double AMSCore::AppleDeviceInfo::getPlatform@<D0>(uint64_t a1@<X8>)
{
  char *v3;

  v3 = (char *)operator new(0x40uLL);
  *(_QWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = xmmword_18CF0CD40;
  strcpy(v3, "com.apple.AppleMediaServicesCore.IDeviceInfo.platform.apple.ios");
  return *(double *)"atform.apple.ios";
}

uint64_t AMSCore::AppleDeviceInfo::getPlatformVersion@<X0>(std::string *a1@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  std::ios_base *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  _QWORD v15[8];
  void *__p[2];
  __int128 v17;
  int v18;
  uint64_t v19[19];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v20 = 0;
  v21 = 0;
  v22 = 0;
  objc_msgSend(MEMORY[0x1E0CB3898], "processInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "operatingSystemVersion");
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
  }

  v5 = MEMORY[0x1E0DE4FE0];
  v6 = MEMORY[0x1E0DE4FE0] + 64;
  v7 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v8 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v19[0] = MEMORY[0x1E0DE4FE0] + 64;
  v14 = v8;
  *(_QWORD *)((char *)&v15[-1] + *(_QWORD *)(v8 - 24)) = v9;
  v10 = (std::ios_base *)((char *)&v15[-1] + *(_QWORD *)(v14 - 24));
  std::ios_base::init(v10, v15);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  v14 = v5 + 24;
  v19[0] = v6;
  std::streambuf::basic_streambuf();
  v11 = MEMORY[0x1E0DE4FB8];
  v15[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v17 = 0u;
  v18 = 16;
  v12 = (_QWORD *)std::ostream::operator<<();
  v23 = 46;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v12, (uint64_t)&v23, 1);
  std::ostream::operator<<();
  if (v22 >= 1)
  {
    v23 = 46;
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v14, (uint64_t)&v23, 1);
    std::ostream::operator<<();
  }
  std::stringbuf::str[abi:fe180100]((uint64_t)v15, a1);
  v14 = *v7;
  *(_QWORD *)((char *)&v15[-1] + *(_QWORD *)(v14 - 24)) = v7[3];
  v15[0] = v11 + 16;
  if (SBYTE7(v17) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v19);
}

void sub_18C988FA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18C988FB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  _Unwind_Resume(a1);
}

void sub_18C988FD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F60];
  v3 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)a1 = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DE4FB8] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18D789B58](a1 + 112);
  return a1;
}

void AMSCore::AppleDeviceInfo::getWebKitVersion(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

uint64_t AMSCore::AppleDeviceInfo::getScreenInfo@<X0>(uint64_t a1@<X8>)
{
  void *v3;
  void *v4;
  float v5;
  double v6;
  uint64_t v7;
  uint64_t result;

  v3 = (void *)MEMORY[0x1E0CB37E8];
  MGGetFloat32Answer();
  objc_msgSend(v3, "numberWithFloat:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "floatValue");
  v6 = v5;

  v7 = MGGetSInt64Answer();
  result = MGGetSInt64Answer();
  *(double *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = 1;
  return result;
}

void sub_18C98910C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void AMSCore::AppleDeviceInfo::~AppleDeviceInfo(void **this)
{
  *this = off_1E2520900;
  if (*((char *)this + 95) < 0)
  {
    operator delete(this[9]);
    if (!*((_BYTE *)this + 64))
      goto LABEL_6;
  }
  else if (!*((_BYTE *)this + 64))
  {
LABEL_6:
    if ((*((char *)this + 31) & 0x80000000) == 0)
      return;
    goto LABEL_7;
  }
  if ((*((char *)this + 63) & 0x80000000) == 0)
    goto LABEL_6;
  operator delete(this[5]);
  if (*((char *)this + 31) < 0)
LABEL_7:
    operator delete(this[1]);
}

{
  *this = off_1E2520900;
  if (*((char *)this + 95) < 0)
  {
    operator delete(this[9]);
    if (!*((_BYTE *)this + 64))
      goto LABEL_6;
  }
  else if (!*((_BYTE *)this + 64))
  {
    goto LABEL_6;
  }
  if (*((char *)this + 63) < 0)
  {
    operator delete(this[5]);
    if ((*((char *)this + 31) & 0x80000000) == 0)
LABEL_11:
      JUMPOUT(0x18D789BDCLL);
LABEL_7:
    operator delete(this[1]);
    goto LABEL_11;
  }
LABEL_6:
  if ((*((char *)this + 31) & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_7;
}

uint64_t AMSCore::Logger::log<char [39],std::string,char [23],char *>(uint64_t result, int a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, const char *a7, const char **a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::ios_base *v18;
  uint64_t v19;
  size_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v31;
  _QWORD v32[8];
  void *__p[2];
  __int128 v34;
  int v35;
  uint64_t v36[19];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(result + 8) <= a2)
  {
    v13 = result;
    v14 = MEMORY[0x1E0DE4FE0];
    v15 = MEMORY[0x1E0DE4FE0] + 64;
    v16 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
    v17 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
    v36[0] = MEMORY[0x1E0DE4FE0] + 64;
    v31 = v16;
    *(_QWORD *)((char *)&v32[-1] + *(_QWORD *)(v16 - 24)) = v17;
    v18 = (std::ios_base *)((char *)&v32[-1] + *(_QWORD *)(v31 - 24));
    std::ios_base::init(v18, v32);
    v18[1].__vftable = 0;
    v18[1].__fmtflags_ = -1;
    v31 = v14 + 24;
    v36[0] = v15;
    std::streambuf::basic_streambuf();
    v19 = MEMORY[0x1E0DE4FB8];
    v32[0] = MEMORY[0x1E0DE4FB8] + 16;
    *(_OWORD *)__p = 0u;
    v34 = 0u;
    v35 = 16;
    AMSCore::Log::setRedaction(&v31);
    v20 = strlen(a5);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)a5, v20);
    v21 = *(char *)(a6 + 23);
    if (v21 >= 0)
      v22 = a6;
    else
      v22 = *(_QWORD *)a6;
    if (v21 >= 0)
      v23 = *(unsigned __int8 *)(a6 + 23);
    else
      v23 = *(_QWORD *)(a6 + 8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, v22, v23);
    v24 = strlen(a7);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)a7, v24);
    v25 = strlen(*a8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)*a8, v25);
    v26 = v32[5];
    v27 = (char *)&v32[-1] + *(_QWORD *)(v31 - 24);
    if ((v27[32] & 5) != 0)
    {
      v28 = -1;
    }
    else
    {
      (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v27 + 5) + 32))(&rep, *((_QWORD *)v27 + 5), 0, 1, 16);
      v28 = v41;
    }
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v38 = a2;
    v39 = v26;
    v40 = v28;
    (*(void (**)(_QWORD, uint64_t, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v13 + 16) + 16))(*(_QWORD *)(v13 + 16), a3, a4, &rep);
    v31 = *MEMORY[0x1E0DE4F60];
    *(_QWORD *)((char *)&v32[-1] + *(_QWORD *)(v31 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v32[0] = v19 + 16;
    if (SBYTE7(v34) < 0)
      operator delete(__p[0]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x18D789B58](v36);
  }
  return result;
}

void sub_18C989490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t AMSCore::Logger::log<char [33],std::string,char [23],char *>(uint64_t result, int a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, const char *a7, const char **a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::ios_base *v18;
  uint64_t v19;
  size_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v31;
  _QWORD v32[8];
  void *__p[2];
  __int128 v34;
  int v35;
  uint64_t v36[19];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(result + 8) <= a2)
  {
    v13 = result;
    v14 = MEMORY[0x1E0DE4FE0];
    v15 = MEMORY[0x1E0DE4FE0] + 64;
    v16 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
    v17 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
    v36[0] = MEMORY[0x1E0DE4FE0] + 64;
    v31 = v16;
    *(_QWORD *)((char *)&v32[-1] + *(_QWORD *)(v16 - 24)) = v17;
    v18 = (std::ios_base *)((char *)&v32[-1] + *(_QWORD *)(v31 - 24));
    std::ios_base::init(v18, v32);
    v18[1].__vftable = 0;
    v18[1].__fmtflags_ = -1;
    v31 = v14 + 24;
    v36[0] = v15;
    std::streambuf::basic_streambuf();
    v19 = MEMORY[0x1E0DE4FB8];
    v32[0] = MEMORY[0x1E0DE4FB8] + 16;
    *(_OWORD *)__p = 0u;
    v34 = 0u;
    v35 = 16;
    AMSCore::Log::setRedaction(&v31);
    v20 = strlen(a5);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)a5, v20);
    v21 = *(char *)(a6 + 23);
    if (v21 >= 0)
      v22 = a6;
    else
      v22 = *(_QWORD *)a6;
    if (v21 >= 0)
      v23 = *(unsigned __int8 *)(a6 + 23);
    else
      v23 = *(_QWORD *)(a6 + 8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, v22, v23);
    v24 = strlen(a7);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)a7, v24);
    v25 = strlen(*a8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v31, (uint64_t)*a8, v25);
    v26 = v32[5];
    v27 = (char *)&v32[-1] + *(_QWORD *)(v31 - 24);
    if ((v27[32] & 5) != 0)
    {
      v28 = -1;
    }
    else
    {
      (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v27 + 5) + 32))(&rep, *((_QWORD *)v27 + 5), 0, 1, 16);
      v28 = v41;
    }
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v38 = a2;
    v39 = v26;
    v40 = v28;
    (*(void (**)(_QWORD, uint64_t, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v13 + 16) + 16))(*(_QWORD *)(v13 + 16), a3, a4, &rep);
    v31 = *MEMORY[0x1E0DE4F60];
    *(_QWORD *)((char *)&v32[-1] + *(_QWORD *)(v31 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v32[0] = v19 + 16;
    if (SBYTE7(v34) < 0)
      operator delete(__p[0]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x18D789B58](v36);
  }
  return result;
}

void sub_18C989744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t AMSCore::Logger::log<char [46]>(uint64_t result, int a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  std::ios_base *v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[8];
  void *__p[2];
  __int128 v24;
  int v25;
  uint64_t v26[19];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(result + 8) <= a2)
  {
    v9 = result;
    v10 = MEMORY[0x1E0DE4FE0];
    v11 = MEMORY[0x1E0DE4FE0] + 64;
    v12 = (uint64_t *)MEMORY[0x1E0DE4F60];
    v13 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
    v14 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
    v26[0] = MEMORY[0x1E0DE4FE0] + 64;
    v21 = v13;
    *(_QWORD *)((char *)&v22[-1] + *(_QWORD *)(v13 - 24)) = v14;
    v15 = (std::ios_base *)((char *)&v22[-1] + *(_QWORD *)(v21 - 24));
    std::ios_base::init(v15, v22);
    v15[1].__vftable = 0;
    v15[1].__fmtflags_ = -1;
    v21 = v10 + 24;
    v26[0] = v11;
    std::streambuf::basic_streambuf();
    v16 = MEMORY[0x1E0DE4FB8];
    v22[0] = MEMORY[0x1E0DE4FB8] + 16;
    *(_OWORD *)__p = 0u;
    v24 = 0u;
    v25 = 16;
    AMSCore::Log::setRedaction(&v21);
    v17 = strlen(a5);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v21, (uint64_t)a5, v17);
    v18 = v22[5];
    v19 = (char *)&v22[-1] + *(_QWORD *)(v21 - 24);
    if ((v19[32] & 5) != 0)
    {
      v20 = -1;
    }
    else
    {
      (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v19 + 5) + 32))(&rep, *((_QWORD *)v19 + 5), 0, 1, 16);
      v20 = v31;
    }
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v28 = a2;
    v29 = v18;
    v30 = v20;
    (*(void (**)(_QWORD, uint64_t, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v9 + 16) + 16))(*(_QWORD *)(v9 + 16), a3, a4, &rep);
    v21 = *v12;
    *(_QWORD *)((char *)&v22[-1] + *(_QWORD *)(v21 - 24)) = v12[3];
    v22[0] = v16 + 16;
    if (SBYTE7(v24) < 0)
      operator delete(__p[0]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x18D789B58](v26);
  }
  return result;
}

void sub_18C989998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t AMSCore::Logger::log<char [46],std::string>(uint64_t result, int a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::ios_base *v16;
  uint64_t v17;
  size_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[8];
  void *__p[2];
  __int128 v28;
  int v29;
  uint64_t v30[19];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(result + 8) <= a2)
  {
    v11 = result;
    v12 = MEMORY[0x1E0DE4FE0];
    v13 = MEMORY[0x1E0DE4FE0] + 64;
    v14 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
    v15 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
    v30[0] = MEMORY[0x1E0DE4FE0] + 64;
    v25 = v14;
    *(_QWORD *)((char *)&v26[-1] + *(_QWORD *)(v14 - 24)) = v15;
    v16 = (std::ios_base *)((char *)&v26[-1] + *(_QWORD *)(v25 - 24));
    std::ios_base::init(v16, v26);
    v16[1].__vftable = 0;
    v16[1].__fmtflags_ = -1;
    v25 = v12 + 24;
    v30[0] = v13;
    std::streambuf::basic_streambuf();
    v17 = MEMORY[0x1E0DE4FB8];
    v26[0] = MEMORY[0x1E0DE4FB8] + 16;
    *(_OWORD *)__p = 0u;
    v28 = 0u;
    v29 = 16;
    AMSCore::Log::setRedaction(&v25);
    v18 = strlen(a5);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v25, (uint64_t)a5, v18);
    v19 = *(char *)(a6 + 23);
    if (v19 >= 0)
      v20 = a6;
    else
      v20 = *(_QWORD *)a6;
    if (v19 >= 0)
      v21 = *(unsigned __int8 *)(a6 + 23);
    else
      v21 = *(_QWORD *)(a6 + 8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v25, v20, v21);
    v22 = v26[5];
    v23 = (char *)&v26[-1] + *(_QWORD *)(v25 - 24);
    if ((v23[32] & 5) != 0)
    {
      v24 = -1;
    }
    else
    {
      (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v23 + 5) + 32))(&rep, *((_QWORD *)v23 + 5), 0, 1, 16);
      v24 = v35;
    }
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v32 = a2;
    v33 = v22;
    v34 = v24;
    (*(void (**)(_QWORD, uint64_t, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v11 + 16) + 16))(*(_QWORD *)(v11 + 16), a3, a4, &rep);
    v25 = *MEMORY[0x1E0DE4F60];
    *(_QWORD *)((char *)&v26[-1] + *(_QWORD *)(v25 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v26[0] = v17 + 16;
    if (SBYTE7(v28) < 0)
      operator delete(__p[0]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x18D789B58](v30);
  }
  return result;
}

void sub_18C989C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  std::string *v8;

  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:fe180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17)
      v6 = __sz | 7;
    v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void AMSCore::OSLogSink::log(uint64_t a1, void *__src, size_t __len, uint64_t a4)
{
  const char *v7;
  void **p_dst;
  size_t v9;
  size_t v10;
  const char *v11;
  os_log_t v12;
  NSObject *v13;
  NSObject *v14;
  unint64_t v15;
  os_log_type_t v16;
  size_t v17;
  const void *v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void **__dst;
  size_t v24;
  int64_t v25;
  uint8_t buf[4];
  void **v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v7 = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
    v7 = *(const char **)v7;
  if (__len > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_33;
  if (__len >= 0x17)
  {
    v9 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v9 = __len | 7;
    v10 = v9 + 1;
    p_dst = (void **)operator new(v9 + 1);
    v24 = __len;
    v25 = v10 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_10;
  }
  HIBYTE(v25) = __len;
  p_dst = (void **)&__dst;
  if (__len)
LABEL_10:
    memmove(p_dst, __src, __len);
  *((_BYTE *)p_dst + __len) = 0;
  if (v25 >= 0)
    v11 = (const char *)&__dst;
  else
    v11 = (const char *)__dst;
  v12 = os_log_create(v7, v11);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst);
  v13 = v12;
  v14 = v13;
  v15 = *(unsigned int *)(a4 + 8);
  if (v15 >= 6)
    v16 = OS_LOG_TYPE_DEFAULT;
  else
    v16 = (0x111000010202uLL >> (8 * v15));
  if (os_log_type_enabled(v13, v16))
  {
    v17 = *(_QWORD *)(a4 + 24);
    if (v17 <= 0x7FFFFFFFFFFFFFF7)
    {
      v18 = *(const void **)(a4 + 16);
      if (v17 >= 0x17)
      {
        v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v17 | 7) != 0x17)
          v20 = v17 | 7;
        v21 = v20 + 1;
        v19 = (void **)operator new(v20 + 1);
        v24 = v17;
        v25 = v21 | 0x8000000000000000;
        __dst = v19;
      }
      else
      {
        HIBYTE(v25) = v17;
        v19 = (void **)&__dst;
        if (!v17)
          goto LABEL_28;
      }
      memmove(v19, v18, v17);
LABEL_28:
      *((_BYTE *)v19 + v17) = 0;
      v22 = (void **)&__dst;
      if (v25 < 0)
        v22 = __dst;
      *(_DWORD *)buf = 136446210;
      v27 = v22;
      _os_log_impl(&dword_18C849000, v14, v16, "%{public}s", buf, 0xCu);
      if (SHIBYTE(v25) < 0)
        operator delete(__dst);
      goto LABEL_32;
    }
LABEL_33:
    std::string::__throw_length_error[abi:fe180100]();
  }
LABEL_32:

}

void sub_18C989F10(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  __clang_call_terminate(a1);
}

void AMSCore::OSLogSink::~OSLogSink(void **this)
{
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

{
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t AMSCore::AppleHTTPProvider::AppleHTTPProvider(uint64_t a1, void *a2)
{
  id v3;
  _QWORD *v4;
  id v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &off_1E2520B30;
  *(_BYTE *)(a1 + 24) = 0;
  v4 = (_QWORD *)operator new();
  v5 = v3;
  objc_msgSend(MEMORY[0x1E0C92CA0], "defaultSessionConfiguration");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setProtocolClasses:", v5);
  objc_msgSend(v6, "setHTTPShouldSetCookies:", 0);
  objc_msgSend(v6, "setHTTPCookieStorage:", 0);
  objc_msgSend(MEMORY[0x1E0C92C98], "sessionWithConfiguration:", v6);
  v7 = objc_claimAutoreleasedReturnValue();

  *v4 = v7;
  *(_QWORD *)(a1 + 32) = v4;

  return a1;
}

uint64_t AMSCore::AppleHTTPProvider::AppleHTTPProvider(AMSCore::AppleHTTPProvider *this)
{
  return AMSCore::AppleHTTPProvider::AppleHTTPProvider((uint64_t)this, 0);
}

void AMSCore::AppleHTTPProvider::~AppleHTTPProvider(id **this)
{
  unsigned __int8 *v2;
  unsigned __int8 v3;
  id v4;
  id *v5;
  std::__shared_weak_count *v6;

  v2 = (unsigned __int8 *)(this + 3);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(1u, v2));
  if ((v3 & 1) == 0)
  {
    v4 = *this[4];
    objc_msgSend(v4, "invalidateAndCancel");

  }
  v5 = this[4];
  this[4] = 0;
  if (v5)
  {

    MEMORY[0x18D789BDC](v5, 0x80C40B8603338);
  }
  v6 = (std::__shared_weak_count *)this[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

{
  AMSCore::AppleHTTPProvider::~AppleHTTPProvider(this);
  JUMPOUT(0x18D789BDCLL);
}

void AMSCore::AppleHTTPProvider::shutdown(id **this)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  id v3;

  v1 = (unsigned __int8 *)(this + 3);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(1u, v1));
  if ((v2 & 1) == 0)
  {
    v3 = *this[4];
    objc_msgSend(v3, "invalidateAndCancel");

  }
}

_BYTE *AMSCore::AppleHTTPProvider::submitRequest@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (***v13)(uint64_t);
  unsigned __int8 v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count *v18;
  char *v19;
  _QWORD *v20;
  _BYTE *result;
  __int128 v22;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  __int128 *v27;
  int v28;
  __int128 *v29;
  __n128 v30;
  uint64_t error_code;
  char *v32;
  const std::error_category *v33;
  std::runtime_error *v34;
  __n128 v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::runtime_error v51[26];
  _OWORD v52[27];

  v10 = (char *)operator new(0x5F8uLL);
  *(_QWORD *)v10 = AMSCore::AppleHTTPProvider::submitRequest;
  *((_QWORD *)v10 + 1) = AMSCore::AppleHTTPProvider::submitRequest;
  v12 = *a2;
  v11 = a2[1];
  *a2 = 0;
  a2[1] = 0;
  AMSCore::TaskCounter::TaskCounter((AMSCore::TaskCounter *)(v10 + 16));
  v10[24] = 0;
  v13 = (void (***)(uint64_t))(v10 + 24);
  v10[688] = 0;
  *((_QWORD *)v10 + 87) = 0;
  *((_QWORD *)v10 + 91) = 0;
  std::shared_ptr<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,void>(v52, (uint64_t)(v10 + 16));
  *a5 = v52[0];
  v14 = atomic_load((unsigned __int8 *)(a1 + 24));
  if ((v14 & 1) != 0)
  {
    error_code = AMSCore::make_error_code(2);
    v29 = (__int128 *)(v10 + 736);
    v32 = v10 + 16;
    AMSCore::HTTPError::HTTPError<char const(&)[46]>((uint64_t)v52, error_code, v33, "Request submitted after shutdown has started.");
    std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v51, (uint64_t)v52);
    AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v52);
    if (v10[688])
    {
      if (v10[680])
        AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(v10 + 24));
      else
        (**v13)((uint64_t)(v10 + 24));
      v10[688] = 0;
    }
    std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>((std::runtime_error *)(v10 + 24), (uint64_t)v51);
    v10[680] = 0;
    v10[688] = 1;
    AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v51);
    goto LABEL_55;
  }
  v16 = *(_QWORD *)(a1 + 8);
  v15 = *(std::__shared_weak_count **)(a1 + 16);
  *((_QWORD *)v10 + 175) = v16;
  if (!v15)
  {
    *((_QWORD *)v10 + 176) = 0;
LABEL_58:
    std::__throw_bad_weak_ptr[abi:fe180100]();
  }
  v17 = std::__shared_weak_count::lock(v15);
  *((_QWORD *)v10 + 176) = v17;
  if (!v17)
    goto LABEL_58;
  v18 = v17;
  *((_QWORD *)v10 + 177) = v12;
  *((_QWORD *)v10 + 178) = v11;
  *((_QWORD *)v10 + 179) = a3;
  v10[1440] = a4;
  *((_QWORD *)v10 + 184) = 0;
  v19 = (char *)operator new(0x38uLL);
  v20 = v10 + 1448;
  *(_QWORD *)v19 = &off_1E2521C88;
  *((_QWORD *)v19 + 1) = v16;
  *((_QWORD *)v10 + 175) = 0;
  *((_QWORD *)v10 + 176) = 0;
  *((_QWORD *)v19 + 2) = v18;
  *((_QWORD *)v19 + 3) = v12;
  *((_QWORD *)v19 + 4) = v11;
  *((_QWORD *)v10 + 177) = 0;
  *((_QWORD *)v10 + 178) = 0;
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v10 + 1432);
  *((_QWORD *)v10 + 184) = v19;
  result = AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from((_QWORD *)v10 + 181, v10 + 1480);
  v22 = *(_OWORD *)(v10 + 1480);
  *(_OWORD *)(v10 + 1496) = v22;
  *((_QWORD *)v10 + 185) = 0;
  *((_QWORD *)v10 + 186) = 0;
  if (atomic_load((unint64_t *)(v22 + 680)))
    goto LABEL_8;
  v10[1520] = 0;
  v24 = (unint64_t *)(*((_QWORD *)v10 + 187) + 680);
  do
    v25 = __ldaxr(v24);
  while (__stlxr((unint64_t)v10, v24));
  if (v25)
  {
LABEL_8:
    v26 = *((_QWORD *)v10 + 187);
    if (!*(_BYTE *)(v26 + 672))
    {
      __break(1u);
      return result;
    }
    v27 = (__int128 *)(v26 + 8);
    v28 = *(unsigned __int8 *)(v26 + 664);
    v29 = (__int128 *)(v10 + 736);
    if (*(_BYTE *)(v26 + 664))
      AMSCore::HTTPResponse::HTTPResponse((uint64_t)(v10 + 736), v27);
    else
      v30 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>((std::runtime_error *)v10 + 46, (uint64_t)v27);
    v32 = v10 + 16;
    v10[1392] = v28;
    if (v10[688])
    {
      if (v10[680])
        AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(v10 + 24));
      else
        ((void (*)(char *, __n128))**v13)(v10 + 24, v30);
      v10[688] = 0;
      v28 = v10[1392];
    }
    v34 = (std::runtime_error *)(v10 + 24);
    if (v28)
      AMSCore::HTTPResponse::HTTPResponse((uint64_t)v34, v29);
    else
      v35 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v34, (uint64_t)v29);
    v10[680] = v28;
    v10[688] = 1;
    if (v10[1392])
    {
      AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v29);
      v36 = *((_QWORD *)v10 + 188);
      if (!v36)
        goto LABEL_34;
    }
    else
    {
      (**(void (***)(__int128 *, __n128))v29)(v29, v35);
      v36 = *((_QWORD *)v10 + 188);
      if (!v36)
        goto LABEL_34;
    }
    v37 = (unint64_t *)(v36 + 8);
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      v39 = (std::__shared_weak_count *)*((_QWORD *)v10 + 188);
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
LABEL_34:
    v40 = (std::__shared_weak_count *)*((_QWORD *)v10 + 186);
    if (v40)
    {
      p_shared_owners = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldaxr(p_shared_owners);
      while (__stlxr(v42 - 1, p_shared_owners));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    v43 = (_QWORD *)*((_QWORD *)v10 + 184);
    if (v43 == v20)
    {
      v44 = 4;
    }
    else
    {
      if (!v43)
      {
LABEL_44:
        v45 = (std::__shared_weak_count *)*((_QWORD *)v10 + 178);
        if (!v45)
          goto LABEL_48;
        v46 = (unint64_t *)&v45->__shared_owners_;
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
          v48 = (std::__shared_weak_count *)*((_QWORD *)v10 + 176);
          if (v48)
          {
LABEL_49:
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldaxr(v49);
            while (__stlxr(v50 - 1, v49));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
        }
        else
        {
LABEL_48:
          v48 = (std::__shared_weak_count *)*((_QWORD *)v10 + 176);
          if (v48)
            goto LABEL_49;
        }
        v11 = 0;
LABEL_55:
        *((_QWORD *)v10 + 189) = v11;
        *((_QWORD *)v10 + 92) = v32;
        *(_QWORD *)v10 = 0;
        return AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::Awaiter::await_suspend(v29);
      }
      v44 = 5;
      v20 = (_QWORD *)*((_QWORD *)v10 + 184);
    }
    (*(void (**)(_QWORD *))(*v20 + 8 * v44))(v20);
    goto LABEL_44;
  }
  return result;
}

void sub_18C98A690(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, AMSCore::HTTPError *a10)
{
  __cxa_begin_catch(a1);
  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::unhandled_exception(a10);
}

void sub_18C98A6FC()
{
  __cxa_end_catch();
  JUMPOUT(0x18C98A64CLL);
}

_BYTE *AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t **v10;
  uint64_t v11;
  _BYTE *result;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  __int128 *v17;
  int v18;
  __n128 v19;
  std::runtime_error *v20;
  __int128 *v21;
  __n128 v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  __int128 v26;

  v4 = operator new(0x5D8uLL);
  v5 = (unint64_t)v4;
  *v4 = AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from;
  v4[1] = AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from;
  v6 = v4 + 180;
  v7 = a1 + 3;
  v8 = (_QWORD *)a1[3];
  if (!v8)
  {
    v7 = v4 + 183;
    goto LABEL_5;
  }
  if (v8 != a1)
  {
    v4[183] = v8;
LABEL_5:
    *v7 = 0;
    goto LABEL_7;
  }
  v4[183] = v6;
  (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v6);
LABEL_7:
  AMSCore::TaskCounter::TaskCounter((AMSCore::TaskCounter *)(v5 + 16));
  *(_BYTE *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 688) = 0;
  *(_QWORD *)(v5 + 696) = 0;
  *(_QWORD *)(v5 + 728) = 0;
  std::shared_ptr<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,void>(&v26, v5 + 16);
  *a2 = v26;
  v9 = operator new(0x2C0uLL);
  v10 = (unint64_t **)(v5 + 1472);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = &off_1E2522EE0;
  bzero(v9 + 3, 0x2A8uLL);
  *(_QWORD *)(v5 + 1472) = v9 + 3;
  *(_QWORD *)(v5 + 1480) = v9;
  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion((uint64_t *)(v5 + 1472), (_QWORD *)(v5 + 1400));
  v11 = *(_QWORD *)(v5 + 1464);
  if (!v11)
    std::__throw_bad_function_call[abi:fe180100]();
  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v11 + 48))(v11, v5 + 1400);
  result = (_BYTE *)AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion(v5 + 1400);
  if (atomic_load(*v10))
    goto LABEL_12;
  *(_BYTE *)(v5 + 1488) = 0;
  v14 = *(unint64_t **)(v5 + 1472);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v5, v14));
  if (v15)
  {
LABEL_12:
    v16 = *v10;
    if (!*((_BYTE *)*v10 + 672))
    {
      __break(1u);
      return result;
    }
    v17 = (__int128 *)(v16 + 1);
    v18 = *((unsigned __int8 *)v16 + 664);
    if (*((_BYTE *)v16 + 664))
      AMSCore::HTTPResponse::HTTPResponse(v5 + 736, v17);
    else
      v19 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>((std::runtime_error *)(v5 + 736), (uint64_t)v17);
    *(_BYTE *)(v5 + 1392) = v18;
    if (*(_BYTE *)(v5 + 688))
    {
      if (*(_BYTE *)(v5 + 680))
        AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(v5 + 24));
      else
        (**(void (***)(uint64_t, __n128))(v5 + 24))(v5 + 24, v19);
      *(_BYTE *)(v5 + 688) = 0;
      v18 = *(unsigned __int8 *)(v5 + 1392);
    }
    v20 = (std::runtime_error *)(v5 + 24);
    v21 = (__int128 *)(v5 + 736);
    if (v18)
      AMSCore::HTTPResponse::HTTPResponse((uint64_t)v20, v21);
    else
      v22 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v20, (uint64_t)v21);
    *(_BYTE *)(v5 + 680) = v18;
    *(_BYTE *)(v5 + 688) = 1;
    if (*(_BYTE *)(v5 + 1392))
    {
      AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(v5 + 736));
      v23 = *(std::__shared_weak_count **)(v5 + 1480);
      if (!v23)
        goto LABEL_32;
    }
    else
    {
      (**(void (***)(uint64_t, __n128))(v5 + 736))(v5 + 736, v22);
      v23 = *(std::__shared_weak_count **)(v5 + 1480);
      if (!v23)
      {
LABEL_32:
        *(_QWORD *)(v5 + 736) = v5 + 16;
        *(_QWORD *)v5 = 0;
        *(_BYTE *)(v5 + 1488) = 1;
        return AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::Awaiter::await_suspend((_BYTE *)(v5 + 736));
      }
    }
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    goto LABEL_32;
  }
  return result;
}

void sub_18C98A994(void *a1)
{
  AMSCore::HTTPError *v1;
  uint64_t v2;

  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](v2);
  __cxa_begin_catch(a1);
  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::unhandled_exception(v1);
}

void sub_18C98A9CC()
{
  __cxa_end_catch();
  JUMPOUT(0x18C98A94CLL);
}

void sub_18C98A9D4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  AMSCore::TaskCounter *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::ValuePromise::~ValuePromise(v2);
  v5 = (_QWORD *)v1[183];
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
    v3 = (_QWORD *)v1[183];
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0::~$_0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v5)
      return a1;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v5)
      return a1;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  return a1;
}

void AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::unhandled_exception(AMSCore::HTTPError *a1)
{
  AMSCore::HTTPError::makeFromCurrentException(a1);
}

void sub_18C98AAE4()
{
  void (***v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  std::runtime_error v3[2];
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[26];
  __int128 v25;
  uint64_t v26;
  char v27;
  std::runtime_error v28[26];
  std::runtime_error v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[26];
  __int128 v46;
  uint64_t v47;
  char v48;

  std::runtime_error::runtime_error(v29, v3);
  v29[1] = v3[1];
  v30 = v4;
  v31 = v5;
  v32 = v6;
  if (v6)
  {
    *(_QWORD *)(v5 + 16) = v1 + 40;
    v4 = v2 + 40;
    *(_QWORD *)(v2 + 40) = 0;
    *(_QWORD *)(v2 + 48) = 0;
  }
  else
  {
    v30 = v1 + 40;
  }
  *(_OWORD *)(v1 + 56) = v7;
  v7 = 0uLL;
  v29[0].__vftable = (std::runtime_error_vtbl *)&off_1E2521420;
  LOBYTE(v33) = 0;
  v35 = 0;
  if (v10)
  {
    v33 = v8;
    v34 = v9;
    v9 = 0;
    v8 = 0uLL;
    v35 = 1;
  }
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(v2 + 136);
  *(_OWORD *)(v1 + 152) = *(_OWORD *)(v2 + 152);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)(v2 + 168);
  *(_OWORD *)(v1 + 177) = *(_OWORD *)(v2 + 177);
  *(_OWORD *)(v1 + 104) = v11;
  *(_OWORD *)(v1 + 120) = v12;
  *(_OWORD *)(v1 + 200) = *(_OWORD *)(v2 + 200);
  v36 = v15;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  *(_OWORD *)&v45[10] = *(_OWORD *)&v24[10];
  v43 = v22;
  v44 = v23;
  *(_OWORD *)v45 = *(_OWORD *)v24;
  v39 = v18;
  v40 = v19;
  v41 = v20;
  v42 = v21;
  v37 = v16;
  v38 = v17;
  LOBYTE(v46) = 0;
  v48 = 0;
  if (v27)
  {
    v46 = v25;
    v47 = v26;
    v26 = 0;
    v25 = 0uLL;
    v48 = 1;
  }
  std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v28, (uint64_t)v29);
  AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v29);
  if (*((_BYTE *)v0 + 672))
  {
    if (*((_BYTE *)v0 + 664))
      AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(v0 + 1));
    else
      (*v0[1])((uint64_t)(v0 + 1));
    *((_BYTE *)v0 + 672) = 0;
  }
  std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>((std::runtime_error *)(v0 + 1), (uint64_t)v28);
  *((_BYTE *)v0 + 664) = 0;
  *((_BYTE *)v0 + 672) = 1;
  AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v28);
  AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v3);
}

_BYTE *AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::Awaiter::await_suspend(_BYTE *result)
{
  _BYTE *v1;
  unint64_t *v2;
  void (**v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  char v7;
  __n128 v8;
  uint64_t v9;
  std::runtime_error v10[41];
  char v11;
  _BYTE v12[24];
  _BYTE *v13;
  uint64_t v14;

  v1 = result;
  v14 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t *)(*(_QWORD *)result + 680);
  do
    v3 = (void (**)(_QWORD))__ldaxr(v2);
  while (__stlxr(1uLL, v2));
  if (v3)
  {
    if (v3 == (void (**)(_QWORD))2)
      return (_BYTE *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)result - 8))(*(_QWORD *)result - 16);
    v4 = *(_QWORD *)result;
    result = *(_BYTE **)(*(_QWORD *)result + 712);
    if (result)
    {
      if (result == (_BYTE *)(v4 + 688))
      {
        v13 = v12;
        result = (_BYTE *)(*(uint64_t (**)(_BYTE *, _BYTE *))(*(_QWORD *)result + 24))(result, v12);
      }
      else
      {
        v13 = result;
        *(_QWORD *)(v4 + 712) = 0;
      }
    }
    else
    {
      v13 = 0;
    }
    if (v13)
    {
      v5 = *(_QWORD *)v1;
      if (!*(_BYTE *)(*(_QWORD *)v1 + 672))
      {
        __break(1u);
        return result;
      }
      v6 = (__int128 *)(v5 + 8);
      v7 = *(_BYTE *)(v5 + 664);
      if (v7)
        AMSCore::HTTPResponse::HTTPResponse((uint64_t)v10, v6);
      else
        v8 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v10, (uint64_t)v6);
      v11 = v7;
      if (!v13)
        std::__throw_bad_function_call[abi:fe180100]();
      (*(void (**)(_BYTE *, std::runtime_error *, __n128))(*(_QWORD *)v13 + 48))(v13, v10, v8);
      if (v11)
        AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v10);
      else
        ((void (*)(std::runtime_error *))v10[0].~runtime_error)(v10);
    }
    else
    {
      (*v3)(v3);
    }
    result = v13;
    if (v13 == v12)
    {
      v9 = 4;
      result = v12;
    }
    else
    {
      if (!v13)
        return result;
      v9 = 5;
    }
    return (_BYTE *)(*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v9))();
  }
  return result;
}

void sub_18C98AE60(_Unwind_Exception *a1, int a2)
{
  if (a2)
    __clang_call_terminate(a1);
  _Unwind_Resume(a1);
}

void AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::ValuePromise::~ValuePromise(AMSCore::TaskCounter *this)
{
  char *v2;
  char *v3;
  uint64_t v4;
  AMSCore::HTTPResponse *v5;

  v2 = (char *)this + 688;
  v3 = (char *)*((_QWORD *)this + 89);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  if (*((_BYTE *)this + 672))
  {
    v5 = (AMSCore::TaskCounter *)((char *)this + 8);
    if (*((_BYTE *)this + 664))
      AMSCore::HTTPResponse::~HTTPResponse(v5);
    else
      (**(void (***)(AMSCore::HTTPResponse *))v5)(v5);
  }
  AMSCore::TaskCounter::~TaskCounter(this);
}

pthread_t std::__stop_state::__remove_callback[abi:fe180100](uint64_t a1, _QWORD *a2)
{
  unsigned int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v8;
  pthread_t result;
  _opaque_pthread_t *v10;
  unsigned int v11;
  _BYTE *v12;
  __int128 v13;
  _QWORD *v14;
  __int128 v15;

  v4 = *(_DWORD *)a1;
  do
  {
    while (1)
    {
      v5 = v4;
      if ((v4 & 2) != 0)
      {
        do
        {
          *(_QWORD *)&v13 = a1;
          *((_QWORD *)&v13 + 1) = v5;
          v14 = (_QWORD *)a1;
          v15 = v13;
          std::__libcpp_thread_poll_with_backoff[abi:fe180100]<std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int> &,std::__libcpp_atomic_wait_backoff_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int>> &>((uint64_t)&v13, (uint64_t)&v14, 0);
          v5 = *(_DWORD *)a1;
        }
        while ((*(_DWORD *)a1 & 2) != 0);
      }
      v4 = __ldaxr((unsigned int *)a1);
      if (v4 == v5)
        break;
      __clrex();
    }
  }
  while (__stxr(v5 | 2, (unsigned int *)a1));
  v6 = (_QWORD *)a2[1];
  if (v6)
  {
    *v6 = *a2;
    v7 = *a2;
    if (!*a2)
    {
      do
LABEL_10:
        v8 = __ldxr((unsigned int *)a1);
      while (__stlxr(v8 & 0xFFFFFFFD, (unsigned int *)a1));
      return (pthread_t)MEMORY[0x18D789A68](a1);
    }
LABEL_9:
    *(_QWORD *)(v7 + 8) = v6;
    goto LABEL_10;
  }
  if (*(_QWORD **)(a1 + 8) == a2)
  {
    v7 = *a2;
    *(_QWORD *)(a1 + 8) = *a2;
    if (!v7)
      goto LABEL_10;
    goto LABEL_9;
  }
  v10 = *(_opaque_pthread_t **)(a1 + 16);
  do
    v11 = __ldxr((unsigned int *)a1);
  while (__stlxr(v11 & 0xFFFFFFFD, (unsigned int *)a1));
  MEMORY[0x18D789A68](a1);
  result = pthread_self();
  if (!result)
  {
    if (!v10)
      goto LABEL_19;
LABEL_24:
    *(_QWORD *)&v13 = a2 + 3;
    BYTE8(v13) = 0;
    HIDWORD(v13) = 2;
    v14 = a2 + 3;
    v15 = v13;
    return (pthread_t)std::__libcpp_thread_poll_with_backoff[abi:fe180100]<std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,BOOL> &,std::__libcpp_atomic_wait_backoff_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,BOOL>> &>((uint64_t)&v13, (uint64_t)&v14, 0);
  }
  if (!v10 || result != v10)
    goto LABEL_24;
LABEL_19:
  v12 = (_BYTE *)a2[4];
  if (v12)
    *v12 = 1;
  return result;
}

BOOL std::__libcpp_thread_poll_with_backoff[abi:fe180100]<std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int> &,std::__libcpp_atomic_wait_backoff_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int>> &>(uint64_t a1, uint64_t a2, std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep a3)
{
  std::chrono::steady_clock::time_point v6;
  unsigned int v7;
  unsigned int *v8;
  int v9;
  unsigned int v10;
  int v11;
  std::chrono::steady_clock::time_point v12;
  std::__cxx_contention_t v13;
  unsigned int *v14;
  int v15;
  unsigned int v16;

  v6.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  v7 = 0;
  while (1)
  {
    v8 = *(unsigned int **)a1;
    v9 = *(_DWORD *)(a1 + 12);
    if ((v9 - 1) < 2 || v9 == 5)
      v10 = atomic_load(v8);
    else
      v10 = *v8;
    v11 = *(_DWORD *)(a1 + 8);
    if (v10 != v11)
      break;
    if (v7 <= 0x3F)
    {
      ++v7;
    }
    else
    {
      v12.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ - v6.__d_.__rep_;
      if (a3 && v12.__d_.__rep_ > a3)
        return v10 != v11;
      if (v12.__d_.__rep_ < 64001)
      {
        if (v12.__d_.__rep_ >= 4001)
          sched_yield();
      }
      else
      {
        v13 = std::__libcpp_atomic_monitor(*(const void **)a2);
        v14 = *(unsigned int **)(a2 + 8);
        v15 = *(_DWORD *)(a2 + 20);
        if ((v15 - 1) < 2 || v15 == 5)
          v16 = atomic_load(v14);
        else
          v16 = *v14;
        if (v16 != *(_DWORD *)(a2 + 16))
          return v10 != v11;
        std::__libcpp_atomic_wait(*(const void **)a2, v13);
      }
    }
  }
  return v10 != v11;
}

uint64_t std::__cxx_atomic_compare_exchange_weak[abi:fe180100]<unsigned int>(unsigned int *a1, unsigned int *a2, unsigned int a3, int a4, int a5)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  char v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  char v13;
  unsigned int v14;
  char v15;
  unsigned int v16;
  char v17;
  uint64_t result;
  unsigned int v19;
  char v20;
  unsigned int v21;
  char v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  char v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  char v32;
  unsigned int v33;
  char v34;
  unsigned int v35;
  char v36;

  if (a5 == 4)
    v5 = 2;
  else
    v5 = a5;
  if (a5 == 3)
    v5 = 0;
  switch(a4)
  {
    case 1:
    case 2:
      if ((v5 - 1) < 2)
      {
        v6 = *a2;
        v7 = __ldaxr(a1);
        if (v7 != v6)
        {
          __clrex();
          goto LABEL_120;
        }
        if (__stxr(a3, a1))
          goto LABEL_120;
        return 1;
      }
      if (v5 == 5)
      {
        v16 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v16)
        {
          if (!__stlxr(a3, a1))
          {
            v17 = 1;
LABEL_70:
            if ((v17 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v17 = 0;
        goto LABEL_70;
      }
      v27 = *a2;
      v7 = __ldaxr(a1);
      if (v7 == v27)
      {
        if (!__stxr(a3, a1))
        {
          v28 = 1;
          goto LABEL_86;
        }
      }
      else
      {
        __clrex();
      }
      v28 = 0;
LABEL_86:
      if ((v28 & 1) == 0)
        goto LABEL_120;
      return 1;
    case 3:
      if ((v5 - 1) < 2)
      {
        v10 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v10)
        {
          if (!__stlxr(a3, a1))
          {
            v11 = 1;
LABEL_58:
            if ((v11 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v11 = 0;
        goto LABEL_58;
      }
      if (v5 == 5)
      {
        v21 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v21)
        {
          if (!__stlxr(a3, a1))
          {
            v22 = 1;
LABEL_94:
            if ((v22 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v22 = 0;
        goto LABEL_94;
      }
      v31 = *a2;
      v7 = __ldxr(a1);
      if (v7 == v31)
      {
        if (!__stlxr(a3, a1))
        {
          v32 = 1;
          goto LABEL_110;
        }
      }
      else
      {
        __clrex();
      }
      v32 = 0;
LABEL_110:
      if ((v32 & 1) == 0)
        goto LABEL_120;
      return 1;
    case 4:
      if ((v5 - 1) < 2)
      {
        v12 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v12)
        {
          if (!__stlxr(a3, a1))
          {
            v13 = 1;
LABEL_62:
            if ((v13 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v13 = 0;
        goto LABEL_62;
      }
      if (v5 == 5)
      {
        v23 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v23)
        {
          if (!__stlxr(a3, a1))
          {
            v24 = 1;
LABEL_98:
            if ((v24 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v24 = 0;
        goto LABEL_98;
      }
      v33 = *a2;
      v7 = __ldaxr(a1);
      if (v7 == v33)
      {
        if (!__stlxr(a3, a1))
        {
          v34 = 1;
          goto LABEL_114;
        }
      }
      else
      {
        __clrex();
      }
      v34 = 0;
LABEL_114:
      if ((v34 & 1) == 0)
        goto LABEL_120;
      return 1;
    case 5:
      if ((v5 - 1) < 2)
      {
        v14 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v14)
        {
          if (!__stlxr(a3, a1))
          {
            v15 = 1;
LABEL_66:
            if ((v15 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v15 = 0;
        goto LABEL_66;
      }
      if (v5 == 5)
      {
        v25 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v25)
        {
          if (!__stlxr(a3, a1))
          {
            v26 = 1;
LABEL_102:
            if ((v26 & 1) == 0)
              goto LABEL_120;
            return 1;
          }
        }
        else
        {
          __clrex();
        }
        v26 = 0;
        goto LABEL_102;
      }
      v35 = *a2;
      v7 = __ldaxr(a1);
      if (v7 == v35)
      {
        if (!__stlxr(a3, a1))
        {
          v36 = 1;
          goto LABEL_118;
        }
      }
      else
      {
        __clrex();
      }
      v36 = 0;
LABEL_118:
      if ((v36 & 1) == 0)
        goto LABEL_120;
      return 1;
    default:
      if ((v5 - 1) < 2)
      {
        v8 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v8)
        {
          if (!__stxr(a3, a1))
          {
            v9 = 1;
            goto LABEL_54;
          }
        }
        else
        {
          __clrex();
        }
        v9 = 0;
LABEL_54:
        if ((v9 & 1) != 0)
          return 1;
LABEL_120:
        result = 0;
        *a2 = v7;
        return result;
      }
      if (v5 == 5)
      {
        v19 = *a2;
        v7 = __ldaxr(a1);
        if (v7 == v19)
        {
          if (!__stlxr(a3, a1))
          {
            v20 = 1;
            goto LABEL_90;
          }
        }
        else
        {
          __clrex();
        }
        v20 = 0;
LABEL_90:
        if ((v20 & 1) != 0)
          return 1;
        goto LABEL_120;
      }
      v29 = *a2;
      v7 = __ldxr(a1);
      if (v7 == v29)
      {
        if (!__stxr(a3, a1))
        {
          v30 = 1;
          goto LABEL_106;
        }
      }
      else
      {
        __clrex();
      }
      v30 = 0;
LABEL_106:
      if ((v30 & 1) != 0)
        return 1;
      goto LABEL_120;
  }
}

BOOL std::__libcpp_thread_poll_with_backoff[abi:fe180100]<std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,BOOL> &,std::__libcpp_atomic_wait_backoff_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<BOOL,std::__cxx_atomic_base_impl<BOOL>>,BOOL>> &>(uint64_t a1, uint64_t a2, std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep a3)
{
  std::chrono::steady_clock::time_point v6;
  unsigned int v7;
  unsigned __int8 *v8;
  int v9;
  unsigned __int8 v10;
  int v11;
  int v12;
  std::chrono::steady_clock::time_point v13;
  std::__cxx_contention_t v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int8 v17;

  v6.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  v7 = 0;
  while (1)
  {
    v8 = *(unsigned __int8 **)a1;
    v9 = *(_DWORD *)(a1 + 12);
    if ((v9 - 1) < 2 || v9 == 5)
      v10 = atomic_load(v8);
    else
      v10 = *v8;
    v11 = v10 & 1;
    v12 = *(unsigned __int8 *)(a1 + 8);
    if (v11 != v12)
      break;
    if (v7 <= 0x3F)
    {
      ++v7;
    }
    else
    {
      v13.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ - v6.__d_.__rep_;
      if (a3 && v13.__d_.__rep_ > a3)
        return v11 != v12;
      if (v13.__d_.__rep_ < 64001)
      {
        if (v13.__d_.__rep_ >= 4001)
          sched_yield();
      }
      else
      {
        v14 = std::__libcpp_atomic_monitor(*(const void **)a2);
        v15 = *(unsigned __int8 **)(a2 + 8);
        v16 = *(_DWORD *)(a2 + 20);
        if ((v16 - 1) < 2 || v16 == 5)
          v17 = atomic_load(v15);
        else
          v17 = *v15;
        if ((v17 & 1) != *(_BYTE *)(a2 + 16))
          return v11 != v12;
        std::__libcpp_atomic_wait(*(const void **)a2, v14);
      }
    }
  }
  return v11 != v12;
}

_QWORD *std::shared_ptr<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,void>(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = (_QWORD *)operator new();
  *v4 = &off_1E2523420;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_18C98B6A4(void *a1)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  __cxa_begin_catch(a1);
  v2 = (unint64_t *)(v1 + 680);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    (*(void (**)(uint64_t))(v1 - 8))(v1 - 16);
  __cxa_rethrow();
}

void sub_18C98B6D8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void std::__shared_ptr_pointer<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise *,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise *,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>>::__on_zero_shared(uint64_t result)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  v1 = *(_QWORD *)(result + 24);
  v2 = (unint64_t *)(v1 + 680);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v1 - 8))(v1 - 16);
  return result;
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise *,AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE7Promise17get_return_objectEvE13DetachPromise"
    || ((v3 & (unint64_t)"ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE7Promise17get_return_objectEvE13DetachPromise")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

__n128 std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(std::runtime_error *a1, uint64_t a2)
{
  std::runtime_error *v3;
  _QWORD *v4;
  uint64_t v5;
  std::runtime_error_vtbl *p_imp;
  std::runtime_error_vtbl *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  std::runtime_error v13;
  std::runtime_error v14;
  std::runtime_error v15;
  std::runtime_error v16;
  __n128 result;
  std::runtime_error v18;
  std::runtime_error v19;

  v3 = std::runtime_error::runtime_error(a1, (const std::runtime_error *)a2);
  v3->__vftable = (std::runtime_error_vtbl *)(MEMORY[0x1E0DE4F90] + 16);
  v3[1] = *(std::runtime_error *)(a2 + 16);
  v3->__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v3[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  v3[2].__imp_.__imp_ = (const char *)v5;
  p_imp = (std::runtime_error_vtbl *)&v3[2].__imp_;
  v7 = *(std::runtime_error_vtbl **)(a2 + 48);
  v3[3].__vftable = v7;
  if (v7)
  {
    *(_QWORD *)(v5 + 16) = p_imp;
    *(_QWORD *)(a2 + 32) = v4;
    *v4 = 0;
    *(_QWORD *)(a2 + 48) = 0;
  }
  else
  {
    v3[2].__vftable = p_imp;
  }
  *(std::runtime_error *)((char *)v3 + 56) = *(std::runtime_error *)(a2 + 56);
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  v3->__vftable = (std::runtime_error_vtbl *)&off_1E2521420;
  LOBYTE(v3[4].__imp_.__imp_) = 0;
  LOBYTE(v3[6].__vftable) = 0;
  if (*(_BYTE *)(a2 + 96))
  {
    v8 = *(_OWORD *)(a2 + 72);
    v3[5].__imp_.__imp_ = *(const char **)(a2 + 88);
    *(_OWORD *)&v3[4].__imp_.__imp_ = v8;
    *(_QWORD *)(a2 + 80) = 0;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 72) = 0;
    LOBYTE(v3[6].__vftable) = 1;
  }
  v9 = *(_OWORD *)(a2 + 104);
  *(std::runtime_error *)((char *)v3 + 120) = *(std::runtime_error *)(a2 + 120);
  *(_OWORD *)&v3[6].__imp_.__imp_ = v9;
  v10 = *(_OWORD *)(a2 + 136);
  v11 = *(_OWORD *)(a2 + 152);
  v12 = *(_OWORD *)(a2 + 168);
  *(std::runtime_error *)((char *)v3 + 177) = *(std::runtime_error *)(a2 + 177);
  *(_OWORD *)&v3[10].__imp_.__imp_ = v12;
  *(_OWORD *)&v3[9].__imp_.__imp_ = v11;
  *(_OWORD *)&v3[8].__imp_.__imp_ = v10;
  v3[13].__vftable = 0;
  v3[13].__imp_.__imp_ = 0;
  v3[12].__imp_.__imp_ = 0;
  *(std::runtime_error *)((char *)v3 + 200) = *(std::runtime_error *)(a2 + 200);
  v3[13].__imp_.__imp_ = *(const char **)(a2 + 216);
  *(_QWORD *)(a2 + 208) = 0;
  *(_QWORD *)(a2 + 216) = 0;
  *(_QWORD *)(a2 + 200) = 0;
  v13 = *(std::runtime_error *)(a2 + 240);
  v3[14] = *(std::runtime_error *)(a2 + 224);
  v3[15] = v13;
  v14 = *(std::runtime_error *)(a2 + 256);
  v15 = *(std::runtime_error *)(a2 + 272);
  v16 = *(std::runtime_error *)(a2 + 304);
  v3[18] = *(std::runtime_error *)(a2 + 288);
  v3[19] = v16;
  v3[16] = v14;
  v3[17] = v15;
  result = *(__n128 *)(a2 + 320);
  v18 = *(std::runtime_error *)(a2 + 336);
  v19 = *(std::runtime_error *)(a2 + 352);
  *(std::runtime_error *)((char *)v3 + 362) = *(std::runtime_error *)(a2 + 362);
  v3[21] = v18;
  v3[22] = v19;
  v3[20] = (std::runtime_error)result;
  LOBYTE(v3[24].__vftable) = 0;
  LOBYTE(v3[25].__imp_.__imp_) = 0;
  if (*(_BYTE *)(a2 + 408))
  {
    result = *(__n128 *)(a2 + 384);
    v3[25].__vftable = *(std::runtime_error_vtbl **)(a2 + 400);
    v3[24] = (std::runtime_error)result;
    *(_QWORD *)(a2 + 392) = 0;
    *(_QWORD *)(a2 + 400) = 0;
    *(_QWORD *)(a2 + 384) = 0;
    LOBYTE(v3[25].__imp_.__imp_) = 1;
  }
  return result;
}

void AMSCore::HTTPError::~HTTPError(AMSCore::HTTPError *this)
{
  AMSCore::HTTPError::~HTTPError(this);
  JUMPOUT(0x18D789BDCLL);
}

{
  void **v2;
  void **v3;
  void **v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *(_QWORD *)this = &off_1E2521420;
  if (*((_BYTE *)this + 408) && *((char *)this + 407) < 0)
  {
    operator delete(*((void **)this + 48));
    v2 = (void **)*((_QWORD *)this + 25);
    if (!v2)
      goto LABEL_11;
  }
  else
  {
    v2 = (void **)*((_QWORD *)this + 25);
    if (!v2)
      goto LABEL_11;
  }
  v3 = (void **)*((_QWORD *)this + 26);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 1) < 0)
        operator delete(*(v3 - 3));
      v3 -= 3;
    }
    while (v3 != v2);
    v4 = (void **)*((_QWORD *)this + 25);
  }
  *((_QWORD *)this + 26) = v2;
  operator delete(v4);
LABEL_11:
  if (*((_BYTE *)this + 96) && *((char *)this + 95) < 0)
    operator delete(*((void **)this + 9));
  *(_QWORD *)this = off_1E2521330;
  v5 = (std::__shared_weak_count *)*((_QWORD *)this + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)this + 32, *((unsigned int **)this + 5));
  JUMPOUT(0x18D7898ACLL);
}

void AMSCore::HTTPTransactionMetrics::~HTTPTransactionMetrics(void **this)
{
  void **v2;
  void **v3;
  void **v4;

  if (*((_BYTE *)this + 336) && *((char *)this + 335) < 0)
  {
    operator delete(this[39]);
    v2 = (void **)this[16];
    if (!v2)
      goto LABEL_11;
  }
  else
  {
    v2 = (void **)this[16];
    if (!v2)
      goto LABEL_11;
  }
  v3 = (void **)this[17];
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 1) < 0)
        operator delete(*(v3 - 3));
      v3 -= 3;
    }
    while (v3 != v2);
    v4 = (void **)this[16];
  }
  this[17] = v2;
  operator delete(v4);
LABEL_11:
  if (*((_BYTE *)this + 24))
  {
    if (*((char *)this + 23) < 0)
      operator delete(*this);
  }
}

uint64_t AMSCore::HTTPError::HTTPError<char const(&)[46]>(uint64_t a1, uint64_t a2, const std::error_category *a3, const char *a4)
{
  std::string __what_arg;
  std::error_code v9;

  AMSCore::StringUtils::join<char [46]>(a4, &__what_arg);
  *(_QWORD *)&v9.__val_ = a2;
  v9.__cat_ = a3;
  std::system_error::system_error((std::system_error *)a1, v9, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 32) = a1 + 40;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)a1 = &off_1E2521420;
  *(_BYTE *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 248) = 0;
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 296) = 0;
  *(_BYTE *)(a1 + 304) = 0;
  *(_BYTE *)(a1 + 312) = 0;
  *(_BYTE *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 328) = 0;
  *(_BYTE *)(a1 + 336) = 0;
  *(_BYTE *)(a1 + 344) = 0;
  *(_BYTE *)(a1 + 360) = 0;
  *(_BYTE *)(a1 + 368) = 0;
  *(_WORD *)(a1 + 376) = 0;
  *(_BYTE *)(a1 + 384) = 0;
  *(_BYTE *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 352) = 0;
  return a1;
}

void sub_18C98BC28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::StringUtils::join<char [46]>@<X0>(const char *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;
  uint64_t v10;
  size_t v11;
  uint64_t v13;
  _QWORD v14[8];
  void *__p[2];
  __int128 v16;
  int v17;
  uint64_t v18[19];

  v4 = MEMORY[0x1E0DE4FE0];
  v5 = MEMORY[0x1E0DE4FE0] + 64;
  v6 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v7 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v8 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v18[0] = MEMORY[0x1E0DE4FE0] + 64;
  v13 = v7;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v7 - 24)) = v8;
  v9 = (std::ios_base *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24));
  std::ios_base::init(v9, v14);
  v9[1].__vftable = 0;
  v9[1].__fmtflags_ = -1;
  v13 = v4 + 24;
  v18[0] = v5;
  std::streambuf::basic_streambuf();
  v10 = MEMORY[0x1E0DE4FB8];
  v14[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v16 = 0u;
  v17 = 16;
  v11 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v13, (uint64_t)a1, v11);
  std::stringbuf::str[abi:fe180100]((uint64_t)v14, a2);
  v13 = *v6;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24)) = v6[3];
  v14[0] = v10 + 16;
  if (SBYTE7(v16) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v18);
}

void sub_18C98BD88(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

void std::__throw_bad_array_new_length[abi:fe180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

uint64_t AMSCore::HTTPResponse::HTTPResponse(uint64_t result, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  std::runtime_error *v32;
  std::runtime_error *v33;
  char v34;
  std::runtime_error_vtbl *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = result;
  *(_BYTE *)result = 0;
  *(_BYTE *)(result + 24) = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v4 = *a2;
    *(_QWORD *)(result + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)result = v4;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(result + 24) = 1;
  }
  *(_BYTE *)(result + 32) = 0;
  *(_BYTE *)(result + 56) = 0;
  if (*((_BYTE *)a2 + 56))
  {
    v5 = a2[2];
    *(_QWORD *)(result + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(result + 32) = v5;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 6) = 0;
    *((_QWORD *)a2 + 4) = 0;
    *(_BYTE *)(result + 56) = 1;
  }
  *(_BYTE *)(result + 64) = 0;
  *(_BYTE *)(result + 88) = 0;
  if (*((_BYTE *)a2 + 88))
  {
    v6 = a2[4];
    *(_QWORD *)(result + 80) = *((_QWORD *)a2 + 10);
    *(_OWORD *)(result + 64) = v6;
    *((_QWORD *)a2 + 9) = 0;
    *((_QWORD *)a2 + 10) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *(_BYTE *)(result + 88) = 1;
  }
  *(_DWORD *)(result + 96) = *((_DWORD *)a2 + 24);
  *(_QWORD *)(result + 104) = result + 104;
  *(_QWORD *)(result + 112) = result + 104;
  *(_QWORD *)(result + 120) = 0;
  if ((__int128 *)result == a2)
  {
    __break(1u);
  }
  else
  {
    v7 = *((_QWORD *)a2 + 15);
    if (v7)
    {
      v9 = *((_QWORD *)a2 + 13);
      v8 = (uint64_t *)*((_QWORD *)a2 + 14);
      v10 = *v8;
      *(_QWORD *)(v10 + 8) = *(_QWORD *)(v9 + 8);
      **(_QWORD **)(v9 + 8) = v10;
      v11 = *(_QWORD *)(result + 104);
      *(_QWORD *)(v11 + 8) = v8;
      *v8 = v11;
      *(_QWORD *)(result + 104) = v9;
      *(_QWORD *)(v9 + 8) = result + 104;
      *(_QWORD *)(result + 120) = v7;
      *((_QWORD *)a2 + 15) = 0;
    }
    v12 = a2[8];
    *(_QWORD *)(result + 144) = *((_QWORD *)a2 + 18);
    *(_OWORD *)(result + 128) = v12;
    *((_QWORD *)a2 + 17) = 0;
    *((_QWORD *)a2 + 18) = 0;
    *((_QWORD *)a2 + 16) = 0;
    *(_WORD *)(result + 152) = *((_WORD *)a2 + 76);
    v13 = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = 0;
    *(_QWORD *)(result + 160) = v13;
    *(_QWORD *)(result + 168) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = 0;
    v14 = *((_QWORD *)a2 + 22);
    *(_QWORD *)(result + 176) = v14;
    v15 = *((_QWORD *)a2 + 23);
    *(_QWORD *)(result + 184) = v15;
    *(_DWORD *)(result + 192) = *((_DWORD *)a2 + 48);
    if (v15)
    {
      v16 = *(_QWORD *)(v14 + 8);
      v17 = *(_QWORD *)(result + 168);
      if ((v17 & (v17 - 1)) != 0)
      {
        if (v16 >= v17)
          v16 %= v17;
      }
      else
      {
        v16 &= v17 - 1;
      }
      *(_QWORD *)(v13 + 8 * v16) = result + 176;
      *((_QWORD *)a2 + 22) = 0;
      *((_QWORD *)a2 + 23) = 0;
    }
    v18 = *(__int128 *)((char *)a2 + 200);
    *(_QWORD *)(result + 216) = *((_QWORD *)a2 + 27);
    *(_OWORD *)(result + 200) = v18;
    *((_QWORD *)a2 + 26) = 0;
    *((_QWORD *)a2 + 27) = 0;
    *((_QWORD *)a2 + 25) = 0;
    *(_BYTE *)(result + 224) = 0;
    *(_BYTE *)(result + 248) = 0;
    if (*((_BYTE *)a2 + 248))
    {
      v19 = a2[14];
      *(_QWORD *)(result + 240) = *((_QWORD *)a2 + 30);
      *(_OWORD *)(result + 224) = v19;
      *((_QWORD *)a2 + 29) = 0;
      *((_QWORD *)a2 + 30) = 0;
      *((_QWORD *)a2 + 28) = 0;
      *(_BYTE *)(result + 248) = 1;
    }
    v20 = a2[17];
    *(_OWORD *)(result + 256) = a2[16];
    *(_OWORD *)(result + 272) = v20;
    v21 = a2[18];
    v22 = a2[19];
    v23 = a2[20];
    *(_OWORD *)(result + 329) = *(__int128 *)((char *)a2 + 329);
    *(_OWORD *)(result + 304) = v22;
    *(_OWORD *)(result + 320) = v23;
    *(_OWORD *)(result + 288) = v21;
    *(_QWORD *)(result + 360) = 0;
    *(_QWORD *)(result + 368) = 0;
    *(_QWORD *)(result + 352) = 0;
    *(_OWORD *)(result + 352) = a2[22];
    *(_QWORD *)(result + 368) = *((_QWORD *)a2 + 46);
    *((_QWORD *)a2 + 45) = 0;
    *((_QWORD *)a2 + 46) = 0;
    *((_QWORD *)a2 + 44) = 0;
    v24 = *(__int128 *)((char *)a2 + 376);
    *(_OWORD *)(result + 392) = *(__int128 *)((char *)a2 + 392);
    *(_OWORD *)(result + 376) = v24;
    v25 = *(__int128 *)((char *)a2 + 408);
    v26 = *(__int128 *)((char *)a2 + 424);
    v27 = *(__int128 *)((char *)a2 + 440);
    *(_OWORD *)(result + 456) = *(__int128 *)((char *)a2 + 456);
    *(_OWORD *)(result + 440) = v27;
    *(_OWORD *)(result + 424) = v26;
    *(_OWORD *)(result + 408) = v25;
    v28 = *(__int128 *)((char *)a2 + 472);
    v29 = *(__int128 *)((char *)a2 + 488);
    v30 = *(__int128 *)((char *)a2 + 504);
    *(_OWORD *)(result + 514) = *(__int128 *)((char *)a2 + 514);
    *(_OWORD *)(result + 488) = v29;
    *(_OWORD *)(result + 504) = v30;
    *(_OWORD *)(result + 472) = v28;
    *(_BYTE *)(result + 536) = 0;
    *(_BYTE *)(result + 560) = 0;
    if (*((_BYTE *)a2 + 560))
    {
      v31 = *(__int128 *)((char *)a2 + 536);
      *(_QWORD *)(result + 552) = *((_QWORD *)a2 + 69);
      *(_OWORD *)(result + 536) = v31;
      *((_QWORD *)a2 + 69) = 0;
      *((_QWORD *)a2 + 68) = 0;
      *((_QWORD *)a2 + 67) = 0;
      *(_BYTE *)(result + 560) = 1;
    }
    *(_BYTE *)(result + 568) = 0;
    *(_BYTE *)(result + 648) = 0;
    if (*((_BYTE *)a2 + 648))
    {
      v32 = (std::runtime_error *)(result + 568);
      v33 = (std::runtime_error *)((char *)a2 + 568);
      v34 = *((_BYTE *)a2 + 640);
      if (v34)
      {
        *(_QWORD *)(v3 + 568) = *((_QWORD *)a2 + 71);
        v35 = (std::runtime_error_vtbl *)(v3 + 576);
        v36 = *((_QWORD *)a2 + 72);
        *(_QWORD *)(v3 + 576) = v36;
        v37 = *((_QWORD *)a2 + 73);
        *(_QWORD *)(v3 + 584) = v37;
        if (v37)
        {
          *(_QWORD *)(v36 + 16) = v35;
          v33->__vftable = (std::runtime_error_vtbl *)(a2 + 36);
          *((_QWORD *)a2 + 72) = 0;
          *((_QWORD *)a2 + 73) = 0;
        }
        else
        {
          v32->__vftable = v35;
        }
      }
      else
      {
        std::runtime_error::runtime_error(v32, v33);
        *(_OWORD *)(v3 + 584) = *(__int128 *)((char *)a2 + 584);
        *(_QWORD *)(v3 + 568) = off_1E2521330;
        *(_QWORD *)(v3 + 600) = *((_QWORD *)a2 + 75);
        v38 = v3 + 608;
        v39 = *((_QWORD *)a2 + 76);
        *(_QWORD *)(v3 + 608) = v39;
        v40 = *((_QWORD *)a2 + 77);
        *(_QWORD *)(v3 + 616) = v40;
        if (v40)
        {
          *(_QWORD *)(v39 + 16) = v38;
          *((_QWORD *)a2 + 75) = a2 + 38;
          *((_QWORD *)a2 + 76) = 0;
          *((_QWORD *)a2 + 77) = 0;
        }
        else
        {
          *(_QWORD *)(v3 + 600) = v38;
        }
        *(_OWORD *)(v3 + 624) = a2[39];
        *((_QWORD *)a2 + 79) = 0;
        *((_QWORD *)a2 + 78) = 0;
      }
      *(_BYTE *)(v3 + 640) = v34;
      *(_BYTE *)(v3 + 648) = 1;
    }
    return v3;
  }
  return result;
}

void AMSCore::HTTPResponse::~HTTPResponse(AMSCore::HTTPResponse *this)
{
  void (***v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void **v6;
  void *v7;
  void **v8;

  if (*((_BYTE *)this + 648))
  {
    v2 = (void (***)(_QWORD))((char *)this + 568);
    if (!*((_BYTE *)this + 640))
    {
      (**v2)(v2);
      if (!*((_BYTE *)this + 560))
        goto LABEL_8;
      goto LABEL_5;
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)v2, *((unsigned int **)this + 72));
  }
  if (!*((_BYTE *)this + 560))
    goto LABEL_8;
LABEL_5:
  if (*((char *)this + 559) < 0)
    operator delete(*((void **)this + 67));
LABEL_8:
  v3 = *((_QWORD *)this + 44);
  if (v3)
  {
    v4 = *((_QWORD *)this + 45);
    v5 = (void *)*((_QWORD *)this + 44);
    if (v4 != v3)
    {
      do
      {
        if (*(char *)(v4 - 1) < 0)
          operator delete(*(void **)(v4 - 24));
        v4 -= 24;
      }
      while (v4 != v3);
      v5 = (void *)*((_QWORD *)this + 44);
    }
    *((_QWORD *)this + 45) = v3;
    operator delete(v5);
  }
  if (!*((_BYTE *)this + 248) || (*((char *)this + 247) & 0x80000000) == 0)
  {
    if ((*((char *)this + 223) & 0x80000000) == 0)
      goto LABEL_19;
    goto LABEL_22;
  }
  operator delete(*((void **)this + 28));
  if (*((char *)this + 223) < 0)
  {
LABEL_22:
    operator delete(*((void **)this + 25));
    v6 = (void **)*((_QWORD *)this + 22);
    if (!v6)
      goto LABEL_23;
    while (1)
    {
LABEL_27:
      v8 = (void **)*v6;
      if (*((char *)v6 + 63) < 0)
      {
        operator delete(v6[5]);
        if (*((char *)v6 + 39) < 0)
LABEL_31:
          operator delete(v6[2]);
      }
      else if (*((char *)v6 + 39) < 0)
      {
        goto LABEL_31;
      }
      operator delete(v6);
      v6 = v8;
      if (!v8)
        goto LABEL_23;
    }
  }
LABEL_19:
  v6 = (void **)*((_QWORD *)this + 22);
  if (v6)
    goto LABEL_27;
LABEL_23:
  v7 = (void *)*((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v7)
    operator delete(v7);
  AMSCore::URL::~URL(this);
}

void AMSCore::IHTTPHeaderMap::~IHTTPHeaderMap(AMSCore::IHTTPHeaderMap *this)
{
  void **v2;
  void *v3;
  void **v4;

  v2 = (void **)*((_QWORD *)this + 2);
  if (v2)
  {
    do
    {
      v4 = (void **)*v2;
      if (*((char *)v2 + 63) < 0)
      {
        operator delete(v2[5]);
        if (*((char *)v2 + 39) < 0)
LABEL_10:
          operator delete(v2[2]);
      }
      else if (*((char *)v2 + 39) < 0)
      {
        goto LABEL_10;
      }
      operator delete(v2);
      v2 = v4;
    }
    while (v4);
  }
  v3 = *(void **)this;
  *(_QWORD *)this = 0;
  if (v3)
    operator delete(v3);
}

void AMSCore::URL::~URL(AMSCore::URL *this)
{
  uint64_t v2;
  AMSCore::URL *v3;
  uint64_t v4;
  AMSCore::URL *v5;

  if ((*((char *)this + 151) & 0x80000000) == 0)
  {
    if (!*((_QWORD *)this + 15))
      goto LABEL_6;
LABEL_5:
    v2 = *((_QWORD *)this + 13);
    v3 = (AMSCore::URL *)*((_QWORD *)this + 14);
    v4 = *(_QWORD *)v3;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v2 + 8);
    **(_QWORD **)(v2 + 8) = v4;
    *((_QWORD *)this + 15) = 0;
    if (v3 == (AMSCore::URL *)((char *)this + 104))
      goto LABEL_6;
    while (1)
    {
      v5 = (AMSCore::URL *)*((_QWORD *)v3 + 1);
      if (*((char *)v3 + 63) < 0)
      {
        operator delete(*((void **)v3 + 5));
        if (*((char *)v3 + 39) < 0)
LABEL_16:
          operator delete(*((void **)v3 + 2));
      }
      else if (*((char *)v3 + 39) < 0)
      {
        goto LABEL_16;
      }
      operator delete(v3);
      v3 = v5;
      if (v5 == (AMSCore::URL *)((char *)this + 104))
        goto LABEL_6;
    }
  }
  operator delete(*((void **)this + 16));
  if (*((_QWORD *)this + 15))
    goto LABEL_5;
LABEL_6:
  if (*((_BYTE *)this + 88) && *((char *)this + 87) < 0)
  {
    operator delete(*((void **)this + 8));
    if (!*((_BYTE *)this + 56))
      goto LABEL_18;
  }
  else if (!*((_BYTE *)this + 56))
  {
    goto LABEL_18;
  }
  if (*((char *)this + 55) < 0)
    operator delete(*((void **)this + 4));
LABEL_18:
  if (*((_BYTE *)this + 24))
  {
    if (*((char *)this + 23) < 0)
      operator delete(*(void **)this);
  }
}

void std::__throw_bad_weak_ptr[abi:fe180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x1E0DE4F80] + 16;
  __cxa_throw(exception, MEMORY[0x1E0DE4E28], MEMORY[0x1E0DE43F0]);
}

_QWORD *AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _BYTE *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v3 = a1[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v10[0] = &off_1E2521F48;
  v10[1] = v4;
  v10[2] = v3;
  v11 = v10;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  *a2 = v7;
  if (v11)
  {
    if (v11 == v10)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD *))(v10[0] + 24))(v10);
    }
    else
    {
      a2[4] = v11;
      v11 = 0;
    }
  }
  else
  {
    a2[4] = 0;
  }
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_18C98C5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a2)
    __clang_call_terminate(exception_object);
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_emplace<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E2522EE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E2522EE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

void std::__shared_ptr_emplace<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context,std::allocator<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::Context>>::__on_zero_shared(_BYTE *a1)
{
  AMSCore::HTTPResponse *v2;

  if (a1[696])
  {
    v2 = (AMSCore::HTTPResponse *)(a1 + 32);
    if (a1[688])
      AMSCore::HTTPResponse::~HTTPResponse(v2);
    else
      (**(void (***)(AMSCore::HTTPResponse *))v2)(v2);
  }
}

_QWORD *std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::~__func(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_1E2521F48;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::~__func(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_1E2521F48;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x18D789BDCLL);
}

_QWORD *std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::__clone(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_1E2521F48;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::__clone(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_1E2521F48;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::destroy(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::destroy_deallocate(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t (**std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::operator()(uint64_t a1, uint64_t a2))(__n128)
{
  return std::__invoke_void_return_wrapper<void,true>::__call[abi:fe180100]<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1} &,std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError>>((uint64_t *)(a1 + 8), a2);
}

uint64_t std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::target(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE17CompletionAwaiter13getCompletionEvEUlONSt3__18ex"
                     "pectedIS1_S2_EEE_"
    || ((v3 & (unint64_t)"ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE17CompletionAwaiter13getCompletionEvEUl"
                                "ONSt3__18expectedIS1_S2_EEE_" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE17CompletionAwaiter13getCompletionEvEUlONSt3__18expectedIS1_S2_EEE_")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7AMSCore4TaskINS_12HTTPResponseENS_9HTTPErrorEE17CompletionAwaiter13getCompletionEvEUlONSt3__18expectedIS1_S2_EEE_" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1},std::allocator<std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&>,void ()(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &)>::target_type()
{
}

uint64_t (**std::__invoke_void_return_wrapper<void,true>::__call[abi:fe180100]<AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::CompletionAwaiter::getCompletion(void)::{lambda(std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError> &&)#1} &,std::expected<AMSCore::HTTPResponse,AMSCore::HTTPError>>(uint64_t *a1, uint64_t a2))(__n128)
{
  uint64_t v3;
  std::runtime_error *v4;
  char v5;
  __n128 v6;
  uint64_t (**result)(__n128);

  v3 = *a1;
  v4 = (std::runtime_error *)(*a1 + 8);
  if (*(_BYTE *)(*a1 + 672))
  {
    if (*(_BYTE *)(v3 + 664))
      AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)(*a1 + 8));
    else
      ((void (*)(uint64_t))v4->~runtime_error)(*a1 + 8);
    *(_BYTE *)(v3 + 672) = 0;
  }
  v5 = *(_BYTE *)(a2 + 656);
  if (v5)
    AMSCore::HTTPResponse::HTTPResponse((uint64_t)v4, (__int128 *)a2);
  else
    v6 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v4, a2);
  *(_BYTE *)(v3 + 664) = v5;
  *(_BYTE *)(v3 + 672) = 1;
  do
    result = (uint64_t (**)(__n128))__ldaxr((unint64_t *)v3);
  while (__stlxr(1uLL, (unint64_t *)v3));
  if (result)
    return (uint64_t (**)(__n128))(*result)(v6);
  return result;
}

uint64_t AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t error_code;
  const std::error_category *v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  std::runtime_error v11[26];
  std::runtime_error v12[41];
  char v13;

  if (*(_QWORD *)a1)
  {
    v2 = atomic_load(*(unsigned __int8 **)a1);
    if ((v2 & 1) == 0)
    {
      error_code = AMSCore::make_error_code(1);
      AMSCore::HTTPError::HTTPError<char const(&)[30]>((uint64_t)v12, error_code, v4, "Completion was never invoked.");
      std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v11, (uint64_t)v12);
      AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v12);
      v5 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v12, (uint64_t)v11);
      v13 = 0;
      v6 = *(_QWORD *)(a1 + 32);
      if (!v6)
        std::__throw_bad_function_call[abi:fe180100]();
      (*(void (**)(uint64_t, std::runtime_error *, __n128))(*(_QWORD *)v6 + 48))(v6, v12, v5);
      if (v13)
        AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v12);
      else
        ((void (*)(std::runtime_error *))v12[0].~runtime_error)(v12);
      AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)v11);
    }
  }
  v7 = *(_QWORD **)(a1 + 32);
  if (v7 == (_QWORD *)(a1 + 8))
  {
    v8 = 4;
    v7 = (_QWORD *)(a1 + 8);
  }
  else
  {
    if (!v7)
      goto LABEL_13;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_13:
  v9 = *(unsigned __int8 **)a1;
  *(_QWORD *)a1 = 0;
  if (v9)
    MEMORY[0x18D789BDC](v9, 0x1000C4077774924);
  return a1;
}

uint64_t AMSCore::HTTPError::HTTPError<char const(&)[30]>(uint64_t a1, uint64_t a2, const std::error_category *a3, const char *a4)
{
  std::string __what_arg;
  std::error_code v9;

  AMSCore::StringUtils::join<char [30]>(a4, &__what_arg);
  *(_QWORD *)&v9.__val_ = a2;
  v9.__cat_ = a3;
  std::system_error::system_error((std::system_error *)a1, v9, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 32) = a1 + 40;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)a1 = &off_1E2521420;
  *(_BYTE *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 248) = 0;
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 296) = 0;
  *(_BYTE *)(a1 + 304) = 0;
  *(_BYTE *)(a1 + 312) = 0;
  *(_BYTE *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 328) = 0;
  *(_BYTE *)(a1 + 336) = 0;
  *(_BYTE *)(a1 + 344) = 0;
  *(_BYTE *)(a1 + 360) = 0;
  *(_BYTE *)(a1 + 368) = 0;
  *(_WORD *)(a1 + 376) = 0;
  *(_BYTE *)(a1 + 384) = 0;
  *(_BYTE *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 352) = 0;
  return a1;
}

void sub_18C98CBD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::StringUtils::join<char [30]>@<X0>(const char *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;
  uint64_t v10;
  size_t v11;
  uint64_t v13;
  _QWORD v14[8];
  void *__p[2];
  __int128 v16;
  int v17;
  uint64_t v18[19];

  v4 = MEMORY[0x1E0DE4FE0];
  v5 = MEMORY[0x1E0DE4FE0] + 64;
  v6 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v7 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v8 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v18[0] = MEMORY[0x1E0DE4FE0] + 64;
  v13 = v7;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v7 - 24)) = v8;
  v9 = (std::ios_base *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24));
  std::ios_base::init(v9, v14);
  v9[1].__vftable = 0;
  v9[1].__fmtflags_ = -1;
  v13 = v4 + 24;
  v18[0] = v5;
  std::streambuf::basic_streambuf();
  v10 = MEMORY[0x1E0DE4FB8];
  v14[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v16 = 0u;
  v17 = 16;
  v11 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v13, (uint64_t)a1, v11);
  std::stringbuf::str[abi:fe180100]((uint64_t)v14, a2);
  v13 = *v6;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24)) = v6[3];
  v14[0] = v10 + 16;
  if (SBYTE7(v16) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v18);
}

void sub_18C98CD34(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

_QWORD *std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::~__func(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = &off_1E2521C88;
  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      return a1;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      return a1;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  return a1;
}

void std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::~__func(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = &off_1E2521C88;
  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[2];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  JUMPOUT(0x18D789BDCLL);
}

__n128 std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::__clone(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  __n128 result;

  v2 = (char *)operator new(0x38uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v2 = &off_1E2521C88;
  *((_QWORD *)v2 + 1) = v4;
  *((_QWORD *)v2 + 2) = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  *((_QWORD *)v2 + 4) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

__n128 std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::__clone(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a2 = &off_1E2521C88;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(a2 + 40) = result;
  return result;
}

void std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::destroy(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::destroy_deallocate(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (std::__shared_weak_count *)__p[4];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)__p[2];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[2];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  operator delete(__p);
}

void std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  __int16 v6;
  uint64_t v7;
  id v8;
  id v9;
  std::runtime_error_vtbl *p_p;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  std::runtime_error_vtbl *v15;
  void *v16;
  uint64_t *v17;
  _QWORD *v18;
  std::__shared_weak_count *imp;
  unint64_t *v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  const char *v27;
  char v28;
  id v29;
  std::runtime_error_vtbl *v30;
  const char *v31;
  void *v32;
  void **v33;
  std::runtime_error_vtbl *v34;
  void *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  std::runtime_error_vtbl *v40;
  int locked;
  void (__cdecl *v42)(std::runtime_error *__hidden);
  unsigned int *v43;
  unsigned int v44;
  std::runtime_error_vtbl *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int v54;
  unsigned int v55;
  _QWORD *v56;
  uint64_t v57;
  void **v58;
  void *v59;
  std::runtime_error_vtbl *v60;
  uint64_t v61;
  void *v62;
  uint64_t (***v63)();
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t *v68;
  __n128 v69;
  unsigned __int8 *v70;
  unsigned __int8 v71;
  uint64_t v72;
  void **v73;
  void **v74;
  void *v75;
  unsigned int *v76;
  unsigned int v77;
  unsigned int v78;
  void *context;
  void *v80;
  void *v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  id from[2];
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  void *v100;
  void **v101;
  uint64_t v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  int v119;
  char v120;
  char v121;
  __int16 v122;
  void *v123;
  char v124;
  char v125;
  std::runtime_error v126;
  void *v127;
  id v128;
  void *v129;
  std::runtime_error to[4];
  char v131;
  _QWORD v132[5];
  std::runtime_error_vtbl *v133;
  id location;
  _QWORD aBlock[4];
  id v136;
  uint64_t *v137;
  _QWORD *v138;
  __int16 v139;
  _QWORD v140[3];
  char v141;
  uint64_t v142;
  _QWORD v143[3];
  uint64_t *v144;
  std::runtime_error __p;
  _QWORD v146[3];
  char v147;
  void *v148[2];
  char v149;
  void *v150[3];
  void *v151[3];
  void *v152[3];
  char v153;
  uint64_t (**v154)();
  id v155[2];
  uint64_t (***v156)();
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t);
  uint64_t (*v161)(uint64_t);
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;

  v166 = *MEMORY[0x1E0C80C00];
  v3 = *a2;
  *a2 = 0;
  v142 = v3;
  v4 = (uint64_t *)a2[4];
  if (v4)
  {
    if (v4 == a2 + 1)
    {
      v144 = v143;
      (*(void (**)(uint64_t *, _QWORD *))(*v4 + 24))(v4, v143);
    }
    else
    {
      v144 = (uint64_t *)a2[4];
      a2[4] = 0;
    }
  }
  else
  {
    v144 = 0;
  }
  v82 = **(id **)(*(_QWORD *)(a1 + 8) + 32);
  v80 = (void *)objc_opt_new();
  objc_msgSend(v82, "configuration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v83 = a1;
  v6 = objc_msgSend(v5, "_allowsTCPFastOpen");

  context = (void *)MEMORY[0x18D78A1C4]();
  v160 = __Block_byref_object_copy__0;
  v161 = __Block_byref_object_dispose__0;
  v162 = &unk_18CFC4DAA;
  v163 = v142;
  v157 = 0;
  v158 = &v157;
  v159 = 0x5812000000;
  v142 = 0;
  if (v144)
  {
    if (v144 == v143)
    {
      v165 = &v164;
      (*(void (**)(_QWORD *))(v143[0] + 24))(v143);
    }
    else
    {
      v165 = v144;
      v144 = 0;
    }
  }
  else
  {
    v165 = 0;
  }
  v140[0] = 0;
  v140[1] = v140;
  v140[2] = 0x2020000000;
  v141 = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3254779904;
  aBlock[2] = ___ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT__block_invoke;
  aBlock[3] = &__block_descriptor_58_ea8_32s40r48r_e46_v32__0__NSData_8__NSURLResponse_16__NSError_24l;
  v139 = v6 | 0x100;
  v84 = v80;
  v136 = v84;
  v137 = &v157;
  v138 = v140;
  v81 = _Block_copy(aBlock);
  v7 = *(_QWORD *)(v83 + 24);
  v8 = objc_alloc(MEMORY[0x1E0C99E98]);
  v9 = objc_alloc(MEMORY[0x1E0CB3940]);
  AMSCore::URL::getStringRepresentation((AMSCore::URL *)v7, (std::string *)&__p);
  if (v146[0] >= 0)
    p_p = (std::runtime_error_vtbl *)&__p;
  else
    p_p = __p.__vftable;
  v11 = (void *)objc_msgSend(v9, "initWithUTF8String:", p_p);
  v12 = (void *)objc_msgSend(v8, "initWithString:", v11);

  if (SHIBYTE(v146[0]) < 0)
    operator delete(__p.__vftable);
  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C92C28]), "initWithURL:", v12);
  v14 = objc_alloc(MEMORY[0x1E0CB3940]);
  AMSCore::toString(*(_DWORD *)(v7 + 152));
  if (v146[0] >= 0)
    v15 = (std::runtime_error_vtbl *)&__p;
  else
    v15 = __p.__vftable;
  v16 = (void *)objc_msgSend(v14, "initWithUTF8String:", v15);
  objc_msgSend(v13, "setHTTPMethod:", v16);

  if (SHIBYTE(v146[0]) < 0)
    operator delete(__p.__vftable);
  strcpy((char *)v146 + 7, "\nContent-Length");
  strcpy((char *)&__p, "Connection");
  v147 = 14;
  v149 = 4;
  strcpy((char *)v148, "Host");
  HIBYTE(v150[2]) = 18;
  strcpy((char *)v150, "Proxy-Authenticate");
  HIBYTE(v151[2]) = 19;
  strcpy((char *)v151, "Proxy-Authorization");
  HIBYTE(v152[2]) = 16;
  strcpy((char *)v152, "WWW-Authenticate");
  std::unordered_set<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::unordered_set((uint64_t)&v126, (char *)&__p, 6);
  if (SHIBYTE(v152[2]) < 0)
  {
    operator delete(v152[0]);
    if ((SHIBYTE(v151[2]) & 0x80000000) == 0)
    {
LABEL_23:
      if ((SHIBYTE(v150[2]) & 0x80000000) == 0)
        goto LABEL_24;
      goto LABEL_31;
    }
  }
  else if ((SHIBYTE(v151[2]) & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v151[0]);
  if ((SHIBYTE(v150[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((v149 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v150[0]);
  if ((v149 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v147 & 0x80000000) == 0)
      goto LABEL_26;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(v148[0]);
  if ((v147 & 0x80000000) == 0)
  {
LABEL_26:
    if ((SHIBYTE(v146[0]) & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_34;
  }
LABEL_33:
  operator delete((void *)v146[1]);
  if ((SHIBYTE(v146[0]) & 0x80000000) == 0)
  {
LABEL_27:
    v17 = *(uint64_t **)(v7 + 176);
    if (!v17)
      goto LABEL_48;
    goto LABEL_37;
  }
LABEL_34:
  operator delete(__p.__vftable);
  v17 = *(uint64_t **)(v7 + 176);
  if (!v17)
    goto LABEL_48;
  do
  {
LABEL_37:
    v18 = v17 + 2;
    if (std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::find<std::string>(&v126, (char *)v17 + 16))
    {
      AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&__p);
      AMSCore::Logger::log<char [27],std::string>((uint64_t)__p.__vftable, 3, (uint64_t)"networking", 10, "Ignoring reserved header: ", (uint64_t)(v17 + 2));
      imp = (std::__shared_weak_count *)__p.__imp_.__imp_;
      if (__p.__imp_.__imp_)
      {
        v20 = (unint64_t *)(__p.__imp_.__imp_ + 8);
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
          std::__shared_weak_count::__release_weak(imp);
        }
      }
    }
    else
    {
      v22 = objc_alloc(MEMORY[0x1E0CB3940]);
      if (*((char *)v17 + 39) < 0)
        v18 = (_QWORD *)*v18;
      v23 = (void *)objc_msgSend(v22, "initWithUTF8String:", v18);
      v24 = objc_alloc(MEMORY[0x1E0CB3940]);
      v25 = v17 + 5;
      if (*((char *)v17 + 63) < 0)
        v25 = (_QWORD *)*v25;
      v26 = (void *)objc_msgSend(v24, "initWithUTF8String:", v25);
      objc_msgSend(v13, "addValue:forHTTPHeaderField:", v26, v23);

    }
    v17 = (uint64_t *)*v17;
  }
  while (v17);
LABEL_48:
  if (*(char *)(v7 + 223) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&__p, *(const std::string::value_type **)(v7 + 200), *(_QWORD *)(v7 + 208));
  }
  else
  {
    __p = *(std::runtime_error *)(v7 + 200);
    v146[0] = *(_QWORD *)(v7 + 216);
  }
  v27 = (const char *)HIBYTE(v146[0]);
  v28 = HIBYTE(v146[0]);
  if (v146[0] < 0)
    v27 = __p.__imp_.__imp_;
  if (v27)
  {
    v29 = objc_alloc(MEMORY[0x1E0C99D50]);
    if (v146[0] >= 0)
      v30 = (std::runtime_error_vtbl *)&__p;
    else
      v30 = __p.__vftable;
    if (v146[0] >= 0)
      v31 = (const char *)HIBYTE(v146[0]);
    else
      v31 = __p.__imp_.__imp_;
    v32 = (void *)objc_msgSend(v29, "initWithBytesNoCopy:length:freeWhenDone:", v30, v31, 0);
    objc_msgSend(v13, "setHTTPBody:", v32);

    v28 = HIBYTE(v146[0]);
  }
  if (v28 < 0)
  {
    operator delete(__p.__vftable);
    if (!*(_BYTE *)(v7 + 224))
      goto LABEL_66;
    goto LABEL_65;
  }
  if (*(_BYTE *)(v7 + 224))
LABEL_65:
    objc_msgSend(v13, "setCachePolicy:", 3);
LABEL_66:
  v33 = (void **)v127;
  if (v127)
  {
    do
    {
      v58 = (void **)*v33;
      if (*((char *)v33 + 39) < 0)
        operator delete(v33[2]);
      operator delete(v33);
      v33 = v58;
    }
    while (v58);
  }
  v34 = v126.__vftable;
  v126.__vftable = 0;
  if (v34)
    operator delete(v34);

  objc_msgSend(v82, "dataTaskWithRequest:completionHandler:", v13, v81);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "setDelegate:", v84);
  objc_initWeak(&location, v35);
  AMSCore::ServiceProvider<AMSCore::ICancellationContextProvider>::getDefault(&__p);
  (*((void (**)(std::runtime_error_vtbl **__return_ptr))__p.~runtime_error + 2))(&v133);
  v36 = (std::__shared_weak_count *)__p.__imp_.__imp_;
  if (__p.__imp_.__imp_)
  {
    v37 = (unint64_t *)(__p.__imp_.__imp_ + 8);
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  objc_copyWeak((id *)&to[0].__vftable, &location);
  v39 = operator new();
  *(_QWORD *)v39 = 0;
  *(_QWORD *)(v39 + 8) = 0;
  *(_QWORD *)(v39 + 16) = _ZZNSt3__113stop_callbackINS_8functionIFvvEEEEC1B8fe180100INS_22__intrusive_shared_ptrINS_12__stop_stateEEEZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS9_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS9_4TaskINS9_12HTTPResponseENS9_9HTTPErrorEE10CompletionEEEDaT_EUlvE_EENS4_13__private_tagEOSU_OT0_ENUlPNS_20__stop_callback_baseEE_8__invokeES11_;
  *(_BYTE *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 32) = 0;
  objc_moveWeak(from, (id *)&to[0].__vftable);
  *(_QWORD *)(v39 + 64) = 0;
  *(_QWORD *)(v39 + 40) = &off_1E2522260;
  objc_moveWeak((id *)(v39 + 48), from);
  *(_QWORD *)(v39 + 64) = v39 + 40;
  objc_destroyWeak(from);
  *(_QWORD *)(v39 + 72) = 0;
  v40 = v133;
  if (v133)
  {
    v126.__vftable = (std::runtime_error_vtbl *)v39;
    __p.__vftable = v133;
    LOBYTE(__p.__imp_.__imp_) = 0;
    locked = _ZNSt3__120__atomic_unique_lockIjLj2EE11__lock_implB8fe180100IRKZNS_12__stop_state14__add_callbackB8fe180100EPNS_20__stop_callback_baseEEUljE_RKNS1_16__set_locked_bitMUljE_EEEbOT_OT0_NS_12memory_orderE((unsigned int **)&__p, (uint64_t)&v126, (uint64_t)&std::__atomic_unique_lock<unsigned int,2u>::__set_locked_bit[abi:fe180100], 2);
    LOBYTE(__p.__imp_.__imp_) = locked;
    if (locked)
    {
      v42 = v40->~runtime_error_0;
      *(_QWORD *)v39 = v42;
      if (v42)
        *((_QWORD *)v42 + 1) = v39;
      v40->~runtime_error_0 = (void (__cdecl *)(std::runtime_error *__hidden))v39;
      v43 = (unsigned int *)__p.__vftable;
      do
        v44 = __ldxr(v43);
      while (__stlxr(v44 & 0xFFFFFFFD, v43));
      MEMORY[0x18D789A68](__p.__vftable);
      v45 = v133;
      v133 = 0;
      v46 = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v39 + 72) = v45;
      if (v46)
      {
        v47 = (unsigned int *)(v46 + 4);
        do
        {
          v48 = __ldaxr(v47);
          v49 = v48 - 1;
        }
        while (__stlxr(v49, v47));
        if (!v49)
          MEMORY[0x18D789BDC]();
      }
    }
  }
  v50 = (_QWORD *)v84[1];
  v84[1] = v39;
  if (v50)
  {
    v51 = v50[9];
    if (v51)
    {
      std::__stop_state::__remove_callback[abi:fe180100](v51, v50);
      v52 = v50[9];
      if (v52)
      {
        v53 = (unsigned int *)(v52 + 4);
        do
        {
          v54 = __ldaxr(v53);
          v55 = v54 - 1;
        }
        while (__stlxr(v55, v53));
        if (!v55)
          MEMORY[0x18D789BDC]();
      }
    }
    v56 = (_QWORD *)v50[8];
    if (v56 == v50 + 5)
    {
      v57 = 4;
      v56 = v50 + 5;
    }
    else
    {
      if (!v56)
      {
LABEL_100:
        MEMORY[0x18D789BDC](v50, 0x10B0C400C2F1B58);
        goto LABEL_101;
      }
      v57 = 5;
    }
    (*(void (**)(void))(*v56 + 8 * v57))();
    goto LABEL_100;
  }
LABEL_101:
  objc_destroyWeak((id *)&to[0].__vftable);
  if (*(_BYTE *)(v83 + 48))
  {
    v132[0] = MEMORY[0x1E0C809B0];
    v132[1] = 3254779904;
    v132[2] = ___ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT__block_invoke_97;
    v132[3] = &__block_descriptor_40_ea8_32r_e5_v8__0l;
    v132[4] = v140;
    v59 = _Block_copy(v132);
    AMSCore::ServiceProvider<AMSCore::ISchedulingProvider>::getDefault(&__p);
    if (!*(_BYTE *)(v83 + 48))
    {
      __break(1u);
      return;
    }
    v60 = __p.__vftable;
    v61 = *(_QWORD *)(v83 + 40);
    objc_copyWeak(&v128, &location);
    v129 = _Block_copy(v59);
    v156 = 0;
    v154 = &off_1E2522208;
    objc_moveWeak(v155, &v128);
    v62 = v129;
    v129 = 0;
    v155[1] = v62;
    v156 = &v154;
    objc_destroyWeak(&v128);
    (*((void (**)(std::runtime_error *__return_ptr, std::runtime_error_vtbl *, uint64_t, uint64_t (***)()))v60->~runtime_error
     + 3))(to, v60, v61, &v154);
    v63 = v156;
    if (v156 == &v154)
    {
      v64 = 4;
      v63 = &v154;
    }
    else
    {
      if (!v156)
      {
LABEL_108:
        v65 = (std::__shared_weak_count *)__p.__imp_.__imp_;
        if (!__p.__imp_.__imp_)
          goto LABEL_112;
        v66 = (unint64_t *)(__p.__imp_.__imp_ + 8);
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
          if (v131)
            goto LABEL_113;
        }
        else
        {
LABEL_112:
          if (v131)
          {
LABEL_113:

            goto LABEL_114;
          }
        }
        v68 = v158;
        LOBYTE(from[0]) = 0;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        v90 = 0;
        v91 = 0;
        v92 = 0;
        v93 = 0;
        v94 = 0;
        v95 = 0;
        v96 = 0;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        v104 = 0;
        v105 = 0;
        v106 = 0;
        v107 = 0;
        v108 = 0;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        v113 = 0;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        v117 = 0;
        v118 = 0;
        v120 = 0;
        v121 = 0;
        v122 = 0;
        LOBYTE(v123) = 0;
        v125 = 0;
        v100 = 0;
        v101 = 0;
        v103 = 0;
        v102 = 0;
        v119 = 0;
        AMSCore::Unexpected<AMSCore::HTTPError,AMSCore::HTTPTransactionMetrics,AMSCore::Error>(to, (uint64_t)from, &v126);
        v69 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(&__p, (uint64_t)&v126);
        v153 = 0;
        v70 = (unsigned __int8 *)v68[6];
        if (!v70)
          goto LABEL_146;
        do
          v71 = __ldaxr(v70);
        while (__stlxr(1u, v70));
        if ((v71 & 1) != 0)
LABEL_146:
          std::terminate();
        v72 = v68[10];
        if (!v72)
          std::__throw_bad_function_call[abi:fe180100]();
        (*(void (**)(uint64_t, std::runtime_error *, __n128))(*(_QWORD *)v72 + 48))(v72, &__p, v69);
        if (v153)
          AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)&__p);
        else
          ((void (*)(std::runtime_error *))__p.~runtime_error)(&__p);
        AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)&v126);
        if (v125 && v124 < 0)
          operator delete(v123);
        v73 = (void **)v100;
        if (v100)
        {
          v74 = v101;
          v75 = v100;
          if (v101 != v100)
          {
            do
            {
              if (*((char *)v74 - 1) < 0)
                operator delete(*(v74 - 3));
              v74 -= 3;
            }
            while (v74 != v73);
            v75 = v100;
          }
          v101 = v73;
          operator delete(v75);
        }
        if (v87 && v86 < 0)
          operator delete(from[0]);
        if (!v131)
          ((void (*)(std::runtime_error *))to[0].~runtime_error)(to);

        goto LABEL_140;
      }
      v64 = 5;
    }
    (*v63)[v64]();
    goto LABEL_108;
  }
LABEL_114:
  objc_msgSend(v35, "resume");
LABEL_140:
  if (v133)
  {
    v76 = (unsigned int *)&v133->~runtime_error + 1;
    do
    {
      v77 = __ldaxr(v76);
      v78 = v77 - 1;
    }
    while (__stlxr(v78, v76));
    if (!v78)
      MEMORY[0x18D789BDC]();
  }
  objc_destroyWeak(&location);

  _Block_object_dispose(v140, 8);
  _Block_object_dispose(&v157, 8);
  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion((uint64_t)&v163);
  objc_autoreleasePoolPop(context);

  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion((uint64_t)&v142);
}

void sub_18C98DD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void **a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  char a64;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void **v70;
  void **v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int v74;

  if (a64 && a63 < 0)
    operator delete(__p);
  if (a35)
  {
    v70 = (void **)a36;
    v71 = a35;
    if ((void **)a36 != a35)
    {
      do
      {
        if (*((char *)v70 - 1) < 0)
          operator delete(*(v70 - 3));
        v70 -= 3;
      }
      while (v70 != a35);
      v71 = a35;
    }
    operator delete(v71);
  }
  if (a22 && a21 < 0)
    operator delete(a16);
  if (!LOBYTE(STACK[0x388]))
    (*(void (**)(unint64_t *))STACK[0x340])(&STACK[0x340]);

  if (STACK[0x3B8])
  {
    v72 = (unsigned int *)(STACK[0x3B8] + 4);
    do
    {
      v73 = __ldaxr(v72);
      v74 = v73 - 1;
    }
    while (__stlxr(v74, v72));
    if (!v74)
      MEMORY[0x18D789BDC]();
  }
  objc_destroyWeak((id *)&STACK[0x3C0]);

  _Block_object_dispose(&STACK[0x408], 8);
  _Block_object_dispose((const void *)(v68 - 208), 8);
  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion(v65);

  AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion::~Completion((uint64_t)&STACK[0x428]);
  _Unwind_Resume(a1);
}

void sub_18C98DEE8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (STACK[0x458])
      std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::operator()((std::__shared_weak_count *)STACK[0x458]);
    JUMPOUT(0x18C98DF20);
  }
  JUMPOUT(0x18C98DF18);
}

void sub_18C98DF04(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_18C98DF10(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  __clang_call_terminate(exception_object);
}

uint64_t std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::target(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalI"
                     "NS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEE3$_0"
    || ((v3 & (unint64_t)"ZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1"
                                "_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEE3$_0" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEE3$_0")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0,std::allocator<AMSCore::AppleHTTPProvider::submitRequest(std::shared_ptr<AMSCore::HTTPRequest const>,std::optional<std::chrono::duration<long long,std::ratio<1l,1000l>>>)::$_0>,void ()(AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Completion)>::target_type()
{
}

void ___ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT__block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v7;
  uint64_t v8;
  uint64_t error_code;
  const std::error_category *v10;
  const std::error_category *v11;
  void *v12;
  id v13;
  const void *v14;
  unint64_t v15;
  size_t v16;
  __int128 *p_dst;
  id v18;
  uint64_t v19;
  uint64_t v20;
  const std::error_category *v21;
  const std::error_category *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  const char *v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  id v34;
  const char *v35;
  size_t v36;
  const char *v37;
  std::runtime_error_vtbl *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  const char *v43;
  size_t v44;
  std::string::size_type v45;
  std::string *p_p;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  __int128 v55;
  unint64_t v56;
  uint64_t v57;
  const std::error_category *v58;
  const std::error_category *v59;
  uint64_t v60;
  const std::error_category *v61;
  const std::error_category *v62;
  __n128 v63;
  unsigned __int8 *v64;
  unsigned __int8 v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  std::system_error_vtbl *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void **v77;
  void *v78;
  void **v79;
  void *v80;
  void **v81;
  void **v82;
  unsigned __int8 *v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id obj;
  id v94;
  __int128 __dst;
  unint64_t v96;
  std::system_error v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  _OWORD v113[2];
  __int128 v114;
  uint64_t v115;
  char v116;
  std::runtime_error v117[41];
  char v118;
  std::string __p;
  char v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _OWORD v125[2];
  __int128 v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  _OWORD v136[2];
  __int128 v137;
  uint64_t v138;
  char v139;
  __int128 v140;
  unint64_t v141;
  __int128 v142;
  __int128 v143;
  int v144;
  std::string v145;
  char v146;
  __int128 v147;
  uint64_t v148;
  char v149;
  __int128 v150;
  uint64_t v151;
  char v152;
  int v153;
  _QWORD v154[2];
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  std::runtime_error v158;
  unint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  int v166;
  std::string __what_arg;
  char v168;
  __int128 v169;
  uint64_t v170;
  char v171;
  __int128 v172;
  uint64_t v173;
  char v174;
  int v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  char v181;
  _BYTE v182[128];
  uint64_t v183;
  std::error_code v184;
  std::error_code v185;
  std::error_code v186;
  std::error_code v187;

  v183 = *MEMORY[0x1E0C80C00];
  v91 = a2;
  v92 = a3;
  v90 = a4;
  if (v90)
  {
    objc_msgSend(*(id *)(a1 + 32), "metrics");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    AMSCore::extractTransactionMetrics(v7, v92, *(unsigned __int16 *)(a1 + 56), 0, 0, &__p);

    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    {
      error_code = AMSCore::make_error_code(9);
      v11 = v10;
      AMSCore::StringUtils::join<char [31]>("NSURLSessionDataTask timed out", &__what_arg);
      *(_QWORD *)&v184.__val_ = error_code;
      v184.__cat_ = v11;
      std::system_error::system_error(&v97, v184, &__what_arg);
      if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__what_arg.__r_.__value_.__l.__data_);
      *((_QWORD *)&v98 + 1) = 0;
      v99 = 0uLL;
      v97.__vftable = (std::system_error_vtbl *)off_1E2521330;
      *(_QWORD *)&v98 = (char *)&v98 + 8;
      *(_QWORD *)&v100 = 0;
    }
    else
    {
      v18 = v90;
      v19 = objc_msgSend(v18, "code");
      if (v19 == -1001)
      {
        v57 = AMSCore::make_error_code(9);
        v59 = v58;
        objc_msgSend(v18, "localizedDescription");
        v23 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v145.__r_.__value_.__r.__words[0] = objc_msgSend(v23, "UTF8String");
        AMSCore::StringUtils::join<char [33],char const*>("NSURLSessionDataTask timed out: ", (const char **)&v145.__r_.__value_.__l.__data_, &__what_arg);
        *(_QWORD *)&v186.__val_ = v57;
        v186.__cat_ = v59;
        std::system_error::system_error(&v97, v186, &__what_arg);
        if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__what_arg.__r_.__value_.__l.__data_);
      }
      else if (v19 == -999)
      {
        v20 = AMSCore::make_error_code(1);
        v22 = v21;
        objc_msgSend(v18, "localizedDescription");
        v23 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v145.__r_.__value_.__r.__words[0] = objc_msgSend(v23, "UTF8String");
        AMSCore::StringUtils::join<char [37],char const*>("NSURLSessionDataTask was cancelled: ", (const char **)&v145.__r_.__value_.__l.__data_, &__what_arg);
        *(_QWORD *)&v185.__val_ = v20;
        v185.__cat_ = v22;
        std::system_error::system_error(&v97, v185, &__what_arg);
        if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__what_arg.__r_.__value_.__l.__data_);
      }
      else
      {
        v60 = AMSCore::make_error_code(310);
        v62 = v61;
        objc_msgSend(v18, "localizedDescription");
        v23 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v145.__r_.__value_.__r.__words[0] = objc_msgSend(v23, "UTF8String");
        AMSCore::StringUtils::join<char [30],char const*>("NSURLSessionDataTask failed: ", (const char **)&v145.__r_.__value_.__l.__data_, &__what_arg);
        *(_QWORD *)&v187.__val_ = v60;
        v187.__cat_ = v62;
        std::system_error::system_error(&v97, v187, &__what_arg);
        if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__what_arg.__r_.__value_.__l.__data_);
      }
      *((_QWORD *)&v98 + 1) = 0;
      v99 = 0uLL;
      v97.__vftable = (std::system_error_vtbl *)off_1E2521330;
      *(_QWORD *)&v98 = (char *)&v98 + 8;
      *(_QWORD *)&v100 = 0;

    }
    AMSCore::Unexpected<AMSCore::HTTPError,AMSCore::HTTPTransactionMetrics,AMSCore::Error>(&v97, (uint64_t)&__p, &v158);
    v63 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v117, (uint64_t)&v158);
    v118 = 0;
    v64 = *(unsigned __int8 **)(v8 + 48);
    if (v64)
    {
      do
        v65 = __ldaxr(v64);
      while (__stlxr(1u, v64));
      if ((v65 & 1) == 0)
      {
        v66 = *(_QWORD *)(v8 + 80);
        if (!v66)
          std::__throw_bad_function_call[abi:fe180100]();
        (*(void (**)(uint64_t, std::runtime_error *, __n128))(*(_QWORD *)v66 + 48))(v66, v117, v63);
        if (v118)
          AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v117);
        else
          ((void (*)(std::runtime_error *))v117[0].~runtime_error)(v117);
        AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)&v158);
        v97.__vftable = (std::system_error_vtbl *)off_1E2521330;
        v67 = (std::__shared_weak_count *)v100;
        if ((_QWORD)v100)
        {
          v68 = (unint64_t *)(v100 + 8);
          do
            v69 = __ldaxr(v68);
          while (__stlxr(v69 - 1, v68));
          if (!v69)
          {
            ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
            std::__shared_weak_count::__release_weak(v67);
          }
        }
        std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v98, *((unsigned int **)&v98 + 1));
        MEMORY[0x18D7898AC](&v97);
        if (v139 && SHIBYTE(v138) < 0)
          operator delete((void *)v137);
        v70 = v126;
        if ((_QWORD)v126)
        {
          v71 = *((_QWORD *)&v126 + 1);
          v72 = (void *)v126;
          if (*((_QWORD *)&v126 + 1) != (_QWORD)v126)
          {
            do
            {
              if (*(char *)(v71 - 1) < 0)
                operator delete(*(void **)(v71 - 24));
              v71 -= 24;
            }
            while (v71 != v70);
            v72 = (void *)v126;
          }
          *((_QWORD *)&v126 + 1) = v70;
          operator delete(v72);
        }
        if (v120 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          v73 = (std::system_error_vtbl *)__p.__r_.__value_.__r.__words[0];
          goto LABEL_155;
        }
        goto LABEL_156;
      }
    }
LABEL_161:
    std::terminate();
  }
  objc_msgSend(*(id *)(a1 + 32), "metrics");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  AMSCore::extractTransactionMetrics(v12, v92, *(unsigned __int16 *)(a1 + 56), 0, 0, (std::string *)&v97);

  v89 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v13 = objc_retainAutorelease(v91);
  v14 = (const void *)objc_msgSend(v13, "bytes");
  v15 = objc_msgSend(v13, "length");
  v16 = v15;
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    std::string::__throw_length_error[abi:fe180100]();
  if (v15 >= 0x17)
  {
    v24 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v24 = v15 | 7;
    v25 = v24 + 1;
    p_dst = (__int128 *)operator new(v24 + 1);
    *((_QWORD *)&__dst + 1) = v16;
    v96 = v25 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
  }
  else
  {
    HIBYTE(v96) = v15;
    p_dst = &__dst;
    if (!v15)
      goto LABEL_19;
  }
  memmove(p_dst, v14, v16);
LABEL_19:
  *((_BYTE *)p_dst + v16) = 0;
  v94 = v92;
  objc_msgSend(v94, "URL");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "absoluteString");
  v27 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v28 = (const char *)objc_msgSend(v27, "UTF8String");
  v29 = strlen(v28);
  AMSCore::URL::parse((uint64_t)v28, v29, (uint64_t)&__what_arg);

  if (!v181)
  {
    AMSCore::Unexpected<AMSCore::HTTPError,AMSCore::HTTPTransactionMetrics,AMSCore::Error>((std::runtime_error *)&__what_arg, (uint64_t)&v97, &v158);
    std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v117, (uint64_t)&v158);
    v118 = 0;
    AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)&v158);
    goto LABEL_121;
  }
  v165 = 0u;
  v164 = 0u;
  v166 = 1065353216;
  objc_msgSend(v94, "allHeaderFields");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__reserve_multi[abi:fe180100]((uint64_t)&v164, objc_msgSend(v30, "count"));

  v163 = 0u;
  v162 = 0u;
  v161 = 0u;
  v160 = 0u;
  objc_msgSend(v94, "allHeaderFields");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v160, v182, 16);
  if (!v31)
    goto LABEL_47;
  v32 = *(_QWORD *)v161;
  do
  {
    for (i = 0; i != v31; ++i)
    {
      if (*(_QWORD *)v161 != v32)
        objc_enumerationMutation(obj);
      v34 = objc_retainAutorelease(*(id *)(*((_QWORD *)&v160 + 1) + 8 * i));
      v35 = (const char *)objc_msgSend(v34, "UTF8String");
      v36 = strlen(v35);
      if (v36 > 0x7FFFFFFFFFFFFFF7)
        std::string::__throw_length_error[abi:fe180100]();
      v37 = (const char *)v36;
      if (v36 >= 0x17)
      {
        v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v36 | 7) != 0x17)
          v39 = v36 | 7;
        v40 = v39 + 1;
        v38 = (std::runtime_error_vtbl *)operator new(v39 + 1);
        v159 = v40 | 0x8000000000000000;
        v158.__vftable = v38;
        v158.__imp_.__imp_ = v37;
LABEL_33:
        memmove(v38, v35, (size_t)v37);
        goto LABEL_34;
      }
      HIBYTE(v159) = v36;
      v38 = (std::runtime_error_vtbl *)&v158;
      if (v36)
        goto LABEL_33;
LABEL_34:
      v37[(_QWORD)v38] = 0;
      objc_msgSend(v94, "allHeaderFields");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "objectForKeyedSubscript:", v34);
      v42 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      v43 = (const char *)objc_msgSend(v42, "UTF8String");
      v44 = strlen(v43);
      if (v44 > 0x7FFFFFFFFFFFFFF7)
        std::string::__throw_length_error[abi:fe180100]();
      v45 = v44;
      if (v44 >= 0x17)
      {
        v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v44 | 7) != 0x17)
          v47 = v44 | 7;
        v48 = v47 + 1;
        p_p = (std::string *)operator new(v47 + 1);
        __p.__r_.__value_.__r.__words[2] = v48 | 0x8000000000000000;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
        __p.__r_.__value_.__l.__size_ = v45;
LABEL_41:
        memmove(p_p, v43, v45);
        goto LABEL_42;
      }
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = v44;
      p_p = &__p;
      if (v44)
        goto LABEL_41;
LABEL_42:
      p_p->__r_.__value_.__s.__data_[v45] = 0;
      std::unordered_multimap<std::string,std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::pair<std::string const,std::string>>>::emplace[abi:fe180100]<std::string,std::string>(&v164, (uint64_t)&v158, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);

      if (SHIBYTE(v159) < 0)
        operator delete(v158.__vftable);
    }
    v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v160, v182, 16);
  }
  while (v31);
LABEL_47:

  if (!v181)
  {
    __break(1u);
    return;
  }
  v145.__r_.__value_.__s.__data_[0] = 0;
  v146 = 0;
  if (v168)
  {
    v145 = __what_arg;
    memset(&__what_arg, 0, sizeof(__what_arg));
    v146 = 1;
  }
  LOBYTE(v147) = 0;
  v149 = 0;
  if (v171)
  {
    v147 = v169;
    v148 = v170;
    v170 = 0;
    v169 = 0uLL;
    v149 = 1;
  }
  LOBYTE(v150) = 0;
  v152 = 0;
  if (v174)
  {
    v150 = v172;
    v151 = v173;
    v173 = 0;
    v172 = 0uLL;
    v152 = 1;
  }
  v153 = v175;
  v154[0] = v154;
  v154[1] = v154;
  v155 = 0;
  v49 = v178;
  if (v178)
  {
    v50 = v177;
    v51 = v176;
    v52 = *v177;
    *(_QWORD *)(v52 + 8) = *(_QWORD *)(v176 + 8);
    **(_QWORD **)(v51 + 8) = v52;
    v53 = v154[0];
    *(_QWORD *)(v154[0] + 8) = v50;
    *v50 = v53;
    v154[0] = v51;
    *(_QWORD *)(v51 + 8) = v154;
    v155 = v49;
    v178 = 0;
  }
  v156 = v179;
  v157 = v180;
  v180 = 0;
  v179 = 0uLL;
  v54 = objc_msgSend(v94, "statusCode");
  v55 = v164;
  v164 = 0uLL;
  v142 = v55;
  v143 = v165;
  v144 = v166;
  if (*((_QWORD *)&v165 + 1))
  {
    v56 = *(_QWORD *)(v165 + 8);
    if ((*((_QWORD *)&v55 + 1) & (*((_QWORD *)&v55 + 1) - 1)) != 0)
    {
      if (v56 >= *((_QWORD *)&v55 + 1))
        v56 %= *((_QWORD *)&v55 + 1);
    }
    else
    {
      v56 &= *((_QWORD *)&v55 + 1) - 1;
    }
    *(_QWORD *)(v55 + 8 * v56) = &v143;
    v165 = 0uLL;
  }
  v140 = __dst;
  v141 = v96;
  v96 = 0;
  __dst = 0uLL;
  __p.__r_.__value_.__s.__data_[0] = 0;
  v120 = 0;
  if (LOBYTE(v97.__ec_.__cat_))
  {
    *(std::runtime_error *)&__p.__r_.__value_.__l.__data_ = v97.std::runtime_error;
    __p.__r_.__value_.__r.__words[2] = *(_QWORD *)&v97.__ec_.__val_;
    memset(&v97, 0, 24);
    v120 = 1;
  }
  v123 = v100;
  v124 = v101;
  v125[0] = v102[0];
  *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)((char *)v102 + 9);
  v121 = v98;
  v122 = v99;
  v126 = v103;
  v127 = v104;
  v103 = 0uLL;
  v104 = 0;
  v135 = v112;
  v136[0] = v113[0];
  *(_OWORD *)((char *)v136 + 10) = *(_OWORD *)((char *)v113 + 10);
  v134 = v111;
  v130 = v107;
  v131 = v108;
  v132 = v109;
  v133 = v110;
  v128 = v105;
  v129 = v106;
  LOBYTE(v137) = 0;
  v139 = 0;
  if (v116)
  {
    v138 = v115;
    v137 = v114;
    v115 = 0;
    v114 = 0uLL;
    v139 = 1;
  }
  AMSCore::HTTPResponse::HTTPResponse((uint64_t)&v158, (__int128 *)&v145, v54, (uint64_t *)&v142, &v140, (__int128 *)&__p);
  AMSCore::HTTPResponse::HTTPResponse((uint64_t)v117, (__int128 *)&v158);
  v118 = 1;
  AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)&v158);
  if (v139 && SHIBYTE(v138) < 0)
    operator delete((void *)v137);
  v74 = v126;
  if ((_QWORD)v126)
  {
    v75 = *((_QWORD *)&v126 + 1);
    v76 = (void *)v126;
    if (*((_QWORD *)&v126 + 1) != (_QWORD)v126)
    {
      do
      {
        if (*(char *)(v75 - 1) < 0)
          operator delete(*(void **)(v75 - 24));
        v75 -= 24;
      }
      while (v75 != v74);
      v76 = (void *)v126;
    }
    *((_QWORD *)&v126 + 1) = v74;
    operator delete(v76);
  }
  if (v120 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v141) < 0)
    operator delete((void *)v140);
  v77 = (void **)v143;
  if ((_QWORD)v143)
  {
    do
    {
      v81 = (void **)*v77;
      if (*((char *)v77 + 63) < 0)
      {
        operator delete(v77[5]);
        if (*((char *)v77 + 39) < 0)
          goto LABEL_127;
      }
      else if (*((char *)v77 + 39) < 0)
      {
LABEL_127:
        operator delete(v77[2]);
      }
      operator delete(v77);
      v77 = v81;
    }
    while (v81);
  }
  v78 = (void *)v142;
  *(_QWORD *)&v142 = 0;
  if (v78)
    operator delete(v78);
  AMSCore::URL::~URL((AMSCore::URL *)&v145);
  v79 = (void **)v165;
  if ((_QWORD)v165)
  {
    do
    {
      v82 = (void **)*v79;
      if (*((char *)v79 + 63) < 0)
      {
        operator delete(v79[5]);
        if (*((char *)v79 + 39) < 0)
          goto LABEL_132;
      }
      else if (*((char *)v79 + 39) < 0)
      {
LABEL_132:
        operator delete(v79[2]);
      }
      operator delete(v79);
      v79 = v82;
    }
    while (v82);
  }
  v80 = (void *)v164;
  *(_QWORD *)&v164 = 0;
  if (v80)
    operator delete(v80);
LABEL_121:
  if (v181)
    AMSCore::URL::~URL((AMSCore::URL *)&__what_arg);
  else
    (*(void (**)(std::string *))__what_arg.__r_.__value_.__l.__data_)(&__what_arg);

  v83 = *(unsigned __int8 **)(v89 + 48);
  if (!v83)
    goto LABEL_161;
  do
    v84 = __ldaxr(v83);
  while (__stlxr(1u, v83));
  if ((v84 & 1) != 0)
    goto LABEL_161;
  v85 = *(_QWORD *)(v89 + 80);
  if (!v85)
    std::__throw_bad_function_call[abi:fe180100]();
  (*(void (**)(uint64_t, std::runtime_error *))(*(_QWORD *)v85 + 48))(v85, v117);
  if (v118)
  {
    AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v117);
    if (SHIBYTE(v96) < 0)
      goto LABEL_140;
  }
  else
  {
    ((void (*)(std::runtime_error *))v117[0].~runtime_error)(v117);
    if (SHIBYTE(v96) < 0)
LABEL_140:
      operator delete((void *)__dst);
  }
  if (v116 && SHIBYTE(v115) < 0)
    operator delete((void *)v114);
  v86 = v103;
  if ((_QWORD)v103)
  {
    v87 = *((_QWORD *)&v103 + 1);
    v88 = (void *)v103;
    if (*((_QWORD *)&v103 + 1) != (_QWORD)v103)
    {
      do
      {
        if (*(char *)(v87 - 1) < 0)
          operator delete(*(void **)(v87 - 24));
        v87 -= 24;
      }
      while (v87 != v86);
      v88 = (void *)v103;
    }
    *((_QWORD *)&v103 + 1) = v86;
    operator delete(v88);
  }
  if (LOBYTE(v97.__ec_.__cat_) && *((char *)&v97.__ec_.__val_ + 7) < 0)
  {
    v73 = v97.__vftable;
LABEL_155:
    operator delete(v73);
  }
LABEL_156:

}

void sub_18C98ECE0(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    if (SLOBYTE(STACK[0x98F]) < 0)
    {
      operator delete((void *)STACK[0x978]);
      __clang_call_terminate(a1);
    }
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void AMSCore::Unexpected<AMSCore::HTTPError,AMSCore::HTTPTransactionMetrics,AMSCore::Error>(std::runtime_error *a1@<X1>, uint64_t a2@<X0>, std::runtime_error *a3@<X8>)
{
  char v3;
  int v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  std::runtime_error_vtbl *p_imp;
  const char *imp;
  char v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[26];
  std::runtime_error v26;
  std::runtime_error v27;
  std::runtime_error_vtbl *v28;
  const char *v29;
  __int128 v31;
  void *v32;
  _BYTE v33[15];
  char v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[3];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[2];
  uint64_t v51;
  _BYTE v52[15];
  char v53;
  char v54;
  _QWORD v55[2];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[2];
  _QWORD v61[5];

  v61[2] = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 *)(a2 + 24);
  if (*(_BYTE *)(a2 + 24))
  {
    v6 = *(void **)a2;
    v61[0] = *(_QWORD *)(a2 + 8);
    *(_QWORD *)((char *)v61 + 7) = *(_QWORD *)(a2 + 15);
    v3 = *(_BYTE *)(a2 + 23);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_OWORD *)(a2 + 80);
  v58 = *(_OWORD *)(a2 + 64);
  v59 = v7;
  v60[0] = *(_OWORD *)(a2 + 96);
  *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)(a2 + 105);
  v8 = *(_OWORD *)(a2 + 48);
  v56 = *(_OWORD *)(a2 + 32);
  v57 = v8;
  v15 = *(_OWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  v17 = *(_OWORD *)(a2 + 152);
  v18 = *(_OWORD *)(a2 + 168);
  v21 = *(_OWORD *)(a2 + 216);
  v22 = *(_OWORD *)(a2 + 232);
  v19 = *(_OWORD *)(a2 + 184);
  v20 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)&v25[10] = *(_OWORD *)(a2 + 290);
  v24 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)v25 = *(_OWORD *)(a2 + 280);
  v23 = *(_OWORD *)(a2 + 248);
  v10 = *(unsigned __int8 *)(a2 + 336);
  if (*(_BYTE *)(a2 + 336))
  {
    v11 = *(_QWORD *)(a2 + 312);
    v55[0] = *(_QWORD *)(a2 + 320);
    *(_QWORD *)((char *)v55 + 7) = *(_QWORD *)(a2 + 327);
    v14 = *(_BYTE *)(a2 + 335);
    *(_QWORD *)(a2 + 320) = 0;
    *(_QWORD *)(a2 + 328) = 0;
    *(_QWORD *)(a2 + 312) = 0;
  }
  else
  {
    v11 = 0;
  }
  std::runtime_error::runtime_error(&v26, a1);
  p_imp = (std::runtime_error_vtbl *)&a1[2].__imp_;
  imp = a1[2].__imp_.__imp_;
  v27 = a1[1];
  v28 = a1[2].__vftable;
  v29 = imp;
  if (a1[3].__vftable)
  {
    *((_QWORD *)imp + 2) = &v29;
    a1[2].__vftable = p_imp;
    p_imp->~runtime_error = 0;
    a1[3].__vftable = 0;
  }
  else
  {
    v28 = (std::runtime_error_vtbl *)&v29;
  }
  v31 = *(_OWORD *)&a1[3].__imp_.__imp_;
  a1[3].__imp_.__imp_ = 0;
  a1[4].__vftable = 0;
  v26.__vftable = (std::runtime_error_vtbl *)&off_1E2521420;
  LOBYTE(v32) = 0;
  v35 = 0;
  if (v5)
  {
    v32 = v6;
    *(_QWORD *)v33 = v61[0];
    *(_QWORD *)&v33[7] = *(_QWORD *)((char *)v61 + 7);
    v34 = v3;
    v61[0] = 0;
    *(_QWORD *)((char *)v61 + 7) = 0;
    v35 = 1;
    v6 = 0;
    v3 = 0;
  }
  v38 = v58;
  v39 = v59;
  v40[0] = v60[0];
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v60 + 9);
  v36 = v56;
  v37 = v57;
  v40[2] = v15;
  v41 = v9;
  *(_OWORD *)((char *)v50 + 10) = *(_OWORD *)&v25[10];
  v42 = v17;
  v43 = v18;
  v46 = v21;
  v47 = v22;
  v44 = v19;
  v45 = v20;
  v49 = v24;
  v50[0] = *(_OWORD *)v25;
  v48 = v23;
  LOBYTE(v51) = 0;
  v54 = 0;
  if (v10)
  {
    *(_QWORD *)&v52[7] = *(_QWORD *)((char *)v55 + 7);
    v51 = v11;
    *(_QWORD *)v52 = v55[0];
    v53 = v14;
    v55[0] = 0;
    *(_QWORD *)((char *)v55 + 7) = 0;
    v54 = 1;
  }
  std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(a3, (uint64_t)&v26);
  AMSCore::HTTPError::~HTTPError((AMSCore::HTTPError *)&v26);
  if (v5)
  {
    if (v3 < 0)
      operator delete(v6);
  }
}

void __copy_helper_block_ea8_32s40r48r(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
}

void __destroy_helper_block_ea8_32s40r48r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);

}

uint64_t ___ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT__block_invoke_97(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void __copy_helper_block_ea8_32r(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 8);
}

void __destroy_helper_block_ea8_32r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 32), 8);
}

uint64_t AMSCore::StringUtils::join<char [31]>@<X0>(const char *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;
  uint64_t v10;
  size_t v11;
  uint64_t v13;
  _QWORD v14[8];
  void *__p[2];
  __int128 v16;
  int v17;
  uint64_t v18[19];

  v4 = MEMORY[0x1E0DE4FE0];
  v5 = MEMORY[0x1E0DE4FE0] + 64;
  v6 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v7 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v8 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v18[0] = MEMORY[0x1E0DE4FE0] + 64;
  v13 = v7;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v7 - 24)) = v8;
  v9 = (std::ios_base *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24));
  std::ios_base::init(v9, v14);
  v9[1].__vftable = 0;
  v9[1].__fmtflags_ = -1;
  v13 = v4 + 24;
  v18[0] = v5;
  std::streambuf::basic_streambuf();
  v10 = MEMORY[0x1E0DE4FB8];
  v14[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v16 = 0u;
  v17 = 16;
  v11 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v13, (uint64_t)a1, v11);
  std::stringbuf::str[abi:fe180100]((uint64_t)v14, a2);
  v13 = *v6;
  *(_QWORD *)((char *)&v14[-1] + *(_QWORD *)(v13 - 24)) = v6[3];
  v14[0] = v10 + 16;
  if (SBYTE7(v16) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v18);
}

void sub_18C98F394(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

uint64_t AMSCore::StringUtils::join<char [37],char const*>@<X0>(const char *a1@<X0>, const char **a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  size_t v13;
  const char *v14;
  size_t v15;
  uint64_t v17;
  _QWORD v18[8];
  void *__p[2];
  __int128 v20;
  int v21;
  uint64_t v22[19];

  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v22[0] = MEMORY[0x1E0DE4FE0] + 64;
  v17 = v9;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24));
  std::ios_base::init(v11, v18);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v17 = v6 + 24;
  v22[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v18[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v20 = 0u;
  v21 = 16;
  v13 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)a1, v13);
  v14 = *a2;
  v15 = strlen(v14);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)v14, v15);
  std::stringbuf::str[abi:fe180100]((uint64_t)v18, a3);
  v17 = *v8;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24)) = v8[3];
  v18[0] = v12 + 16;
  if (SBYTE7(v20) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v22);
}

void sub_18C98F524(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

uint64_t AMSCore::StringUtils::join<char [30],char const*>@<X0>(const char *a1@<X0>, const char **a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  size_t v13;
  const char *v14;
  size_t v15;
  uint64_t v17;
  _QWORD v18[8];
  void *__p[2];
  __int128 v20;
  int v21;
  uint64_t v22[19];

  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v22[0] = MEMORY[0x1E0DE4FE0] + 64;
  v17 = v9;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24));
  std::ios_base::init(v11, v18);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v17 = v6 + 24;
  v22[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v18[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)__p = 0u;
  v20 = 0u;
  v21 = 16;
  v13 = strlen(a1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)a1, v13);
  v14 = *a2;
  v15 = strlen(v14);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v17, (uint64_t)v14, v15);
  std::stringbuf::str[abi:fe180100]((uint64_t)v18, a3);
  v17 = *v8;
  *(_QWORD *)((char *)&v18[-1] + *(_QWORD *)(v17 - 24)) = v8[3];
  v18[0] = v12 + 16;
  if (SBYTE7(v20) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v22);
}

void sub_18C98F6B4(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

uint64_t std::unordered_multimap<std::string,std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::pair<std::string const,std::string>>>::emplace[abi:fe180100]<std::string,std::string>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  int v7;
  char *v8;
  uint64_t v9;

  v6 = (char *)operator new(0x40uLL);
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 4) = *(_QWORD *)(a2 + 16);
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  *(_OWORD *)(v6 + 40) = *(_OWORD *)a3;
  *((_QWORD *)v6 + 7) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  v7 = v6[39];
  if (v7 >= 0)
    v8 = v6 + 16;
  else
    v8 = (char *)*((_QWORD *)v6 + 2);
  if (v7 >= 0)
    v9 = v6[39];
  else
    v9 = *((_QWORD *)v6 + 3);
  *((_QWORD *)v6 + 1) = AMSCore::StringUtils::CaseInsensitiveHash::operator()((uint64_t)(a1 + 3), v8, v9);
  return std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__node_insert_multi(a1, (uint64_t)v6);
}

void sub_18C98F78C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[63] < 0)
    operator delete(*v2);
  if (v1[39] < 0)
    operator delete(*v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__reserve_multi[abi:fe180100](uint64_t a1, unint64_t a2)
{
  unint64_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  prime = vcvtps_u32_f32((float)a2 / *(float *)(a1 + 32));
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__do_rehash<false>(a1, prime);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__do_rehash<false>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  int v23;
  char *v24;
  uint64_t v25;
  _BOOL4 v26;
  _QWORD *v27;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(uint64_t **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v12 = *v7;
      if (*v7)
      {
        v13 = a2 - 1;
        do
        {
          v14 = *(_QWORD *)(v12 + 8);
          if (v10 > 1)
          {
            if (v14 >= a2)
              v14 %= a2;
          }
          else
          {
            v14 &= v13;
          }
          if (v14 == v8)
          {
            v7 = (uint64_t *)v12;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v14))
          {
            v15 = *(_QWORD **)v12;
            if (*(_QWORD *)v12)
            {
              v16 = (_QWORD *)v12;
              while (1)
              {
                v17 = *(char *)(v12 + 39);
                v18 = v17 >= 0 ? (char *)(v12 + 16) : *(char **)(v12 + 16);
                v19 = v17 >= 0 ? *(unsigned __int8 *)(v12 + 39) : *(_QWORD *)(v12 + 24);
                v22 = (_QWORD *)v15[2];
                v20 = v15 + 2;
                v21 = v22;
                v23 = *((char *)v20 + 23);
                v24 = (char *)(v23 >= 0 ? v20 : v21);
                v25 = v23 >= 0 ? *((unsigned __int8 *)v20 + 23) : v20[1];
                v26 = AMSCore::StringUtils::CaseInsensitiveEqualTo::operator()(a1 + 32, v18, v19, v24, v25);
                v27 = (_QWORD *)*v16;
                if (!v26)
                  break;
                v15 = (_QWORD *)*v27;
                v16 = (_QWORD *)*v16;
                if (!*v27)
                  goto LABEL_45;
              }
              v15 = (_QWORD *)*v16;
              v27 = v16;
LABEL_45:
              v13 = a2 - 1;
            }
            else
            {
              v27 = (_QWORD *)v12;
            }
            *v7 = (uint64_t)v15;
            *v27 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v14);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v14) = v12;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v14) = v7;
            v7 = (uint64_t *)v12;
            v8 = v14;
          }
          v12 = *v7;
        }
        while (*v7);
      }
    }
  }
  else
  {
    v11 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v11)
      operator delete(v11);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__node_insert_multi(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *inserted;
  int8x8_t v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;

  v4 = a1 + 3;
  v5 = a2 + 16;
  v6 = *(unsigned __int8 *)(a2 + 39);
  v7 = *(_QWORD *)(a2 + 24);
  if ((v6 & 0x80u) == 0)
    v8 = (char *)(a2 + 16);
  else
    v8 = *(char **)(a2 + 16);
  if ((v6 & 0x80u) == 0)
    v9 = v6;
  else
    v9 = v7;
  v10 = AMSCore::StringUtils::CaseInsensitiveHash::operator()((uint64_t)(a1 + 3), v8, v9);
  *(_QWORD *)(v5 - 8) = v10;
  inserted = std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__node_insert_multi_prepare((uint64_t)a1, v10, v5);
  v12 = (int8x8_t)a1[1];
  v13 = *(_QWORD *)(v5 - 8);
  v14 = (uint8x8_t)vcnt_s8(v12);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    if (v13 >= *(_QWORD *)&v12)
      v13 %= *(_QWORD *)&v12;
  }
  else
  {
    v13 &= *(_QWORD *)&v12 - 1;
  }
  if (!inserted)
  {
    *(_QWORD *)a2 = a1[2];
    a1[2] = a2;
    *(_QWORD *)(*a1 + 8 * v13) = a1 + 2;
    if (!*(_QWORD *)a2)
      goto LABEL_25;
    v15 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    if (v14.u32[0] > 1uLL)
    {
      if (v15 >= *(_QWORD *)&v12)
        v15 %= *(_QWORD *)&v12;
    }
    else
    {
      v15 &= *(_QWORD *)&v12 - 1;
    }
LABEL_24:
    *(_QWORD *)(*a1 + 8 * v15) = a2;
    goto LABEL_25;
  }
  *(_QWORD *)a2 = *inserted;
  *inserted = a2;
  if (*(_QWORD *)a2)
  {
    v15 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    if (v14.u32[0] > 1uLL)
    {
      if (v15 >= *(_QWORD *)&v12)
        v15 %= *(_QWORD *)&v12;
    }
    else
    {
      v15 &= *(_QWORD *)&v12 - 1;
    }
    if (v15 != v13)
      goto LABEL_24;
  }
LABEL_25:
  ++*v4;
  return a2;
}

_QWORD *std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__node_insert_multi_prepare(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  float v7;
  unint64_t v8;
  float v9;
  _BOOL8 v10;
  unint64_t v11;
  unint64_t v12;
  size_t prime;
  unint64_t v14;
  uint8x8_t v15;
  uint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  int v28;
  char *v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  _BOOL4 v34;

  v6 = a1 + 32;
  v7 = *(float *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  if (!v8 || (float)(v7 * (float)v8) < v9)
  {
    v10 = 1;
    if (v8 >= 3)
      v10 = (v8 & (v8 - 1)) != 0;
    v11 = v10 | (2 * v8);
    v12 = vcvtps_u32_f32(v9 / v7);
    if (v11 <= v12)
      prime = v12;
    else
      prime = v11;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v8 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v8)
      goto LABEL_23;
    if (prime < v8)
    {
      v14 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (v15 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v15.i16[0] = vaddlv_u8(v15), v15.u32[0] > 1uLL))
      {
        v14 = std::__next_prime(v14);
      }
      else
      {
        v16 = 1 << -(char)__clz(v14 - 1);
        if (v14 >= 2)
          v14 = v16;
      }
      if (prime <= v14)
        prime = v14;
      if (prime < v8)
LABEL_23:
        std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,AMSCore::StringUtils::CaseInsensitiveEqualTo,AMSCore::StringUtils::CaseInsensitiveHash,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__do_rehash<false>(a1, prime);
    }
    v8 = *(_QWORD *)(a1 + 8);
  }
  v17 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
  v17.i16[0] = vaddlv_u8(v17);
  v18 = v17.u32[0];
  if (v17.u32[0] > 1uLL)
  {
    v19 = a2;
    if (v8 <= a2)
      v19 = a2 % v8;
  }
  else
  {
    v19 = (v8 - 1) & a2;
  }
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v19);
  if (v20)
  {
    v21 = (_QWORD *)*v20;
    if (*v20)
    {
      v22 = 0;
      do
      {
        v23 = v21[1];
        if (v18 > 1)
        {
          v24 = v21[1];
          if (v23 >= v8)
            v24 = v23 % v8;
        }
        else
        {
          v24 = v23 & (v8 - 1);
        }
        if (v24 != v19)
          break;
        if (v23 == a2)
        {
          v27 = (_QWORD *)v21[2];
          v25 = v21 + 2;
          v26 = v27;
          v28 = *((char *)v25 + 23);
          v29 = (char *)(v28 >= 0 ? v25 : v26);
          v30 = v28 >= 0 ? *((unsigned __int8 *)v25 + 23) : v25[1];
          v31 = *(char *)(a3 + 23);
          v32 = v31 >= 0 ? (char *)a3 : *(char **)a3;
          v33 = v31 >= 0 ? *(unsigned __int8 *)(a3 + 23) : *(_QWORD *)(a3 + 8);
          v34 = AMSCore::StringUtils::CaseInsensitiveEqualTo::operator()(v6, v29, v30, v32, v33);
        }
        else
        {
          v34 = 0;
        }
        if ((v22 & !v34 & 1) != 0)
          break;
        v22 |= v34;
        v20 = (_QWORD *)*v20;
        v21 = (_QWORD *)*v20;
      }
      while (*v20);
    }
  }
  return v20;
}

uint64_t std::unordered_set<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::unordered_set(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    v5 = 24 * a3;
    do
    {
      std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a1, a2, (uint64_t)a2);
      a2 += 24;
      v5 -= 24;
    }
    while (v5);
  }
  return a1;
}

void sub_18C98FE98(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v3;

  v3 = *(void ***)(v1 + 16);
  if (v3)
    std::unordered_set<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::unordered_set(v3);
  std::unordered_set<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::unordered_set((void **)v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v3;
  char *v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  std::string *v23;
  float v24;
  float v25;
  _BOOL8 v26;
  unint64_t v27;
  unint64_t v28;
  size_t prime;
  int8x8_t v30;
  unint64_t v31;
  uint8x8_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v37;

  v5 = a2;
  v7 = (_QWORD *)(a1 + 24);
  v8 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v9 = a2[23];
  }
  else
  {
    a2 = *(char **)a2;
    v9 = v8;
  }
  v10 = AMSCore::StringUtils::CaseInsensitiveHash::operator()(a1 + 24, a2, v9);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v3 = v10;
      if (v10 >= v12)
        v3 = v10 % v12;
    }
    else
    {
      v3 = (v12 - 1) & v10;
    }
    v15 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v15)
    {
      v16 = (_QWORD *)*v15;
      if (*v15)
      {
        do
        {
          v17 = v16[1];
          if (v17 == v11)
          {
            if (*((char *)v16 + 39) < 0)
            {
              v18 = (char *)v16[2];
              v19 = v16[3];
            }
            else
            {
              v18 = (char *)(v16 + 2);
              v19 = *((unsigned __int8 *)v16 + 39);
            }
            v20 = v5[23];
            if (v20 >= 0)
              v21 = v5;
            else
              v21 = *(char **)v5;
            if (v20 >= 0)
              v22 = v5[23];
            else
              v22 = *((_QWORD *)v5 + 1);
            if (AMSCore::StringUtils::CaseInsensitiveEqualTo::operator()(a1 + 32, v18, v19, v21, v22))
              return v16;
          }
          else
          {
            if (v14 <= 1)
            {
              v17 &= v12 - 1;
            }
            else if (v17 >= v12)
            {
              v17 %= v12;
            }
            if (v17 != v3)
              break;
          }
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
    }
  }
  v37 = operator new(0x28uLL);
  *v37 = 0;
  v37[1] = v11;
  v23 = (std::string *)(v37 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v23, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v23->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v37[4] = *(_QWORD *)(a3 + 16);
  }
  v24 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v25 = *(float *)(a1 + 32);
  if (!v12 || (float)(v25 * (float)v12) < v24)
  {
    v26 = 1;
    if (v12 >= 3)
      v26 = (v12 & (v12 - 1)) != 0;
    v27 = v26 | (2 * v12);
    v28 = vcvtps_u32_f32(v24 / v25);
    if (v27 <= v28)
      prime = v28;
    else
      prime = v27;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v30 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v30)
      goto LABEL_46;
    if (prime < *(_QWORD *)&v30)
    {
      v31 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v30 < 3uLL || (v32 = (uint8x8_t)vcnt_s8(v30), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        v31 = std::__next_prime(v31);
      }
      else
      {
        v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2)
          v31 = v33;
      }
      if (prime <= v31)
        prime = v31;
      if (prime < *(_QWORD *)&v30)
LABEL_46:
        std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v3 = v11 % v12;
      else
        v3 = v11;
    }
    else
    {
      v3 = (v12 - 1) & v11;
    }
  }
  v34 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v34)
  {
    *v37 = *v34;
    *v34 = v37;
  }
  else
  {
    *v37 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v37;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v37)
    {
      v35 = *(_QWORD *)(*v37 + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v35 >= v12)
          v35 %= v12;
      }
      else
      {
        v35 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v37;
    }
  }
  v16 = v37;
  ++*v7;
  return v16;
}

void sub_18C99021C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::string,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>>::~unique_ptr[abi:fe180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *std::unique_ptr<std::__hash_node<std::string,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>>::~unique_ptr[abi:fe180100](uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16) && *(char *)(v2 + 39) < 0)
      operator delete(*(void **)(v2 + 16));
    operator delete((void *)v2);
  }
  return a1;
}

void std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;

  if (a2)
  {
    if (a2 >> 61)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      v11 = (_QWORD *)*v7;
      if (*v7)
      {
        do
        {
          v13 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v13 >= a2)
              v13 %= a2;
          }
          else
          {
            v13 &= a2 - 1;
          }
          if (v13 != v8)
          {
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v13))
            {
              *(_QWORD *)(*(_QWORD *)a1 + 8 * v13) = v7;
              goto LABEL_19;
            }
            *v7 = *v11;
            v12 = 8 * v13;
            *v11 = **(_QWORD **)(*(_QWORD *)a1 + v12);
            **(_QWORD **)(*(_QWORD *)a1 + v12) = v11;
            v11 = v7;
          }
          v13 = v8;
LABEL_19:
          v7 = v11;
          v11 = (_QWORD *)*v11;
          v8 = v13;
        }
        while (v11);
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

uint64_t *std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::find<std::string>(_QWORD *a1, char *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int8x8_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t **v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  char *v20;
  uint64_t v21;

  v2 = a2;
  v4 = (uint64_t)(a1 + 3);
  v5 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v6 = a2[23];
  }
  else
  {
    a2 = *(char **)a2;
    v6 = v5;
  }
  v7 = AMSCore::StringUtils::CaseInsensitiveHash::operator()(v4, a2, v6);
  v8 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v8)
    return 0;
  v9 = v7;
  v10 = (uint8x8_t)vcnt_s8(v8);
  v10.i16[0] = vaddlv_u8(v10);
  v11 = v10.u32[0];
  if (v10.u32[0] > 1uLL)
  {
    v12 = v7;
    if (v7 >= *(_QWORD *)&v8)
      v12 = v7 % *(_QWORD *)&v8;
  }
  else
  {
    v12 = (*(_QWORD *)&v8 - 1) & v7;
  }
  v13 = *(uint64_t ***)(*a1 + 8 * v12);
  if (!v13)
    return 0;
  v14 = *v13;
  if (*v13)
  {
    v15 = (uint64_t)(a1 + 4);
    do
    {
      v16 = v14[1];
      if (v9 == v16)
      {
        if (*((char *)v14 + 39) < 0)
        {
          v17 = (char *)v14[2];
          v18 = v14[3];
        }
        else
        {
          v17 = (char *)(v14 + 2);
          v18 = *((unsigned __int8 *)v14 + 39);
        }
        v19 = v2[23];
        if (v19 >= 0)
          v20 = v2;
        else
          v20 = *(char **)v2;
        if (v19 >= 0)
          v21 = v2[23];
        else
          v21 = *((_QWORD *)v2 + 1);
        if (AMSCore::StringUtils::CaseInsensitiveEqualTo::operator()(v15, v17, v18, v20, v21))
          return v14;
      }
      else
      {
        if (v11 <= 1)
        {
          v16 &= *(_QWORD *)&v8 - 1;
        }
        else if (v16 >= *(_QWORD *)&v8)
        {
          v16 %= *(_QWORD *)&v8;
        }
        if (v16 != v12)
          return 0;
      }
      v14 = (uint64_t *)*v14;
    }
    while (v14);
  }
  return v14;
}

uint64_t AMSCore::Logger::log<char [27],std::string>(uint64_t result, int a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::ios_base *v16;
  uint64_t v17;
  size_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[8];
  void *__p[2];
  __int128 v28;
  int v29;
  uint64_t v30[19];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(result + 8) <= a2)
  {
    v11 = result;
    v12 = MEMORY[0x1E0DE4FE0];
    v13 = MEMORY[0x1E0DE4FE0] + 64;
    v14 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
    v15 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
    v30[0] = MEMORY[0x1E0DE4FE0] + 64;
    v25 = v14;
    *(_QWORD *)((char *)&v26[-1] + *(_QWORD *)(v14 - 24)) = v15;
    v16 = (std::ios_base *)((char *)&v26[-1] + *(_QWORD *)(v25 - 24));
    std::ios_base::init(v16, v26);
    v16[1].__vftable = 0;
    v16[1].__fmtflags_ = -1;
    v25 = v12 + 24;
    v30[0] = v13;
    std::streambuf::basic_streambuf();
    v17 = MEMORY[0x1E0DE4FB8];
    v26[0] = MEMORY[0x1E0DE4FB8] + 16;
    *(_OWORD *)__p = 0u;
    v28 = 0u;
    v29 = 16;
    AMSCore::Log::setRedaction(&v25);
    v18 = strlen(a5);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v25, (uint64_t)a5, v18);
    v19 = *(char *)(a6 + 23);
    if (v19 >= 0)
      v20 = a6;
    else
      v20 = *(_QWORD *)a6;
    if (v19 >= 0)
      v21 = *(unsigned __int8 *)(a6 + 23);
    else
      v21 = *(_QWORD *)(a6 + 8);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v25, v20, v21);
    v22 = v26[5];
    v23 = (char *)&v26[-1] + *(_QWORD *)(v25 - 24);
    if ((v23[32] & 5) != 0)
    {
      v24 = -1;
    }
    else
    {
      (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v23 + 5) + 32))(&rep, *((_QWORD *)v23 + 5), 0, 1, 16);
      v24 = v35;
    }
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v32 = a2;
    v33 = v22;
    v34 = v24;
    (*(void (**)(_QWORD, uint64_t, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v11 + 16) + 16))(*(_QWORD *)(v11 + 16), a3, a4, &rep);
    v25 = *MEMORY[0x1E0DE4F60];
    *(_QWORD *)((char *)&v26[-1] + *(_QWORD *)(v25 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v26[0] = v17 + 16;
    if (SBYTE7(v28) < 0)
      operator delete(__p[0]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x18D789B58](v30);
  }
  return result;
}

void sub_18C990754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t _ZZNSt3__113stop_callbackINS_8functionIFvvEEEEC1B8fe180100INS_22__intrusive_shared_ptrINS_12__stop_stateEEEZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS9_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS9_4TaskINS9_12HTTPResponseENS9_9HTTPErrorEE10CompletionEEEDaT_EUlvE_EENS4_13__private_tagEOSU_OT0_ENUlPNS_20__stop_callback_baseEE_8__invokeES11_(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 64);
  if (!v1)
    std::__throw_bad_function_call[abi:fe180100]();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

uint64_t _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEED1Ev(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 8));
  return a1;
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEED0Ev(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 8));
  JUMPOUT(0x18D789BDCLL);
}

id *_ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE7__cloneEv(uint64_t a1)
{
  id *v1;
  id *v2;

  v1 = (id *)(a1 + 8);
  v2 = (id *)operator new(0x10uLL);
  *v2 = &off_1E2522260;
  objc_copyWeak(v2 + 1, v1);
  return v2;
}

void _ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE7__cloneEPNS0_6__baseISR_EE(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E2522260;
  objc_copyWeak((id *)(a2 + 8), (id *)(a1 + 8));
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE7destroyEv(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 8));
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE18destroy_deallocateEv(id *a1)
{
  objc_destroyWeak(a1 + 1);
  operator delete(a1);
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEEclEv(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  objc_msgSend(WeakRetained, "cancel");

}

void sub_18C9908EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t _ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optional"
                     "INS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErr"
                     "orEE10CompletionEEEDaT_EUlvE_"
    || ((v3 & (unint64_t)"ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS"
                                "1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HT"
                                "TPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE_" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE_")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *_ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE_NS_9allocatorISO_EEFvvEE11target_typeEv()
{
  return &_ZTIZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE_;
}

uint64_t _ZNSt3__120__atomic_unique_lockIjLj2EE11__lock_implB8fe180100IRKZNS_12__stop_state14__add_callbackB8fe180100EPNS_20__stop_callback_baseEEUljE_RKNS1_16__set_locked_bitMUljE_EEEbOT_OT0_NS_12memory_orderE(unsigned int **a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v7;
  unsigned int *v8;
  unsigned int v10;
  __int128 v11;
  unsigned int *v12;
  __int128 v13;

  v10 = **a1;
LABEL_2:
  v7 = v10;
  if ((v10 & 1) != 0)
  {
LABEL_9:
    (*(void (**)(void))(*(_QWORD *)a2 + 16))();
  }
  else
  {
    while (v7 >= 4)
    {
      v8 = *a1;
      if ((v7 & 2) == 0)
      {
        if (!std::__cxx_atomic_compare_exchange_weak[abi:fe180100]<unsigned int>(v8, &v10, v7 | 2, a4, 0))
          goto LABEL_2;
        return 1;
      }
      *(_QWORD *)&v11 = *a1;
      *((_QWORD *)&v11 + 1) = v7;
      v12 = v8;
      v13 = v11;
      std::__libcpp_thread_poll_with_backoff[abi:fe180100]<std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int> &,std::__libcpp_atomic_wait_backoff_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,std::__cxx_atomic_wait_test_fn_impl<std::__cxx_atomic_impl<unsigned int,std::__cxx_atomic_base_impl<unsigned int>>,unsigned int>> &>((uint64_t)&v11, (uint64_t)&v12, 0);
      v7 = **a1;
      v10 = v7;
      if ((v7 & 1) != 0)
        goto LABEL_9;
    }
  }
  return 0;
}

uint64_t _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEED1Ev(uint64_t a1)
{
  id *v2;

  v2 = (id *)(a1 + 8);

  objc_destroyWeak(v2);
  return a1;
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEED0Ev(uint64_t a1)
{
  id *v1;

  v1 = (id *)(a1 + 8);

  objc_destroyWeak(v1);
  JUMPOUT(0x18D789BDCLL);
}

id *_ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE7__cloneEv(uint64_t a1)
{
  id *v2;
  id *v3;

  v2 = (id *)(a1 + 8);
  v3 = (id *)operator new(0x18uLL);
  *v3 = &off_1E2522208;
  objc_copyWeak(v3 + 1, v2);
  v3[2] = _Block_copy(*(const void **)(a1 + 16));
  return v3;
}

void *_ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE7__cloneEPNS0_6__baseISR_EE(uint64_t a1, uint64_t a2)
{
  void *result;

  *(_QWORD *)a2 = &off_1E2522208;
  objc_copyWeak((id *)(a2 + 8), (id *)(a1 + 8));
  result = _Block_copy(*(const void **)(a1 + 16));
  *(_QWORD *)(a2 + 16) = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE7destroyEv(uint64_t a1)
{
  id *v1;

  v1 = (id *)(a1 + 8);

  objc_destroyWeak(v1);
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE18destroy_deallocateEv(id *a1)
{
  id *v2;

  v2 = a1 + 1;

  objc_destroyWeak(v2);
  operator delete(a1);
}

void _ZNSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEEclEv(uint64_t a1)
{
  id *v1;
  id WeakRetained;

  v1 = (id *)(a1 + 8);
  (*(void (**)(void))(*(_QWORD *)(a1 + 16) + 16))();
  WeakRetained = objc_loadWeakRetained(v1);
  objc_msgSend(WeakRetained, "cancel");

}

void sub_18C990BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t _ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optional"
                     "INS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErr"
                     "orEE10CompletionEEEDaT_EUlvE0_"
    || ((v3 & (unint64_t)"ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS"
                                "1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HT"
                                "TPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3$_0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *_ZNKSt3__110__function6__funcIZZN7AMSCore17AppleHTTPProvider13submitRequestENS_10shared_ptrIKNS2_11HTTPRequestEEENS_8optionalINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEENK3__0clINS2_4TaskINS2_12HTTPResponseENS2_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_NS_9allocatorISO_EEFvvEE11target_typeEv()
{
  return &_ZTIZZN7AMSCore17AppleHTTPProvider13submitRequestENSt3__110shared_ptrIKNS_11HTTPRequestEEENS1_8optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEEENK3__0clINS_4TaskINS_12HTTPResponseENS_9HTTPErrorEE10CompletionEEEDaT_EUlvE0_;
}

std::runtime_error *AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from(std::runtime_error *result)
{
  std::runtime_error_vtbl *v1;
  std::runtime_error *v2;
  __int128 *v3;
  __int128 *v4;
  int what_low;
  __n128 v6;
  AMSCore::HTTPResponse *p_imp;
  std::runtime_error *v8;
  __n128 v9;
  std::__shared_weak_count *imp;
  unint64_t *p_shared_owners;
  unint64_t v12;

  v1 = result[92].__vftable;
  if (LOBYTE(v1[28].~runtime_error))
  {
    v2 = result;
    v3 = (__int128 *)&result[46];
    v4 = (__int128 *)&v1->~runtime_error_0;
    what_low = LOBYTE(v1[27].what);
    if (LOBYTE(v1[27].what))
      AMSCore::HTTPResponse::HTTPResponse((uint64_t)&result[46], v4);
    else
      v6 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(result + 46, (uint64_t)v4);
    LOBYTE(v2[87].__vftable) = what_low;
    if (LOBYTE(v2[43].__vftable))
    {
      p_imp = (AMSCore::HTTPResponse *)&v2[1].__imp_;
      if (LOBYTE(v2[42].__imp_.__imp_))
        AMSCore::HTTPResponse::~HTTPResponse(p_imp);
      else
        (**(void (***)(AMSCore::HTTPResponse *, __n128))p_imp)(p_imp, v6);
      LOBYTE(v2[43].__vftable) = 0;
      what_low = LOBYTE(v2[87].__vftable);
    }
    v8 = (std::runtime_error *)((char *)v2 + 24);
    if (what_low)
      AMSCore::HTTPResponse::HTTPResponse((uint64_t)v8, v3);
    else
      v9 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v8, (uint64_t)v3);
    LOBYTE(v2[42].__imp_.__imp_) = what_low;
    LOBYTE(v2[43].__vftable) = 1;
    if (LOBYTE(v2[87].__vftable))
    {
      AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v3);
      imp = (std::__shared_weak_count *)v2[92].__imp_.__imp_;
      if (!imp)
        goto LABEL_21;
    }
    else
    {
      (**(void (***)(__int128 *, __n128))v3)(v3, v9);
      imp = (std::__shared_weak_count *)v2[92].__imp_.__imp_;
      if (!imp)
      {
LABEL_21:
        v2[46].__vftable = (std::runtime_error_vtbl *)&v2[1];
        v2->__vftable = 0;
        LOBYTE(v2[93].__vftable) = 1;
        return (std::runtime_error *)AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::Awaiter::await_suspend(v3);
      }
    }
    p_shared_owners = (unint64_t *)&imp->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
      std::__shared_weak_count::__release_weak(imp);
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::from(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  AMSCore::HTTPResponse *v7;
  _QWORD *v8;
  uint64_t v9;

  if ((*(_BYTE *)(a1 + 1488) & 1) == 0)
  {
    v2 = *(std::__shared_weak_count **)(a1 + 1480);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(_QWORD **)(a1 + 728);
  if (v5 == (_QWORD *)(a1 + 704))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 704);
  }
  else
  {
    if (!v5)
      goto LABEL_12;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_12:
  if (*(_BYTE *)(a1 + 688))
  {
    v7 = (AMSCore::HTTPResponse *)(a1 + 24);
    if (*(_BYTE *)(a1 + 680))
      AMSCore::HTTPResponse::~HTTPResponse(v7);
    else
      (**(void (***)(AMSCore::HTTPResponse *))v7)(v7);
  }
  AMSCore::TaskCounter::~TaskCounter((AMSCore::TaskCounter *)(a1 + 16));
  v8 = *(_QWORD **)(a1 + 1464);
  if (v8 == (_QWORD *)(a1 + 1440))
  {
    v9 = 4;
    v8 = (_QWORD *)(a1 + 1440);
    goto LABEL_20;
  }
  if (v8)
  {
    v9 = 5;
LABEL_20:
    (*(void (**)(void))(*v8 + 8 * v9))();
  }
  operator delete((void *)a1);
}

std::runtime_error *AMSCore::AppleHTTPProvider::submitRequest(std::runtime_error *result)
{
  const char *imp;
  std::runtime_error *v2;
  __int128 *v3;
  __int128 *v4;
  int v5;
  __n128 v6;
  AMSCore::HTTPResponse *p_imp;
  std::runtime_error *v8;
  __n128 v9;
  std::runtime_error_vtbl *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  std::__libcpp_refstring *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;

  imp = result[93].__imp_.__imp_;
  if (!imp[672])
  {
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = (__int128 *)&result[46];
  v4 = (__int128 *)(imp + 8);
  v5 = *((unsigned __int8 *)imp + 664);
  if (imp[664])
    AMSCore::HTTPResponse::HTTPResponse((uint64_t)&result[46], v4);
  else
    v6 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(result + 46, (uint64_t)v4);
  LOBYTE(v2[87].__vftable) = v5;
  if (LOBYTE(v2[43].__vftable))
  {
    p_imp = (AMSCore::HTTPResponse *)&v2[1].__imp_;
    if (LOBYTE(v2[42].__imp_.__imp_))
      AMSCore::HTTPResponse::~HTTPResponse(p_imp);
    else
      (**(void (***)(AMSCore::HTTPResponse *, __n128))p_imp)(p_imp, v6);
    LOBYTE(v2[43].__vftable) = 0;
    v5 = LOBYTE(v2[87].__vftable);
  }
  v8 = (std::runtime_error *)((char *)v2 + 24);
  if (v5)
    AMSCore::HTTPResponse::HTTPResponse((uint64_t)v8, v3);
  else
    v9 = std::__expected_base<AMSCore::HTTPResponse,AMSCore::HTTPError>::__union_t::__union_t[abi:fe180100]<AMSCore::HTTPError>(v8, (uint64_t)v3);
  LOBYTE(v2[42].__imp_.__imp_) = v5;
  LOBYTE(v2[43].__vftable) = 1;
  if (LOBYTE(v2[87].__vftable))
  {
    AMSCore::HTTPResponse::~HTTPResponse((AMSCore::HTTPResponse *)v3);
    v10 = v2[94].__vftable;
    if (!v10)
      goto LABEL_21;
  }
  else
  {
    (**(void (***)(__int128 *, __n128))v3)(v3, v9);
    v10 = v2[94].__vftable;
    if (!v10)
      goto LABEL_21;
  }
  v11 = (unint64_t *)&v10->~runtime_error_0;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    v13 = (std::__shared_weak_count *)v2[94].__vftable;
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
LABEL_21:
  v14 = (std::__shared_weak_count *)v2[93].__vftable;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = (std::__libcpp_refstring *)v2[92].__vftable;
  if (v17 == &v2[90].__imp_)
  {
    v18 = 4;
    v17 = &v2[90].__imp_;
  }
  else
  {
    if (!v17)
      goto LABEL_31;
    v18 = 5;
  }
  (*(void (**)(void))&v17->__imp_[8 * v18])();
LABEL_31:
  v19 = (std::__shared_weak_count *)v2[89].__vftable;
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = (std::__shared_weak_count *)v2[88].__vftable;
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v2[94].__imp_.__imp_ = 0;
  v2[46].__vftable = (std::runtime_error_vtbl *)&v2[1];
  v2->__vftable = 0;
  return (std::runtime_error *)AMSCore::Task<AMSCore::HTTPResponse,AMSCore::HTTPError>::Promise::Awaiter::await_suspend(v3);
}

void AMSCore::AppleHTTPProvider::submitRequest(AMSCore::TaskCounter *this)
{
  AMSCore::TaskCounter *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  AMSCore::TaskCounter *v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  AMSCore::TaskCounter *v18;
  uint64_t v19;
  AMSCore::HTTPResponse *v20;
  unint64_t *v21;
  unint64_t v22;

  v2 = (AMSCore::TaskCounter *)((char *)this + 16);
  if (!*(_QWORD *)this)
  {
    v12 = (std::__shared_weak_count *)*((_QWORD *)this + 189);
    goto LABEL_29;
  }
  v3 = *((_QWORD *)this + 188);
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      v6 = (std::__shared_weak_count *)*((_QWORD *)this + 188);
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v7 = (std::__shared_weak_count *)*((_QWORD *)this + 186);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (AMSCore::TaskCounter *)*((_QWORD *)this + 184);
  if (v10 == (AMSCore::TaskCounter *)((char *)this + 1448))
  {
    v11 = 4;
    v10 = (AMSCore::TaskCounter *)((char *)this + 1448);
  }
  else
  {
    if (!v10)
      goto LABEL_18;
    v11 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v10 + 8 * v11))();
LABEL_18:
  v13 = (std::__shared_weak_count *)*((_QWORD *)this + 178);
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)this + 176);
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    v12 = 0;
  }
LABEL_29:
  v18 = (AMSCore::TaskCounter *)*((_QWORD *)this + 91);
  if (v18 == (AMSCore::TaskCounter *)((char *)this + 704))
  {
    v19 = 4;
    v18 = (AMSCore::TaskCounter *)((char *)this + 704);
  }
  else
  {
    if (!v18)
      goto LABEL_34;
    v19 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v18 + 8 * v19))();
LABEL_34:
  if (*((_BYTE *)this + 688))
  {
    v20 = (AMSCore::TaskCounter *)((char *)this + 24);
    if (*((_BYTE *)this + 680))
      AMSCore::HTTPResponse::~HTTPResponse(v20);
    else
      (**(void (***)(AMSCore::HTTPResponse *))v20)(v20);
  }
  AMSCore::TaskCounter::~TaskCounter(v2);
  if (v12)
  {
    v21 = (unint64_t *)&v12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  operator delete(this);
}

void AMSCore::extractTransactionMetrics(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, std::string::size_type a4@<X3>, uint64_t a5@<X4>, std::string *a6@<X8>)
{
  std::string::size_type v7;
  std::string::size_type v8;
  uint64_t i;
  __int16 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  nw_interface_radio_type_t path_radio_type;
  int v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  NSDate *v25;
  std::string *v26;
  char v27;
  std::string *v28;
  std::string::size_type v29;
  int v30;
  AMSCore *v31;
  std::string *v32;
  std::string *v33;
  NSDate *v34;
  NSDate *v35;
  NSDate *v36;
  NSDate *v37;
  NSDate *v38;
  std::string::size_type v39;
  NSDate *v40;
  std::vector<std::string> *v41;
  uint64_t nscount;
  res_9_sockaddr_union *v43;
  res_9_sockaddr_union *v44;
  unint64_t v45;
  char *v46;
  char *v47;
  std::string *v48;
  int v49;
  std::string::size_type v50;
  std::string *v51;
  NSDate *v52;
  NSDate *v53;
  NSDate *v54;
  NSDate *v55;
  std::string::size_type v56;
  id v57;
  id v58;
  const __CFData *v59;
  const UInt8 *BytePtr;
  u_long v61;
  __res_9_state *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  u_long v66;
  u_long v67;
  u_long v68;
  __res_9_state *v69;
  _BYTE *v70;
  u_long v71;
  std::string *v72;
  __res_9_state *v73;
  int v74;
  std::string::size_type v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  std::string *v80;
  std::string::size_type options;
  int *p_nscount;
  uint32_t path_index;
  int sin_port_high;
  std::string::value_type *__s;
  std::string::size_type v86;
  uint64_t v87;
  id obj;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  AMSCore *v93;
  AMSCore *v94;
  AMSCore *v95;
  AMSCore *v96;
  AMSCore *v97;
  AMSCore *v98;
  AMSCore *v99;
  AMSCore *v100;
  AMSCore *v101;
  AMSCore *v102;
  AMSCore *v103;
  std::string::size_type v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _DWORD v109[3];
  int v110;
  char *v111;
  char v112[128];
  char v113[48];
  __res_9_state v114;
  uint64_t v115;

  v76 = a3;
  v77 = a5;
  v75 = a4;
  v80 = a6;
  v115 = *MEMORY[0x1E0C80C00];
  v78 = a1;
  v79 = a2;
  objc_msgSend(v78, "transactionMetrics");
  v105 = 0u;
  v106 = 0u;
  v107 = 0u;
  v108 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v90 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v112, 16);
  if (!v90)
  {

    v30 = 0;
    v97 = 0;
    v98 = 0;
    v94 = 0;
    v95 = 0;
    v99 = 0;
    v100 = 0;
    v92 = 0;
    v93 = 0;
    v96 = 0;
    v101 = 0;
    v102 = 0;
    v31 = 0;
    v104 = 0;
    v8 = 0;
    v7 = 0;
    v87 = 0;
    __s = 0;
    v91 = 0;
    v32 = v80;
    v80->__r_.__value_.__s.__data_[0] = 0;
    v32[1].__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_69;
  }
  v91 = 0;
  __s = 0;
  v87 = 0;
  v92 = 0;
  v93 = 0;
  v7 = 0;
  v8 = 0;
  v103 = 0;
  v104 = 0;
  v101 = 0;
  v102 = 0;
  v99 = 0;
  v100 = 0;
  v95 = 0;
  v96 = 0;
  v94 = 0;
  v97 = 0;
  v98 = 0;
  v89 = *(_QWORD *)v106;
  path_index = *MEMORY[0x1E0CCED08];
  p_nscount = &v114.nscount;
  do
  {
    for (i = 0; i != v90; ++i)
    {
      if (*(_QWORD *)v106 != v89)
        objc_enumerationMutation(obj);
      v11 = *(void **)(*((_QWORD *)&v105 + 1) + 8 * i);
      if (!HIDWORD(v92))
      {
        LODWORD(v87) = objc_msgSend(v11, "resourceFetchType") == 3;
        HIDWORD(v87) = objc_msgSend(v11, "isReusedConnection");
        v92 = 0x100000001;
      }
      v12 = objc_msgSend(v11, "countOfRequestBodyBytesSent");
      v13 = objc_msgSend(v11, "countOfRequestHeaderBytesSent");
      v14 = objc_msgSend(v11, "countOfResponseBodyBytesReceived");
      v15 = objc_msgSend(v11, "countOfResponseHeaderBytesReceived");
      v16 = objc_msgSend(v11, "countOfResponseBodyBytesAfterDecoding");
      v17 = objc_msgSend(v11, "countOfResponseHeaderBytesReceived");
      if (v103)
      {
        if (v102)
          goto LABEL_14;
      }
      else
      {
        objc_msgSend(v11, "connectStartDate");
        v103 = (AMSCore *)objc_claimAutoreleasedReturnValue();
        if (v102)
        {
LABEL_14:
          if (v101)
            goto LABEL_15;
          goto LABEL_27;
        }
      }
      objc_msgSend(v11, "connectEndDate");
      v102 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v101)
      {
LABEL_15:
        if (v100)
          goto LABEL_16;
        goto LABEL_28;
      }
LABEL_27:
      objc_msgSend(v11, "secureConnectionStartDate");
      v101 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v100)
      {
LABEL_16:
        if (v96)
          goto LABEL_17;
        goto LABEL_29;
      }
LABEL_28:
      objc_msgSend(v11, "domainLookupStartDate");
      v100 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v96)
      {
LABEL_17:
        if (v94)
          goto LABEL_18;
        goto LABEL_30;
      }
LABEL_29:
      objc_msgSend(v11, "fetchStartDate");
      v96 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v94)
      {
LABEL_18:
        if (v93)
          goto LABEL_19;
        goto LABEL_31;
      }
LABEL_30:
      objc_msgSend(v11, "requestStartDate");
      v94 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v93)
      {
LABEL_19:
        if (v99)
          goto LABEL_20;
        goto LABEL_32;
      }
LABEL_31:
      objc_msgSend(v11, "responseStartDate");
      v93 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v99)
      {
LABEL_20:
        if (v98)
          goto LABEL_21;
        goto LABEL_33;
      }
LABEL_32:
      objc_msgSend(v11, "secureConnectionEndDate");
      v99 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v98)
      {
LABEL_21:
        if (v95)
          goto LABEL_22;
        goto LABEL_34;
      }
LABEL_33:
      objc_msgSend(v11, "domainLookupEndDate");
      v98 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (v95)
      {
LABEL_22:
        if (!v97)
          goto LABEL_35;
        goto LABEL_23;
      }
LABEL_34:
      objc_msgSend(v11, "requestEndDate");
      v95 = (AMSCore *)objc_claimAutoreleasedReturnValue();
      if (!v97)
      {
LABEL_35:
        objc_msgSend(v11, "responseEndDate");
        v97 = (AMSCore *)objc_claimAutoreleasedReturnValue();
        if (v91)
          goto LABEL_7;
        goto LABEL_36;
      }
LABEL_23:
      if (v91)
        goto LABEL_7;
LABEL_36:
      objc_msgSend(v11, "_dataTransferReport");
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = v18;
      if (v18 && nw_data_transfer_report_get_path_count(v18))
      {
        path_radio_type = nw_data_transfer_report_get_path_radio_type(v19, path_index);
        v86 = v7;
        switch(path_radio_type)
        {
          case nw_interface_radio_type_unknown:
            sin_port_high = 7;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 7;
            v114.retrans = 1852534389;
            v21 = 1853321070;
            goto LABEL_50;
          case nw_interface_radio_type_wifi_b:
            sin_port_high = 6;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 6;
            v114.retrans = 1768319351;
            v10 = 25183;
            goto LABEL_5;
          case nw_interface_radio_type_wifi_a:
            sin_port_high = 6;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 6;
            v114.retrans = 1768319351;
            v10 = 24927;
            goto LABEL_5;
          case nw_interface_radio_type_wifi_g:
            sin_port_high = 6;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 6;
            v114.retrans = 1768319351;
            v10 = 26463;
            goto LABEL_5;
          case nw_interface_radio_type_wifi_n:
            sin_port_high = 6;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 6;
            v114.retrans = 1768319351;
            v10 = 28255;
LABEL_5:
            LOWORD(v114.retry) = v10;
            BYTE2(v114.retry) = 0;
            break;
          case nw_interface_radio_type_wifi_ac:
            sin_port_high = 7;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 7;
            v114.retrans = 1768319351;
            v21 = 1667325801;
            goto LABEL_50;
          case nw_interface_radio_type_wifi_ax:
            sin_port_high = 7;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 7;
            v114.retrans = 1768319351;
            v21 = 2019647337;
LABEL_50:
            *(int *)((char *)&v114.retrans + 3) = v21;
            HIBYTE(v114.retry) = 0;
            break;
          case nw_interface_radio_type_cell_lte:
            sin_port_high = 8;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 8;
            v22 = 0x65746C5F6C6C6563;
            goto LABEL_52;
          case nw_interface_radio_type_cell_endc_sub6:
            sin_port_high = 14;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 14;
            v23 = "cell_endc_sub6";
            goto LABEL_54;
          case nw_interface_radio_type_cell_endc_mmw:
            sin_port_high = 13;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 13;
            strcpy((char *)&v114, "cell_endc_mmw");
            break;
          case nw_interface_radio_type_cell_nr_sa_sub6:
            sin_port_high = 15;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 15;
            strcpy((char *)&v114, "cell_nr_sa_sub6");
            break;
          case nw_interface_radio_type_cell_nr_sa_mmw:
            sin_port_high = 14;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 14;
            v23 = "cell_nr_sa_mmw";
LABEL_54:
            *(_QWORD *)&v114.retrans = *(_QWORD *)v23;
            *(_QWORD *)((char *)&v114.retry + 2) = *(_QWORD *)(v23 + 6);
            BYTE6(v114.options) = 0;
            break;
          case nw_interface_radio_type_cell_wcdma:
            sin_port_high = 10;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 10;
            strcpy((char *)&v114, "cell_wcdma");
            break;
          case nw_interface_radio_type_cell_gsm:
            sin_port_high = 8;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 8;
            v22 = 0x6D73675F6C6C6563;
LABEL_52:
            *(_QWORD *)&v114.retrans = v22;
            LOBYTE(v114.options) = 0;
            break;
          case nw_interface_radio_type_cell_cdma:
            sin_port_high = 9;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 9;
            LOWORD(v114.options) = 97;
            v24 = "cell_cdma";
            goto LABEL_58;
          case nw_interface_radio_type_cell_evdo:
            sin_port_high = 9;
            HIBYTE(v114.nsaddr_list[0].sin_port) = 9;
            LOWORD(v114.options) = 111;
            v24 = "cell_evdo";
LABEL_58:
            *(_QWORD *)&v114.retrans = *(_QWORD *)v24;
            break;
          default:
            std::to_string((std::string *)&v114, path_radio_type);
            sin_port_high = HIBYTE(v114.nsaddr_list[0].sin_port);
            break;
        }
        options = v114.options;
        __s = *(std::string::value_type **)&v114.retrans;
        *(_DWORD *)v113 = *p_nscount;
        *(_DWORD *)&v113[3] = *(int *)((char *)p_nscount + 3);

        v109[0] = *(_DWORD *)v113;
        *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)&v113[3];
        v91 = 1;
        v7 = v86;
      }
      else
      {

        v91 = 0;
      }
LABEL_7:
      v8 += v12 + v13;
      v7 += v14 + v15;
      v104 += v16 + v17;
    }
    v90 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v105, v112, 16);
  }
  while (v90);

  v26 = v80;
  v80->__r_.__value_.__s.__data_[0] = 0;
  v26[1].__r_.__value_.__s.__data_[0] = 0;
  if (v91)
  {
    v27 = sin_port_high;
    v28 = v80;
    if ((sin_port_high & 0x80) != 0)
    {
      std::string::__init_copy_ctor_external(v80, __s, options);
    }
    else
    {
      v29 = options;
      v80->__r_.__value_.__r.__words[0] = (std::string::size_type)__s;
      v28->__r_.__value_.__l.__size_ = v29;
      LODWORD(v28->__r_.__value_.__r.__words[2]) = v109[0];
      *(_DWORD *)((char *)&v28->__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v109 + 3);
      *((_BYTE *)&v28->__r_.__value_.__s + 23) = v27;
    }
    v30 = 1;
    v28[1].__r_.__value_.__s.__data_[0] = 1;
  }
  else
  {
    v30 = 0;
    v91 = 0;
  }
  v31 = v103;
LABEL_69:
  v103 = v31;
  v33 = v80;
  v80[1].__r_.__value_.__l.__size_ = (std::string::size_type)AMSCore::makeOptionalTimePoint(v31, v25);
  v33[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v34;
  v33[2].__r_.__value_.__r.__words[0] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v102, v34);
  v33[2].__r_.__value_.__l.__size_ = (std::string::size_type)v35;
  v33[2].__r_.__value_.__r.__words[2] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v101, v35);
  v33[3].__r_.__value_.__r.__words[0] = (std::string::size_type)v36;
  v33[3].__r_.__value_.__l.__size_ = (std::string::size_type)AMSCore::makeOptionalTimePoint(v99, v36);
  v33[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v37;
  v33[4].__r_.__value_.__r.__words[0] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v100, v37);
  v33[4].__r_.__value_.__l.__size_ = (std::string::size_type)v38;
  v33[4].__r_.__value_.__r.__words[2] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v98, v38);
  v33[5].__r_.__value_.__r.__words[0] = v39;
  v41 = (std::vector<std::string> *)&v33[5].__r_.__value_.__r.__words[1];
  if (res_9_ninit(&v114) || (nscount = v114.nscount, v114.nscount < 0))
  {
    v41->__begin_ = 0;
    v33[5].__r_.__value_.__r.__words[2] = 0;
    v33[6].__r_.__value_.__r.__words[0] = 0;
  }
  else
  {
    if (v114.nscount)
    {
      v43 = (res_9_sockaddr_union *)operator new((unint64_t)v114.nscount << 7);
      bzero(v43, nscount << 7);
      v44 = &v43[nscount];
    }
    else
    {
      v43 = 0;
      v44 = 0;
    }
    res_9_getservers(&v114, v43, nscount);
    v86 = v7;
    v41->__begin_ = 0;
    v41->__end_ = 0;
    v41->__end_cap_.__value_ = 0;
    std::vector<std::string>::reserve(v41, v114.nscount);
    if (v114.nscount)
    {
      v45 = 0;
      v46 = &v43->__space[4];
      do
      {
        if (v44 - v43 == v45)
        {
          __break(1u);
          return;
        }
        v49 = *(v46 - 3);
        if (v49 == 30)
        {
          inet_ntop(30, v46 + 4, v113, 0x2Eu);
          LODWORD(v111) = 0;
          v110 = 46;
          v50 = v80[5].__r_.__value_.__r.__words[2];
          if (v50 < v80[6].__r_.__value_.__r.__words[0])
          {
            std::construct_at[abi:fe180100]<std::string,char (&)[46],int,int,std::string*>((char *)v80[5].__r_.__value_.__r.__words[2], v113, (int *)&v111, &v110);
            goto LABEL_88;
          }
          v47 = std::vector<std::string>::__emplace_back_slow_path<char (&)[46],int,int>((void **)&v41->__begin_, v113, (int *)&v111, &v110);
        }
        else
        {
          if (v49 != 2)
            goto LABEL_80;
          inet_ntop(2, v46, v113, 0x10u);
          LODWORD(v111) = 0;
          v110 = 16;
          v50 = v80[5].__r_.__value_.__r.__words[2];
          if (v50 < v80[6].__r_.__value_.__r.__words[0])
          {
            std::construct_at[abi:fe180100]<std::string,char (&)[16],int,int,std::string*>((char *)v80[5].__r_.__value_.__r.__words[2], v113, (int *)&v111, &v110);
LABEL_88:
            v47 = (char *)(v50 + 24);
            v48 = v80;
            v80[5].__r_.__value_.__r.__words[2] = v50 + 24;
            goto LABEL_79;
          }
          v47 = std::vector<std::string>::__emplace_back_slow_path<char (&)[16],int,int>((void **)&v41->__begin_, v113, (int *)&v111, &v110);
        }
        v48 = v80;
LABEL_79:
        v48[5].__r_.__value_.__r.__words[2] = (std::string::size_type)v47;
LABEL_80:
        ++v45;
        v46 += 128;
      }
      while (v45 < v114.nscount);
    }
    res_9_ndestroy(&v114);
    v7 = v86;
    if (v43)
      operator delete(v43);
  }
  v51 = v80;
  v80[6].__r_.__value_.__l.__size_ = (std::string::size_type)AMSCore::makeOptionalTimePoint(v96, v40);
  v51[6].__r_.__value_.__r.__words[2] = (std::string::size_type)v52;
  v51[7].__r_.__value_.__r.__words[0] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v94, v52);
  v51[7].__r_.__value_.__l.__size_ = (std::string::size_type)v53;
  v51[7].__r_.__value_.__r.__words[2] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v95, v53);
  v51[8].__r_.__value_.__r.__words[0] = (std::string::size_type)v54;
  v51[8].__r_.__value_.__l.__size_ = v8;
  v51[8].__r_.__value_.__s.__data_[16] = 1;
  v51[9].__r_.__value_.__r.__words[0] = v7;
  v51[9].__r_.__value_.__s.__data_[8] = 1;
  v51[9].__r_.__value_.__r.__words[2] = v104;
  v51[10].__r_.__value_.__s.__data_[0] = 1;
  v51[10].__r_.__value_.__l.__size_ = (std::string::size_type)AMSCore::makeOptionalTimePoint(v93, v54);
  v51[10].__r_.__value_.__r.__words[2] = (std::string::size_type)v55;
  v51[11].__r_.__value_.__r.__words[0] = (std::string::size_type)AMSCore::makeOptionalTimePoint(v97, v55);
  v51[11].__r_.__value_.__l.__size_ = v56;
  LOWORD(v51[11].__r_.__value_.__r.__words[2]) = v87 | (unsigned __int16)(WORD2(v92) << 8);
  WORD1(v51[11].__r_.__value_.__r.__words[2]) = BYTE4(v87) | (unsigned __int16)((_WORD)v92 << 8);
  v51[12].__r_.__value_.__r.__words[0] = v75;
  v51[12].__r_.__value_.__s.__data_[8] = v77;
  LOWORD(v51[12].__r_.__value_.__r.__words[2]) = v76;
  v57 = v79;
  v58 = v78;
  if (!v57
    || (*(_QWORD *)v113 = 0,
        objc_msgSend(v57, "_CFURLResponse"),
        v59 = (const __CFData *)CFURLResponseCopyPeerAddress(),
        (*(_QWORD *)v113 = v59) == 0))
  {
    v51[13].__r_.__value_.__s.__data_[0] = 0;
    v51[14].__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_125;
  }
  v111 = v113;
  BytePtr = CFDataGetBytePtr(v59);
  v61 = *BytePtr;
  if (v61 >= 0x17)
  {
    v63 = (v61 & 0xF8) + 8;
    if ((v61 | 7) != 0x17)
      v63 = v61 | 7;
    v64 = v63 + 1;
    v62 = (__res_9_state *)operator new(v63 + 1);
    *(_QWORD *)&v114.nscount = v64 | 0x8000000000000000;
    *(_QWORD *)&v114.retrans = v62;
    v114.options = v61;
    goto LABEL_101;
  }
  HIBYTE(v114.nsaddr_list[0].sin_port) = *BytePtr;
  v62 = &v114;
  if ((_DWORD)v61)
LABEL_101:
    bzero(v62, v61);
  *((_BYTE *)&v62->retrans + v61) = 0;
  if ((v114.nsaddr_list[0].sin_port & 0x8000u) == 0)
    v65 = (char *)&v114;
  else
    v65 = *(char **)&v114.retrans;
  if (inet_ntop(BytePtr[1], BytePtr + 4, v65, v61))
  {
    v66 = HIBYTE(v114.nsaddr_list[0].sin_port);
    v67 = v114.options;
    if ((v114.nsaddr_list[0].sin_port & 0x8000u) == 0)
      v68 = HIBYTE(v114.nsaddr_list[0].sin_port);
    else
      v68 = v114.options;
    if (v68)
    {
      if ((v114.nsaddr_list[0].sin_port & 0x8000u) == 0)
        v69 = &v114;
      else
        v69 = *(__res_9_state **)&v114.retrans;
      v70 = memchr(v69, 0, v68);
      v71 = v70 - (_BYTE *)v69;
      if (!v70)
        v71 = -1;
      if ((v66 & 0x80) == 0)
      {
LABEL_116:
        v72 = v80;
        if (v71 <= v66)
        {
          HIBYTE(v114.nsaddr_list[0].sin_port) = v71 & 0x7F;
          v73 = &v114;
          goto LABEL_123;
        }
LABEL_131:
        std::string::__throw_out_of_range[abi:fe180100]();
      }
    }
    else
    {
      v71 = -1;
      if ((v114.nsaddr_list[0].sin_port & 0x8000u) == 0)
        goto LABEL_116;
    }
    v72 = v80;
    if (v67 < v71)
      goto LABEL_131;
    v73 = *(__res_9_state **)&v114.retrans;
    v114.options = v71;
LABEL_123:
    *((_BYTE *)&v73->retrans + v71) = 0;
    *(_OWORD *)&v72[13].__r_.__value_.__l.__data_ = *(_OWORD *)&v114.retrans;
    v72[13].__r_.__value_.__r.__words[2] = *(_QWORD *)&v114.nscount;
    v72[14].__r_.__value_.__s.__data_[0] = 1;
  }
  else
  {
    v51[13].__r_.__value_.__s.__data_[0] = 0;
    v51[14].__r_.__value_.__s.__data_[0] = 0;
    if (SHIBYTE(v114.nsaddr_list[0].sin_port) < 0)
      operator delete(*(void **)&v114.retrans);
  }
  CFRelease(*(CFTypeRef *)v111);
LABEL_125:

  if ((sin_port_high & 0x80u) != 0)
    v74 = v30;
  else
    v74 = 0;
  if (v74 == 1)
    operator delete(__s);

}

void sub_18C991F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37)
{
  uint64_t v37;

  if (*(_BYTE *)(v37 + 24))
  {
    if (*(char *)(a15 + 23) < 0)
      operator delete(*(void **)a15);
  }
  operator delete(__p);

  _Unwind_Resume(a1);
}

void **std::vector<std::string>::~vector[abi:fe180100](void **a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 1) < 0)
          operator delete(*(v3 - 3));
        v3 -= 3;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void std::vector<std::string>::reserve(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  std::vector<std::string>::pointer begin;
  std::vector<std::string>::pointer end;
  std::vector<std::string>::size_type v5;
  char *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  __int128 v10;
  std::vector<std::string>::pointer v11;

  begin = this->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 3) < __n)
  {
    if (__n >= 0xAAAAAAAAAAAAAABLL)
      std::vector<std::string>::__throw_length_error[abi:fe180100]();
    end = this->__end_;
    v5 = 24 * __n;
    v6 = (char *)operator new(24 * __n);
    v7 = (std::string *)&v6[v5];
    v8 = (std::string *)&v6[24 * (end - begin)];
    if (end == begin)
    {
      this->__begin_ = v8;
      this->__end_ = v8;
      this->__end_cap_.__value_ = v7;
      if (begin)
LABEL_13:
        operator delete(begin);
    }
    else
    {
      v9 = (std::string *)&v6[24 * (end - begin)];
      do
      {
        v10 = *(_OWORD *)&end[-1].__r_.__value_.__l.__data_;
        v9[-1].__r_.__value_.__r.__words[2] = end[-1].__r_.__value_.__r.__words[2];
        *(_OWORD *)&v9[-1].__r_.__value_.__l.__data_ = v10;
        --v9;
        end[-1].__r_.__value_.__l.__size_ = 0;
        end[-1].__r_.__value_.__r.__words[2] = 0;
        end[-1].__r_.__value_.__r.__words[0] = 0;
        --end;
      }
      while (end != begin);
      v11 = this->__begin_;
      begin = this->__end_;
      this->__begin_ = v9;
      this->__end_ = v8;
      this->__end_cap_.__value_ = v7;
      if (begin != v11)
      {
        do
        {
          if (SHIBYTE(begin[-1].__r_.__value_.__r.__words[2]) < 0)
            operator delete(begin[-1].__r_.__value_.__l.__data_);
          --begin;
        }
        while (begin != v11);
        begin = v11;
      }
      if (begin)
        goto LABEL_13;
    }
  }
}

void std::vector<std::string>::__throw_length_error[abi:fe180100]()
{
  std::__throw_length_error[abi:fe180100]("vector");
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  std::__split_buffer<std::string>::pointer end;
  std::__split_buffer<std::string>::pointer begin;
  std::__split_buffer<std::string>::pointer v4;

  begin = this->__begin_;
  end = this->__end_;
  if (end != begin)
  {
    do
    {
      v4 = end - 1;
      this->__end_ = end - 1;
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v4->__r_.__value_.__l.__data_);
        v4 = this->__end_;
      }
      end = v4;
    }
    while (v4 != begin);
  }
  if (this->__first_)
    operator delete(this->__first_);
}

char *std::vector<std::string>::__emplace_back_slow_path<char (&)[16],int,int>(void **a1, char *a2, int *a3, int *a4)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  __int128 v15;
  char *v16;
  char *v18;
  char *v19;

  v5 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<std::string>::__throw_length_error[abi:fe180100]();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v6)
    v6 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v10 = 0xAAAAAAAAAAAAAAALL;
  else
    v10 = v6;
  if (v10)
  {
    if (v10 > 0xAAAAAAAAAAAAAAALL)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v11 = (char *)operator new(24 * v10);
  }
  else
  {
    v11 = 0;
  }
  v18 = &v11[24 * v5];
  v19 = &v11[24 * v10];
  std::construct_at[abi:fe180100]<std::string,char (&)[16],int,int,std::string*>(v18, a2, a3, a4);
  v12 = v18;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
    v16 = (char *)a1[1];
  }
  else
  {
    do
    {
      v15 = *(_OWORD *)(v14 - 24);
      *((_QWORD *)v12 - 1) = *((_QWORD *)v14 - 1);
      *(_OWORD *)(v12 - 24) = v15;
      v12 -= 24;
      *((_QWORD *)v14 - 2) = 0;
      *((_QWORD *)v14 - 1) = 0;
      *((_QWORD *)v14 - 3) = 0;
      v14 -= 24;
    }
    while (v14 != v13);
    v16 = (char *)*a1;
    v14 = (char *)a1[1];
  }
  *a1 = v12;
  a1[1] = v18 + 24;
  a1[2] = v19;
  if (v14 == v16)
  {
    if (v14)
LABEL_17:
      operator delete(v14);
  }
  else
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v16);
    v14 = v16;
    if (v16)
      goto LABEL_17;
  }
  return v18 + 24;
}

void sub_18C9924E0(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

char *std::construct_at[abi:fe180100]<std::string,char (&)[16],int,int,std::string*>(char *a1, char *__s, int *a3, int *a4)
{
  size_t v8;
  size_t v9;
  __int128 *p_dst;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  size_t v16;
  int v17;
  char *v18;
  char *v19;
  __int128 __dst;
  unint64_t v22;

  v8 = strlen(__s);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  v9 = v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    p_dst = (__int128 *)operator new(v11 + 1);
    *((_QWORD *)&__dst + 1) = v9;
    v22 = v12 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v22) = v8;
  p_dst = &__dst;
  if (v8)
LABEL_8:
    memcpy(p_dst, __s, v9);
  *((_BYTE *)p_dst + v9) = 0;
  v13 = *a3;
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22) >= v13)
    {
      v14 = HIBYTE(v22);
      goto LABEL_13;
    }
LABEL_25:
    std::string::__throw_out_of_range[abi:fe180100]();
  }
  v14 = *((_QWORD *)&__dst + 1);
  if (*((_QWORD *)&__dst + 1) < v13)
    goto LABEL_25;
LABEL_13:
  v15 = v14 - v13;
  if (v15 >= *a4)
    v16 = *a4;
  else
    v16 = v15;
  *((_QWORD *)a1 + 2) = v22;
  *(_OWORD *)a1 = __dst;
  v17 = a1[23];
  v18 = a1;
  if (v17 < 0)
    v18 = *(char **)a1;
  if (v16)
  {
    memmove(v18, &v18[v13], v16);
    LOBYTE(v17) = a1[23];
  }
  if ((v17 & 0x80) != 0)
  {
    *((_QWORD *)a1 + 1) = v16;
    v19 = *(char **)a1;
  }
  else
  {
    a1[23] = v16 & 0x7F;
    v19 = a1;
  }
  v19[v16] = 0;
  return a1;
}

void sub_18C992658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  char v10;

  if (v10 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::string::__throw_out_of_range[abi:fe180100]()
{
  std::__throw_out_of_range[abi:fe180100]("basic_string");
}

void std::__throw_out_of_range[abi:fe180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:fe180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E251A540, MEMORY[0x1E0DE42E0]);
}

void sub_18C9926C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:fe180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5028] + 16);
  return result;
}

char *std::vector<std::string>::__emplace_back_slow_path<char (&)[46],int,int>(void **a1, char *a2, int *a3, int *a4)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  __int128 v15;
  char *v16;
  char *v18;
  char *v19;

  v5 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<std::string>::__throw_length_error[abi:fe180100]();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v6)
    v6 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v10 = 0xAAAAAAAAAAAAAAALL;
  else
    v10 = v6;
  if (v10)
  {
    if (v10 > 0xAAAAAAAAAAAAAAALL)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v11 = (char *)operator new(24 * v10);
  }
  else
  {
    v11 = 0;
  }
  v18 = &v11[24 * v5];
  v19 = &v11[24 * v10];
  std::construct_at[abi:fe180100]<std::string,char (&)[46],int,int,std::string*>(v18, a2, a3, a4);
  v12 = v18;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
    v16 = (char *)a1[1];
  }
  else
  {
    do
    {
      v15 = *(_OWORD *)(v14 - 24);
      *((_QWORD *)v12 - 1) = *((_QWORD *)v14 - 1);
      *(_OWORD *)(v12 - 24) = v15;
      v12 -= 24;
      *((_QWORD *)v14 - 2) = 0;
      *((_QWORD *)v14 - 1) = 0;
      *((_QWORD *)v14 - 3) = 0;
      v14 -= 24;
    }
    while (v14 != v13);
    v16 = (char *)*a1;
    v14 = (char *)a1[1];
  }
  *a1 = v12;
  a1[1] = v18 + 24;
  a1[2] = v19;
  if (v14 == v16)
  {
    if (v14)
LABEL_17:
      operator delete(v14);
  }
  else
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v16);
    v14 = v16;
    if (v16)
      goto LABEL_17;
  }
  return v18 + 24;
}

void sub_18C992888(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

char *std::construct_at[abi:fe180100]<std::string,char (&)[46],int,int,std::string*>(char *a1, char *__s, int *a3, int *a4)
{
  size_t v8;
  size_t v9;
  __int128 *p_dst;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  size_t v16;
  int v17;
  char *v18;
  char *v19;
  __int128 __dst;
  unint64_t v22;

  v8 = strlen(__s);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  v9 = v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    p_dst = (__int128 *)operator new(v11 + 1);
    *((_QWORD *)&__dst + 1) = v9;
    v22 = v12 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v22) = v8;
  p_dst = &__dst;
  if (v8)
LABEL_8:
    memcpy(p_dst, __s, v9);
  *((_BYTE *)p_dst + v9) = 0;
  v13 = *a3;
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22) >= v13)
    {
      v14 = HIBYTE(v22);
      goto LABEL_13;
    }
LABEL_25:
    std::string::__throw_out_of_range[abi:fe180100]();
  }
  v14 = *((_QWORD *)&__dst + 1);
  if (*((_QWORD *)&__dst + 1) < v13)
    goto LABEL_25;
LABEL_13:
  v15 = v14 - v13;
  if (v15 >= *a4)
    v16 = *a4;
  else
    v16 = v15;
  *((_QWORD *)a1 + 2) = v22;
  *(_OWORD *)a1 = __dst;
  v17 = a1[23];
  v18 = a1;
  if (v17 < 0)
    v18 = *(char **)a1;
  if (v16)
  {
    memmove(v18, &v18[v13], v16);
    LOBYTE(v17) = a1[23];
  }
  if ((v17 & 0x80) != 0)
  {
    *((_QWORD *)a1 + 1) = v16;
    v19 = *(char **)a1;
  }
  else
  {
    a1[23] = v16 & 0x7F;
    v19 = a1;
  }
  v19[v16] = 0;
  return a1;
}

void sub_18C992A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  char v10;

  if (v10 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

CFTypeRef **_ZZN7AMSCore7finallyIZN12_GLOBAL__N_119getResolveIPAddressEP13NSURLResponseP23NSURLSessionTaskMetricsE3__0EEDaOT_EN7FinallyD1Ev(CFTypeRef **a1)
{
  CFRelease(**a1);
  return a1;
}

void AMSCore::makeAny(__n128 *__return_ptr a1@<X8>, AMSCore *this@<X0>)
{
  AMSCore *v5;
  const void *v6;
  unint64_t v7;
  size_t v8;
  __n128 *p_p;
  NSDate *v10;
  uint64_t isKindOfClass;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  AMSCore::Any *v18;
  uint64_t *v19;
  void *v20;
  void *v21;
  __n128 __p;
  unint64_t v23;
  char v24;

  if (!this)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Any AMSCore::makeAny(id  _Nonnull const __strong)");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v21, CFSTR("FoundationUtils.mm"), 102, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("object"));

  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    AMSCore::makeAnyNumber(this, (uint64_t)a1);
    return;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    AMSCore::makeString(this, (char *)&__p);
    AMSCore::Any::Any(a1, &__p);
    if (SHIBYTE(v23) < 0)
      operator delete((void *)__p.n128_u64[0]);
    return;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = objc_retainAutorelease(this);
    v6 = (const void *)-[AMSCore bytes](v5, "bytes");
    v7 = -[AMSCore length](v5, "length");
    v8 = v7;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:fe180100]();
    if (v7 >= 0x17)
    {
      v14 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17)
        v14 = v7 | 7;
      v15 = v14 + 1;
      p_p = (__n128 *)operator new(v14 + 1);
      __p.n128_u64[1] = v8;
      v23 = v15 | 0x8000000000000000;
      __p.n128_u64[0] = (unint64_t)p_p;
    }
    else
    {
      HIBYTE(v23) = v7;
      p_p = &__p;
      if (!v7)
      {
LABEL_22:
        p_p->n128_u8[v8] = 0;
        AMSCore::Any::Any(a1, &__p);
        if (SHIBYTE(v23) < 0)
          operator delete((void *)__p.n128_u64[0]);
LABEL_24:

        return;
      }
    }
    memmove(p_p, v6, v8);
    goto LABEL_22;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    a1->n128_u64[0] = AMSCore::makeTimePoint(this, v10);
    a1[1].n128_u32[2] = 7;
    return;
  }
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      AMSCore::makeAnyVector(this, (uint64_t)&__p);
      AMSCore::Any::Any((uint64_t)a1, &__p);
      std::vector<AMSCore::Any>::~vector[abi:fe180100]((void **)&__p);
      return;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Any AMSCore::makeAny(id  _Nonnull const __strong)");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, CFSTR("FoundationUtils.mm"), 135, CFSTR("Unhandled class type(%@) found"), objc_opt_class());

      v19 = AMSCore::Any::Null(v18);
      AMSCore::Any::Any((uint64_t)a1, (uint64_t)v19);
      return;
    }
    v5 = this;
    AMSCore::makeAnyMap(v5, (uint64_t)&__p);
    AMSCore::Any::Any((uint64_t)a1, &__p);
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&__p, (unsigned int *)__p.n128_u64[1]);
    goto LABEL_24;
  }
  v12 = AMSCore::Any::Null((AMSCore::Any *)isKindOfClass);
  a1->n128_u8[0] = 0;
  a1[1].n128_u32[2] = -1;
  v13 = *((unsigned int *)v12 + 6);
  if ((_DWORD)v13 != -1)
  {
    ((void (*)(char *, __n128 *, uint64_t *))off_1E252BEF0[v13])(&v24, a1, v12);
    a1[1].n128_u32[2] = v13;
  }
}

void sub_18C992DDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18C992E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;
  uint64_t v13;

  v13 = *(unsigned int *)(v11 + 24);
  if ((_DWORD)v13 != -1)
    ((void (*)(char *, uint64_t))off_1E252BEA0[v13])(&a11, v11);
  *(_DWORD *)(v11 + 24) = -1;
  _Unwind_Resume(exception_object);
}

void sub_18C992E50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t AMSCore::makeAnyNumber@<X0>(id this@<X0>, uint64_t a2@<X8>)
{
  id v5;
  BOOL v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t result;
  int v15;
  uint64_t v16;
  void *v17;
  void *v18;

  if (!this)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Any AMSCore::makeAnyNumber(NSNumber * _Nonnull const __strong)");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("FoundationUtils.mm"), 150, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("number != nil"));

  }
  v5 = objc_retainAutorelease(this);
  if (!strcmp((const char *)objc_msgSend(v5, "objCType"), "B")
    || ((id)*MEMORY[0x1E0C9AE50] != v5 ? (v6 = *MEMORY[0x1E0C9AE40] == (_QWORD)v5) : (v6 = 1), v6))
  {
    result = objc_msgSend(v5, "BOOLValue");
    *(_BYTE *)a2 = result;
    v15 = 1;
  }
  else
  {
    v7 = objc_retainAutorelease(v5);
    if (!strcmp((const char *)objc_msgSend(v7, "objCType"), "d")
      || (v8 = objc_retainAutorelease(v7), !strcmp((const char *)objc_msgSend(v8, "objCType"), "f")))
    {
      result = objc_msgSend(v7, "doubleValue");
      *(_QWORD *)a2 = v16;
      v15 = 2;
    }
    else
    {
      v9 = objc_retainAutorelease(v8);
      if (!strcmp((const char *)objc_msgSend(v9, "objCType"), "C")
        || (v10 = objc_retainAutorelease(v9), !strcmp((const char *)objc_msgSend(v10, "objCType"), "S"))
        || (v11 = objc_retainAutorelease(v10), !strcmp((const char *)objc_msgSend(v11, "objCType"), "I"))
        || (v12 = objc_retainAutorelease(v11), !strcmp((const char *)objc_msgSend(v12, "objCType"), "Q"))
        || (v13 = objc_retainAutorelease(v12), !strcmp((const char *)objc_msgSend(v13, "objCType"), "Q")))
      {
        result = objc_msgSend(v9, "unsignedLongLongValue");
        *(_QWORD *)a2 = result;
        v15 = 4;
      }
      else
      {
        result = objc_msgSend(v13, "longLongValue");
        *(_QWORD *)a2 = result;
        v15 = 3;
      }
    }
  }
  *(_DWORD *)(a2 + 24) = v15;
  return result;
}

void sub_18C993078(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void AMSCore::makeString(AMSCore *this@<X0>, char *a2@<X8>)
{
  unint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (!this)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "std::string AMSCore::makeString(NSString * _Nonnull const __strong)");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("FoundationUtils.mm"), 187, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("nsString"));

  }
  v5 = -[AMSCore lengthOfBytesUsingEncoding:](this, "lengthOfBytesUsingEncoding:", 4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:fe180100]();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a2 + 1) = v6;
    *((_QWORD *)a2 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a2 = v7;
    goto LABEL_10;
  }
  a2[23] = v5;
  v7 = a2;
  if (v5)
LABEL_10:
    bzero(v7, v6);
  *((_BYTE *)v7 + v6) = 0;
  if (a2[23] >= 0)
    v10 = a2;
  else
    v10 = *(char **)a2;
  if ((-[AMSCore getCString:maxLength:encoding:](this, "getCString:maxLength:encoding:", v10, v6 + 1, 4) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "std::string AMSCore::makeString(NSString * _Nonnull const __strong)");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("FoundationUtils.mm"), 191, CFSTR("Conversion to UTF-8 should always succeed"));

  }
}

void sub_18C993248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;
  void *v11;

  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

uint64_t AMSCore::makeTimePoint(AMSCore *this, NSDate *a2)
{
  double v3;
  void *v5;
  void *v6;

  if (!this)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "TimePoint AMSCore::makeTimePoint(NSDate * _Nonnull const __strong)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("FoundationUtils.mm"), 196, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("date"));

  }
  -[AMSCore timeIntervalSince1970](this, "timeIntervalSince1970");
  return (uint64_t)(v3 * 1000000.0);
}

void sub_18C993350(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t AMSCore::Any::Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[2];

  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 != -1)
  {
    ((void (*)(_BYTE *, uint64_t, uint64_t))off_1E252BEF0[v3])(v5, a1, a2);
    *(_DWORD *)(a1 + 24) = v3;
  }
  return a1;
}

{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;

  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  v4 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v4 == -1)
    goto LABEL_5;
  ((void (*)(char *, uint64_t, uint64_t))off_1E253CAE8[v4])(&v7, a1, a2);
  *(_DWORD *)(a1 + 24) = v4;
  v5 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_5;
  if ((_DWORD)v5)
  {
    ((void (*)(char *, uint64_t))off_1E253D240[v5])(&v8, a2);
LABEL_5:
    *(_DWORD *)(a2 + 24) = 0;
  }
  return a1;
}

void sub_18C9933CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v15;

  v15 = *(unsigned int *)(v13 + 24);
  if ((_DWORD)v15 != -1)
    ((void (*)(char *, uint64_t))off_1E252BEA0[v15])(&a13, v13);
  *(_DWORD *)(v13 + 24) = -1;
  _Unwind_Resume(exception_object);
}

void AMSCore::makeAnyVector(AMSCore *this@<X0>, uint64_t a2@<X8>)
{
  AMSCore *v5;
  objc_object *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14[3];
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if (!this)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "AnyVector AMSCore::makeAnyVector(NSArray * _Nonnull const __strong)");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("FoundationUtils.mm"), 176, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("array"));

  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  std::vector<AMSCore::Any>::reserve((char **)a2, -[AMSCore count](this, "count"));
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v5 = this;
  v7 = -[AMSCore countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v17 != v8)
          objc_enumerationMutation(v5);
        AMSCore::makeAny(v14, *(AMSCore **)(*((_QWORD *)&v16 + 1) + 8 * i), v6);
        v10 = *(_QWORD *)(a2 + 8);
        if (v10 >= *(_QWORD *)(a2 + 16))
          v11 = std::vector<AMSCore::Any>::__emplace_back_slow_path<AMSCore::Any>((uint64_t *)a2, (uint64_t)v14);
        else
          v11 = AMSCore::Any::Any(v10, (uint64_t)v14) + 32;
        *(_QWORD *)(a2 + 8) = v11;
        if (v15 != -1)
          ((void (*)(char *, uint64_t *))off_1E252BEA0[v15])(&v20, v14);
      }
      v7 = -[AMSCore countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v7);
  }

}

void sub_18C9935E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v1;

  _Unwind_Resume(a1);
}

void sub_18C993600(_Unwind_Exception *a1)
{
  void **v1;
  void *v2;

  std::vector<AMSCore::Any>::~vector[abi:fe180100](v1);
  _Unwind_Resume(a1);
}

void **std::vector<AMSCore::Any>::~vector[abi:fe180100](void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = v3 - 32;
        v6 = *((unsigned int *)v3 - 2);
        if ((_DWORD)v6 != -1)
          ((void (*)(char *, char *))off_1E252BEA0[v6])(&v8, v3 - 32);
        *((_DWORD *)v3 - 2) = -1;
        v3 -= 32;
      }
      while (v5 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void AMSCore::makeAnyMap(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  const void **v5;
  const void ***v6;
  const void **v7;
  const void ***v8;
  BOOL v9;
  void *v10;
  void *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *(*v16)(_QWORD *, _QWORD *);
  void (*v17)(uint64_t);
  void *v18;
  unsigned int **v19;
  unsigned int *v20[2];

  if (!a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "AnyMap AMSCore::makeAnyMap(NSDictionary<NSString *,id> * _Nonnull const __strong)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("FoundationUtils.mm"), 140, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("dict"));

  }
  v13 = 0;
  v14 = &v13;
  v15 = 0x4812000000;
  v16 = __Block_byref_object_copy__1;
  v17 = __Block_byref_object_dispose__1;
  v20[0] = 0;
  v20[1] = 0;
  v18 = &unk_18CFC4DAA;
  v19 = v20;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3254779904;
  v12[2] = ___ZN7AMSCore10makeAnyMapEP12NSDictionaryIP8NSStringP11objc_objectE_block_invoke;
  v12[3] = &__block_descriptor_40_ea8_32r_e15_v32__0_8_16_B24l;
  v12[4] = &v13;
  objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:", v12);
  *(_QWORD *)(a2 + 8) = 0;
  v4 = v14;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = a2 + 8;
  v5 = (const void **)v4[6];
  v6 = (const void ***)(v4 + 7);
  if (v5 != (const void **)(v4 + 7))
  {
    do
    {
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,AMSCore::Any> const&>((uint64_t **)a2, (uint64_t *)(a2 + 8), v5 + 4, (__int128 *)v5 + 2);
      v7 = (const void **)v5[1];
      if (v7)
      {
        do
        {
          v8 = (const void ***)v7;
          v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (const void ***)v5[2];
          v9 = *v8 == v5;
          v5 = (const void **)v8;
        }
        while (!v9);
      }
      v5 = (const void **)v8;
    }
    while (v8 != v6);
  }
  _Block_object_dispose(&v13, 8);
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v19, v20[0]);
}

void sub_18C9938A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18C9938C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int *a23)
{
  uint64_t v23;

  _Block_object_dispose(&a16, 8);
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(v23, a23);
  _Unwind_Resume(a1);
}

void ___ZN7AMSCore10makeAnyMapEP12NSDictionaryIP8NSStringP11objc_objectE_block_invoke(uint64_t a1, AMSCore *this, AMSCore *a3)
{
  uint64_t v4;
  objc_object *v5;
  uint64_t v6[3];
  int v7;
  void *__p[2];
  char v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  AMSCore::makeString(this, (char *)__p);
  AMSCore::makeAny(v6, a3, v5);
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_unique_key_args<std::string,std::string,AMSCore::Any>((uint64_t **)(v4 + 48), (const void **)__p, (uint64_t)__p, (uint64_t)v6);
  if (v7 != -1)
    ((void (*)(char *, uint64_t *))off_1E252BEA0[v7])(&v10, v6);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_18C99398C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  AMSCore::Any::~Any((AMSCore::Any *)&a9);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void AMSCore::Any::~Any(AMSCore::Any *this)
{
  uint64_t v2;
  char v3;

  v2 = *((unsigned int *)this + 6);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, AMSCore::Any *))off_1E252BEA0[v2])(&v3, this);
  *((_DWORD *)this + 6) = -1;
}

void std::vector<AMSCore::Any>::reserve(char **a1, unint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;

  v2 = *a1;
  if (a2 > (a1[2] - *a1) >> 5)
  {
    if (a2 >> 59)
      std::vector<std::string>::__throw_length_error[abi:fe180100]();
    v4 = (uint64_t)a1[1];
    v5 = 32 * a2;
    v6 = (char *)operator new(32 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - (_QWORD)v2];
    if ((char *)v4 == v2)
    {
      *a1 = v8;
      a1[1] = v8;
      a1[2] = v7;
      if (v2)
LABEL_13:
        operator delete(v2);
    }
    else
    {
      v9 = (uint64_t)&v6[v4 - (_QWORD)v2];
      do
      {
        v4 -= 32;
        v9 = AMSCore::Any::Any(v9 - 32, v4);
      }
      while ((char *)v4 != v2);
      v10 = *a1;
      v2 = a1[1];
      *a1 = (char *)v9;
      a1[1] = v8;
      a1[2] = v7;
      if (v2 != v10)
      {
        do
        {
          v11 = v2 - 32;
          v12 = *((unsigned int *)v2 - 2);
          if ((_DWORD)v12 != -1)
            ((void (*)(char *, char *))off_1E252BEA0[v12])(&v13, v2 - 32);
          *((_DWORD *)v2 - 2) = -1;
          v2 -= 32;
        }
        while (v11 != v10);
        v2 = v10;
      }
      if (v2)
        goto LABEL_13;
    }
  }
}

void *AMSCore::makeOptionalTimePoint(void *this, NSDate *a2)
{
  double v2;

  if (this)
  {
    objc_msgSend(this, "timeIntervalSince1970");
    return (void *)(uint64_t)(v2 * 1000000.0);
  }
  return this;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  *a2 = *a3;
}

double _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, double *a3)
{
  double result;

  result = *a3;
  *a2 = *(_QWORD *)a3;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  *a2 = *a3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  *a2 = *a3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5ELm5EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(int a1, std::string *this, __int128 *a3)
{
  __int128 v3;

  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v3 = *a3;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6ELm6EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(int a1, std::string *this, __int128 *a3)
{
  __int128 v3;

  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v3 = *a3;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7ELm7EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  *a2 = *a3;
}

char *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm8ELm8EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, uint64_t a2, const void ***a3)
{
  uint64_t *v3;
  const void ***v4;
  const void **v5;
  char *result;
  const void **v8;
  const void ***v9;
  BOOL v10;

  *(_QWORD *)(a2 + 8) = 0;
  v3 = (uint64_t *)(a2 + 8);
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = a2 + 8;
  v4 = a3 + 1;
  v5 = *a3;
  if (*a3 != (const void **)(a3 + 1))
  {
    do
    {
      result = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,AMSCore::Any> const&>((uint64_t **)a2, v3, v5 + 4, (__int128 *)v5 + 2);
      v8 = (const void **)v5[1];
      if (v8)
      {
        do
        {
          v9 = (const void ***)v8;
          v8 = (const void **)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (const void ***)v5[2];
          v10 = *v9 == v5;
          v5 = (const void **)v9;
        }
        while (!v10);
      }
      v5 = (const void **)v9;
    }
    while (v9 != v4);
  }
  return result;
}

void sub_18C993C88(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy(v1, *(unsigned int **)(v1 + 8));
  _Unwind_Resume(a1);
}

_QWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm9ELm9EEE10__dispatchB8fe180100IOZNS0_6__ctorINS0_8__traitsIJNS_9monostateEbdxyNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore10DataBufferENS_6chrono10time_pointINSH_12system_clockENSH_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_3mapISE_NSF_3AnyENS_4lessIvEENSC_INS_4pairIKSE_SQ_EEEEEENS_6vectorISQ_NSC_ISQ_EEEEEEEE19__generic_constructB8fe180100IRKNS0_18__copy_constructorIS11_LNS0_6_TraitE1EEEEEvRS12_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS15_1EJS8_bdxySE_SG_SO_SX_S10_EEERKS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  return std::vector<AMSCore::Any>::vector(a2, a3);
}

_QWORD *std::vector<AMSCore::Any>::vector(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  a1[2] = 0;
  v3 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  v4 = *a2;
  v5 = a2[1];
  v6 = v5 - *a2;
  if (v5 != *a2)
  {
    if (v6 < 0)
      std::vector<std::string>::__throw_length_error[abi:fe180100]();
    v7 = (char *)operator new(v5 - *a2);
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[32 * (v6 >> 5)];
    a1[1] = std::__uninitialized_allocator_copy_impl[abi:fe180100]<std::allocator<AMSCore::Any>,AMSCore::Any*,AMSCore::Any*,AMSCore::Any*>(v3, v4, v5, (uint64_t)v7);
  }
  return a1;
}

void sub_18C993D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  void **v13;
  void *v14;
  char *v16;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;

  v13[1] = v14;
  v16 = (char *)*v13;
  if (*v13)
  {
    v17 = (char *)v13[1];
    v18 = *v13;
    if (v17 != v16)
    {
      do
      {
        v19 = v17 - 32;
        v20 = *((unsigned int *)v17 - 2);
        if ((_DWORD)v20 != -1)
          ((void (*)(char *, char *))off_1E252BEA0[v20])(&a13, v17 - 32);
        *((_DWORD *)v17 - 2) = -1;
        v17 -= 32;
      }
      while (v19 != v16);
      v18 = *v13;
    }
    v13[1] = v16;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:fe180100]<std::allocator<AMSCore::Any>,AMSCore::Any*,AMSCore::Any*,AMSCore::Any*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[2];

  v4 = a4;
  v9 = a4;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *(_BYTE *)v4 = 0;
      *(_DWORD *)(v4 + 24) = -1;
      v7 = *(unsigned int *)(v6 + 24);
      if ((_DWORD)v7 != -1)
      {
        ((void (*)(_BYTE *, uint64_t, uint64_t))off_1E252BEF0[v7])(v10, v4, v6);
        *(_DWORD *)(v4 + 24) = v7;
        v4 = v9;
      }
      v6 += 32;
      v4 += 32;
      v9 = v4;
    }
    while (v6 != a3);
  }
  return v4;
}

void sub_18C993E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  va_list va;

  va_start(va, a2);
  v5 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t, uint64_t))off_1E252BEA0[v5])(v3 - 49, v2);
  *(_DWORD *)(v2 + 24) = -1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<AMSCore::Any>,AMSCore::Any*>>::~__exception_guard_exceptions[abi:fe180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<AMSCore::Any>,AMSCore::Any*>>::~__exception_guard_exceptions[abi:fe180100](uint64_t a1)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (!*(_BYTE *)(a1 + 24))
  {
    v4 = *(uint64_t **)(a1 + 8);
    v3 = *(uint64_t **)(a1 + 16);
    v5 = *v3;
    v6 = *v4;
    if (*v3 != *v4)
    {
      do
      {
        v7 = v5 - 32;
        v8 = *(unsigned int *)(v5 - 8);
        if ((_DWORD)v8 != -1)
          ((void (*)(char *, uint64_t))off_1E252BEA0[v8])(&v9, v5 - 32);
        *(_DWORD *)(v5 - 8) = -1;
        v5 -= 32;
      }
      while (v7 != v6);
    }
  }
  return a1;
}

uint64_t std::vector<AMSCore::Any>::__emplace_back_slow_path<AMSCore::Any>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v18;

  v3 = (a1[1] - *a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    std::vector<std::string>::__throw_length_error[abi:fe180100]();
  v6 = a1[2] - *a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 59)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v8 = (char *)operator new(32 * v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = &v8[32 * v7];
  v10 = AMSCore::Any::Any((uint64_t)&v8[32 * v3], a2);
  v11 = v10 + 32;
  v13 = (char *)*a1;
  v12 = (char *)a1[1];
  if (v12 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v11;
    a1[2] = (uint64_t)v9;
    if (!v12)
      return v11;
    goto LABEL_20;
  }
  do
  {
    v12 -= 32;
    v10 = AMSCore::Any::Any(v10 - 32, (uint64_t)v12);
  }
  while (v12 != v13);
  v14 = (char *)*a1;
  v12 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v11;
  a1[2] = (uint64_t)v9;
  if (v12 != v14)
  {
    do
    {
      v15 = v12 - 32;
      v16 = *((unsigned int *)v12 - 2);
      if ((_DWORD)v16 != -1)
        ((void (*)(char *, char *))off_1E252BEA0[v16])(&v18, v12 - 32);
      *((_DWORD *)v12 - 2) = -1;
      v12 -= 32;
    }
    while (v15 != v14);
    v12 = v14;
  }
  if (v12)
LABEL_20:
    operator delete(v12);
  return v11;
}

uint64_t **std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_unique_key_args<std::string,std::string,AMSCore::Any>(uint64_t **a1, const void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t **v8;
  int v9;
  const void *v10;
  const void *v11;
  uint64_t **v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  const void *v18;
  size_t v19;
  int v20;
  int v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;

  v8 = a1 + 1;
  v7 = a1[1];
  if (!v7)
  {
    v12 = a1 + 1;
    goto LABEL_29;
  }
  v9 = *((char *)a2 + 23);
  if (v9 >= 0)
    v10 = a2;
  else
    v10 = *a2;
  if (v9 >= 0)
    v11 = (const void *)*((unsigned __int8 *)a2 + 23);
  else
    v11 = a2[1];
  do
  {
    while (1)
    {
      v12 = (uint64_t **)v7;
      v15 = v7[4];
      v13 = v7 + 4;
      v14 = (_QWORD *)v15;
      v16 = *((char *)v13 + 23);
      v17 = v16 >= 0 ? v13 : v14;
      v18 = v16 >= 0 ? (const void *)*((unsigned __int8 *)v13 + 23) : (const void *)v13[1];
      v19 = (size_t)(v18 >= v11 ? v11 : v18);
      v20 = memcmp(v10, v17, v19);
      if (v20)
        break;
      if (v11 >= v18)
        goto LABEL_22;
LABEL_8:
      v7 = *v12;
      v8 = v12;
      if (!*v12)
        goto LABEL_29;
    }
    if (v20 < 0)
      goto LABEL_8;
LABEL_22:
    v21 = memcmp(v17, v10, v19);
    if (v21)
    {
      if ((v21 & 0x80000000) == 0)
        return v12;
    }
    else if (v18 >= v11)
    {
      return v12;
    }
    v7 = v12[1];
  }
  while (v7);
  v8 = v12 + 1;
LABEL_29:
  v22 = (uint64_t *)v12;
  v12 = (uint64_t **)operator new(0x58uLL);
  *((_OWORD *)v12 + 2) = *(_OWORD *)a3;
  v12[6] = *(uint64_t **)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  AMSCore::Any::Any((uint64_t)(v12 + 7), a4);
  *v12 = 0;
  v12[1] = 0;
  v12[2] = v22;
  *v8 = (uint64_t *)v12;
  v23 = (uint64_t *)**a1;
  v24 = (uint64_t *)v12;
  if (v23)
  {
    *a1 = v23;
    v24 = *v8;
  }
  std::__tree_balance_after_insert[abi:fe180100]<std::__tree_node_base<void *> *>(a1[1], v24);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v12;
}

uint64_t *std::__tree_balance_after_insert[abi:fe180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = a2[2];
      if (*(_BYTE *)(v2 + 24))
        break;
      v3 = *(uint64_t **)(v2 + 16);
      v4 = *v3;
      if (*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if (*(uint64_t **)v2 == a2)
          {
            v9 = (uint64_t *)a2[2];
          }
          else
          {
            v9 = *(uint64_t **)(v2 + 8);
            v10 = *v9;
            *(_QWORD *)(v2 + 8) = *v9;
            if (v10)
            {
              *(_QWORD *)(v10 + 16) = v2;
              v3 = *(uint64_t **)(v2 + 16);
            }
            v9[2] = (uint64_t)v3;
            *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8 * (**(_QWORD **)(v2 + 16) != v2)) = v9;
            *v9 = v2;
            *(_QWORD *)(v2 + 16) = v9;
            v3 = (uint64_t *)v9[2];
            v2 = *v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v14 = *(_QWORD *)(v2 + 8);
          *v3 = v14;
          if (v14)
            *(_QWORD *)(v14 + 16) = v3;
          *(_QWORD *)(v2 + 16) = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          *(_QWORD *)(v2 + 8) = v3;
          v3[2] = v2;
          return result;
        }
      }
      else if (!v4 || (v6 = *(unsigned __int8 *)(v4 + 24), v5 = (_BYTE *)(v4 + 24), v6))
      {
        if (*(uint64_t **)v2 == a2)
        {
          v11 = a2[1];
          *(_QWORD *)v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = *(uint64_t **)(v2 + 16);
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8 * (**(_QWORD **)(v2 + 16) != v2)) = a2;
          a2[1] = v2;
          *(_QWORD *)(v2 + 16) = a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v12 = (uint64_t *)v3[1];
        v13 = *v12;
        v3[1] = *v12;
        if (v13)
          *(_QWORD *)(v13 + 16) = v3;
        v12[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v12;
        *v12 = (uint64_t)v3;
        v3[2] = (uint64_t)v12;
        return result;
      }
      *(_BYTE *)(v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

char *std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,AMSCore::Any> const&>(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t *v6;
  char *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v13;
  uint64_t *v14;

  v6 = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__find_equal<std::string>(a1, a2, &v14, &v13, a3);
  v7 = (char *)*v6;
  if (!*v6)
  {
    v8 = v6;
    v7 = (char *)operator new(0x58uLL);
    std::pair<std::string const,AMSCore::Any>::pair[abi:fe180100]((std::string *)(v7 + 32), a4);
    v9 = v14;
    *(_QWORD *)v7 = 0;
    *((_QWORD *)v7 + 1) = 0;
    *((_QWORD *)v7 + 2) = v9;
    *v8 = (uint64_t)v7;
    v10 = (uint64_t *)**a1;
    v11 = (uint64_t *)v7;
    if (v10)
    {
      *a1 = v10;
      v11 = (uint64_t *)*v8;
    }
    std::__tree_balance_after_insert[abi:fe180100]<std::__tree_node_base<void *> *>(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

void sub_18C994484(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__find_equal<std::string>(uint64_t **a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, const void **a5)
{
  uint64_t **v8;
  int v10;
  const void *v11;
  size_t v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  BOOL v23;
  int v24;
  const void *v25;
  size_t v26;
  int v27;
  const void *v28;
  size_t v29;
  size_t v30;
  int v31;
  uint64_t *v32;
  uint64_t **v33;
  _QWORD *v34;
  const void *v35;
  const void *v36;
  int v37;
  const void *v38;
  size_t v39;
  size_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  int v46;
  uint64_t *v47;
  size_t v48;
  size_t v49;
  int v50;
  uint64_t *v51;
  uint64_t **v52;
  uint64_t **v53;
  _QWORD *v54;
  const void *v55;
  const void *v56;
  int v57;
  const void *v58;
  size_t v59;
  size_t v60;
  int v61;
  int v62;

  v8 = a1 + 1;
  if (a1 + 1 == (uint64_t **)a2)
    goto LABEL_23;
  v10 = *((char *)a5 + 23);
  if (v10 >= 0)
    v11 = a5;
  else
    v11 = *a5;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)a5 + 23);
  else
    v12 = (size_t)a5[1];
  v13 = *((char *)a2 + 55);
  if (v13 >= 0)
    v14 = a2 + 4;
  else
    v14 = (const void *)a2[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)a2 + 55);
  else
    v15 = a2[5];
  if (v15 >= v12)
    v16 = v12;
  else
    v16 = v15;
  v17 = memcmp(v11, v14, v16);
  if (!v17)
  {
    if (v12 >= v15)
      goto LABEL_19;
LABEL_23:
    v19 = (uint64_t *)*a2;
    if (*a1 == a2)
    {
      v21 = a2;
    }
    else
    {
      if (v19)
      {
        v20 = (uint64_t *)*a2;
        do
        {
          v21 = v20;
          v20 = (uint64_t *)v20[1];
        }
        while (v20);
      }
      else
      {
        v22 = a2;
        do
        {
          v21 = (uint64_t *)v22[2];
          v23 = *v21 == (_QWORD)v22;
          v22 = v21;
        }
        while (v23);
      }
      v24 = *((char *)v21 + 55);
      if (v24 >= 0)
        v25 = v21 + 4;
      else
        v25 = (const void *)v21[4];
      if (v24 >= 0)
        v26 = *((unsigned __int8 *)v21 + 55);
      else
        v26 = v21[5];
      v27 = *((char *)a5 + 23);
      if (v27 >= 0)
        v28 = a5;
      else
        v28 = *a5;
      if (v27 >= 0)
        v29 = *((unsigned __int8 *)a5 + 23);
      else
        v29 = (size_t)a5[1];
      if (v29 >= v26)
        v30 = v26;
      else
        v30 = v29;
      v31 = memcmp(v25, v28, v30);
      if (v31)
      {
        if ((v31 & 0x80000000) == 0)
          goto LABEL_48;
      }
      else if (v26 >= v29)
      {
LABEL_48:
        v32 = *v8;
        if (!*v8)
        {
          v33 = v8;
LABEL_69:
          *a3 = (uint64_t *)v33;
          return (uint64_t *)v8;
        }
        while (1)
        {
          v33 = (uint64_t **)v32;
          v36 = (const void *)v32[4];
          v34 = v32 + 4;
          v35 = v36;
          v37 = *((char *)v34 + 23);
          if (v37 >= 0)
            v38 = v34;
          else
            v38 = v35;
          if (v37 >= 0)
            v39 = *((unsigned __int8 *)v34 + 23);
          else
            v39 = v34[1];
          if (v39 >= v29)
            v40 = v29;
          else
            v40 = v39;
          v41 = memcmp(v28, v38, v40);
          if (v41)
          {
            if (v41 < 0)
              goto LABEL_50;
LABEL_64:
            v42 = memcmp(v38, v28, v40);
            if (v42)
            {
              if ((v42 & 0x80000000) == 0)
                goto LABEL_69;
            }
            else if (v39 >= v29)
            {
              goto LABEL_69;
            }
            v8 = v33 + 1;
            v32 = v33[1];
            if (!v32)
              goto LABEL_69;
          }
          else
          {
            if (v29 >= v39)
              goto LABEL_64;
LABEL_50:
            v32 = *v33;
            v8 = v33;
            if (!*v33)
              goto LABEL_69;
          }
        }
      }
    }
    if (v19)
    {
      *a3 = v21;
      return v21 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  if (v17 < 0)
    goto LABEL_23;
LABEL_19:
  v18 = memcmp(v14, v11, v16);
  if (v18)
  {
    if ((v18 & 0x80000000) == 0)
    {
LABEL_21:
      *a3 = a2;
      *a4 = a2;
      return (uint64_t *)a4;
    }
  }
  else if (v15 >= v12)
  {
    goto LABEL_21;
  }
  v43 = a2[1];
  if (v43)
  {
    v44 = (uint64_t *)a2[1];
    do
    {
      a4 = (uint64_t **)v44;
      v44 = (uint64_t *)*v44;
    }
    while (v44);
  }
  else
  {
    v45 = a2;
    do
    {
      a4 = (uint64_t **)v45[2];
      v23 = *a4 == v45;
      v45 = (uint64_t *)a4;
    }
    while (!v23);
  }
  if (a4 != v8)
  {
    v46 = *((char *)a4 + 55);
    if (v46 >= 0)
      v47 = (uint64_t *)(a4 + 4);
    else
      v47 = a4[4];
    if (v46 >= 0)
      v48 = *((unsigned __int8 *)a4 + 55);
    else
      v48 = (size_t)a4[5];
    if (v48 >= v12)
      v49 = v12;
    else
      v49 = v48;
    v50 = memcmp(v11, v47, v49);
    if (v50)
    {
      if ((v50 & 0x80000000) == 0)
      {
LABEL_95:
        v51 = *v8;
        if (*v8)
        {
          v52 = a3;
          while (1)
          {
            v53 = (uint64_t **)v51;
            v56 = (const void *)v51[4];
            v54 = v51 + 4;
            v55 = v56;
            v57 = *((char *)v54 + 23);
            if (v57 >= 0)
              v58 = v54;
            else
              v58 = v55;
            if (v57 >= 0)
              v59 = *((unsigned __int8 *)v54 + 23);
            else
              v59 = v54[1];
            if (v59 >= v12)
              v60 = v12;
            else
              v60 = v59;
            v61 = memcmp(v11, v58, v60);
            if (v61)
            {
              if (v61 < 0)
                goto LABEL_97;
LABEL_111:
              v62 = memcmp(v58, v11, v60);
              if (v62)
              {
                if ((v62 & 0x80000000) == 0)
                  goto LABEL_123;
              }
              else if (v59 >= v12)
              {
                goto LABEL_123;
              }
              v8 = v53 + 1;
              v51 = v53[1];
              if (!v51)
                goto LABEL_123;
            }
            else
            {
              if (v12 >= v59)
                goto LABEL_111;
LABEL_97:
              v51 = *v53;
              v8 = v53;
              if (!*v53)
                goto LABEL_123;
            }
          }
        }
        v53 = v8;
        v52 = a3;
LABEL_123:
        *v52 = (uint64_t *)v53;
        return (uint64_t *)v8;
      }
    }
    else if (v12 >= v48)
    {
      goto LABEL_95;
    }
  }
  if (v43)
  {
    *a3 = (uint64_t *)a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return (uint64_t *)a4;
}

std::string *std::pair<std::string const,AMSCore::Any>::pair[abi:fe180100](std::string *this, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  _BYTE v7[2];

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  this[1].__r_.__value_.__s.__data_[0] = 0;
  LODWORD(this[2].__r_.__value_.__l.__data_) = -1;
  v5 = *((unsigned int *)a2 + 12);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(_BYTE *, std::string *, char *))off_1E252BEF0[v5])(v7, &this[1], (char *)a2 + 24);
    LODWORD(this[2].__r_.__value_.__l.__data_) = v5;
  }
  return this;
}

void sub_18C9948D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v16 = *(unsigned int *)(v13 + 48);
  if ((_DWORD)v16 != -1)
    ((void (*)(char *, uint64_t))off_1E252BEA0[v16])(&a13, v14);
  *(_DWORD *)(v13 + 48) = -1;
  if (*(char *)(v13 + 23) < 0)
    operator delete(*(void **)v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_18C994924(mach_port_t a1, uint64_t a2, int a3, _QWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  mach_msg_header_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;

  v15 = 1;
  v16 = a2;
  v17 = 16777472;
  v18 = a3;
  v19 = *MEMORY[0x1E0C804E8];
  v20 = a3;
  reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(_QWORD *)&v14.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&v14);
    reply_port = v14.msgh_local_port;
  }
  v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port)
          v12 = 4294966996;
        else
          v12 = HIDWORD(v16);
      }
    }
    else
    {
      v12 = 4294966996;
    }
  }
  else
  {
    v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

void zcamdt242h(uint64_t a1, int a2)
{
  __asm { BR              X8 }
}

void Gg9q7vHg34(unint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BR              X8 }
}

uint64_t sub_18C994D84(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;
  BOOL v3;

  *a2 = 0;
  v3 = MEMORY[0x191D653A4](24, 4101018099) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2 * v3) | 0x1E4u)) - 4))();
}

uint64_t sub_18C994DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2118401485;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v3 - 136) = a1;
  v4 = v2(4096, 1358311088);
  **(_QWORD **)(v3 - 136) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((216 * (v4 != 0)) ^ 0x354u)) - 8))();
}

uint64_t sub_18C994E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  *(_QWORD *)(v33 - 152) = v32;
  *(_DWORD *)(v27 + 8) = v29 + 4096;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((712 * (*(_DWORD *)(v27 + 12) - 4093 < ((v28 - 598) ^ 0x2C8) + ((v28 - 468) | 0xEu) - 5061)) ^ (v28 - 598)));
  v35 = *(_QWORD *)(v26 + 8 * (v28 - 821)) - 13;
  *(_QWORD *)(v33 - 200) = v25;
  *(_QWORD *)(v33 - 192) = v35;
  return v34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v31, a18, a19,
           a20,
           a21,
           a22,
           v27 + 8,
           a24,
           a25);
}

uint64_t sub_18C994ED0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((15
                                * (2 * (v0 ^ 0x2F1)
                                 + ((2 * (v3 + 2 * v1)) & 0xFCDB7BFA)
                                 + ((v3 + 2 * v1) ^ 0xFE6DBDFD)
                                 + 26357872 < 0xFFFFEFFB)) ^ v0)))();
}

uint64_t sub_18C994F38@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = __ldaxr(v4);
  v8 = (*(uint64_t (**)(_QWORD, uint64_t))(v6 - 152))((a1 + 26362371), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (((v8 != 0) * ((v7 - 215) ^ 0x797)) ^ v7)) - 8))(v8, v9, v10, v11, v12, v13, v14, v15, a2, a3, a4);
}

void sub_18C994F90(uint64_t a1)
{
  __asm { BR              X17 }
}

uint64_t sub_18C99734C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1818 * (v0 != v2)) ^ (v1 - 1146)))
                            - (v1 - 1408)
                            + 87))();
}

uint64_t sub_18C997388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = v2 < ((v3 + 1547) ^ 0x662u) || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((222 * v7) ^ v3)) + 3545690796 - (v3 ^ (v4 + 55))))();
}

void sub_18C997ADC()
{
  _QWORD *v0;
  void (*v1)(void);
  _QWORD *v2;

  v2 = v0;
  v1();
  *v2 = 0;
  v2[1] = 2118401485;
  ((void (*)(_QWORD *))v1)(v2);
  JUMPOUT(0x18C997B00);
}

void fm23w5mn5o()
{
  uint64_t v0;
  char v1;

  v0 = qword_1EE056748 - (_QWORD)&v1 + qword_1EE056760;
  qword_1EE056748 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_1EE056760 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  __asm { BR              X8 }
}

uint64_t sub_18C997C24()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;

  v1();
  *(_QWORD *)(v0 + 8) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((20 * (*(_QWORD *)(v0 + 24) != 0)) | 0xA8u)) - 4))();
}

uint64_t sub_18C997C5C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 111) = v0;
  v2();
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(_QWORD *)v1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(v1 + 48) == 0) * (((5 * (v4 ^ 0x92) + 20) | 8) - 290)) ^ (5 * (v4 ^ 0x92))))
                            - ((5 * (v4 ^ 0x92) + 20) ^ 0x199u)
                            + 171))();
}

uint64_t jkag7Bg01u(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
    __asm { BR              X8 }
  return 4294922295;
}

void sub_18C9981DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, int a19, int a20)
{
  uint64_t v20;
  _QWORD *v21;

  v21 = *(_QWORD **)(v20 - 152);
  (*(void (**)(_QWORD))(v20 - 208))(*v21);
  *v21 = a17;
  *a18 = a20;
  JUMPOUT(0x18C998214);
}

uint64_t sub_18C9982C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = ((a1 + 968818423) & 0xC640FFBE ^ 0x14473943) + *(_DWORD *)(v1 + 12);
  v4 = *(_DWORD *)(v1 + 8) - 797629582;
  v5 = v3 < 0x14473A79;
  v6 = v3 > v4;
  if (v4 < 0x14473A79 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * ((444 * v6) ^ a1)))();
}

uint64_t sub_18C998344@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  _BOOL4 v32;
  unsigned int v33;
  _BOOL8 v34;
  _BOOL4 v35;

  *(_QWORD *)(v29 - 152) = v27;
  v30 = a5 - 844;
  v31 = v26 + 659547387;
  v32 = (v26 + 659547387) < 0x6B21FBFE;
  v33 = ((2 * (2 * v26 + 2019283442)) & 0x87B47EFE) + ((2 * v26 + 2019283442) ^ (v30 + 1138376259));
  v34 = v33 + 659012735 < 0x6B21FBFE;
  if (v32 != v34)
    v35 = v33 + 659012735 < 0x6B21FBFE;
  else
    v35 = v33 + 659012735 > v31;
  return ((uint64_t (*)(_BOOL8, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((109 * v35) ^ v30)) - 4))(v34, 2019283442, 1797389310, v33 - 534648, a1, a2, a3, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_18C9983EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  _DWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  int v36;

  v34 = *v31;
  v35 = ((2 * v29) & 0x9FDFFFFC) + (v29 ^ 0x4FEFFFFE);
  *(_BYTE *)(*v31 + v35 - 1341128701) = -2;
  v36 = (v33 - 222) | 0x88;
  *(_BYTE *)(v34 + v35 - 1341128702) = -123;
  *(_BYTE *)(v34 + v35 + (v36 ^ 0xB01002EC)) = 99;
  *(_BYTE *)(v34 + v35 - 1341128699) = -80;
  *v30 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(4001280290 - ((v36 + 67120440) | 0xEA7E8106) + *(_QWORD *)(v32 + 11808)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18C99A0E4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + ((v1 - 1524) | 0x220) - 675) ^ (v3 + 177)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_18C99A118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v7 = v2 < 8 || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((((2 * v3) ^ 0x696) - 285297762) & 0xFF7FF9B6 ^ (v5 + 13)) * v7) ^ v3))
                            - 8))();
}

uint64_t sub_18C99A16C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  char v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < 0x20) ^ ((v1 ^ (v3 - 48)) + 1)) & 1)
                                * (((v1 - 336) | 0x71) - 749)) ^ v1)))();
}

uint64_t sub_18C99A1AC@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  _BOOL4 v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (((v5 + v3 - 740) | 0x311u) ^ 0x335) != (v2 & 0xFFFFFFE0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(v7 & 0xFFFFFFFB | (4 * v7) | (v5 + v3 - 488))) - 8))();
}

uint64_t sub_18C99A204()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ (205 * (v0 == 0))))
                            - (v1 ^ 0xEE7EB161 ^ ((v1 - 332103741) | 0x24A3120))))();
}

uint64_t sub_18C99A258()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ (2
                                               * (((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0) | (32
                                                                                               * ((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0))))))
                            - 8))();
}

uint64_t sub_18C99A29C()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1119
                                          * (v1 >= ((v0 + 240029406) | 0xE0302026)
                                                 + (unint64_t)((v0 + 486) | 0x235u)
                                                 - 4001281859u)) ^ v0))
                            - 8))();
}

uint64_t sub_18C99A2F4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((85 * (v0 >= ((v1 - 1420) ^ 0x91u))) ^ v1))
                            - (v1 ^ (v3 + 1525) ^ 0xEE7EB12ELL)))();
}

void rsegvyrt87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v8;

  if (a4)
    v6 = a5 == 0;
  else
    v6 = 1;
  v8 = v6 || a6 == 0;
  __asm { BR              X8 }
}

uint64_t sub_18C99AF28(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5)
{
  uint64_t v5;
  _BOOL4 v6;

  *a4 = 0;
  *a5 = 0;
  v6 = MEMORY[0x191D653A4](24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((419 * v6) ^ 0xA1u)))();
}

uint64_t sub_18C99AF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v31 - 256) = v28;
  *(_QWORD *)(v31 - 184) = v27;
  *(_DWORD *)(v31 - 236) = v26;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 449454675;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v31 - 152) = v30;
  v33 = v30(4096, 1358311088);
  *(_QWORD *)a1 = v33;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((63 * (v33 == 0)) ^ 0x1DC));
  *(_QWORD *)(v31 - 144) = 0x191D68428;
  return v34(v33, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_18C99B030()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 - 144))(v0);
  return 4294922293;
}

uint64_t gJa8aF901k(uint64_t a1)
{
  uint64_t v1;

  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
  {
    v1 = *((_QWORD *)&unk_1E252BF40 + ((867 * (MEMORY[0x191D653A4](24, 4101018099) != 0)) ^ 0x57Eu));
    __asm { BR              X8 }
  }
  return 4294922295;
}

uint64_t sub_18C9A19D0(_DWORD *a1)
{
  unsigned int v1;

  v1 = 882831569 * ((a1 & 0xE8317279 | ~(a1 | 0xE8317279)) ^ 0x84383F4C);
  return ((uint64_t (*)(void))(*(_QWORD *)(qword_1E252F800[*a1 - v1 - 314]
                                        + 8 * (int)((194 * (v1 + a1[1] - 1169751002 < 0x46)) ^ (*a1 - v1))
                                        - 2)
                            - 4))();
}

uint64_t sub_18C9A1A50@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(result + 8) = *(_DWORD *)(*(_QWORD *)(v3 + 8 * (a2 - 347)) + 4 * v2 - 3);
  return result;
}

uint64_t sub_18C9A1A68(uint64_t result)
{
  *(_DWORD *)(result + 8) = 314902380;
  return result;
}

void uv5t6nhkui()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE056740 ^ (unint64_t)&v2 ^ qword_1EE056760;
  qword_1EE056740 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  qword_1EE056760 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_1E252BF40
       + ((893
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_1E252F800[((-53 * ((qword_1EE056760 - qword_1EE056740) ^ 0x8B)) ^ byte_18CF0E530[byte_18CF0E210[(-53 * ((qword_1EE056760 - qword_1EE056740) ^ 0x8B))] ^ 0xA8])
                                                                      + 12]
                                                      - 3))(24, 4101018099) != 0)) ^ 0x5E4u))- 8;
  __asm { BR              X8 }
}

uint64_t sub_18C9A1B94(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_DWORD *)(v4 - 212) = v1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x35872FBD3D92718DLL;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (v6 == 0)) ^ 0x119u)))();
}

uint64_t sub_18C9A1BFC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((v0 + 732) ^ 0x5E4) + 6) ^ 0x4E045395) * (v2 != 0)) ^ 0x5E4))
                            - 8))();
}

uint64_t sub_18C9A1C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v4(v5, a2, a3, a4, 2704338944);
  return 4294922293;
}

void tn46gtiuhw(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v10;

  if (a4)
    v7 = a5 == 0;
  else
    v7 = 1;
  v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BR              X8 }
}

uint64_t sub_18C9A573C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  *a4 = 0;
  **(_DWORD **)(v8 - 152) = 0;
  **(_QWORD **)(v8 - 144) = 0;
  *a7 = 0;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((787 * (((unk_1EE060968 == 0) ^ 0x81) & 1)) ^ 0x15Eu)) - 8);
  *(_QWORD *)(v8 - 216) = 0x191D68428;
  return v9();
}

uint64_t sub_18C9A57B8()
{
  int v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;

  v1();
  *(_QWORD *)(v3 + 8) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1438 * (*(_QWORD *)(v3 + 24) != 0)) ^ (v0 + 1485326383))))();
}

uint64_t sub_18C9A57F0()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 36) = 0;
  *(_QWORD *)v4 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((971 * (*(_QWORD *)(v4 + 48) != 0)) ^ (v0 + v1 + 91))) - 4))();
}

uint64_t sub_18C9A582C()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 48) = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v0 + v1 + 229328577) & 0xF254BEAF) - 1564) * (*(_QWORD *)(v4 + 64) != 0)) ^ (v0 + v1 + 172))))();
}

void fy34trz2st()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EE056760 + qword_1EE056750) ^ (unint64_t)&v2;
  qword_1EE056750 = 1137813707 * v0 - 0x1796AD5631F71675;
  qword_1EE056760 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_1E252BF40
       + ((203
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_1E252F800[((-53 * (qword_1EE056750 ^ 0x8B ^ qword_1EE056760)) ^ byte_18CF0DAC0[byte_18CF0E430[(-53 * (qword_1EE056750 ^ 0x8B ^ qword_1EE056760))] ^ 0x5E])
                                                                      + 1]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x173u))- 4;
  __asm { BR              X8 }
}

uint64_t sub_18C9A95F0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2051828535;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v1(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((139 * (v4 == 0)) ^ 0x47A)))();
}

uint64_t sub_18C9A966C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v6)(uint64_t);

  v6(a6);
  return 4294922293;
}

void p435tmhbla()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EE056760 - qword_1EE056758) ^ (unint64_t)&v2;
  qword_1EE056758 = 1137813707 * (v0 + 0x1796AD5631F71675);
  qword_1EE056760 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_1E252BF40
       + ((54
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_1E252F800[((-53
                                                                                         * ((qword_1EE056760
                                                                                           - 53 * (v0 + 117)) ^ 0x8B)) ^ byte_18CF0DDF0[byte_18CF0D9C0[(-53 * ((qword_1EE056760 - 53 * (v0 + 117)) ^ 0x8B))] ^ 0x9F])
                                                                      - 10]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x29Du))- 8;
  __asm { BR              X8 }
}

uint64_t sub_18C9AC494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 459037928;
  *(_DWORD *)(a1 + 16) = 0;
  v5 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((100 * (((v5 == 0) ^ 0xEF) & 1)) ^ 0x43Bu))
                            - ((v1 + 12) ^ 0xB2D17A6BLL)))();
}

uint64_t sub_18C9AC530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v8 + 8) = v5 + 4096;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                     + 8
                                                                     * ((1983
                                                                       * (*(_DWORD *)(v8 + 12) - 4093 >= (v4 & 0xFF7 ^ 0x7Cu) - 4764)) ^ v4 & 0xFF7u));
  *(_QWORD *)(v10 - 168) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 710)) - 7;
  *(_QWORD *)(v10 - 160) = v3;
  *(_QWORD *)(v10 - 176) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 712)) - 13;
  *(_QWORD *)(v10 - 216) = v9;
  return v11(a1, a2, a3, 1294894604);
}

void asabc800ag(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_18C9AF7B8(_QWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  _BOOL4 v3;

  *a1 = 0;
  *a2 = 0;
  v3 = MEMORY[0x191D653A4](24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((16 * (v3 & 0xFFFFFFFD | (2 * v3))) ^ 0x59A)))();
}

uint64_t sub_18C9AF804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 - 168) = v1;
  *(_QWORD *)(v4 - 160) = v3;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1051258734;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((89 * (((v6 == 0) ^ 0x93) & 1)) ^ 0x692)))();
}

uint64_t sub_18C9AF894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v35 + 8) = v32 + 4096;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1674 * (((3 * (v31 ^ 0x8F)) ^ (*(_DWORD *)(v35 + 12) - 4093 < (((v31 ^ 0x532) - 272) | 0x10Fu) - 5024)) & 1)) ^ v31 ^ 0x532u));
  *(_QWORD *)(v36 - 224) = v34;
  return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_18C9AF918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;

  *(_QWORD *)(v32 - 144) = 0;
  *(_QWORD *)(v32 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v32 - 152) = 0;
  v33 = *v31;
  v34 = ((a9 << ((v29 - 122) & 0xAF ^ 0x8C)) & 0x9F4FE1DE) + (a9 ^ 0x4FA7F0EF) - 1336406255;
  *(_BYTE *)(*v31 + v34) = 0;
  *(_BYTE *)(v33 + v34 + 1) = 0;
  *(_BYTE *)(v33 + v34 + 2) = 0;
  *(_BYTE *)(v33 + v34 + 3) = 1;
  *((_DWORD *)v31 + 3) += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((v29 + 978983814) & 0xC5A5E5AF ^ 0x2B9)) - ((((v29 + 978983814) & 0xC5A5E5AF) - 2007353960) & 0x77A5CEDF) + 1533))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18C9AF9FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((63
                                * ((((v1 + 2 * v2) << (((v0 + 100) | 0x54) ^ 0x56)) & 0x7D55FEFE)
                                 + ((v1 + 2 * v2) ^ 0xBEAAFF7F)
                                 + 1096085628 > 0xFFFFEFFA)) ^ v0)))();
}

uint64_t sub_18C9AFA6C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = (*(uint64_t (**)(_QWORD, uint64_t))(v16 - 160))((a1 + 1096089729), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((209 * (v17 != 0)) ^ v14)) - 4))(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14);
}

void sub_18C9AFACC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(v5 - 152) = 0;
  *(_QWORD *)(v5 - 144) = 0;
  v6 = *v4;
  *(_QWORD *)(v5 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v5 - 232) = 0x33EE8B0970FCB5F4;
  *(_QWORD *)(v5 - 192) = v1;
  v7 = (((2 * (v2 ^ 0x188) - 210724645) & 0xC8F67DF) + 1396) | 0x40;
  __asm { BR              X11 }
}

uint64_t sub_18C9B21FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 603) | 0x418) + 440) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_18C9B2224()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((*(unsigned __int8 *)(v2 + 3663) < 8u) ^ (v0 + 78)) & 1)
                                          * (v0 - 1152)) ^ v0))
                            - 8))();
}

uint64_t sub_18C9B225C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((194 * (v0 + (unint64_t)(90 * (v1 ^ 0x660u)) - 630 > 0x1F)) ^ v1)))();
}

uint64_t sub_18C9B2294()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((21 * (v1 ^ 0x65F) - 508306593) & 0x1E4C2359) - 795) * (v0 < 0x20)) ^ v1 ^ 0x7F))
                            - 8))();
}

uint64_t sub_18C9B22E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v3 ^ (v4 - 343) ^ v7) + v2;
  *(_QWORD *)(a1 + v8 - 7) = *(_QWORD *)(a2 + v8 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v2 & 0xFFFFFFF8) - 8 == v3) * v5) ^ v4)))();
}

void sub_18C9B2328()
{
  JUMPOUT(0x18C9B22F0);
}

uint64_t sub_18C9B2330()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v4 + ((v1 + 1122460830) & 0xBD189B37) - 818) ^ (v4 - 153)) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_18C9B2370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = v2 > 7 && a1 - a2 >= (unint64_t)(((v3 + 857735565) & 0xCCDFFF5D) - 213) - 808;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1853 * v6) ^ v3)))();
}

uint64_t sub_18C9B23B8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v0 >= ((11 * (v1 ^ 0x30D)) ^ 0x2D7u)) * ((40 * (v1 ^ 0x359)) ^ 0x4B4)) ^ v1)))();
}

uint64_t sub_18C9B2404@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * ((8 * v3) ^ v5)) ^ v3)))();
}

void sub_18C9B243C()
{
  JUMPOUT(0x18C9B2414);
}

uint64_t sub_18C9B244C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((98 * (v1 != v0)) ^ v2 ^ 0x13D8))
                            - (((v2 ^ 0x13D8) - 1640) | 0x302u)
                            + 810))();
}

uint64_t sub_18C9B2484()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((122 * ((((351 * (v1 ^ 0x331)) ^ 0x405) & v0) != 0)) ^ v1)))();
}

uint64_t sub_18C9B24C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v3) = *(_QWORD *)(a2 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 - 916160512) & 0x369B7FFE ^ 0xFFFFFD0E) & v2)
                                          - (unint64_t)((v4 - 916160512) & 0x369B7FFE)
                                          + 750 != v3) ^ (v4 - 916160512) & 0x369B7FFEu))
                            - 8))();
}

uint64_t sub_18C9B2518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v2) = *(_QWORD *)(a2 + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v4 != v2) ^ v3)) - 8))();
}

uint64_t sub_18C9B253C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v4 + ((v2 + 1975908930) & 0xAEFBCEEB) - 52) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_18C9B257C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 + 1 != v2) * ((((v4 - 769) | 0x240) - 456930158) & 0x3FFDFC71 ^ (v6 - 319))) ^ ((v4 - 769) | 0x240))))();
}

uint64_t sub_18C9B25CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 1 != v2) * v5) ^ v4)))();
}

uint64_t sub_18C9B25F0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1009 * ((((v4 + v2 + 1882864004) ^ (v1 == v0)) & 1) == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_18C9B2638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int128 v5;

  v5 = *(_OWORD *)(a2 + v2 - 16);
  *(_OWORD *)(a1 + v2 - 32) = *(_OWORD *)(a2 + v2 - 32);
  *(_OWORD *)(a1 + v2 - 16) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((651 * ((v2 & 0xFFFFFFE0) == 32)) ^ v3))
                            - (((v3 - 640) | 0x480u) ^ 0x69CLL)))();
}

void sub_18C9B268C()
{
  JUMPOUT(0x18C9B2650);
}

uint64_t sub_18C9B269C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 == v0) ^ (v2 + 1)) & 1 | (2
                                                                                         * (((v1 == v0) ^ (v2 + 1)) & 1)) | v2))
                            - ((v2 - 384) | 1u)
                            + 1297))();
}

uint64_t sub_18C9B26D0()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (823 * ((v0 & 0x18) != 0))))
                            - (v1 - 456)
                            + 841))();
}

uint64_t sub_18C9B270C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = v2 - 1;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 != 0) * v4) ^ (23 * (v3 ^ 0x260))))
                            - (((23 * (v3 ^ 0x260) + 545340934) | 0x4408C60u) ^ v6)))();
}

uint64_t sub_18C9B275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v4 - 1;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v8 != 0) * v5) ^ v2)) - (v3 ^ v7)))();
}

uint64_t sub_18C9B2788()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned __int8 v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = v2 + v1;
  v5 = v2 + v1 - 158;
  v6 = v2 + v1 + 29;
  v7 = v5 | 0x29;
  v8 = v4 + 488;
  v9 = (*(uint64_t (**)(_QWORD, uint64_t))(v3 - 160))(**(unsigned int **)(v3 - 200), 1490714378);
  v10 = *(_QWORD **)(v3 - 168);
  v11 = 32 * *(_QWORD *)(v3 - 208);
  *(_QWORD *)(*v10 + v11 + 24) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v8 ^ (((v6 ^ (*(_QWORD *)(*v10 + v11 + 24) == 0)) & 1) << 6)))
                            - v7
                            + 41))();
}

void sub_18C9B280C()
{
  JUMPOUT(0x18C9B21C8);
}

uint64_t sub_18C9B2874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;

  return ((uint64_t (*)(void))(616680548
                            - ((v37 - 1477195353) & 0x7CCDFFF9)
                            + *(_QWORD *)(v36 + 8 * ((479 * (((v37 - 685) | 0x2C1) + a36 != 722)) ^ v37))
                            - 8))();
}

uint64_t sub_18C9B28DC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v1 + 8 * ((*(_QWORD *)(v2 + 16) != 0) ^ (v3 + v0 + 140))))();
}

uint64_t sub_18C9B2904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_18C9B2930()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);
  int v6;
  uint64_t v7;

  v7 = v5();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v6 + v0 + 541)))
                                          - 4))(v7);
}

uint64_t sub_18C9B296C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v2 + 8 * ((*(_QWORD *)(v3 + 32 * v1 + 16) != 0) ^ (v4 + v0 + 140))))();
}

uint64_t sub_18C9B2990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(void);

  v4();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_18C9B29C0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v5 + v0 + 541)))
                            - 4))();
}

uint64_t sub_18C9B29F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  int v6;
  uint64_t v7;

  v5 = v3;
  v6 = a1 - 326;
  v5(v2);
  **(_QWORD **)(v4 - 168) = 0;
  v7 = ((uint64_t (*)(_QWORD))v5)(*(_QWORD *)(v4 - 144));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((1188 * (*(_QWORD *)(v4 - 176) != 0x9306C2D1D9A7B4E0)) ^ v6))
                                          - ((383 * (v6 ^ 0x189) - 1388) | 6u)
                                          + 142))(v7);
}

uint64_t sub_18C9B2A70@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + a1 - 1532 + ((a1 + 12632644) | 0x24010420) - 1233360077)
                                          * (*(_QWORD *)(v1 + 0x6CF93D2E26584B20) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_18C9B2AD0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t);
  _QWORD *v6;
  int v7;

  v7 = 5 * (v0 ^ (v4 + 30));
  *(_QWORD *)v1 = 0;
  *(_DWORD *)(v1 + 8) = 2111990077;
  *(_DWORD *)(v1 + 12) = 1657608450;
  v5(v2 + 0x6CF93D2E26584B20);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v6 != 0) * (v7 ^ (v4 + 150) ^ (v4 - 26))) ^ v7))
                            - ((v4 + v7 - 150) ^ 0x24C1CC64)))();
}

void sub_18C9B2B60()
{
  void (*v0)(void);
  _QWORD *v1;

  v0();
  *v1 = 0;
  v1[1] = 1051258734;
  ((void (*)(_QWORD *))v0)(v1);
  JUMPOUT(0x18C9B2B7CLL);
}

uint64_t sub_18C9B2BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (((a36 + 1 < *(_QWORD *)(v39 - 152)) * (((5 * (v37 ^ (v37 + 130))) ^ 0x59) + 1144)) ^ (v38 + v37 + 805))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_18C9B2C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  uint64_t v29;

  (*(void (**)(_QWORD))(v29 - 224))(*(_QWORD *)(v29 - 144));
  *a29 = *(_QWORD *)(v29 - 152);
  JUMPOUT(0x18C9B2A1CLL);
}

void aslgmuibau()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EE056760 ^ qword_1EE056768];
  qword_1EE056768 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_1EE056760 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_1E252BF40
       + ((29
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_1E252F800[((-53
                                                                                         * ((qword_1EE056760
                                                                                           - qword_1EE056768) ^ 0x8B)) ^ byte_18CF0E110[byte_18CF0DCF0[(-53 * ((qword_1EE056760 - qword_1EE056768) ^ 0x8B))] ^ 0xDC])
                                                                      - 21]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x1EDu))- 4;
  __asm { BR              X8 }
}

uint64_t sub_18C9B2D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1471034656;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v2(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v4 == 0) ^ 0xA56C9F0) & 1) == 0) | (4
                                                                                 * ((((v4 == 0) ^ 0xA56C9F0) & 1) == 0)) | 0x440u))
                            - 8))();
}

uint64_t sub_18C9B2DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v6 + 8) = v3 + 4096;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                           + 8
                                                           * ((1686
                                                             * ((*(_DWORD *)(v6 + 12) - 4093) < 0xFFFFEFFF)) ^ 0x3C3u));
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v4 + 248) - 13;
  *(_QWORD *)(v8 - 208) = v2;
  *(_QWORD *)(v8 - 176) = v7;
  return v9(a1, a2, 1352897984);
}

uint64_t sub_18C9B2E40(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((31
                                * (((2 * ((v5 << ((v4 ^ 0x82) + 57)) + a3)) & 0xBF7CEFF8)
                                 + (((v5 << ((v4 ^ 0x82) + 57)) + a3) ^ 0xDFBE77FC)
                                 + v3 > 0xFFFFEFFA)) ^ v4)))();
}

uint64_t sub_18C9B5A20(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];

  v2 = (unint64_t)&v5[qword_1EE056760 ^ qword_1EE056738];
  qword_1EE056738 = 1137813707 * v2 - 0x1796AD5631F71675;
  qword_1EE056760 = 1137813707 * (v2 ^ 0xE86952A9CE08E98BLL);
  v3 = ((uint64_t (*)(uint64_t))(qword_1E252F800[((-53
                                                                                         * ((qword_1EE056760
                                                                                           - qword_1EE056738) ^ 0x8B)) ^ byte_18CF0E310[byte_18CF0DEF0[(-53 * ((qword_1EE056760 - qword_1EE056738) ^ 0x8B))] ^ 0x27])
                                                        + 10]
                                        - 2))(a2);
  return ((uint64_t (*)(uint64_t))(qword_1E252F800[((-53
                                                                             * ((qword_1EE056760 - qword_1EE056738) ^ 0x8B)) ^ byte_18CF0E010[byte_18CF0DBF0[(-53 * ((qword_1EE056760 - qword_1EE056738) ^ 0x8B))] ^ 0x2C])
                                                          - 58]
                                          - 3))(v3);
}

uint64_t sub_18C9B5B38()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v5)(_QWORD);
  char v6;

  v0 = qword_1EE056760 - qword_1EE056770 - (_QWORD)&v6;
  v1 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  v2 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  qword_1EE056770 = v1;
  LOBYTE(v1) = -53 * ((v2 - v1) ^ 0x8B);
  v3 = qword_1E252F800[(v1 ^ byte_18CF0E310[byte_18CF0DEF0[v1] ^ 0xBE]) - 200];
  qword_1EE056760 = v2;
  v5 = (void (*)(_QWORD))(qword_1E252F800[(v1 ^ byte_18CF0E110[byte_18CF0DCF0[v1] ^ 0x98])
                                                   + 11]
                                   - 2);
  v5(*(unsigned int *)(v3 - 3));
  v5(*(unsigned int *)(qword_1E252F800[((-53 * (qword_1EE056770 ^ 0x8B ^ qword_1EE056760)) ^ byte_18CF0E110[byte_18CF0DCF0[(-53 * (qword_1EE056770 ^ 0x8B ^ qword_1EE056760))] ^ 0xB0])
                                     - 213]
                     - 3));
  return ((uint64_t (*)(_QWORD))v5)(*(unsigned int *)(qword_1E252F800[((-53
                                                                                                 * (qword_1EE056770 ^ 0x8B ^ qword_1EE056760)) ^ byte_18CF0E010[byte_18CF0DBF0[(-53 * (qword_1EE056770 ^ 0x8B ^ qword_1EE056760))] ^ 0x94])
                                                                              - 219]
                                                              - 3));
}

uint64_t sub_18C9B5CD8(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_18C9B5F30(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_18C9B60BC(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_18C9B62A8(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_18C9B6420(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 366490169 * (((a1 | 0x4671CE0E) - a1 + (a1 & 0xB98E31F1)) ^ 0x50DF984A);
  __asm { BR              X10 }
}

uint64_t sub_18C9B64F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t *a5, int a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v11 = 1401278017
      * (((&a4 | 0x71D85928) - &a4 + (&a4 & 0x8E27A6D0)) ^ 0x75FB2FCF);
  a6 = (v8 - 661) ^ v11;
  a5 = &STACK[0x129748112B546E9C];
  a8 = v11 - 1833524787;
  a7 = v9;
  a4 = 688448102 - v11;
  v12 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a1 + 8 * (v8 & 0x3379480F)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((3167 * (*(_DWORD *)(v9 - 0x69A7616A48D05166) == 1556779682)) ^ v8)))(v12);
}

void sub_18C9B65D4(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  _BYTE *v4;

  v3 = *v1 - v2;
  *v4 = (HIBYTE(v3) ^ 0xA4) - ((v3 >> 23) & 0xB2) + 89;
  v4[1] = (BYTE2(v3) ^ 0xAB) - ((2 * (BYTE2(v3) ^ 0xAB)) & 0xB2) + 89;
  v4[2] = (BYTE1(v3) ^ 0x95) + (~(2 * (BYTE1(v3) ^ 0x95)) | 0x4D) + 90;
  v4[3] = v3 ^ 0x41;
  v1[5] = *a1;
}

void sub_18C9B6678(uint64_t a1)
{
  int v1;

  v1 = 1401278017 * (((a1 | 0x7E048411) - a1 + (a1 & 0x81FB7BEE)) ^ 0x7A27F2F6);
  __asm { BR              X11 }
}

uint64_t sub_18C9B6734@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((8110 * (((*v1 == 0) ^ (a1 - 21)) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_18C9B6780@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;

  v5 = (a1 + 1921267243) & 0x8D7BBF67;
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (int)((2383 * (((*v1 == 0) ^ v5) & 1)) ^ v5))
                                          - 12))(v6);
}

uint64_t sub_18C9B67CC()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 1458445572;
  *(_DWORD *)(v0 + 56) = 1486566025;
  return result;
}

uint64_t sub_18C9B680C()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2383 * (((*v1 == 0) ^ v0 & 0xA7) & 1)) ^ v0 & 0x444A5DA7)) - 12))();
}

void sub_18C9B6844(uint64_t a1)
{
  _BYTE v2[8];

  qword_1EE056788 = 864964861 * ((unint64_t)&v2[qword_1EE056930 ^ qword_1EE056788] ^ 0x30AB163F3BCF6666);
  qword_1EE056930 = qword_1EE056788;
  MEMORY[0x1DEE39758](0x1EE0567A0, sub_18CA83744);
  __asm { BR              X9 }
}

uint64_t sub_18C9B6934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((61 * (*(_QWORD *)(*(_QWORD *)(v1 + 104) - 4) != 0)) ^ 0x480))
                            - 4))();
}

uint64_t sub_18C9B6970()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1368))(v0);
}

void sub_18C9B6998(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  _BYTE v8[2592];
  uint64_t v9;

  v1 = MEMORY[0x1E0C80A78](a1);
  v9 = *MEMORY[0x1E0C80C00];
  v2 = 1697562443 * ((((2 * v1) | 0x8DDECFB0) - v1 - 1190094808) ^ 0x917F5F5C);
  v3 = *(_DWORD *)(v1 + 40) ^ v2;
  v4 = *(_QWORD *)v1;
  v5 = *(_DWORD *)(v1 + 20) + v2;
  sub_18CA83320(v8, 0, 0x128uLL);
  if (v4)
    v6 = ((2 * v5) & 0xDFEF7DBA ^ 0x46B6180) + (v5 ^ 0x7DCA4F3D) == -268976387;
  else
    v6 = 1;
  v7 = v6;
  __asm { BR              X9 }
}

uint64_t sub_18C9B6AE0()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t);

  STACK[0x318] = v2;
  LODWORD(STACK[0x3B8]) = v3;
  v5 = (v3 - 1477416413) & 0x580F95DC;
  LODWORD(STACK[0x708]) = v1;
  LODWORD(STACK[0x700]) = v5 + v4;
  STACK[0x6E8] = v0;
  v6 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v0
                                                   + 8
                                                   * (int)(((v1 != v5 + v4) * ((v3 + 1113799392) & 0xBD9CC6F7 ^ 0x2C7)) ^ (v3 - 407)))
                                       - 8);
  LODWORD(STACK[0x710]) = -874867284;
  return v6(597661059);
}

uint64_t sub_18C9B6BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;

  v8 = LODWORD(STACK[0x6F8]) + 856330565;
  v9 = ((a5 - 697) | 0x128) - 827;
  v10 = *(unsigned __int8 *)(STACK[0x580] + v9);
  v11 = v8 < 0x23025022;
  v12 = (2118239199 * (v9 + v10) - ((-58488898 * (v9 + v10) - 219555458) & 0xAE5F8C52) - 794512664) ^ v6;
  v13 = v5 ^ 0x191DE6B1;
  v14 = (v13 + 386850681 + v12 + v12 % 0x101 - 633138115 - ((2 * (v13 + 386850681 + v12 + v12 % 0x101)) & 0xB486287A)) ^ v7;
  v15 = v14 - ((2 * v14 + 1850153174) & 0xEC187FE2);
  v16 = v7 ^ 0xDA43143D;
  v17 = ((v15 + 758107228) ^ 0x9F3C00E) + 1;
  v18 = v17 + v16;
  v19 = (v15 + 758107228) ^ 0x1EFD1F76;
  v20 = v17 + v13;
  HIDWORD(v21) = (v15 + 758107228) ^ 0x360C3FF1;
  LODWORD(v21) = -758107229 - v15;
  v22 = ((v21 >> 30) ^ (v17 + v13)) - (v18 + v19);
  v23 = v22 ^ 0x7C37D527 ^ (v19 - 1578405969 - ((2 * v19) & 0x43D6DF5E));
  v24 = (v22 ^ 0xDDDCBA88) + v18;
  v25 = v22 ^ 0x7C37D527 ^ (v20 - 1578405969 - ((2 * v20) & 0x43D6DF5E));
  HIDWORD(v21) = v22 ^ 0x5DDCBA88;
  LODWORD(v21) = ~v22;
  v26 = (((v21 >> 31) - v25) ^ v23) - v24;
  v27 = v26 - ((2 * v26 + 1676789112) & 0x6B743B46) - 1481441185;
  v28 = (v27 ^ 0x35BA1DA3) + v23;
  v29 = (v27 ^ 0x35BA1DA3) + v25;
  HIDWORD(v21) = v27 ^ 0x5BA1DA3;
  LODWORD(v21) = v27 ^ 0x30000000;
  v30 = v21 >> 28;
  if (v8 >= 0x23025022)
    v11 = v8 > 0x23025023;
  v31 = v27 ^ (v24 + 901389731 - ((2 * v24) & 0x6B743B46));
  LODWORD(v32) = __ROR4__((((((v29 ^ v30) + v28) ^ v31)- ((2 * (((v29 ^ v30) + v28) ^ v31) + 2059472602) & 0xAE5F8C52)- 1802482282) ^ 0xA8D039D6)+ 1+ v28, 4) ^ 0x10C4A077;
  HIDWORD(v32) = v32;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * ((a5 + 1168) ^ (2 * !v11)))
                                                           - 4))(a1, (v32 >> 28), 4287230823);
}

void sub_18C9B6EB0()
{
  JUMPOUT(0x18C9B6C30);
}

uint64_t sub_18C9B6EBC(int a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  _BOOL4 v21;
  int v22;
  int v23;
  unint64_t v24;
  int v25;

  v5 = (v3 - 295) | 0x121;
  LODWORD(STACK[0x710]) = (v5 + 794930981) ^ a2;
  v6 = LODWORD(STACK[0x6F8]) + 751158205;
  v7 = (2118239199 * *(unsigned __int8 *)STACK[0x580]
      - ((2088994750 * *(unsigned __int8 *)STACK[0x580] + 1927928190) & 0x45822890)
      + 473301255) ^ 0x7BFBF3;
  v8 = v4 - 1364780222 + (v2 ^ 0xAF4127BA) + v7 + v7 % ((v5 + 879) ^ 0x7A5u);
  v9 = (v8 + 2091829726 - ((2 * v8) & 0xF95D93BC)) ^ a1;
  v10 = v9 - ((2 * v9 + 776411350) & 0x22F516DE) + 1218320346;
  v11 = (v10 ^ 0xEE857490) + v4;
  v12 = (a1 ^ 0x7CAEC9DE) + (v10 ^ 0xEE857490) + 1;
  HIDWORD(v13) = v10 ^ 0x117A8B6F;
  LODWORD(v13) = v10;
  v14 = v2 ^ 0x41C4532A ^ v10;
  v15 = ((v11 - 1364780222) ^ (v13 >> 30)) - (v14 + v12);
  v16 = v15 ^ 0x636C6E4D;
  v17 = (v11 - ((2 * (v11 - 1364780222)) & 0x7D61A98A) + 1834479623) ^ v15 ^ 0x636C6E4D;
  v18 = ((2 * v15) ^ 0xBBB97510) - v17 + (v15 >= 0);
  v19 = (v15 ^ 0xDDDCBA88) + v12;
  v20 = v16 ^ (v14 - ((2 * v14) & 0x7D61A98A) - 1095707451);
  v21 = v6 > 0x1CBD829B;
  if (v6 < 0x1CBD829A)
    v21 = 1;
  v22 = (v18 ^ v20) - v19 - 2 * (((v18 ^ v20) - v19 + 33088188) & 0x5CF8DBF ^ ((v18 ^ v20) - v19) & 1) + 2009624698;
  v23 = v22 ^ (v19 + 97488318 - ((2 * v19) & 0xB9F1B7C));
  HIDWORD(v24) = v22 ^ 0x5CF8DBE;
  LODWORD(v24) = v22;
  v25 = ((((v22 ^ 0x5CF8DBE) + v17) ^ (v24 >> 28)) + (v22 ^ 0x5CF8DBE) + v20) ^ v23;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6E8] + 8 * ((14 * v21) ^ v5)) - 8))(v23 ^ 0xDE6FDD96 ^ (v25 - ((2 * v25 + 2059472602) & 0x45822890) - 534668363));
}

void sub_18C9B71EC()
{
  JUMPOUT(0x18C9B6F54);
}

uint64_t sub_18C9B71F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *((_BYTE *)&STACK[0xCA0] + 0x1696 % ((unsigned __int16)a7 ^ 0x564u)) = -20;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * a7) - 4))();
}

void sub_18C9B7268()
{
  JUMPOUT(0x18C9B7220);
}

uint64_t sub_18C9B7270(uint64_t a1)
{
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  int v42;

  v8 = (v1 - 3576) | 0xA43;
  v9 = (unsigned __int16)(7 * ((((v1 - 3576) | 0xA43) - 2874) ^ v4 & 0xF) + 5782) % 0x3C0u;
  v10 = STACK[0xCB6];
  LOBYTE(STACK[0xCB6]) = *(_BYTE *)(v3 + v9);
  v11 = STACK[0x710];
  v12 = (((LODWORD(STACK[0x710]) ^ 0x232BB52Bu) % 0xE) ^ 0xFF7F5FAF) + 2 * ((LODWORD(STACK[0x710]) ^ 0x232BB52Bu) % 0xE);
  STACK[0x718] = v3;
  *(_BYTE *)(v3 + v9) = v10;
  v13 = STACK[0xCBD];
  v14 = (unsigned __int16)(7 * ((v2 ^ v7) % 0xF)
                         + 5789
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v2 ^ v7) % 0xF) + 5789)) >> 16) >> 7));
  LOBYTE(STACK[0xCBD]) = *(_BYTE *)(STACK[0x718] + v14);
  *(_BYTE *)(STACK[0x718] + v14) = v13;
  v15 = STACK[0xCC4];
  v16 = (unsigned __int16)(7 * v12 + 30939) % 0x3C0u;
  LOBYTE(STACK[0xCC4]) = *(_BYTE *)(STACK[0x718] + v16);
  LODWORD(v14) = (v5 ^ v6) + (v4 ^ 0x572FC629);
  *(_BYTE *)(STACK[0x718] + v16) = v15;
  LOBYTE(v9) = STACK[0xCCB];
  v17 = v5 ^ v2;
  LODWORD(v16) = v5 ^ v2 ^ 0xC35EF28C;
  v18 = (unsigned __int16)(7 * ((v5 ^ v6) % 0xD)
                         + 5803
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v5 ^ v6) % 0xD) + 5803)) >> 16) >> 7));
  v19 = ((2 * (v16 - v14)) & 0xBACEFFFA) + ((v16 - v14) ^ 0xDD677FFD);
  v20 = (v2 ^ v11 ^ 0x3A36539A) - v19;
  LOBYTE(STACK[0xCCB]) = *(_BYTE *)(STACK[0x718] + v18);
  v21 = ((v16 - 2 * (v16 & 0x232BB53B ^ v17 & 0x10) + 590066987) ^ v11) - 595635374;
  *(_BYTE *)(STACK[0x718] + v18) = v9;
  LOBYTE(v9) = STACK[0xCD2];
  v22 = (unsigned __int16)(7 * (((int)v14 + 1297094960) % 0xCu)
                         + 5810
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (((int)v14 + 1297094960) % 0xCu)
                                                                               + 5810)) >> 16) >> 7));
  v23 = STACK[0x718];
  LOBYTE(STACK[0xCD2]) = *(_BYTE *)(STACK[0x718] + v22);
  *(_BYTE *)(v23 + v22) = v9;
  v24 = (unsigned __int16)(7 * ((v20 - 580419587) % 0xBu)
                         + 5817
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v20 - 580419587) % 0xBu) + 5817)) >> 16) >> 7));
  LODWORD(v14) = v14 - v20;
  v25 = *(_BYTE *)(v23 + ((5 * ((v12 + 19) & 0x13 | (44 - v12) & 0xFFFFFFF3)) & 0x39));
  LOBYTE(STACK[0xCD9]) = *(_BYTE *)(v23 + v24);
  *(_BYTE *)(v23 + v24) = v25;
  v26 = (unsigned __int16)(7 * (v21 % 0xA)
                         + 5824
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v21 % 0xA) + 5824)) >> 16) >> 7));
  LOBYTE(v16) = STACK[0xCE0];
  LOBYTE(STACK[0xCE0]) = *(_BYTE *)(v23 + v26);
  v27 = ((2 * v21) & 0x53B7BD2E ^ 0x12B0A52A) + (v21 ^ 0x26838C2A);
  *(_BYTE *)(v23 + v26) = v16;
  LODWORD(v26) = v14 + v27;
  v28 = v14 + v27 + 769276013;
  LOBYTE(v16) = STACK[0xCE7];
  v29 = (unsigned __int16)(7 * ((v19 + 580419587) % 9u)
                         + 5831
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v19 + 580419587) % 9u) + 5831)) >> 16) >> 7));
  LODWORD(v22) = v19 + v14 - v27 + 1012725709;
  LOWORD(v19) = -24218 - (v19 - v27);
  LOBYTE(STACK[0xCE7]) = *(_BYTE *)(v23 + v29);
  LODWORD(v14) = v20 + v27 - 876731499 + v28;
  *(_BYTE *)(v23 + v29) = v16;
  v30 = (unsigned __int16)(7 * (v19 & 7) + 5838 - 960
                                                * ((unsigned __int16)((8739 * (7 * (v19 & 7u) + 5838)) >> 16) >> 7));
  v31 = STACK[0xCEE];
  LOBYTE(STACK[0xCEE]) = *(_BYTE *)(v23 + v30);
  *(_BYTE *)(v23 + v30) = v31;
  LODWORD(v30) = ((int)v26 - 972244324) % 6u;
  LODWORD(v26) = v26 + 2084814974;
  v32 = (unsigned __int16)(7 * (v14 % 7)
                         + 5845
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v14 % 7) + 5845)) >> 16) >> 7));
  LOBYTE(v20) = STACK[0xCF5];
  LOBYTE(STACK[0xCF5]) = *(_BYTE *)(v23 + v32);
  *(_BYTE *)(v23 + v32) = v20;
  v33 = STACK[0xCFC];
  LOBYTE(v28) = v26 ^ v19 ^ v28;
  v34 = (unsigned __int16)(7 * v30
                         + 5852
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * v30 + 5852)) >> 16) >> 7));
  LOBYTE(STACK[0xCFC]) = *(_BYTE *)(v23 + v34);
  *(_BYTE *)(v23 + v34) = v33;
  v35 = (unsigned __int16)(7 * (v22 % 5)
                         + 5859
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v22 % 5) + 5859)) >> 16) >> 7));
  v36 = STACK[0xD03];
  LOBYTE(STACK[0xD03]) = *(_BYTE *)(v23 + v35);
  *(_BYTE *)(v23 + v35) = v36;
  LODWORD(v32) = 7
               * (((v26 ^ v19)
                 - ((2 * (v26 ^ v19) - 14) & 0xCA)
                 + 94) & 3 ^ 1)
               + 5866;
  LOBYTE(v34) = STACK[0xD0A];
  LOBYTE(STACK[0xD0A]) = *(_BYTE *)(v23
                                  + v32
                                  % (((((unsigned __int16)v26 ^ (unsigned __int16)v19)
                                     - ((2 * ((unsigned __int16)v26 ^ (unsigned __int16)v19) - 29966) & 0x3DCA)
                                     - 7074) & 0x3C0 ^ 0x2C0)
                                   + ((646 - ((unsigned __int16)v26 ^ (unsigned __int16)v19)) & 0x3C0u)));
  *(_BYTE *)(v23 + (unsigned __int16)(v32 - 960 * ((unsigned __int16)((8739 * v32) >> 16) >> 7))) = v34;
  LODWORD(v14) = (v14 ^ 0x4B49A8FB) - v26;
  LOBYTE(v26) = STACK[0xD11];
  v37 = (unsigned __int16)(7 * (v14 % 3)
                         + 5873
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v14 % 3) + 5873)) >> 16) >> 7));
  LOBYTE(STACK[0xD11]) = *(_BYTE *)(v23 + v37);
  *(_BYTE *)(v23 + v37) = v26;
  v38 = (v28 & 1) == 0;
  v39 = 127;
  if (v38)
    v39 = 120;
  v40 = STACK[0xD18];
  LOBYTE(STACK[0xD18]) = *(_BYTE *)(v23 + v39);
  *(_BYTE *)(v23 + v39) = v40;
  v41 = STACK[0x6E8];
  v42 = 7 * (*(unsigned __int8 *)(v23 + 22) ^ 0xEC) + 6244;
  *(_BYTE *)(v23 + (unsigned __int16)(v42 - 960 * ((unsigned __int16)((17477 * v42) >> 16) >> 8))) = -20 - (((-97 << (((v8 + 51) ^ 0x77) & 0xCB)) - 62) & 0xD8);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * (v8 ^ 0x5BB)) - 12))(a1, 1963494369, 1963494369, 17071263);
}

uint64_t sub_18C9B7974@<X0>(int a1@<W1>, int a2@<W2>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (unsigned __int16)(7 * a2 + 17263) % 0x3C0u) = a2 - ((2 * a2 + 62) & ((a3 + 81) ^ 0x4B)) + 11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((a2 + 1 != a1 + 16) | a3)) - 12))();
}

uint64_t sub_18C9B79E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  char v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  unsigned __int8 v52;
  int v53;
  int v54;

  v14 = STACK[0xCB6];
  v15 = (unsigned __int16)(7 * (a6 & 0xF ^ 8)
                         + 5782
                         - ((unsigned __int16)((8739 * (7 * (a6 & 0xF ^ 8u) + 5782)) >> 16) >> 7) * v12);
  v16 = v9 + v7 - 1;
  LOBYTE(STACK[0xCB6]) = *(_BYTE *)(v13 + v15);
  *(_BYTE *)(v13 + v15) = v14;
  v17 = (unsigned __int16)(7 * (v16 % 0xF)
                         + 5789
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v16 % 0xF) + 5789)) >> 16) >> 7)
                         * v12);
  v18 = STACK[0xCBD];
  LOBYTE(STACK[0xCBD]) = *(_BYTE *)(v13 + v17);
  *(_BYTE *)(v13 + v17) = v18;
  v19 = 7 * ((v6 ^ 0x50BED845u) % 0xE)
      + 5796
      - ((8739 * (unsigned __int16)(7 * ((v6 ^ 0x50BED845u) % 0xE) + 5796)) >> 23) * v12;
  v20 = ~(_WORD)v19 & 0x633D | 0xDEBF0000 | v19 & 0x33D;
  LODWORD(v17) = ~(_WORD)v19 & 0x6319 | 0xDEBF0000;
  v21 = v19 & 0x319;
  v22 = (unsigned __int16)(7 * ((v6 ^ 0x50BED845u) % 0xE)
                         + 5796
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v6 ^ 0x50BED845u) % 0xE) + 5796)) >> 16) >> 7)
                         * v12);
  LOBYTE(v17) = *(_BYTE *)(v13 + (v20 ^ (v17 | v21)));
  LOBYTE(STACK[0xCC4]) = *(_BYTE *)(v13 + v22);
  *(_BYTE *)(v13 + v22) = v17;
  LOBYTE(v21) = STACK[0xCCB];
  v23 = (unsigned __int16)(7 * ((a1 ^ v8) % 0xD)
                         + 5803
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((a1 ^ v8) % 0xD) + 5803)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCCB]) = *(_BYTE *)(v13 + v23);
  v24 = (a6 ^ 0xA2C11448) + (a1 ^ v8);
  LODWORD(v22) = v16 + (a1 ^ v8) - 2 * ((v7 + 782703425) & (a1 ^ v8));
  *(_BYTE *)(v13 + v23) = v21;
  LODWORD(v23) = ((2 * (v22 - v24)) & 0xFFF93DAE) + ((v22 - v24) ^ 0xFFFC9ED7);
  LODWORD(v22) = ((v22 + 1354684485 - ((2 * v22) & 0xA17DB08A)) ^ v6) - 595635374;
  v25 = (v6 ^ 0x50BED845 ^ v16)
      - v23
      - 221481
      - ((2 * ((v6 ^ 0x50BED845 ^ v16) - v23 - 221481)) & 0x2D78D148)
      - 1766037340;
  v26 = v24 + 1297094960;
  v27 = (unsigned __int16)(7 * (v26 % 0xC)
                         + 5810
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v26 % 0xC) + 5810)) >> 16) >> 7)
                         * v12);
  v28 = STACK[0xCD2];
  LOBYTE(STACK[0xCD2]) = *(_BYTE *)(v13 + v27);
  *(_BYTE *)(v13 + v27) = v28;
  v29 = (unsigned __int16)(7 * ((v25 ^ 0x96BC68A4) % 0xB)
                         + 5817
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v25 ^ 0x96BC68A4) % 0xB) + 5817)) >> 16) >> 7)
                         * v12);
  v30 = STACK[0xCD9];
  LOBYTE(STACK[0xCD9]) = *(_BYTE *)(v13 + v29);
  v31 = ((2 * (v26 + (v25 ^ 0x6943975B) + 1)) & 0x97FFD97C) + ((v26 + (v25 ^ 0x6943975B) + 1) ^ 0x4BFFECBE);
  v32 = ((int)v23 + 221481) % 9u;
  *(_BYTE *)(v13 + v29) = v30;
  LOBYTE(v29) = STACK[0xCE0];
  v33 = (unsigned __int16)(7 * (v22 % 0xA)
                         + 5824
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v22 % 0xA) + 5824)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCE0]) = *(_BYTE *)(v13 + v33);
  v34 = (v25 ^ 0x16BC68A4) & (v22 ^ 0xF5852BD);
  v35 = v22 ^ 0x19E43A19 ^ v25;
  LODWORD(v23) = v23 + (v22 ^ 0x70A7AD42) - 1274844080 + v31 + 2076;
  *(_BYTE *)(v13 + v33) = v29;
  LODWORD(v23) = ((2 * v23) & 0x57FF490E) + (v23 ^ 0x2BFFA487);
  v36 = (unsigned __int16)(7 * v32
                         + 5831
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v32 + 5831)) >> 16) >> 7)
                         * v12);
  LOBYTE(v32) = STACK[0xCE7];
  LODWORD(v22) = (v22 ^ 0x8F5852BD) - 1275063486 + v31;
  v37 = ((2 * v22) & 0xDFFDCDBC) + (v22 ^ 0xEFFEE6DE);
  v38 = v35 + 2 * v34 + v37 + 268507426 + 584710018 - ((2 * (v35 + 2 * v34 + v37 + 268507426)) & 0x45B3EF04);
  LOBYTE(STACK[0xCE7]) = *(_BYTE *)(v13 + v36);
  LOBYTE(v31) = v23 + v31 - 2 * v23 - ((2 * (v23 + v31 - 2 * v23) - 110) & 0x3E);
  v39 = v31 + 104;
  *(_BYTE *)(v13 + v36) = v32;
  LOBYTE(v32) = STACK[0xCEE];
  v40 = 7 * ((127 - (_BYTE)v31) & 7) + 5838;
  v41 = (unsigned __int16)(v40 - ((unsigned __int16)((8739 * v40) >> 16) >> 7) * v12);
  LOBYTE(STACK[0xCEE]) = *(_BYTE *)(v13 + v41);
  *(_BYTE *)(v13 + v41) = v32;
  LOBYTE(v41) = STACK[0xCF5];
  v42 = (unsigned __int16)(7 * ((v38 ^ 0x22D9F782u) % 7)
                         + 5845
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v38 ^ 0x22D9F782u) % 7) + 5845)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCF5]) = *(_BYTE *)(v13 + v42);
  *(_BYTE *)(v13 + v42) = v41;
  LODWORD(v27) = ((int)v23 - 738174087) % 5u;
  v43 = (unsigned __int16)(7 * ((v37 + 268507426) % 6u)
                         + 5852
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v37 + 268507426) % 6u) + 5852)) >> 16) >> 7)
                         * v12);
  LOBYTE(v41) = STACK[0xCFC];
  LOBYTE(STACK[0xCFC]) = *(_BYTE *)(v13 + v43);
  *(_BYTE *)(v13 + v43) = v41;
  v44 = (unsigned __int16)(7 * v27
                         + 5859
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v27 + 5859)) >> 16) >> 7)
                         * v12);
  LOBYTE(v42) = (v39 ^ (v37 - ((2 * (v37 + 4)) & 0x3E) - 93)) + 121;
  LOBYTE(v41) = STACK[0xD03];
  LOBYTE(STACK[0xD03]) = *(_BYTE *)(v13 + v44);
  *(_BYTE *)(v13 + v44) = v41;
  LOBYTE(v44) = STACK[0xD0A];
  v45 = (unsigned __int16)(7 * (v42 & 3)
                         + 5866
                         - ((unsigned __int16)((8739 * (7 * (v42 & 3) + 5866)) >> 16) >> 7) * v12);
  LOBYTE(STACK[0xD0A]) = *(_BYTE *)(v13 + v45);
  *(_BYTE *)(v13 + v45) = v44;
  LOBYTE(v44) = v42 ^ v22;
  v46 = (unsigned __int16)(7 * (((v38 ^ 0x69905F79u) - (v37 - 969400572)) % 3)
                         + 5873
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7
                                                                               * (((v38 ^ 0x69905F79u)
                                                                                 - (v37
                                                                                  - 969400572))
                                                                                % 3)
                                                                               + 5873)) >> 16) >> 7)
                         * v12);
  LOBYTE(v45) = STACK[0xD11];
  LOBYTE(STACK[0xD11]) = *(_BYTE *)(v13 + v46);
  *(_BYTE *)(v13 + v46) = v45;
  v47 = STACK[0xD18];
  v48 = (v44 & 1) == 0;
  v49 = 127;
  if (v48)
    v49 = 120;
  LOBYTE(STACK[0xD18]) = *(_BYTE *)(v13 + v49);
  *(_BYTE *)(v13 + v49) = v47;
  v50 = (16
       * *(_BYTE *)(STACK[0x718]
                  + (unsigned __int16)(7 * ((((v10 - 15775) & 0x35CF) - 1221) & 0x700)
                                     + 6244
                                     - ((unsigned __int16)(((7 * ((((v10 - 60505503) & 0x39B35CF) - 1221) & 0x700u)
                                                           + 6244)
                                                          * v11) >> 16) >> 9)
                                     * v12))) ^ 0xC0;
  v51 = 135
      * (*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(6244 - 6 * v12)) ^ 0x88 ^ (v50 - ((2 * v50) & 0xC0) - 20) & 0xFC)
      + 80595;
  v52 = *((_BYTE *)off_1E2538470[v10 - 3397] + (v51 - 944 * ((4549754 * (unint64_t)v51) >> 32)) - 4);
  v53 = ((v52 ^ 0xC5) >> 3) ^ ((v52 ^ 0xC5) >> 1);
  v54 = 7 * (v52 ^ 0x4C ^ (v53 - ((2 * v53) & 0x52) - 87)) + 5782;
  *(_BYTE *)(STACK[0x718] + (unsigned __int16)(3983 - ((unsigned __int16)((3983 * v11) >> 16) >> 9) * v12)) = *(_BYTE *)(STACK[0x718] + (unsigned __int16)(v54 - ((unsigned __int16)((8739 * v54) >> 16) >> 7) * v12));
  return (*(uint64_t (**)(uint64_t))(STACK[0x6E8] + 8 * v10))(197);
}

void sub_18C9B8258()
{
  JUMPOUT(0x18C9B8114);
}

uint64_t sub_18C9B8260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  char v17;

  v12 = 7 * (((_BYTE)v8 + 2) & 0xF) + 6244;
  v13 = 7 * ((v8 + 1842) >> 4) + 6244;
  LOBYTE(v13) = (16
               * *(_BYTE *)(v11
                          + (unsigned __int16)(v13 - 960 * ((unsigned __int16)((17477 * v13) >> 16) >> 8)))) ^ 0xC0;
  v14 = 135
      * (*(unsigned __int8 *)(v11
                            + (unsigned __int16)(v12 - 960 * ((unsigned __int16)((8739 * v12) >> 16) >> 7))) ^ 0xBC ^ ((_BYTE)v13 - ((2 * (_BYTE)v13) & 0xC0) - 20) & 0xFC)
      + 44955;
  LOBYTE(v14) = *(_BYTE *)(v10 + (v14 - 944 * ((4549754 * (unint64_t)v14) >> 32)));
  v15 = 7 * (((-67 * (v14 ^ 0xA9)) ^ ~(4 * ((-67 * (v14 ^ 0xA9)) ^ (40 * (v14 ^ 0x29))))) >> 4) + 5782;
  v16 = v9 - v8 + 8 * v8;
  v17 = *(_BYTE *)(v11 + (unsigned __int16)(v15 - 960 * ((unsigned __int16)((8739 * v15) >> 16) >> 7)));
  if (v16 >= 0xFFFFFC40)
    v16 += 960;
  *(_BYTE *)(v11 + v16) = ((16 * v17) ^ 0xC0) - ((2 * ((16 * v17) ^ 0xC0)) & 0xC0) - 20;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((722
                                          * (v8
                                           + (~v16 & 0xC6B53499 | v16 & 0x99) * (~v16 & 0x5067DFA9 | v16 & 0x3A9)
                                           - 1213864142 < 0x100)) ^ v7))
                            - 8))();
}

uint64_t sub_18C9B83EC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  int v9;
  __int16 v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  char v16;
  unsigned __int8 v17;
  int v18;

  v15 = 7 * (((_BYTE)v13 + 12) & 0xF) + v8;
  v16 = (16
       * *(_BYTE *)(v14
                  + (unsigned __int16)(((v7 - 678) ^ 0x1B7A)
                                     - ((v13 + 2940) >> 4)
                                     + 8 * ((v13 + 2940) >> 4)
                                     - (unsigned __int16)(((v7 - 678) ^ 0x1B7A)
                                                        - ((v13 + 2940) >> 4)
                                                        + 8 * ((v13 + 2940) >> 4))
                                     / 0x3C0u
                                     * v10))) ^ 0xC0;
  v17 = (v16 + (~(2 * v16) | 0x3F) - 19) ^ *(_BYTE *)(v14
                                                    + (unsigned __int16)(v15
                                                                       - ((unsigned __int16)((v15 * v9) >> 16) >> 7)
                                                                       * v10));
  v18 = 7
      * (*(unsigned __int8 *)(v12
                            + (unsigned __int16)((v17 ^ 0xF) * a1
                                               + 6750
                                               - (unsigned __int16)((v17 ^ 0xF) * a1 + 6750) / 0x3B0u * a6)) ^ (v17 - ((2 * v17) & 0x52) - 87) ^ 0xDB)
      + v11;
  *(_BYTE *)(v14 + (unsigned __int16)(7 * v13 - 26759 - (unsigned __int16)(7 * v13 - 26759) / 0x3C0u * v10)) = *(_BYTE *)(v14 + (unsigned __int16)(v18 - ((unsigned __int16)((v18 * v9) >> 16) >> 7) * v10));
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v13 == 825374083) | (2 * (v13 == 825374083))) ^ v7)) - 8))();
}

uint64_t sub_18C9B8528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v12 = 135
      * (*(unsigned __int8 *)(v11
                            + (unsigned __int16)(7 * a8
                                               - 2443
                                               - 960
                                               * ((unsigned __int16)(((unsigned __int16)(7 * a8 - 2443)
                                                                    * v9) >> 16) >> 9))) ^ 0xE8)
      + 42660;
  LOBYTE(v12) = *(_BYTE *)(v10 + (v12 - 944 * ((4549754 * (unint64_t)v12) >> 32)));
  *(_BYTE *)(v11
           + (unsigned __int16)(7 * a8
                              - 4865
                              - 960
                              * ((unsigned __int16)(((unsigned __int16)(7 * a8 - 4865) * v9) >> 16) >> 9))) = ((v12 ^ 0xA9) + 98) ^ (~(_BYTE)v12 << 7) ^ (8 * ((v12 ^ 0xA9) + 98)) ^ 0xF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1753 * (a8 != 417727720)) ^ v8)) - 8))();
}

uint64_t sub_18C9B85F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;

  v13 = *(_BYTE *)(v11 + (a5 ^ 0x8225805E) * v9 - (a5 ^ 0x8225805E) * v9 / 0x3B0 * v10);
  v14 = 7
      * ((v13 ^ ((((v13 & 0x78 ^ 0x50 | v13 & 0x78 ^ (v8 + 10))
                                  - ((2 * (v13 & 0x78 ^ 0x50 | v13 & 0x78 ^ (v8 + 10))) & 0xB0)
                                  + 89) ^ a5)
                                - ((2
                                  * (((v13 & 0x78 ^ 0x50 | v13 & 0x78 ^ (v8 + 10))
                                    - ((2 * (v13 & 0x78 ^ 0x50 | v13 & 0x78 ^ (v8 + 10))) & 0xB0)
                                    + 89) ^ a5)) & 0x52)
                                - 87)) ^ 0xC3)
      + 5782;
  *(_BYTE *)(v12 + 7 * a4 - 997243455 - (7 * a4 - 997243455) / 0x3C0u * v7) = *(_BYTE *)(v12
                                                                                       + (unsigned __int16)(v14 - ((unsigned __int16)((8739 * v14) >> 16) >> 7) * v7));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a7
                                                                                        + 8
                                                                                        * ((108 * (a4 == -1698236384)) ^ v8))
                                                                            - 8))(a1, a2, a3, (a4 + 1), a4 - ((2 * (a4 + 1) + 41029598) & 0x44B00B2u) - 413235127);
}

uint64_t sub_18C9B8718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  _BOOL4 v9;
  uint64_t (*v10)(uint64_t, uint64_t);

  STACK[0x578] = v8;
  v9 = LODWORD(STACK[0x708]) == LODWORD(STACK[0x700]);
  LODWORD(STACK[0x710]) = -1622393144;
  LODWORD(STACK[0x708]) = 1224267319;
  LODWORD(STACK[0x700]) = (v7 - 278) ^ 0xAC0;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a7
                                                   + 8
                                                   * (((((v7 + 418) | 0xC) ^ (((v7 - 278) ^ 0xAC0) - 1000)) * v9) ^ (v7 - 278)));
  LODWORD(STACK[0x6F4]) = 1417714657;
  return v10(a1, 3050530178);
}

uint64_t sub_18C9B87B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  LODWORD(STACK[0x3B4]) = 0;
  v7 = LODWORD(STACK[0x700]) - 21;
  LODWORD(STACK[0x58C]) = LODWORD(STACK[0x6F8]) + 1047493916;
  LODWORD(STACK[0x330]) = 2136020148;
  LODWORD(STACK[0x354]) = -344507189;
  LODWORD(STACK[0x36C]) = 90816718;
  LODWORD(STACK[0x358]) = 629085702;
  LODWORD(STACK[0x324]) = -1560122098;
  LODWORD(STACK[0x334]) = -123297186;
  LODWORD(STACK[0x328]) = 1252751350;
  LODWORD(STACK[0x3A0]) = -2139566523;
  LODWORD(STACK[0x3A8]) = 322046286;
  LODWORD(STACK[0x378]) = 1365294613;
  LODWORD(STACK[0x360]) = -1625101934;
  LODWORD(STACK[0x3AC]) = 1396005134;
  LODWORD(STACK[0x344]) = -685500333;
  LODWORD(STACK[0x380]) = -1841747370;
  LODWORD(STACK[0x33C]) = -1970166376;
  LODWORD(STACK[0x384]) = 669180049;
  LODWORD(STACK[0x37C]) = 1046978255;
  LODWORD(STACK[0x34C]) = -399408180;
  LODWORD(STACK[0x320]) = -1182778622;
  LODWORD(STACK[0x348]) = -1454216319;
  LODWORD(STACK[0x350]) = 1401355102;
  LODWORD(STACK[0x368]) = 1430926876;
  LODWORD(STACK[0x388]) = 268326929;
  LODWORD(STACK[0x35C]) = -49333025;
  LODWORD(STACK[0x32C]) = -1064047075;
  LODWORD(STACK[0x39C]) = -765249453;
  LODWORD(STACK[0x340]) = -1703302741;
  LODWORD(STACK[0x3A4]) = -1844897048;
  LODWORD(STACK[0x370]) = 1580728045;
  LODWORD(STACK[0x38C]) = -1843081391;
  LODWORD(STACK[0x374]) = -1310738456;
  LODWORD(STACK[0x338]) = -1968179494;
  LODWORD(STACK[0x3C8]) = 52;
  v8 = ((2 * (((v7 + 1343) ^ 0xD505D5 ^ LODWORD(STACK[0x708])) - LODWORD(STACK[0x6F4]) - 970144585)) & 0xD7F7DF76)
     + ((((v7 + 1343) ^ 0xD505D5 ^ LODWORD(STACK[0x708])) - LODWORD(STACK[0x6F4]) - 970144585) ^ 0xEBFBEFBB);
  v9 = (v8 + 335810629) & (v7 - 1598755304);
  v10 = ((2 * (a2 + 1856090726)) & 0xF6F77F7E ^ 0x66D54E0A) + ((a2 + 1856090726) ^ 0xC81558FA);
  v11 = v8 - ((2 * v8 + 1589089666) & 0x527E1DAA) + 412801430;
  v12 = (LODWORD(STACK[0x6F4]) + v9 + (v9 ^ 0xA0B4F6CB) + (a7 ^ 0x59C9D2BD) - 1726069634) ^ v11;
  v13 = (v11 ^ 0x293F0ED5) + v10 + 75776065 - ((2 * ((v11 ^ 0x293F0ED5) + v10 + 75776065)) & 0xDB286306) - 309055101;
  v14 = (((v12 ^ 0x146911B) + (v12 ^ 0x293F0ED5) + 1) ^ 0xFFFFFFFE) + (v12 ^ 0x293F0ED5);
  return (*(uint64_t (**)(_QWORD))(STACK[0x6E8] + 8 * (v7 | 0x44)))((((919252789 - v10) | (v10 + 1228230858)) & 0x4BD15AB3)- 2104233967+ ((v14 - 1284257253 - ((2 * v14) & 0x66E79436)) ^ v13 ^ 0x5EE7FB98)+ (v13 & 0x7204A2A ^ 0xFDDFB5D7)+ (v13 & 0x7204A2A ^ 0xFAFFFFFD)+ ((2 * (((v14 - 1284257253 - ((2 * v14) & 0x66E79436)) ^ 0xB373CA1B) + 80921574)) & 0xFAD81FDE)+ ((((v14 - 1284257253 - ((2 * v14) & 0x66E79436)) ^ 0xB373CA1B) + 80921574) ^ 0x7D6C0FEF)+ 2);
}

uint64_t sub_18C9B8DC4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  char v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  BOOL v70;
  unsigned int v71;
  unsigned int v72;
  char v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  char v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  char v158;
  char v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  char v178;
  int v179;
  char v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  char v196;
  char v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  int v209;
  unsigned int v210;
  char v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  char v216;
  char v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  char v227;
  int v228;
  unsigned int v229;
  char v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  char v240;
  int v241;
  char v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unint64_t v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  char v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  char v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;

  v12 = v4 - 2530;
  v13 = v6 - v5;
  v14 = a1 - v13;
  v15 = a3 - v7;
  v16 = a4 - (a3 - v7) + 2134909207;
  v17 = v8 - (a1 - v13);
  v18 = v17 + v5;
  v19 = v18 - 1609904425;
  v20 = v13 - v18 + 1414129684;
  v21 = v20 + v12 + 1603075725;
  v22 = v7 - 2052143548 + a2 - v16;
  v23 = v15 - v22 - 579397952;
  v24 = a2 - v16 - 1185910493;
  v25 = v16 + 84614390 + v23;
  v26 = v17 - 2006119503;
  v27 = v14 - 556675100 + v20;
  v28 = (a1 + 119) ^ 0x74;
  v29 = (v12 + 1010) | 0x10;
  LODWORD(STACK[0x554]) = v27 + 33480885;
  LODWORD(STACK[0x550]) = v24 + 931521832;
  LODWORD(STACK[0x614]) = 109295418 - v19 - ((1201991864 - (v19 << (((v12 - 14) | 0x10) ^ 0x13))) & 0xC5627DBC);
  LODWORD(STACK[0x54C]) = v21 + 195454923;
  LODWORD(STACK[0x560]) = 828390979 - v26;
  LODWORD(STACK[0x610]) = -258624344 - v23 - ((985840958 - 2 * v23) & 0x2668AC12);
  v30 = (v23 - 1214097949) & 0xA0B4F6CB;
  LODWORD(STACK[0x570]) = v22 - 1589071414;
  v31 = v26 - v19;
  LODWORD(STACK[0x628]) = -5841469 - v25 - ((252206712 - 2 * v25) & 0x30455D0E);
  v32 = v25 + v23 + 1782157008;
  v33 = v25 - v24 - 733046948;
  v34 = (v27 - v26 - 2032646145) ^ 0x24AF81B7;
  v35 = v21 + v27 + v30 + (v30 ^ 0xA0B4F6CB) + 1532446247;
  v36 = v35 - ((2 * v35) & 0xC50CAA26) + 1652970771;
  v37 = ((2 * v36) & 0xF7F73FAE ^ 0x41853684) + (v36 ^ 0x5B3944B5);
  LODWORD(STACK[0x558]) = v19 - 1545143432;
  LODWORD(STACK[0x568]) = -154182181 - v22;
  v38 = ((2 * v32) & 0xBDEE7FFE ^ 0x84881CE2) + (v32 ^ 0x9CB3B18E);
  LODWORD(STACK[0x564]) = -713716274 - v34 - ((-1146142398 - 2 * v34) & 0xEF3BDA5A);
  v39 = v26 - v19 - v37 - 62216643;
  v40 = v24 - v22;
  v33 ^= 0x24AF81B7u;
  LODWORD(STACK[0x624]) = -23468674 - v40 - ((121482444 - 2 * v40) & 0x35F61E30);
  LODWORD(STACK[0x55C]) = v33 - 1334613472;
  v41 = v34 + v39 - 1491269094;
  LODWORD(STACK[0x56C]) = v38 - 1687514227;
  LODWORD(STACK[0x548]) = v31 - 194442431;
  v42 = v38 + v22;
  v43 = v37 + v19;
  LODWORD(STACK[0x3B0]) = v38;
  v44 = v40 - v38 + 162965305;
  v45 = (v36 ^ 0x99275BAE) + ((2 * v36) & 0xBE96126A ^ 0x8C900023) - v43 + 1;
  v46 = v45 - ((2 * v45 + 541252366) & 0x5BF719A4) + 1042086489;
  v47 = (v32 ^ 0xA4EA0788) - v42 + 1934675385 + v9 - ((2 * ((v32 ^ 0xA4EA0788) - v42 + 1934675385)) & 0x1C5F05A);
  LODWORD(STACK[0x618]) = 64559578 - v37 - ((589728076 - 2 * v37) & 0x248BAA68);
  v48 = v42 - ((2 * v42 - 409333790) & v11) + 1261365449;
  v49 = v43 - ((2 * v43 + 23248344) & 0x1AA104E) + 2022074131;
  v50 = v39 ^ 0x74325E6F ^ v46;
  v51 = v44 ^ 0xC476F910 ^ v47;
  v52 = v44 + v33 - 1341852384 + (~(2 * (v44 + v33) + 729643264) | 0xCB738EC1);
  LODWORD(STACK[0x544]) = 577886606;
  LODWORD(STACK[0x3D4]) = 1760697484;
  LODWORD(STACK[0x6F8]) = v29;
  LODWORD(STACK[0x6E0]) = (v29 - 2006370886) & 0x7796C6FF;
  LODWORD(STACK[0x708]) = (v29 - 970) | 0x84;
  v53 = a4 ^ 0x9EE692DC ^ v52;
  LOBYTE(v34) = v28 ^ (((((v12 - 14) | 0x10) + 54) | 0x84)
                     + v34
                     + v39
                     + 26
                     - ((2 * (v34 + v39 + 26) - 52) & ((((v12 - 14) | 0x10) - 70) ^ 0xC0))
                     + 32);
  LOBYTE(STACK[0xCB6]) = v34 ^ 0x79;
  v54 = v50 ^ 0x59C9D2BD;
  v55 = (v50 ^ 0x59C9D2BD) + (v46 ^ 0x2DFB8CD2);
  LOBYTE(v34) = (v34 - 46 - ((2 * v34) & 0xA4)) ^ v46;
  LOBYTE(STACK[0xE84]) = (v53 ^ 0x87) - ((2 * (v53 ^ 0x87)) & 0xD8) - 20;
  v56 = ((v53 ^ 0x4A0AA87) + v9 - 2 * ((v53 ^ 0x4A0AA87) & (v9 + 16) ^ v53 & 0x10)) ^ v47;
  LOBYTE(STACK[0xE8B]) = v56 - ((2 * v56) & 0xD8) - 20;
  v57 = v51 ^ 0xC494013D;
  v58 = (v51 ^ 0xC494013D) + (v47 ^ v9);
  v59 = (v56 - 996933315 - ((2 * v56) & 0x8928027A)) ^ v51;
  LOBYTE(v46) = (v34 - 67 - ((2 * v34) & 0x7A)) ^ v50;
  LOBYTE(v39) = (v46 + 39 - ((2 * v46) & 0x4E)) ^ v49;
  v60 = v55 + (v50 ^ 0x59C9D2BD) + 1671822981 - ((2 * (v55 + (v50 ^ 0x59C9D2BD))) & 0xC74BFD0A);
  LOBYTE(STACK[0xCC4]) = v46 ^ 0x79;
  LOBYTE(STACK[0xCBD]) = v34 ^ 0x79;
  v61 = (v49 ^ 0xD50827) - v55 + (v60 ^ 0x9C5A017A);
  LOBYTE(STACK[0xE92]) = v59 - ((2 * v59) & 0xD8) - 20;
  v62 = (v59 - 681451304 - ((2 * v59) & 0xAEC3C1B0)) ^ v48;
  v63 = v50 ^ 0xA6362D42;
  v64 = (v52 ^ v10) + (v51 ^ 0x3B6BFEC2) + 1196511587;
  LOBYTE(STACK[0xE99]) = v62 - ((2 * v62) & 0xD8) - 20;
  v65 = v58 + (v51 ^ 0xC494013D) - 1683711859 - ((2 * (v58 + (v51 ^ 0xC494013D))) & 0x3749311A);
  v66 = v62 ^ v64;
  LOBYTE(STACK[0xEA0]) = v66 - ((2 * v66) & 0xD8) - 20;
  v67 = (v66 - 1683711859 - ((2 * v66) & 0x3749311A)) ^ v65;
  v68 = (v50 ^ 0xA6362D42) + v41 - 1242364983;
  LOBYTE(STACK[0xCCB]) = v39 ^ 0x79;
  LOBYTE(v39) = v39 ^ v68;
  LOBYTE(STACK[0xEA7]) = v67 - ((2 * v67) & 0xD8) - 20;
  v69 = ((2 * (v60 ^ v50)) & 0xFFDE28DE ^ 0x74D80850) + (v60 ^ v50 ^ 0xC5833857);
  v70 = LODWORD(STACK[0x58C]) == 778517497;
  ++v61;
  v71 = (v67 - 996933315 - ((2 * v67) & 0x8928027A)) ^ v51;
  LOBYTE(v60) = (v39 - 123 - ((2 * v39) & 0xA)) ^ v60;
  v72 = (v65 ^ 0x645B6772) - v58 + (v48 ^ 0xD761E0D8) + 1;
  LOBYTE(v50) = (v60 - 67 - ((2 * v60) & 0x7A)) ^ v50;
  LOBYTE(STACK[0xEAE]) = v71 - ((2 * v71) & 0xD8) - 20;
  v73 = v50 ^ v61;
  v74 = v63 + v61 + 1;
  LOBYTE(STACK[0xCD2]) = v39 ^ 0x79;
  LOBYTE(STACK[0xCD9]) = v60 ^ 0x79;
  v75 = v68 - v74;
  v76 = v71 ^ v72;
  LOBYTE(v71) = (v71 ^ v72) - ((2 * (v71 ^ v72)) & 0xD8) - 20;
  v77 = (v51 ^ 0x3B6BFEC2) + v72 + 1;
  v78 = v64 - v77;
  LOBYTE(STACK[0xCE0]) = v50 ^ 0x79;
  v79 = v74 - v75 + 1035864133 - ((2 * (v74 - v75)) & 0x7B7C108A);
  v80 = v51 ^ 0x5F3099B0 ^ v65;
  v81 = v77 - v78 - 139746877 - ((2 * (v77 - v78)) & 0xEF574386);
  v82 = v79 ^ 0x3DBE0845;
  LOBYTE(STACK[0xEB5]) = v71;
  v83 = v54 - 2068978999 + (v79 ^ 0x3DBE0845) + 465650342 - ((2 * (v54 - 2068978999 + (v79 ^ 0x3DBE0845))) & 0x3782854C);
  LOBYTE(v54) = (v73 ^ (v75 + 14)) & 8 | 0x95;
  v84 = v76 ^ (v78 - 1620707570);
  v85 = (v73 ^ (v75 + 14)) & 0xF7;
  LOBYTE(STACK[0xCE7]) = v73 ^ 0x79;
  LOBYTE(STACK[0xEBC]) = v84 - ((2 * v84) & 0xD8) - 20;
  LOBYTE(v50) = (v69 - ((2 * v69 + 124) & 0x22) - 49) ^ v73 ^ (v75 + 14);
  v86 = v84 ^ (v80 - 2080828115);
  LOBYTE(STACK[0xEC3]) = v86 - ((2 * v86) & 0xD8) - 20;
  v87 = v81 ^ 0xF7ABA1C3;
  v88 = v57 - 2068978999 + (v81 ^ 0xF7ABA1C3);
  LOBYTE(v57) = v50 ^ 0x68;
  LOBYTE(v50) = ((v50 ^ 0x11) - 90 - ((2 * (v50 ^ 0x11)) & 0x4C)) ^ v83;
  v89 = v83 ^ 0xFFDBD431;
  LOBYTE(STACK[0xCEE]) = (v54 ^ v85) - ((2 * (v54 ^ v85)) & 0xD8) - 20;
  v90 = v86 ^ v88;
  LOBYTE(STACK[0xCF5]) = v57;
  v91 = (v75 - ((2 * (v75 - 1620707570)) & 0x7B7C108A) - 584843437) ^ v79;
  LOBYTE(STACK[0xECA]) = v90 - ((2 * v90) & 0xD8) - 20;
  v92 = v69 - (v83 ^ 0xFFDBD431) + 525963955 - ((2 * (v69 - (v83 ^ 0xFFDBD431) - 586983730)) & 0x84AC77CA);
  v93 = (v78 - ((2 * (v78 - 1620707570)) & 0xEF574386) - 1760454447) ^ v81;
  LOBYTE(v79) = (v50 + 69 - ((2 * v50) & 0x8A)) ^ v79;
  v94 = (v90 - 139746877 - ((2 * v90) & 0xEF574386)) ^ v81;
  v95 = (v91 + 465650342 - ((2 * v91) & 0x3782854C)) ^ 0xE41A9697 ^ v83;
  LOBYTE(STACK[0xD03]) = v79 ^ 0x79;
  v96 = v93 ^ v88;
  v97 = v93 ^ v88 ^ 0xA7C3714F;
  LOBYTE(v91) = v50 ^ 0x79;
  v98 = v89 + 1965514907;
  LOBYTE(STACK[0xCFC]) = v91;
  LOBYTE(STACK[0xED1]) = v94 - ((2 * v94) & 0xD8) - 20;
  v99 = (v88 ^ 0x1BE56968) + v80 - ((2 * ((v88 ^ 0x1BE56968) + v80) - 1176185220) & 0xD5AD5374) + 1204360440;
  v100 = (v94 + 1138354136 - ((2 * v94) & 0x87B3CFB0)) ^ v97;
  LOBYTE(v79) = v79 ^ v95;
  LOBYTE(STACK[0xED8]) = v100 - ((2 * v100) & 0xD8) - 20;
  v101 = v99 ^ 0x6AD6A9BA;
  v102 = v87 + 222383983 + (v99 ^ 0x6AD6A9BA);
  LOBYTE(STACK[0xD11]) = (v79 - 27 - ((2 * v79) & 0xCA)) ^ v92 ^ 0x79;
  LOBYTE(STACK[0xD18]) = (v79 - 27 - ((2 * v79) & 0xCA)) ^ v92 ^ v98 ^ 0x79;
  v103 = v82 + 222383983 + (v92 ^ 0x42563BE5);
  LOBYTE(v39) = (v79 - 27 - ((2 * v79) & 0xCA)) ^ v92 ^ v98 ^ v103;
  v104 = (v100 + 1792453050 - ((2 * v100) & 0xD5AD5374)) ^ v99;
  v105 = v103 ^ v92;
  LOBYTE(STACK[0xD0A]) = v79 ^ 0x79;
  LOBYTE(STACK[0xEDF]) = v104 - ((2 * v104) & 0xD8) - 20;
  v106 = v104 ^ ((v88 ^ 0xE41A9697) + 1965514907);
  LOBYTE(STACK[0xEE6]) = v106 - ((2 * v106) & 0xD8) - 20;
  v107 = v106 ^ v102;
  v108 = ((2 * (v102 ^ v99)) & 0xF6D4DE7C ^ 0xD4845274) + (v102 ^ v99 ^ 0x91BCC684);
  v109 = (v105 & 0x209260CA ^ 0x1220C0) + (v105 & 0x209260CA ^ 0x2080400A);
  v105 ^= 0x42563BE5u;
  v110 = v96 & 0x21074043 ^ 0x1054040 | v96 & 0x21074043 ^ 0x20020003 | v109;
  LOBYTE(STACK[0xD1F]) = v39 ^ 0x79;
  v111 = v108 + (v88 ^ 0xE41A9697);
  v112 = v95 - 369504901 * v110;
  LOBYTE(v39) = v39 ^ (v112 + 119);
  LOBYTE(STACK[0xEED]) = v107 + (~(2 * v107) | 0x27) - 19;
  v113 = v108 + 76910786;
  v114 = v108 + 76910786 + v101;
  v115 = v105 + (v92 ^ 0x42563BE5);
  v116 = (v107 + 1138354136 - ((2 * v107) & 0x87B3CFB0)) ^ v97;
  v117 = v96 ^ 0xE41A9697;
  v118 = v96 ^ 0xE41A9697 ^ (v111 + 2042425693);
  v119 = (v112 - 1152454793) ^ (v105 + v98);
  v120 = v114 - ((2 * v114 - 614083518) & 0xEA0AF1C2) - 491232510;
  LOBYTE(STACK[0xEF4]) = v116 - ((2 * v116) & 0xD8) - 20;
  v121 = v119 ^ 0xF1207524;
  LOBYTE(v98) = v39 ^ (v115 + 33);
  v122 = (v116 - 184190751 - ((2 * v116) & 0xEA0AF1C2)) ^ v120;
  LOBYTE(STACK[0xD26]) = v39 ^ 0x79;
  LOBYTE(v92) = (v98 + 36 - ((2 * v98) & 0x48)) ^ v119 ^ 0x24;
  v123 = v119 + v105;
  v124 = (v112 - ((2 * v112 + 1990057710) & 0xE240EA48) - 1401985893) ^ v121;
  LOBYTE(STACK[0xEFB]) = v122 + (~(2 * v122) | 0x27) - 19;
  v125 = v118 + v113;
  v126 = v122 ^ v118;
  LOBYTE(v121) = v92 ^ 0x79;
  LOBYTE(v92) = v92 ^ v123;
  LOBYTE(v118) = v92 ^ 0x98;
  LOBYTE(STACK[0xD2D]) = v98 ^ 0x79;
  LOBYTE(STACK[0xF02]) = v126 - ((2 * v126) & 0xD8) - 20;
  v127 = v115 - 307041759 - v124;
  LOBYTE(STACK[0xD34]) = v121;
  v128 = (v120 ^ 0xF50578E1) - v111;
  v129 = v126 ^ v125;
  v130 = v112 + (((v69 + 1666517491) ^ (480966156 - v69)) & 0x49BF8602);
  LOBYTE(STACK[0xD3B]) = v92 ^ 0x79;
  v131 = v117 - ((2 * v117 + 68836958) & 0xD2B49D24) + 1801944513;
  v132 = (v96 ^ 0x1BE56968) - v111 - 1514954391 + v125;
  LOBYTE(STACK[0xF09]) = v129 ^ 0xEC;
  LOBYTE(STACK[0xF10]) = (v129 ^ (v117 - ((2 * v117 + 94) & 0x24) - 63) ^ 0x92)
                       + (~(2 * (v129 ^ (v117 - ((2 * v117 + 94) & 0x24) - 63))) | 0x27)
                       - 19;
  v133 = 2 * v128 + 210115910;
  v134 = v128 - (v133 & 0xD2B49D24);
  v135 = v129 ^ (v128 - (v133 & 0x8DF3C520) + 1295839539);
  LOBYTE(STACK[0xF17]) = (v135 ^ 0x90) + (~(2 * v135) | 0x27) - 19;
  v136 = (v134 + 1872583989) ^ v131;
  LOBYTE(STACK[0xD42]) = v118 ^ (v130 - ((2 * (v130 - 92)) & 0x30) + 60) ^ 0x79;
  v137 = ((v135 ^ 0xC6F9E290) - 184190751 - 2 * ((v135 ^ 0xC6F9E290) & 0x750578E7 ^ v135 & 6)) ^ v120;
  LOBYTE(v111) = v118 ^ (v115 + 33 - v124 - 104 - ((2 * (v115 + 33 - v124)) & 0x30));
  v138 = ((2 * ((v120 ^ 0xF50578E1) + (v131 ^ 0xE95A4E92))) & 0xFB527FF2)
       + (((v120 ^ 0xF50578E1) + (v131 ^ 0xE95A4E92)) ^ 0x7DA93FF9);
  LOBYTE(STACK[0xF1E]) = v137 - ((2 * v137) & 0xD8) - 20;
  LOBYTE(v129) = v111 ^ (v115 + 33);
  v139 = v123 - v130 - v124 - 1377752752;
  v140 = v137 ^ v132;
  v141 = v130 + v115;
  LOBYTE(STACK[0xF25]) = (v137 ^ v132) - ((2 * (v137 ^ v132)) & 0xD8) - 20;
  LOBYTE(STACK[0xD50]) = v129 ^ 0x79;
  LOBYTE(v129) = v129 ^ v139;
  v142 = (v127 ^ (v130 - 207841116)) - v141;
  v143 = v142 + v139 - v141;
  v144 = v136 - v138;
  v145 = ((2 * ((v141 - 514882875) ^ (v130 + 822548785))) & 0xCFB24FDE)
       + ((v141 - 514882875) ^ (v130 + 822548785) ^ 0x67D927EF);
  LOBYTE(STACK[0xD49]) = v111 ^ 0x79;
  v146 = v130 - 2110394638 + v143;
  v147 = v144 + v132 - v138;
  v148 = ((2 * ((v138 - 2108243961) ^ (v117 - 1082675268))) & 0xEF567A1E)
       + ((v138 - 2108243961) ^ (v117 - 1082675268) ^ 0xF7AB3D0F);
  v149 = v117 - 828896519 + v147;
  LOBYTE(STACK[0xF2C]) = (v140 ^ v149) - ((2 * (v140 ^ v149)) & 0xD8) - 20;
  LOBYTE(STACK[0xD57]) = v129 ^ 0x79;
  LOBYTE(v130) = v129 ^ v146 ^ (v142 - 122) ^ (v145 + 17);
  LOBYTE(STACK[0xD65]) = v129 ^ v146 ^ (v142 - 122) ^ 0x79;
  LOBYTE(STACK[0xD5E]) = v129 ^ v146 ^ 0x79;
  v150 = v144 - 1911436759;
  LOBYTE(STACK[0xF33]) = (v140 ^ v149 ^ (v144 + 68)) - ((2 * (v140 ^ v149 ^ (v144 + 68))) & 0xD8) - 20;
  v151 = v140 ^ v149 ^ (v144 - 1854465212) ^ (v148 + 139772657);
  LOBYTE(STACK[0xF3A]) = v151 - ((2 * v151) & 0xD8) - 20;
  v152 = v151 ^ (v147 + 253778749);
  v153 = (1742284783 - v145 + v146) ^ (v142 + 790169451);
  LOBYTE(STACK[0xF41]) = v152 - ((2 * v152) & 0xD8) - 20;
  v154 = (-139772657 - v148 + v149) ^ (v144 - 1911436759);
  LOBYTE(v144) = v130 ^ 0x79;
  LOBYTE(v130) = v130 ^ (v143 - 63);
  v155 = v145 - 1526827364 + v142;
  LOBYTE(STACK[0xD6C]) = v144;
  v156 = v152 ^ v154;
  LOBYTE(STACK[0xD73]) = v130 ^ 0x79;
  LOBYTE(v130) = v130 ^ v153;
  v157 = v143 - v145 + 1664974713;
  LOBYTE(v142) = v130 ^ 0x79;
  LOBYTE(v130) = v130 ^ v155;
  LOBYTE(STACK[0xD7A]) = v142;
  v158 = v130 ^ (v145 + 29);
  v159 = v158 ^ v157;
  v160 = v150 + v148 - 434939375;
  LOBYTE(STACK[0xF48]) = v156 - ((2 * v156) & 0xD8) - 20;
  LOBYTE(STACK[0xD81]) = v130 ^ 0x79;
  v161 = v156 ^ v160;
  LOBYTE(v130) = (v156 ^ v160) - ((2 * (v156 ^ v160)) & 0xD8) - 20;
  v162 = v153 + v145;
  LOBYTE(STACK[0xF4F]) = v130;
  v163 = v161 ^ (v148 + 457508605);
  LOBYTE(STACK[0xF56]) = (v161 ^ (v148 - 3)) - ((2 * (v161 ^ (v148 - 3))) & 0xD8) - 20;
  v164 = v154 + v148 - ((2 * (v154 + v148) + 1213933762) & 0x7CAC2582);
  v165 = v157 + v145 - 1424548835;
  v166 = v153 + v145 + 872393089 + v165 - 805985923 - ((2 * (v153 + v145 + 872393089 + v165)) & 0x9FEB42FA);
  LOBYTE(STACK[0xD8F]) = v159 ^ 0x79;
  v167 = !v70;
  LODWORD(STACK[0x6F4]) = v167;
  v168 = v147 - v148 - 1325327851;
  v169 = v164 - 494688478;
  v170 = v163 ^ v168;
  LOBYTE(STACK[0xD88]) = v158 ^ 0x79;
  v171 = v168 + v148 + 457508605;
  v172 = v162 + 280026855 * (((v166 & 0x107238A4 ^ 0x702024) + (v166 & 0x107238A4 ^ 0x10021880)) ^ 0xEC6D1055);
  v173 = v171 ^ v160;
  LOBYTE(STACK[0xF5D]) = v170 - ((2 * v170) & 0xD8) - 20;
  v174 = (v170 + 1045828289 - ((2 * v170) & 0x7CAC2582)) ^ v169;
  v175 = (v169 ^ 0x3E5612C1) + v171;
  v176 = v148 - 1517805099 + v173;
  v177 = v145 + 895104757 + (v165 ^ v155);
  v178 = v159 ^ (v153 + v145 - 127);
  LOBYTE(v173) = v178 ^ v177;
  LOBYTE(STACK[0xF64]) = ((v170 - 63 - ((2 * v170) & 0x82)) ^ v169)
                       - ((2 * ((v170 - 63 - ((2 * v170) & 0x82)) ^ v169)) & 0xD8)
                       - 20;
  LOBYTE(STACK[0xD96]) = v178 ^ 0x79;
  LOBYTE(v170) = v178 ^ v177 ^ 0x68 | v178 ^ v177 ^ 0x95;
  v179 = v174 ^ v176;
  v180 = v178 ^ v177 ^ (v145 + 82);
  *(_BYTE *)(STACK[0x718] + (v170 & 0xFD)) = v173 ^ 0x79;
  LOBYTE(v170) = (v180 + 125 - ((2 * v180) & 0xFA)) ^ v166;
  LOBYTE(STACK[0xF6B]) = v179 - ((2 * v179) & 0xD8) - 20;
  v181 = v179 ^ (v148 + 689516850);
  LOBYTE(STACK[0xF72]) = v181 - ((2 * v181) & 0xD8) - 20;
  LOBYTE(STACK[0xDA4]) = v180 ^ 0x79;
  LOBYTE(STACK[0xDAB]) = v170 ^ 0x79;
  v182 = v181 ^ v175;
  LOBYTE(STACK[0xF79]) = v182 - ((2 * v182) & 0xD8) - 20;
  v183 = v177 + v162;
  v184 = (v169 ^ 0x3E5612C1) + v176;
  v185 = (v175 + 1045828289 - ((2 * v175) & 0x7CAC2582)) ^ v169;
  v186 = v153 + v183;
  v187 = v148 + 1002509346;
  v188 = v186 + 1751941183;
  v189 = v183 + v145;
  v190 = v184 + (v169 ^ 0x3E5612C1) - v187;
  v191 = v182 ^ v190;
  LOBYTE(STACK[0xF80]) = v191 - ((2 * v191) & 0xD8) - 20;
  v192 = ((v172 + 1218861959 - ((2 * (v172 + 2024847882)) & 0x9FEB42FA)) ^ v166) - (v186 + 1751941183);
  v193 = v192 - ((2 * v192 - 1744786178) & 0xB418345E) - 1509134162;
  v184 -= 2146437509;
  v194 = v184 + v187;
  LOBYTE(v170) = v170 ^ (v186 - 64);
  v195 = v191 ^ v184;
  v196 = v170 ^ (v183 - 4);
  LOBYTE(STACK[0xF87]) = v195 - ((2 * v195) & 0xD8) - 20;
  LOBYTE(STACK[0xDB9]) = v196 ^ 0x79;
  LOBYTE(v176) = v196 ^ (v189 + 62);
  v197 = v176 ^ v193;
  v198 = v195 ^ v194;
  v199 = v185 - v190;
  v200 = v193 ^ (v183 - ((2 * v183 + 541493306) & 0xB418345E) + 1781489228);
  v201 = ((2 * v193) & 0xFC7F379A ^ 0x771788) + (v193 ^ 0x7E04141B);
  LOBYTE(STACK[0xDB2]) = v170 ^ 0x79;
  v202 = v194 - v190;
  LOBYTE(STACK[0xF8E]) = v198 - ((2 * v198) & 0xD8) - 20;
  v186 += 1060516338;
  v203 = v198 ^ v199;
  LOBYTE(STACK[0xF95]) = v203 ^ 0xEC;
  LOBYTE(STACK[0xDC7]) = v197 ^ 0x56;
  v204 = v189 - v188;
  v205 = v200 ^ v186;
  LOBYTE(STACK[0xDC0]) = v176 ^ 0x79;
  v190 -= 1563817934;
  v206 = ((-69192655 - v201) & 0xDC13A421) + v184 + ((v201 + 69192654) & 0xDC13A421);
  v207 = v199 ^ 0xA56CAFE0 ^ (v206 - ((2 * v206) & 0xFEB67432) + 2136685081);
  v208 = v207 ^ v190;
  LOBYTE(v206) = (v200 ^ v186 ^ v197 ^ 0xD6) - ((2 * (v200 ^ v186 ^ v197 ^ 0xD6)) & 0x2A);
  v209 = (v201 + 69192654) ^ (v204 + 1268981693);
  v210 = v199 ^ 0xDA3795F9;
  LOBYTE(STACK[0xF9C]) = (v203 ^ v207 ^ v190) - ((2 * (v203 ^ v207 ^ v190)) & 0xD8) - 20;
  v211 = v197 ^ v186;
  v212 = (v210 - 2107676773) ^ v202;
  v213 = v203 ^ v190;
  v214 = v213 ^ 0x826AD4CC;
  LOBYTE(STACK[0xFA3]) = v213 ^ 0xEC;
  LOBYTE(STACK[0xDCE]) = v206 - 107 - ((2 * (v206 - 107)) & 0xD8) - 20;
  v215 = 2 * v209;
  if ((v211 & 0x10) != 0)
    v216 = -16;
  else
    v216 = 16;
  v217 = v211 ^ 0x9A ^ (v204 - ((2 * (v204 - 67)) & 0x6A) + 114);
  LOBYTE(STACK[0xDDC]) = v211 ^ 0xE3 ^ (((v201 - 50) ^ (v204 - 67)) - (v215 & 0x6A) - 75);
  LOBYTE(STACK[0xDD5]) = (v216 + (v211 ^ 0x2F)) ^ 0x69;
  v218 = v201 - ((2 * v201 + 708773158) & 0xBAA1CF5E) - 227513790;
  LOBYTE(STACK[0xFAA]) = (v214 ^ (v212 - ((2 * v212) & 0x98) - 52))
                       - ((2 * (v214 ^ (v212 - ((2 * v212) & 0x98) - 52))) & 0xD8)
                       - 20;
  v219 = (v200 ^ 0xDA3795F9)
       + (v205 ^ 0xDA3795F9)
       + (v218 ^ 0xA2AF1850)
       - 1376734850
       - ((2 * ((v200 ^ 0xDA3795F9) + (v205 ^ 0xDA3795F9) + (v218 ^ 0xA2AF1850) + 1)) & 0x5BE162FA);
  v220 = v214 ^ (v202 - 2106927924 - ((2 * v202) & 0x4D5A998));
  LOBYTE(STACK[0xDE3]) = v217 ^ 0x79;
  v221 = ((v205 ^ 0xDC21E020) + 1565583279 - 2 * ((v205 ^ 0xDC21E020) & 0x5D50E7BF ^ v205 & 0x10)) ^ 0x38266952 ^ v218;
  LOBYTE(STACK[0xFB1]) = v220 - ((2 * v220) & 0xD8) - 20;
  v222 = v210 - 2 * ((v210 + 325000800) & 0x2FFA5D1D ^ v210 & 9) + 1129937780;
  v223 = v222 ^ v212 ^ v208 ^ 0x61675D9;
  v224 = v218 ^ v205 ^ (v209 + 1565583279 - (v215 & 0xBAA1CF5E));
  v225 = (v222 ^ 0xD005A2EB) + v207 + v208 - 756587821 - ((2 * ((v222 ^ 0xD005A2EB) + v207 + v208 + 1)) & 0xA5CEC5A4);
  LOBYTE(STACK[0xDEA]) = v217 ^ v221 ^ 0x79;
  v226 = ((v208 ^ 0x61675D9) + 1829626287 - ((2 * (v208 ^ 0x61675D9)) & 0xDA1BC35E)) ^ v222 ^ 0x7AD1D5E9;
  v227 = ((v217 ^ v221) + 125 - ((2 * (v217 ^ v221)) & 0xFA)) ^ v219;
  v228 = v220 ^ v226;
  LOBYTE(STACK[0xDF1]) = v227 ^ 0x79;
  LOBYTE(STACK[0xFB8]) = v228 - ((2 * v228) & 0xD8) - 20;
  v229 = (v228 - 756587822 - ((2 * v228) & 0xA5CEC5A4)) ^ v225;
  LOBYTE(STACK[0xFBF]) = v229 + (~(2 * v229) | 0x27) - 19;
  v230 = v224 ^ (v227 - ((2 * v227) & 0x7E) + 63);
  v231 = v218 ^ 0x65768EFD;
  LOBYTE(v218) = v230 ^ v218 ^ 0xFD;
  v232 = v223 ^ 0xEBAD5D0F ^ (v229 - ((2 * v229) & 0x88AE0036) - 1000931301);
  LOBYTE(STACK[0xFC6]) = v232 - ((2 * v232) & 0xD8) - 20;
  v233 = (v224 ^ 0x71D1515D ^ v219) - ((2 * (v224 ^ 0x71D1515D ^ v219) + 1433858588) & 0x7CC37698) - 383962022;
  v234 = v221 + (v224 ^ 0xDC21E020) + (v233 ^ 0xC19E44B3) + 1;
  v235 = (v223 ^ 0xFD1D3FC6 ^ v225) - ((2 * (v223 ^ 0xFD1D3FC6 ^ v225) + 1433858588) & 0xF9A10E5A) + 663486523;
  v236 = v231 + 1046592332 - ((2 * v231) & 0x7CC37698);
  LOBYTE(STACK[0xFCD]) = ((v232 - 81 - ((2 * v232) & 0x5E)) ^ v222 ^ 0xE9)
                       - ((2 * ((v232 - 81 - ((2 * v232) & 0x5E)) ^ v222 ^ 0xE9)) & 0xD8)
                       - 20;
  v237 = (v223 ^ 0x2FFA5D14) + v226 + (v235 ^ 0x832F78D2) + 1;
  LOBYTE(STACK[0xDF8]) = v230 ^ 0x66;
  LOBYTE(STACK[0xDFF]) = v218 ^ 0x66;
  v238 = (v232 + 1829626287 - ((2 * v232) & 0xDA1BC35E)) ^ v222 ^ 0x7AD1D5E9 ^ v237;
  v239 = v233 ^ v219 ^ v236;
  LOBYTE(STACK[0xE06]) = v218 ^ v234 ^ 0x66;
  LOBYTE(STACK[0xFD4]) = v238 + (~(2 * v238) | 0x27) - 19;
  v240 = v219 ^ ((v218 ^ v234 ^ 0x1F) - ((2 * (v218 ^ v234 ^ 0x1F)) & 0x60) + 48);
  v241 = v238 ^ v225;
  LOBYTE(STACK[0xFDB]) = v241 ^ 0x95;
  v242 = (v240 ^ 0xE6) + 76 - ((2 * (v240 ^ 0xE6)) & 0x98);
  LOBYTE(STACK[0xE14]) = (v233 ^ (((v219 ^ 0x29) - 53) ^ ((v219 ^ 0xD6) + 53)) & 0x95 ^ v242)
                       - ((2 * (v233 ^ (((v219 ^ 0x29) - 53) ^ ((v219 ^ 0xD6) + 53)) & 0x95 ^ v242)) & 0xD8)
                       - 20;
  v243 = v222 ^ 0xC53B5694 ^ v225;
  LOBYTE(STACK[0xFE2]) = (v241 ^ v235 ^ 0x54) - 2 * ((v241 ^ v235 ^ 0x54) & 0xEE ^ (v241 ^ v235) & 2) - 20;
  v244 = v241 ^ v243;
  LOBYTE(STACK[0xFE9]) = v241 ^ v243 ^ 0x95;
  v245 = ((2 * (v234 + (v239 ^ 0x520F4E82) + 1)) & 0x89622112) + ((v234 + (v239 ^ 0x520F4E82) + 1) ^ 0x44B11089);
  v246 = (v235 ^ v243 ^ 0x832F78D2) + v237 + 1;
  LOBYTE(v237) = v242 ^ v219 ^ v236;
  LOBYTE(STACK[0xE0D]) = v240 ^ 0x9F;
  HIDWORD(v247) = v235 ^ v243 ^ 0x10872D;
  LODWORD(v247) = v235 ^ v243 ^ 0x7CC00000;
  v248 = v245
       - 1152454793
       + (v219 ^ 0x5DF5C9D6)
       - 1247279500
       - ((2 * (v245 - 1152454793 + (v219 ^ 0x5DF5C9D6))) & 0x6B500CE8);
  v249 = (v245 - ((2 * (v245 - 1152454793)) & 0x2D0BE8AE) + 1372906446) ^ v239;
  LOBYTE(STACK[0xE1B]) = v237 ^ 4;
  HIDWORD(v247) = (v247 >> 21) ^ 0xFF0A9E8F;
  LODWORD(v247) = HIDWORD(v247);
  v250 = v247 >> 11;
  v251 = (v250 - ((2 * v250) & 0x9CC74692) + 1315152713) ^ v225;
  v252 = v246 + (v225 ^ 0x22E21A79) + 1292179589 - ((2 * (v246 + (v225 ^ 0x22E21A79))) & 0x9A0A310A);
  v253 = v250 ^ v246;
  v254 = (v252 ^ 0x4D051885)
       + (v250 ^ 0xC7FC9DD4)
       + 900651487
       - ((2 * ((v252 ^ 0x4D051885) + (v250 ^ 0xC7FC9DD4))) & 0x6B5DB3BE);
  LOBYTE(STACK[0xFF0]) = (v244 ^ v253 ^ 0xAD) - ((2 * (v244 ^ v253 ^ 0xAD)) & 0xD8) - 20;
  v255 = v253 ^ 0x8AF98551 ^ v252;
  v256 = v252 ^ 0x6FE702FC ^ v244;
  v257 = v248 ^ 0xA3AB7AF3 ^ v249 ^ 0x3B75452A;
  LOBYTE(v234) = v237 ^ v249 ^ 0x2A;
  LOBYTE(v237) = v248 ^ v237;
  v258 = (v248 ^ 0xB5A80674)
       + (v239 ^ 0xBBF3CDFA)
       - 1100079208
       - ((2 * ((v248 ^ 0xB5A80674) + (v239 ^ 0xBBF3CDFA))) & 0x7CDC3F30);
  v236 ^= 0xD867BF60;
  v259 = v235 ^ 0xC7FC9DD4 ^ ((v251 ^ 0x6C81B930) + 2094040877 - 2 * ((v251 ^ 0x6C81B930) & 0x7CD0872F ^ v251 & 2));
  LOBYTE(STACK[0xFF7]) = v256 - ((2 * v256) & 0xD8) - 20;
  v260 = (v249 ^ 0x2D7639AD) - v257;
  v261 = v256 ^ v259;
  LOBYTE(STACK[0xE22]) = v234 ^ 0x83;
  v262 = ((v237 ^ v236 ^ 9) - 104 - ((2 * (v237 ^ v236 ^ 9)) & 0x30)) ^ v258;
  LOBYTE(STACK[0xFFE]) = v261 - ((2 * v261) & 0xD8) - 20;
  v263 = (v253 ^ 0xC7FC9DD4) - v255;
  v264 = (v261 + 900651487 - ((2 * v261) & 0x6B5DB3BE)) ^ v254;
  LOBYTE(STACK[0xE29]) = v237 ^ 0x70;
  v265 = v259 + v263 - 1065205874 - ((2 * (v259 + v263)) & 0x81047F1C);
  LOBYTE(STACK[0xE30]) = v237 ^ v236 ^ 0x70;
  v266 = v260 + v236 + 1039316645 - ((2 * (v260 + v236)) & 0x7BE56D4A);
  LOBYTE(STACK[0xE37]) = v262 ^ 0x79;
  v267 = v265 ^ v263;
  v268 = v266 ^ v260;
  v269 = v265 ^ (v255 + (v254 ^ 0xCA512620) - 1065205873 - ((2 * (v255 + (v254 ^ 0xCA512620) + 1)) & 0x81047F1C));
  LOBYTE(STACK[0x1005]) = v264 - ((2 * v264) & 0xD8) - 20;
  v270 = v265 ^ v263 ^ 0x5AEAF307 ^ (v264 - ((2 * v264) & 0x34D19912) - 1704407927);
  v271 = (v257 + (v258 ^ 0x4191E067) + 1039316646 - ((2 * (v257 + (v258 ^ 0x4191E067) + 1)) & 0x7BE56D4A)) ^ v266;
  LOBYTE(v264) = v266 ^ v260 ^ (v262 - ((2 * v262) & 0xE) - 121);
  v272 = (v265 ^ 0xC0823F8E) - 1256310069;
  v273 = (v266 ^ 0x3DF2B6A5) - 1256310069;
  LOBYTE(STACK[0x100C]) = v270 - ((2 * v270) & 0xD8) - 20;
  v274 = v270 ^ v269;
  LOBYTE(STACK[0x1013]) = v274 - ((2 * v274) & 0xD8) - 20;
  LOBYTE(v266) = v264 ^ (v257 + (v258 ^ 0x67) - 90 - ((2 * (v257 + (v258 ^ 0x67) + 1)) & 0x4A)) ^ v266 ^ v273;
  v275 = v274 ^ v272;
  LOBYTE(STACK[0x101A]) = v275 - ((2 * v275) & 0xD8) - 20;
  v276 = (v267 ^ 0x3F7DC071) + v272 + 1;
  LOBYTE(STACK[0xE3E]) = v264 ^ 0x5B;
  v277 = (v275 + 900651487 - ((2 * v275) & 0x6B5DB3BE)) ^ v254;
  v278 = ((v266 ^ 0x22) - 104 - ((2 * (v266 ^ 0x22)) & 0x30)) ^ v258;
  v279 = (v254 ^ 0x35AED9DF) - 613696715;
  v280 = (v268 ^ 0xC20D495A) + v273 + 1;
  v281 = v271 - v280;
  v282 = (v267 ^ 0xC0823F8E) - ((2 * (v267 ^ 0xC0823F8E) - 1184990) & 0xF4447A94) - 99011877;
  LOBYTE(STACK[0xE45]) = v264 ^ v271 ^ 0x5B;
  v283 = (v258 ^ 0xBE6E1F98) - 613696715;
  LOBYTE(STACK[0x1021]) = v277 - ((2 * v277) & 0xD8) - 20;
  v284 = (v277 + 2049064266 - ((2 * v277) & 0xF4447A94)) ^ v282;
  v285 = v269 - v276;
  v286 = (v268 ^ 0x3DF2B6A5) - ((2 * (v268 ^ 0x3DF2B6A5) - 1184990) & 0x83578800) + 1101183377;
  LOBYTE(STACK[0x1028]) = v284 - ((2 * v284) & 0xD8) - 20;
  LOBYTE(STACK[0xE53]) = v278 ^ 0x79;
  v287 = v285 ^ (v284 - ((2 * v284) & 0xD07F8A2E) - 398473961);
  v288 = v287 ^ 0xE5919D11;
  v289 = ((v268 ^ 0xC20D495A) + v273 - 1045707775 - ((2 * v280) & 0x83578800)) ^ v286;
  LOBYTE(STACK[0x102F]) = (v287 ^ 0x11) - ((2 * v287) & 0xD8) - 20;
  v290 = (v276 + 2049064266 - ((2 * v276) & 0xF4447A94)) ^ v282;
  LOBYTE(v276) = v281 ^ ((v278 ^ v286) - ((2 * (v278 ^ v286)) & 0x8C) + 70);
  LOBYTE(v273) = v276 ^ v280 ^ v286;
  v291 = v288 ^ v290;
  LOBYTE(STACK[0xE5A]) = v278 ^ v286 ^ 0x79;
  LOBYTE(STACK[0xE61]) = v276 ^ 0x39;
  LOBYTE(STACK[0x1036]) = v291 - ((2 * v291) & 0xD8) - 20;
  v292 = v273 ^ 0x40 ^ v283;
  LODWORD(STACK[0x3D0]) = v292 ^ 0x82CBA686;
  LOBYTE(STACK[0xE4C]) = v266 ^ 0x5B;
  v293 = ((2 * ((v281 ^ 0xF251A7F9) + v289 + 1)) & 0xE4FE65F4)
       + (((v281 ^ 0xF251A7F9) + v289 + 1) ^ 0x727F32FA)
       - 1920938746;
  v294 = v293 + v283;
  LOBYTE(STACK[0xE68]) = v273 ^ 0x39;
  v295 = (v285 ^ 0xF251A7F9) + v290 + 125602194 - ((2 * ((v285 ^ 0xF251A7F9) + v290 + 1)) & 0xEF91322);
  LODWORD(STACK[0x3CC]) = v291 ^ v279;
  v296 = (v286 ^ 0xC1ABC400 ^ v293) - v294 + 1822674981 - ((2 * ((v286 ^ 0xC1ABC400 ^ v293) - v294)) & 0xD947A04A);
  v297 = v282 ^ 0x7D5EB4DB ^ v295;
  v295 ^= 0x77C8991u;
  LOBYTE(STACK[0x103D]) = (v291 ^ v279) - ((2 * (v291 ^ v279)) & 0xD8) - 20;
  v298 = ((2 * (v293 + (v296 ^ 0x935C2FDA) + 1)) & 0x937D7FE4) + ((v293 + (v296 ^ 0x935C2FDA) + 1) ^ 0xC9BEBFF2);
  v299 = v297 - (v295 + v279) - 445895367 - ((2 * (v297 - (v295 + v279))) & 0xCAD85A72);
  LOBYTE(STACK[0xE6F]) = v292 ^ 0x79;
  LODWORD(STACK[0x710]) = ((v298 + 910245902) ^ v294 ^ 0xB5DDEED2)
                        + 2080317232
                        + ((2 * ((v298 + 910245902) ^ v294)) & 0x6BBBDDA4);
  v300 = (v281 ^ 0xDAE5806) + (v286 ^ 0x3E543BFF) + (v296 ^ 0x6CA3D025) + 1;
  LODWORD(STACK[0x700]) = v300 - 893070274 - ((2 * v300) & 0x9589A87C);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6E8]
                                                     + 8 * (LODWORD(STACK[0x6F8]) ^ (1073 * LODWORD(STACK[0x6F4]))))
                                         - 8))(((2 * (v295 + (v299 ^ 0x1A93D2C6) + 1)) & 0x7CDFFEBC)+ ((v295 + (v299 ^ 0x1A93D2C6) + 1) ^ 0x3E6FFF5E)- 5153112);
}

uint64_t sub_18C9BB46C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = STACK[0x58C];
  v9 = LODWORD(STACK[0x58C]) < 0x2E673BF9;
  v10 = 6244 - (((6244 * (unint64_t)v6) >> 32) >> 9) * a4;
  v11 = 5782 - (((5782 * (unint64_t)v6) >> 32) >> 9) * a4;
  *(_BYTE *)(v7 + v11) ^= *(_BYTE *)(STACK[0x580] + (LODWORD(STACK[0x544]) - 577886606));
  *(_BYTE *)(v7 + v10) ^= 5 ^ (119 * (*(_BYTE *)(STACK[0x578] + 6) ^ 0xA9)
                                              - ((-18 * (*(_BYTE *)(STACK[0x578] + 6) ^ 0xA9)) & 0xD8)
                                              - 20);
  if (!v9)
    v9 = v8 > 0x2E673BFA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((22 * !v9) ^ (v5 + 824))) - 8))();
}

void sub_18C9BB5B0()
{
  JUMPOUT(0x18C9BB488);
}

uint64_t sub_18C9BB5B8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  __int16 v21;
  int v22;
  unsigned __int16 v23;
  __int16 v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;

  LODWORD(STACK[0x6E0]) = v8;
  v13 = 7 * (v6 ^ 0xC02457D4);
  v15 = v13 + 5782 - ((((v13 + 5782) * (unint64_t)v7) >> 32) >> 9) * a3;
  v16 = 7 * ((v6 ^ 0xC02457D4) + (v15 & 0x33A) + (v15 & 0x33A ^ 0x33A)) + 7;
  v17 = ((*(unsigned __int8 *)(v12 + v15) ^ 0x79) << (v8 ^ 0xD4)) | ((*(unsigned __int8 *)(v12
                                                                                         + v16
                                                                                         - 960
                                                                                         * (((v16 * (unint64_t)v7) >> 32) >> 9)) ^ 0x79) << 16) | ((*(unsigned __int8 *)(v12 + v13 + 5796 - 960 * ((((v13 + 5796) * (unint64_t)v7) >> 32) >> 9)) ^ 0x79) << 8) | *(unsigned __int8 *)(v12 + v13 + 5803 - 960 * ((((v13 + 5803) * (unint64_t)v7) >> 32) >> 9)) ^ 0xEC;
  v18 = v17 - ((2 * v17) & 0xA2023A3C) + 1359027486;
  v19 = 2 * (v6 & 1) + (v6 ^ 0xC02457D5);
  v20 = 7 * v19;
  *((_DWORD *)&STACK[0x850]
  + 199 * v4
  % (((v18 & 0x2D8FA949 ^ 0x1010908) + (v18 & 0x2D8FA949 ^ 0x2C8EA041)) ^ ((v6 & 0x2D8FA85D ^ 0x2D8BA809)
                                                                         + (v6 & 0x2D8FA85D ^ 0x40054)))) = v18 ^ v5 ^ 0x43A5FA0A;
  v21 = 199 * v10;
  v22 = *(unsigned __int8 *)(v12 + (v13 + 6244) % 0x3C0);
  v23 = (unsigned __int16)(199 * v10 + 23936) % 0x114u;
  v24 = v10;
  LODWORD(STACK[0x6DC]) = v10;
  v25 = v9 ^ 0xEEDBD340;
  v26 = *(unsigned __int8 *)(v12 + (v13 + 6251) % 0x3C0);
  STACK[0x6C0] = v23;
  v27 = STACK[0x700];
  v28 = LODWORD(STACK[0x700]) ^ 0x9BC5C920 ^ v18;
  v29 = *(unsigned __int8 *)(STACK[0x718] + (v13 + 6258) % 0x3C0);
  LODWORD(STACK[0x6C8]) = v28 - 1631916496 - ((2 * v28) & 0x3D75DC60);
  v30 = *(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 6258) % 0x3C0);
  v31 = a2 ^ 0x1A93D2C6;
  v32 = v26 ^ 0xEC;
  v33 = v11;
  LODWORD(STACK[0x6F4]) = v11;
  v34 = a4
      - 162446946
      + (v18 ^ v5 ^ 0x3DA2CDAE)
      - 536649389
      - ((2 * (a4 - 162446946 + (v18 ^ v5 ^ 0x3DA2CDAE)) + 43050566) & 0x3D75DC60);
  v35 = v9 ^ 0xF4480186;
  v36 = a4 + LODWORD(STACK[0x710]) + (v27 ^ 0xCAC4D43E) - 999017572;
  LODWORD(STACK[0x6F8]) = a1;
  LODWORD(STACK[0x708]) = v33
                        + a1
                        + (v9 ^ 0xBB7FE79)
                        - 1605615630
                        - ((2 * (v33 + a1 + (v9 ^ 0xBB7FE79) + 2043315809)) & 0x4D037322);
  v37 = a4 - ((2 * a4 + 907188468) & 0x24AE1DDC) - 312452248;
  v38 = (a1 - 1500074794) ^ 0x5FFFD1F1;
  v39 = (2 * (a1 - 1500074794)) & 0xBFFFA3E2;
  v40 = (v22 ^ 0xEC) << 24;
  v41 = v39 + v38;
  v42 = v41 - 1610600945;
  v43 = (a2 ^ 0xE56C2D39 ^ (v41 - 1610600945)) - ((2 * (a2 ^ 0xE56C2D39 ^ (v41 - 1610600945))) & 0x8BE56C86) - 973949373;
  v44 = v40 | (v32 << 16);
  STACK[0x6A0] = (unsigned __int16)(v21 - 13143) % 0x114u;
  v45 = (v29 ^ 0x33333333 | v29 ^ 0xCCCCCCCC) & 0x95 ^ v28;
  LODWORD(STACK[0x6B8]) = v37 ^ v5;
  v46 = v44 & 0xFFFF00FF | ((v29 ^ 0xEC) << 8) | v30 ^ 0xEC;
  v47 = v46 ^ a2;
  v48 = v25 ^ v47;
  v49 = (unsigned __int16)(((((v37 ^ v5 ^ 0xC) + 119) & 0xC7) + (((v37 ^ v5 ^ 0xF3) - 119) & 0xC7))
                         * (v24 + 13885))
      % 0x114u;
  v50 = (((*(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5803) % 0x3C0) ^ 0x79) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5810) % 0x3C0) ^ 0x79) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5817) % 0x3C0) ^ 0x79) << 8) | *(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5824) % 0x3C0) ^ 0xEC) ^ v36;
  LODWORD(STACK[0x6A8]) = v36;
  v51 = *(unsigned __int8 *)(STACK[0x718]
                           + (((2147482752 - v19) ^ (v19 + 895)) & 0x7165310F ^ 0x71653108) * (v19 + 895) % 0x3C0);
  *((_DWORD *)&STACK[0x850] + STACK[0x6C0]) = v47 ^ 0x7BD6C309;
  v52 = ((v51 ^ 0xEC) << 24) - 925098743 - (((v51 ^ 0xEC) << 25) & 0x90000000);
  LODWORD(STACK[0x700]) = v52;
  v53 = (v52 & 0x3C000000 ^ 0x8000000) + (v52 & 0x3C000000 ^ 0x3467D9EB);
  v54 = v35 + v48;
  v55 = 7 * v19 + 6279;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 - 27073) % 0x114u) = v34;
  v56 = v43 & 0x95 ^ 1 | v43 & 0x95 ^ 0x94;
  LODWORD(STACK[0x6B4]) = (7 * v19 + 6286) % 0x3C0;
  v57 = LODWORD(STACK[0x6C8]) ^ v47 ^ 0x7BD6C39C;
  STACK[0x6C8] = (unsigned __int16)(v21 + 24135) % 0x114u;
  v58 = v56 - ((2 * v56) & 0x1E);
  v59 = v37 ^ 0x12570EEE;
  v60 = LODWORD(STACK[0x708]) ^ 0x6B4BCBC;
  v61 = (LODWORD(STACK[0x708]) ^ 0x2681B904 ^ v50) - v60;
  v62 = (unsigned __int16)(v21 - 26874) % 0x114u;
  STACK[0x6C0] = v62;
  v63 = LODWORD(STACK[0x6F4]) - 59853740;
  v64 = ((v54 + 1) ^ (v31 + v46 + 1) ^ (v57 - v45)) - LODWORD(STACK[0x6F8]);
  LODWORD(STACK[0x6F4]) = 1610600945 - v41 + (((v62 & 0x54 ^ 0x17F96255) + (v62 & 0x54)) & 0x16F962DD);
  STACK[0x6F8] = (unsigned __int16)(v21 - 12944) % 0x114u;
  v65 = v60 + v63 - ((2 * (v60 + v63)) & 0xA5D2107A) + 1391003709;
  v66 = v42 + (v65 ^ 0xAD16F7C2);
  v67 = v64 - ((2 * v64 + 708149430) & 0x3D75DC60) - 204099957;
  v68 = v63
      + (v43 ^ 0x3E92AC7B)
      + (v65 ^ 0xAD16F7C2)
      + 1
      - ((2 * (v63 + (v43 ^ 0x3E92AC7B) + (v65 ^ 0xAD16F7C2) + 1)) & 0xACBE5DE);
  *((_DWORD *)&STACK[0x850] + STACK[0x6A0]) = v67;
  LODWORD(STACK[0x6D0]) = v19;
  LODWORD(STACK[0x6A0]) = v61 ^ ((v43 ^ 0x1EA7A9C3 ^ v50) - (v43 ^ 0x3E92AC7B));
  v69 = (v58 - 1875905179) ^ v50;
  LODWORD(v62) = STACK[0x6B8];
  v70 = (LODWORD(STACK[0x6B8]) ^ 0x8594C4F3) - (v36 ^ 0x2035052D);
  v71 = (((v50 & 0x5EAFEAA3 ^ 0x1E272283) + (v50 & 0x5EAFEAA3 ^ 0x4088C820)) ^ 0xE28E482E)
      * (v19 + 896)
      * (v53 & 0x3C4791E3);
  v72 = *(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5852) % 0x3C0);
  v73 = ((*(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5831) % 0x3C0) ^ 0x79) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (7 * v19 + 5838) % 0x3C0) ^ 0x79) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (7 * (v19 + (((((7 * v19 + 5838) % 0x3C0) & 0x300 ^ 0x8B06FF00) + (((7 * v19 + 5838) % 0x3C0) & 0x300)) ^ 0x8B06FC39)) + 70) % 0x3C0) ^ 0x79) << 8);
  v74 = STACK[0x710];
  v75 = (((unsigned __int16)LODWORD(STACK[0x710]) + 491) & 0x3C0)
      + ((532 - (unsigned __int16)LODWORD(STACK[0x710])) & 0x3C0);
  *((_DWORD *)&STACK[0x850] + v49) = v50 ^ 0x5E32321C;
  STACK[0x698] = (unsigned __int16)(v21 + 10802) % 0x114u;
  v76 = ((*(unsigned __int8 *)(STACK[0x718] + (v20 + 6293) % v75) ^ 0xEC) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v20 + 6300) % 0x3C0u) ^ 0xEC) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v20 + 6307) % 0x3C0u) ^ 0xEC) << 8);
  v77 = (v36 ^ 0x2035052D) + v74 + 312852971;
  v78 = ((*(unsigned __int8 *)(STACK[0x718] + v71 % 0x3C0) ^ 0xEC) << 16) | ((*(unsigned __int8 *)(STACK[0x718]
                                                                                                 + v55 % 0x3C0) ^ 0xEC) << 8);
  v79 = v59 - v77;
  v77 ^= 0x83FEB30A;
  v80 = (v73 | v72 ^ 0xEC) ^ v79;
  v81 = v78 | *(unsigned __int8 *)(STACK[0x718] + LODWORD(STACK[0x6B4])) ^ 0xEC;
  v82 = v76 | *(unsigned __int8 *)(STACK[0x718] + (v20 + 6314) % 0x3C0u) ^ 0xEC;
  v83 = (v70 - 2127576556 - ((2 * v70) & 0x25F8428)) ^ v77 ^ v80;
  STACK[0x710] = (unsigned __int16)(v21 + 24334) % 0x114u;
  v84 = v82 ^ ++v66;
  v85 = (v83 ^ 0xA4BB5ADC)
      + (((v83 ^ 0x812FC214) + 356949559 - ((2 * (v83 ^ 0x812FC214)) & 0x2A8D3D44) + 107) ^ v82 ^ v66 ^ 0x15469E37);
  v86 = ((2 * v79) & 0xFDBB7B76 ^ 0xB4924B44) + (v79 ^ 0xA4B6DA19);
  v87 = STACK[0x718];
  v88 = ((v74 + 312852971) ^ 0xD321E511)
      - v86
      - 676063885
      - ((2 * (((v74 + 312852971) ^ 0xD321E511) - v86 + 2128461243)) & 0xB1ACAF70);
  v89 = v81
      + (LODWORD(STACK[0x700]) ^ 0xC8DC1D09)
      + 646035857
      - ((2 * (v81 + (LODWORD(STACK[0x700]) ^ 0xC8DC1D09))) & 0x4D037322);
  v90 = ((2 * v66) & 0xAF7BEBFE ^ 0xA452CB44) + (v66 ^ 0x8DD6925D);
  v91 = v89 ^ LODWORD(STACK[0x708]);
  LODWORD(STACK[0x708]) = (v63 ^ 0xD321E511)
                        - v90
                        - 987633564
                        - ((2 * ((v63 ^ 0xD321E511) - v90 + 1472067071)) & 0xDAC7E4CA);
  v92 = v68 - 2056916241;
  v93 = v62 ^ 0xA5A1C1DE ^ v91;
  LODWORD(v49) = v88 ^ (v70 + 1490442168 - ((2 * v70) & 0xB1ACAF70));
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x6C8]) = v91 ^ 0xBE8FEB1D;
  v94 = v88 ^ (v77 + 1490442168 - ((2 * v77) & 0xB1ACAF70));
  v95 = (v91 ^ 0x2035052D) + v59;
  LODWORD(v62) = ((v65 ^ 0xB7CDC95 ^ v84) - (v65 ^ 0xD117BB37)) ^ (((v68 - 2056916241) ^ 0x7A9A0D10)
                                                                 + ((v68 - 2056916241) ^ 0x5F0E954D ^ v84)
                                                                 + 1) ^ (v85 + 1);
  v96 = LODWORD(STACK[0x6A8]) ^ 0x5A2651F4 ^ (v93 - ((2 * v93) & 0xF426A9B2) + 2048087257);
  v97 = v86
      - 2128461243
      + (v80 ^ 0xDA6B6737)
      - 1246474107
      - ((2 * (v86 - 2128461243 + (v80 ^ 0xDA6B6737)) + 770884778) & 0x3D75DC60);
  v98 = v95 - 536649389 - ((2 * v95 + 43050566) & 0x3D75DC60);
  v99 = v86 - ((2 * v86 + 1858747086) & 0xFA1B96AA);
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x6C0]) = v98;
  v100 = ((*(unsigned __int8 *)(v87 + (v20 + 5859) % 0x3C0u) ^ 0x79) << 24) | ((*(unsigned __int8 *)(v87 + (v20 + 5866) % 0x3C0u) ^ 0x79) << 16) | ((*(unsigned __int8 *)(v87 + (v20 + 5873) % 0x3C0u) ^ 0x79) << 8);
  v101 = *(unsigned __int8 *)(v87 + (v20 + 5880) % 0x3C0u);
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x6F8]) = LODWORD(STACK[0x6F4])
                                                              + (LODWORD(STACK[0x6A0]) ^ ((v69 ^ 0xB01AF048 ^ v96) - v96))
                                                              - 1631916496
                                                              - ((2
                                                                * (LODWORD(STACK[0x6F4])
                                                                 + (LODWORD(STACK[0x6A0]) ^ ((v69 ^ 0xB01AF048 ^ v96)
                                                                                           - v96)))) & 0x3D75DC60);
  v102 = v90 - ((2 * v90 - 1123431866) & 0xF26DDC22);
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x698]) = v80 ^ 0xA46C5093;
  v103 = v62 - v90;
  LODWORD(v62) = (v88 ^ 0x58D657B8) - ((2 * (v88 ^ 0x58D657B8) - 635626156) & 0xFA1B96AA) + 1780242943;
  v104 = LODWORD(STACK[0x708]) ^ v92;
  v105 = LODWORD(STACK[0x708]) ^ ((v65 ^ 0xD117BB37) + 1835266661 - ((2 * (v65 ^ 0xD117BB37)) & 0xDAC7E4CA));
  v106 = LODWORD(STACK[0x708]) ^ 0x6D63F265;
  v107 = *(unsigned __int8 *)(v87 + (v20 + 6342) % 0x3C0u);
  v108 = ((*(unsigned __int8 *)(v87 + (v20 + 6321) % 0x3C0u) ^ 0xEC) << 24) | ((*(unsigned __int8 *)(v87 + (v20 + 6328) % 0x3C0u) ^ 0xEC) << 16) | ((*(unsigned __int8 *)(v87 + (v20 + 6335) % 0x3C0u) ^ 0xEC) << 8);
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x710]) = v84 ^ 0x44D18992;
  v109 = (v107 ^ 0xEC) + 1839130499 - ((2 * (v107 ^ 0xEC)) & 0xFFFFFF07);
  LODWORD(STACK[0x710]) = LODWORD(STACK[0x6D0]) - 1071360044 - ((2 * LODWORD(STACK[0x6D0]) + 30) & 0x8048AFA8);
  v110 = v106 - ((2 * v106 - 635626156) & 0xF26DDC22) - 431653701;
  v111 = v103 - ((2 * v103 + 839701060) & 0x3D75DC60);
  v112 = v105 - ((2 * v105 + 1815728682) & 0xDC419224) + 608023079;
  v113 = v102 - 675556556;
  v114 = v111 + 935417682;
  v115 = v110 ^ v113;
  v116 = v104 ^ v110;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 - 26675) % 0x114u) = v114;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 - 12745) % 0x114u) = v97;
  v117 = (v109 ^ 0x6D9EE783 | v108) ^ v110;
  v118 = STACK[0x6DC];
  v119 = (v100 | v101 ^ 0xEC) ^ v62;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 + 11001) % 0x114u) = v119 ^ 0x830AFC64;
  v120 = v62 ^ (v99 + 879945916);
  v121 = (v120 - 614722942) ^ 0x5A9F3FB1;
  v122 = v121 + ((v94 - ((2 * (v94 - 1239619307)) & 0xD6F2BA00) - 1583987179) ^ 0x16749655 ^ v49 ^ v62);
  v123 = v122 - 1740554533 - ((2 * v122) & 0x30827DB6);
  v124 = (((v112 ^ 0x91DF36ED) + (v112 ^ v119 ^ 0x932D02D2) + 1) ^ ((v116 ^ 0x6ECF1164) + (v116 ^ v119 ^ 0x6C3D255B) + 1) ^ ((v119 ^ 0x43A3C74D ^ (((v94 - 1239619307) ^ v49 ^ v62 ^ 0x843B2544 ^ v117) - ((2 * ((v94 - 1239619307) ^ v49 ^ v62 ^ 0x843B2544 ^ v117)) & 0x7D5C191A) - 1095889779)) - ((v94 - 1239619307) ^ v49 ^ v62 ^ 0x843B2544 ^ v117)))
       - v115;
  v125 = v124 - 536649389 - ((2 * v124 + 43050566) & 0x3D75DC60);
  v126 = (v115 - 614722942) ^ 0x5A9F3FB1;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)((v107 & 0xFFC7 ^ 3 | v107 & 0xFFC7 ^ 0xC4) * (v118 + 13955)) % 0x114u) = v117 ^ 0xE78C0021;
  v127 = v126 + (v112 ^ 0xFF102789 ^ v116) + 1271285497 - ((2 * (v126 + (v112 ^ 0xFF102789 ^ v116))) & 0x978C8DF2);
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 - 26476) % 0x114u) = v125;
  v128 = ((1239619306 - v105) & 0x86F6821B)
       + (v62 ^ 0xFD0DCB55)
       + (v123 ^ 0x67BEC124)
       + (v112 & 0x86F6821B ^ 0x6208012)
       - (((v109 ^ 0x6D9EE7CE) + (v109 & 0x6D9EFFB2 ^ 0x9261187D) + 1) | v107 & 0x4D ^ 0x4C);
  v129 = (v49 ^ v62 ^ 0x5C326B77)
       - 1650454621
       + ((((v127 & 0x5C152562 ^ 0x48040460) + (v127 & 0x5C152562 ^ 0x14112102))
         * (v123 & 0x1FD5A483 ^ 0x18412483 | v123 & 0x1FD5A483 ^ 0x7948000)) | 0x99064651);
  v130 = v121
       - ((v49 ^ v62 ^ 0x5C326B77)
        + 1492057882)
       - 13533982
       - ((2 * (v121 - ((v49 ^ v62 ^ 0x5C326B77) + 1492057882))) & 0xFE62F9C4);
  v131 = (v129 - 1740554533 - ((2 * v129) & 0x30827DB6)) ^ v123;
  v132 = STACK[0x6E0];
  LODWORD(STACK[0x700]) = v130 ^ 0x39D57631 ^ (v131 - 13533982 - ((2 * v131) & 0xFE62F9C4));
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v21 - 12546) % 0x114u) = (v117 ^ 0x7936EE11)
                                                                        + v120
                                                                        - 1246474107
                                                                        - ((2 * ((v117 ^ 0x7936EE11) + v120) + 770884778) & 0x3D75DC60);
  LODWORD(STACK[0x710]) = (((v130 ^ 0xCE831D) + v128 + 584614049 + 1) ^ 0xFFDD5E86)
                        + 838840188
                        + ((2 * ((v130 ^ 0xCE831D) + v128 + 584614049 + 1)) & 0xFFBABD0C);
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x6E8]
                                                             + 8
                                                             * ((174 * ((v118 - 647940544) > 0xF)) ^ (v132 - 449)))
                                                 - 8))(((2 * (v126 - (v116 ^ 0x300F4EB9) - 1492057882)) & 0x7C7EBFFE ^ 0x6422041E)+ ((v126 - (v116 ^ 0x300F4EB9) - 1492057882) ^ 0xCD2EFDF0)- 1966585, (v106 + 383619353 + (v127 ^ 0xB439B906) + (v116 ^ 0x300F4EB9) + 1492057882) ^ 0x95CF66FF);
}

uint64_t sub_18C9BCD1C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  __int16 v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned __int16 v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned __int16 v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned __int16 v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  __int16 v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  __int16 v143;
  int v144;
  int v145;
  char v146;
  unsigned int v147;
  int v148;
  unsigned __int16 v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  char v156;
  int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;

  v9 = v6;
  LODWORD(STACK[0x6F4]) = v7;
  LODWORD(STACK[0x6B8]) = v5 ^ 0xCD6;
  LODWORD(STACK[0x6C0]) = 1966585 - a3;
  LODWORD(STACK[0x62C]) = 16 * (LOBYTE(STACK[0xF98]) ^ 0xEC);
  LODWORD(STACK[0x6DC]) = -165832404;
  LODWORD(STACK[0x634]) = 165832648;
  LODWORD(STACK[0x6B4]) = 16716;
  LODWORD(STACK[0x6D0]) = 29850;
  LODWORD(STACK[0x6C8]) = 28059;
  LODWORD(STACK[0x708]) = 211;
  LODWORD(STACK[0x640]) = 34;
  LODWORD(STACK[0x6A0]) = 2067080711;
  LODWORD(STACK[0x660]) = -331665282;
  LODWORD(STACK[0x638]) = -165832634;
  LODWORD(STACK[0x65C]) = 45173;
  STACK[0x680] = 163;
  LODWORD(STACK[0x658]) = 43780;
  STACK[0x678] = 158;
  LODWORD(STACK[0x654]) = 31243;
  STACK[0x670] = 113;
  LODWORD(STACK[0x650]) = 16318;
  LODWORD(STACK[0x648]) = 2786;
  LODWORD(STACK[0x644]) = 13731;
  v10 = (LODWORD(STACK[0x6B8]) - 1946) | 0x405;
  LODWORD(STACK[0x6E0]) = v10;
  LODWORD(STACK[0x630]) = 199;
  v11 = *((_DWORD *)&STACK[0x850] + 0xC7 % (v10 ^ 0x591u));
  HIDWORD(v13) = v11 ^ 0x24;
  LODWORD(v13) = v11 ^ 0x7E073780;
  v12 = v13 >> 7;
  v14 = STACK[0x700];
  v15 = LODWORD(STACK[0x700]) ^ 0xCAC4D43E;
  HIDWORD(v13) = v11 ^ 0x337A4;
  LODWORD(v13) = v11 ^ 0x7E040000;
  v16 = v13 >> 18;
  HIDWORD(v13) = LODWORD(STACK[0xB8C]) ^ 0x30;
  LODWORD(v13) = LODWORD(STACK[0xB8C]) ^ 0x9EBAEE00;
  v17 = v13 >> 7;
  HIDWORD(v13) = LODWORD(STACK[0xB8C]) ^ 0x2EE30;
  LODWORD(v13) = LODWORD(STACK[0xB8C]) ^ 0x9EB80000;
  v18 = v13 >> 18;
  HIDWORD(v13) = LODWORD(STACK[0x8B8]) ^ 0x137A4;
  LODWORD(v13) = LODWORD(STACK[0x8B8]) ^ 0x7E060000;
  v19 = v12 ^ (v11 >> 3) ^ v16;
  v20 = STACK[0x8D8];
  v21 = (LODWORD(STACK[0x8B8]) << 13) ^ (LODWORD(STACK[0x8B8]) >> 10) ^ (v13 >> 17) ^ ((LODWORD(STACK[0x8B8]) ^ 0x7E0737A4u) >> 19);
  HIDWORD(v13) = LODWORD(STACK[0x8D8]) ^ 0xEE30;
  LODWORD(v13) = LODWORD(STACK[0x8D8]) ^ 0x9EBA0000;
  v22 = v13 >> 17;
  HIDWORD(v13) = LODWORD(STACK[0x8D8]) ^ 0x2EE30;
  LODWORD(v13) = LODWORD(STACK[0x8D8]) ^ 0x9EB80000;
  v23 = v17 ^ (LODWORD(STACK[0xB8C]) >> 3) ^ v18 ^ 0x13D75DC6;
  LODWORD(STACK[0x668]) = v23;
  v24 = v14 ^ v4 ^ v23;
  v25 = v24 ^ 0xA667041B;
  v26 = a2 ^ 0xEAACCBCD ^ v19;
  v27 = v9 ^ 0x477188D ^ v19;
  v28 = (v20 >> 10) ^ 0x27AEBB ^ v22 ^ (v13 >> 19);
  v29 = a4 - ((2 * a4 + 798833654) & 0xBDF6B73E) + 1992948122;
  v30 = v19 ^ ((v24 ^ 0xA667041B) + 739778594 - 2 * ((v24 ^ 0xA667041B) & 0x2C182026 ^ v24 & 4)) ^ 0x23D8C6D6;
  v31 = (v4 ^ 0x6CA3D025) + 1653622086;
  v32 = v30 - v25;
  v33 = (a2 ^ 0xE56C2D39) + 1653622086;
  v34 = ((v9 ^ 0xF4480186) + v27 + 1) ^ ((a2 ^ 0x1A93D2C6) + v26 + 1) ^ v32;
  v35 = (v31 ^ 0x8984EEB7) + LODWORD(STACK[0x710]) - 836570626 + (v29 ^ 0x5EFB5B9F);
  v36 = v31 ^ 0xD77FB528 ^ v29;
  v37 = v31 ^ 0x39A7808E ^ (v28 - ((2 * v28) & 0x6046DC72) - 1339855303);
  v38 = v15 + 1921811461;
  v39 = v38 - v36 + 1521059628 - ((2 * (v38 - v36)) & 0xB5530E58);
  v40 = (v37 + 1521059628 - ((2 * v37) & 0xB5530E58)) ^ v39;
  v41 = (v33 ^ 0x8984EEB7 ^ (a1 - 480510377)) + 585594684 - ((2 * (v33 ^ 0x8984EEB7 ^ (a1 - 480510377))) & 0x45CEEE78);
  v42 = (v9 ^ 0xBB7FE79) + (v41 ^ 0xDD1888C3) + 1;
  LODWORD(STACK[0x700]) = v42;
  v43 = v42 - ((2 * v42 + 622397450) & 0x3A8A35F4) + 265395967;
  v44 = ((2 * ((v35 ^ 0x1E6F9566) + (v29 ^ 0x5EFB5B9F))) & 0xB5BFE33E)
      + (((v35 ^ 0x1E6F9566) + (v29 ^ 0x5EFB5B9F)) ^ 0xDADFF19F);
  LODWORD(STACK[0x710]) = v44;
  v45 = LODWORD(STACK[0x6F4]) + a1 - 1689787714 + (v33 ^ 0x8984EEB7);
  v46 = v44 + 622857825;
  v47 = (v31 ^ 0xD32D699B ^ v39) + v46 - 58723668 - ((2 * ((v31 ^ 0xD32D699B ^ v39) + v46)) & 0xF8FFE558);
  LODWORD(STACK[0x688]) = v47;
  v48 = LODWORD(STACK[0x6D0]) / 0x114;
  v49 = LODWORD(STACK[0x6C8]) / 0x114;
  v50 = ((v43 ^ 0x62BAE505) + (v21 ^ v43 ^ 0x7BAE1B37) + 1) ^ ((v33 ^ 0x767B1148) + (v33 ^ 0x6F6FEF7A ^ v21) + 1) ^ ((v21 ^ 0x2E496244 ^ (v40 - ((2 * v40) & 0x9144C712) - 928881783)) - v40);
  LODWORD(STACK[0x6F4]) = v33 ^ 0x14C1F44D ^ v43;
  v51 = a4 - 162446946 + ((1748066820 - a4) & 0x5F4B0935) + (v29 & 0x5F4B0935 ^ 0x5E4B0915) - (v39 ^ 0x5AA9872C);
  LODWORD(STACK[0x698]) = v51 - ((2 * v51 + 2061522264) & 0xA88D6B16);
  v52 = v47 ^ 0xFC7FF2AC;
  LODWORD(STACK[0x6F8]) = a1;
  v53 = (v45 ^ 0x1E6F9566) + a1;
  v54 = ((_DWORD *)&STACK[0x850] - 276 * v49)[28059] ^ 0x9EBAEE30;
  v55 = ((_DWORD *)&STACK[0x850] - 276 * v48)[29850] ^ 0x9EBAEE30;
  LODWORD(STACK[0x690]) = (v39 ^ 0x5AA9872C) - 468897359 + v52;
  v56 = LODWORD(STACK[0x6C0]) + v36 + v54 + v55 + v28 - 1148160064 + v34;
  LODWORD(STACK[0x6A8]) = 0;
  ((_DWORD *)&STACK[0x850] - 276 * STACK[0x670])[31243] = v56
                                                                      - 536649389
                                                                      - ((2 * v56 + 43050566) & 0x3D75DC60);
  LODWORD(STACK[0x6C0]) = a1 - v42 - ((2 * (a1 - v42) - 669342804) & 0xC5045F52);
  v57 = a4
      + (v41 ^ 0x22E7773C)
      + ((2 * v41) ^ 0xBA311187)
      + (*((_DWORD *)&STACK[0x850]
         + ((LODWORD(STACK[0x6DC]) | LODWORD(STACK[0x708])) & 0xC7u) * LODWORD(STACK[0x708]) % 0x114) ^ 0x9EBAEE30)
      + LODWORD(STACK[0x668])
      + (((_DWORD *)&STACK[0x850] - 276 * STACK[0x678])[43780] ^ 0x9EBAEE30)
      - 933331723
      + v50;
  v58 = v57 - v53 - ((2 * (v57 - v53) + 961020754) & 0x2E7A3A8E) - 1277092112;
  ((_DWORD *)&STACK[0x850] - 276 * STACK[0x680])[45173] = v57
                                                                      - 1246474107
                                                                      - ((2 * v57 + 770884778) & 0x3D75DC60);
  v59 = v56 + v46 - ((2 * (v56 + v46)) & 0xDB0DE0B6) + 1837559899;
  v60 = STACK[0x718];
  v61 = ((HIBYTE(v59) ^ 0x6D) & 0xF | (16 * (((HIBYTE(v59) ^ 0x6D) >> 3) & 1))) ^ 0x208;
  v62 = 7 * ((v59 >> 20) & 0xF ^ 8) + 3640;
  v63 = 7 * (HIWORD(v59) & 0xF ^ 6) + 3640;
  v64 = 7 * ((unsigned __int16)~(v56 + v46 - ((2 * (v56 + v46)) & 0xE0B6) - 4005) >> 12) + 3640;
  v65 = (((*(unsigned __int8 *)(STACK[0x718]
                              + (unsigned __int16)(v63
                                                 - 960 * ((unsigned __int16)((2185 * v63) >> 16) >> 5))) ^ 0xEC) << 8) | ((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * v61 - 960 * ((unsigned __int16)((15295 * v61) >> 16) >> 5))) ^ 0xEC ^ ((unint64_t)(*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * ((v59 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v59 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 0xECu) << ((v38 & 0x3A) - 54 + (v38 & 0x3A ^ 0x3A)))) << 16)) ^ ((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v62 - 960 * ((unsigned __int16)((2185 * v62) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * ((v59 >> 8) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v59 >> 8) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v66 = 7 * (((v56 + v46 - ((2 * (v56 + v46)) & 0xB6) + 91) >> 4) ^ 5) + 3640;
  v67 = (v65 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (unsigned __int16)(v64
                                                             - 960
                                                             * ((unsigned __int16)((2185 * v64) >> 16) >> 5))) ^ 0xEC) << 12);
  v68 = v67 - 29820230 - ((2 * v67) & 0xFC71F400);
  v69 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(7 * (v59 & 0xF ^ 0xB)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v59 & 0xF ^ 0xB) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v70 = v69 - 1394679995 - ((2 * v69) & 0x8A);
  v71 = (v68 ^ 0xFE38FABA | v70 ^ 0xACDEDF45) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x718]
                                                                     + (unsigned __int16)(v66
                                                                                        - 960
                                                                                        * ((unsigned __int16)((2185 * v66) >> 16) >> 5))) ^ 0xEC));
  v72 = 7 * (HIBYTE(v58) & 0xF ^ 7) + 3640;
  v73 = 7 * ((v58 >> 20) & 0xF ^ 3) + 3640;
  v74 = 7 * (HIWORD(v58) & 0xF ^ 0xD) + 3640;
  v75 = ((*(unsigned __int8 *)(STACK[0x718]
                             + (unsigned __int16)(v72 - 960
                                                      * ((unsigned __int16)((2185 * v72) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * ((v58 >> 28) ^ 9) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v58 >> 28) ^ 9) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v74 - 960 * ((unsigned __int16)((2185 * v74) >> 16) >> 5))) ^ 0xEC;
  v76 = 7 * (((unsigned __int16)v58 >> 12) ^ 1) + 3640;
  v77 = 7 * ((v58 >> 8) & 0xF ^ 0xD) + 3640;
  v78 = (v75 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (unsigned __int16)(v73
                                                             - 960
                                                             * ((unsigned __int16)((2185 * v73) >> 16) >> 5))) ^ 0xEC) << 12);
  v79 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(v76 - 960 * ((unsigned __int16)((2185 * v76) >> 16) >> 5))) ^ 0xEC;
  v80 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(v77 - 960 * ((unsigned __int16)((2185 * v77) >> 16) >> 5))) ^ 0xEC;
  v81 = 7 * ((v58 >> 4) ^ 4) + 3640;
  v82 = ((v78 | v80) << 8) - 1961495133 - (((v78 | v80) << 9) & 0x162BEA00);
  v83 = v82 ^ (v79 << 12);
  v84 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(7 * (v58 & 0xF ^ 7)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v58 & 0xF ^ 7) + 3640)) >> 16) >> 5)));
  v85 = v70 & 0xF ^ 5;
  v84 ^= 0xECu;
  v86 = (v83 ^ 0x8B15F5A3 | v84) ^ (16
                                  * (*(unsigned __int8 *)(STACK[0x718]
                                                        + (unsigned __int16)(v81
                                                                           - 960
                                                                           * ((unsigned __int16)((2185 * v81) >> 16) >> 5))) ^ 0xEC));
  v87 = 7 * ((v70 & 0xF ^ 5) & 0xFFFFFF0F | (16 * (v84 & 0xF)));
  v88 = *(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v87 + 3983) % 0x3C0u);
  if (v87 >= 0x3C0)
    v87 -= 960;
  v89 = v88 ^ LODWORD(STACK[0x62C]) ^ 0xEC;
  v90 = (v71 >> 4) - 587764039 - ((v71 >> 3) & 0x19EEDD72);
  v91 = 7 * v89;
  v89 *= 244671;
  v92 = v91 - 960 * ((v89 + 139217799) >> 25);
  v93 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v91 - 960 * (v89 >> 25))) >> 4;
  v94 = 7 * ((v86 & 0xF0 | v90 & 0xF) ^ 9);
  v95 = 7
      * ((((v93 ^ 0xE) + ((2 * ((v93 ^ 0xE | 0x7C) ^ v93)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v60 + v87))
       + ((1039800005 * ((v70 & 3 ^ 0x24C0C6F2) + (v70 & 3 ^ 1))) & 0x46000339));
  v96 = v94 - 960;
  if (v94 < 0x3C0)
    v96 = 7 * ((v86 & 0xF0 | v90 & 0xF) ^ 9);
  v97 = *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v86 & 0xF0 | v90 & 0xF) ^ 9) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v60 + v95 % 0x3C0) ^ 0xEC)) ^ 0xEC;
  v98 = 7 * v97;
  v97 *= 244671;
  v99 = v98 - 960 * ((v97 + 139217799) >> 25);
  v100 = (*(unsigned __int8 *)(v60 + (unsigned __int16)(v98 - 960 * (v97 >> 25))) >> 4) ^ 0xE;
  v101 = 7 * ((v100 - ((2 * v100) & 0x18) - 20) ^ *(unsigned __int8 *)(v60 + v96)) + 3983;
  v102 = 7
       * ((v86 >> 4) & 0xF0 ^ ((v59 & 0x6CC400F1 ^ 0x4000A0) + (v59 & 0x6CC400F1 ^ 0x6C840051) - 1824784610) & (v71 >> 8));
  v103 = *(unsigned __int8 *)(v60
                            + v102
                            + 3983
                            - 960 * (((143165577 * (unint64_t)(v102 + 3983)) >> 32) >> 5));
  v104 = v103 ^ (16
               * (*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v101
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v101) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v105 = *(unsigned __int8 *)(v60 + v102 - 960 * (((143165577 * (unint64_t)v102) >> 32) >> 5));
  v106 = (unsigned __int16)(7 * v104 + 3983) % 0x3C0u;
  if (v104 <= 0x89)
    v107 = 7 * v104;
  else
    v107 = (7 * v104 - 960) % 0x3C0;
  v108 = (*(unsigned __int8 *)(v60 + v107) >> 4) ^ 0xE;
  v109 = (v108 - ((2 * v108) & 0x18) - 20) ^ v105;
  v110 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * v109
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v109 + 3983)) >> 16) >> 7)));
  v111 = 7 * (((v83 >> 8) & 0xF0 | ((unsigned __int16)v68 >> 12)) ^ 0xFF);
  v112 = v111 - 960;
  if (v111 < 0x3C0)
    v112 = 7 * (((v83 >> 8) & 0xF0 | ((unsigned __int16)v68 >> 12)) ^ 0xFF);
  v113 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v111 + 3983) % 0x3C0u) ^ 0xEC;
  v114 = 7 * (16 * (v110 ^ 0xEC) + v113 - 2 * ((16 * (v110 ^ 0xEC)) & v113));
  v115 = (unsigned __int16)(v114 + 3983) % 0x3C0u;
  v116 = (*(unsigned __int8 *)(v60 + v114 % 0x3C0) >> 4) ^ 0xE;
  v117 = 7 * ((v116 - ((2 * v116) & 0x18) - 20) ^ *(unsigned __int8 *)(v60 + v112)) + 3983;
  v118 = 7 * (((v83 >> 12) & 0xF0 | HIWORD(v68) & 0xF) ^ 0x58);
  v119 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(v117
                                               - 960 * ((unsigned __int16)((8739 * v117) >> 16) >> 7))) ^ 0xEC;
  if (v118 >= 0x3C0)
    v118 -= 960;
  v120 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * (((v83 >> 12) & 0xF0 | BYTE2(v68) & 0xF) ^ 0x58) + 3983) % 0x3C0u) ^ (16 * v119) ^ 0xEC;
  v121 = (unsigned __int16)(7 * v120 + 3983) % 0x3C0u;
  v122 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * v120
                                               - 960 * ((unsigned __int16)((244671 * v120) >> 16) >> 9))) >> 4;
  v123 = 7
       * (((v122 ^ 0xE) + ((2 * ((v122 ^ 0xE | 0x7C) ^ v122)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v60 + v118));
  v124 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7
                                               * (((v68 >> 20) & 0xF | (16
                                                                      * (((v103 & 0xF ^ 3) + (v103 & 0xF ^ 0xC)) & ((v82 >> 20) ^ 0x11)))) ^ 3)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v60
                                                             + (unsigned __int16)(v123
                                                                                + 3983
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * (v123 + 3983)) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v125 = 7 * v124;
  v124 *= 244671;
  v126 = v125 - 960 * ((v124 + 139217799) >> 25);
  LOWORD(v124) = v125 - 960 * (v124 >> 25);
  v127 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v92 + 3983)) ^ 0xEC;
  v128 = *(unsigned __int8 *)(v60 + (unsigned __int16)v124) >> 4;
  v129 = ((v128 ^ 0xE) + ((2 * ((v128 ^ 0xE | 0x7C) ^ v128)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * (((v68 >> 20) & 0xF | (16 * (((v103 & 0xF ^ 3) + (v103 & 0xF ^ 0xC)) & ((v82 >> 20) ^ 0x11)))) ^ 3)) % 0x3C0u);
  v130 = 7 * (((v82 >> 20) & 0xF0 | HIBYTE(v68) & 0xF) ^ 0xBE);
  v131 = v127 ^ (16 * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v99 + 3983)) ^ 0xEC)) ^ ((*(unsigned __int8 *)(v60 + v106) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v60 + v115) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v60 + v121) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(v126 + 3983)) ^ 0xEC) << 20);
  v132 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * v129
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v129 + 3983)) >> 16) >> 7))) ^ 0xEC;
  if (v130 >= 0x3C0)
    v130 -= 960;
  v133 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * (((v82 >> 20) & 0xF0 | HIBYTE(v68) & 0xF) ^ 0xBE) + 3983) % 0x3C0u) ^ (16 * v132) ^ 0xEC;
  v134 = 7 * v133;
  v133 *= 244671;
  v135 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v134 - 960 * ((v133 + 139217799) >> 25) + 3983));
  v136 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v134 - 960 * (v133 >> 25))) >> 4;
  v137 = 7 * (*(_BYTE *)(v60 + v130) ^ 0xE2 ^ v136);
  v138 = ((v135 ^ 0xEC) << 24) & 0x8D000000 ^ v131 & 0xDD89A41 | ((v135 ^ 0xEC) << 24) & 0x72000000 ^ v131 & 0x22765BE;
  v139 = ~v68;
  v140 = v138 + 1765129689 - 2 * (v138 & 0x6935BDDD ^ v127 & 4);
  v141 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v60
                                                                     + (unsigned __int16)(7
                                                                                        * (((((v136 ^ 1) + (v136 ^ 0xE)) | 4) & (~v68 >> 28) | (16 * (v82 >> 28))) ^ 0x80)
                                                                                        + 3983)
                                                                     % 0x3C0u) ^ (unsigned __int16)(16
                                                                                                  * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v137 + 3023 - 960 * ((unsigned __int16)((8739 * (v137 + 3023)) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC)
                                               + 3983)
                            % 0x3C0u) ^ 0xC;
  v142 = ((v141 << 28) + 1765129689 - (v141 >> 1 << 30)) ^ v140;
  v143 = v85 & 0xFF0F | (16 * (v140 & 0xF));
  v144 = v90 ^ 0x53089149;
  v145 = STACK[0x688];
  if (LODWORD(STACK[0x688]) == 1194401243)
    v144 = 15;
  v146 = *(_BYTE *)(v60 + (unsigned __int16)(7 * (v143 ^ 0x90) + 1813) % 0x3C0u);
  v147 = (7 * (v144 & (v90 ^ 0xDCF76EB9) ^ 0xD0 ^ v140 & 0xF0) + 1813) % 0x3C0;
  v148 = 7 * (((v140 >> 4) & 0xF0 | (v71 >> 8) & 0xF) ^ 0xD0) + 1813;
  v149 = v148 - 960 * ((unsigned __int16)((2185 * v148) >> 16) >> 5);
  v150 = 7 * (((v140 >> 8) & 0xF0 | ((unsigned __int16)v68 >> 12)) ^ 0xBF) + 1813;
  v151 = v150 - 960 * ((2185 * v150) >> 21);
  v152 = (v140 >> 12) & 0xF0 | HIWORD(v68) & 0xF;
  v153 = 7 * (v152 ^ 0x58) + 1813 - 960 * ((2185 * (7 * (v152 ^ 0x58u) + 1813)) >> 21);
  v154 = 7 * ((HIWORD(v142) & 0xF0 | (v68 >> 20) & 0xF) ^ 3) + 1813;
  v155 = STACK[0x690];
  *((_DWORD *)&STACK[0x850] + 199 * (LODWORD(STACK[0x6A0]) ^ 0x7B352617u) % 0x114) = (LODWORD(STACK[0x690])
                                                                                    - ((2 * LODWORD(STACK[0x690])
                                                                                      + 1097461142) & 0xDB0DE0B6)
                                                                                    + 238806822) ^ 0x7E0737A4 ^ v59;
  v156 = (HIBYTE(v68) & 0x86 ^ 0x86) + (HIBYTE(v68) & 0x86) - (v146 & 0x82 ^ 2) - (v146 & 0x82 ^ 0x80);
  v157 = HIBYTE(v68) & 0xF;
  v158 = *(unsigned __int8 *)(v60 + v147) ^ 0xEC;
  v159 = v142 >> 20 >> (v156 & 0xFE);
  v160 = 7 * ((v157 & 0xFFFFFF0F | (16 * (v159 & 0xF))) ^ 0xE) + 1813;
  v161 = (16 * v158) ^ ((*(unsigned __int8 *)(v60 + v149) ^ 0xEC) << 8);
  v162 = v161 ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)v151) ^ 0xEC) << 12);
  v163 = v162 ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)v153) ^ 0xEC) << 16);
  v164 = v163 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v154
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v154) >> 16) >> 5))) ^ 0xEC) << 20);
  v165 = v164 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v160 - 960 * ((unsigned __int16)((2185 * v160) >> 16) >> 5))) ^ 0xEC) << 24);
  v166 = 7 * (v159 & 0xF0 | (v139 >> 28)) + 1813;
  v167 = v165 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v166
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v166) >> 16) >> 5))) ^ 0xC) << 28);
  v168 = ((v167 >> 27) & 4) + ((v167 >> 28) ^ 0x222);
  v169 = 7 * (HIWORD(v163) & 0xF) + 3822 - 960 * ((2185 * (7 * (HIWORD(v163) & 0xF) + 3822)) >> 21);
  v170 = 7 * (((16 * v158 + (~(32 * v158) | 0x3F) - 19) ^ v146) >> 4) + 3822;
  v171 = ((((((*(unsigned __int8 *)(v60
                                  + (unsigned __int16)(7 * (HIBYTE(v165) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v165) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * v168 - 960 * ((unsigned __int16)((15295 * v168) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v60 + (unsigned __int16)v169) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v164 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v164 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v161 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v161 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((unsigned __int16)v162 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v162 >> 12) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * (v146 & 0xF ^ 0xC) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v146 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5))) ^ 0xEC;
  v172 = (LODWORD(STACK[0x700]) - 626349352 + LODWORD(STACK[0x6F4]) + v53) ^ 0x9EBAEE30 ^ (16
                                                                                         * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v170 - 960 * ((unsigned __int16)((2185 * v170) >> 16) >> 5))) ^ 0xEC)) ^ v171;
  v173 = LODWORD(STACK[0x698]) + 297197623;
  v174 = LODWORD(STACK[0x6C0]) - 829456001;
  *((_DWORD *)&STACK[0x850] + LODWORD(STACK[0x6A8]) - 276 * (LODWORD(STACK[0x6B4]) / 0x114) + 16716) = v172;
  LODWORD(STACK[0x700]) = (v173 ^ 0x2BB94A74)
                        + v155
                        - ((v173 ^ v145 ^ 0x745E4E86)
                         + LODWORD(STACK[0x710]))
                        - 433192780
                        - ((2
                          * ((v173 ^ 0x2BB94A74)
                           + v155
                           - ((v173 ^ v145 ^ 0x745E4E86)
                            + LODWORD(STACK[0x710]))
                           + 459877494)) & 0x9589A87C);
  LODWORD(STACK[0x6C0]) = 1092264321
                        - ((((v174 ^ 0x411AD9F7) - v53 - 1132968523) ^ 0x7F3BFF87)
                         + ((2 * ((v174 ^ 0x411AD9F7) - v53 - 1132968523)) & 0xFE77FF0E));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8]
                                        + 8 * ((1977 * (LODWORD(STACK[0x708]) == 258)) ^ LODWORD(STACK[0x6B8])))
                            - 4))();
}

void sub_18C9BE660(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x710]) = v1;
  LODWORD(STACK[0x6F4]) = a1 - 1952721435;
  v3 = STACK[0x640];
  v4 = LODWORD(STACK[0x634]) + 1;
  LODWORD(STACK[0x6B4]) = v2 + 199;
  LODWORD(STACK[0x6D0]) += 199;
  LODWORD(STACK[0x6C8]) += 199;
  ++LODWORD(STACK[0x708]);
  --LODWORD(STACK[0x6DC]);
  LODWORD(STACK[0x640]) = v3 + 2;
  LODWORD(STACK[0x634]) = v4;
  JUMPOUT(0x18C9BCDD0);
}

uint64_t sub_18C9BE74C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  char v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned __int16 v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned __int16 v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned __int8 v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  unsigned __int16 v222;
  int v223;
  int v224;
  char v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned __int16 v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned __int16 v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  __int16 v294;
  __int16 v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned __int16 v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  int v372;
  unsigned __int16 v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned __int16 v384;
  unsigned int v385;
  unsigned __int16 v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  unsigned __int8 v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  unsigned __int16 v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  int v462;
  int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  int v470;
  unsigned int v471;
  int v472;
  int v473;
  int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  int v485;
  __int16 v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned __int16 v492;
  int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  char v504;
  int v505;
  unsigned int v506;
  int v507;
  int v508;
  unsigned int v509;
  __int16 v510;
  char v511;
  __int16 v512;
  unsigned int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  unint64_t v518;
  int v519;
  int v520;
  unsigned int v521;
  int v522;
  __int16 v523;
  unsigned __int16 v524;
  __int16 v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  unsigned int v532;
  int v533;
  char v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  unsigned int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  int v589;
  int v590;
  int v591;
  unsigned int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  unsigned int v608;
  unint64_t v609;
  int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  unsigned int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  unsigned int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  unsigned int v632;
  int v633;
  unsigned int v634;
  int v635;
  int v636;
  unsigned __int16 v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  int v643;
  unsigned int v644;
  int v645;
  int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  int v656;
  int v657;
  unsigned int v658;
  int v659;
  int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  int v679;
  unsigned int v680;
  int v681;
  int v682;
  int v683;
  unsigned int v684;
  int v685;
  unsigned int v686;
  int v687;
  int v688;
  int v689;
  unsigned int v690;
  unsigned int v691;
  unsigned int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  unsigned int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  int v724;
  int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;
  int v729;
  int v730;
  int v731;
  unsigned int v732;
  int v733;
  int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  int v739;
  unsigned int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  unsigned int v745;
  unsigned int v746;
  int v747;
  int v748;
  unsigned int v749;
  unsigned int v750;
  int v751;
  int v752;
  int v753;
  unsigned int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  unsigned int v764;
  int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  unsigned int v773;
  int v774;
  unsigned int v775;
  int v776;
  int v777;
  unsigned int v778;
  unsigned int v779;
  unsigned int v780;
  int v781;
  int v782;
  int v783;
  unsigned int v784;
  int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  unsigned int v789;
  unint64_t v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  unsigned int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  int v799;
  int v800;
  int v801;
  int v802;
  int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  int v808;
  unsigned int v809;
  int v810;
  int v811;
  unsigned int v812;
  int v813;
  unsigned int v814;
  unsigned int v815;
  int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  unsigned int v824;
  unsigned int v825;
  unsigned int v826;
  int v827;
  unsigned int v828;
  int v829;
  int v830;
  unsigned int v831;
  int v832;
  int v833;
  int v834;
  int v835;
  int v836;
  unsigned int v837;
  int v838;
  int v839;
  int v840;
  unsigned int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  int v851;
  int v852;
  int v853;
  int v854;
  unsigned int v855;
  int v856;
  int v857;
  int v858;
  unsigned int v859;
  int v860;
  unint64_t v861;
  int v862;
  int v863;
  int v864;
  int v865;
  unsigned int v866;
  int v867;
  int v868;
  unsigned int v869;
  unsigned int v870;
  int v871;
  int v872;
  int v873;
  unsigned int v874;
  int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  unsigned int v880;
  unsigned __int16 v881;
  unsigned int v882;
  int v883;
  unsigned int v884;
  __int16 v885;
  unsigned int v886;
  int v887;
  int v888;
  __int16 v889;
  int v890;
  int v891;
  int v892;
  unsigned int v893;
  int v894;
  unsigned int v895;
  int v896;
  unsigned int v897;
  int v898;
  int v899;
  int v900;
  int v901;
  unsigned int v902;
  int v903;
  int v904;
  unsigned int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  unsigned int v910;
  int v911;
  unsigned int v912;
  int v913;
  int v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  unsigned int v920;
  unsigned int v921;
  unsigned int v922;
  int v923;
  int v924;
  unsigned int v925;
  int v926;
  int v927;
  int v928;
  int v929;
  int v930;
  int v931;
  int v932;
  unsigned int v933;
  unsigned int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  int v938;
  int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  char v943;
  __int16 v944;
  unsigned int v945;
  int v946;
  int v947;
  int v948;
  unsigned int v949;
  int v950;
  unsigned int v951;
  int v952;
  unsigned int v953;
  int v954;
  unsigned int v955;
  int v956;
  int v957;
  __int16 v958;
  int v959;
  unsigned int v960;
  int v961;
  unsigned int v962;

  v8 = LODWORD(STACK[0x554])
     + v3
     + 2007748374
     - ((2 * (LODWORD(STACK[0x554]) + v3 + 2007748374)) & 0x4A23B084)
     - 1525557182;
  v9 = STACK[0x718];
  v10 = *(unsigned __int8 *)(STACK[0x718]
                           + (unsigned __int16)(7 * ((v8 >> 28) ^ 0xA)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v8 >> 28) ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v11 = LODWORD(STACK[0x628]) ^ 0x9822AE87;
  LODWORD(STACK[0x540]) = v11;
  v12 = v11 - a1 - ((2 * (v11 - a1) + 2029030248) & 0x6A71CAF4) - 240047314;
  v13 = 7 * (HIBYTE(v8) & 0xF ^ 5) + 3640;
  v14 = ((*(unsigned __int8 *)(v9
                             + (unsigned __int16)(v13 - 960
                                                      * ((unsigned __int16)((2185 * v13) >> 16) >> 5))) ^ 0xEC) << 8) ^ (v10 << 12);
  v15 = 7 * (HIWORD(v8) & 0xF ^ 1) + 3640;
  v16 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(v15 - 960 * ((unsigned __int16)((2185 * v15) >> 16) >> 5))) ^ 0xEC | v14;
  v17 = 7 * ((v8 >> 8) & 0xF ^ 8) + 3640;
  v18 = 7 * (((unsigned __int16)(v8 & 0xF000) >> 12) ^ 0xD) + 3640;
  v19 = 7 * ((v8 >> 4) ^ 4) + 3640;
  v20 = (v16 << 8) ^ ((*(unsigned __int8 *)(v9
                                          + (7 * ((v8 >> 20) & 0xF ^ 1) + 3640)
                                          % ((((LODWORD(STACK[0x56C]) + 116316458) & 0x1464D6C8)
                                            - 30642919
                                            + ((LODWORD(STACK[0x56C]) + 116316458) & 0x1464D6C8 ^ 0x1464D6C8)) & 0xE424B7C8)) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(v17 - 960 * ((unsigned __int16)((2185 * v17) >> 16) >> 5))) ^ 0xEC;
  v21 = (v20 << 8) + 1612389857 - ((v20 << 9) & 0xC0363A00);
  v22 = v21 ^ ((*(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v18
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v18) >> 16) >> 5))) ^ 0xEC) << 12);
  v23 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(7 * (v8 & 0xF ^ 2)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v8 & 0xF ^ 2) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v24 = (v22 ^ 0x601B1DE1 | v23) ^ (16
                                  * (*(unsigned __int8 *)(v9
                                                        + (unsigned __int16)(v19
                                                                           - 960
                                                                           * ((unsigned __int16)((2185 * v19) >> 16) >> 5))) ^ 0xEC));
  v25 = (BYTE2(v12) ^ 0x38u) >> ((BYTE2(v12) & 4 ^ 4) + (BYTE2(v12) & 4));
  LOWORD(v25) = v25 - ((2 * v25) & 0xDC) + 9326;
  v26 = 7 * (HIBYTE(v12) & 0xF ^ 5) + 3640;
  v27 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v25 ^ 0x246E) + 3640) % 0x3C0u);
  v28 = (v25 & 7 ^ ((v25 ^ 0x96) + (v25 & 0xF8 ^ 0x6F) + 1) ^ 1) * ((HIWORD(v12) & 0xF ^ 8) + 520);
  v29 = 7 * (((unsigned __int16)(v11 - a1 - ((2 * (v11 - a1) - 29848) & 0xCAF4) + 11054) >> 12) ^ 0xE) + 3640;
  v30 = 7 * ((v12 >> 8) & 0xF ^ 5) + 3640;
  v31 = ((((*(unsigned __int8 *)(v9
                               + (unsigned __int16)(v26
                                                  - 960 * ((unsigned __int16)((2185 * v26) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v12 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v12 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (v28 - 960 * ((4473925 * (unint64_t)v28) >> 32))) ^ 0xEC) << 8) ^ ((v27 ^ 0xEC) << 12);
  v32 = 7 * (((v11 - a1 - ((2 * (v11 - a1) + 104) & 0xF4) + 46) >> 4) ^ 7) + 3640;
  v33 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(v32 - 960 * ((unsigned __int16)((2185 * v32) >> 16) >> 5)));
  v34 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(v29 - 960 * ((unsigned __int16)((2185 * v29) >> 16) >> 5))) ^ 0xEC;
  v35 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(7 * (v12 & 0xF ^ 0xA)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v12 & 0xF ^ 0xA) + 3640)) >> 16) >> 5)));
  v36 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(v30 - 960 * ((unsigned __int16)((2185 * v30) >> 16) >> 5))) ^ 0xEC;
  v37 = v23 & 0xF;
  LODWORD(STACK[0x6DC]) = v37;
  v38 = ((v31 | v36) << 8) + 1806964732 - (((v31 | v36) << 9) & 0xD7682E00);
  v39 = v38 ^ (v34 << 12);
  v40 = (v39 ^ 0x6BB417FC | v35 ^ 0xEC) ^ (16 * (v33 ^ 0xEC));
  v41 = 7 * (v37 & 0xFFFFFF0F | (16 * ((v35 ^ 0xEC) & 0xF)));
  v42 = LOBYTE(STACK[0xF98]) ^ 0xEC;
  LODWORD(STACK[0x5A4]) = 16 * v42;
  v43 = 16 * v42 + 1796969462 - 32 * (v42 & 0x3F);
  LODWORD(STACK[0x6F4]) = v43;
  v44 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v37 & 0xFF0F | (16 * ((v35 ^ 0xEC) & 0xF))) + 3983) % 0x3C0u) ^ 0xEC;
  v45 = (v44 + 1796969462 - ((2 * v44) & 0x1EC)) ^ v43;
  if (v41 >= 0x3C0)
    v41 -= 960;
  v46 = *(unsigned __int8 *)(v9 + v41);
  LODWORD(STACK[0x6C8]) = 7 * v45;
  v47 = *(unsigned __int8 *)(v9 + 7 * v45 % 0x3C0u);
  LODWORD(STACK[0x670]) = v24;
  v48 = (((v47 >> 4) ^ 0xE) - 2 * (((v47 >> 4) ^ 0xE) & 0xFD ^ ((v47 & 0x10) != 0)) - 20) ^ v46;
  v49 = 7 * (v40 & 0xF0 | (v24 >> 4));
  v50 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v40 & 0xF0 | (v24 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v48 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v48 + 3983)) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x6B8]) = v50;
  v50 *= 7;
  LODWORD(STACK[0x6B4]) = v50;
  LODWORD(STACK[0x6D0]) = (unsigned __int16)(v50 + 3983)
                        % (((unsigned __int16)(112 - v50) | (unsigned __int16)(v50 + 3983)) & 0x3C0u);
  v51 = v2 - 2058630570;
  v52 = STACK[0x700];
  v53 = v51 ^ 0xE6B3FA75 ^ LODWORD(STACK[0x700]);
  v54 = v8 ^ LODWORD(STACK[0x700]);
  LODWORD(STACK[0x6A8]) = v54;
  LODWORD(STACK[0x710]) = v52 ^ 0xCAC4D43E;
  v55 = (v5 ^ 0x69F86DB6) - a2 + (v52 ^ 0x353B2BC1) + v53 + 162446947;
  v56 = ((2 * (v55 ^ (a2 - 505947838 + (v52 ^ 0xCAC4D43E)))) & 0xFF59EDF6)
      + (v55 ^ (a2 - 505947838 + (v52 ^ 0xCAC4D43E)) ^ 0xFFACF6FB);
  v57 = ((v51 ^ 0x2C772E4B) + 992782313 + v56) ^ v55;
  LODWORD(STACK[0x62C]) = v57;
  v58 = (v51 ^ 0x2C772E4B) + 987340516;
  v59 = v56 + 5441797;
  v60 = v57 + v56 + 5441797;
  LODWORD(STACK[0x534]) = v60 ^ 0xDCF3890C;
  v61 = (v60 ^ 0xDCF3890C) + v58;
  LODWORD(STACK[0x6F8]) = v61;
  v62 = LODWORD(STACK[0x570]) + v61;
  LODWORD(STACK[0x6A0]) = v62 + 1254554094;
  v63 = v6;
  LODWORD(STACK[0x598]) = (7 * ((v62 + 1254554094) & 0xF) + 3640)
                        % (((7 * ((v62 + 1254554094) & 0xF) + 3640) & 0xCB3 ^ (-3641 - 7 * ((v62 + 1254554094) & 0xF)) & 0xE59AB0B3)
                         * ((v54 & 0x5321EFA1 ^ 0x43010C20 | v54 & 0x5321EFA1 ^ 0x1020E381) + 2039700895));
  if (v49 >= 0x3C0)
    v64 = v49 - 960;
  else
    v64 = 7 * (v40 & 0xF0 | (v24 >> 4));
  LODWORD(STACK[0x5D4]) = v64;
  v65 = 7 * ((v40 >> 4) & 0xF0 | (v24 >> 8) & 0xF);
  v66 = 7 * (((v39 >> 8) & 0xF0 | ((unsigned __int16)v22 >> 12)) ^ 0x11);
  v67 = 7 * (((v39 >> 12) & 0xF0 | HIWORD(v22) & 0xF) ^ 0x4B);
  LODWORD(STACK[0x644]) = v38;
  LODWORD(STACK[0x648]) = v21;
  v68 = 7 * ((HIWORD(v38) & 0xF0 | (v21 >> 20) & 0xF) ^ 0xB1);
  v69 = 7 * (((v38 >> 20) & 0xF0 | HIBYTE(v21) & 0xF) ^ 0xB0);
  v70 = ((2 * ((unsigned __int16)(7 * (((v38 >> 20) & 0xF0 | HIBYTE(v21) & 0xF) ^ 0xB0) + 3983) % 0x780u)) & 0xECE)
      + (((unsigned __int16)(7 * (((v38 >> 20) & 0xF0 | HIBYTE(v21) & 0xF) ^ 0xB0) + 3983) % 0x780u) ^ 0x72F7F767);
  LODWORD(STACK[0x60C]) = v70;
  LODWORD(STACK[0x5C8]) = v65;
  if (v65 >= 0x3C0)
    v71 = v65 - 960;
  else
    v71 = 7 * ((v40 >> 4) & 0xF0 | (v24 >> 8) & 0xF);
  LODWORD(STACK[0x5D0]) = v71;
  LODWORD(STACK[0x5DC]) = v66;
  if (v66 >= 0x3C0)
    v72 = v66 - 960;
  else
    v72 = v66;
  LODWORD(STACK[0x5E0]) = v72;
  LODWORD(STACK[0x5E8]) = v67;
  if (v67 >= 0x3C0)
    v73 = v67 - 960;
  else
    v73 = v67;
  LODWORD(STACK[0x5F0]) = v73;
  LODWORD(STACK[0x5F8]) = v68;
  if (v68 >= 0x3C0)
    v74 = v68 - 960;
  else
    v74 = 7 * ((HIWORD(v38) & 0xF0 | (v21 >> 20) & 0xF) ^ 0xB1);
  LODWORD(STACK[0x600]) = v74;
  if (v69 >= 0x3C0)
    v75 = v69 - 960;
  else
    v75 = 7 * (((v38 >> 20) & 0xF0 | HIBYTE(v21) & 0xF) ^ 0xB0);
  LODWORD(STACK[0x628]) = v75;
  if (v70 - 1928853351 >= 0x3C0)
    v76 = -42132672;
  else
    v76 = -42131712;
  LODWORD(STACK[0x608]) = v76;
  v77 = (a1 + 1132968524) ^ 0x2C772E4B;
  v78 = v77 + 196607609 - 2 * (v77 & 0xBB7FE7D ^ (a1 + 1132968524) & 4);
  v79 = LODWORD(STACK[0x54C]) + 993038235;
  LODWORD(STACK[0x3C4]) = v79;
  v80 = v58 + v79;
  v81 = v58 + v79 - ((2 * (v58 + v79)) & 0x9635C0C0) - 887431072;
  LODWORD(STACK[0x698]) = v81;
  v82 = LODWORD(STACK[0x610]) ^ 0x93345609;
  LODWORD(STACK[0x53C]) = v82;
  v83 = 7 * (HIBYTE(v81) & 0xF ^ 0xB) + 3640;
  v84 = 7 * ((v81 >> 20) & 0xF ^ 1) + 3640;
  v85 = ((*(unsigned __int8 *)(v9
                             + (unsigned __int16)(v83 - 960
                                                      * ((unsigned __int16)((2185 * v83) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v81 >> 28) ^ 0xC) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v81 >> 28) ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0xC) << 12);
  v86 = 7 * (HIWORD(v81) & 0xF ^ 0xA) + 3640;
  v87 = v85 | *(unsigned __int8 *)(v9
                                 + (unsigned __int16)(v86
                                                    - 960 * ((unsigned __int16)((2185 * v86) >> 16) >> 5)));
  v88 = 7 * (((unsigned __int16)v81 >> 12) ^ 0xE) + 3640;
  v89 = 7 * ((v81 >> 8) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v81 >> 8) & 0xF) + 3640)) >> 16) >> 5);
  v90 = 7 * ((v81 >> 4) ^ 6) + 3640;
  v91 = ((*(unsigned __int8 *)(v9
                             + (unsigned __int16)(v84 - 960
                                                      * ((unsigned __int16)((2185 * v84) >> 16) >> 5))) ^ 0xEC) << 20) ^ (v87 << 16) ^ 0xEC0000;
  v92 = v91 - 1771472912 - ((2 * v91) & 0x2CD20000);
  v93 = ((v92 ^ 0x966977F0) + ((*(unsigned __int8 *)(v9 + v89) ^ 0xEC) << 8)) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v88 - 960 * ((unsigned __int16)((2185 * v88) >> 16) >> 5))) ^ 0xEC) << 12);
  v94 = v82 - v77 - 987340516 - ((2 * (v82 - v77 - 987340516)) & 0xB74773AA) - 610027051;
  v95 = *(unsigned __int8 *)(v9
                           + (unsigned __int16)(7 * (v80 & 0xF)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v80 & 0xFu) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v96 = (v93 | v95) ^ (16
                     * (*(unsigned __int8 *)(v9
                                           + (unsigned __int16)(v90
                                                              - 960
                                                              * ((unsigned __int16)((2185 * v90) >> 16) >> 5))) ^ 0xEC));
  v97 = 7 * (HIBYTE(v94) & 0xF ^ 0xB) + 3640;
  LOWORD(v97) = v97 - 960 * ((unsigned __int16)((2185 * v97) >> 16) >> 5);
  v98 = 7 * (HIWORD(v94) & 0xF ^ 3) + 3640;
  v99 = 7 * ((v94 >> 20) & 0xF ^ 0xA) + 3640;
  v100 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v98 - 960 * ((unsigned __int16)((2185 * v98) >> 16) >> 5))) ^ 0xEC ^ ((unint64_t)(*(unsigned __int8 *)(v9 + (unsigned __int16)v97) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v94 >> 28) ^ 0xD) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v94 >> 28) ^ 0xD) + 3640)) >> 16) >> 5))) ^ 0xEC)) ^ 0xECu) << (((v97 & 0x18 ^ 0x18) + (v97 & 0x18)) & 0xEF));
  v101 = 7
       * (((unsigned __int16)((v82 - v77 + 24860 - ((2 * (v82 - v77 + 24860)) & 0x73AA) - 17963) & 0xF000) >> 12) ^ 0xB)
       + 3640;
  v102 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v101
                                               - 960 * ((unsigned __int16)((2185 * v101) >> 16) >> 5))) ^ 0xEC;
  v103 = (((v94 >> 8) ^ 0xDBA3B9) & 0xF | (16 * ((((v94 >> 8) ^ 0xDBA3B9) >> 3) & 1))) ^ 0x208;
  v104 = (v100 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v99
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v99) >> 16) >> 5))) ^ 0xEC) << 12);
  v105 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v103 - 960 * ((unsigned __int16)((15295 * v103) >> 16) >> 5))) ^ 0xEC;
  v106 = (v104 | v105) - 2 * ((v104 | v105) & 0x274FBF ^ v105 & 6);
  v107 = 16 * v102 - ((32 * v102) & 0xFFFFFF7F) - 1129885767;
  v108 = (v106 + 10964921) ^ v107;
  v109 = 7
       * (((v82 - v77 + 28 - ((2 * (v82 - v77 + 28)) & 0xAA) - 43) ^ 0xD5u) >> (((v107 & 0x70 ^ 0xBB)
                                                                                                + (v107 & 0x70 ^ 0x49)) & 0xFC))
       + 3640;
  LOWORD(v94) = 7 * (v94 & 0xF ^ 5)
              + 3640
              - 960 * ((unsigned __int16)((2185 * (7 * (v94 & 0xF ^ 5) + 3640)) >> 16) >> 5);
  v110 = (*(unsigned __int8 *)(v9 + (unsigned __int16)v94) ^ 0xEC | (v108 << 8)) ^ ((unint64_t)(*(unsigned __int8 *)(v9 + (unsigned __int16)(v109 - 960 * ((unsigned __int16)((8739 * v109) >> 16) >> 7))) ^ 0xECu) << (((v94 & 0x21 ^ 0x21) + (v94 & 0x21)) ^ 0x25));
  LODWORD(STACK[0x668]) = v95 & 0xF;
  v111 = 7 * (v95 & 0xF | (16 * (v110 & 0xF)));
  v112 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v111 + 3983) % 0x3C0u) ^ 0xEC;
  v113 = STACK[0x6F4];
  v114 = 7 * ((v112 + 1796969462 - ((2 * v112) & 0x1EC)) ^ LODWORD(STACK[0x6F4]));
  LODWORD(STACK[0x654]) = v114;
  if (v111 >= 0x3C0u)
    v111 -= 960;
  v115 = *(unsigned __int8 *)(v9 + v114 % 0x3C0);
  v116 = 7
       * ((((v115 >> 4) ^ 0xE) + (~(2 * ((v115 >> 4) ^ 0xE)) | 0xE7) - 19) ^ *(unsigned __int8 *)(v9 + v111))
       + 3983;
  v117 = v116 - 960 * ((8739 * v116) >> 23);
  LODWORD(STACK[0x65C]) = v96;
  v118 = 7 * (v110 & 0xF0 | (v96 >> 4));
  if (v118 >= 0x3C0)
    v118 -= 960;
  v119 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v110 & 0xF0 | (v96 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)v117) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x638]) = 7 * v119;
  LODWORD(STACK[0x634]) = 244671 * v119;
  v120 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v119
                                               - 960 * ((unsigned __int16)((244671 * v119) >> 16) >> 9)));
  v121 = 7
       * ((((v120 >> 4) ^ 0xE) - 2 * (((v120 >> 4) ^ 0xE) & 0xFD ^ ((v120 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + v118))
       + 3983;
  v122 = 7 * ((v110 >> 4) & 0xF0 | (v96 >> 8) & 0xF);
  v123 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v110 >> 4) & 0xF0 | (v96 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v121 - 960 * ((unsigned __int16)((8739 * v121) >> 16) >> 7))) ^ 0xEC));
  if (v122 >= 0x3C0)
    v122 -= 960;
  v124 = v123 ^ 0xEC;
  LODWORD(STACK[0x610]) = 7 * v124;
  v125 = (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(7 * v124
                                                - 960 * ((unsigned __int16)((244671 * v124) >> 16) >> 9))) >> 4) ^ 0xE;
  v126 = 7 * ((v125 - ((2 * v125) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v122)) + 3983;
  LODWORD(STACK[0x640]) = v93;
  v127 = 7 * ((v110 >> 8) & 0xF0 | ((unsigned __int16)v93 >> 12));
  v128 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * ((v110 >> 8) & 0xF0 | ((unsigned __int16)v93 >> 12)) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v9
                                                             + (unsigned __int16)(v126
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v126) >> 16) >> 7))) ^ 0xEC));
  if (v127 >= 0x3C0)
    v127 -= 960;
  v129 = v128 ^ 0xEC;
  LODWORD(STACK[0x5FC]) = 7 * v129;
  LODWORD(STACK[0x5F4]) = 244671 * v129;
  v130 = (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(7 * v129
                                                - 960 * ((unsigned __int16)((244671 * v129) >> 16) >> 9))) >> 4) ^ 0xE;
  v131 = (v130 - ((2 * v130) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v127);
  v132 = 7 * ((v110 >> 12) & 0xF0 | HIWORD(v93) & 0xF);
  v133 = 7 * v131 + 3983 - 960 * ((8739 * (7 * v131 + 3983)) >> 23);
  v134 = v132 + 3983 - 960 * ((unsigned __int16)(7 * ((v110 >> 12) & 0xF0 | BYTE2(v93) & 0xF) + 3983) / 0x3C0u);
  if (v132 >= 0x3C0)
    v132 -= 960;
  v135 = *(unsigned __int8 *)(v9 + (unsigned __int16)v134) ^ (16
                                                            * (*(unsigned __int8 *)(v9 + (unsigned __int16)v133) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x5CC]) = 7 * v135;
  v136 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v135
                                               - 960 * ((unsigned __int16)((244671 * v135) >> 16) >> 9)));
  v137 = 7
       * ((((v136 >> 4) ^ 0xE) - 2 * (((v136 >> 4) ^ 0xE) & 0xFD ^ ((v136 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + v132))
       + 3983;
  v138 = 7 * ((HIWORD(v110) & 0xF0 | (v92 >> 20) & 0xF) ^ 6);
  v139 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((BYTE2(v110) & 0xF0 | (v92 >> 20) & 0xF) ^ 6) + 3983)
                                 % 0x3C0u) ^ (16
                                            * (*(unsigned __int8 *)(v9
                                                                  + (unsigned __int16)(v137
                                                                                     - 960
                                                                                     * ((unsigned __int16)((8739 * v137) >> 16) >> 7))) ^ 0xEC));
  if (v138 >= 0x3C0)
    v138 -= 960;
  v140 = HIBYTE(v110);
  v141 = v139 ^ 0xEC;
  LODWORD(STACK[0x5B8]) = 7 * v141;
  LODWORD(STACK[0x5B4]) = 244671 * v141;
  v142 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v141
                                               - 960 * ((unsigned __int16)((244671 * v141) >> 16) >> 9)));
  LODWORD(STACK[0x5EC]) = v92;
  v143 = 7
       * ((((v142 >> 4) ^ 0xE) - ((2 * ((v142 >> 4) ^ 0xE)) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v138))
       + 3983;
  v144 = 7 * (((HIBYTE(v92) & 0xF | (16 * ((v140 ^ 0xFFFFFF0) + (v140 | 0xF)))) + 16) ^ 6);
  v145 = *(unsigned __int8 *)(v9 + (v144 + 3983) % 0x3C0) ^ (16
                                                           * (*(unsigned __int8 *)(v9
                                                                                 + (unsigned __int16)(v143 - 960 * ((unsigned __int16)((8739 * v143) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x5A8]) = 7 * v145;
  LODWORD(STACK[0x5A0]) = 244671 * v145;
  v146 = (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(7 * v145
                                                - 960 * ((unsigned __int16)((244671 * v145) >> 16) >> 9))) >> 4) ^ 0xE;
  v147 = 7 * ((v146 - ((2 * v146) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v144 % 0x3C0)) + 3983;
  v148 = 7 * ((v140 & 0xF0 | (v92 >> 28)) ^ 9) + 3983;
  v149 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v148
                                               - 960 * ((unsigned __int16)((8739 * v148) >> 16) >> 7))) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v147 - 960 * ((unsigned __int16)((8739 * v147) >> 16) >> 7))) ^ 0xEC));
  v150 = ((2 * (v149 ^ 0x28)) & 0x472) + (v149 ^ 0x2D5);
  if (v150 <= 0x89)
    v151 = 7 * v150;
  else
    v151 = (7 * v150 - 960) % 0x3C0;
  LODWORD(STACK[0x5C0]) = v151;
  v152 = (v7 ^ 0xA3430538) + LODWORD(STACK[0x6C0]);
  LODWORD(STACK[0x5AC]) = v63;
  v153 = v152 + (v63 ^ 0xF4480186) + (v78 ^ v63) + 1042374151;
  v154 = ((2 * (v153 ^ (v4 - 1385875042 + (v63 ^ 0xBB7FE79)))) & 0xB47FB7CE)
       + (v153 ^ (v4 - 1385875042 + (v63 ^ 0xBB7FE79)) ^ 0xDA3FDBE7);
  v155 = (v77 + 1620689661 + v154) ^ v153;
  v156 = LODWORD(STACK[0x710]) - 1698315986;
  LODWORD(STACK[0x708]) = v59 + v156;
  LOBYTE(v156) = v156 ^ (LODWORD(STACK[0x700]) + 18);
  v157 = LODWORD(STACK[0x550]) + 1186586303;
  LODWORD(STACK[0x3C0]) = v157;
  v158 = (2 * (v58 + v157)) & 0xBD91CE8;
  v159 = v58 + v157 - 2048094604;
  LODWORD(STACK[0x658]) = v159;
  v160 = v159 - v158;
  v161 = ((v159 - v158) ^ 0x85EC8E74) >> (v156 & 0x18);
  v162 = LODWORD(STACK[0x560]) - v77 - ((2 * (LODWORD(STACK[0x560]) - v77) + 922351818) & 0x7DE0F2CA);
  v163 = v154 + (v63 ^ 0xBB7FE79) - ((2 * (v154 + (v63 ^ 0xBB7FE79)) - 2129933682) & 0xF9C25AE8) - 1117318469;
  LODWORD(STACK[0x710]) = v163;
  LOWORD(v152) = v163 & 0xF ^ 4 | v163 & 0xF ^ 0xB;
  LOBYTE(v163) = v160;
  LODWORD(STACK[0x690]) = v160;
  v164 = 7 * ((v160 >> 20) & 0xF ^ 0xE) + 3640;
  v165 = 7 * (((unsigned __int16)v160 >> 12) ^ 8) + 3640;
  v166 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7 * (v161 & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v161 & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v161 >> 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v161 >> 4) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v152 & (HIWORD(v160) ^ 0xC)) + 3640) % 0x3C0u) ^ 0xEC;
  v167 = 7 * ((v160 >> 8) & 0xF ^ 0xE) + 3640;
  v168 = 7 * ((v160 >> 4) ^ 7) + 3640;
  v169 = v168 - 960 * ((2185 * v168) >> 21);
  v170 = (v166 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v164
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v164) >> 16) >> 5))) ^ 0xEC) << 12);
  v171 = (v169 & 0x208) + (v163 & 0xF ^ 4) + (v169 & 0x208 ^ 0x208);
  v172 = v170 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v167
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v167) >> 16) >> 5))) ^ 0xEC;
  v173 = (v172 << 8) + 892453155 - ((v172 << 9) & 0x6A638200);
  v174 = v162 - 1704102454;
  v175 = 7 * (((v162 - 1704102454) >> 28) ^ 3) + 3640;
  v176 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v165
                                               - 960 * ((unsigned __int16)((2185 * v165) >> 16) >> 5))) ^ 0xEC;
  v177 = *(unsigned __int8 *)(v9 + (unsigned __int16)v169) ^ 0xEC;
  v178 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v171
                                               - 960 * ((unsigned __int16)((122339 * v171) >> 16) >> 8)));
  v179 = v173 ^ (v176 << 12);
  v180 = v173;
  LODWORD(STACK[0x688]) = v173;
  LOBYTE(v176) = v178 ^ 0xEC;
  v181 = (v179 ^ 0x3531C123 | v178 ^ 0xEC) ^ (16 * v177);
  v182 = 7 * (HIBYTE(v174) & 0xF ^ 0xE) + 3640;
  v183 = 7 * (~(v174 >> 20) & 0xF) + 3640;
  v184 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v182
                                                 - 960 * ((unsigned __int16)((2185 * v182) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v175 - 960 * ((unsigned __int16)((2185 * v175) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v174) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v174) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v185 = 7 * (((unsigned __int16)v174 >> 12) ^ 7) + 3640;
  v186 = (v184 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v183
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v183) >> 16) >> 5))) ^ 0xEC) << 12);
  v187 = 7 * ((v174 >> 8) & 0xF ^ 9) + 3640;
  v188 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v187
                                               - 960 * ((unsigned __int16)((2185 * v187) >> 16) >> 5))) ^ 0xEC ^ v186 ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v185 - 960 * ((unsigned __int16)((2185 * v185) >> 16) >> 5))) ^ 0xEC));
  v189 = (v188 << 8) + 360997445 - ((v188 << 9) & 0x2B08C400);
  v190 = 7 * ((v174 >> 4) ^ 6) + 3640;
  v191 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v174 & 0xF ^ 5)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v174 & 0xF ^ 5) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v192 = (v189 ^ 0x15846245 | v191) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v190
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v190) >> 16) >> 5))) ^ 0xEC));
  v193 = v176 & 0xF;
  LODWORD(STACK[0x660]) = v193;
  v194 = 7 * (v193 & 0xFFFFFF0F | (16 * (v191 & 0xF)));
  LODWORD(STACK[0x678]) = v181;
  v195 = 7 * (v192 & 0xF0 | (v181 >> 4));
  LODWORD(STACK[0x52C]) = v195;
  LODWORD(STACK[0x518]) = v194;
  if (v194 >= 0x3C0)
    v196 = v194 - 960;
  else
    v196 = 7 * (v193 & 0xFFFFFF0F | (16 * (v191 & 0xF)));
  LODWORD(STACK[0x5B0]) = v196;
  if (v195 >= 0x3C0)
    v197 = v195 - 960;
  else
    v197 = 7 * (v192 & 0xF0 | (v181 >> 4));
  LODWORD(STACK[0x5C4]) = v197;
  v198 = (v192 >> 4) & 0xF0 | (v181 >> 8) & 0xF;
  LODWORD(STACK[0x594]) = v198;
  if ((7 * v198) >= 0x3C0)
    v199 = 7 * v198 - 960;
  else
    v199 = 7 * v198;
  LODWORD(STACK[0x5D8]) = v199;
  LODWORD(STACK[0x680]) = v179;
  v200 = 7 * ((v188 & 0xF0 | ((unsigned __int16)v179 >> 12)) ^ 0xC);
  LODWORD(STACK[0x650]) = v189;
  v201 = 7 * (((v189 >> 12) & 0xF0 | HIWORD(v179) & 0xF) ^ 0x41);
  v202 = STACK[0x62C];
  v203 = (6 - LODWORD(STACK[0x62C])) | (LODWORD(STACK[0x62C]) + 9);
  v204 = (v180 >> 20) ^ 0x353;
  LODWORD(STACK[0x630]) = v204;
  v205 = 7 * ((v203 & v204 & 0xF | (16 * ((v189 >> 20) & 0xF))) ^ 0x80);
  v206 = 7 * (((v189 >> 20) & 0xF0 | (v204 >> 4)) ^ 0x50);
  v207 = (v60 - 440997056 - ((2 * v60) & 0xCB6DD680)) ^ v202;
  v208 = LODWORD(STACK[0x6A0]) - ((2 * v62 - 1167264132) & 0xDB20FD60);
  v209 = v154 + 633349145 + v155;
  LODWORD(STACK[0x6C0]) = v155 + 1021146416 - ((2 * v155) & 0x79BAEA60);
  v210 = v77 + 1489241569 + (v209 ^ 0xDCF3890C);
  v211 = 7 * (HIBYTE(v208) & 0xF ^ 0xD) + 3640;
  v212 = LODWORD(STACK[0x614]) ^ 0xE2B13EDE;
  LODWORD(STACK[0x538]) = v212;
  v213 = 7 * ((v208 >> 20) & 0xF ^ 9) + 3640;
  v214 = ((((*(unsigned __int8 *)(v9
                                + (unsigned __int16)(v211
                                                   - 960 * ((unsigned __int16)((2185 * v211) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v208 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v208 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v208) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v208) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v213 - 960 * ((unsigned __int16)((2185 * v213) >> 16) >> 5))) ^ 0xEC) << 12);
  LODWORD(STACK[0x6A0]) = v208;
  v215 = 7 * (((unsigned __int16)v208 >> 12) ^ 7) + 3640;
  LOWORD(v213) = v215 - 960 * ((unsigned __int16)((2185 * v215) >> 16) >> 5);
  v216 = 7 * ((v208 >> 8) & 0xF ^ 0xE) + 3640;
  v217 = 7 * ((v208 >> 4) ^ 0xB) + 3640;
  v218 = v214 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v216
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v216) >> 16) >> 5))) ^ 0xEC;
  v219 = (v218 << 8) + 2072353853 - ((v218 << 9) & 0xF70B3800);
  v220 = v212 - v210 - ((2 * (v212 - v210)) & 0x739A8798) + 969753548;
  v221 = (STACK[0x598] & 0x208) + ((v220 >> 28) ^ 3) + (STACK[0x598] & 0x208 ^ 0x208);
  v222 = 7 * v221 - 960 * ((unsigned __int16)((122339 * v221) >> 16) >> 8);
  v223 = v219 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v213) ^ 0xEC) << 12);
  v224 = *(unsigned __int8 *)(v9 + LODWORD(STACK[0x598]));
  v225 = v224 ^ 0xEC;
  v226 = v223;
  v227 = (v223 ^ 0x7B859C3D | v224 ^ 0xEC) ^ (16
                                            * (*(unsigned __int8 *)(v9
                                                                  + (unsigned __int16)(v217
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * v217) >> 16) >> 5))) ^ 0xEC));
  v228 = 7 * (HIBYTE(v220) & 0xF ^ 9) + 3640;
  v229 = *(unsigned __int8 *)(v9 + v222);
  v230 = 7 * ((BYTE2(v220) ^ 0xCD) >> ((v229 & 4 ^ 4) + (v229 & 4))) + 3640;
  v231 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v228
                                                 - 960 * ((unsigned __int16)((2185 * v228) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((v229 ^ 0xEC) << 12);
  v232 = 7 * ((BYTE2(v220) ^ 0xCD) & 0xF) + 3640;
  v233 = v231 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v232
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v232) >> 16) >> 5))) ^ 0xEC;
  v234 = 7 * (((unsigned __int16)v220 >> 12) ^ 4) + 3640;
  v235 = 7 * ((v220 >> 8) & 0xF ^ 3) + 3640;
  v236 = (v233 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v230
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v230) >> 16) >> 7))) ^ 0xEC) << 12);
  v237 = 7
       * (((v212 - (v77 - 31 + (v209 ^ 0xC)) - ((2 * (v212 - (v77 - 31 + (v209 ^ 0xC)))) & 0x98) - 52) >> 4) ^ 0xC)
       + 3640;
  v238 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v237
                                               - 960 * ((unsigned __int16)((2185 * v237) >> 16) >> 5)));
  LOWORD(v237) = 7 * (v220 & 0xF ^ 0xC)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v220 & 0xF ^ 0xC) + 3640)) >> 16) >> 5);
  v239 = v236 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v235
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v235) >> 16) >> 5))) ^ 0xEC;
  v240 = (v239 << 8) + 1657012595 - ((v239 << 9) & 0xC5880200);
  v241 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v234
                                               - 960 * ((unsigned __int16)((2185 * v234) >> 16) >> 5))) ^ 0xEC;
  v242 = *(unsigned __int8 *)(v9 + (unsigned __int16)v237);
  v243 = v240 ^ (v241 << 12);
  v244 = (v243 ^ 0x62C40173 | v242 ^ 0xEC) ^ (16 * (v238 ^ 0xEC));
  v245 = 7 * ((v238 & 0xF ^ 3 | v238 & 0xF ^ 0xC) & (v224 ^ 0xC) & 0xFFFFFF0F | (16 * ((v242 ^ 0xEC) & 0xF)));
  v246 = (unsigned __int16)(7
                          * ((v238 & 0xF ^ 3 | v238 & 0xF ^ 0xC) & (v224 ^ 0xC) & 0xFF0F | (16 * ((v242 ^ 0xEC) & 0xF)))
                          + 3983)
       % 0x3C0u;
  LODWORD(STACK[0x508]) = v200;
  if (v200 >= 0x3C0)
    v247 = v200 - 960;
  else
    v247 = v200;
  LODWORD(STACK[0x514]) = v247;
  LODWORD(STACK[0x510]) = v201;
  if (v201 >= 0x3C0)
    v248 = v201 - 960;
  else
    v248 = v201;
  LODWORD(STACK[0x524]) = v248;
  LODWORD(STACK[0x590]) = v205;
  if (v205 >= 0x3C0)
    v249 = v205 - 960;
  else
    v249 = v205;
  LODWORD(STACK[0x528]) = v249;
  LODWORD(STACK[0x59C]) = v206;
  if (v206 >= 0x3C0)
    v250 = v206 - 960;
  else
    v250 = v206;
  LODWORD(STACK[0x598]) = v250;
  if (v245 >= 0x3C0)
    v245 -= 960;
  v251 = *(unsigned __int8 *)(v9 + v246) ^ 0xEC;
  v252 = 7 * ((v251 + 1796969462 - ((2 * v251) & 0x1EC)) ^ v113);
  v253 = (v252 + 3983) % 0x3C0;
  LODWORD(STACK[0x62C]) = v227;
  v254 = 7 * (v244 & 0xF0 | (v227 >> 4));
  v255 = (*(unsigned __int8 *)(v9 + v252 % 0x3C0) >> 4) ^ 0xE;
  v256 = 7 * ((v255 - ((2 * v255) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v245)) + 3983;
  v257 = v256 - 960 * ((8739 * v256) >> 23);
  if (v254 >= 0x3C0)
    v258 = v254 - 960;
  else
    v258 = 7 * (v244 & 0xF0 | (v227 >> 4));
  v259 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v254 + 3983) % 0x3C0u) ^ (16
                                                                              * (*(unsigned __int8 *)(v9 + (unsigned __int16)v257) ^ 0xEC)) ^ 0xEC;
  v260 = 7 * v259;
  v259 *= 244671;
  v261 = v260 - 960 * ((v259 + 139217799) >> 25);
  v262 = 7 * ((v244 >> 4) & 0xF0 | (v227 >> 8) & 0xF);
  v263 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v260 - 960 * (v259 >> 25))) >> 4) ^ 0xE;
  v264 = 7 * ((v263 - ((2 * v263) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v258)) + 3983;
  v265 = 16
       * (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(v264
                                                - 960 * ((unsigned __int16)((8739 * v264) >> 16) >> 7))) ^ 0xEC);
  v266 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v262 + 3983) % 0x3C0u) ^ 0xEC;
  v267 = (v265 | v266) & 0x4040404 | v266 & 0xFFFFFFFB ^ v265 & 0xFFFFFBFF;
  v268 = v262 - 960;
  if (v262 < 0x3C0)
    v268 = v262;
  v269 = 7 * v267 + 3983 - 960 * ((34953 * (7 * v267 + 3983)) >> 25);
  v270 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v267 - 960 * ((unsigned __int16)((244671 * v267) >> 16) >> 9))) >> 4;
  v271 = 7
       * (((v270 ^ 0xE) + ((2 * ((v270 ^ 0xE | 0x7C) ^ v270)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + v268))
       + 3983;
  LOWORD(v271) = v271 - 960 * ((unsigned __int16)((8739 * v271) >> 16) >> 7);
  LODWORD(STACK[0x614]) = v226;
  v272 = ((unsigned __int16)v226 >> 12) ^ 9 ^ ((unint64_t)((unsigned __int16)v243 >> 12) << ((v271 | 0x2E)
                                                                                                  - (v271 & 0xD1u)
                                                                                                  - 42));
  v273 = *(unsigned __int8 *)(v9 + (7 * v272 + 3983) % 0x3C0u);
  v274 = v273 ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)v271) ^ 0xEC));
  v275 = v272 * ((v273 ^ 3) & 7 | v273 & 7 ^ 4u) % 0x3C0;
  v274 ^= 0xECu;
  v276 = (unsigned __int16)(7 * v274 + 3983) % 0x3C0u;
  v277 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v274
                                               - 960 * ((unsigned __int16)((244671 * v274) >> 16) >> 9))) >> 4;
  LOBYTE(v275) = *(_BYTE *)(v9 + v275) ^ v277 ^ 0xE2;
  v278 = 7 * (((v277 ^ 1) + (v277 ^ 0xE)) & (HIWORD(v226) ^ 5) ^ (v243 >> 12) & 0xF0 ^ 0x40);
  v279 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v278 + 3983) % 0x3C0u) ^ (16
                                                                              * (*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v275 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v275 + 3983)) >> 16) >> 7))) ^ 0xEC));
  if (v278 >= 0x3C0)
    v278 -= 960;
  v280 = v279 ^ 0xEC;
  v281 = (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(7 * v280
                                                - 960 * ((unsigned __int16)((244671 * v280) >> 16) >> 9))) >> 4) ^ 0xE;
  v282 = 7 * ((v281 + (~(2 * v281) | 0xE7) - 19) ^ *(unsigned __int8 *)(v9 + v278)) + 3983;
  v283 = 7 * ((((v219 >> 20) ^ 0xFFFFF848) + ((v219 >> 20) & 0xFF0 ^ 0x7BF) + 1) ^ HIWORD(v240) & 0xF0 ^ 0xC0);
  v284 = *(unsigned __int8 *)(v9 + (v283 + 3983) % 0x3C0) ^ (16
                                                           * (*(unsigned __int8 *)(v9
                                                                                 + (unsigned __int16)(v282 - 960 * ((unsigned __int16)((8739 * v282) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v285 = 7 * v284 + 3983 - 960 * ((34953 * (7 * v284 + 3983)) >> 25);
  v286 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v284
                                               - 960 * ((unsigned __int16)((244671 * v284) >> 16) >> 9)));
  v287 = 7
       * ((((v286 >> 4) ^ 0xE) - 2 * (((v286 >> 4) ^ 0xE) & 0xFD ^ ((v286 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + v283 % 0x3C0))
       + 3983;
  LODWORD(STACK[0x504]) = v219;
  v288 = 7 * (((v240 >> 20) & 0xF0 | HIBYTE(v219) & 0xF) ^ 0x2B);
  v289 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v288 + 3983) % 0x3C0u) ^ (16
                                                                              * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v287 - 960 * ((unsigned __int16)((8739 * v287) >> 16) >> 7))) ^ 0xEC));
  v290 = *(unsigned __int8 *)(v9 + v253) ^ 0xEC;
  v291 = v290 ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v261 + 3983)) ^ 0xEC)) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v269) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + v276) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v280 - 960 * ((244671 * v280 + 139217799) >> 25) + 3983)) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v285) ^ 0xEC) << 20);
  v292 = v288 - 960;
  if (v288 < 0x3C0)
    v292 = 7 * (((v240 >> 20) & 0xF0 | HIBYTE(v219) & 0xF) ^ 0x2B);
  v293 = v289 ^ 0xEC;
  v294 = 7 * v293;
  v293 *= 244671;
  v295 = v294 - 960 * ((v293 + 139217799) >> 25);
  LOWORD(v293) = v294 - 960 * (v293 >> 25);
  v296 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v295 + 3983)) ^ 0xEC) << 24;
  v297 = *(unsigned __int8 *)(v9 + (unsigned __int16)v293) >> 4;
  v298 = ((v297 ^ 0xE) + ((2 * ((v297 ^ 0xE | 0x7C) ^ v297)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + v292);
  v299 = v296 & 0x27000000 ^ v291 & 0x7169850 | v296 & 0xD8000000 ^ v291 & 0x8E967AF;
  LODWORD(STACK[0x4F8]) = v299 + 1821170618 - 2 * (v299 & 0x6C8CDBBF ^ v290 & 5);
  v300 = 7 * ((HIBYTE(v240) & 0xF0 | (v219 >> 28)) ^ 0x67) + 3983;
  v301 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v9
                                                                     + (unsigned __int16)(v300
                                                                                        - 960
                                                                                        * ((unsigned __int16)((8739 * v300) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v298 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v298 + 3983)) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC)
                                               + 3983)
                            % 0x3C0u);
  LODWORD(STACK[0x4FC]) = v301;
  v302 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7
                                               * (v225 & 0xF | (16
                                                              * (((v299 - 9286 - 2 * (v299 & 0xDBBF ^ v290 & 5)) ^ 0x1A) & (20 - (v301 & 5 ^ 4 | v301 & 5 ^ 1)))))
                                               + 1813)
                            % 0x3C0u);
  LODWORD(STACK[0x4EC]) = v302;
  v303 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v302 & 0xF ^ 0xC)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v302 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x4F4]) = v303;
  v304 = (v303 ^ 3) & 0xF | v303 & 0xF ^ 0xC;
  v305 = (v207 ^ 0x3945624C) + LODWORD(STACK[0x6F8]);
  v306 = (LODWORD(STACK[0x564]) ^ 0xF79DED2D) - 1944238268 + v305;
  v307 = v306 - ((2 * v306) & 0x57527CE0) + 732511856;
  v308 = v207 ^ LODWORD(STACK[0x708]);
  v309 = (v207 ^ 0x3945624C) - 169560882;
  v310 = v308 ^ 0xF62E13CA;
  v311 = (-1800351891 - ((v309 + v310) & 0x20)) ^ (v309 + v310) & 0xFFFFFFDF;
  v312 = ((2 * v311) & 0x6DFB3FFA) + (v311 ^ 0xB6FD9FFD);
  v313 = 7 * ((v307 >> 20) & 0xF ^ 0xA) + 3640;
  v314 = 7 * (HIWORD(v307) & 0xF ^ 9) + 3640;
  v315 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7 * (v304 & (HIBYTE(v307) ^ 0x2B))
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((8739
                                                                                    * (7
                                                                                     * (v304 & (HIBYTE(v307) ^ 0x2B))
                                                                                     + 3640)) >> 16) >> 7))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v307 >> 28) ^ 2) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v307 >> 28) ^ 2) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(v314 - 960 * ((unsigned __int16)((2185 * v314) >> 16) >> 5))) ^ 0xEC;
  v316 = v307;
  v317 = 7 * ((v307 >> 8) & 0xF ^ 0xE) + 3640;
  LOWORD(v307) = v317 - 960 * ((unsigned __int16)((2185 * v317) >> 16) >> 5);
  LODWORD(STACK[0x500]) = v316;
  v318 = 7 * (((unsigned __int16)v316 >> 12) ^ 3) + 3640;
  v319 = v318 - 960 * ((unsigned __int16)((2185 * v318) >> 16) >> 5);
  v320 = (v315 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v313
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v313) >> 16) >> 5))) ^ 0xEC) << 12);
  v321 = v312;
  v322 = v209 ^ 0xE02EFC3C;
  v323 = LODWORD(STACK[0x6C0]) ^ v209 ^ 0xE02EFC3C;
  v324 = v323 - 169560882 + v210;
  v325 = LODWORD(STACK[0x55C]) - v324;
  LOBYTE(v313) = v325 + 29;
  v326 = v325 - 1629901283 - ((2 * v325 - 1796589430) & 0xA8C923B0);
  v327 = *(unsigned __int8 *)(v9 + (unsigned __int16)v307);
  v328 = (((883 - v312) ^ (v312 + 140)) & 0x208) + (HIBYTE(v326) & 0xF ^ 4);
  v329 = ((v320 | v327 ^ 0xEC) << 8) - 1696540263 - (((v320 | v327 ^ 0xEC) << 9) & 0x35C1B200);
  LOWORD(v320) = 7 * v328 - 960 * ((unsigned __int16)((15295 * v328) >> 16) >> 5);
  v330 = 7 * (HIWORD(v326) & 0xF ^ 4) + 3640;
  v331 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)v320) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9
                                                                                                  + (unsigned __int16)(7 * ((v326 >> 28) ^ 5) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v326 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12);
  v332 = 7 * ((v326 >> 20) & 0xF ^ 6) + 3640;
  v333 = v331 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v330
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v330) >> 16) >> 5))) ^ 0xEC;
  v334 = 7 * (((unsigned __int16)(v326 & 0xF000) >> 12) ^ 9) + 3640;
  v335 = (v333 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v332
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v332) >> 16) >> 5))) ^ 0xEC) << 12);
  v336 = 7 * ((v326 >> 8) & 0xF ^ 1) + 3640;
  v337 = v335 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v336
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v336) >> 16) >> 5))) ^ 0xEC;
  v338 = v329 ^ ((*(unsigned __int8 *)(v9 + v319) ^ 0xEC) << 12);
  v339 = (v337 << 8) - ((v337 << 9) & 0x3184F600) - 1732084740;
  v340 = v339 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v334
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v334) >> 16) >> 5))) ^ 0xEC) << 12);
  LODWORD(STACK[0x4C4]) = v340;
  v341 = v339;
  LODWORD(STACK[0x4BC]) = v338;
  v342 = 7 * (((v340 >> 12) & 0xF0 | HIWORD(v338) & 0xF) ^ 0x20);
  LODWORD(STACK[0x4D8]) = (unsigned __int16)(v342 + 3983)
                        % (((112 - (_WORD)v342) & 0x3C0) + (((_WORD)v342 + 3983) & 0x3C0u));
  v343 = v323 ^ LODWORD(STACK[0x710]);
  v344 = ((v343 ^ 0xBB730A12) + 1021146416 - ((2 * (v343 ^ 0xBB730A12)) & 0x79BAEA60)) ^ v322;
  v345 = 7 * ((v316 >> 4) ^ 7) + 3640;
  v346 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v306 & 0xF)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v306 & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v347 = (v338 ^ 0x9AE0D999 | v346) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v345
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v345) >> 16) >> 5))) ^ 0xEC));
  LODWORD(STACK[0x4B0]) = v347;
  v348 = 7 * ((v326 >> 4) ^ 0xD) + 3640;
  v349 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v313 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v313 & 0xF ^ 8u) + 3640)) >> 16) >> 5))) ^ 0xEC;
  LODWORD(STACK[0x4AC]) = v349;
  v350 = v346 & 0xF;
  LODWORD(STACK[0x4E0]) = v350;
  v351 = 7 * (v350 & 0xFFFFFF0F | (16 * (v349 & 0xF)));
  v352 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v348
                                               - 960 * ((unsigned __int16)((2185 * v348) >> 16) >> 5))) ^ 0xEC;
  LODWORD(STACK[0x4A8]) = 16 * v352;
  v353 = 7 * ((((v341 ^ (16 * v352 - ((32 * v352) & 0x7A0) + 985)) >> 4) & 0xF0 | (v347 >> 8) & 0xF) ^ 0x80);
  LODWORD(STACK[0x4B8]) = v353;
  LODWORD(STACK[0x4A4]) = v351;
  if (v351 >= 0x3C0)
    v351 -= 960;
  LODWORD(STACK[0x4B4]) = v351;
  if (v353 >= 0x3C0)
    v353 -= 960;
  LODWORD(STACK[0x4C0]) = v353;
  if (v342 >= 0x3C0)
    v354 = v342 - 960;
  else
    v354 = v342;
  LODWORD(STACK[0x4D0]) = v354;
  LODWORD(STACK[0x4CC]) = v341;
  LODWORD(STACK[0x4C8]) = v329;
  v355 = 7 * ((HIWORD(v341) & 0xF0 | (v329 >> 20) & 0xF) ^ 0xCE);
  v356 = 7 * (((v341 >> 20) & 0xF0 | HIBYTE(v329) & 0xF) ^ 0x8A);
  v357 = LODWORD(STACK[0x534]) ^ 0x7ED7452A;
  LODWORD(STACK[0x498]) = v308;
  v358 = (v357 ^ v308)
       + ((v310 + 1598753077) ^ 0xA0B4F6CB)
       + ((2 * (v310 + 1598753077)) & 0x4169ED96)
       - v321
       - 1857056533;
  v359 = ((2 * v358) & 0xBFFE3772 ^ 0x174C0762) + (v358 ^ 0xD459BC4A);
  LODWORD(STACK[0x4F0]) = v359;
  v360 = v305 + (v308 ^ 0x1F3A65DC);
  v361 = v305 + 705712754 + v359;
  v362 = LODWORD(STACK[0x618]) ^ 0x1245D534;
  LODWORD(STACK[0x534]) = v362;
  v363 = v361 + v362 - ((2 * (v361 + v362)) & 0x5BE84598);
  LODWORD(STACK[0x6F8]) = v343;
  v364 = (v343 ^ 0x338A5CF2) + v323 - 169560882;
  v365 = (v343 ^ 0x338A5CF2) - (v364 ^ 0x94B0CF6D) - 632164114 + v344;
  v366 = ((2 * (v364 ^ 0x94B0CF6D)) & 0xAD858B32) + (v364 ^ 0x42720AF4);
  v367 = ((2 * v365) & 0xBEEF3BCA ^ 0x164D0BC2) + (v365 ^ 0x54D13A16);
  LODWORD(STACK[0x618]) = v367;
  v363 -= 1376509236;
  v368 = v324 + (v343 ^ 0xDA9E2AE4);
  v369 = v324 - 1765231493 + v367;
  v370 = LODWORD(STACK[0x56C])
       - 1425278922
       - v369
       - 2053
       - ((2 * (LODWORD(STACK[0x56C]) - 1425278922 - v369 - 2053)) & 0x9D3E2168);
  v371 = 7 * (HIBYTE(v363) & 0xF ^ 0xD) + 3640;
  v372 = 7 * (~(v363 >> 20) & 0xF) + 3640;
  v373 = v372 - 960 * ((unsigned __int16)((2185 * v372) >> 16) >> 5);
  v374 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v371
                                                 - 960 * ((unsigned __int16)((2185 * v371) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v363 >> 28) ^ 0xA) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v363 >> 28) ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12);
  v375 = 7 * (HIWORD(v363) & 0xF ^ 4) + 3640;
  v376 = v374 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v375
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v375) >> 16) >> 5))) ^ 0xEC;
  v377 = 7 * (((unsigned __int16)v363 >> 12) ^ 2) + 3640;
  LOWORD(v372) = v377 - 960 * ((unsigned __int16)((2185 * v377) >> 16) >> 5);
  v378 = (v376 << 8) ^ ((*(unsigned __int8 *)(v9 + v373) ^ 0xEC) << 12);
  v379 = 7 * ((v363 >> 8) & 0xF ^ 2) + 3640;
  v380 = 7 * ((v363 >> 4) ^ 0xC) + 3640;
  v381 = v378 | *(unsigned __int8 *)(v9
                                   + (unsigned __int16)(v379
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v379) >> 16) >> 5))) ^ 0xEC;
  v382 = (v381 << 8) - 623534740 - ((v381 << 9) & 0xB5AB3A00);
  v383 = 7 * (((v370 + 1319047348) >> 28) ^ 4) + 3640;
  v384 = v383 - 960 * ((unsigned __int16)((2185 * v383) >> 16) >> 5);
  v385 = (((v370 + 1319047348) >> 24) & 7 ^ 6 | ((v370 + 1319047348) >> 24) & 7 ^ 1)
       * ((((v370 + 1319047348) >> 24) & 0xF ^ 0xE) + 520);
  v386 = v385 - 960 * ((unsigned __int16)((2185 * v385) >> 16) >> 5);
  v387 = v382 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v372) ^ 0xEC) << 12);
  v388 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v363 & 0xF ^ 0xC)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v363 & 0xF ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v389 = (v387 ^ 0xDAD59D6C | v388) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v380
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v380) >> 16) >> 5))) ^ 0xEC));
  v390 = 7 * (((v370 + 1319047348) >> 20) & 0xF ^ 9) + 3640;
  v391 = ((*(unsigned __int8 *)(v9 + v386) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + v384) ^ 0xEC) << 12);
  v392 = 7 * (~((v370 + 1319047348) >> 16) & 0xF) + 3640;
  v393 = 7 * (((unsigned __int16)(v370 + 4276) >> 12) ^ 1) + 3640;
  v394 = v391 | *(unsigned __int8 *)(v9 + (unsigned __int16)(v392 - 960 * ((unsigned __int16)((2185 * v392) >> 16) >> 5))) ^ 0xEC;
  v395 = 7 * (((v370 + 1319047348) >> 8) & 0xF) + 3640;
  v396 = 7
       * (((LOBYTE(STACK[0x56C])
                           + 54
                           - v369
                           - 5
                           - ((2 * (LOBYTE(STACK[0x56C]) + 54 - v369 - 5)) & 0x68)
                           - 76) >> 4) ^ 0xB)
       + 3640;
  v397 = (v394 << 8) ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v390
                                                               - 960 * ((unsigned __int16)((2185 * v390) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(v395 - 960 * ((unsigned __int16)((2185 * v395) >> 16) >> 5))) ^ 0xEC;
  v398 = 7
       * ((LOBYTE(STACK[0x56C])
         + 54
         - (_BYTE)v369
         - 5
         - ((2 * (LOBYTE(STACK[0x56C]) + 54 - (_BYTE)v369 - 5)) & 0x68)
         - 60) & 0xF ^ 4)
       + 3640;
  v399 = ((v397 << 8) - 1516339593 - ((v397 << 9) & 0x4B3CFC00)) ^ ((*(unsigned __int8 *)(v9
                                                                                        + (unsigned __int16)(v393 - 960 * ((unsigned __int16)((2185 * v393) >> 16) >> 5))) ^ 0xEC) << 12);
  v400 = (v397 << 8) - 1516339593 - ((v397 << 9) & 0x4B3CFC00);
  v401 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v398
                                               - 960 * ((unsigned __int16)((2185 * v398) >> 16) >> 5))) ^ 0xEC;
  v402 = (v399 ^ 0xA59E7E77 | v401) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v396
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v396) >> 16) >> 5))) ^ 0xEC));
  LODWORD(STACK[0x490]) = v388 & 0xF;
  v403 = 7 * (v388 & 0xF | (16 * (v401 & 0xF)));
  LODWORD(STACK[0x488]) = v389;
  v404 = 7 * (v402 & 0xF0 | (v389 >> 4));
  v405 = 7 * ((v402 >> 4) & 0xF0 | (v389 >> 8) & 0xF);
  LODWORD(STACK[0x484]) = v387;
  v406 = 7 * (((v399 >> 8) & 0xF0 | ((unsigned __int16)v387 >> 12)) ^ 0x79);
  v407 = 7 * (((v399 >> 12) & 0xF0 | HIWORD(v387) & 0xF) ^ 0xE5);
  LODWORD(STACK[0x480]) = v400;
  LODWORD(STACK[0x47C]) = v382;
  v408 = 7 * ((HIWORD(v400) & 0xF0 | (v382 >> 20) & 0xF) ^ 0x9D);
  v409 = 7 * (((v400 >> 20) & 0xF0 | HIBYTE(v382) & 0xF) ^ 0x5A);
  LODWORD(STACK[0x478]) = v321;
  v410 = v360 - 1445686329 + v321;
  LODWORD(STACK[0x6C0]) = v363 ^ v410;
  v411 = v410 ^ (v321 + 51744829);
  LODWORD(STACK[0x474]) = v411;
  LODWORD(STACK[0x468]) = v361 ^ 0x7CE5DB61;
  v412 = LODWORD(STACK[0x548]) + 487298864;
  v413 = (v361 ^ 0x7CE5DB61) - v411;
  LODWORD(STACK[0x46C]) = v413;
  LODWORD(STACK[0x3BC]) = v412;
  v414 = v413 + v412;
  LOBYTE(v413) = v414 + 72;
  v415 = v414 + 454833480 - ((2 * v414) & 0x36386A90);
  LOWORD(v414) = 7 * ((v415 >> 28) ^ 1)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * ((v415 >> 28) ^ 1) + 3640)) >> 16) >> 5);
  v416 = 7 * (HIBYTE(v415) & 0xF ^ 0xB) + 3640;
  v417 = v368 + 1983926880 + v366;
  LODWORD(STACK[0x45C]) = v417;
  v418 = v366 - 481269087;
  LODWORD(STACK[0x464]) = v366 - 481269087;
  v369 ^= 0x7CE5DB61u;
  LODWORD(STACK[0x460]) = v369;
  v419 = LODWORD(STACK[0x624]) ^ 0x9AFB0F18;
  LODWORD(STACK[0x624]) = v417 ^ v418;
  v420 = v369 - (v417 ^ v418);
  LODWORD(STACK[0x458]) = v420;
  LODWORD(STACK[0x530]) = v419;
  v421 = v419 - v420 - ((2 * (v419 - v420)) & 0x62359708);
  v422 = 7 * ((v415 >> 20) & 0xF ^ 1) + 3640;
  LOWORD(v420) = v422 - 960 * ((unsigned __int16)((2185 * v422) >> 16) >> 5);
  v423 = v415;
  v424 = 7 * (HIWORD(v415) & 0xF ^ 0xC) + 3640;
  LOWORD(v418) = v424 - 960 * ((unsigned __int16)((2185 * v424) >> 16) >> 5);
  v425 = 7 * (((unsigned __int16)v415 >> 12) ^ 3) + 3640;
  LODWORD(STACK[0x470]) = v415;
  v426 = 7 * ((v415 >> 8) & 0xF ^ 5) + 3640;
  v427 = (((*(unsigned __int8 *)(v9
                               + (unsigned __int16)(v416
                                                  - 960 * ((unsigned __int16)((2185 * v416) >> 16) >> 5))) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v414) ^ 0xEC) << 20) | ((*(unsigned __int8 *)(v9 + (unsigned __int16)v418) ^ 0xEC) << 8)) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v420) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(v426 - 960 * ((unsigned __int16)((2185 * v426) >> 16) >> 5))) ^ 0xEC;
  v428 = 7 * ((v423 >> 4) ^ 4) + 3640;
  v429 = (v427 << 8) - 45554097 - ((v427 << 9) & 0xFA91CC00);
  v421 += 823839620;
  v430 = 7 * (HIBYTE(v421) & 0xF ^ 1) + 3640;
  v431 = 7 * ((v421 >> 20) & 0xF ^ 1) + 3640;
  v432 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v430
                                                 - 960 * ((unsigned __int16)((2185 * v430) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v421 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v421 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12);
  v433 = 7 * (HIWORD(v421) & 0xF ^ 0xA) + 3640;
  v434 = v429 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v425
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v425) >> 16) >> 5))) ^ 0xEC) << 12);
  v435 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v413 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v413 & 0xF ^ 8u) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v436 = v434;
  v437 = (v434 ^ 0xFD48E64F | v435) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v428
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v428) >> 16) >> 5))) ^ 0xEC));
  v438 = 7 * (((unsigned __int16)v421 >> 12) ^ 0xC) + 3640;
  v439 = ((v432 | *(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v433
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v433) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v431 - 960 * ((unsigned __int16)((2185 * v431) >> 16) >> 5))) ^ 0xEC) << 12);
  v440 = 7 * ((v421 >> 8) & 0xF ^ 0xB) + 3640;
  v441 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v440
                                               - 960 * ((unsigned __int16)((2185 * v440) >> 16) >> 5))) ^ 0xEC;
  v442 = (v439 | v441) + 1322822727 - 2 * ((v439 | v441) & 0x4ED8AC7F ^ v441 & 0x10);
  v443 = 7 * ((v421 >> 4) ^ 8) + 3640;
  LOWORD(v417) = 7 * (v421 & 0xF ^ 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v421 & 0xF ^ 4) + 3640)) >> 16) >> 5);
  v444 = (v442 + 40) & 0x7FFFFDC7;
  v445 = (((v442 + 40) << 8) ^ 0xD8AC6F00) + 1421164269 - ((2 * (((v442 + 40) << 8) ^ 0xD8AC6F00)) & 0xA96A7C00);
  v446 = v445 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v438
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v438) >> 16) >> 5))) ^ 0xEC) << 12);
  v447 = *(unsigned __int8 *)(v9 + (unsigned __int16)v417) ^ 0xEC;
  v448 = (v446 ^ 0x54B53EED | v447) ^ (16
                                     * (*(unsigned __int8 *)(v9
                                                           + (unsigned __int16)(v443
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v443) >> 16) >> 5))) ^ 0xEC));
  v449 = v435 & 0xF;
  LODWORD(STACK[0x454]) = v449;
  v450 = 7 * (v449 & 0xFFFFFF0F | (16 * (v447 & 0xF)));
  v451 = (unsigned __int16)(v450 + 3983) % 0x3C0u;
  LODWORD(STACK[0x3F0]) = v355;
  if (v355 >= 0x3C0)
    v452 = v355 - 960;
  else
    v452 = v355;
  LODWORD(STACK[0x3E0]) = v452;
  LODWORD(STACK[0x400]) = v356;
  if (v356 >= 0x3C0)
    v453 = v356 - 960;
  else
    v453 = v356;
  LODWORD(STACK[0x3EC]) = v453;
  LODWORD(STACK[0x428]) = v403;
  if (v403 >= 0x3C0)
    v454 = v403 - 960;
  else
    v454 = v403;
  LODWORD(STACK[0x41C]) = v454;
  LODWORD(STACK[0x430]) = v404;
  if (v404 >= 0x3C0)
    v455 = v404 - 960;
  else
    v455 = v404;
  LODWORD(STACK[0x420]) = v455;
  LODWORD(STACK[0x438]) = v405;
  if (v405 >= 0x3C0)
    v456 = v405 - 960;
  else
    v456 = v405;
  LODWORD(STACK[0x424]) = v456;
  LODWORD(STACK[0x440]) = v406;
  if (v406 >= 0x3C0)
    v457 = v406 - 960;
  else
    v457 = v406;
  LODWORD(STACK[0x42C]) = v457;
  LODWORD(STACK[0x448]) = v407;
  if (v407 >= 0x3C0)
    v458 = v407 - 960;
  else
    v458 = v407;
  LODWORD(STACK[0x434]) = v458;
  LODWORD(STACK[0x44C]) = v408;
  if (v408 >= 0x3C0)
    v459 = v408 - 960;
  else
    v459 = v408;
  LODWORD(STACK[0x43C]) = v459;
  LODWORD(STACK[0x450]) = v409;
  if (v409 >= 0x3C0)
    v460 = v409 - 960;
  else
    v460 = v409;
  LODWORD(STACK[0x444]) = v460;
  if (v450 >= 0x3C0)
    v450 -= 960;
  v461 = *(unsigned __int8 *)(v9 + v451) ^ 0xEC;
  v462 = STACK[0x6F4];
  v463 = (v461 + 1796969462 - ((2 * v461) & 0x1EC)) ^ LODWORD(STACK[0x6F4]);
  v464 = 7 * v463 % 0x3C0u;
  v465 = 7 * (v463 - (v444 ^ 0x4ED8AC47 | v444 ^ 0xB1275180)) % 0x3C0;
  v466 = (((*(_BYTE *)(v9 + v464) >> 4) ^ 0xE)
                         - ((2 * ((*(_BYTE *)(v9 + v464) >> 4) ^ 0xE)) & 0x18)
                         - 20) ^ *(unsigned __int8 *)(v9 + v450);
  v467 = 7 * (v448 & 0xF0 | (v437 >> 4));
  v468 = 7 * v466 + 3983 - 960 * ((8739 * (7 * v466 + 3983)) >> 23);
  if (v467 >= 0x3C0)
    v467 -= 960;
  v469 = *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v448 & 0xF0 | (v437 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)v468) ^ 0xEC)) ^ 0xEC;
  v470 = 7 * v469;
  v469 *= 244671;
  v471 = v470 - 960 * ((v469 + 139217799) >> 25);
  LOWORD(v469) = v470 - 960 * (v469 >> 25);
  v472 = *(unsigned __int8 *)(v9 + v465) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v471 + 3983)) ^ 0xEC));
  v473 = (*(unsigned __int8 *)(v9 + (unsigned __int16)v469) >> 4) ^ 0xE;
  v474 = 7 * ((v473 - ((2 * v473) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v467)) + 3983;
  v475 = v474 - 960 * ((8739 * v474) >> 23);
  v476 = 7 * ((v448 >> 4) & 0xF0 | (v437 >> 8) & 0xF);
  v477 = v476 - 960;
  if (v476 < 0x3C0)
    v477 = 7 * ((v448 >> 4) & 0xF0 | (v437 >> 8) & 0xF);
  v478 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v476 + 3983) % 0x3C0u) ^ (16
                                                                              * (*(unsigned __int8 *)(v9 + (unsigned __int16)v475) ^ 0xEC)) ^ 0xEC;
  v479 = 7 * v478 + 3983 - 960 * ((34953 * (7 * v478 + 3983)) >> 25);
  v480 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v478
                                               - 960 * ((unsigned __int16)((244671 * v478) >> 16) >> 9))) >> 4;
  v481 = 7 * (((v446 >> 8) & 0xF0 | ((unsigned __int16)v436 >> 12)) ^ 0x3E);
  v482 = 7
       * (((v480 ^ 0xE) + ((2 * ((v480 ^ 0xE | 0x7C) ^ v480)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + v477))
       + 3983;
  v483 = v482 - 960 * ((8739 * v482) >> 23);
  v484 = v481
       + 3983
       - 960 * ((unsigned __int16)(7 * (((v446 >> 8) & 0xF0 | ((unsigned __int16)v436 >> 12)) ^ 0x3E) + 3983) / 0x3C0u);
  if (v481 >= 0x3C0)
    v481 -= 960;
  v485 = *(unsigned __int8 *)(v9 + (unsigned __int16)v484) ^ (16
                                                            * (*(unsigned __int8 *)(v9 + (unsigned __int16)v483) ^ 0xEC)) ^ 0xEC;
  v486 = 7 * v485;
  v487 = 244671 * v485;
  v488 = 7 * v485 - 960 * ((244671 * v485 + 139217799) >> 25);
  v489 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v486 - 960 * (v487 >> 25))) >> 4) ^ 0xE;
  v490 = 7 * ((v489 - ((2 * v489) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v481));
  LODWORD(STACK[0x408]) = v436;
  v491 = 7 * (((v446 >> 12) & 0xF0 | HIWORD(v436) & 0xF) ^ 0x58);
  v492 = (unsigned __int16)(v491 + 3983) % 0x3C0u;
  v493 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v490
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (v490 + 3983)) >> 16) >> 7)));
  if (v491 >= 0x3C0)
    v491 -= 960;
  v494 = *(unsigned __int8 *)(v9 + v492) ^ (16 * (v493 ^ 0xEC)) ^ 0xEC;
  v495 = 7 * v494;
  v494 *= 244671;
  v496 = v495 - 960 * ((v494 + 139217799) >> 25);
  v497 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v495 - 960 * (v494 >> 25)));
  v498 = 7
       * ((((v497 >> 4) ^ 0xE) - 2 * (((v497 >> 4) ^ 0xE) & 0xFD ^ ((v497 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + v491))
       + 3983;
  v499 = v498 - 960 * ((8739 * v498) >> 23);
  v500 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v496 + 3983)) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v488 + 3983)) ^ 0xEC) << 12);
  LODWORD(STACK[0x414]) = v500;
  v501 = 7 * ((HIWORD(v445) & 0xF0 | (v429 >> 20) & 0xF) ^ 0xB4);
  v502 = v501
       + 3983
       - 960 * ((unsigned __int16)(7 * ((BYTE2(v445) & 0xF0 | (v429 >> 20) & 0xF) ^ 0xB4) + 3983) / 0x3C0u);
  if (v501 >= 0x3C0)
    v501 -= 960;
  v503 = 7
       * (*(unsigned __int8 *)(v9 + (unsigned __int16)v502) ^ (16
                                                             * (*(unsigned __int8 *)(v9 + (unsigned __int16)v499) ^ 0xEC)) ^ 0xEC);
  v504 = v472 ^ 0xEC;
  v505 = v472 ^ 0xEC ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v479) ^ 0xEC) << 8);
  v506 = v503 + 3983 - 960 * ((34953 * (v503 + 3983)) >> 25);
  v507 = *(unsigned __int8 *)(v9 + v503 % ((v505 & 0x3C0 ^ 0x3C0) + (v505 & 0x3C0u))) >> 4;
  v508 = 7
       * (((v507 ^ 0xE) + ((2 * ((v507 ^ 0xE | 0x7C) ^ v507)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + v501))
       + 3983;
  LODWORD(STACK[0x418]) = v429;
  v509 = 7 * (((v445 >> 20) & 0xF0 | HIBYTE(v429) & 0xF) ^ 0x4D);
  v510 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v508
                                               - 960 * ((unsigned __int16)((8739 * v508) >> 16) >> 7)));
  if (v509 >= 0x3C0)
    v509 -= 960;
  v511 = *(_BYTE *)(v9 + v509);
  v512 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (((v445 >> 20) & 0xF0 | HIBYTE(v429) & 0xF) ^ 0x4D) + 3983)
                            % 0x3C0u) ^ (unsigned __int16)(16 * (v510 ^ 0xEC)) ^ 0xEC;
  v513 = *(unsigned __int8 *)(v9 + (unsigned __int16)((v511 & 7 ^ 3 | v511 & 7 ^ 4) * v512) % 0x3C0u);
  v514 = 7
       * ((((v513 >> 4) ^ 0xE) - 2 * (((v513 >> 4) ^ 0xE) & 0xFD ^ ((v513 & 0x10) != 0)) - 20) ^ v511)
       + 3983;
  LODWORD(STACK[0x410]) = ~v429;
  v515 = 7 * ((HIBYTE(v445) & 0xF0 | (~v429 >> 28)) ^ 0x50) + 3983;
  v516 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(v515
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v515) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v514 - 960 * ((unsigned __int16)((8739 * v514) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC)
                                                 + 3983)
                              % 0x3C0u) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9
                                                                             + (unsigned __int16)(7 * v512 + 3983)
                                                                             % 0x3C0u) ^ 0xEC) << 24);
  LODWORD(STACK[0x404]) = v516;
  v517 = 7 * (v504 & 0xF0 | (v437 >> 4)) + 1813;
  v518 = v517 - 960 * ((2185 * v517) >> 21);
  STACK[0x3F8] = v518;
  v519 = v500 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v506) ^ 0xEC) << 20);
  LODWORD(STACK[0x3E4]) = v519;
  v520 = v516 ^ v519;
  LODWORD(STACK[0x3E8]) = v520;
  LODWORD(STACK[0x40C]) = v520 ^ v505;
  LODWORD(v518) = 7
                * (((((v520 ^ v505) >> 8) & 0xF) << ((v518 & 4 ^ 4) + (v518 & 4))) ^ (v437 >> 8) & 0xF)
                + 1813;
  v521 = 7 * ((((v520 ^ v505) >> 8) & 0xF0 | ((unsigned __int16)v436 >> 12)) ^ 0xE) + 1813;
  v522 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v521 - 960 * ((unsigned __int16)((2185 * v521) >> 16) >> 5))) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v9 + v518 % 0x3C0) ^ 0xEC) << 8);
  LODWORD(STACK[0x3DC]) = v522;
  LODWORD(STACK[0x3D8]) = (7 * ((unsigned __int16)v522 >> 12) + 3822)
                        % (STACK[0x6C0] & 0x3C0 ^ 0x100 | STACK[0x6C0] & 0x3C0 ^ 0x2C0u);
  LODWORD(v518) = (*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(LODWORD(STACK[0x6B4])
                                                         - 960
                                                         * ((unsigned __int16)((244671
                                                                                            * LODWORD(STACK[0x6B8])) >> 16) >> 9))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5D4])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5C8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v521) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  v523 = v521 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v521 - 960 * (v518 >> 25))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5D0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5DC]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v524 = (unsigned __int16)(7 * v518 + 3983) % 0x3C0u;
  LODWORD(v518) = (*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(7 * v518
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5E0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5E8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v521) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  v525 = v521 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v521 - 960 * (v518 >> 25))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5F0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5F8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v513) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v521) = v513 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(v513 - 960 * (v518 >> 25)));
  LODWORD(v518) = 7
                * ((((v518 >> 4) ^ 0xE)
                                   + ~(2 * (((v518 >> 4) ^ 0xE) & 0xFD ^ ((v518 & 0x10) != 0)))
                                   - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x600])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (LODWORD(STACK[0x60C]) - 1886721639 + LODWORD(STACK[0x608]))) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v513) = 7 * v518;
  LODWORD(v518) = (*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(7 * v518
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x628])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC;
  LODWORD(v518) = 16 * v518 - 472820720 - ((32 * v518) & 0x820);
  v526 = 7 * ((HIBYTE(LODWORD(STACK[0x644])) & 0xF0 | (LODWORD(STACK[0x648]) >> 28)) ^ 0x66) + 3983;
  v527 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v526
                                               - 960 * ((unsigned __int16)((8739 * v526) >> 16) >> 7))) ^ 0xEC;
  v528 = v527 - 2077280994 - ((2 * v527) & 0x3C);
  v529 = v518 ^ v528 ^ 0x98019EF1;
  v528 ^= 0x842F351E;
  v530 = (v529 + v528 + 1) ^ ((v518 ^ 0x1C2EABEF) + 1);
  v531 = HIBYTE(LODWORD(STACK[0x648])) & 0x39;
  v532 = 7 * (v528 + (v531 ^ 0x20 | v531 ^ 0x219) + ((v530 - 472820720 - ((2 * v530) & 0xC7A2A820)) ^ v518));
  v533 = 16 * (*(unsigned __int8 *)(v9 + LODWORD(STACK[0x6D0])) ^ 0xEC);
  v534 = *(_BYTE *)(v9 + (LODWORD(STACK[0x6C8]) + 3983) % 0x3C0u) ^ 0xEC;
  v535 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v523 + 3983)) ^ 0xEC) << 8;
  v536 = (*(unsigned __int8 *)(v9 + v524) ^ 0xEC) << 12;
  v537 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v525 + 3983)) ^ 0xEC) << 16;
  v538 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v521 + 3983)) ^ 0xEC) << 20;
  v539 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v513 + 3983) % 0x3C0u) ^ 0xEC) << 24;
  v540 = v539 ^ ((*(unsigned __int8 *)(v9 + v532 % 0x3C0) ^ 0xC) << 28);
  v541 = v539 ^ v538;
  v542 = v538 ^ v537;
  v543 = v537 ^ v536;
  LOWORD(v536) = v536 ^ v535;
  v544 = v535 ^ v533;
  LOBYTE(v533) = v533 ^ v534;
  v545 = 7 * (STACK[0x6DC] & 0xFFFFFF0F | (16 * (v534 & 0xF))) + 1813;
  v546 = 7 * (v533 & 0xF0 | (LODWORD(STACK[0x670]) >> 4)) + 1813;
  v547 = 7 * ((v544 >> 4) & 0xF0 | (LODWORD(STACK[0x670]) >> 8) & 0xF) + 1813;
  LOWORD(v547) = v547 - 960 * ((unsigned __int16)((2185 * v547) >> 16) >> 5);
  v548 = LODWORD(STACK[0x670]) >> 8 >> ((v547 & 4 ^ 4) + (v547 & 4));
  v549 = *(unsigned __int8 *)(v9 + (unsigned __int16)v547);
  v550 = v548 - ((2 * v548) & 0xB416B2) + 274336601;
  LODWORD(v518) = ((v549 & 7 ^ 4) + (v549 & 7 ^ 3)) * (((v550 & 0xF | (16 * ((unsigned __int16)v536 >> 12))) ^ 9) + 259);
  LOWORD(v536) = (LODWORD(STACK[0x570]) + 3) & 0xF;
  LODWORD(v518) = ((*(unsigned __int8 *)(v9
                                       + (unsigned __int16)(v518
                                                          - 960
                                                          * ((unsigned __int16)((17477 * v518) >> 16) >> 8))) ^ 0xEC) << 12) ^ ((v549 ^ 0xEC) << 8);
  v551 = 7 * ((HIWORD(v542) & 0xF0 | (v550 >> 8) & 0xF) ^ 0xB) + 1813;
  v552 = 7 * ((v541 >> 20) & 0xF0 | ((unsigned __int16)v550 >> 12)) + 1813;
  v553 = 7 * ((HIBYTE(v540) & 0xF0 | HIWORD(v550) & 0xF) ^ 0xA) + 1813;
  LOBYTE(v551) = *(_BYTE *)(v9
                          + (unsigned __int16)(v551 - 960 * ((unsigned __int16)((2185 * v551) >> 16) >> 5)));
  v554 = ((v551 ^ 0xEC) << 20) ^ ((*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(7
                                                                                          * (((v550 >> 4) ^ 0x5555) & ((v536 ^ 0xF) + v536) ^ (v543 >> 12) & 0xF0)
                                                                                          + 1813)
                                                                       % 0x3C0u) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v552 - 960 * ((unsigned __int16)((2185 * v552) >> 16) >> 5))) ^ 0xEC) << 24);
  v555 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v545 - 960 * ((unsigned __int16)((2185 * v545) >> 16) >> 5)));
  v556 = v555 ^ (16
               * (*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v546
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v546) >> 16) >> 5))) ^ 0xEC)) ^ 0xEC;
  v557 = (v518 ^ v556 | ((*(unsigned __int8 *)(v9
                                             + (unsigned __int16)(v553
                                                                - 960
                                                                * ((unsigned __int16)((2185 * v553) >> 16) >> 5))) ^ 0xC) << 28)) ^ v554;
  v558 = v557 >> ((v531 ^ 0x19) & 0x10) >> ((v531 ^ 0x19) & 0x10 ^ 0x10);
  v559 = (v558 >> 4) + (((v551 & 0xD0 ^ 0x3F) + (v551 & 0xD0 ^ 0xEF) - 46) & 0xF0 ^ 0x222);
  v560 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v558 & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v558 & 0xF) + 3822)) >> 16) >> 5)));
  v561 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7 * (HIBYTE(v554) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v554) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v557 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v557 >> 28) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | v560 ^ 0xEC;
  v562 = (v560 & 0xF ^ 3 | v560 & 0xF ^ 0xC) & ((v518 ^ v556) >> 8);
  v563 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v562
                                               + 3822
                                               - 960 * ((unsigned __int16)((2185 * (7 * v562 + 3822)) >> 16) >> 5))) ^ 0xEC | (v561 << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * v559 - 960 * ((unsigned __int16)((61173 * v559) >> 16) >> 7))) ^ 0xEC) << 12);
  v564 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v555 & 0xF ^ 0xC)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v555 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5)));
  v565 = LODWORD(STACK[0x5AC]) ^ 0x53233609;
  LODWORD(STACK[0x6B8]) = v564 ^ v565 ^ (((*(unsigned __int8 *)(v9
                                                              + (unsigned __int16)(7 * ((unsigned __int16)v518 >> 12)
                                                                                 + 3822
                                                                                 - 960
                                                                                 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v518 >> 12) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v556 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v556 >> 4) + 3822)) >> 16) >> 5))) ^ 0xEC))) ^ (v563 << 8);
  v566 = 16
       * (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(LODWORD(STACK[0x638])
                                                - 960 * ((LODWORD(STACK[0x634]) + 139217799) >> 25)
                                                + 3983)) ^ 0xEC);
  v567 = v566 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(LOWORD(STACK[0x610]) + 3983) % 0x3C0u) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5FC]) - 960 * ((LODWORD(STACK[0x5F4]) + 139217799) >> 25) + 3983)) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(LOWORD(STACK[0x5CC]) + 3983) % 0x3C0u) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5B8]) - 960 * ((LODWORD(STACK[0x5B4]) + 139217799) >> 25) + 3983)) ^ 0xEC) << 20) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x5A8]) - 960 * ((LODWORD(STACK[0x5A0]) + 139217799) >> 25) + 3983)) ^ 0xEC) << 24) ^ ((*(unsigned __int8 *)(v9 + LODWORD(STACK[0x5C0])) ^ 0xC) << 28);
  LOBYTE(v518) = *(_BYTE *)(v9 + (LODWORD(STACK[0x654]) + 3983) % 0x3C0u) ^ 0xEC;
  LOBYTE(v566) = v566 ^ v518;
  LODWORD(v518) = 7 * (STACK[0x668] & 0xFFFFFF0F | (16 * (v518 & 0xF))) + 1813;
  v568 = 7 * (v566 & 0xF0 | (LODWORD(STACK[0x65C]) >> 4)) + 1813;
  v569 = (v567 >> 8) - ((v567 >> 7) & 0xCA34B8) - 748348836;
  v570 = 7 * (((LODWORD(STACK[0x65C]) >> 8) & 0xF | (16 * (v569 & 0xF))) ^ 0xC0) + 1813;
  v571 = 7 * ((v569 & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x640]) >> 12)) ^ 0x50) + 1813;
  v572 = 7 * (((v569 >> 4) & 0xF0 | HIWORD(LODWORD(STACK[0x640])) & 0xF) ^ 0xA0) + 1813;
  v573 = 7 * (((v569 >> 8) & 0xF0 | (LODWORD(STACK[0x5EC]) >> 20) & 0xF) ^ 0x16) + 1813;
  v574 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v572
                                                 - 960 * ((unsigned __int16)((2185 * v572) >> 16) >> 5))) ^ 0xEC) << 16) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v571 - 960 * ((unsigned __int16)((2185 * v571) >> 16) >> 5))) ^ 0xEC) << 12);
  LODWORD(v518) = *(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v518) >> 16) >> 5)));
  v575 = 7 * (((v569 >> 12) & 0xF0 | HIBYTE(LODWORD(STACK[0x5EC])) & 0xF) ^ 0x56) + 1813;
  v576 = v518 ^ (16
               * (*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v568
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v568) >> 16) >> 5))) ^ 0xEC)) ^ 0xEC;
  v577 = 7 * ((HIWORD(v569) & 0xF0 | (LODWORD(STACK[0x5EC]) >> 28)) ^ 0x69) + 1813;
  v578 = (v576 ^ ((*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(v570
                                                         - 960
                                                         * ((unsigned __int16)((2185 * v570) >> 16) >> 5))) ^ 0xEC) << 8) | ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v573 - 960 * ((unsigned __int16)((2185 * v573) >> 16) >> 5))) ^ 0xEC) << 20)) ^ v574;
  v579 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v577
                                                 - 960 * ((unsigned __int16)((2185 * v577) >> 16) >> 5))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v575 - 960 * ((unsigned __int16)((2185 * v575) >> 16) >> 5))) ^ 0xEC) << 24) ^ v578;
  v580 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7 * (HIBYTE(v579) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v579) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v579 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v579 >> 28) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12);
  v579 >>= 8;
  LOWORD(v573) = 7 * (v579 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v579 >> 4) + 3822)) >> 16) >> 5);
  v581 = 7 * (v579 & 0xF) + 3822 - 960 * ((2185 * (7 * (v579 & 0xF) + 3822)) >> 21);
  v582 = (((~(2 * v581) + v581) ^ v581) & 0x222) + (v576 >> 4);
  v583 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (BYTE2(v574) & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                                  * (7 * (HIWORD(v574) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC;
  v584 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)v581) ^ 0xEC ^ (((*(unsigned __int8 *)(v9
                                                                                            + (unsigned __int16)(7 * ((v578 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v578 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)v573) ^ 0xEC)))) << 8) ^ ((v580 | v583) << 16);
  LODWORD(STACK[0x6DC]) = LODWORD(STACK[0x698]) ^ LODWORD(STACK[0x700]);
  LODWORD(v518) = v584 | *(unsigned __int8 *)(v9
                                            + (unsigned __int16)(7 * (v518 & 0xF ^ 0xC)
                                                               + 3822
                                                               - 960
                                                               * ((unsigned __int16)((2185
                                                                                    * (7 * (v518 & 0xF ^ 0xC) + 3822)) >> 16) >> 5))) ^ 0xEC;
  v585 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x518]) + 3983) % 0x3C0u);
  LODWORD(STACK[0x6D0]) = v565 ^ (16
                                * (*(unsigned __int8 *)(v9
                                                      + (unsigned __int16)(7 * v582
                                                                         - 960
                                                                         * ((unsigned __int16)((15295 * v582) >> 16) >> 5))) ^ 0xEC)) ^ v518;
  LODWORD(v518) = 7 * (((v585 ^ 0xEC) + 1796969462 - ((2 * (v585 ^ 0xEC)) & 0x1EC)) ^ v462);
  v586 = ((int)v518 + 3983) % 0x3C0u;
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + v518 % 0x3C0) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5B0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x52C]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v582) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v574) = v582 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(v582 - 960 * (v518 >> 25))) >> 4;
  LODWORD(v518) = 7
                * (((v518 ^ 0xE) + ((2 * ((v518 ^ 0xE | 0x7C) ^ v518)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5C4])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9
                                     + (unsigned __int16)((LODWORD(STACK[0x594]) + 569)
                                                        * (STACK[0x658] & 7 ^ 4 | STACK[0x658] & 7 ^ 3))
                                     % 0x3C0u) ^ (16
                                                * (*(unsigned __int8 *)(v9
                                                                      + (unsigned __int16)(v518
                                                                                         - 960
                                                                                         * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v582) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v585) = v582 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v582 - 960 * (v518 >> 25))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x5D8])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x508]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v582) = 7 * v518;
  LODWORD(v518) = (*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(7 * v518
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x514])))
                + 3983;
  v587 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x510]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC));
  LODWORD(v518) = ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v582 + 3983) % 0x3C0u) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v585 + 3983)) ^ 0xEC) << 8);
  LOWORD(v585) = 7 * (v587 ^ 0xEC);
  v588 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v585 - 960 * ((unsigned __int16)((244671 * (v587 ^ 0xECu)) >> 16) >> 9)));
  LOWORD(v582) = v585 - 960 * ((244671 * (v587 ^ 0xECu) + 139217799) >> 25);
  v589 = 7
       * ((((v588 >> 4) ^ 0xE) + ((2 * (((v588 >> 4) ^ 0xE | 0x7C) ^ (v588 >> 4))) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x524])))
       + 3983;
  LOWORD(v589) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x590]) + 3983) % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v589 - 960 * ((unsigned __int16)((8739 * v589) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v587) = (unsigned __int16)(7 * v589 + 3983) % 0x3C0u;
  LOBYTE(v588) = *(_BYTE *)(v9 + LODWORD(STACK[0x528]));
  v590 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(((v588 & 7 ^ 4) + (v588 & 7 ^ 3)) * v589) % 0x3C0u) >> 4) ^ 0xE;
  v591 = 7 * ((v590 - ((2 * v590) & 0x18) - 20) ^ v588) + 3983;
  v592 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x59C]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v591 - 960 * ((unsigned __int16)((8739 * v591) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v588) = 7 * v592;
  v592 *= 244671;
  LOWORD(v580) = v588 - 960 * ((v592 + 139217799) >> 25);
  v593 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v588 - 960 * (v592 >> 25))) >> 4) ^ 0xE;
  v594 = 7 * ((v593 - ((2 * v593) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x598])))
       + 3983;
  v595 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(7
                                                                                          * ((HIBYTE(LODWORD(STACK[0x650])) & 0xF0 | (LODWORD(STACK[0x630]) >> 8)) ^ 0x10)
                                                                                          + 3983)
                                                                       % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v594 - 960 * ((unsigned __int16)((8739 * v594) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC)
                                                 + 3983)
                              % 0x3C0u) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v580 + 3983)) ^ 0xEC) << 24);
  v596 = *(unsigned __int8 *)(v9 + v586) ^ 0xEC;
  v597 = v596 ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v574 + 3983)) ^ 0xEC));
  v598 = v518 ^ v597;
  v599 = v518 ^ v597 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v582 + 3983)) ^ 0xEC) << 16);
  v600 = v599 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v587) ^ 0xEC) << 20);
  v601 = v600 ^ 0x23E14B6E ^ (v595 + 601967470 - ((2 * v595) & 0x46000000));
  v602 = 7 * (STACK[0x660] & 0xFFFFFF0F | (16 * (v596 & 0xF))) + 1813;
  v603 = 7 * (v597 & 0xF0 | (LODWORD(STACK[0x678]) >> 4)) + 1813;
  v604 = 7 * ((v598 >> 4) & 0xF0 | (LODWORD(STACK[0x678]) >> 8) & 0xF) + 1813;
  LODWORD(v518) = 7 * (((v518 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x680]) >> 12)) ^ 0xC)
                + 1813;
  LODWORD(v518) = ((*(unsigned __int8 *)(v9
                                       + (unsigned __int16)(v518
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0xEC) << 12) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v604 - 960 * ((unsigned __int16)((2185 * v604) >> 16) >> 5))) ^ 0xEC) << 8);
  v605 = ((v599 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x680])) & 0xF) ^ 1;
  v606 = v605 - 2 * (v605 & 0x3D ^ HIWORD(LODWORD(STACK[0x680])) & 4) - 88226503;
  LOWORD(v604) = (unsigned __int16)(7 * (v606 ^ 0xC539) + 1813) % 0x3C0u;
  v607 = (HIWORD(v600) & 0xF0 | (LODWORD(STACK[0x688]) >> 20) & 0xF) ^ 3;
  LOWORD(v607) = v607 - ((2 * v607) & 0xFFE3) - 5903;
  LOWORD(v606) = 7
               * ((HIBYTE(LODWORD(STACK[0x688])) & 0xF | (16
                                                        * (((v606 & 0x41 ^ 1 | v606 & 0x41 ^ 0x6D40)
                                                          * (v607 & 0x4F ^ 0x41 | v607 & 0x4F ^ 0x90E)) & HIBYTE(v601)))) ^ 5);
  v608 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v607 ^ 0xE8F1) + 1813) % 0x3C0u) ^ 0xEC) << 20) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v604) ^ 0xEC) << 16);
  HIDWORD(v609) = v601 >> 28;
  LODWORD(v609) = LODWORD(STACK[0x688]) ^ 0x30000000;
  v610 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v602 - 960 * ((unsigned __int16)((2185 * v602) >> 16) >> 5)));
  v611 = v610 ^ (16
               * (*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v603
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v603) >> 16) >> 5))) ^ 0xEC)) ^ 0xEC;
  v612 = v608 ^ v518 ^ v611;
  v613 = v612 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v606 + 1813) % 0x3C0u) ^ 0xEC) << 24);
  v614 = 7
       * ((v613 ^ ((*(unsigned __int8 *)(v9
                                       + (7 * (v609 >> 28)
                                                      + 1813
                                                      - 960
                                                      * ((4473925
                                                        * (unint64_t)(7 * (v609 >> 28) + 1813)) >> 32))) ^ 0xC) << 28)) >> 28)
       + 3822;
  v615 = ((((*(unsigned __int8 *)(v9
                                + (unsigned __int16)(7 * (HIBYTE(v613) & 0xF)
                                                   + 3822
                                                   - 960
                                                   * ((unsigned __int16)((2185
                                                                                      * (7 * (HIBYTE(v613) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v614 - 960 * ((unsigned __int16)((2185 * v614) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v612) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v612) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v608 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v608 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12);
  v616 = LODWORD(STACK[0x710]) ^ (16
                                * (*(unsigned __int8 *)(v9
                                                      + (unsigned __int16)(7 * (v611 >> 4)
                                                                         + 3822
                                                                         - 960
                                                                         * ((unsigned __int16)((2185
                                                                                              * (7
                                                                                               * (v611 >> 4)
                                                                                               + 3822)) >> 16) >> 5))) ^ 0xEC)) ^ (((v615 | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (((v518 ^ v611) >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (((v518 ^ v611) >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((unsigned __int16)v518 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v518 >> 12) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v610 & 0xF ^ 0xC) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v610 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5))) ^ 0xEC);
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x690]) ^ 0xDD784604 ^ LODWORD(STACK[0x708]);
  v617 = 7 * ((STACK[0x4F8] & 0xF0 | (LODWORD(STACK[0x62C]) >> 4)) ^ 0xB0) + 1813;
  v618 = 7 * (((LODWORD(STACK[0x4F8]) >> 4) & 0xF0 | (LODWORD(STACK[0x62C]) >> 8) & 0xF) ^ 0xB0) + 1813;
  v619 = (LODWORD(STACK[0x614]) >> 12) ^ 0x7B859;
  v620 = v619 & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x4F8]) >> 12));
  v621 = 7 * (((v619 >> (v583 & 4) >> (v583 & 4 ^ 4)) & 0xF | (16 * (HIWORD(LODWORD(STACK[0x4F8])) & 0xF))) ^ 0xC0)
       + 1813;
  v622 = 7 * ((HIWORD(LODWORD(STACK[0x4F8])) & 0xF0 | (LODWORD(STACK[0x504]) >> 20) & 0xF) ^ 0x88) + 1813;
  v623 = 7 * (((LODWORD(STACK[0x4F8]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x504])) & 0xF) ^ 0xCB) + 1813;
  LODWORD(v518) = 7
                * ((((LODWORD(STACK[0x4F8]) ^ (((LODWORD(STACK[0x4FC]) ^ 0xC) << 28)
                                             + 1821170618
                                             - ((LODWORD(STACK[0x4FC]) ^ 0xCu) >> 1 << 30))) >> 24) & 0xF0 | (LODWORD(STACK[0x504]) >> 28)) ^ 7)
                + 1813;
  v624 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v623
                                               - 960 * ((unsigned __int16)((2185 * v623) >> 16) >> 5))) ^ 0xEC;
  v625 = LODWORD(STACK[0x4EC]) ^ (16
                                * (*(unsigned __int8 *)(v9
                                                      + (unsigned __int16)(v617
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v617) >> 16) >> 5))) ^ 0xEC)) ^ 0xEC;
  v626 = v625 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v618
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v618) >> 16) >> 5))) ^ 0xEC) << 8);
  v627 = v626 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(7 * (v620 ^ 0xD0)
                                                        + 1813
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v620 ^ 0xD0u) + 1813)) >> 16) >> 5))) ^ 0xEC) << 12);
  v628 = v627 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v621
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v621) >> 16) >> 5))) ^ 0xEC) << 16);
  v629 = v628 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v622
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v622) >> 16) >> 5))) ^ 0xEC) << 20);
  v630 = v629 ^ ((v624 << 24) + 1427379604 - ((v624 << 25) & 0xAA000000)) ^ 0x55141594;
  LODWORD(v518) = 7
                * ((v630 ^ ((*(unsigned __int8 *)(v9
                                                + (unsigned __int16)(v518
                                                                   - 960
                                                                   * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0xC) << 28)) >> 28)
                + 3822;
  LODWORD(v518) = ((((((*(unsigned __int8 *)(v9
                                           + (unsigned __int16)(7 * (HIBYTE(v630) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v630) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v628) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v628) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v629 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v629 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v626 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v626 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((unsigned __int16)v627 >> 12) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v627 >> 12) + 2862)) >> 16) >> 5))) ^ 0xEC) << 12) | LODWORD(STACK[0x4F4]) ^ 0xEC;
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x6F8]) ^ (16
                                                 * (*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(7
                                                                                          * (v625 >> 4)
                                                                                          + 3822
                                                                                          - 960
                                                                                          * ((unsigned __int16)((2185 * (7 * (v625 >> 4) + 3822)) >> 16) >> 5))) ^ 0xEC)) ^ 0xE3E7C262 ^ v518;
  v631 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x4A4]) + 3983) % 0x3C0u) ^ 0xEC;
  v632 = 7 * ((v631 + 1796969462 - ((2 * v631) & 0x1EC)) ^ v462);
  v633 = *(unsigned __int8 *)(v9 + v632 % 0x3C0) >> 4;
  v634 = (v632 + 3983) % 0x3C0;
  v635 = 7
       * (((v633 ^ 0xE) + ((2 * ((v633 ^ 0xE | 0x7C) ^ v633)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x4B4])))
       + 3983;
  LODWORD(v518) = (LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x4AC])) & 0xF0 | (LODWORD(STACK[0x4B0]) >> 4);
  LODWORD(v518) = ((2 * v518) & 0xFFFFFF3F) + (v518 ^ 0xFBBF7F9F);
  v636 = *(unsigned __int8 *)(v9
                            + ((((_DWORD)v518 + 71336602) & 0x233 | (2076147045 - (_DWORD)v518) & 0x6F2D3433) ^ ((v616 & 0x6F2D3634 ^ 0x30C1200) + (v616 & 0x6F2D3634 ^ 0x6C212434u)))
                            * ((_DWORD)v518 + 71336602)
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v9
                                                            + (unsigned __int16)(v635
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v635) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v637 = (unsigned __int16)(7 * v636 + 3983) % 0x3C0u;
  v638 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v636
                                               - 960 * ((unsigned __int16)((244671 * v636) >> 16) >> 9)));
  LODWORD(v518) = 7
                * ((((v638 >> 4) ^ 0xE) - 2 * (((v638 >> 4) ^ 0xE) & 0xFD ^ ((v638 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + (7 * (int)v518 + 499352231) % 0x3C0u))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x4B8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v633) = 7 * v518;
  v639 = (-1167387660
        - (((LODWORD(STACK[0x4BC]) >> 12) ^ 0xF43F3D06) & 0x4000C02 | 0xBA6B13F4)
        + (((LODWORD(STACK[0x4BC]) >> 12) ^ 0xF43F3D06) & 0x902B0294 | 0x4594EC0B)) ^ ((LODWORD(STACK[0x4BC]) >> 12) ^ 0xF43F3D06) & 0x942B0E99;
  LODWORD(v518) = 7
                * ((*(_BYTE *)(v9 + LODWORD(STACK[0x4C0])) ^ (*(_BYTE *)(v9
                                                                                        + (unsigned __int16)(7 * v518 - 960 * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4)) ^ 0xE2)
                + 3983;
  v640 = ((LODWORD(STACK[0x4C4]) >> 8) & 0xF0 ^ 0xBEFB9F9F) + ((LODWORD(STACK[0x4C4]) >> 7) & 0x1C0 ^ 0xC0) + 1090805777;
  v641 = (v640 - (v640 | v639 ^ 0x4594EC00)) ^ ((v639 ^ 0xBA6B13FF) + 1);
  v642 = 7 * ((v639 ^ 0x6A7B4E25 ^ (v641 - ((2 * v641) & 0x5FDF444A) + 804233765)) + v640);
  v643 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v518
                                               - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7)));
  LOWORD(v518) = (unsigned __int16)(v633 + 3983) % 0x3C0u;
  v644 = *(unsigned __int8 *)(v9 + (v642 + 3983) % 0x3C0) ^ (16 * (v643 ^ 0xEC)) ^ 0xEC;
  LOWORD(v640) = 7 * v644;
  v644 *= 244671;
  LOWORD(v583) = v640 - 960 * ((v644 + 139217799) >> 25);
  v645 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v640 - 960 * (v644 >> 25))) >> 4) ^ 0xE;
  v646 = (v645 - ((2 * v645) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + v642 % 0x3C0);
  v647 = ((2 * v646) & 0x72) + (v646 ^ 0x239);
  v648 = *(unsigned __int8 *)(v9 + LODWORD(STACK[0x4D8])) ^ (16
                                                           * (*(unsigned __int8 *)(v9
                                                                                 + (unsigned __int16)(7 * v647 - 960 * ((unsigned __int16)((61173 * v647) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v645) = 7 * v648;
  v648 *= 244671;
  v649 = (v648 + 139217799) >> 25;
  v650 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v645 - 960 * (v648 >> 25)));
  v651 = 7
       * ((((v650 >> 4) ^ 0xE) - ((2 * ((v650 >> 4) ^ 0xE)) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x4D0])))
       + 3023;
  v652 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v645 - 960 * v649 + 3983));
  v653 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x3F0]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v651 - 960 * ((unsigned __int16)((8739 * v651) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v649) = 7 * v653;
  v653 *= 244671;
  v654 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v649 - 960 * ((v653 + 139217799) >> 25) + 3983)) ^ 0xEC) << 20) ^ ((v652 ^ 0xEC) << 16);
  v655 = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v649 - 960 * (v653 >> 25))) >> 4) ^ 0xE;
  v656 = 7 * ((v655 - ((2 * v655) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x3E0])))
       + 3983;
  v657 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x400]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v656 - 960 * ((unsigned __int16)((8739 * v656) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v652) = 7 * v657;
  v658 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * v657
                                               - 960 * ((unsigned __int16)((244671 * v657) >> 16) >> 9)));
  v659 = 7
       * ((((v658 >> 4) ^ 0xE) - 2 * (((v658 >> 4) ^ 0xE) & 0xFD ^ ((v658 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x3EC])))
       + 3983;
  v660 = 7 * ((HIBYTE(LODWORD(STACK[0x4CC])) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 28)) ^ 0x99) + 3983;
  v661 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(v660
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v660) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v659 - 960 * ((unsigned __int16)((8739 * v659) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC)
                                                 + 3983)
                              % 0x3C0u) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9
                                                                             + (unsigned __int16)(v652 + 3983) % 0x3C0u) ^ 0xEC) << 24);
  v662 = 16 * (*(unsigned __int8 *)(v9 + v637) ^ 0xEC);
  LOBYTE(v634) = *(_BYTE *)(v9 + v634) ^ 0xEC;
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + (unsigned __int16)v518) ^ 0xEC) << 8;
  v663 = v518 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v583 + 3983)) ^ 0xEC) << 12);
  LODWORD(v518) = v518 ^ v662;
  LOBYTE(v662) = v662 ^ v634;
  v664 = 7 * (STACK[0x4E0] & 0xFFFFFF0F | (16 * (v634 & 0xF))) + 1813;
  v665 = ((v662 & 0xF0 | (LODWORD(STACK[0x4B0]) >> 4)) + 259)
       * (HIBYTE(LODWORD(STACK[0x4C8])) & 7 ^ 2 | HIBYTE(LODWORD(STACK[0x4C8])) & 7 ^ 5);
  LODWORD(v518) = 7 * ((v518 >> 4) & 0xF0 | (LODWORD(STACK[0x4B0]) >> 8) & 0xF) + 1813;
  v666 = v663 ^ v654;
  v667 = (v663 >> 11) & 4;
  v668 = v661 ^ v663 ^ v654;
  v669 = (((v668 >> 12) + 153788798) & 3 ^ 2)
       + (((v668 >> 12) + 153788798) & 3 ^ 0x101)
       + (((((16 * ((v668 >> 12) + 126 - v667)) ^ 0x20) + 64) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4BC]) >> 12)) ^ 0xD);
  LODWORD(v518) = *(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v518) >> 16) >> 5)));
  v670 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7 * v669
                                                 - 960 * ((unsigned __int16)((61173 * v669) >> 16) >> 7))) ^ 0xEC) << 12) ^ ((v518 ^ 0xEC) << 8);
  LODWORD(v518) = (v518 & 7 ^ 4 | v518 & 7 ^ 3) * (((v666 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4BC])) & 0xF) + 259);
  v671 = 7 * ((HIWORD(v654) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 20) & 0xF) ^ 0xE) + 1813;
  v672 = 7 * (((v668 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4C8])) & 0xF) ^ 0xA) + 1813;
  v673 = 7 * ((HIBYTE(v661) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 28)) ^ 9) + 1813;
  v674 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v664 - 960 * ((unsigned __int16)((2185 * v664) >> 16) >> 5)));
  v675 = v674 ^ (16
               * (*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v665
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v665) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LODWORD(v518) = v670 ^ v675 ^ ((*(unsigned __int8 *)(v9
                                                     + (unsigned __int16)(v518
                                                                        - 960
                                                                        * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC) << 16);
  v676 = v518 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v671
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v671) >> 16) >> 5))) ^ 0xEC) << 20);
  v677 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v673
                                                 - 960 * ((unsigned __int16)((2185 * v673) >> 16) >> 5))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v672 - 960 * ((unsigned __int16)((2185 * v672) >> 16) >> 5))) ^ 0xEC) << 24) ^ v676;
  LODWORD(v518) = ((*(unsigned __int8 *)(v9
                                       + (unsigned __int16)(7 * (HIBYTE(v677) & 0xF)
                                                          + 3822
                                                          - 960
                                                          * ((unsigned __int16)((2185
                                                                                             * (7 * (HIBYTE(v677) & 0xF)
                                                                                              + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v677 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v677 >> 28) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v518) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (WORD1(v518) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC;
  LOWORD(v677) = 7 * ((unsigned __int16)v670 >> 12)
               + 3822
               - 960
               * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v670 >> 12) + 3822)) >> 16) >> 5);
  v678 = 7 * (((v670 ^ v675) >> 8) & 0xF) + 3822;
  LODWORD(v518) = ((_DWORD)v518 << 8) ^ ((*(unsigned __int8 *)(v9
                                                             + (unsigned __int16)(7 * ((v676 >> 20) & 0xF)
                                                                                + 3822
                                                                                - 960
                                                                                * ((unsigned __int16)((2185 * (7 * ((v676 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12);
  LOWORD(v676) = 7 * (v674 & 0xF ^ 0xC)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v674 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5);
  LODWORD(v518) = ((v518 | *(unsigned __int8 *)(v9
                                                            + (unsigned __int16)(v678
                                                                               - 960
                                                                               * ((unsigned __int16)((2185 * v678) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)v677) ^ 0xEC) << 12);
  v679 = LODWORD(STACK[0x6A0]) ^ LODWORD(STACK[0x498]);
  v680 = LODWORD(STACK[0x498]) ^ 0xD921BCC8 ^ LODWORD(STACK[0x500]);
  v681 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(7 * (v675 >> 4)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                    * (7 * (v675 >> 4)
                                                                     + 3822)) >> 16) >> 5))) ^ 0xEC;
  v682 = *(unsigned __int8 *)(v9 + (unsigned __int16)v676) ^ 0xEC;
  v683 = ((v518 | v682) ^ (16 * v681)) - 2 * (((v518 | v682) ^ (16 * v681)) & 0x735167BF ^ v682 & 0xC);
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x428]) + 3983) % 0x3C0u) ^ 0xEC;
  LODWORD(v518) = 7 * ((v518 + 1796969462 - ((2 * v518) & 0x1EC)) ^ v462);
  v684 = ((int)v518 + 3983) % 0x3C0u;
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + v518 % 0x3C0) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x41C])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x430]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v681) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v654) = v681 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = (*(unsigned __int8 *)(v9 + (unsigned __int16)(v681 - 960 * (v518 >> 25))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x420])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x438]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v681) = 7 * v518;
  LODWORD(v518) = (*(unsigned __int8 *)(v9
                                      + (unsigned __int16)(7 * v518
                                                         - 960
                                                         * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 0xE;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0x18) - 20) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x424])))
                + 3983;
  v685 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v681 + 3983) % 0x3C0u);
  LODWORD(v518) = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x440]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v682) = (v518 + 569) * ((v685 & 7 ^ 4) + (v685 & 7 ^ 3));
  LODWORD(v518) = *(unsigned __int8 *)(v9
                                     + (unsigned __int16)(7 * v518
                                                        - 960
                                                        * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4;
  LODWORD(v518) = 7
                * (((v518 ^ 0xE) + ((2 * ((v518 ^ 0xE | 0x7C) ^ v518)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x42C])))
                + 3983;
  v686 = ((*(unsigned __int8 *)(v9 + (unsigned __int16)v682 % 0x3C0u) ^ 0xEC) << 12) ^ ((v685 ^ 0xEC) << 8);
  v687 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x448]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  v688 = (*(unsigned __int8 *)(v9
                             + (unsigned __int16)(7 * v687
                                                - 960 * ((unsigned __int16)((244671 * v687) >> 16) >> 9))) >> 4) ^ 0xE;
  v689 = 7 * ((v688 + (~(2 * v688) | 0xE7) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x434])))
       + 3983;
  v690 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x44C]) + 3983) % 0x3C0u) ^ (16
                                                                                               * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v689 - 960 * ((unsigned __int16)((8739 * v689) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LOWORD(v676) = 7 * v690;
  v690 *= 244671;
  v691 = (v690 + 139217799) >> 25;
  v692 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v676 - 960 * (v690 >> 25)));
  LOWORD(v676) = v676 - 960 * v691;
  v693 = 7
       * ((((v692 >> 4) ^ 0xE) + ~(2 * (((v692 >> 4) ^ 0xE) & 0xFD ^ ((v692 & 0x10) != 0))) - 19) ^ *(unsigned __int8 *)(v9 + LODWORD(STACK[0x43C])))
       + 3983;
  v694 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v693
                                               - 960 * ((unsigned __int16)((8739 * v693) >> 16) >> 7))) ^ 0xEC;
  v695 = 16 * v694 + 602797616 - ((32 * v694) & 0xC60);
  v696 = *(unsigned __int8 *)(v9 + (unsigned __int16)(LODWORD(STACK[0x450]) + 3983) % 0x3C0u) ^ 0xEC;
  v697 = v696 - 846435110 - ((2 * v696) & 0x1B4);
  v698 = v695 ^ v697 ^ 0x119E6515;
  v697 ^= 0xCD8C6CDA;
  v699 = (v698 + v697 + 1) ^ ((v695 ^ 0xDC1209CF) + 1);
  v700 = 7 * (((v699 + 602797616 - ((2 * v699) & 0x47DBEC60)) ^ v695) + v697);
  v701 = (v700 + 3983) % 0x3C0;
  LOBYTE(v700) = *(_BYTE *)(v9 + LODWORD(STACK[0x444])) ^ (*(_BYTE *)(v9 + v700 % 0x3C0) >> 4);
  LOWORD(v699) = 7 * (v700 ^ 0xE2)
               + 3983
               - 960 * ((unsigned __int16)((8739 * (7 * (v700 ^ 0xE2u) + 3983)) >> 16) >> 7);
  v702 = (v700 & 7 ^ 2 | v700 & 7 ^ 5)
       * (((HIBYTE(LODWORD(STACK[0x480])) & 0xF0 | (LODWORD(STACK[0x47C]) >> 28)) ^ 0xAD) + 569);
  v703 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v9
                                                                       + (unsigned __int16)(v702
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v702) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)v699) ^ 0xEC)) ^ 0xEC)
                                                 + 3983)
                              % 0x3C0u) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v9 + v701) ^ 0xEC) << 24);
  v704 = 16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)(v654 + 3983)) ^ 0xEC);
  v705 = v686 ^ v704;
  v706 = v686 ^ v704 ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(7 * v687
                                                               - 960 * ((244671 * v687 + 139217799) >> 25)
                                                               + 3983)) ^ 0xEC) << 16);
  v707 = v706 ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v676 + 3983)) ^ 0xEC) << 20);
  v708 = v707 ^ 0x68D8AAA2 ^ (v703 + 1759029922 - ((2 * v703) & 0xD0000000));
  LOBYTE(v698) = *(_BYTE *)(v9 + v684) ^ 0xEC;
  v709 = 7 * (STACK[0x490] & 0xFFFFFF0F | (16 * (v698 & 0xF))) + 1813;
  v710 = 7 * ((v704 ^ v698) & 0xF0 | (LODWORD(STACK[0x488]) >> 4))
       + 1813;
  v711 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v709 - 960 * ((unsigned __int16)((2185 * v709) >> 16) >> 5)));
  LODWORD(v518) = 7 * (((v686 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x484]) >> 12)) ^ 9) + 1813;
  v712 = 7 * (((v706 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x484])) & 0xF) ^ 5) + 1813;
  v713 = (v708 >> 28) - ((v708 >> 27) & 4);
  v714 = 7 * ((HIWORD(v707) & 0xF0 | (LODWORD(STACK[0x47C]) >> 20) & 0xF) ^ 0xD) + 1813;
  v715 = *(unsigned __int8 *)(v9
                            + (unsigned __int16)(v714
                                               - 960 * ((unsigned __int16)((2185 * v714) >> 16) >> 5))) ^ 0xEC;
  v716 = (v715 << 20) - 1760773706 - ((v715 << 21) & 0xE000000);
  v717 = HIBYTE(LODWORD(STACK[0x47C])) ^ 0xDA;
  v718 = 7
       * ((v717 & 0xF | (16 * (HIBYTE(v708) & 0xF)))
        + (((v716 & 0x7C00000 ^ 0x7000000) + (v716 & 0x7C00000 ^ 0xB0CABD6A)) ^ 0xB7CABC69));
  LOWORD(v717) = 7 * ((((v717 >> 4) | (16 * v713)) + 19488) ^ 0x4C20) + 1813;
  v719 = v711 ^ (16
               * (*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v710
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v710) >> 16) >> 5))) ^ 0xEC)) ^ 0xEC;
  v720 = v719 ^ ((*(unsigned __int8 *)(v9
                                     + (7
                                      * ((((v705 >> 8) & 0xF) << ((v711 & 4 ^ 4) + (v711 & 4))) ^ (LODWORD(STACK[0x488]) >> 8) & 0xF)
                                      + 1813)
                                     % 0x3C0) ^ 0xEC) << 8);
  LODWORD(v518) = v720 ^ ((*(unsigned __int8 *)(v9
                                              + (unsigned __int16)(v518
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0xEC) << 12);
  v721 = v518 ^ ((*(unsigned __int8 *)(v9
                                     + (unsigned __int16)(v712
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v712) >> 16) >> 5))) ^ 0xEC) << 16);
  v722 = v721 ^ ((*(unsigned __int8 *)(v9 + v718 % 0x3C0) ^ 0xEC) << 24) ^ ((*(unsigned __int8 *)(v9
                                                                                                + (unsigned __int16)v717
                                                                                                % 0x3C0u) ^ 0xC) << 28);
  v723 = (v722 - 1760773706 - ((2 * v722) & 0x2E19736C)) ^ v716;
  v724 = ((((((*(unsigned __int8 *)(v9
                                  + (unsigned __int16)(7 * (HIBYTE(v723) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v723) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v722 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v722 >> 28) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (BYTE2(v721) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v721) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v723 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v723 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v720 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v720 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((unsigned __int16)v518 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v518 >> 12) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12);
  v725 = LODWORD(STACK[0x468]) + LODWORD(STACK[0x478]);
  v726 = LODWORD(STACK[0x45C]) ^ 0x80288A6A ^ (16
                                             * (*(unsigned __int8 *)(v9
                                                                   + (unsigned __int16)(7 * (v719 >> 4)
                                                                                      + 3822
                                                                                      - 960
                                                                                      * ((unsigned __int16)((2185 * (7 * (v719 >> 4) + 3822)) >> 16) >> 5))) ^ 0xEC)) ^ (v724 | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v711 & 0xF ^ 0xC) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v711 & 0xF ^ 0xCu) + 3822)) >> 16) >> 5))) ^ 0xEC);
  v727 = LODWORD(STACK[0x4F0]) + 1332776993 + LODWORD(STACK[0x46C]);
  v728 = 7 * (STACK[0x454] & 0xFFFFFF0F | (16 * (STACK[0x40C] & 0xF))) + 1813;
  v729 = 7 * (((LODWORD(STACK[0x414]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x408])) & 0xF) ^ 8) + 1813;
  v730 = 7 * ((HIWORD(LODWORD(STACK[0x3E4])) & 0xF0 | (LODWORD(STACK[0x418]) >> 20) & 0xF) ^ 4) + 1813;
  v731 = 7 * (((LODWORD(STACK[0x3E8]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x418])) & 0xF) ^ 0xD) + 1813;
  v732 = ((*(unsigned __int8 *)(v9
                              + (unsigned __int16)(v730
                                                 - 960 * ((unsigned __int16)((2185 * v730) >> 16) >> 5))) ^ 0xEC) << 20) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v729 - 960 * ((unsigned __int16)((2185 * v729) >> 16) >> 5))) ^ 0xEC) << 16);
  v733 = *(unsigned __int8 *)(v9 + (unsigned __int16)(v728 - 960 * ((unsigned __int16)((2185 * v728) >> 16) >> 5)));
  v734 = 7 * (HIBYTE(LODWORD(STACK[0x404])) & 0xF0 | (LODWORD(STACK[0x410]) >> 28)) + 1813;
  v735 = v733 ^ (16 * (*(unsigned __int8 *)(v9 + (unsigned __int16)STACK[0x3F8]) ^ 0xEC)) ^ 0xEC;
  v736 = LODWORD(STACK[0x3DC]) ^ v735;
  v737 = v732 ^ v736 ^ ((*(unsigned __int8 *)(v9
                                            + (unsigned __int16)(v731
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v731) >> 16) >> 5))) ^ 0xEC) << 24);
  v738 = 7
       * ((v737 ^ ((*(unsigned __int8 *)(v9
                                       + (unsigned __int16)(v734
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v734) >> 16) >> 5))) ^ 0xC) << 28)) >> 28)
       + 3822;
  v739 = v727 ^ LODWORD(STACK[0x474]);
  v740 = v739 ^ 0xF6AED22C ^ LODWORD(STACK[0x470]);
  v741 = STACK[0x6D0];
  v742 = ((((((*(unsigned __int8 *)(v9
                                  + (unsigned __int16)(7 * (HIBYTE(v737) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v737) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(v738 - 960 * ((unsigned __int16)((2185 * v738) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (((v732 ^ v736) >> 16) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (((v732 ^ v736) >> 16) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v732 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v732 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * ((v736 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v736 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v9 + LODWORD(STACK[0x3D8])) ^ 0xEC) << 12) | *(unsigned __int8 *)(v9 + (unsigned __int16)(7 * (v733 & 0xF ^ 0xC) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * (v733 & 0xF ^ 0xCu) + 2862)) >> 16) >> 5))) ^ 0xEC;
  v743 = (LODWORD(STACK[0x618]) - 805830785 + LODWORD(STACK[0x458]) + 3702) ^ LODWORD(STACK[0x624]);
  v744 = STACK[0x6DC];
  v745 = v743 ^ 0x80288A6A ^ (16
                            * (*(unsigned __int8 *)(v9
                                                  + (unsigned __int16)(7 * (v735 >> 4)
                                                                     + 3822
                                                                     - 960
                                                                     * ((unsigned __int16)((2185
                                                                                          * (7
                                                                                           * (v735 >> 4)
                                                                                           + 3822)) >> 16) >> 5))) ^ 0xEC)) ^ v742;
  v746 = LODWORD(STACK[0x6F8]) ^ 0xA9E7C73D ^ (v683 - 212768845);
  v747 = LODWORD(STACK[0x460])
       + LODWORD(STACK[0x464])
       - ((2 * (LODWORD(STACK[0x460]) + LODWORD(STACK[0x464])) + 6261550) & 0x703F22)
       + 652731688;
  v748 = (805827083 - LODWORD(STACK[0x618])) ^ 0x12793CA9 ^ v747;
  v749 = ((2 * v747) & 0x87969D68 ^ 0x101D20) + (v747 ^ 0x43F35125);
  v750 = (-1332776993 - LODWORD(STACK[0x4F0])) ^ 0x8DF839C0 ^ (v725 + 700798420);
  v751 = (v727 + 2022316030) ^ (v725 + 1838195848);
  LODWORD(v518) = v749 ^ (LODWORD(STACK[0x618]) - 805830785 + LODWORD(STACK[0x458]) + 2022319732);
  v752 = (v518 ^ 0x7FBEDFFE) - 50371090 + ((2 * v518) & 0xFF7DBFFC);
  LODWORD(STACK[0x710]) = LODWORD(STACK[0x6A8]) ^ 0x6E0B3822;
  v753 = LODWORD(STACK[0x6B8]) ^ 0xEC;
  v754 = v616 ^ 0xFD3F192A;
  v755 = LODWORD(STACK[0x6C0]) ^ 0x4046C5A8;
  v756 = v743 + 1874981342;
  v757 = v725 - 1102198632;
  v758 = v739 - 1426314219;
  v759 = v751 + 468229691;
  LODWORD(STACK[0x654]) = -448597941 - v749;
  LODWORD(v518) = v679 ^ 0x92990FC4;
  LODWORD(STACK[0x658]) = v679 ^ 0xF38FFAE9;
  LODWORD(STACK[0x6B8]) = LODWORD(STACK[0x558]) - 1285540108;
  LODWORD(STACK[0x6C0]) = STACK[0x568];
  v760 = STACK[0x6E0];
  LODWORD(STACK[0x62C]) = v757;
  LODWORD(STACK[0x668]) = v740;
  v761 = v745;
  LODWORD(STACK[0x6F8]) = v745;
  LODWORD(STACK[0x708]) = v726;
  v762 = v680;
  v763 = v680 >> (v760 - 108);
  LODWORD(STACK[0x650]) = v763;
  LODWORD(STACK[0x5A0]) = v726 ^ 0x80288A6A;
  v764 = (v726 ^ 0x80288A6A) & (v680 ^ 0xEDB2E764);
  LODWORD(STACK[0x698]) = v680 ^ 0xEDB2E764;
  HIDWORD(v609) = v746 ^ 0x26A;
  LODWORD(v609) = v746 ^ 0x80288800;
  v765 = v609 >> 11;
  HIDWORD(v609) = v746 ^ 0xAAAAAAAA;
  LODWORD(v609) = v746 ^ 0x80288A40;
  LODWORD(STACK[0x690]) = v755;
  LODWORD(STACK[0x6A0]) = v755 ^ 0xEDB2E764;
  LODWORD(STACK[0x6B4]) = v746;
  LODWORD(STACK[0x6A8]) = v746 ^ 0x80288A6A;
  v766 = (v609 >> 6) ^ v765 ^ (((v746 << 7) ^ 0x14453500)
                             + ((v746 ^ 0x80288A6A) >> ((v763 & 0x19 ^ 9) + (v763 & 0x19 ^ 0x10))));
  LODWORD(STACK[0x638]) = v766;
  LODWORD(STACK[0x670]) = v761 ^ 0x80288A6A;
  LODWORD(STACK[0x648]) = v740 ^ 0xEDB2E764;
  v767 = (v746 ^ 0x80288A6A) & (v740 ^ 0xEDB2E764) ^ (v761 ^ 0x80288A6A) & (v680 ^ 0xEDB2E764) ^ (((v746 ^ 0x80288A6A) & (v755 ^ 0xEDB2E764))
                                                                                                + v764
                                                                                                - 2
                                                                                                * ((v746 ^ 0x80288A6A) & (v755 ^ 0xEDB2E764) & v764));
  v768 = v767 - 307042460 - ((2 * v767) & 0xDB65CEC8);
  v769 = v759;
  v770 = v759 - v757;
  LODWORD(STACK[0x6F4]) = v769;
  v771 = ((2 * (v758 - v770 - 555053425)) & 0x7F7BF66E) + ((v758 - v770 - 555053425) ^ 0x3FBDFB37);
  LODWORD(STACK[0x644]) = v752;
  v772 = v752 - (v749 + 448597941);
  v773 = ((2 * (v756 - v772 - 1325759278)) & 0xB7FFDFBA) + ((v756 - v772 - 1325759278) ^ 0x5BFFEFDD);
  LODWORD(STACK[0x640]) = 0;
  v774 = v766 + v769;
  v775 = LODWORD(STACK[0x6B8]) + v766 + v769 + (LODWORD(STACK[0xB2C]) ^ 0x9EBAEE30);
  v776 = v758;
  LODWORD(STACK[0x624]) = v758;
  v777 = v770 - v757 - ((2 * (v770 - v757) + 77122386) & 0x4286D936) + 596628036;
  LODWORD(STACK[0x634]) = v771;
  v778 = v749 + 448597941;
  v779 = (v777 ^ 0xDEBC9364) - v757 + v771 - 1653982202;
  LODWORD(STACK[0x608]) = v779;
  v780 = (v777 ^ (v757 - ((2 * v757 + 1646446330) & 0x4286D936) - 1839935464))
       + ((v774 + 1679253957) | 0x97F3BF30)
       - ((v774 + 1679253957) & 0x680C40CF);
  LODWORD(STACK[0x60C]) = 698412312;
  v781 = v756;
  LODWORD(STACK[0x630]) = v756;
  v782 = v772;
  LODWORD(STACK[0x5F0]) = v772;
  v783 = v772 - (v749 + 448597941) + 896963906;
  v784 = (v748 ^ 0x12412338) + v781 + 1951413181 + v773;
  LODWORD(STACK[0x5DC]) = v773;
  v785 = v783 ^ (v749 - 1043429491);
  LODWORD(STACK[0x5F8]) = v785;
  v786 = (v750 ^ 0x8DF839C0) + v776 + 1431825964 + v771;
  v787 = ((2 * (v786 ^ v777)) & 0xFEF65FFE ^ 0x42865936) + (v786 ^ v777 ^ 0xDE384364);
  LODWORD(STACK[0x628]) = v768 ^ v740;
  v788 = v770 + (v768 ^ v740);
  v789 = v788 + v775;
  LODWORD(STACK[0x678]) = 0;
  v790 = (unint64_t)off_1E2538470[LODWORD(STACK[0x6E0]) ^ 0x470] - 4;
  STACK[0x618] = v790;
  v791 = *(_DWORD *)(v790
                   + 4
                   * (7
                    * (((((v788 + 887369325) & 0x911DF ^ 0x911DF) + ((v788 + 887369325) & 0x911DF)) & 0x10006F) + 31)
                    % 0xC0)) ^ 0xC3D30076;
  v792 = v791 - ((2 * v791 + 1550027442) & 0x6249596A) + 1599500814;
  v793 = ((v792 ^ 0xB124ACB5) + (v792 ^ 0x45C91981 ^ (v792 >> 4)) + 1) ^ (((v792 >> 4) ^ 0xF4EDB534) + 1);
  v794 = ((v792 >> 4) ^ 0x749B7183 ^ (v793 - ((2 * v793) & 0xFF127690) + 2139700040)) + (v792 ^ 0xB124ACB5);
  LODWORD(STACK[0x600]) = v789 + 1479314859 + (v792 ^ 0xF08BE10A ^ ((v794 >> 1) - 1322996555 - (v794 & 0x6249596A)));
  v795 = v753;
  HIDWORD(v609) = v753 ^ 0x870;
  LODWORD(v609) = v753 ^ 0x5894C000;
  v796 = v609 >> 13;
  HIDWORD(v609) = v795 ^ 0x14C870;
  LODWORD(v609) = v795 ^ 0x58800000;
  v797 = v609 >> 22;
  v798 = v795 ^ 0x5894C870;
  LODWORD(STACK[0x680]) = v795;
  HIDWORD(v609) = v795;
  LODWORD(v609) = v795 ^ 0x5894C870;
  LODWORD(STACK[0x5E0]) = (v609 >> 2) ^ v796 ^ v797;
  LODWORD(STACK[0x614]) = v518;
  LODWORD(STACK[0x700]) = v754;
  LODWORD(STACK[0x6DC]) = v744;
  v799 = (v795 ^ 0x5894C870) & (v744 ^ 0x1DE345E) ^ (v795 ^ 0x5894C870) & (v754 ^ 0x1DE345E);
  LODWORD(STACK[0x610]) = STACK[0x6C8];
  v800 = STACK[0x660];
  v801 = STACK[0x710];
  v802 = LODWORD(STACK[0x710]) ^ 0x1DE345E;
  LODWORD(STACK[0x6C8]) = STACK[0x660];
  v800 ^= 0x5894C870u;
  LODWORD(STACK[0x6D0]) = v741;
  v803 = (v802 ^ v744 ^ 0x1DE345E) & v800 ^ v799 ^ (v741 ^ 0x5894C870) & v802 ^ (v741 ^ 0x5894C870) & (v754 ^ 0x1DE345E);
  LODWORD(STACK[0x590]) = v744 ^ 0x1DE345E;
  LODWORD(STACK[0x594]) = v802;
  LODWORD(STACK[0x59C]) = v741 ^ 0x5894C870;
  LODWORD(STACK[0x598]) = v798;
  v804 = v802 & (v744 ^ 0x1DE345E) ^ (v744 ^ 0x1DE345E) & (v754 ^ 0x1DE345E) ^ v802 & (v754 ^ 0x1DE345E) ^ v798 & v800 ^ (v741 ^ 0x5894C870) & v798 ^ (v741 ^ 0x5894C870) & v800;
  LODWORD(STACK[0x5FC]) = v804;
  LODWORD(STACK[0x5F4]) = v780 + 1;
  LODWORD(v790) = v787 + v779;
  v805 = v780
       + 1
       - (v787
        + v779)
       - 1741047188
       - ((2 * (v780 + 1 - (v787 + v779) - 1741047188) + 1022908030) & 0x925DF150);
  v787 += 8704001;
  v806 = v805 - 408214553;
  v807 = v787
       - (v786 ^ 0xF1C1D3AC)
       + ((v805 - 408214553) & 0x72FE50BF ^ 0xCD2FFFE8)
       + ((v805 - 408214553) & 0x72FE50BF ^ 0xBFD1AF57);
  v808 = v773 - v782;
  v809 = ((2 * (v784 ^ v783)) & 0x2FFFAB7E) + (v784 ^ v783 ^ 0x97FFD5BF);
  LODWORD(STACK[0x5C8]) = v809;
  v810 = v809 + v808;
  v811 = (((v790 + 770434528) ^ v804) - ((2 * ((v790 + 770434528) ^ v804)) & 0x925DF150) - 919668568) ^ v806;
  v812 = ((2 * v784) & 0x3EF7BBF2 ^ 0x2283A350) + (v784 ^ 0xEEBA0E55);
  v813 = v785
       - (v809
        + v808)
       + 2114618957
       - ((2 * (v785 - (v809 + v808) + 2114618957) + 652496154) & 0x573B1A68)
       + 2131735489;
  v814 = ((v813 ^ 0xD46272CB) + (v803 ^ 0x2B9D8D34 ^ v813) + 1) ^ (v803 - 2 * (v803 & (v809 + v773 - v782 + 723049954))) ^ ((v803 ^ 0xF752F9F5 ^ (v811 - 145557003 - ((2 * v811) & 0xEEA5F3EA))) - v811);
  v815 = v806 ^ ((v786 ^ 0xF1C1D3AC) - 234233500);
  LODWORD(STACK[0x65C]) = v815;
  LODWORD(STACK[0x660]) = v790 - 172231049;
  v816 = ((2 * ((v790 - 172231049) ^ (234233500 - (v786 ^ 0xF1C1D3AC)))) & 0xFD7FFD76)
       + ((v790 - 172231049) ^ (234233500 - (v786 ^ 0xF1C1D3AC)) ^ 0xFEBFFEBB);
  LODWORD(STACK[0x5D4]) = v807 + 2;
  LODWORD(v518) = v807 + 2 - v790;
  LODWORD(STACK[0x6B8]) = v518;
  LODWORD(v790) = (v786 ^ 0xF1C1D3AC) - v816 + (v815 ^ 0x43536E32) + 1541657761 + v518;
  LODWORD(v518) = v790 - 1998996383 - ((2 * v790) & 0x11B378C2);
  v816 += 20971845;
  LODWORD(v790) = (v815 ^ 0xBCAC91CD) + v816;
  LODWORD(STACK[0x5D8]) = v790;
  v817 = v518 ^ v790;
  v818 = (v518 ^ v790 ^ 0x88D9BC61) + v816;
  v819 = ((2 * (v518 ^ v790)) ^ 0xEE4C873D) + v818 + 1;
  v820 = v819 + 934104238 - 2 * (v819 & 0x37AD4CAF ^ v818 & 1);
  LODWORD(v790) = (v820 ^ 0xC852B351) - (v786 ^ 0xF1C1D3AC) + 234233501;
  LODWORD(STACK[0x5D0]) = v790;
  v821 = v518;
  v822 = (v518 ^ 0xB5AA8932) + v790 + 1;
  LODWORD(v518) = (v518 ^ 0xB512476D)
                + (v820 ^ 0x37AD4CAE)
                + v822
                - 1647793404
                - ((2 * ((v518 ^ 0xB512476D) + (v820 ^ 0x37AD4CAE) + v822 + 1)) & 0x3B915606);
  LODWORD(STACK[0x5CC]) = v518;
  v823 = v822 - ((2 * v822) & 0xFC997CCA);
  LODWORD(STACK[0x5B0]) = v821;
  v824 = ((2 * ((v821 ^ 0x4AEDB892) + 558097747)) & 0xF7FDE7FA) + (((v821 ^ 0x4AEDB892) + 558097747) ^ 0xFBFEF3FD);
  v825 = v809 - v812;
  LODWORD(v790) = STACK[0x5E0];
  v826 = LODWORD(STACK[0x5E0]) - v825 + v787 + v814;
  v827 = (v823 + 2118958693) ^ v821;
  LODWORD(STACK[0x5E8]) = v827;
  LODWORD(STACK[0x5B4]) = v824 + 67177475;
  LODWORD(STACK[0x5C4]) = v827 ^ 0xEA3B2A01;
  v828 = (v824 + 67177475 + (v827 ^ 0xEA3B2A01) + 1) ^ v827;
  LODWORD(STACK[0x5EC]) = v828;
  v829 = STACK[0x600];
  v830 = v826 + LODWORD(STACK[0x600]) - 343783291;
  v828 ^= 0x15C4D5FEu;
  LODWORD(STACK[0x5C0]) = v828;
  v831 = v830 + v828 - ((2 * (v830 + v828)) & 0x30A67014) + 408107018;
  LODWORD(STACK[0x5AC]) = (7 * ((v831 >> 28) ^ 1) + 3640) % ((v518 & 0x3C0 ^ 0xC0) + (v518 & 0x3C0 ^ 0x300));
  HIDWORD(v609) = v762 ^ 0x764;
  LODWORD(v609) = v762 ^ 0xEDB2E000;
  v832 = STACK[0x698];
  LODWORD(v518) = (v609 >> 11) ^ ((LODWORD(STACK[0x698]) >> (((LODWORD(STACK[0x6F4]) + 5) ^ (2 - LODWORD(STACK[0x6F4]))) & 6))
                                + ((v762 << 26) ^ 0x90000000));
  LODWORD(STACK[0x688]) = v762;
  v833 = (LODWORD(STACK[0x624]) + 731882418) ^ (LODWORD(STACK[0x62C]) - 1354572816) ^ LODWORD(STACK[0x638]);
  v834 = STACK[0x708];
  v835 = STACK[0x6A0] & v832 ^ v832 & STACK[0x648] ^ LODWORD(STACK[0x6F8]) ^ STACK[0x6A8] & (LODWORD(STACK[0x6F8]) ^ LODWORD(STACK[0x708]));
  LODWORD(v518) = (-1725554153
                 - LODWORD(STACK[0x630])
                 + ((LODWORD(STACK[0x650]) | (v762 << 7)) ^ v518 ^ 0xD973B276 ^ (LODWORD(STACK[0x630]) + 1725554153))) ^ (LODWORD(STACK[0x654]) + 448597941 + ((LODWORD(STACK[0x650]) | (v762 << 7)) ^ v518 ^ 0xD973B276 ^ (v778 - 448597941))) ^ (((LODWORD(STACK[0x650]) | (v762 << 7)) ^ v518 ^ 0xAFC25F84 ^ (v833 - ((2 * v833) & 0xED63DBE4) + 1991372274)) - v833);
  v836 = (LODWORD(STACK[0x634]) - 1069415223) ^ (LODWORD(STACK[0x62C]) + 584566980) ^ LODWORD(STACK[0x628]);
  v837 = (1543499741 - LODWORD(STACK[0x5DC]) + (v835 ^ 0x80288A6A ^ (LODWORD(STACK[0x5DC]) - 1543499741))) ^ (LODWORD(STACK[0x654]) - 1490541855 + (v835 ^ 0x80288A6A ^ (v778 + 1490541855))) ^ ((v835 ^ 0x4E5878DE ^ (v836 - ((2 * v836) & 0x9CE1E568) - 831458636)) - v836);
  v838 = *(_DWORD *)(STACK[0x618] + 4 * (7 * (LODWORD(STACK[0x60C]) ^ 0x29A0ED29u) % 0xC0));
  v839 = ((8 * v838) ^ 0x767EBBF8) - 22682256;
  v840 = (v839 + (v838 ^ 0x11302880 ^ v839) + 1) ^ ((v838 ^ 0x11302880) + 1);
  v841 = v838 ^ 0x1804C188 ^ (v840 - ((2 * v840) & 0xED962DEE) - 154462473);
  HIDWORD(v609) = v801 ^ 2;
  LODWORD(v609) = v801 ^ 0x1DE345C;
  v842 = v609 >> 2;
  HIDWORD(v609) = v801 ^ 0x145E;
  LODWORD(v609) = v801 ^ 0x1DE2000;
  v843 = v609 >> 13;
  v844 = LODWORD(STACK[0x6C0])
       - LODWORD(STACK[0x644])
       - LODWORD(STACK[0x5F0])
       + v518
       + (*((_DWORD *)&STACK[0x850] + (LODWORD(STACK[0x640]) + 41989) % 0x114u) ^ 0x9EBAEE30)
       + v837
       + ((v841 + v839) ^ 0xA65ACDE9);
  HIDWORD(v609) = v801 ^ 0x1E345E;
  LODWORD(v609) = v801 ^ 0x1C00000;
  v845 = LODWORD(STACK[0x608]) ^ v790 ^ (LODWORD(STACK[0x5F4]) + 1745633487);
  LODWORD(v518) = LODWORD(STACK[0x5C8])
                - 1744841281
                - 2 * LODWORD(STACK[0x5C8])
                + ((((v808 + 363961794) ^ v843 ^ v842 ^ (v609 >> 22)) - v808 - 363961794) ^ ((v843 ^ v842 ^ (v609 >> 22) ^ LODWORD(STACK[0x5F8]))
                                                                                           - LODWORD(STACK[0x5F8])) ^ ((v843 ^ v842 ^ (v609 >> 22) ^ 0x11AF16A0 ^ (v845 + 296687264 - ((2 * v845) & 0x235E2D40))) - v845));
  v846 = (v518 ^ 0x7F67E5FF) + LODWORD(STACK[0x5FC]) + ((2 * v518) & 0xFECFCBFE) + LODWORD(STACK[0x5D4]);
  LODWORD(STACK[0x5F4]) = v846;
  v847 = v813 ^ (v812 - ((2 * (v812 - 762444949)) & 0x573B1A68) - 30699361);
  LODWORD(STACK[0x6C0]) = v847;
  v848 = STACK[0x614];
  v849 = v820 ^ (LODWORD(STACK[0x658]) + 934104238 - 2 * (STACK[0x614] & 0x10 ^ STACK[0x658] & 0x37AD4CBE));
  LODWORD(v790) = (v849 - ((2 * v849) & 0xCBD987CA) + 1710015461) ^ v817;
  v850 = STACK[0x610];
  LODWORD(v790) = (v790 ^ 0x72024108)
                + (LODWORD(STACK[0x610]) ^ 0x60C8C173 ^ ((v790 ^ 0xED357F84)
                                                       + 1486145648
                                                       - ((2 * (v790 ^ 0xED357F84)) & 0xB12990E0)));
  v851 = v810 - ((2 * v810 + 97639666) & 0x4AB4056) + 1967034020;
  LODWORD(STACK[0x638]) = v851;
  v852 = v825 - v810 + 40547322;
  LODWORD(STACK[0x640]) = v852;
  LODWORD(v518) = v852 + v812 - 762444949;
  v853 = v851 ^ (801610944 - v812 - ((48494890 - 2 * v812) & 0x4AB4056));
  v847 ^= 0x75826965u;
  LODWORD(STACK[0x630]) = v847;
  LODWORD(v518) = v518 - (v847 + v853);
  v854 = v518 ^ (v847 + v853);
  LODWORD(STACK[0x644]) = v854;
  v855 = ((2 * (v853 - v854)) & 0xFFBE7FFC) + ((v853 - v854) ^ 0xFFDF3FFE);
  LODWORD(STACK[0x634]) = v855;
  LODWORD(v790) = v855
                + v812
                + v824
                + v829
                + ((-2146306 - v855 + (v850 ^ 0x5894C870 ^ (v855 + 2146306))) ^ ((v850 ^ 0x5894C870 ^ v854) - v854) ^ (v790 + 1));
  v856 = (v823 + 2118958693) ^ LODWORD(STACK[0x5D8]);
  v857 = ((v518 ^ 0x3DCBFB0C) + 12111456) ^ ((v518 ^ 0x3D733553) + 1);
  v858 = v518 ^ 0x6DE24F30 ^ (v857 - ((2 * v857) & 0x5EDD0B38) - 1351711332);
  LOBYTE(v851) = v790 - 88;
  v859 = v790 + 352823720 - ((2 * v790 - 1386242336) & 0x7CAFB450) - 16;
  LODWORD(v790) = (v518 ^ 0x3D733553) - (v855 + v812) + 760298644;
  LODWORD(STACK[0x62C]) = v790;
  LODWORD(v518) = 7 * (HIBYTE(v859) & 0xF ^ 0xE) + 3640;
  LOWORD(v829) = v518 - 960 * ((unsigned __int16)((2185 * v518) >> 16) >> 5);
  LODWORD(STACK[0x628]) = v858 - 584004276;
  LODWORD(v518) = (v848 ^ 0x1DE345E) + v844 + 1969413068 - (v858 - 584004276) - 1539655867 + LODWORD(STACK[0x5D0]);
  LODWORD(v518) = v518 + 405490669 - ((2 * v518) & 0x305697DA);
  v860 = 7 * ((v859 >> 20) & 0xF ^ 5) + 3640;
  v861 = STACK[0x718];
  v862 = 7 * (HIWORD(v859) & 0xF ^ 7) + 3640;
  v863 = (((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)v829) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(7 * ((v859 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v859 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0xC) << 12) | *(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v862 - 960 * ((unsigned __int16)((2185 * v862) >> 16) >> 5))) ^ 0xEC) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (unsigned __int16)(v860 - 960 * ((unsigned __int16)((2185 * v860) >> 16) >> 5))) ^ 0xEC));
  LODWORD(STACK[0x658]) = v859;
  v864 = 7 * (((unsigned __int16)(v859 & 0xF000) >> 12) ^ 0xD) + 3640;
  v865 = 7 * ((v859 >> 4) ^ 2) + 3640;
  v866 = (v863 << 16) + 1228446385 - ((v863 << 17) & 0x92700000);
  v867 = ((v866 ^ 0x49389AB1)
        + ((*(unsigned __int8 *)(v861
                               + (unsigned __int16)(7 * ((v859 >> 8) & 0xF ^ 0xA)
                                                  + 3640
                                                  - 960
                                                  * ((unsigned __int16)((2185 * (7 * ((v859 >> 8) & 0xF ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0xEC) << 8)) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)(v864 - 960 * ((unsigned __int16)((2185 * v864) >> 16) >> 5))) ^ 0xEC) << 12);
  v868 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * (v851 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v851 & 0xF ^ 8u) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v869 = (v867 | v868) ^ (16
                        * (*(unsigned __int8 *)(v861
                                              + (unsigned __int16)(v865
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v865) >> 16) >> 5))) ^ 0xEC));
  v870 = 7 * (BYTE3(v518) & 0xF ^ 8) + 3640;
  LOBYTE(v860) = (v834 & 0x5C ^ 0x14) + (v834 & 0x5C ^ 0x48);
  v871 = ((v858 + 12111455) ^ v790) - ((2 * ((v858 + 12111455) ^ v790)) & 0xDC8C4D40) - 297392480;
  LOBYTE(v790) = (((v858 + 95) ^ v790) - ((2 * ((v858 + 95) ^ v790)) & 0x40) - 96) & 0xB4;
  LODWORD(v790) = (v518 ^ 0x182B4BED) >> (v860 + (v790 ^ 0xA0 | v790 ^ 0x14));
  v872 = ((*(unsigned __int8 *)(v861 + (unsigned __int16)(v870 - 960 * ((unsigned __int16)((2185 * v870) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)(7 * ((v518 >> 28) ^ 1) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v518 >> 28) ^ 1) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12);
  LOWORD(v870) = 7 * (v790 >> 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v790 >> 4) + 3640)) >> 16) >> 5);
  LODWORD(v790) = v872 | *(unsigned __int8 *)(v861
                                            + (unsigned __int16)(7 * (v790 & 0xF)
                                                               + 3640
                                                               - 960
                                                               * ((unsigned __int16)((2185 * (7 * (v790 & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v873 = 7 * (((unsigned __int16)v518 >> 12) ^ 4) + 3640;
  v874 = 7 * ((v518 >> 8) & 0xF ^ 0xB) + 3640;
  LODWORD(v790) = ((_DWORD)v790 << 8) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)v870) ^ 0xEC) << 12);
  v875 = 7 * ((v518 >> 4) ^ 0xE) + 3640;
  LODWORD(v518) = 7 * (((_BYTE)v518 + 32) & 0xF ^ 0xD) + 3640;
  LODWORD(v790) = v790 | *(unsigned __int8 *)(v861
                                            + (unsigned __int16)(v874
                                                               - 960 * ((unsigned __int16)((2185 * v874) >> 16) >> 5))) ^ 0xEC;
  v876 = ((_DWORD)v790 << 8) + 1576664731 - (((_DWORD)v790 << 9) & 0xBBF3FC00);
  v877 = v876 ^ ((*(unsigned __int8 *)(v861
                                     + (unsigned __int16)(v873
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v873) >> 16) >> 5))) ^ 0xEC) << 12);
  v878 = v876;
  LODWORD(v518) = *(unsigned __int8 *)(v861
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0xEC;
  v879 = (v877 ^ 0x5DF9FE9B | v518) ^ (16
                                     * (*(unsigned __int8 *)(v861
                                                           + (unsigned __int16)(v875
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v875) >> 16) >> 5))) ^ 0xEC));
  v880 = 7 * (v868 & 0xF | (16 * (v518 & 0xF)));
  v881 = (unsigned __int16)(v880 + 3983) % 0x3C0u;
  v882 = v880 - 960;
  if (v880 < 0x3C0)
    v882 = v880;
  v883 = LODWORD(STACK[0x5A4]) ^ 0xEC;
  v884 = *(unsigned __int8 *)(v861 + v881) ^ v883;
  v885 = 7 * v884;
  LODWORD(STACK[0x610]) = 7 * v884;
  v884 *= 244671;
  LODWORD(STACK[0x608]) = v884;
  v886 = *(unsigned __int8 *)(v861 + (unsigned __int16)(v885 - 960 * (v884 >> 25)));
  LODWORD(STACK[0x624]) = v869;
  v887 = 7
       * ((((v886 >> 4) ^ 0xE) - ((2 * ((v886 >> 4) ^ 0xE)) & 0x18) - 20) ^ *(unsigned __int8 *)(v861 + v882))
       + 3983;
  v888 = (v869 >> 4) - ((v869 >> 3) & 0x15F9496C) - 620976970;
  v889 = (v888 & 0xD ^ 4) + (v888 & 0xD ^ 0x339);
  v890 = v888 & 0xF ^ 6;
  LODWORD(STACK[0x618]) = v890;
  v891 = v879 & 0xF0 | v890;
  v892 = *(unsigned __int8 *)(v861 + (unsigned __int16)(7 * (v891 + (v889 & 0x23B))) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v861 + (unsigned __int16)(v887 - 960 * ((unsigned __int16)((8739 * v887) >> 16) >> 7))) ^ 0xEC));
  v893 = 7 * v891;
  if (v893 >= 0x3C0)
    v893 -= 960;
  LODWORD(STACK[0x648]) = v856;
  v894 = v892 ^ 0xEC;
  LODWORD(STACK[0x5FC]) = 7 * v894;
  v895 = (*(unsigned __int8 *)(v861
                             + (unsigned __int16)(7 * v894
                                                - 960 * ((unsigned __int16)((244671 * v894) >> 16) >> 9))) ^ 0xECu) >> ((v856 ^ 0x73) + (~(_BYTE)v856 & 0xE5 ^ 0x7B) + ((v856 ^ 8) & 0x1A) - 21);
  v896 = 7 * ((v895 - ((2 * v895) & 0xD8) - 20) ^ *(unsigned __int8 *)(v861 + v893)) + 3983;
  v897 = 7 * ((v879 >> 4) & 0xF0 | (v869 >> 8) & 0xF);
  v898 = *(unsigned __int8 *)(v861 + (unsigned __int16)(v897 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v861 + (unsigned __int16)(v896 - 960 * ((unsigned __int16)((8739 * v896) >> 16) >> 7))) ^ 0xEC));
  if (v897 >= 0x3C0)
    v897 -= 960;
  v899 = v898 ^ 0xEC;
  LODWORD(STACK[0x5F8]) = 7 * v899;
  v900 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * v899
                                               - 960 * ((unsigned __int16)((244671 * v899) >> 16) >> 9))) >> 4;
  v901 = 7
       * (((v900 ^ 0xE) + ((2 * ((v900 ^ 0xE | 0x7C) ^ v900)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v861 + v897))
       + 3983;
  v902 = 7 * (((v877 >> 8) & 0xF0 | ((unsigned __int16)v867 >> 12)) ^ 0xF0);
  v903 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * (((v877 >> 8) & 0xF0 | ((unsigned __int16)v867 >> 12)) ^ 0xF0)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v861
                                                             + (unsigned __int16)(v901
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v901) >> 16) >> 7))) ^ 0xEC));
  if (v902 >= 0x3C0)
    v902 -= 960;
  v904 = v903 ^ 0xEC;
  LODWORD(STACK[0x5F0]) = 7 * v904;
  LODWORD(STACK[0x5E0]) = 244671 * v904;
  v905 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * v904
                                               - 960 * ((unsigned __int16)((244671 * v904) >> 16) >> 9)));
  v906 = 7
       * ((((v905 >> 4) ^ 0xE) + ~(2 * (((v905 >> 4) ^ 0xE) & 0xFD ^ ((v905 & 0x10) != 0))) - 19) ^ *(unsigned __int8 *)(v861 + v902))
       + 3983;
  v907 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7
                                               * (BYTE2(v867) & 0xF | (16
                                                                     * ((HIWORD(v877) ^ 0xFFF9) & ((((_BYTE)v844 - 41) & 0xF ^ 0xF)
                                                                                                 + (((_BYTE)v844 - 41) & 0xF)))))
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v861
                                                             + (unsigned __int16)(v906
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v906) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x5DC]) = 7 * v907;
  v908 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * v907
                                               - 960 * ((unsigned __int16)((244671 * v907) >> 16) >> 9))) >> 4;
  v909 = 7
       * (((v908 ^ 0xE) + ((2 * ((v908 ^ 0xE | 0x7C) ^ v908)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v861 + (unsigned __int16)(7 * (BYTE2(v867) & 0xF | (16 * ((HIWORD(v877) ^ 0xFFF9) & ((((_BYTE)v844 - 41) & 0xF ^ 0xF) + (((_BYTE)v844 - 41) & 0xF)))))) % 0x3C0u))
       + 3983;
  LODWORD(STACK[0x600]) = v878;
  LODWORD(STACK[0x5D8]) = 7
                        * (*(unsigned __int8 *)(v861
                                              + (unsigned __int16)(7
                                                                 * ((BYTE2(v878) & 0xF0 | (v866 >> 20) & 0xF) ^ 0xF3)
                                                                 + 3983)
                                              % 0x3C0u) ^ (16
                                                         * (*(unsigned __int8 *)(v861
                                                                               + (unsigned __int16)(v909
                                                                                                  - 960 * ((unsigned __int16)((8739 * v909) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC);
  v910 = 7 * (((v878 >> 20) & 0xF0 | HIBYTE(v866) & 0xF) ^ 0xD9);
  LODWORD(STACK[0x6F4]) = v871;
  LODWORD(STACK[0x650]) = v871 ^ 0x30DC0A56;
  v911 = (v858 + 570209203 + (v871 ^ 0x30DC0A56)) ^ v871;
  LODWORD(STACK[0x654]) = v911;
  v912 = v846
       + v844
       + 1969413068
       + (v911 ^ 0x30DC0A56)
       - ((2 * (v846 + v844 + 1969413068 + (v911 ^ 0x30DC0A56)) - 750948518) & 0xB2144F78);
  LODWORD(STACK[0x5B8]) = v831;
  v913 = 7 * (HIBYTE(v831) & 0xF ^ 8) + 3640;
  v914 = 7 * ((v831 >> 20) & 0xF ^ 5) + 3640;
  v915 = 7 * (HIWORD(v831) & 0xF ^ 3) + 3640;
  v916 = ((*(unsigned __int8 *)(v861
                              + (unsigned __int16)(v913
                                                 - 960 * ((unsigned __int16)((2185 * v913) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v861 + LODWORD(STACK[0x5AC])) ^ 0xEC) << 12) | *(unsigned __int8 *)(v861 + (unsigned __int16)(v915 - 960 * ((unsigned __int16)((2185 * v915) >> 16) >> 5))) ^ 0xEC;
  v917 = 7 * (((unsigned __int16)v831 >> 12) ^ 3) + 3640;
  v918 = 7 * ((v831 >> 8) & 0xF ^ 8) + 3640;
  v919 = (v916 << 8) ^ (16
                      * (*(unsigned __int8 *)(v861
                                            + (unsigned __int16)(v917
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v917) >> 16) >> 5))) ^ 0xEC)) ^ (*(unsigned __int8 *)(v861 + (unsigned __int16)(v918 - 960 * ((unsigned __int16)((2185 * v918) >> 16) >> 5))) ^ 0xEC | ((*(unsigned __int8 *)(v861 + (unsigned __int16)(v914 - 960 * ((unsigned __int16)((2185 * v914) >> 16) >> 5))) ^ 0xEC) << 12));
  v920 = (v919 << 8) - 963747982 - ((v919 << 9) & 0x8D1CBE00);
  v921 = v912 + 1118363497;
  v922 = 7 * (((v912 + 1118363497) >> 28) ^ 0xD) + 3640;
  LOWORD(v914) = v922 - 960 * ((unsigned __int16)((2185 * v922) >> 16) >> 5);
  v923 = 7 * (HIBYTE(v921) & 0xF ^ 9) + 3640;
  LOWORD(v918) = v923 - 960 * ((unsigned __int16)((2185 * v923) >> 16) >> 5);
  v924 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * (v831 & 0xF ^ 0xA)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v831 & 0xF ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v925 = (v920 ^ 0xC68E5F72 | v924) ^ (16
                                     * (*(unsigned __int8 *)(v861
                                                           + (unsigned __int16)(7 * (v831 >> 4)
                                                                              + 3640
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * (7 * (v831 >> 4) + 3640)) >> 16) >> 5))) ^ 0xEC));
  v926 = 7 * (HIWORD(v921) & 0xF ^ 0xA) + 3640;
  v927 = ((((*(unsigned __int8 *)(v861 + (unsigned __int16)v918) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)v914) ^ 0xEC) << 12) | *(unsigned __int8 *)(v861 + (unsigned __int16)(v926 - 960 * ((unsigned __int16)((2185 * v926) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)(7 * ((v921 >> 20) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v921 >> 20) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xEC) << 12);
  v928 = 7 * ((v921 >> 8) & 0xF ^ 7) + 3640;
  v929 = (((3 - ((v921 >> 12) ^ 0x5D)) ^ (v921 >> 12)) & 7 ^ 1)
       * ((((unsigned __int16)v921 >> 12) ^ 2) + 520);
  v930 = 7 * ((v921 >> 4) ^ 0xB) + 3640;
  v931 = ((v927 | *(unsigned __int8 *)(v861
                                     + (unsigned __int16)(v928
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v928) >> 16) >> 5))) ^ 0xEC) << 8) ^ ((*(unsigned __int8 *)(v861 + (unsigned __int16)(v929 - 960 * ((unsigned __int16)((2185 * v929) >> 16) >> 5))) ^ 0xEC) << 12);
  v932 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * (v921 & 0xF ^ 0xC)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v921 & 0xF ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0xEC;
  v933 = (v931 | v932) ^ (16
                        * (*(unsigned __int8 *)(v861
                                              + (unsigned __int16)(v930
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v930) >> 16) >> 5))) ^ 0xEC));
  v934 = 7 * (v924 & 0xF | (16 * (v932 & 0xF)));
  v935 = *(unsigned __int8 *)(v861 + (unsigned __int16)(v934 + 3983) % 0x3C0u) ^ v883;
  if (v910 >= 0x3C0)
    v936 = v910 - 960;
  else
    v936 = v910;
  LODWORD(STACK[0x5A8]) = v936;
  v937 = v934 - 960;
  if (v934 < 0x3C0)
    v937 = v934;
  LODWORD(STACK[0x60C]) = 7 * v935;
  v938 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * v935
                                               - 960 * ((unsigned __int16)((244671 * v935) >> 16) >> 9))) >> 4;
  v939 = 7
       * (((v938 ^ 0xE) + ((2 * ((v938 ^ 0xE | 0x7C) ^ v938)) ^ 0x1B) - 19) ^ *(unsigned __int8 *)(v861 + v937))
       + 3983;
  v940 = v939 - 960 * ((8739 * v939) >> 23);
  v941 = 7 * (v933 & 0xF0 | (v925 >> 4));
  if (v941 >= 0x3C0)
    v941 -= 960;
  v942 = *(unsigned __int8 *)(v861 + (unsigned __int16)(7 * (v933 & 0xF0 | (v925 >> 4)) + 3983)
                                   % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v861 + (unsigned __int16)v940) ^ 0xEC)) ^ 0xEC;
  v943 = *(_BYTE *)(v861 + v941);
  v944 = 7 * v942;
  LODWORD(STACK[0x5D4]) = 7 * v942;
  v942 *= 244671;
  LODWORD(STACK[0x5D0]) = v942;
  v945 = *(unsigned __int8 *)(v861 + (unsigned __int16)(v944 - 960 * (v942 >> 25)));
  v946 = 7 * (((v945 >> 4) ^ 0xE) + (v943 ^ 0xEC) - 2 * (((v945 >> 4) ^ 0xE) & (v943 ^ 0xC))) + 3983;
  LODWORD(STACK[0x614]) = v925;
  v947 = (v933 >> 4) & 0xF0 | (v925 >> 8) & 0xF;
  v948 = v947 - 1458792197 - 2 * (v947 ^ (v925 >> 8) & 4);
  v949 = (~(2 * v948) & 0x72) + (v948 ^ 0xA90C9AC2);
  v950 = *(unsigned __int8 *)(v861 + ((v949 & 0xB9) + (v949 & 0xB9 ^ 0xB9) + 78) * v949 % 0x3C0) ^ (16 * (*(unsigned __int8 *)(v861 + (unsigned __int16)(v946 - 960 * ((unsigned __int16)((8739 * v946) >> 16) >> 7))) ^ 0xEC)) ^ 0xEC;
  LODWORD(STACK[0x5C8]) = 7 * v950;
  v951 = *(unsigned __int8 *)(v861
                            + (unsigned __int16)(7 * v950
                                               - 960 * ((unsigned __int16)((244671 * v950) >> 16) >> 9)));
  v952 = 7
       * ((((v951 >> 4) ^ 0xE) - 2 * (((v951 >> 4) ^ 0xE) & 0xFD ^ ((v951 & 0x10) != 0)) - 20) ^ *(unsigned __int8 *)(v861 + (unsigned __int16)(7 * (v948 ^ 0x98FB)) % 0x3C0u))
       + 3023;
  LOBYTE(v952) = (v952 - -64 * ((8739 * v952) >> 23)) & 4;
  v953 = (v933 >> 8 >> ((v952 ^ 4) + v952)) - 1291952121 + (~(2 * (v933 >> 8 >> ((v952 ^ 4) + v952))) | 0xFE033FF3);
  v954 = HIBYTE(v920) & 0xB;
  v955 = (v954 + (HIBYTE(v920) & 0xF ^ 0xB) - ((HIBYTE(v920) & 0xF ^ 0xB) & 0xFFFFFFFB) - 38746096) ^ 0xBDB1EC1A;
  v956 = v955 - ((2 * v955) & 0x1B58) + 937057708;
  v957 = (v953 >> 8) & 0xF0 ^ 0x60 | v956 ^ 0x77DB79A0;
  v958 = v957 - 14745 - 2 * (v957 & 0xC66F ^ v956 & 8);
  LOWORD(v957) = 7 * (v958 ^ 0xC667) - ((14 * (v958 ^ 0xC667)) & 0x8FEC) + 18422;
  LODWORD(STACK[0x5AC]) = ((unsigned __int16)v957 ^ 0x47F6u)
                        % ((((v956 ^ 0x8824865F) & 0x1F68 ^ HIBYTE(v920) & 8)
                          - (v957 & 0x388 ^ 0x1808 | v957 & 0x388 ^ 0x380)) & (v954 ^ (v956 ^ 0x8824865F) & 0x4BDB ^ 2));
  v959 = STACK[0x668];
  v960 = (LODWORD(STACK[0x668]) ^ 0x75826965 ^ (LODWORD(STACK[0x6C0])
                                              - 307042460
                                              - ((2 * LODWORD(STACK[0x6C0])) & 0xDB65CEC8)))
       - LODWORD(STACK[0x630]);
  LODWORD(STACK[0x6B8]) += LODWORD(STACK[0x670]) + 1129974045;
  v961 = LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x6F8]) ^ LODWORD(STACK[0x65C]);
  v962 = (v960 ^ ((LODWORD(STACK[0x638]) ^ 0xFDAA5FD4) + (v959 ^ 0xEFE7474F ^ LODWORD(STACK[0x638])) + 1) ^ ((((v961 ^ 0x3C841BA7) - 307042460 - 2 * ((v961 ^ 0x3C841BA7) & 0x6DB2E774 ^ v961 & 0x10)) ^ v959) - (v961 ^ 0x3C841BA7)))
       - LODWORD(STACK[0x640]);
  LODWORD(STACK[0x6C0]) = (v962 ^ 0xFBFEFFBF) + 2098067456 + ((2 * v962) & 0xF7FDFF7E);
  LODWORD(STACK[0x6F8]) = LODWORD(STACK[0x6F4]) ^ LODWORD(STACK[0x644]);
  return sub_18C9C80D0();
}

uint64_t sub_18C9C80D0@<X0>(uint64_t a1@<X4>, int a2@<W7>, int a3@<W8>)
{
  unsigned __int16 v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;

  v5 = v4 ^ (16 * (*(unsigned __int8 *)(a1 + v3) ^ a2)) ^ a3;
  v6 = LODWORD(STACK[0x5C4]) + (LODWORD(STACK[0x648]) ^ 0xE20C5CCC) + LODWORD(STACK[0x5C0]);
  v7 = (LODWORD(STACK[0x5E8]) ^ 0x15C4D5FE) + 737082330 + (LODWORD(STACK[0x5CC]) ^ 0x9DC8AB03) + 1598753077;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6E8]
                                                                                     + 8
                                                                                     * ((3119
                                                                                       * (((LODWORD(STACK[0x678])
                                                                                          + 698412312
                                                                                          - ((2 * LODWORD(STACK[0x678])
                                                                                            + 2) & 0x5341DA30)
                                                                                          + 1) ^ 0x29A0ED00u) > 0x3F)) ^ LODWORD(STACK[0x6E0])))
                                                                         - 8))((((2 * (v6 + 1)) & 0xDADFAB24) + ((v6 + 1) ^ 0x6D6FD592) + 283147575) ^ v7, (LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x5CC])), (v7 - ((2 * v7) & 0xE1584B78) + 1890330044) ^ LODWORD(STACK[0x5EC]), LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x5CC]) ^ 0x23B7FB41u, v5 ^ 0xD0E963D0);
}

void sub_18C9C8B48()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x658]) = v2;
  LODWORD(STACK[0x654]) = -1815985732 - v0;
  LODWORD(STACK[0x660]) = STACK[0x6D0];
  LODWORD(STACK[0x710]) = v1;
  JUMPOUT(0x18C9C5840);
}

uint64_t sub_18C9C8BC8(int a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  uint64_t v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;

  LODWORD(STACK[0x700]) = LODWORD(STACK[0x590]) + LODWORD(STACK[0x560]);
  LODWORD(STACK[0x678]) = LODWORD(STACK[0x6B8]) + LODWORD(STACK[0x558]);
  v19 = (a6 - 2 * ((a6 - 468657924) & 0x5894C875 ^ v7 & 5) + 1017487724) ^ a1 ^ v12;
  v20 = v15 - 468229691 + a6 - 468657924;
  v21 = v14 - ((2 * v6 - 843858990) & 0xDE1044A4) - 284679598;
  LODWORD(STACK[0x6F8]) = (((v21 ^ 0x10F7DDAD) + (v21 ^ 0x6A93B15B ^ v16) + 1) ^ (((v13 - 751805499) ^ 0x859B9309 ^ v16)
                                                                                - v13
                                                                                + 751805499) ^ (((v19
                                                                                                + 31339614
                                                                                                - ((2 * v19) & 0x3BC68BC)) ^ v10)
                                                                                              - v19))
                        - v17;
  v22 = v13 + v17;
  v23 = (STACK[0x6B4] & 0x21 ^ 0x60C8C153 | STACK[0x6B4] & 0x21 ^ 0x20) ^ v11;
  LODWORD(STACK[0x6B8]) = v23;
  v24 = v15 - ((2 * v15 + 809834038) & 0xFABC57CA) - 1786726656;
  v25 = (v24 ^ 0x7D5E2BE5) + (a3 ^ 0xA87ED06A) - v20;
  v26 = ((2 * ((v24 ^ 0x7D5E2BE5) + v20)) & 0xDB9FAF7A) + (((v24 ^ 0x7D5E2BE5) + v20) ^ 0x6DCFD7BD);
  v22 += 1450317273;
  v27 = v17 - 2 * ((v17 + 927785834) & 0x79F2B009 ^ v17 & 1) + 826250098;
  v28 = (v9 ^ 0xFB2774C6) - v22 + (v27 ^ 0x79F2B008);
  v29 = ((2 * ((v27 ^ 0x79F2B008) + v22)) & 0x5FF6E674) + (((v27 ^ 0x79F2B008) + v22) ^ 0x2FFB733A);
  v30 = v26 - 1842337725 + (a1 ^ 0x6748B063);
  LODWORD(STACK[0x6F4]) = v15;
  HIDWORD(v32) = v24 ^ 0x59CBC;
  LODWORD(v32) = v24 ^ 0x58600000;
  v31 = v32 >> 20;
  LODWORD(STACK[0x670]) = (v24 ^ 0x58659CBC) + LODWORD(STACK[0x598]);
  LODWORD(v32) = __ROR4__(v25, 20);
  v33 = (v26 - 1842337725) ^ LODWORD(STACK[0x680]) ^ (v30 + 1486145648 - ((2 * v30) & 0xB12990E0));
  v34 = v29 + (v21 ^ 0x88409231);
  v35 = v34 - 805008186;
  v36 = STACK[0x710];
  v37 = (805008186 - v34 + (LODWORD(STACK[0x594]) ^ (v34 - 805008186))) ^ (805008186
                                                                         - v29
                                                                         + (LODWORD(STACK[0x594]) ^ (v29 - 805008186))) ^ (((v33 + 31339614 - ((2 * v33) & 0x3BC68BC)) ^ LODWORD(STACK[0x710])) - v33);
  v38 = ((2 * v24) & 0xE6BFBEDE ^ 0x42D16C4) + (v24 ^ 0x7D49748D);
  v39 = v28 ^ v27 ^ 0x5CC90751;
  LODWORD(STACK[0x6E0]) = v37 - (v27 ^ 0x5CC90751);
  v40 = ((2 * v27) & 0xF9B9BDB0 ^ 0x11302010) + (v27 ^ 0x7666EED7);
  v41 = v39 + v40 + v35;
  v42 = v26 - 646336738;
  LODWORD(v32) = __ROR4__(v31 ^ v32 ^ 0x1C044D73, 12);
  v43 = v30 + v38 + (v32 ^ 0xD731C044);
  v44 = (v32 ^ 0xD731C044) - v38;
  v45 = v39 - v40;
  v46 = (v45 + 2094849752) ^ (v29 + 390992801);
  v47 = (v36 & 0xB0595C6B ^ 0x58144A | v36 & 0xB0595C6B ^ 0xB0014821) - 1806191586 + ((v44 + 1935662959) ^ v42);
  v48 = (((v47 - 1152454793) ^ (v43 - 1935662959))
       + 31339614
       - ((2 * ((v47 - 1152454793) ^ (v43 - 1935662959))) & 0x3BC68BC)) ^ LODWORD(STACK[0x6DC]);
  v49 = ((2 * (v47 - v43 + 783208166)) & 0x9777EFD6) + ((v47 - v43 + 783208166) ^ 0x4BBBF7EB);
  v50 = ((2 * (v46 - v41 + 2094849752)) & 0xBEFFFAF4) + ((v46 - v41 + 2094849752) ^ 0xDF7FFD7A);
  v51 = (2094849752 - v41 + (LODWORD(STACK[0x59C]) ^ (v41 - 2094849752))) ^ ((LODWORD(STACK[0x59C]) ^ v46)
                                                                           + v46
                                                                           - 2 * v46) ^ (((v48
                                                                                         + 1486145648
                                                                                         - ((2 * v48) & 0xB12990E0)) ^ LODWORD(STACK[0x6D0]))
                                                                                       - v48);
  v52 = v45 - v50 + 1871622734 - ((2 * (v45 - v50 + 1549589586)) & 0x2663ABF8);
  v53 = v38 - 1738888259;
  v54 = v43 + 2129152423;
  v55 = (v44 - v49 - 1088694438) ^ (v43 + 2129152423);
  v56 = ((v49 - 1270609899 + v53 - v55) ^ 0xBFDFFE7F) + 1075839361 + ((2 * (v49 - 1270609899 + v53 - v55)) & 0x7FBFFCFE);
  v57 = (v49 - 1270609899) ^ v54;
  v58 = v56 + v54 - 1171731407 - ((2 * (v56 + v54)) & 0x74519862);
  v40 -= 1898075052;
  LODWORD(STACK[0x6DC]) = v51 - v40;
  v59 = v41 - ((2 * v41 + 718705788) & 0x2663ABF8) - 2002968518;
  v50 += 545260166;
  v60 = v52 ^ v59;
  v61 = ((2 * (v50 + v40 - (v52 ^ v59))) & 0x7D5F9CFA) + ((v50 + v40 - (v52 ^ v59)) ^ 0x3EAFCE7D);
  v62 = (v59 ^ 0x1331D5FC ^ v50) - ((2 * (v59 ^ 0x1331D5FC ^ v50)) & 0x4E813866) - 1488937933;
  v63 = v58 ^ ((v57 ^ v23) - 1171731407 - ((2 * (v57 ^ v23)) & 0x74519862));
  v64 = v61 - 1051709053 + (v59 ^ 0x1331D5FC) + 798799696 - ((2 * (v61 - 1051709053 + (v59 ^ 0x1331D5FC))) & 0x5F396EA0);
  LODWORD(STACK[0x710]) = ((v64 ^ 0xD06348AF) + (LODWORD(STACK[0x6C8]) ^ 0x77087F20 ^ v64) + 1) ^ ((v62 ^ 0x58BF63CC)
                                                                                                 + (LODWORD(STACK[0x6C8]) ^ 0xFFD45443 ^ v62)
                                                                                                 + 1) ^ (((v63 + 1486145648 - ((2 * v63) & 0xB12990E0)) ^ LODWORD(STACK[0x6C8])) - v63);
  v65 = ((2 * v57) & 0x8FFF47FC ^ 0x52E4304) + (v57 ^ 0x5568DA7D);
  v66 = v56 ^ 0xBA28CC31 ^ v58;
  v67 = v65 + 898843844 + (v58 ^ 0xBA28CC31);
  v68 = ((2 * v62) & 0x5E56EEFE ^ 0x4A06CA60) + (v62 ^ 0x9AFC92CF);
  v69 = (v61 - 1051709053) ^ 0x2F9CB750 ^ v64;
  v70 = v68 - 791377791 + (v64 ^ 0x2F9CB750);
  v71 = v18;
  v72 = v66 - ((2 * v66 + 1388539768) & 0x91BD71E0) + 1916825772;
  v73 = v70 - ((2 * v70 + 19255684) & 0x16FA4E2) + 2118826803;
  v74 = (v65 - ((2 * v65 + 4016268) & 0x5114D4) - 1899549008) ^ a4 ^ v67;
  v75 = (v74 - 307042460 - ((2 * v74) & 0xDB65CEC8)) ^ a5;
  v76 = v60 - 1817899640;
  v77 = v69 + v68;
  v78 = v65 - 1207935998 + v66;
  v79 = v75 - v74;
  v80 = v78 + (a2 ^ 0xA39F712B);
  v81 = v78 ^ (v55 - 1817899640);
  v82 = ((v73 ^ 0xFF482D8E) + (v73 ^ 0x3DEC56C5 ^ v71) + 1) ^ (((v68 + 661835973) ^ 0x3D5B84B4 ^ v71) - v68 - 661835973) ^ v79;
  v83 = (v72 ^ 0xC8DEB8F0) + v81;
  v84 = v69 - ((2 * v69 + 1388539768) & 0xBBF160DC) + 123365418;
  v85 = (v84 ^ 0x5DF8B06E) + ((v69 + v68 - 791377791) ^ v76);
  v86 = (v73 & 0xBB4EEF77 ^ 0xFFF93D8E)
      + (v72 ^ (v65 - 64771657 + ~((2 * v65 + 1720312204) & 0x91BD71E0)))
      - ((-2106779843 - v70) & 0xBB4EEF77)
      + 1;
  v87 = ((2 * v86) & 0xF77FFEC) + (v86 ^ 0x87BBFFF6);
  v88 = (v87 + 865267585) ^ v83;
  v89 = (v87 + 865267585) ^ (((2 * ((v67 ^ 0xE0F2C694) - 1856670317)) & 0x4169ED96)
                           + (((v67 ^ 0xE0F2C694) - 1856670317) ^ 0xA0B4F6CB));
  v90 = (v89 - 2144826774 - ((2 * v89) & 0x5114D4)) ^ LODWORD(STACK[0x6B4]);
  v91 = v67 ^ 0x282C7E64 ^ v72;
  v92 = v84 ^ (v68 + 1276714309);
  v93 = v84 ^ 0xBDBDA48B ^ v73;
  v73 ^= 0xE04514E5;
  v94 = ((2 * (v73 + 839543902)) & 0xECF3EDF6) + ((v73 + 839543902) ^ 0x7679F6FB);
  v95 = v92 ^ 0xDC3F4260 ^ (v85 - ((2 * v85) & 0x38FE41C) - 2117602802);
  v96 = v92 ^ 0x5DF8B06E;
  v97 = ((1987704571 - v94 + (LODWORD(STACK[0x698]) ^ (v94 - 1987704571))) ^ ((v92 ^ 0xA2074F91)
                                                                            + (LODWORD(STACK[0x688]) ^ 0xB04A570A ^ v92)
                                                                            + 1) ^ (((v90
                                                                                    - 307042460
                                                                                    - ((2 * v90) & 0xDB65CEC8)) ^ LODWORD(STACK[0x688]))
                                                                                  - v90))
      - v93;
  v98 = v93 + v96;
  v99 = ((2 * (v96 - 1432952250)) & 0xDDFBFEC6) + ((v96 - 1432952250) ^ 0xEEFDFF63);
  v100 = v91 + LODWORD(STACK[0x6A8]);
  v101 = v91 + 1492752780 + v87;
  v102 = v101 + (v67 ^ 0xE0F2C694);
  v103 = (v87 - 567684665) ^ LODWORD(STACK[0x708]) ^ (v102 - 736378615);
  v104 = (((v103 ^ 0x80288A6A) - 307042460 - 2 * ((v103 ^ 0x80288A6A) & 0x6DB2E774 ^ v103 & 0x10)) ^ LODWORD(STACK[0x690]))
       - (v103 ^ 0x80288A6A);
  v105 = v95 - (v94 + v99);
  v106 = (v67 ^ 0x1F0D396B) - v87 - 271859236 + v88;
  v98 += 627485195;
  v107 = v98 + v73;
  v108 = v106 + v101 + LODWORD(STACK[0x5A0]);
  v109 = v105 + 1702360670 + v98;
  v110 = ((-285343901 - v99 + (LODWORD(STACK[0x6A0]) ^ (v99 + 285343901))) ^ ((LODWORD(STACK[0x6A0]) ^ (v107 - 736378615))
                                                                            - v107
                                                                            + 736378615) ^ v104)
       - v109;
  v111 = v105
       + 1702360670
       - (v109 ^ (v107 + 1515750521))
       + v107
       + 1515750521
       - 681451304
       - ((2 * (v105 + 1702360670 - (v109 ^ (v107 + 1515750521)) + v107 + 1515750521)) & 0xAEC3C1B0);
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x570]) + 1051709053 - v61 + LODWORD(STACK[0x710]);
  v112 = LODWORD(STACK[0x540]) - 468229691 + LODWORD(STACK[0x6F4]) + (v8 ^ 0x3D5B8458);
  v113 = v112 - 1742557561 - ((2 * v112) & 0x30455D0E);
  v114 = LODWORD(STACK[0x55C])
       - v77
       + 769514639
       + v82
       - ((2 * (LODWORD(STACK[0x55C]) - v77 + 769514639 + v82) + 136430940) & 0x5470D330);
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x700]) + v53;
  v115 = LODWORD(STACK[0x6F8]) + 2092844524;
  v116 = ((v80 - 140645075 - ((2 * v80) & 0xEF3BDA5A)) ^ LODWORD(STACK[0x564]))
       + 2 * (v80 & (LODWORD(STACK[0x564]) ^ 0x779DED2D));
  LODWORD(STACK[0x564]) = v116 - 140645075 - ((2 * v116) & 0xEF3BDA5A);
  v117 = ((v106 - ((v106 + v101) ^ (v102 + 1515750521))) ^ (v87 - 1304063280 + v102)) - 1856090726;
  v118 = v114 - 297186234;
  LODWORD(STACK[0x568]) = LODWORD(STACK[0x568]) - 2030892991 + LODWORD(STACK[0x6C0]);
  v119 = v110 + LODWORD(STACK[0x530]) - 1694822632 - ((2 * (v110 + LODWORD(STACK[0x530]))) & 0x35F61E30);
  v120 = LODWORD(STACK[0x6E0])
       + LODWORD(STACK[0x53C])
       - 1825286647
       - ((2 * (LODWORD(STACK[0x6E0]) + LODWORD(STACK[0x53C]))) & 0x2668AC12);
  v121 = LODWORD(STACK[0x6B8])
       + LODWORD(STACK[0x538])
       + v56
       - 491700514
       - ((2 * (LODWORD(STACK[0x6B8]) + LODWORD(STACK[0x538]) + v56)) & 0xC5627DBC);
  v122 = LODWORD(STACK[0x534])
       + (v97 ^ 0xCEFEFF7F)
       + ((2 * v97) & 0x9DFDFEFE)
       + 1128715701
       - ((2 * (LODWORD(STACK[0x534]) + (v97 ^ 0xCEFEFF7F) + ((2 * v97) & 0x9DFDFEFE) + 822149249)) & 0x248BAA68);
  if (LODWORD(STACK[0x3C8]) == 52)
  {
    v125 = LODWORD(STACK[0x3B8]) + 260;
    LODWORD(STACK[0x328]) = LODWORD(STACK[0x554])
                          - 1450648296
                          + v115
                          - 1198154069
                          - ((LODWORD(STACK[0x3B8]) + 1898657930) & (2 * (LODWORD(STACK[0x554]) - 1450648296 + v115)));
    LODWORD(STACK[0x33C]) = LODWORD(STACK[0x670])
                          + LODWORD(STACK[0x3C4])
                          - 324207886
                          - ((2 * (LODWORD(STACK[0x670]) + LODWORD(STACK[0x3C4]))) & 0xD959F5E4);
    LODWORD(STACK[0x37C]) = v108
                          + LODWORD(STACK[0x3BC])
                          + 1294386987
                          - ((2 * (v108 + LODWORD(STACK[0x3BC]))) & 0x9A4D8E56);
    v126 = LODWORD(STACK[0x3B0])
         + 1182172094
         + v100
         - 937911905
         - ((2 * (LODWORD(STACK[0x3B0]) + 1182172094 + v100)) & 0x9031333E);
    LODWORD(STACK[0x338]) = LODWORD(STACK[0x6DC])
                          + LODWORD(STACK[0x3C0])
                          + 2004449825
                          - ((2 * (LODWORD(STACK[0x6DC]) + LODWORD(STACK[0x3C0]))) & 0xEEF2F442);
    v127 = LODWORD(STACK[0x570]) - ((2 * LODWORD(STACK[0x570]) + 2123901058) & 0xBE8CDB1E);
    LODWORD(STACK[0x368]) = v126;
    v128 = (v126 & 0x3B482A80 ^ 0x33402200 | v126 & 0x3B482A80 ^ 0x8080880) + LODWORD(STACK[0x678]) - 946347204;
    LODWORD(STACK[0x380]) = v128 + 2044106833 - 2 * (v128 & 0x79D6985B ^ (LOBYTE(STACK[0x678]) + 60) & 0xA);
    LODWORD(STACK[0x354]) = v127 + 512917968;
    LODWORD(STACK[0x330]) = v120;
    LODWORD(STACK[0x358]) = v121;
    LODWORD(STACK[0x378]) = v119;
    LODWORD(STACK[0x348]) = STACK[0x564];
    LODWORD(STACK[0x320]) = v113;
    LODWORD(STACK[0x35C]) = v122;
    LODWORD(STACK[0x350]) = v118;
    LODWORD(STACK[0x374]) = STACK[0x568];
    LODWORD(STACK[0x568]) = STACK[0x3A4];
    LODWORD(STACK[0x340]) = STACK[0x560];
    v129 = STACK[0x3B4];
  }
  else
  {
    v123 = STACK[0x3B8];
    if (LODWORD(STACK[0x3C8]) != 86)
    {
      LODWORD(STACK[0x628]) = v113;
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8]
                                            + 8
                                            * ((((((LODWORD(STACK[0x3D4]) - 1760697356) < 0x81) ^ (v123 + 17)) & 1)
                                              * ((v123 ^ 0xDC) - 1010)) ^ (v123 + 2498)))
                                - 8))();
    }
    v125 = v123 + 260;
    LODWORD(STACK[0x334]) = LODWORD(STACK[0x554])
                          - 1450648296
                          + v115
                          - 1198154069
                          - (((LODWORD(STACK[0x554]) - 1450648296 + v115) << ((v123 + 4) ^ 0xD1)) & 0x712B3D56);
    LODWORD(STACK[0x32C]) = LODWORD(STACK[0x670])
                          + LODWORD(STACK[0x3C4])
                          - 324207886
                          - ((2 * (LODWORD(STACK[0x670]) + LODWORD(STACK[0x3C4]))) & 0xD959F5E4);
    LODWORD(STACK[0x388]) = v108
                          + LODWORD(STACK[0x3BC])
                          + 1294386987
                          - ((2 * (v108 + LODWORD(STACK[0x3BC]))) & 0x9A4D8E56);
    LODWORD(STACK[0x370]) = LODWORD(STACK[0x3B0])
                          + 1182172094
                          + v100
                          - 937911905
                          - ((2 * (LODWORD(STACK[0x3B0]) + 1182172094 + v100)) & 0x9031333E);
    LODWORD(STACK[0x344]) = LODWORD(STACK[0x6DC])
                          + LODWORD(STACK[0x3C0])
                          + 2004449825
                          - ((2 * (LODWORD(STACK[0x6DC]) + LODWORD(STACK[0x3C0]))) & 0xEEF2F442);
    v130 = LODWORD(STACK[0x570]) - ((2 * LODWORD(STACK[0x570]) + 2123901058) & 0xAC0D7F10);
    LODWORD(STACK[0x384]) = LODWORD(STACK[0x678]) - ((2 * LODWORD(STACK[0x678]) + 96476024) & 0xCD148198) - 378909048;
    LODWORD(STACK[0x38C]) = v130 - 1789733943;
    LODWORD(STACK[0x324]) = v113;
    LODWORD(STACK[0x36C]) = STACK[0x564];
    LODWORD(STACK[0x360]) = v122;
    LODWORD(STACK[0x34C]) = v118;
    v129 = STACK[0x3B4];
  }
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8]
                                                               + 8
                                                               * ((((v125 ^ 0x754) - 595) * ((v129 & 1) == 0)) ^ v125))
                                                   - ((v125 + 907064874) & 0xC9EF4CCD ^ 0x8C4)))(v111, v117);
}

void sub_18C9CA0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;

  v12 = ((((131 * (v8 ^ 0x8D9)) ^ 0xD7DCC933) + a8) & 0xBE79D9C8) - ((673398399 - a8) & 0x41862637);
  LODWORD(STACK[0x3AC]) = ((2 * v12) & 0xD3FBCB6E) + (v12 ^ 0x69FDE5B7) - 5538048;
  LODWORD(STACK[0x3C8]) = 86;
  LODWORD(STACK[0x3B4]) = 1;
  LODWORD(STACK[0x3A0]) = v11;
  LODWORD(STACK[0x3A8]) = v9;
  LODWORD(STACK[0x39C]) = v10;
  LODWORD(STACK[0x3A4]) = STACK[0x568];
  JUMPOUT(0x18C9B89CCLL);
}

uint64_t sub_18C9CA210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  _BOOL4 v50;

  STACK[0x848] = 0xA095E15CB3FB94FELL;
  v13 = LODWORD(STACK[0x328]) ^ 0x958C9710;
  v14 = STACK[0x328] & 0x883DD861;
  v15 = LODWORD(STACK[0x320]) ^ 0xC31B8CF7;
  v16 = LODWORD(STACK[0x324]) ^ 0x6D5F7DB2;
  v17 = LODWORD(STACK[0x334]) ^ 0x19D0171D;
  STACK[0x840] = 0xED1701ED17397B41;
  STACK[0x838] = 0xC76AB0337C826D5BLL;
  v18 = LODWORD(STACK[0x32C]) ^ 0x4DE97344;
  v19 = LODWORD(STACK[0x33C]) ^ 0xC1B5F349;
  v20 = STACK[0x338];
  v21 = STACK[0x338] & 0x883DD861 ^ 0x801D8861;
  v22 = ((v14 ^ (v8 + 813600073) & 0xCF8174FE ^ 0x28448C) + (v14 ^ 0x88159821)) * (v17 + 1663319554);
  v23 = -2009212831 * (LODWORD(STACK[0x330]) ^ 0xC80D7479) - 75026750;
  LODWORD(STACK[0x748]) = -2009212831 * v15 - 75026750;
  LODWORD(STACK[0x74C]) = v23;
  LODWORD(STACK[0x788]) = -2009212831 * (v16 ^ ((v8 - 638) | 0x288)) - 75026750;
  LODWORD(STACK[0x78C]) = -2009212831 * (v12 ^ 0x664987B2) - 75026750;
  LODWORD(STACK[0x728]) = -2009212831 * v13 - 75026750;
  LODWORD(STACK[0x72C]) = -2009212831 * v19 - 75026750;
  v24 = (v21 | (v20 ^ 0x5A60739A) & 0x883DD861) * ((v20 ^ 0x5A60739A) + 1663319554);
  v25 = LODWORD(STACK[0x344]) ^ 0xD63CF397;
  v26 = v24 + 1992456192 + (~(2 * v24) | 0x127B0FFF) + 1;
  v27 = (v26 & 0x5B392270 ^ 0x52002000 | v26 & 0x5B392270 ^ 0x9390270) ^ (LODWORD(STACK[0x340]) - 1772709047);
  v28 = v26 ^ 0x76C27800;
  LODWORD(STACK[0x768]) = v22;
  LODWORD(STACK[0x76C]) = -2009212831 * v18 - 75026750;
  v29 = LODWORD(STACK[0x358]) ^ 0xB9881CAE;
  v30 = LODWORD(STACK[0x348]) ^ 0xACA4CF5D;
  v31 = LODWORD(STACK[0x34C]) ^ 0x8B7DE02E;
  v32 = -2009212831 * (LODWORD(STACK[0x354]) ^ 0xF25F6434) - 75026750;
  LODWORD(STACK[0x730]) = v28;
  LODWORD(STACK[0x734]) = v32;
  LODWORD(STACK[0x750]) = -2009212831 * v27 - 75026750;
  LODWORD(STACK[0x754]) = -2009212831 * v29 - 75026750;
  v33 = LODWORD(STACK[0x350]) ^ 0x7216023;
  v34 = LODWORD(STACK[0x360]) ^ 0xE738048F;
  LODWORD(STACK[0x794]) = -2009212831 * (v10 ^ 0x17CCEF65) - 75026750;
  v35 = -2009212831 * v25 - 75026750;
  LODWORD(STACK[0x790]) = -2009212831 * ((a8 - 1772709047) ^ 0xF57DD1BB) - 75026750;
  v36 = LODWORD(STACK[0x368]) ^ 0xE5019024;
  v37 = STACK[0x38C];
  LODWORD(STACK[0x774]) = -2009212831 * (LODWORD(STACK[0x38C]) ^ 0xF743363E) - 75026750;
  LODWORD(STACK[0x770]) = v35;
  v38 = LODWORD(STACK[0x35C]) ^ 0x497CF744;
  v39 = LODWORD(STACK[0x37C]) ^ 0x603FCE90;
  LODWORD(STACK[0x73C]) = -2009212831 * v36 - 75026750;
  LODWORD(STACK[0x738]) = -2009212831 * v33 - 75026750;
  v40 = LODWORD(STACK[0x36C]) ^ 0x2E03C96;
  v41 = -2009212831 * (LODWORD(STACK[0x370]) ^ 0x695D1029) - 75026750;
  LODWORD(STACK[0x778]) = -2009212831 * v31 - 75026750;
  LODWORD(STACK[0x77C]) = v41;
  STACK[0x830] = 0xA41D84DC6A0C0394;
  STACK[0x828] = 0x75EBBB32EB3EBEDDLL;
  LODWORD(STACK[0x758]) = -2009212831 * v30 - 75026750;
  LODWORD(STACK[0x75C]) = -2009212831 * v38 - 75026750;
  v42 = LODWORD(STACK[0x378]) ^ 0xC1C22D68;
  v43 = LODWORD(STACK[0x388]) ^ 0xEC634E9D;
  v44 = LODWORD(STACK[0x380]) ^ 0x54CF91EA;
  v45 = LODWORD(STACK[0x384]) ^ 0x47CFC97A;
  LODWORD(STACK[0x798]) = -2009212831 * v40 - 75026750;
  LODWORD(STACK[0x79C]) = -2009212831 * v34 - 75026750;
  v46 = -2009212831 * ((LODWORD(STACK[0x374]) - 2030892991) ^ 0x5B392270) - 75026750;
  LODWORD(STACK[0x760]) = -2009212831 * v42 - 75026750;
  LODWORD(STACK[0x764]) = v46;
  LODWORD(STACK[0x780]) = -2009212831 * v43 - 75026750;
  LODWORD(STACK[0x784]) = -2009212831 * v45 - 75026750;
  LODWORD(STACK[0x7FC]) = -2015130205;
  LODWORD(STACK[0x800]) = -195043156;
  LODWORD(STACK[0x7EC]) = 1186736741;
  v47 = STACK[0x568];
  v48 = (2 * LODWORD(STACK[0x568]) + 233181314) & 0xC6487C04;
  LODWORD(STACK[0x7F0]) = -1721533476;
  LODWORD(STACK[0x7B0]) = -979297607;
  v49 = *(_QWORD *)(v11 + 32);
  v39 *= -2009212831;
  LODWORD(STACK[0x7BC]) = -860825652;
  LODWORD(STACK[0x740]) = v39 - 75026750;
  LODWORD(STACK[0x744]) = -2009212831 * v44 - 75026750;
  STACK[0x7A8] = 0x9252130A5DAD3C1BLL;
  LODWORD(STACK[0x7A0]) = -2009212831 * (v9 ^ 0x6F86DEA3) - 75026750;
  LODWORD(STACK[0x7A4]) = -2009212831 * ((v48 ^ 0xC2482004) + ((v47 - 2030892991) ^ 0x9659EFB9));
  LODWORD(STACK[0x7F4]) = (v37 & 0xAB81EB98 ^ 0xA3012218) + ((v37 ^ 0x8BCC9C1) & 0xAB81EB98);
  LODWORD(STACK[0x7F8]) = 137270289;
  STACK[0x7B4] = 0xDF813F2468DCC8FFLL;
  LODWORD(STACK[0x7E8]) = 1722071606;
  LODWORD(STACK[0x7C0]) = (v37 ^ 0x65430608 | v37 ^ 0x8BCC9C1) & 0x6DD30F89;
  *((_DWORD *)&STACK[0x728] + (((v39 - 75026750) ^ (61 - v39)) & 0x64 ^ 0x43u)) = -625775389;
  STACK[0x7C8] = 0xF5E92B098515022ALL;
  STACK[0x7D0] = 0x67965045607FE52ELL;
  LODWORD(STACK[0x818]) = 476564834;
  LODWORD(STACK[0x814]) = 1398910314;
  LODWORD(STACK[0x824]) = 879427265;
  STACK[0x81C] = 0x482B0D70887343F8;
  LODWORD(STACK[0x7E4]) = 376509910;
  LODWORD(STACK[0x7D8]) = -317382065;
  LODWORD(STACK[0x80C]) = 2136446382;
  LODWORD(STACK[0x810]) = 1518223619;
  STACK[0x7DC] = 0x94BC1945619BE0DFLL;
  STACK[0x804] = 0x863E4107CCA6F88CLL;
  v50 = *(_QWORD *)(v49 - 0x47B5CC9A2E1B2553) == 0;
  STACK[0x720] -= 2064;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * ((23 * v50) ^ v8)) - 8))();
}

uint64_t sub_18C9CA894(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  _BOOL4 v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v3 = LODWORD(STACK[0x6F8]) + 469577428;
  v4 = v3 < 0xBF4EDB1;
  v5 = (-2109510243 * *(unsigned __int8 *)STACK[0x580]
      - ((*(unsigned __int8 *)STACK[0x580] * (((a3 - 1217) | 0x280) + 75946159) + 569646290) & 0x4ED27E72)
      - 127709790) ^ 0x831C28D1;
  v6 = (((v5 % 0x101) ^ v5) + 1070473962) ^ LODWORD(STACK[0x708]);
  v7 = ((2 * v6) & 0xFC66F538 ^ 0x221008) + (v6 ^ 0x7EE672BB);
  v8 = (v7 - 294570092) ^ 0x6419702C;
  v9 = (215857122 - v7) & 0x10002040;
  v10 = (v7 + 321013789) & 0x10002040;
  v11 = 1131204184 - v7;
  HIDWORD(v12) = v7 + 1852913556;
  LODWORD(v12) = v7 - 294570092;
  v13 = (LODWORD(STACK[0x708]) ^ 0xD50827) - (v7 - 294570092);
  v14 = (v7 - 294570092) ^ 0x8E53D72A;
  v15 = ((v14 + (v12 >> 31)) ^ (1131204184 - v7)) + v13;
  v16 = (v8 & 0xF10DA82A ^ 0x11050828) + (v8 & 0xF10DA82A ^ 0xE008A002) - ((v9 + v10) | 0x4058B15F);
  v17 = (v15 ^ 0xA6E151A8) + v13;
  v18 = v16 + v14 + (v15 ^ 0xA6E151A8) - 2 * v16;
  HIDWORD(v12) = v15 ^ 0x26E151A8;
  LODWORD(v12) = ~v15;
  v19 = (v11 - ((2 * v11) & 0xEB5192DC) + 1973995886) ^ v15 ^ 0xD34998C6;
  v20 = (((v12 >> 31) + 1598753077 - v18) ^ v19) - v17;
  v21 = ((2 * v20) & 0x89622112 ^ 0x88622112) + (v20 ^ 0x13888870);
  v22 = v21 - 1152454793;
  v23 = v21 - ((2 * v21 + 1990057710) & 0xDA32200C) + 677904253;
  HIDWORD(v12) = v23 ^ 0x6D191006;
  LODWORD(v12) = v22;
  v24 = v17 + (v23 ^ 0x92E6EFF9) + 1;
  v25 = (v19 - v22 - (v23 ^ (v18 - ((2 * v18 + 1097461142) & 0xDA32200C) + 231605969)) + (v12 >> 31)) ^ v24;
  if (v3 >= 0xBF4EDB1)
    v4 = v3 > 0xBF4EDB2;
  LODWORD(STACK[0x708]) = v24 ^ 0xA7BC371E ^ (v25 - 2 * ((v25 + 749963932) & 0x27693F3B ^ v25 & 2) + 1411172821);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * ((2940 * !v4) ^ (a3 + 370))) - 4))();
}

void sub_18C9CAC4C()
{
  JUMPOUT(0x18C9CA92CLL);
}

uint64_t sub_18C9CAC60@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned __int8 *v30;
  unint64_t v31;
  uint64_t (*v32)(unint64_t **);
  char *v33;
  char *v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned __int8 v41;
  unint64_t v42;

  v28 = a1 + 2267;
  v29 = *(_DWORD *)(v26 + 16) - STACK[0x318] + (v28 ^ 0xEB8C37E0);
  LODWORD(STACK[0x5D8]) = 1044389398;
  LODWORD(a8) = -851926266;
  LODWORD(STACK[0x5D4]) = 137713;
  LODWORD(STACK[0x5D0]) = -319635449;
  LODWORD(STACK[0x5CC]) = 1073741749;
  LODWORD(STACK[0x5C8]) = -1249064388;
  LODWORD(STACK[0x5C4]) = 185175068;
  LODWORD(STACK[0x5C0]) = 807937;
  LODWORD(STACK[0x5B8]) = 67109503;
  v30 = *(unsigned __int8 **)(v27 + 24);
  v31 = 1554976193
      * (((1554976193 * (_DWORD)v30) >> (((v28 - 95) | 0x84) - 126)) ^ (1554976193 * (_DWORD)v30));
  v32 = off_1E2538470[v28 - 2631];
  v33 = (char *)off_1E2538470[v28 ^ 0xBE8] - 8;
  v34 = (char *)off_1E2538470[v28 ^ 0xB4E] - 4;
  v35 = *((unsigned __int8 *)v32 + (v31 >> 24)) ^ *v30 ^ v33[v31 >> 24] ^ v34[v31 >> 24] ^ v31 ^ (-29 * ((1554976193 * (((1554976193 * (_DWORD)v30) >> (((v28 - 95) | 0x84) - 126)) ^ (1554976193 * (_DWORD)v30))) >> 24));
  v36 = 1554976193 * (((1554976193 * ((_DWORD)v30 + 1)) >> (v28 - 89)) ^ (1554976193 * ((_DWORD)v30 + 1)));
  v37 = 1554976193 * ((1554976193 * ((_DWORD)v30 + 2)) ^ ((1554976193 * ((_DWORD)v30 + 2)) >> 16));
  v38 = *((unsigned __int8 *)v32 + (v37 >> 24));
  v39 = v33[v37 >> 24];
  v40 = (v35 << 24) | ((v36 ^ v30[1] ^ *((_BYTE *)v32 + (v36 >> 24)) ^ v33[v36 >> 24] ^ (-29 * BYTE3(v36)) ^ v34[v36 >> 24]) << 16) | (((-29 * BYTE3(v37)) ^ v37 ^ v30[2] ^ v38 ^ v39 ^ v34[v37 >> 24]) << 8);
  v41 = v30[3];
  v42 = 1554976193 * ((1554976193 * ((_DWORD)v30 + 3)) ^ ((1554976193 * ((_DWORD)v30 + 3)) >> 16));
  LOBYTE(v42) = (-29 * BYTE3(v42)) ^ v42 ^ v41 ^ *((_BYTE *)v32 + (v42 >> 24)) ^ v33[v42 >> 24] ^ v34[v42 >> 24];
  return ((uint64_t (*)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * ((1361 * ((((v40 & 0xFFFFFF00 | v42) - 1640678695 - 2 * ((v40 & 0x1E353A00 | v42 & 0xDF) ^ v42 & 6)) ^ 0x9E353AD9) != v29)) ^ v28)) - 12))(-29 * (v37 >> 24), v34, v38, v39, v27, 2894, 4294967267, 506804959, 0xFDF5F5FA4BFFF7EALL, 0xDFFBFFCEFEFAFAFDLL, 0x419F5206FEE5FDALL, 0x980ADCBEBEEFFELL, 0x144B6BB4FFFDFFE7, 0xFBFFFFCBFF7FFEC5, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_18C9CB030@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  STACK[0x720] += 2112;
  STACK[0x708] = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((814 * (v3 != 0)) ^ (a2 + 267))))();
}

uint64_t sub_18C9CB070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  STACK[0x360] = a5;
  v8 = v6 - (((v6 << (v5 ^ 0x75)) - 753001946) & 0xDA15DB54) - 694551875;
  v9 = ((v5 - 1409291170) & (2 * v8) ^ 0x8A15D850) + (v8 ^ 0xB8F511C3);
  v10 = (v5 + 1569845259) & 0xA26E13BB ^ 0x55FFEC52;
  LODWORD(STACK[0x6F8]) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * ((232
                                                                                   * (((v5 - 121) ^ (v9 == v10)) & 1)) ^ (v5 + 471)))
                                                                     - 4))(3030547574, 482462003, 3638551694, 1706823310);
}

uint64_t sub_18C9CB194(int a1, int a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  _BOOL4 v28;

  v9 = a5 + 584050134 + 380570587 * *(unsigned __int8 *)STACK[0x708];
  v10 = ((v9 ^ a3 ^ 0x3AB44B0C ^ ((v9 ^ a3 ^ 0x631BA18u) % 0x101
                                - ((2 * ((v9 ^ a3 ^ 0x631BA18u) % 0x101)) & 0x228)
                                + 1015410964))
       - 340039489) ^ (a2 + v5);
  v11 = (v10 - 2031632449 - ((2 * v10) & 0xDCF7F7E)) ^ a1;
  v12 = v11 - 1435448329 + (~(2 * v11 + 580071028) | 0xCDB19687);
  v13 = ((2 * ((v12 ^ 0x192734BC) + a2 + v5)) & 0xFD4FBFF6) + (((v12 ^ 0x192734BC) + a2 + v5) ^ 0x7EA7DFFB);
  v14 = (a1 ^ 0x86E7BFBF) + (v12 ^ 0xE6D8CB43) + 1;
  v15 = v12 ^ 0xF29C5C03;
  HIDWORD(v16) = v12 ^ 0x192734BC;
  LODWORD(v16) = v12;
  v17 = (v12 ^ 0xF29C5C03) + (v16 >> 30) - 2124931067 + v13;
  v18 = v17 + 1677739276 - ((2 * v17) & 0xC8008A18);
  v19 = v18 ^ (v14 + 1677739276 - ((2 * v14) & 0xC8008A18));
  v20 = (v19 ^ 0x495B08F2) + v13 - ((2 * ((v19 ^ 0x495B08F2) + v13) + 45105164) & 0xE8B9C90A) + 1974797451;
  HIDWORD(v16) = v19 ^ v8;
  LODWORD(v16) = v19 ^ 0xB0000000;
  v21 = ((v15 + (v19 ^ 0x495B08F2) + 1) ^ 0xFF2362BD) + 14458179 + ((2 * (v15 + (v19 ^ 0x495B08F2) + 1)) & 0xFE46C57A);
  v22 = v20 ^ (v21 + (v16 >> 28)) ^ 0xF45CE485;
  v23 = (v18 ^ 0x2D5B4DFE) + v22 + 1 - ((2 * ((v18 ^ 0x2D5B4DFE) + v22 + 1) + 510756358) & 0x286DE2AC) - 1552960423;
  v24 = v23 ^ v20;
  HIDWORD(v16) = v23 ^ 0x436F156;
  LODWORD(v16) = v23 ^ 0x10000000;
  v25 = ((v16 >> 28) - 393414623 - ((2 * (v16 >> 28)) & 0xD119F042)) ^ ((v23 ^ 0x1436F156)
                                                                      + v21
                                                                      - 393414623
                                                                      - ((2 * ((v23 ^ 0x1436F156) + v21)) & 0xD119F042));
  v26 = v22 - ((2 * v22 + 7439878) & 0x1AC0B4E) + 269404330;
  v27 = (v25 - 529918509 - ((2 * v25) & 0xC0D42BA6)) ^ v24;
  if (v6 - 1391808347 < v7 != v7 + 1 < v7)
    v28 = v6 - 1391808347 < v7;
  else
    v28 = v7 + 1 < v6 - 1391808347;
  return (*(uint64_t (**)(_QWORD, _QWORD))(STACK[0x6E8] + 8 * ((116 * !v28) ^ a5)))((v27 + (v26 ^ 0x80D605A7)) ^ 0xBDB6B8D9 ^ v26, ((((v27 + (v26 ^ 0x80D605A7)) ^ 0xBB8702C1) + (v24 ^ 0xE06A15D3)) ^ 0x9FBADE3)- 135406784+ ((2 * (((v27 + (v26 ^ 0x80D605A7)) ^ 0xBB8702C1) + (v24 ^ 0xE06A15D3))) & 0x13F75BC6));
}

void sub_18C9CB58C()
{
  JUMPOUT(0x18C9CB1D0);
}

uint64_t sub_18C9CB5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v6 = (v5 - 2104196773) < 0xD8947DC4;
  if ((v5 - 2104196773) >= 0xD8947DC4)
    v6 = (v5 - 2104196773) > 0xD8947DC5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6E8]
                                                                                + 8 * ((2421 * !v6) ^ v4))
                                                                    - 12))(a1, a2, a3, (v3 + 152102249));
}

void sub_18C9CB988()
{
  JUMPOUT(0x18C9CB5E8);
}

uint64_t sub_18C9CB990()
{
  uint64_t v0;
  int v1;
  char v2;

  STACK[0x700] = (unint64_t)&STACK[0x850] + v0 + 976;
  *((_BYTE *)&STACK[0x850] + v0 + 473) = 107 - (((v1 ^ v2) - 119) & 0xD6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * v1) - 4))();
}

void sub_18C9CBA0C()
{
  JUMPOUT(0x18C9CB9BCLL);
}

uint64_t sub_18C9CBA18@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  char v30;
  char v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  int v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  _BYTE *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v7 = *(_BYTE *)(a5 + 473);
  STACK[0x718] = a5;
  v8 = (662 * (a3 & 0xF ^ 8)
                    + 393228
                    - 965 * ((4450744 * (unint64_t)(662 * (a3 & 0xF ^ 8u) + 393228)) >> 32));
  *(_BYTE *)(a5 + 473) = *(_BYTE *)(a5 + v8);
  *(_BYTE *)(a5 + v8) = v7;
  v9 = *(_BYTE *)(a5 + 170);
  v10 = (662 * ((a4 - 2046862799) % 0xFu)
                     + 393890
                     - 965 * ((4450744 * (unint64_t)(662 * ((a4 - 2046862799) % 0xFu) + 393890)) >> 32));
  *(_BYTE *)(a5 + 170) = *(_BYTE *)(a5 + v10);
  *(_BYTE *)(STACK[0x718] + v10) = v9;
  LODWORD(v10) = a2 - ((2 * a2 + 112108834) & 0x7DAA54B8) - 2111013651;
  v11 = (662 * (((a2 + v6) % 0xEu - 2015948500 - ((2 * ((a2 + v6) % 0xEu)) & 0x18)) ^ 0x87D7112C) + 394552) % 0x3C5;
  LOBYTE(v8) = *(_BYTE *)(STACK[0x718] + 832);
  *(_BYTE *)(STACK[0x718] + 832) = *(_BYTE *)(STACK[0x718] + v11);
  *(_BYTE *)(STACK[0x718] + v11) = v8;
  LODWORD(v11) = (a1 ^ 0x86E7BFBF) % 0xD;
  LODWORD(v8) = ((2 * ((a1 ^ 0x79184040) + (a3 ^ 0x631BA18) + 1)) & 0x47EDF7DE)
              + (((a1 ^ 0x79184040) + (a3 ^ 0x631BA18) + 1) ^ 0xA3F6FBEF);
  v12 = *(_BYTE *)(STACK[0x718] + 529);
  *(_BYTE *)(STACK[0x718] + 529) = *(_BYTE *)(STACK[0x718]
                                            + (662 * v11
                                                           + 395214
                                                           - 965
                                                           * ((4450744
                                                             * (unint64_t)(662 * v11 + 395214)) >> 32)));
  v13 = v10 ^ a1;
  v14 = ((_DWORD)v8 + 1544094737 + (v13 ^ 0x2C977FE7) + 1) % 0xC;
  *(_BYTE *)(STACK[0x718]
           + (((v11 + 21) & 0x16 ^ 0x96 | (v11 + 597) & 0x216) * (v11 + 597)
                          - 965
                          * ((4450744
                            * (unint64_t)((((_DWORD)v11 + 21) & 0x16 ^ 0x96 | ((_DWORD)v11 + 597) & 0x216u)
                                               * ((_DWORD)v11 + 597))) >> 32))) = v12;
  LOBYTE(v11) = *(_BYTE *)(STACK[0x718] + 226);
  v13 ^= 0xD3688018;
  v15 = v13 ^ (a4 - 502768062 + v8);
  v16 = v8 + 1544094737;
  v17 = v16 + (v10 ^ 0xBED52A5C) + 1546245557 - ((2 * (v16 + (v10 ^ 0xBED52A5C))) & 0xB853AB6A);
  v18 = (662 * v14 + 395876 - 965 * ((4450744 * (unint64_t)(662 * v14 + 395876)) >> 32));
  *(_BYTE *)(STACK[0x718] + 226) = *(_BYTE *)(STACK[0x718] + v18);
  *(_BYTE *)(STACK[0x718] + v18) = v11;
  v19 = (662 * (v15 % 0xB)
                     + 396538
                     - 965 * ((4450744 * (unint64_t)(662 * (v15 % 0xB) + 396538)) >> 32));
  v20 = v13 % 9;
  v21 = *(_BYTE *)(STACK[0x718] + 888);
  *(_BYTE *)(STACK[0x718] + 888) = *(_BYTE *)(STACK[0x718] + v19);
  v22 = (662 * ((v17 ^ 0x5C29D5B5u) % 0xA)
                     + 397200
                     - 965 * ((4450744 * (unint64_t)(662 * ((v17 ^ 0x5C29D5B5u) % 0xA) + 397200)) >> 32));
  *(_BYTE *)(STACK[0x718] + v19) = v21;
  v23 = ((2 * ((v17 ^ 0x5C29D5B5) + v15)) & 0xBFB65A6E) + (((v17 ^ 0x5C29D5B5) + v15) ^ 0x5FDB2D37);
  v24 = *(_BYTE *)(STACK[0x718] + 585);
  *(_BYTE *)(STACK[0x718] + 585) = *(_BYTE *)(STACK[0x718] + v22);
  *(_BYTE *)(STACK[0x718] + v22) = v24;
  v25 = v13 + 1608199479 - v23;
  v26 = 662 * v20 + 397862;
  v27 = ((2 * (v26 % 0x78A)) & 0xBFC) + ((v26 % 0x78A) ^ 0xFF7EF5FE);
  v28 = v8 - ((2 * v8 + 128504574) & 0xE14519EC) + 1953953397;
  if (v27 + 8456706 >= 0x3C5)
    v29 = 2113895305;
  else
    v29 = 2113896270;
  v30 = *(_BYTE *)(STACK[0x718] + 282);
  *(_BYTE *)(STACK[0x718] + 282) = *(_BYTE *)(STACK[0x718] + v27 - 2105439564 + v29);
  *(_BYTE *)(STACK[0x718] + v26 % 0x3C5) = v30;
  v31 = *(_BYTE *)(STACK[0x718] + 944);
  v32 = (v25 ^ v16) - 1628352494 - ((2 * (v25 ^ v16)) & 0x3DE2A024);
  v33 = (662 * (v28 & 7 ^ 6u) + 398524) % 0x3C5;
  *(_BYTE *)(STACK[0x718] + 944) = *(_BYTE *)(STACK[0x718] + v33);
  *(_BYTE *)(STACK[0x718] + v33) = v31;
  v34 = ((2 * ((v32 ^ 0x9EF15012) + (v17 ^ 0x96AF96E))) & 0x1F797DD6)
      + (((v32 ^ 0x9EF15012) + (v17 ^ 0x96AF96E)) ^ 0xFBCBEEB);
  v35 = v32 ^ 0x610EAFED;
  v36 = (v32 ^ 0x610EAFED)
      + v23
      - 2 * (((v32 ^ 0x610EAFED) + v23 + 539284170) & 0x35F30F33 ^ ((v32 ^ 0x610EAFED) + v23) & 1)
      - 703077892;
  LODWORD(v33) = v36 ^ 0x35F30F32;
  v37 = *(_BYTE *)(STACK[0x718] + 641);
  v38 = (v34 - 264027883) % 6;
  v39 = (662 * ((v36 ^ 0x35F30F32u) % 7) + 399186) % 0x3C5;
  *(_BYTE *)(STACK[0x718] + 641) = *(_BYTE *)(STACK[0x718] + v39);
  *(_BYTE *)(STACK[0x718] + v39) = v37;
  v40 = *(_BYTE *)(STACK[0x718] + 338);
  *(_BYTE *)(STACK[0x718] + 338) = *(_BYTE *)(STACK[0x718]
                                            + (662 * v38
                                                           + 399848
                                                           - 965
                                                           * ((4450744 * (unint64_t)(662 * v38 + 399848)) >> 32)));
  LODWORD(v39) = (((v38 + 604) | (163 - v38)) & 0x296) * (v38 + 604);
  *(_BYTE *)(STACK[0x718] + (v39 - 965 * ((4450744 * (unint64_t)v39) >> 32))) = v40;
  v41 = (662 * ((v32 ^ 0x9EF15012) % 5)
                     + 400510
                     - 965 * ((4450744 * (unint64_t)(662 * ((v32 ^ 0x9EF15012) % 5) + 400510)) >> 32));
  v42 = (v34 + 1994544105) ^ v32;
  LOBYTE(v39) = *(_BYTE *)(STACK[0x718] + 35);
  *(_BYTE *)(STACK[0x718] + 35) = *(_BYTE *)(STACK[0x718] + v41);
  v43 = ((v42 ^ 0x610EAFED) + (v28 ^ 0x455183C4 ^ v36) + 1) ^ 0x9BF4A639;
  *(_BYTE *)(STACK[0x718] + v41) = v39;
  v44 = v35 + 264027883 - v34 + v33;
  v45 = (662
       * (v43 & 0x75342905 ^ 0xB10695FB ^ ((v43 & 0x75342906) - ((2 * v43) & 0x62080204) - 1324952070) & 0xFFFEBFFE)
       + 401172)
      % 0x3C5;
  v46 = (_BYTE *)STACK[0x718];
  v47 = v45 - 621811226 - ((2 * v45) & 0x3CC);
  LOBYTE(v35) = *(_BYTE *)(STACK[0x718] + (v47 & 0x2B9 ^ 0x219u) + (unint64_t)(v47 & 0x2B9 ^ 0xA0u));
  v46[697] = *(_BYTE *)(STACK[0x718] + (v47 ^ 0xDAEFE9E6));
  v46[v45] = v35;
  LOBYTE(v45) = v46[394];
  v48 = (662 * ((v44 + 1) % 3u)
                     + 401834
                     - 965 * ((4450744 * (unint64_t)(662 * ((v44 + 1) % 3u) + 401834)) >> 32));
  v46[394] = v46[v48];
  v46[v48] = v45;
  v49 = 91;
  if ((v42 & 1) != 0)
    v49 = 753;
  v50 = v46[91];
  v46[91] = v46[v49];
  v46[v49] = v50;
  v46[(662 * (v46[(((v5 - 101) | 0x88u) + 392306) % 0x3C5] ^ 0x6Bu) + 438603) % 0x3C5] = 107;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * v5) - 8))();
}

uint64_t sub_18C9CC274@<X0>(uint64_t a1@<X2>, int a2@<W5>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  *(_BYTE *)(v9 + a2
                + v5 * v7
                - ((((a2 + v5 * v7) * (unint64_t)v10) >> 32) >> 4) * a4) = v5 - 2 * ((((v4 + 120) | 1) ^ v6) & v5 ^ (v5 + 56) & 0xEF) + 35;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v5 + 1 == a3 + 16) * v8) ^ v4)) - 8))();
}

uint64_t sub_18C9CC2D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _BYTE *v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  char v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  char v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;

  LODWORD(STACK[0x5B0]) = v41;
  v44 = (((((v39 & 0xA ^ 0x30D8083F) - (v39 & 5)) & 0x20D0082D ^ 0x4003308D)
        + (((v39 & 0xA ^ 0x30D8083F) - (v39 & 5)) ^ 0x31F80C70)
        - ((((v39 & 0xA ^ 0x30D8083F) - (v39 & 5)) ^ 0x31F80C70) & 0x120004D)) ^ 0x60D33CAD)
      * v40
      + 393228;
  v45 = v44 - (((v44 * (unint64_t)v43) >> 32) >> 4) * a1;
  v46 = v42[473];
  v42[473] = v42[v45];
  v42[v45] = v46;
  LODWORD(v45) = (((v38 - 336812917) % 0xFu + 58138470 - ((2 * ((v38 - 336812917) % 0xFu)) & 0xC)) ^ 0x3771F66) * v40
               + 393890;
  v47 = v45 - 965 * (((v45 * (unint64_t)v43) >> 32) >> 4);
  v48 = v42[170];
  LODWORD(v45) = ((2 * ((v36 ^ 0x6776F4D6) + (v39 ^ 0x3A6B38AF) + 1)) & 0xEFB27BEE)
               + (((v36 ^ 0x6776F4D6) + (v39 ^ 0x3A6B38AF) + 1) ^ 0x77D93DF7);
  v42[170] = v42[v47];
  v42[v47] = v48;
  v49 = ((((v37 - 15538644) % 0xEu) ^ 0x3F7D2CFF) + 2 * ((v37 - 15538644) % 0xEu)) * v40 - 766268978;
  v50 = v42[832];
  v51 = v49 - 965 * (((v49 * (unint64_t)v43) >> 32) >> 4);
  v42[832] = v42[v51];
  v42[v51] = v50;
  v52 = v37 - 2 * ((v37 + 1146339808) & 0x7CE324FE ^ v37 & 8) + 1094117078;
  v53 = (((2 * ((v36 ^ 0x98890B29) % 0xD)) & 0x1C) + (((v36 ^ 0x98890B29) % 0xD) ^ 0xDE767CFE)) * v40 - 1180774662;
  v54 = v53 - 965 * (((v53 * (unint64_t)v43) >> 32) >> 4);
  v55 = v42[529];
  v56 = v45 - 2010725879 + (v52 ^ 0x7CE324F6);
  v57 = v52 ^ v36;
  v58 = v45 + v38;
  v59 = ((2 * v57) & 0x2BFAFFBE ^ 0xA607408) + (v57 ^ 0x1ACD45FB);
  v42[529] = v42[v54];
  v42[v54] = v55;
  LODWORD(v54) = (((((int)v45 - v59 - 1641791000) % 0xCu) ^ 0x7FF5BDFF) + 2 * (((int)v45 - v59 - 1641791000) % 0xCu))
               * v40
               + 445430010;
  v60 = v54 - 965 * (((v54 * (unint64_t)v43) >> 32) >> 4);
  LOBYTE(v47) = v42[226];
  v42[226] = v42[v60];
  v61 = v57 ^ 0xEB5A15FB ^ (v58 - ((2 * v58 - 400110296) & 0xC8D45FBE) + 1484625523);
  v42[v60] = v47;
  v62 = (v61 % 0xB * v40 + 396538 - 965 * ((4450744 * (unint64_t)(v61 % 0xB * v40 + 396538)) >> 32));
  v63 = v56 + 704208318 - ((2 * v56) & 0x53F2BB7C);
  v64 = v42[888];
  v42[888] = v42[v62];
  v42[v62] = v64;
  v65 = ((v63 ^ 0x29F95DBEu) % 0xA * v40
                     + 397200
                     - 965 * ((4450744 * (unint64_t)((v63 ^ 0x29F95DBEu) % 0xA * v40 + 397200)) >> 32));
  LOBYTE(v56) = v42[585];
  v42[585] = v42[v65];
  v42[v65] = v56;
  LODWORD(v65) = ((2 * (v61 + (v63 ^ 0x29F95DBE))) & 0xBD774CFA) + ((v61 + (v63 ^ 0x29F95DBE)) ^ 0xDEBBA67D);
  LOBYTE(v61) = v45 + 9;
  LODWORD(v47) = ((((v59 - 368934879) % 9u) ^ 0x3FBFEEFF) + 2 * ((v59 - 368934879) % 9u)) * v40 + 632425148;
  v66 = v47 - 965 * (((v47 * (unint64_t)v43) >> 32) >> 4);
  LOBYTE(v56) = v42[282];
  v42[282] = v42[v66];
  v67 = ((v59 - v65 - 927062370) ^ (v45 - 2010725879))
      - 1961613947
      - ((2 * ((v59 - v65 - 927062370) ^ (v45 - 2010725879))) & 0x16284B0A);
  v42[v66] = v56;
  LODWORD(v45) = ((_BYTE)v45 + 9 - ((2 * (_BYTE)v45 + 6) & 4)) & 7;
  v68 = ((2 * v45) ^ 4) + (v45 ^ 0x7FB7FFFD);
  LOBYTE(v56) = v42[944];
  LODWORD(v45) = (v68 - 2142764122) * (v68 - 2142764122) - 109561 + (2142764453 - v68) * (v68 - 2142764453);
  LOBYTE(v66) = v42[v45 - 965 * (((v45 * (unint64_t)v43) >> 32) >> 4)];
  LODWORD(v45) = v67 ^ 0x74EBDA7A;
  v69 = (v67 ^ 0x74EBDA7A) + v65;
  LOBYTE(v65) = v69 - 2;
  v70 = v63 & 0x252;
  v71 = v68 * v40 - 1170860206;
  v42[944] = v66;
  v72 = (v69 + 746285566 - ((2 * v69 + 42513160) & 0x166E20E4) - 8) ^ 0xB371072;
  v42[v71 - 965 * (((v71 * (unint64_t)v43) >> 32) >> 4)] = v56;
  v73 = ((2 * ((v67 ^ 0x8B142585) + (v63 ^ 0x7CBA7165))) & 0x9FFCCFF6)
      + (((v67 ^ 0x8B142585) + (v63 ^ 0x7CBA7165)) ^ 0x4FFE67FB);
  LODWORD(v66) = ((2 * (v72 % 7)) & 2) + 457277442 + ((v72 % 7 - 2040562347 - ((2 * (v72 % 7)) & 8) + 7) ^ 0x865F7D55);
  LOBYTE(v71) = v42[641];
  v42[641] = v42[(_DWORD)v66 * v40
               - 2069562656
               - 965 * ((((v66 * v40 - 2069562656) * (unint64_t)v43) >> 32) >> 4)];
  LODWORD(v66) = ((v70 ^ 0x212 | v70 ^ 0x40) + v66) * v40 - 2069955884;
  v42[v66 - 965 * (((v66 * (unint64_t)v43) >> 32) >> 4)] = v71;
  LOBYTE(v66) = v42[338];
  v74 = ((v73 - 1342072827) % 6 * v40
                     + 399848
                     - 965 * ((4450744 * (unint64_t)((v73 - 1342072827) % 6 * v40 + 399848)) >> 32));
  v75 = (v67 ^ 0x8B142585) % 5;
  v42[338] = v42[v74];
  v42[v74] = v66;
  LODWORD(v66) = v75 * v40;
  v76 = ((v75 * v40) ^ 0x5FBF6D0F) + ((1324 * v75) & 0x1A1C);
  LOBYTE(v61) = v65 ^ v61;
  LODWORD(v65) = v66 + 400510 - 965 * ((4450744 * (unint64_t)(v66 + 400510)) >> 32);
  v77 = (v73 + 916499161) ^ v67;
  LOBYTE(v66) = v42[35];
  v42[35] = v42[v65];
  v42[(v76 - 1605980305) % ((((v76 + 438127) & a35) + ((1605980303 - v76) & 0xDD78DF12)) ^ 0xDD7CDCD7)] = v66;
  LOBYTE(v65) = v42[697];
  v78 = (((_BYTE)v61 + (v77 ^ 2) + 1) & 3) * v40 + 401172;
  v79 = v78 - 965 * ((4450744 * (unint64_t)v78) >> 32);
  v80 = v79 - 709879500 - ((2 * v79) & 0x268);
  v81 = v80 ^ 0xD5B01934;
  v42[697] = v42[v81];
  v42[v81] = v65;
  LODWORD(v45) = v45 + 1342072827 - v73 + v72 + 1;
  LOBYTE(v72) = v42[394];
  v82 = ((v80 & 0xD ^ 4) + v45 % 3 + (v80 & 0xD ^ 9)) * v40 + 393228;
  v83 = (v82 - 965 * ((4450744 * (unint64_t)v82) >> 32));
  v42[394] = v42[v83];
  v42[v83] = v72;
  LODWORD(v83) = ((591033281 - ((759465 - (v77 | 0xFFFFE)) & 0x80081)) ^ 0x23327341) * v40 + 402496;
  LOBYTE(v45) = v42[91];
  v84 = v83 - 965 * (((v83 * (unint64_t)v43) >> 32) >> 4);
  v42[91] = v42[v84];
  v42[v84] = v45;
  LODWORD(v45) = 662 * ((((-45 * (v35 ^ 0x16)) ^ 8) - 71) & 0xF) + 439568;
  LOBYTE(v72) = (16 * *(_BYTE *)(STACK[0x718] + 493)) ^ 0xB0;
  LODWORD(v45) = 673
               * (*(unsigned __int8 *)(STACK[0x718]
                                     + (v45 - 965
                                                          * ((4450744 * (unint64_t)v45) >> 32))) ^ (v72 - ((2 * v72) & 0xC0) + 107) ^ 0x5F)
               + 359382;
  LODWORD(v45) = 662
               * (*((unsigned __int8 *)off_1E2538470[v35 - 270]
                  + (v45 - 1184 * ((3627507 * (unint64_t)v45) >> 32))) ^ 0x59)
               + 393228;
  *(_BYTE *)(STACK[0x718] + 918) = *(_BYTE *)(STACK[0x718]
                                            + (v45
                                                           - 965
                                                           * ((4450744 * (unint64_t)v45) >> 32)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * v35) - 8))(4252701544, 332735164, 4019288590, 104, 734243, 4019303154, 538400, 2332847402);
}

void sub_18C9CCCA4()
{
  JUMPOUT(0x18C9CCB58);
}

uint64_t sub_18C9CCCB0@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;

  v11 = (((v1 - 33) & (2 * ((v2 - 732439300) >> 4)))
                        + ~((v2 - 732439300) >> 4)
                        + 1)
      + 664;
  v12 = (((_BYTE)v2 + 12) & 0xF) * v9 + 439568;
  v13 = ((v11 & v9)
       + ((102
         - (((v1 + 499119071) & (2 * ((v2 - 732439300) >> 4)))
          + (((v2 - 732439300) >> 4) ^ 0x6EDFFBFF))) & 0x96)
       + (((((v1 - 33) & (2 * ((v2 - 732439300) >> 4)))
                           + ~((v2 - 732439300) >> 4)
                           - 103) & 0xDF)
                         + ((102
                           - (((v1 - 33) & (2 * ((v2 - 732439300) >> 4)))
                            + ~((v2 - 732439300) >> 4))) & 0xDF)
                         + 33))
      * v11;
  LOBYTE(v13) = (16 * *(_BYTE *)(v4 + (v13 - ((4450744 * (unint64_t)v13) >> 32) * v10))) ^ 0xB0;
  v14 = 673
      * (*(unsigned __int8 *)(v4 + (v12 - ((v12 * (unint64_t)a1) >> 32) * v10)) ^ 0xB3 ^ (v13 - ((2 * v13) & 0xC0) + 107))
      + 553879;
  v15 = v8
      + ((*(unsigned __int8 *)(v5 + (v14 - ((3627507 * (unint64_t)v14) >> 32) * v7)) >> 4) ^ 5)
      * v9;
  LOBYTE(v15) = (16 * *(_BYTE *)(v4 + (v15 - ((4450744 * (unint64_t)v15) >> 32) * v10))) ^ 0xB0;
  *(_BYTE *)(v4
           + v2 * v9
           + 456487848
           - ((((v2 * v9 + 456487848) * (unint64_t)v6) >> 32) >> 4) * v10) = v15 - ((2 * v15) & 0xC0) + 107;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((5197 * (v2 == 732439555)) ^ v1)) - 8))();
}

uint64_t sub_18C9CCE34@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;

  v15 = (((_BYTE)v2 + 6) & 0xF) * (v1 - 2653) + 439568;
  v16 = (((2 * (((v2 - 149391946) >> 4) - (((v2 - 149391946) >> 3) & 0xE63A35A) + v5)) & 0x130 ^ 0x110)
       + ((((v2 - 149391946) >> 4) - (((v2 - 149391946) >> 3) & 0x5A) + v5) ^ v6))
      * v12;
  LOBYTE(v16) = (16 * *(_BYTE *)(v7 + (v16 - ((v16 * (unint64_t)a1) >> 32) * v14))) ^ 0xB0;
  v17 = (*(unsigned __int8 *)(v7 + v15 - (((v15 * (unint64_t)v9) >> 32) >> 4) * v14) ^ (v16 - ((2 * v16) & 0xC0) + 107) ^ 2)
      * v3
      + 174980;
  v18 = v17 - (((v17 >> 5) * (unint64_t)v13) >> 32) * v10;
  v19 = v11 + ((((8 * *(_BYTE *)(v8 + v18)) ^ 0x38) + 16) ^ ((*(_BYTE *)(v8 + v18) ^ 0x48) - 32)) * v12;
  *(_BYTE *)(v7
           + v2 * v12
           - 113001984
           - ((((v2 * v12 - 113001984) * (unint64_t)v9) >> 32) >> 4) * v14) = *(_BYTE *)(v7 + (v19 - ((v19 * (unint64_t)a1) >> 32) * v14));
  return (*(uint64_t (**)(void))(v4 + 8 * (v1 | (8 * (v2 != 149392201)))))();
}

uint64_t sub_18C9CCF7C(uint64_t a1, uint64_t a2, int a3, unsigned int a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v16 = *(unsigned __int8 *)(v10
                           + v7 * v14
                           + a3
                           - ((((v7 * v14 + a3) * (unint64_t)v12) >> 32) >> 4) * v15);
  *(_BYTE *)(v10
           + v7 * v14
           + a6
           - ((((v7 * v14 + a6) * (unint64_t)v12) >> 32) >> 4) * v15) = v16 ^ *(_BYTE *)(v11 + (a5 + (v16 ^ a4) * v8 - ((3627507 * (unint64_t)(a5 + (v16 ^ a4) * v8)) >> 32) * v13)) ^ 0x77;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((60 * (v7 != -96900878)) ^ v6)) - 8))();
}

uint64_t sub_18C9CD014@<X0>(int a1@<W6>, int a2@<W7>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;

  v16 = *(unsigned __int8 *)(v9
                           + (a1
                                          + (v5 ^ 0xFEBD89B0) * v6
                                          - ((((a1 + (v5 ^ 0xFEBD89B0) * v6) >> 5) * (unint64_t)v14) >> 32) * v11));
  v17 = (v16 << (v4 + 123)) ^ (8 * v16) ^ 0x38;
  v18 = v12 + ((v16 ^ (v17 - ((2 * v17) & 0x60) + 50)) ^ 0xAA) * v13;
  *(_BYTE *)(v8
           + a2
           + v3 * v13
           - ((((a2 + v3 * v13) * (unint64_t)v10) >> 32) >> 4) * v15) = *(_BYTE *)(v8 + (v18 - ((v18 * (unint64_t)a3) >> 32) * v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((4094 * (v3 == -353868024)) ^ v4)) - 8))();
}

uint64_t sub_18C9CD0D4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  STACK[0x710] = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((856
                                * (((LODWORD(STACK[0x5B0]) == LODWORD(STACK[0x6F8])) ^ (v0 + 67) ^ 0xF) & 1)) ^ (v0 + 2096))))();
}

uint64_t sub_18C9CD114@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;

  v2 = (a1 - 2490) | 0x546;
  v3 = v1 - 618713544 + v2;
  v4 = (((v2 ^ 0xC8C) + 62) ^ 0x9209F746)
     + 1844839609
     + *(unsigned __int8 *)(STACK[0x708] + (((v2 ^ 0xC8C) + 62) ^ 0x9209F746) + 1844839609);
  v5 = -1443551489 * v4 - ((1407864318 * v4 + 100388138) & 0xE8AA59B8) + 2001933169;
  v6 = (v5 ^ 0x2B76E) + 2 * ((v5 ^ 0x74552CDC) & 0xF4579BB2);
  v7 = v6 + 66540054 + v6 % 0x101 - ((2 * (v6 + 66540054 + v6 % 0x101)) & 0xB2623FB6) - 651092005;
  v8 = ((2 * (v7 ^ 0x336593E1)) & 0xF27EF7EC ^ 0x270A5E4) + (v7 ^ 0x4D623AED);
  v9 = v8 - ((2 * v8 + 54592284) & 0xEB6A8D90) + 2002110550;
  v10 = v3 < 0x311F31F0;
  v11 = 391463806 - v8 - 2 * ((1162016702 - v8) & 0x3789A2DE ^ (391463806 - v8) & 8) - 445163754;
  v12 = v8 + 1520393103 - ((2 * (v8 + 1520393103) + 1210711442) & 0x4FAC9FDA) + 199970486;
  HIDWORD(v13) = v8 + 113280010;
  LODWORD(v13) = ((2 * v9) & 0xA4004F8 ^ 0xA400490) + (v9 ^ 0x709544B4);
  v14 = (v11 ^ 0xC8765D29) + (v13 >> 28) + 1;
  v15 = (v7 ^ 0x1F80AB08) + ((v14 + 668356589 - ((2 * v14) & 0x4FAC9FDA)) ^ v12) + 1;
  v16 = (v15 ^ 0xCE89E1A6)
      + (v12 ^ 0x27D64FED)
      - ((2 * ((v15 ^ 0xCE89E1A6) + (v12 ^ 0x27D64FED))) & 0x3DD644EE)
      - 1628757385;
  v17 = (v15 ^ 0xCE89E1A6)
      + (v7 ^ 0xE07F54F7)
      - 634406348
      - ((2 * ((v15 ^ 0xCE89E1A6) + (v7 ^ 0xE07F54F7))) & 0xB45F7468);
  HIDWORD(v13) = v15 ^ 0xE89E1A6;
  LODWORD(v13) = v15 ^ 0xC0000000;
  v18 = v11 ^ 0xF9004370 ^ v15;
  v19 = v18 + (v13 >> 29) + (v16 ^ 0x6114DD88) + 1;
  v20 = (v19 - 634406348 - ((2 * v19) & 0xB45F7468)) ^ v17;
  v21 = v20 - ((2 * v20 + 27456962) & 0x2DD466A);
  HIDWORD(v13) = (v21 - 1103094250) ^ 0x16EA335;
  LODWORD(v13) = v21 + LODWORD(STACK[0x5D8]);
  v22 = (v13 >> 29)
      + ((((v21 - 1103094250) ^ 0x816EA335)
        + v18
        - ((2 * (((v21 - 1103094250) ^ 0x816EA335) + v18)) & 0x436DB1E)
        + 35351951) ^ 0xFDE49270)
      + 1;
  v23 = (v21 - 1103094250) ^ v16;
  v24 = (v21 - 1103094250) ^ v17;
  v25 = (v24 ^ 0xA4BEE6FE) + ((v22 - ((2 * v22) & 0x3F0B0284) + 528843074) ^ v23) + 1;
  if (v3 >= 0x311F31F0)
    v10 = v3 > 0x311F31F1;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x6E8] + 8 * (((4 * !v10) | (16 * !v10)) ^ v2))
                                                 - 12))(v25 ^ 0x6D21757E, ((2 * ((v25 ^ 0x6D21757E) + (v24 ^ 0x5B411901))) & 0xFFEDD7FA)+ (((v25 ^ 0x6D21757E) + (v24 ^ 0x5B411901)) ^ 0x7FF6EBFD));
}

void sub_18C9CD630()
{
  JUMPOUT(0x18C9CD1C8);
}

#error "18C9D778C: call analysis failed (funcsize=8157)"

uint64_t sub_18C9D7790(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  uint64_t (*v52)(void);

  v49 = v44 - v46 - 1609956803 + (v46 ^ a1 ^ 0x95A48E16);
  v50 = v49 - 1668512586 - ((2 * v49) & 0x3919096C);
  LODWORD(STACK[0x6F8]) = (((v46 ^ a1 ^ v48) - 873973114) ^ 0x8FFFBBDF)
                        + 2103107326
                        + ((2 * ((v46 ^ a1 ^ v48) - 873973114)) & 0x1FFF77BE);
  v51 = v50 ^ (v46 - ((2 * v46 + 107508900) & 0x3919096C) + 532725512);
  LODWORD(STACK[0x634]) = ((v51 + (v50 & 0x520027C ^ a15) + (v50 & 0x520027C ^ 0xFEDFFDB7) + 2) ^ 0x7F53FF7F)
                        - 7444
                        + ((2 * (v51 + (v50 & 0x520027C ^ a15) + (v50 & 0x520027C ^ 0xFEDFFDB7) + 2)) & 0xFEA7FEFE);
  v52 = (uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (a44 ^ (968 * ((v45 ^ 0xC2CFED64) == 2054715800))))
                          - ((((a44 - 68) | 0x800u) - 811) ^ 0x669));
  LODWORD(STACK[0x640]) = (a4 ^ v47 ^ 0xB1BFFC73)
                        + (v47 ^ 0x74D3F4AB)
                        + a2
                        - ((2 * ((a4 ^ v47 ^ 0xB1BFFC73) + (v47 ^ 0x74D3F4AB) + a2) - 1584360950) & 0xAD56CA44)
                        + 661892647;
  return v52();
}

uint64_t sub_18C9D7A1C@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, int a8, char a9, __int16 a10, char a11)
{
  int v11;
  int v12;
  int v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  char v22;
  unsigned int v23;
  char v24;
  char v25;
  char v26;
  unsigned int v27;
  int v28;
  char v29;
  char v30;
  int v31;
  unsigned int v32;
  char v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  char v41;
  int v42;
  char v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  char v47;
  char v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  char v54;
  char v55;
  char v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  char v61;
  char v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  char v68;
  unsigned int v69;
  char v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  char v75;
  char v76;
  char v77;
  char v78;
  int v79;
  unsigned int v80;
  char v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  char v88;
  char v89;
  int v90;
  char v91;
  char v92;
  char v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  char v98;
  char v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  char v103;
  char v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  char v111;
  char v112;
  char v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  char v119;
  int v120;
  char v121;
  char v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  _BYTE *v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  char v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  char v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  char v155;
  char v156;
  int v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  unsigned int v173;
  BOOL v174;
  _BOOL4 v175;
  int v176;
  int v177;

  v15 = v12 + 717;
  v16 = ((2 * (v13 - 914435990)) & 0xF7BFEFDC) + ((v12 - 69209727) ^ (v13 - 914435990)) + 2096933824;
  LODWORD(STACK[0x5B4]) = 778215715;
  v17 = STACK[0x640];
  v18 = STACK[0x6F8];
  v19 = a2 + LODWORD(STACK[0x634]) - 238300395;
  LODWORD(STACK[0x6F4]) = v15 - 1536;
  v20 = v17 ^ (v15 + 1454070760);
  v21 = v18 + a2 - v14;
  LODWORD(STACK[0x6F8]) = 4 * v15;
  v22 = v14 - ((2 * v14 + 78) & ((4 * v15) ^ 0xD8)) - 65;
  v23 = v16 - a1 + v20 + 2039653041 + 1265804252 - ((2 * (v16 - a1 + v20 + 2039653041)) & 0x96E547B8);
  v24 = v18 + 2 * v14 - 102 + (v22 ^ 0xE7);
  v25 = ((2 * v24) & 0xDE) + (v24 ^ 0xEF);
  LOBYTE(v19) = (v19 ^ 0x1C) + 17 + v25 - ((2 * ((v19 ^ 0x1C) + 17 + v25)) & 0x7E) + 63;
  v26 = (v22 ^ 0xD8 ^ v19) + v21 - ((2 * ((v22 ^ 0xD8 ^ v19) + v21) + 8) & 0xF6) - 1;
  LOBYTE(v19) = v19 ^ 0xC4 ^ v26;
  v27 = (((v11 ^ 0x56AB6522) - 158109904) ^ 0x7EFD7EEA)
      - 1084565674
      + ((2 * ((v11 ^ 0x56AB6522) - 158109904)) & 0xFDFAFDD4)
      - 887866736
      + v20;
  v28 = a1 - 2 * ((a1 + 777712960) & 0x34A2443E ^ a1 & 0x1C) + 1660762466;
  v29 = v26 ^ v22;
  v30 = ((2 * (v25 + 62 + (v29 ^ 0xE3) - 29)) & 0xF2) + ((v25 + 62 + (v29 ^ 0xE3) - 29) ^ 0xF9);
  v31 = v16 + 2 * a1 + (v28 ^ 0x4B5DBBDD) + 1004665623;
  v32 = ((2 * v31) & 0xF3CFFFF6) + (v31 ^ 0x79E7FFFB);
  v33 = ((v30 + 7) ^ (v21 + 3)) + 120 - ((2 * ((v30 + 7) ^ (v21 + 3))) & 0xF0);
  v34 = v32 + (v27 ^ 0xFF602B1C) - 2045247483 - ((2 * (v32 + (v27 ^ 0xFF602B1C) - 2045247483)) & 0xD2EA5F92) - 378196023;
  LOBYTE(v27) = ((2 * ((v33 ^ 0x78) + v19)) & 0x7E) + (((v33 ^ 0x78) + v19) ^ 0xBF);
  v23 ^= 0x4B72A3DCu;
  v35 = v23 + (v28 ^ 0xA2289414 ^ v34) + 1 - ((2 * (v23 + (v28 ^ 0xA2289414 ^ v34) + 1)) & 0xA39F1FA0) - 774926384;
  v36 = v34 ^ 0x38BAA019 ^ v35;
  v37 = v35 ^ v28;
  v38 = ((2 * (v32 + 780373525 + (v37 ^ 0x656DCBF2))) & 0xBEFE1BB4)
      + ((v32 + 780373525 + (v37 ^ 0x656DCBF2)) ^ 0x5F7F0DDA);
  v39 = (v23 ^ (v38 - 1602162138)) + 766410233 - ((2 * (v23 ^ (v38 - 1602162138))) & 0x5B5CFBF2);
  v40 = (v39 ^ 0x2DAE7DF9) + v36 - ((2 * ((v39 ^ 0x2DAE7DF9) + v36) + 2077075558) & 0x47CD1BDC) - 1580375519;
  LOBYTE(v36) = (v27 + 116) ^ (v30 - 58);
  v41 = v29 ^ 0x69 ^ (v30 - ((2 * v30 + 52) & 0xC6) + 125);
  v42 = v40 ^ (v38 - 2055893787);
  LOBYTE(v27) = ((2 * ((v33 ^ 0xFA) + v27 + 65 + v36)) & 0xBC) + (((v33 ^ 0xFA) + v27 + 65 + v36) ^ 0xDE);
  v30 -= 123;
  v43 = (v27 - 87) ^ v30;
  v44 = (v39 ^ 0x27F2647B) + (v40 ^ 0xA3E68DEE) + (v42 ^ 0xA3E68DEE) + 1903597396;
  v45 = v44 + (v42 ^ 0xE658CDCA);
  v46 = v44 + (v37 ^ 0x24948669 ^ (v38 - ((2 * v38 + 136762226) & 0xCADB97E4) + 1770075563));
  v30 ^= 0xEu;
  v47 = ((2 * (v30 + 55)) & 0xFC) + ((v30 + 55) ^ 0xFE);
  v48 = (v43 ^ 0x42 ^ (v27 - 87 + v41 - ((2 * (v27 - 87 + v41)) & 0x98) + 76)) + v47;
  v49 = (v38 - 1430710620) ^ 0x770390E;
  v50 = (v49 ^ v44) + 779366157 - ((2 * (v49 ^ v44)) & 0x5CE85E1A);
  v51 = ((2 * (v49 + 623525687)) & 0xFFEDFAFE) + ((v49 + 623525687) ^ 0xFFF6FD7F);
  LOBYTE(v27) = (v36 ^ 0x24) + v27 - v48 - 97;
  v52 = ((v46 + 779366157 - ((2 * v46) & 0x5CE85E1A)) ^ v50) + v51;
  v53 = v45 + v52 + 576325412 - 2 * (v52 + 576325412);
  v54 = ((2 * (v30 - 2 - v48)) & 0x7A) + ((v30 - 2 - v48) ^ 0xBD);
  v55 = v47 + ((v47 + 2) ^ 0xE ^ v43) - v54 + 48;
  v56 = v55 - 50 - ((2 * v55) & 0x9C);
  v57 = v49 - v52;
  LOBYTE(v27) = v56 ^ (v27 - 50 - ((2 * v27) & 0x9C));
  v58 = v51 + ((v51 + 590465) ^ 0x2E742F0D ^ v50) - (v49 - v52) - 714219405;
  v59 = v58 + 733621043 - ((2 * v58) & 0x57745666);
  v60 = (v53 - ((2 * v53 + 289689398) & 0x57745666) - 1269017906) ^ v59;
  LOBYTE(v58) = v54 - ((2 * v54 + 10) & 0x44) + 39;
  v61 = (v56 ^ 0xCE) - ((2 * (v56 ^ 0xCE) + 54) & 0x8C) + 97;
  v62 = (v48 - 86 + (v27 ^ 0xAC)) ^ v58;
  LOBYTE(v27) = (v27 ^ 0x53) - v54 + 47 + (v62 ^ 0xDD);
  LOBYTE(v27) = ((2 * v27) & 0xAC) + (v27 ^ 0xD6);
  v63 = v57 - ((2 * v57 - 2018899326) & 0x8CBFF60A) + 171245638;
  v64 = (v52 - 707080919 + (v60 ^ 0x814EF8AC)) ^ v63;
  v65 = (v59 ^ 0x2BBA2B33) - ((2 * (v59 ^ 0x2BBA2B33) - 1107551178) & 0x9C79A36C) + 758833105;
  v66 = (v60 ^ 0x7EB10753) - v57 - 714809869 + (v64 ^ 0xB9A004FA);
  v67 = ((2 * v66) & 0x7DEF5DEE) + (v66 ^ 0xBEF7AEF7);
  v68 = (v62 ^ 0x64 ^ v61) + 42 + v27 + 126 - ((2 * ((v62 ^ 0x64 ^ v61) + 42 + v27)) & 0xFC);
  v69 = ((2 * ((v63 ^ 0x465FFB05) + (v65 ^ 0x31C32E49) + 1)) & 0xFEDFBF7C)
      + (((v63 ^ 0x465FFB05) + (v65 ^ 0x31C32E49) + 1) ^ 0x7F6FDFBE);
  v70 = ((2 * (v68 ^ v62)) & 0xAE ^ 0xA8) + (v68 ^ v62 ^ 0x8B);
  v71 = (v65 ^ 0x88632AB3 ^ v64)
      + 1091064073
      + v67
      + 745337973
      - ((2 * ((v65 ^ 0x88632AB3 ^ v64) + 1091064073 + v67)) & 0x58D9E8EA);
  LOBYTE(v58) = (v58 ^ 0x22) + (v61 ^ 0xB9) + 42 + v70;
  LOBYTE(v58) = ((2 * v58) & 0xBA) + (v58 ^ 0xDD);
  v72 = ((2 * (v71 ^ v64)) & 0xFEEEFFDA ^ 0xD4661EC0) + (v71 ^ v64 ^ 0x1544709D);
  LOBYTE(v27) = v27 - v58 + v70 - ((2 * (v27 - v58 + v70) + 20) & 0x72) - 61;
  v73 = v72 + v69;
  v74 = v67 - v69 - ((2 * (v67 - v69) + 1667971650) & 0x4D7C3B48) - 1737246011;
  v75 = (v68 ^ 0x7E) + v70 - v58 - 6 + (v27 ^ 0x39);
  v76 = v75 - 75 - ((2 * v75) & 0x6A);
  v77 = v76 ^ (v70 - 66);
  LOBYTE(v27) = v27 ^ 0x8C ^ v77;
  v78 = (((v77 ^ 0xB5) - 121) ^ a11) - 65 + ((2 * ((v77 ^ 0xB5) - 121)) & 0x8A);
  v79 = (v71 ^ 0x2C6CF475) + (v74 ^ 0x26BE1DA4) - v69 - 1481102926;
  v80 = v79 - 941084721 - ((2 * v79) & 0x8FD05F9E);
  LOBYTE(v27) = v27 + 111 + v78;
  v81 = v58 - 97 + v78;
  v82 = v80 ^ (v72 + 1829579176);
  v83 = v74 ^ 0xE156326B ^ v82;
  v84 = (((v82 ^ 0xC7E82FCF) + 1611192199) ^ 0xFFDD9F6F)
      + 1560209664
      + ((2 * ((v82 ^ 0xC7E82FCF) + 1611192199)) & 0xFFBB3EDE);
  v85 = v83 + v84;
  v86 = v73 - 130441035 + v84;
  v87 = (v80 ^ 0xC7E82FCF) - v86;
  v88 = (v76 ^ 0xB5) - v27 - v81;
  v89 = v88 + v27;
  LOBYTE(v63) = v88 + v27 + 42;
  v90 = v86 - (v87 + 125478041) - ((2 * (v86 - (v87 + 125478041)) + 165999376) & 0xD7E5628) + 61973660;
  v91 = v81 - v89 + 53 - ((2 * (v81 - v89 + 53) - 80) & a9) + 50;
  v92 = (v91 ^ 0x25) - v58 + ((v88 + 12) ^ 0xDA ^ v91) + 90;
  v93 = v92 - ((2 * v92) & 0xCC) - 26;
  LOBYTE(v86) = 2 * ((v63 ^ 0x5A) + (v93 ^ 0x19) + 1) + ~((v63 ^ 0x5A) + (v93 ^ 0x19) + 1);
  LOBYTE(v58) = (v93 ^ 8) - v58 + 91 + v86 + 126 - ((2 * ((v93 ^ 8) - v58 + 91 + v86)) & 0xFC);
  v94 = (v90 ^ 0x7940D4EB) - v73 + ((v87 + 125478041 - v85 + 1616137918) ^ 0x86BF2B14 ^ v90) - 1698829272;
  v95 = v94 - ((2 * v94) & 0x77F4768A) - 1141228731;
  v96 = ((v87 + 532617721) ^ 0xDAE5085A) + (v95 ^ 0x4405C4BA) + 1;
  v97 = ((2 * v96) & 0xF35B6DF6) + (v96 ^ 0xF9ADB6FB);
  v98 = (v93 ^ 0xF7) + (v91 ^ 0xDA);
  v99 = v58 ^ v91;
  LOBYTE(v86) = v99 ^ (v86 + 77);
  v100 = v97
       - v73
       + (v95 ^ 0x90EDA8AB)
       - ((2 * (v97 - v73 + (v95 ^ 0x90EDA8AB)) + 1109420634) & 0xB3FDB6B4)
       + 2064584839;
  v101 = (v95 ^ 0x6F125754) + (v90 ^ 0x86BF2B14);
  v102 = v100 ^ v90;
  v99 ^= 0xA4u;
  v103 = ((2 * (v98 + v99)) & 0x7E) + ((v98 + v99) ^ 0x3F);
  v104 = (v58 ^ 0x7E) + (v86 ^ 0x5B) + 1;
  v105 = v102 ^ (v97 - 1189407663);
  LOBYTE(v58) = ((2 * ((v58 ^ 0x81) + v99 + 1)) & 0x38) + (((v58 ^ 0x81) + v99 + 1) ^ 0x9C);
  v102 ^= 0x5F41F04Eu;
  v106 = (v101 ^ 0x7A9DDD77) - 2057168382 + ((2 * v101) & 0xF53BBAEE) + v102 + 2183;
  v107 = ((2 * v106) & 0x7B6FFACE) + (v106 ^ 0x3DB7FD67);
  v108 = ((2 * ((v100 ^ 0x260124A5) + v102 + 1)) & 0xFFFBFFCE) + (((v100 ^ 0x260124A5) + v102 + 1) ^ a8);
  v109 = (v100 ^ 0xD9FEDB5A)
       + (v105 ^ 0xA0BE0FB1)
       + 1
       - ((2 * ((v100 ^ 0xD9FEDB5A) + (v105 ^ 0xA0BE0FB1) + 1)) & 0xBAB9C920)
       + 1566368912;
  v110 = v107 + v108;
  v111 = v58 + v103;
  v112 = (v86 ^ 0xA4) + v103 - 62 + ((2 * (v104 ^ 0x74)) ^ 0x6D);
  v113 = v112 + 58 + (~(2 * v112) | 0x8B) + 1;
  LOBYTE(v86) = (v104 ^ 0x74) - 71 + v58;
  v114 = (v105 ^ 0x5F41F04E) + v107 - 1035468134 + ((2 * v109) ^ 0x989A76A5);
  v115 = v114 - 868572440 - ((2 * v114) & 0x987545D0);
  LOBYTE(v107) = ((2 * ((v104 ^ 0x3D) + 122 + v111)) & 0x6A) + (((v104 ^ 0x3D) + 122 + v111) ^ 0xB5);
  LOBYTE(v105) = ((2 * ((v86 ^ 0x5F) + 75 + v107 + 1)) & 0xDA) + (((v86 ^ 0x5F) + 75 + v107 + 1) ^ 0xED);
  v116 = ((2 * (v110 - 589651705 + (v109 ^ 0xB3B2C4AD))) & 0x7FDD7A7C)
       + ((v110 - 589651705 + (v109 ^ 0xB3B2C4AD)) ^ 0xBFEEBD3E);
  v117 = ((2 * (v108 + 445816430 + (v109 ^ 0x1D1736E4))) & 0xDC9BDC3E ^ 0x901A5800)
       + ((v108 + 445816430 + (v109 ^ 0x1D1736E4)) ^ 0xB6D2C3BF);
  LOBYTE(v108) = (v86 ^ 0xA0) - v111 - ((2 * ((v86 ^ 0xA0) - v111) + 12) & 0xF8) - 126;
  v118 = v116 - v117;
  v119 = v113 ^ 0xC6 ^ v108;
  v120 = v117 - v110 - ((2 * (v117 - v110) + 1773068724) & 0x73744B86) + 1855035037;
  LOBYTE(v117) = ((2 * ((v108 ^ 0xFC) + 19 + v105)) & 0xF6) + (((v108 ^ 0xFC) + 19 + v105) ^ 0xFB);
  LOBYTE(v108) = 2 * (v107 + 75 + (v113 ^ 0x3A)) + ~(v107 + 75 + (v113 ^ 0x3A));
  v121 = v119 - v117;
  v122 = v119 - v117 + v105;
  v123 = v115 ^ 0xF580872B ^ v120;
  v118 += 777990369;
  v124 = ((2 * ((v120 ^ 0x39BA25C3) + v118)) & 0xDDFEF3EE) + (((v120 ^ 0x39BA25C3) + v118) ^ 0xEEFF79F7);
  v125 = ((2 * (v116 + 1074873026 + (v115 ^ 0xCC3AA2E8))) & 0xEF91F834)
       + ((v116 + 1074873026 + (v115 ^ 0xCC3AA2E8)) ^ 0x77C8FC1A);
  v126 = (_BYTE *)STACK[0x718];
  v126[956] = (v121 - 5) ^ 0x3D;
  v127 = v123 - 285246985 - v124 + 13613167 - ((2 * (v123 - 285246985 - v124)) & 0x19F70DE);
  LOBYTE(v116) = v122 + 125 + (~(2 * (v122 + 31) - 34) | 0x23);
  v126[473] = v127 ^ 4;
  v128 = (v127 ^ 0xCFB86F) + v118 + 1828787616 - ((2 * ((v127 ^ 0xCFB86F) + v118)) & 0xDA022B40);
  v126[529] = v124 - ((2 * v124 + 18) & 0xD6) + 116;
  v129 = ((2 * (v128 ^ v127)) & 0xD33AAEFA ^ 0xD3180A9A) + (v128 ^ v127 ^ 0x453FAB2);
  v130 = (v128 ^ 0x92FEEA5F) + v124;
  v131 = ((2 * (v116 ^ (v121 - 5))) ^ a7) + (v116 ^ (v121 - 5) ^ 0x91);
  v126[653] = (v122 + 14) ^ 0x3D;
  v126[832] = v125 - ((2 * v125 - 52) & 0xD6) + 81;
  v126[47] = (v117 + 5) ^ 0x3D;
  v126[350] = (v108 + 1) ^ 0x3D;
  v126[170] = v128 ^ 0xCB;
  LOBYTE(v108) = v131 + v108 - (v122 + 25) - ((2 * (v131 + v108 - (v122 + 25)) + 76) & 4) + 40;
  LOBYTE(v117) = (v116 ^ 0x91) + v117 + v131;
  v132 = ((2 * ((v128 ^ 0x6D0115A0) - 184909465)) & 0xAF64F56E) + (((v128 ^ 0x6D0115A0) - 184909465) ^ 0x57B27AB7);
  v133 = v130 + v129;
  LOBYTE(v130) = ((2 * ((v117 + 7) ^ (v131 - 102))) & 0xDC) + ((v117 + 7) ^ (v131 - 102) ^ 0xEE);
  v134 = v129
       + v125
       - v132
       - 2 * ((v129 + v125 - v132 + 1984702240) & 0x43ECBD0F ^ (v129 + v125 - v132) & 9)
       - 1170676698;
  v135 = v132 - v133;
  v136 = v129 - 2 * ((v129 + 653060892) & 0x7316F8DE ^ v129 & 2) - 1711021064;
  v126[709] = (v131 - 102) ^ 0x3D;
  v126[406] = (v122 + 25 - v117 + 85) ^ 0x3D;
  v126[585] = v134 ^ 0x6D;
  v126[226] = v136 ^ 0xB7;
  v126[103] = v108 ^ 0xBF;
  LOBYTE(v129) = ((2 * (v130 - 106 + (v108 ^ 0xA9))) & 0xBC) + ((v130 - 106 + (v108 ^ 0xA9)) ^ 0xDE);
  LOBYTE(v116) = v122 + 25 - v117 - v130 - 59;
  v126[765] = (v117 + 7) ^ 0x3D;
  v126[888] = v135 - ((2 * v135 + 120) & 0xD6) + 39;
  v137 = ((v133 - 1486672243) ^ 0xF316F8DC ^ v136)
       + 2124112161
       - ((2 * ((v133 - 1486672243) ^ 0xF316F8DC ^ v136)) & 0xFD36C242);
  LOBYTE(v136) = ((2 * ((v108 ^ 0x56) + 127 + v116)) & 0xDE) + (((v108 ^ 0x56) + 127 + v116) ^ 0xEF);
  v138 = (a6 & (2 * (v135 + 15357629 + (v137 ^ 0x81649EDE)))) + ((v135 + 15357629 + (v137 ^ 0x81649EDE)) ^ 0xDF5F77FF);
  v139 = ((2 * ((v137 ^ 0x7E9B6121) + (v134 ^ 0x2317032D))) & 0xBFD3FBB8)
       + (((v137 ^ 0x7E9B6121) + (v134 ^ 0x2317032D)) ^ 0xDFE9FDDC);
  v126[282] = v133 + (~(2 * v133 + 26) | 0x29) - 7;
  v140 = v133 - v138 - 2034063732;
  LOBYTE(v130) = v108 ^ 0xAE;
  v141 = ((2 * ((v134 ^ 0xDCE8FCD2) + 547391490 + v138)) & 0xB22DFBFA)
       + (((v134 ^ 0xDCE8FCD2) + 547391490 + v138) ^ 0x5916FDFD);
  v126[944] = v139 - ((2 * v139 + 72) & 0xD6) - 113;
  v126[159] = (v136 + 17) ^ 0x3D;
  LOBYTE(v116) = v117 - v116 - ((2 * (v117 - v116) + 18) & 0x3E) - 88;
  LOBYTE(v117) = v129 - ((2 * v129 - 112) & 0x94) - 110;
  v126[462] = (v129 - 98) ^ 0x3D;
  v126[821] = v108 ^ 0x93;
  v126[518] = v116 ^ 0x32;
  v126[338] = v134 ^ 0x41;
  v126[35] = v140 ^ 0x7B;
  v142 = v139 - ((2 * v139 + 425622172) & 0x1113B988) - 1791419886;
  LOBYTE(v129) = v136 + v130;
  v143 = v140 ^ 0xC777CF10;
  LOBYTE(v140) = ((2 * v117) & 0xEE ^ 0xA0) + (v117 ^ 0x27);
  v126[641] = v141 - ((2 * v141 + 6) & 0xD6) + 110;
  v144 = v140 - ((2 * v140 + 26) & 0x96) + 88;
  v145 = (v134 ^ 0xB0BB5F2A) - ((2 * (v134 ^ 0xB0BB5F2A) - 608211242) & 0x86D9335E) + 827085082;
  LOBYTE(v129) = v129 + v140;
  LOBYTE(v138) = v129 + (v116 ^ 0xF) + (v117 ^ 0x35);
  LOBYTE(v130) = (((2 * v144) & 0xF8 ^ 0x90) + (v144 ^ 0xB7)) ^ (v130 + 107);
  v146 = (v145 ^ 0x436C99AF) + v141 - 1494679037 + (v142 ^ 0x7EA4DBDE);
  v147 = ((2 * v146) & 0xFB7FE7FC) + (v146 ^ 0x7DBFF3FE);
  v148 = v142 ^ v145;
  v126[215] = v117 ^ 0xED;
  v126[697] = (v139 - ((2 * v139 - 100) & 0x88) + 18) ^ 0xB5;
  LOBYTE(v145) = ((2 * (v129 - 123 + (v144 ^ 0xCB))) & 0xEE) + ((v129 - 123 + (v144 ^ 0xCB)) ^ 0x77);
  v126[877] = (v129 - 123) ^ 0x3D;
  v126[91] = v148 ^ 0x1A;
  v126[394] = v147 - ((2 * v147 + 4) & 0xD6) + 109;
  v149 = v143 + (v142 ^ 0x7776233B) + v147 + 1;
  v126[753] = v149 - ((2 * v149 + 4) & 0xD6) + 109;
  v126[574] = (v130 + 74 - ((2 * v130) & 0x94)) ^ 0x77;
  v150 = (v142 ^ 0x7EA4DBDE) - 2109731838;
  v151 = v149 + v150 - 1233677154 - ((2 * (v149 + v150)) & 0x6CEF293C);
  v152 = v147 + v150 - 873353443 - ((2 * (v147 + v150)) & 0x97E35E3A);
  v126[271] = (v138 - 122) ^ 0x3D;
  LOBYTE(v150) = v138 + v140 + 22 - ((2 * (v138 + v140 + 22) - 14) & 0xEA) - 18;
  LOBYTE(v139) = (v150 ^ 0x75)
               - 29
               + ((v130 + 74 - ((2 * v130) & 0x94)) ^ 0x4A)
               - ((2 * ((v150 ^ 0x75) - 29 + ((v130 + 74 - ((2 * v130) & 0x94)) ^ 0x4A))) & 0xA4)
               + 82;
  LOBYTE(v150) = v150 ^ v117;
  LOBYTE(v142) = v142 ^ 0x73;
  LOBYTE(v130) = v151 ^ v142;
  LOBYTE(v142) = v152 ^ v142;
  v126[450] = v142 ^ 0xC7;
  v126[147] = (v152 ^ 0x1D) + (~(2 * (v152 ^ 0x1D) - 6) | 0x29) - 23;
  LOBYTE(v117) = (v140 - 114 + v129) ^ v117;
  v126[933] = v117 ^ 0xF1;
  v126[630] = (v145 - 126) ^ 0x3D;
  v153 = v152 ^ 0xCBF1AF1D;
  v126[506] = v130 ^ 0x44;
  v126[327] = v139 ^ 0x6F;
  v126[809] = ((v151 ^ 0x9E) + (v148 ^ 0x71) - ((2 * ((v151 ^ 0x9E) + (v148 ^ 0x71)) - 58) & 0xB8) - 65) ^ 0xB7;
  v126[24] = v150 ^ 0x84;
  LOBYTE(v152) = 2 * ((v130 ^ 0x2F) + 83) + (((v130 ^ 0x2F) + 83) ^ 0x7F);
  v154 = ((v151 ^ 0xB677949E)
        + (v148 ^ 0x3DC84271)
        - ((2 * ((v151 ^ 0xB677949E) + (v148 ^ 0x3DC84271)) + 1765706182) & 0x5A0F55B8)
        + 1638330303) ^ 0x3976F5E3;
  LOBYTE(v150) = ((2 * ((v150 ^ 0xB9) + 83)) & 0xCE) + (((v150 ^ 0xB9) + 83) ^ 0xE7);
  LOBYTE(v138) = (v139 ^ 0x6D) - v150;
  LOBYTE(v140) = v145 - v138;
  v155 = v145 - v138 + 101;
  v156 = v142 ^ 0x63;
  LOBYTE(v142) = v153
               - ((((v151 ^ 0x9E) + (v148 ^ 0x71) - ((2 * ((v151 ^ 0x9E) + (v148 ^ 0x71)) - 58) & 0xB8) - 65) ^ 0xE3)
                - v152)
               - 37;
  v157 = -(v153 - v154 + 1106296027);
  v126[865] = v153 - (v154 - v152) - 37 - ((2 * (v153 - (v154 - v152) - 37) - 56) & 0xD6) + 79;
  LOBYTE(v150) = v150 - v155;
  v158 = v156 + 127 + v154 - v152 - ((2 * (v156 + 127 + v154 - v152)) & 0x42) + 33;
  v159 = ((2 * v117) & 0x46 ^ 6) + (v117 ^ 0xA0) + v138;
  v126[686] = (v159 + 68) ^ 0x3D;
  v126[203] = v158 ^ 0x4A;
  LOBYTE(v153) = (v139 ^ 0x6D) - v155 - 55;
  LOBYTE(v117) = v153 - ((2 * v153 + 64) & 0x7E) + 95;
  v126[562] = v154 - v152 - ((2 * (v154 - v152) - 2) & 0xD6) - 22;
  LOBYTE(v151) = v159 + 68;
  v126[259] = v157 - ((2 * v157 + 58) & 0xD6) + 8;
  v126[742] = (v150 + 34) ^ 0x3D;
  v126[80] = (v138 - 25) ^ 0x3D;
  LOBYTE(v138) = v158 ^ 0x99;
  LOBYTE(v154) = v154 - v142;
  v160 = v154 + 94;
  v161 = v155 - v150 - 117;
  LOBYTE(v148) = v150 - ((2 * v150 - 30) & 0xF4) + 107;
  LOBYTE(v154) = v154 + 94 - 2 * ((v154 - 4) & 0x11 ^ (v154 + 94) & 1) - 82;
  v126[136] = v161 ^ 0x3D;
  v126[315] = v154 ^ 0x7B;
  LOBYTE(v150) = (v151 ^ 0xB8) - 93;
  v162 = v138 - ((2 * v138 + 70) & 0xEA) + 24;
  v126[383] = (v140 + 92) ^ 0x3D;
  v126[439] = v150 ^ 0x3D;
  LOBYTE(v142) = v142 - v157 - ((2 * (v142 - v157) - 6) & 0xE8) + 113;
  LOBYTE(v140) = v157 - ((2 * v157 - 40) & 0x3A) - 119;
  v126[12] = v140 ^ 0xF6;
  v126[921] = v162 ^ 0x1E;
  v126[618] = v142 ^ 0x1F;
  v126[495] = v148 ^ 0xC7;
  LOBYTE(v138) = v153 - ((2 * v153 - 118) & 0xC6) - 88;
  LOBYTE(v152) = v161 ^ v150;
  v163 = (v150 ^ 0x93) + (v138 ^ 0x9C) + 68 - ((2 * ((v150 ^ 0x93) + (v138 ^ 0x9C) + 1)) & 0x86);
  LOBYTE(v139) = v160 - ((2 * v160 - 122) & 0x3C) - 31;
  LOBYTE(v157) = v148 ^ 0xC5 ^ v117;
  v126[798] = v117 ^ 2;
  LOBYTE(v117) = (v139 ^ 0xE1) + (v162 ^ 0xE6) + 22 - ((2 * ((v139 ^ 0xE1) + (v162 ^ 0xE6) + 1)) & 0x2A);
  v126[674] = v117 ^ 0x7E;
  v126[854] = ((v138 ^ 0xB1) + (v152 ^ 0x93)) ^ 0x3D;
  v126[371] = (v162 ^ v142 ^ 0x92) + (v139 ^ 0xCC) - ((2 * ((v162 ^ v142 ^ 0x92) + (v139 ^ 0xCC))) & 0xD6) + 107;
  LOBYTE(v140) = v140 ^ 0x8D ^ v154;
  v126[730] = (v140 - ((2 * v140 + 42) & 4) - 105) ^ 0x69;
  v126[192] = v163 ^ 0x7E;
  v126[551] = v138 ^ 0x8C;
  v126[68] = v139 ^ 0xA7;
  LOBYTE(v148) = (v157 - ((2 * v157 + 42) & 0x32) + 46) ^ v163 ^ 0xDA;
  LOBYTE(v154) = ((2 * ((v163 ^ 0x43) + (v138 ^ 0xB1))) & 0xEE) + (((v163 ^ 0x43) + (v138 ^ 0xB1)) ^ 0xF7);
  v126[248] = (v157 - ((2 * v157 + 42) & 0x32) + 46) ^ 0xA4;
  LOBYTE(v138) = v148 - 38 + v154 + v157 - ((2 * (v148 - 38 + v154 + v157)) & 0x92) + 73;
  v164 = ((2 * ((v117 ^ 0x15) + (v139 ^ 0xCC))) & 0xC6) + (((v117 ^ 0x15) + (v139 ^ 0xCC)) ^ 0xE3);
  LOBYTE(v139) = (v140 - ((2 * v140 + 42) & 4) - 105) ^ 0x17 ^ v117;
  LOBYTE(v117) = v164 + v140;
  LOBYTE(v139) = v164 + v140 + v139;
  v126[910] = v138 ^ 0x74;
  LOBYTE(v150) = ((2 * ((v162 ^ v142 ^ 0x92) + 60)) & 0x7E) + (((v162 ^ v142 ^ 0x92) + 60) ^ 0xBF);
  v126[427] = v139 - ((2 * v139 - 36) & 0xD6) + 89;
  LOBYTE(v152) = v152 ^ 0x93;
  v126[607] = (v152 + 60) ^ 0x3D;
  v126[304] = (v154 + 108) ^ 0x3D;
  v126[786] = v164 - ((2 * v164) & 0xD6) - 21;
  v165 = (v138 ^ 0xB6) + v152;
  v126[483] = v164 + v140 - ((2 * (v164 + v140) - 36) & 0xD6) + 89;
  LOBYTE(v152) = v165 - v157;
  v126[1] = (v154 + v157 - 38) ^ 0x3D;
  LOBYTE(v157) = -86 - v157 - ((-106 - 2 * v157) & 0xBE);
  v126[124] = v150 - ((2 * v150 - 126) & 0xD6) - 84;
  LOBYTE(v142) = (-(((v164 + 0x80) | (127 - v164)) & 0xD6) - 91 + v152) ^ v138;
  LOBYTE(v151) = v150 - v140 - v139;
  LOBYTE(v150) = (v151 - 27) ^ (v139 - 18);
  v126[360] = (v152 - 49) ^ 0x3D;
  LOBYTE(v153) = 31 - v140 - ((-106 - 2 * v140) & 0xA8);
  v126[539] = v153 ^ 0xBF;
  LOBYTE(v154) = v165 + v154 - ((2 * (v165 + v154) - 64) & 0xE4);
  v126[842] = v151 + 75 - ((2 * (v151 + 75) + 52) & 0xD6) + 5;
  v166 = v151 + 75 + v164 + v140 - ((2 * (v151 + 75 + v164 + v140) + 126) & 0xB6) + 26;
  v167 = v152 - ((2 * v152 + 44) & 0x46) - 71;
  LOBYTE(v140) = ((2 * ((v142 ^ 0xE2) - 123 + (v167 ^ 0xDC))) & 0xFC) + (((v142 ^ 0xE2) - 123 + (v167 ^ 0xDC)) ^ 0x7E);
  v126[236] = v166 ^ 0xB0;
  v126[57] = v157 ^ 0x62;
  LOBYTE(v154) = v154 + 82;
  v126[663] = v142 ^ 0xDF;
  LOBYTE(v138) = v166 ^ v153;
  LOBYTE(v142) = (v154 ^ 0xF2) - v152 + 47 + v140 - 111 - ((2 * ((v154 ^ 0xF2) - v152 + 47 + v140)) & 0x22);
  v126[180] = v150 ^ 0xC0;
  LOBYTE(v157) = v154 ^ v157 ^ (v140 - ((2 * v140 + 40) & 0xBE) + 115);
  LOBYTE(v151) = v151 - 64 + (~(2 * (v151 + 75) - 62) | 0xD9);
  LOBYTE(v153) = ((2 * ((v150 ^ 0xAB) + (v151 ^ 0xEC) + 1)) & 0xBA) + (((v150 ^ 0xAB) + (v151 ^ 0xEC) + 1) ^ 0xDD);
  LOBYTE(v117) = v153 + v117 - ((2 * (v153 + v117) - 112) & 0x22) + 89;
  LOBYTE(v139) = v157 ^ v142;
  v126[898] = (v153 - ((2 * v153 + 114) & 0xFE) + 56) ^ 0x94;
  LOBYTE(v151) = v117 ^ v151;
  v126[595] = v151 ^ 0xE9;
  v126[719] = v154 ^ 0xCF;
  v126[416] = (v140 + 20) ^ 0x3D;
  v126[775] = v157 ^ 0xCF;
  v126[292] = v138 ^ (v153 - ((2 * v153 + 114) & 0xFE) + 56) ^ 0x9B;
  LOBYTE(v157) = (v142 ^ v167 ^ 0x3A) + (v157 ^ v142 ^ 0x9C) + 1;
  LOBYTE(v157) = ((2 * v157) & 0xDC) + (v157 ^ 0x6E);
  LOBYTE(v152) = ((2 * ((v139 ^ 0x63) + 102)) & 0x70) + (((v139 ^ 0x63) + 102) ^ 0x38);
  v126[113] = v142 ^ v167 ^ 0x8F;
  v126[954] = v117 ^ 0xFA;
  LOBYTE(v154) = v138 ^ (v153 - ((2 * v153 + 114) & 0xFE) + 56) ^ v117;
  LOBYTE(v150) = v152 + v140;
  LOBYTE(v140) = ((2 * ((v154 ^ 0x9E) + (v151 ^ 0xA) + 1)) & 0x6A) + (((v154 ^ 0x9E) + (v151 ^ 0xA) + 1) ^ 0xB5);
  v126[348] = v140 - ((2 * v140 - 106) & 0xD6) - 74;
  LOBYTE(v154) = ((2 * ((v154 ^ 0x61) + 102)) & 0xEC) + (((v154 ^ 0x61) + 102) ^ 0x76);
  LOBYTE(v153) = v154 + v153 - ((2 * (v154 + v153) + 68) & 0x3C) + 64;
  LOBYTE(v138) = v150 - 69;
  v126[651] = v153 ^ 0xF5;
  v126[472] = v142 ^ 0xAC;
  LOBYTE(v139) = (v117 ^ 0x91) - 66;
  v126[169] = (v150 - 69) ^ 0x3D;
  v126[707] = v139 ^ 0xEB;
  v126[45] = v154 - ((2 * v154 + 20) & 0xD6) - 11;
  LOBYTE(v153) = ((2 * (v153 ^ v139)) & 0xF2 ^ 0x30) + (v153 ^ v139 ^ 0x67);
  v126[831] = (v157 - 110) ^ 0x3D;
  v126[528] = (v152 - 56) ^ 0x3D;
  LOBYTE(v150) = ((v142 ^ 0x91) - ((2 * (v142 ^ 0x91) + 124) & 0x14) + 72) ^ 0x37;
  LOBYTE(v151) = ((v142 ^ 0x91) - ((2 * (v142 ^ 0x91) + 124) & 0x14) + 72) ^ 0xA;
  LOBYTE(v152) = ((2 * (v152 - 32 + (v151 ^ v138) - 24)) & 0xB4) + ((v152 - 32 + (v151 ^ v138) - 24) ^ 0xDA);
  LOBYTE(v117) = ((2 * ((v151 ^ v138) - v157)) & 0xD4) + (((v151 ^ v138) - v157) ^ 0xEA);
  LOBYTE(v142) = v153 + v154;
  v126[225] = v150;
  LOBYTE(v150) = (v139 ^ 0x80) - 17;
  LOBYTE(v139) = v150 - (v153 + v154);
  v168 = v153 - v140 - ((2 * (v153 - v140) - 100) & 0x98) + 26;
  LOBYTE(v153) = v157 - v152;
  v126[404] = v168 ^ 0x27;
  LOBYTE(v154) = v140 - v142;
  LOBYTE(v157) = ((v151 + 110) & 0x7C) + ((v151 + 110) & 0x7C ^ 0x7C) + v152 + v117;
  v126[460] = v139 - ((2 * v139 - 120) & 0xD6) - 81;
  v126[584] = (v153 - 80) ^ 0x3D;
  v126[101] = v140 - v142 - ((2 * (v140 - v142) - 4) & 0xD6) - 23;
  v126[887] = (v117 + 22) ^ 0x3D;
  v126[943] = (v151 - v152 + 30) ^ 0x3D;
  v126[763] = v142 - ((2 * v142 + 118) & 0xD6) - 90;
  LOBYTE(v138) = ((2 * v168) & 0x3A ^ 0x18) + (v168 ^ 0xD1);
  v126[281] = (v152 + 80) ^ 0x3D;
  LOBYTE(v152) = v153 + 21;
  LOBYTE(v142) = v142 + 59 + v138;
  LOBYTE(v151) = v151 + v157 + 55 + 109 - 2 * ((v151 + v157 + 55 - 119) & 0xB ^ (v151 + v157 + 55 + 109) & 1) + 38;
  LOBYTE(v150) = v142 + v150 - ((2 * (v142 + v150) - 108) & 0xF2) + 67;
  v126[516] = v142 - ((2 * v142 - 106) & 0xD6) + 54;
  v169 = v154 + 41 + (v168 ^ 0xB3);
  LOBYTE(v154) = v169 + v138;
  v126[157] = v138 - ((2 * v138 - 42) & 0xD6) + 86;
  v126[640] = (v117 - 98) ^ 0x3D;
  LOBYTE(v138) = v142 - (v169 + v138);
  LOBYTE(v142) = v142 - v169 - 4;
  LOBYTE(v139) = v157 + 55 - (v153 + 21);
  v126[213] = v150 ^ 0x92;
  LOBYTE(v150) = ((2 * v150) ^ 0xCA) + (v150 ^ 0x1A);
  v126[337] = (v153 + 56) ^ 0x3D;
  LOBYTE(v140) = v138 - v150 - ((2 * (v138 - v150) + 18) & 0x9E) - 40;
  LOBYTE(v153) = v150 + v142 - ((2 * (v150 + v142) - 12) & 0x18) + 6;
  v126[819] = v154 + (~(2 * v154 - 126) | 0x29) - 83;
  v126[34] = (v157 + 82) ^ 0x3D;
  LOBYTE(v117) = v139 + v117;
  v126[696] = v151 ^ 0x37;
  LOBYTE(v150) = (v151 ^ 0x69) + v139 - ((2 * ((v151 ^ 0x69) + v139) - 14) & 0x32) - 110;
  v170 = v117 - 106 + (v151 ^ 0x96) + 89 - ((2 * (v117 - 106 + (v151 ^ 0x96))) & 0xB2);
  v171 = (v170 ^ 0x59) + v152 - ((2 * ((v170 ^ 0x59) + v152) - 34) & 0x78) + 43;
  LOBYTE(v138) = v154 + 13 + (v153 ^ 0xC) - ((2 * (v154 + 13 + (v153 ^ 0xC))) & 0x8A) - 59;
  v126[393] = (v117 + 3) ^ 0x3D;
  v126[875] = v142 - ((2 * v142 - 52) & 0xD6) + 81;
  LOBYTE(v154) = v117 + 3 + (v150 ^ 0x99) - 87 - ((2 * (v117 + 3 + (v150 ^ 0x99))) & 0x52);
  v126[269] = v140 ^ 0xA4;
  v126[90] = v171 ^ 1;
  v126[931] = v153 ^ 0x67;
  v126[752] = v150 ^ 0xA4;
  v172 = ((2 * v150) & 0xFA ^ 0x9A) + (v150 ^ 0x30);
  LOBYTE(v150) = v142 - 26 + (v140 ^ 0xCF) - 53 - ((2 * (v142 - 26 + (v140 ^ 0xCF))) & 0x96);
  v126[449] = v170 ^ 0x64;
  v126[572] = v138 ^ 0xAE;
  v126[146] = (((2 * ((v154 ^ 0xA9) - v172 + 125)) & 0xFC) + (((v154 ^ 0xA9) - v172 + 125) ^ 0xFE) + 2) ^ 0x3D;
  LOBYTE(v142) = ((2 * v140) & 0xDA ^ 0x12) + (v140 ^ 0xF6);
  v126[325] = v138 ^ v150 ^ 0x98;
  v126[628] = ((2 * ((v150 ^ 0xCB) - v142 - 19)) & 0xEA)
            + (((v150 ^ 0xCB) - v142 - 19) ^ 0x75)
            - ((2 * (((2 * ((v150 ^ 0xCB) - v142 - 19)) & 0xEA) + (((v150 ^ 0xCB) - v142 - 19) ^ 0x75)) + 22) & 0xD6)
            - 10;
  v126[684] = (v153 ^ 0xC9 ^ v138) - v142 - ((2 * ((v153 ^ 0xC9 ^ v138) - v142) - 38) & 0xD6) + 88;
  v126[808] = v154 ^ v171 ^ 0x55;
  v173 = LODWORD(STACK[0x5B0]) - 1606925047;
  v174 = v173 < 0xF63841B2;
  v126[22] = v142 - ((2 * v142 + 122) & 0xD6) + 40;
  v126[505] = (v172 + 45) ^ 0x3D;
  v175 = v173 < 0xF6384172;
  v176 = v174;
  if (v175)
    v177 = 0;
  else
    v177 = v176;
  v126[202] = ((v170 ^ 0x65 ^ v171) - v172 + 125) ^ 0x3D;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * ((187 * (v177 ^ 1)) ^ v15)) - 4))();
}

uint64_t sub_18C9DAED8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, char a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  _BYTE *v47;
  uint64_t v48;
  unsigned int v49;
  _BYTE *v50;
  _BYTE *v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE *v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  _BYTE *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  unsigned int v75;
  int v76;
  unsigned int v77;

  LODWORD(STACK[0x634]) = (v36 ^ 0x79DE7568) - 1691683882 + a5;
  LODWORD(STACK[0x6F8]) = v31 - 1638411556 + (v36 ^ 0x55F12F76);
  LODWORD(STACK[0x654]) = v33 - v32 + 1303676128;
  LODWORD(STACK[0x640]) = 80987493 - v32 - ((1548796038 - a2) & 0xAD56CA44);
  LODWORD(STACK[0x638]) = (v35 ^ 0x190D3FF3)
                        - 2113911669
                        + a1
                        - ((2 * ((v35 ^ 0x190D3FF3) - 2113911669 + a1) + 1084760522) & 0xAAE5507A)
                        + 1975957794;
  LODWORD(STACK[0x648]) = v32 - 924789052 + (v35 ^ 0x352265ED);
  LODWORD(STACK[0x650]) = v34 - v31 - 1847710567;
  v37 = LODWORD(STACK[0x6F4]) ^ 0xAA2;
  LODWORD(STACK[0x6F4]) = a3 - 1387759257;
  LODWORD(STACK[0x6E0]) = a3 - 1387759256;
  LODWORD(STACK[0x660]) = v37;
  LODWORD(STACK[0x6DC]) = (v37 ^ 0xAD4870F1) + a3;
  LODWORD(STACK[0x6D0]) = a3 - 1387759254;
  LODWORD(STACK[0x6C8]) = a3 + 1397828671;
  LODWORD(STACK[0x6A8]) = a3 - 749654977;
  LODWORD(STACK[0x6C0]) = a3 - 1387759252;
  LODWORD(STACK[0x6B8]) = a3 - 1387759251;
  LODWORD(STACK[0x6B4]) = a3 - 1387759250;
  LODWORD(STACK[0x6A0]) = a3 - 1387759249;
  LODWORD(STACK[0x698]) = a3 - 1387759248;
  LODWORD(STACK[0x690]) = a3 - 1387759247;
  LODWORD(STACK[0x688]) = a3 - 1387759246;
  LODWORD(STACK[0x680]) = a3 - 1387759245;
  LODWORD(STACK[0x678]) = a3 - 1387759244;
  LODWORD(STACK[0x670]) = a3 - 1387759243;
  LODWORD(STACK[0x668]) = a3 - 1387759242;
  v38 = STACK[0x710];
  v39 = LODWORD(STACK[0x660]);
  v40 = 638104280 * (((v39 - 2328) | 0xA00) ^ 0x816);
  v41 = STACK[0x718];
  v42 = STACK[0x708];
  v43 = STACK[0x708] + (LODWORD(STACK[0x6F4]) + 638104280);
  *(_BYTE *)(v41 + (v40 - 1518067556) % 0x3C5u) = *(_BYTE *)v43 ^ *(_BYTE *)(STACK[0x718] + (v40 - 1518067556) % 0x3C5u);
  v44 = 1554976193 * v43 + 453363850 - ((962468738 * v43) & 0x360B9114);
  v45 = ((HIWORD(v44) ^ 0x1B05) + 453363850 - ((2 * (HIWORD(v44) ^ 0x1B05)) & 0x19114)) ^ v44;
  v46 = 1554976193 * v45 - ((-1185014910 * v45) & 0x9CC2B688) - 832480444;
  LOBYTE(v46) = ((v46 ^ 0x44) - ((2 * (v46 ^ 0x44)) & 0x8F) + 71) ^ *(_BYTE *)(v38
                                                                             + (673 * (HIBYTE(v46) ^ 0x36)
                                                                                            - 1184
                                                                                            * ((3627507
                                                                                              * (unint64_t)(673 * (HIBYTE(v46) ^ 0x36))) >> 32)));
  *(_BYTE *)(v41 + (v40 - 1517845124) % 0x3C5u) ^= 0x82 ^ (v46 - (a4 & (2 * v46)) + 107);
  v47 = (_BYTE *)(v42 + (LODWORD(STACK[0x6E0]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518066894) % 0x3C5u) ^= *v47;
  LODWORD(v47) = 1554976193 * (_DWORD)v47 - 321408727 - ((-1185014910 * (_DWORD)v47) & 0xD9AF6252);
  LODWORD(v47) = (((v47 >> 16) ^ 0xECD7)
                - 321408727
                - ((2 * ((v47 >> 16) ^ 0xECD7)) & 0x16252)) ^ v47;
  LODWORD(v47) = 1554976193 * (_DWORD)v47 - ((962468738 * (_DWORD)v47) & 0x54C56678) + 711111484;
  v48 = (v40 - 1517844462) % 0x3C5u;
  v49 = (v47 >> 24) ^ 0xD2;
  LOBYTE(v47) = ((v47 ^ 0x3C) - ((2 * (v47 ^ 0x3C)) & 0xD6) + 107) ^ *(_BYTE *)(v41 + v48);
  *(_BYTE *)(v41 + v48) = *(_BYTE *)(STACK[0x710]
                                   + (673 * v49 - 1184 * ((3627507 * (unint64_t)(673 * v49)) >> 32))) ^ ((_BYTE)v47 - ((2 * (_BYTE)v47) & 0x8F) + 71) ^ 0x82;
  v50 = (_BYTE *)(v42 + (LODWORD(STACK[0x6DC]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518066232) % 0x3C5u) ^= *v50;
  LODWORD(v47) = 1554976193 * (_DWORD)v50 - 2059001424 - ((157162370 * (_DWORD)v50) & 0xA8C4360);
  LODWORD(v47) = (((v47 >> 16) ^ 0x8546)
                - 2059001424
                - ((2 * ((v47 >> 16) ^ 0x8546)) & 0x4360)) ^ v47;
  LODWORD(v47) = 1554976193 * (_DWORD)v47 - ((962468738 * (_DWORD)v47) & 0x55C959AC) + 719629526;
  LOBYTE(v47) = ((v47 ^ 0xD6) - ((2 * (v47 ^ 0xD6)) & 0x8F) + 71) ^ *(_BYTE *)(STACK[0x710] + (673 * ((v47 >> 24) ^ 0xD2) - 1184 * ((3627507 * (unint64_t)(673 * ((v47 >> 24) ^ 0xD2))) >> 32)));
  *(_BYTE *)(v41 + (v40 - 1517843800) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v47 - (a4 & (2 * (_BYTE)v47)) + 107);
  v51 = (_BYTE *)(v42 + (LODWORD(STACK[0x6D0]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518065570) % 0x3C5u) ^= *v51;
  LODWORD(v51) = 1554976193 * (_DWORD)v51 - 1063530839 - ((-1185014910 * (_DWORD)v51) & 0x81379D52);
  LODWORD(v51) = (((v51 >> 16) ^ 0xC09B)
                - 1063530839
                - ((2 * ((v51 >> 16) ^ 0xC09B)) & 0x19D52)) ^ v51;
  LODWORD(v51) = 1554976193 * (_DWORD)v51 - ((-1185014910 * (_DWORD)v51) & 0x934A4D88) - 911923516;
  LOBYTE(v51) = ((v51 ^ 0xC4)
               - 2 * ((v51 ^ 0xC4) & 0x4F ^ v51 & 8)
               + 71) ^ *(_BYTE *)(STACK[0x710]
                                + (673 * ((v51 >> 24) ^ 0x31)
                                               - 1184
                                               * ((3627507 * (unint64_t)(673 * ((v51 >> 24) ^ 0x31))) >> 32)));
  v52 = STACK[0x6C8] & 0x80000004;
  *(_BYTE *)(v41 + (v40 - 1517843138) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v51 + (~(2 * (_BYTE)v51) | 0x29) + 108);
  LODWORD(v51) = LODWORD(STACK[0x6A8]) ^ 0x9BF34D0B;
  *(_BYTE *)(v41 + (v40 - 1518064908) % 0x3C5u) ^= *(_BYTE *)(v42 + (LODWORD(STACK[0x6A8]) + 4));
  LODWORD(v51) = 1554976193 * (v42 + (v51 ^ 0x9BF34D0F) + 2 * v52)
               - 2014039559
               - ((157162370 * (v42 + (v51 ^ 0x9BF34D0F) + 2 * v52)) & 0xFE863F2);
  LODWORD(v51) = (((v51 >> 16) ^ 0x87F4)
                - 2014039559
                - ((2 * ((v51 >> 16) ^ 0x87F4)) & 0x63F2)) ^ v51;
  LODWORD(v51) = 1554976193 * (_DWORD)v51 - ((157162370 * (_DWORD)v51) & 0x9039CB6) - 2071867813;
  v53 = (LODWORD(STACK[0x6C0]) + 638104280);
  LOBYTE(v51) = ((v51 ^ 0x5B) - ((2 * (v51 ^ 0x5B)) & 0x8F) + 71) ^ *(_BYTE *)(STACK[0x710] + (673 * ((v51 >> 24) ^ 0x7C) - 1184 * ((3627507 * (unint64_t)(673 * ((v51 >> 24) ^ 0x7C))) >> 32)));
  *(_BYTE *)(v41 + (v40 - 1517842476) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v51 - (a4 & (2 * (_BYTE)v51)) + 107);
  *(_BYTE *)(v41 + (v40 - 1518064246) % 0x3C5u) ^= *(_BYTE *)(v42 + v53);
  LODWORD(v48) = 1554976193 * (v42 + v53) - 1667022808 - ((962468738 * (v42 + v53)) & 0x39468050);
  LODWORD(v48) = ((WORD1(v48) ^ 0x9CA3) - 1667022808 - ((2 * (WORD1(v48) ^ 0x9CA3)) & 0x8050)) ^ v48;
  LODWORD(v48) = 1554976193 * v48 - ((22944642 * v48) & 0x1FD6430) + 16691736;
  *(_BYTE *)(v41 + (v40 - 1517841814) % 0x3C5u) ^= v48 ^ 0xB6 ^ *(_BYTE *)(STACK[0x710]
                                                                         + (673 * (BYTE3(v48) ^ 0xF8)
                                                                                        - 1184
                                                                                        * ((3627507
                                                                                          * (unint64_t)(673 * (BYTE3(v48) ^ 0xF8))) >> 32)));
  v54 = (_BYTE *)(v42 + (LODWORD(STACK[0x6B8]) + 638104280));
  *(_BYTE *)(v41
           + (((v40 - 1518064549) % 0x3C5u) ^ 0x2D39C76B)
           - 758761323
           + ((2 * ((v40 - 1518064549) % 0x3C5u)) & 0x6D6)) = *v54 ^ *(_BYTE *)(v41 + (v40 - 1518063584) % 0x3C5u);
  v55 = 1554976193 * (_DWORD)v54 - 190373119 - ((-1185014910 * (_DWORD)v54) & 0xE94E4602);
  v56 = ((HIWORD(v55) ^ 0xF4A7) - 190373119 - ((2 * (HIWORD(v55) ^ 0xF4A7)) & 0x4602)) ^ v55;
  v57 = 1554976193 * v56 + 2094849752 - ((-1185014910 * v56) & 0xF9B9DA80) + 3688;
  LOBYTE(v57) = *(_BYTE *)(STACK[0x710]
                         + (673 * (HIBYTE(v57) ^ 0x84)
                                        - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v57) ^ 0x84))) >> 32))) ^ ((v57 ^ 0x40) + (~(2 * (v57 ^ 0x40)) | 0x71) + 72);
  *(_BYTE *)(v41 + (v40 - 1517841152) % 0x3C5u) ^= 0x82 ^ (v57 - (a4 & (2 * v57)) + 107);
  v58 = (_BYTE *)(v42 + (LODWORD(STACK[0x6B4]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518062922) % 0x3C5u) ^= *v58;
  LODWORD(v51) = 1554976193 * (_DWORD)v58 - 1451313263 - ((962468738 * (_DWORD)v58) & 0x52FD6F22);
  LODWORD(v51) = (((v51 >> 16) ^ 0xA97E)
                - 1451313263
                - ((2 * ((v51 >> 16) ^ 0xA97E)) & 0x16F22)) ^ v51;
  LODWORD(v51) = 1554976193 * (_DWORD)v51 - ((-1185014910 * (_DWORD)v51) & 0x87C4C1C8) + 1138909412;
  LOBYTE(v51) = *(_BYTE *)(STACK[0x710]
                         + (673 * ((v51 >> 24) ^ 0xBB)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v51 >> 24) ^ 0xBB))) >> 32))) ^ ((v51 ^ 0xE4) - 2 * ((v51 ^ 0xE4) & 0x4F ^ v51 & 8) + 71);
  *(_BYTE *)(v41 + (v40 - 1517840490) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v51 - (a4 & (2 * (_BYTE)v51)) + 107);
  v59 = (_BYTE *)(v42 + (LODWORD(STACK[0x6A0]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518062260) % 0x3C5u) ^= *v59;
  LODWORD(v59) = 1554976193 * (_DWORD)v59 + 2008103779 - ((-1185014910 * (_DWORD)v59) & 0xEF6276C6);
  LODWORD(v58) = (v40 - 1517839828) % 0x3C5u - 972949205 - ((2 * ((v40 - 1517839828) % 0x3C5u)) & 0x256);
  v60 = v58 ^ 0xC601F92B;
  LODWORD(v59) = (((v59 >> 16) ^ 0x77B1)
                + 2008103779
                - ((2 * ((v59 >> 16) ^ 0x77B1)) & 0x76C6)) ^ v59;
  LODWORD(v59) = 1554976193 * (_DWORD)v59 - ((962468738 * (_DWORD)v59) & 0x317DB02C) + 415160342;
  v61 = v59 >> 24;
  LOBYTE(v59) = *(_BYTE *)(v41 + v60) ^ ((v59 ^ 0x16)
                                       - ((2 * (v59 ^ 0x16)) & 0xD6)
                                       + 107);
  v62 = (LODWORD(STACK[0x698]) + 638104280);
  LODWORD(v58) = (v61 ^ 0xE0) * (((unsigned __int16)v58 & 0x2A1 ^ 0x21) + ((unsigned __int16)v58 & 0x2A1 ^ 0x280));
  *(_BYTE *)(v41 + v60) = *(_BYTE *)(STACK[0x710]
                                   + ((_DWORD)v58
                                                  - 1184 * ((3627507 * (unint64_t)v58) >> 32))) ^ ((_BYTE)v59 - ((2 * (_BYTE)v59) & 0x8F) + 71) ^ 0x82;
  *(_BYTE *)(v41 + (v40 - 1518061598) % 0x3C5u) ^= *(_BYTE *)(v42 + v62);
  LODWORD(v59) = (-1185014910 * (v42 + v62)) & 0xE134C730;
  LODWORD(v59) = ((((1554976193 * (v42 + v62) - 258317416 - (_DWORD)v59) >> 16) ^ 0xF09A)
                - 258317416
                - 2
                * ((((1554976193 * (v42 + v62) - 258317416 - (_DWORD)v59) >> 16) ^ 0xF09A) & 0x639D ^ ((1554976193 * (v42 + v62) - 258317416 - (_DWORD)v59) >> 16) & 5)) ^ (1554976193 * (v42 + v62) - 258317416 - (_DWORD)v59);
  LODWORD(v59) = 1554976193 * (_DWORD)v59 - ((962468738 * (_DWORD)v59) & 0x4EA5F3BC) + 659749342;
  LOBYTE(v59) = *(_BYTE *)(STACK[0x710]
                         + (673 * ((v59 >> 24) ^ 0xDF)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v59 >> 24) ^ 0xDF))) >> 32))) ^ ((v59 ^ 0xDE) + (~(2 * (v59 ^ 0xDE)) | 0x71) + 72);
  *(_BYTE *)(v41 + (v40 - 1517839166) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v59 - ((2 * (_BYTE)v59) & 0xD6) + 107);
  v63 = (_BYTE *)(v42 + (LODWORD(STACK[0x690]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518060936) % 0x3C5u) ^= *v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - 226766975 - ((-1185014910 * (_DWORD)v63) & 0xE4F79F02);
  LODWORD(v63) = (((v63 >> 16) ^ 0xF27B)
                - 226766975
                - ((2 * ((v63 >> 16) ^ 0xF27B)) & 0x19F02)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((-1185014910 * (_DWORD)v63) & 0xD7EE5176) - 336123717;
  LOBYTE(v63) = *(_BYTE *)(STACK[0x710]
                         + (673 * ((v63 >> 24) ^ 0x13)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0x13))) >> 32))) ^ ((v63 ^ 0xBB) - ((2 * (v63 ^ 0xBB)) & 0x8F) + 71);
  v64 = (LODWORD(STACK[0x688]) + 638104280);
  *(_BYTE *)(v41 + (v40 - 1517838504) % 0x3C5u) ^= 0x82 ^ ((_BYTE)v63 - ((2 * (_BYTE)v63) & 0xD6) + 107);
  *(_BYTE *)(v41 + (v40 - 1518060274) % 0x3C5u) ^= *(_BYTE *)(v42 + v64);
  LODWORD(v63) = 1554976193 * (v42 + v64) - 1143099546 - ((962468738 * (v42 + v64)) & 0x77BB5ECC);
  LODWORD(v63) = (((v63 >> 16) ^ 0xBBDD)
                - 1143099546
                - ((2 * ((v63 >> 16) ^ 0xBBDD)) & 0x15ECC)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((962468738 * (_DWORD)v63) & 0x5F92640C) - 1345768954;
  v65 = (LODWORD(STACK[0x680]) + 638104280);
  LOBYTE(v63) = *(_BYTE *)(STACK[0x710]
                         + (673 * ((v63 >> 24) ^ 0x57)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0x57))) >> 32))) ^ ((v63 ^ 6) - ((2 * (v63 ^ 6)) & 0x8F) + 71);
  *(_BYTE *)(v41 + 35) = *(_BYTE *)(v41 + (v40 - 1517837842) % 0x3C5u) ^ 0x82 ^ ((_BYTE)v63
                                                                               - ((2 * (_BYTE)v63) & 0xD6)
                                                                               + 107);
  *(_BYTE *)(v41 + (v40 - 1518059612) % 0x3C5u) ^= *(_BYTE *)(v42 + v65);
  LODWORD(v58) = 1554976193 * (v42 + v65) + 570833974 - ((962468738 * (v42 + v65)) & 0x440C786C);
  LODWORD(v58) = (((v58 >> 16) ^ 0x2206)
                + 570833974
                - 2 * (((v58 >> 16) ^ 0x2206) & 0x3C3F ^ (v58 >> 16) & 9)) ^ v58;
  LODWORD(v58) = 1554976193 * (_DWORD)v58 - ((-1185014910 * (_DWORD)v58) & 0x82E08716) + 1097876363;
  v66 = (LODWORD(STACK[0x678]) + 638104280);
  *(_BYTE *)(v41 + (v40 - 1517837180) % 0x3C5u) ^= v58 ^ 0x25 ^ *(_BYTE *)(STACK[0x710]
                                                                                          + (673 * ((v58 >> 24) ^ 0xB9) - 1184 * ((3627507 * (unint64_t)(673 * ((v58 >> 24) ^ 0xB9))) >> 32)));
  *(_BYTE *)(v41 + (v40 - 1518058950) % 0x3C5u) ^= *(_BYTE *)(v42 + v66);
  LODWORD(v63) = v42 + v66 - 1017467033 - ((2 * (v42 + v66)) & 0x86B55ECE);
  v67 = 1554976193 * (v63 ^ 0xC35AAF67)
      - 2132077210
      - ((22944642 * (v63 ^ 0xC35AAF67)) & 0x1D62ACC);
  v68 = ((HIWORD(v67) ^ 0x80EB) - 2132077210 - 2 * ((HIWORD(v67) ^ 0x80EB) & 0x1576 ^ HIWORD(v67) & 0x10)) ^ v67;
  v69 = 1554976193 * v68 - ((-1185014910 * v68) & 0xA74E8692) - 744012983;
  LOBYTE(v69) = *(_BYTE *)(STACK[0x710]
                         + (673 * (HIBYTE(v69) ^ 0x2B)
                                        - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v69) ^ 0x2B))) >> 32))) ^ ((v69 ^ 0x49) - ((2 * (v69 ^ 0x49)) & 0x8F) + 71);
  *(_BYTE *)(v41 + (v40 - 1517836518) % 0x3C5u) ^= 0x82 ^ (v69 - ((2 * v69) & 0xD6) + 107);
  v70 = (_BYTE *)(v42 + (LODWORD(STACK[0x670]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518058288) % 0x3C5u) = *v70 ^ *(_BYTE *)(v41
                                                                  + 272
                                                                  * (((v63 & 0x8A407982 ^ 0x82402902 | v63 & 0x8A407982 ^ 0x8005080)
                                                                    + 362394741) ^ 0x9FDA2F61)
                                                                  % 0x3C5);
  v71 = (v40 - 1517835856) % 0x3C5u;
  LODWORD(v70) = 1554976193 * (_DWORD)v70 - 1684235560 - ((962468738 * (_DWORD)v70) & 0x373935B0);
  LODWORD(v70) = (((v70 >> 16) ^ 0x9B9C)
                - 1684235560
                - ((2 * ((v70 >> 16) ^ 0x9B9C)) & 0x135B0)) ^ v70;
  LODWORD(v70) = 1554976193 * (_DWORD)v70 - ((962468738 * (_DWORD)v70) & 0x6584F55E) - 1295877457;
  LODWORD(v66) = 673 * ((v70 >> 24) ^ 0x4A)
               - 1184 * ((3627507 * (unint64_t)(673 * ((v70 >> 24) ^ 0x4A))) >> 32);
  v72 = STACK[0x710];
  LODWORD(v70) = v70 ^ 0xFFFFFFAF;
  v73 = (2 * (_DWORD)v70) & 0xFFFFFFD6;
  LOBYTE(v70) = *(_BYTE *)(v41 + v71) ^ ((_BYTE)v70 - ((2 * (_BYTE)v70) & 0xD6) + 107);
  *(_BYTE *)(v41 + v71) = *(_BYTE *)(STACK[0x710] + v66) ^ ((_BYTE)v70 + (~(2 * (_BYTE)v70) | 0x71) + 72) ^ 0x82;
  v74 = (_BYTE *)(v42 + (LODWORD(STACK[0x668]) + 638104280));
  *(_BYTE *)(v41 + (v40 - 1518057626) % 0x3C5u) ^= *v74;
  v75 = 1554976193 * (_DWORD)v74 - 1181779692 - ((962468738 * (_DWORD)v74) & 0x731EF228);
  v76 = ((HIWORD(v75) ^ 0xB98F) - 1181779692 - ((2 * (HIWORD(v75) ^ 0xB98F)) & 0xF228)) ^ v75;
  v77 = 1554976193 * v76 - ((425597826 * v76) & 0x1D2A7E42) + 244662049;
  LOBYTE(v77) = *(_BYTE *)(v72
                         + (673 * (HIBYTE(v77) ^ 0xF6)
                                        - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v77) ^ 0xF6))) >> 32))) ^ ((v77 ^ 0x21) - ((2 * (v77 ^ 0x21)) & 0x8F) + 71);
  *(_BYTE *)(v41 + (v40 - 1517835194) % 0x3C5u) ^= 0x82 ^ (v77 - ((2 * v77) & 0xD6) + 107);
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * (int)(v39 ^ 0x5D4)) - 4))(962468738, v73, v42, 22944642, v39, 130, 673, 214, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_18C9DC288()
{
  JUMPOUT(0x18C9DB0C8);
}

uint64_t sub_18C9DC290@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int *v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;

  LODWORD(STACK[0x6F4]) = 176092;
  LODWORD(STACK[0x6E0]) = 176754;
  LODWORD(STACK[0x6DC]) = 177416;
  LODWORD(STACK[0x6D0]) = 178078;
  LODWORD(STACK[0x644]) = 178740;
  LODWORD(STACK[0x6C8]) = 180064;
  LODWORD(STACK[0x6C0]) = 180726;
  LODWORD(STACK[0x6B8]) = 395876;
  LODWORD(STACK[0x6B4]) = 396538;
  LODWORD(STACK[0x6A8]) = 397200;
  LODWORD(STACK[0x6A0]) = 397862;
  LODWORD(STACK[0x698]) = 398524;
  LODWORD(STACK[0x690]) = 399186;
  LODWORD(STACK[0x688]) = 400510;
  LODWORD(STACK[0x680]) = 401172;
  LODWORD(STACK[0x678]) = 401834;
  LODWORD(STACK[0x670]) = 402496;
  LODWORD(STACK[0x668]) = 393228;
  LODWORD(STACK[0x660]) = 175430;
  LODWORD(STACK[0x65C]) = 399848;
  LODWORD(STACK[0x658]) = 179402;
  v2 = STACK[0x640];
  v3 = STACK[0x634];
  v4 = STACK[0x638];
  LODWORD(STACK[0x600]) = v1;
  LODWORD(STACK[0x640]) = 0;
  LODWORD(STACK[0x5FC]) = 4 * v1;
  LODWORD(STACK[0x634]) = 171458;
  v5 = (unsigned __int8 *)STACK[0x718];
  v6 = ((*(unsigned __int8 *)(STACK[0x718] + 0x29B2C % ((4 * v1) ^ 0x29C5u)) ^ 0x3D) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + 653) ^ 0x3D) << 16);
  LODWORD(STACK[0x630]) = 172120;
  v7 = v6 | ((v5[350] ^ 0x3D) << 8);
  LODWORD(STACK[0x608]) = 403158;
  LODWORD(STACK[0x638]) = 2304;
  LODWORD(STACK[0x60C]) = 395214;
  LODWORD(STACK[0x610]) = 394552;
  LODWORD(STACK[0x62C]) = 172782;
  v8 = (v7 | v5[47] ^ 0x6B) - 53138791 - 2 * ((v7 | v5[47] ^ 0x6B) & 0x7CD52ADF ^ (v5[47] ^ 0x6B) & 0x10) + 54;
  v9 = v8 ^ (v3 - 2050220015);
  v10 = (int *)STACK[0x700];
  *(_DWORD *)(STACK[0x700] + 392) = v9 ^ 0xB4E73368;
  LODWORD(STACK[0x614]) = 393890;
  v11 = v8 ^ (a1 - ((2 * a1 - 671128056) & 0xF9AA559E) + 1758780883);
  v12 = v5[529] ^ 0x6B;
  v13 = ((v5[393228 - 965 * (LODWORD(STACK[0x668]) / 0x3C5)] ^ 0x6B) << 24) | ((v5[832] ^ 0x6B) << 8) | ((v5[170] ^ 0x6B) << 16) | v12;
  v14 = v13 + 447933660 - 2 * (v13 & 0x1AB2ECDD ^ v12 & 1);
  v15 = v14 ^ v4;
  v16 = LODWORD(STACK[0x6F8]) - 224041693 + (v9 ^ 0xFCD52A99);
  v17 = (v4 ^ 0xAA8D57C2) + (v14 ^ 0x1AB2ECDC);
  v18 = (v2 ^ 0xA9549ADD) + (v2 ^ 0x196B21C3 ^ v14 ^ v4);
  v19 = (v11 ^ 0xFFFFFFA9) + (v11 ^ v14 ^ v4 ^ 0x4FC044B7);
  v20 = 399848 - 965 * (LODWORD(STACK[0x6A0]) / 0x3C5);
  v21 = 393228 - 965 * (LODWORD(STACK[0x6A8]) / 0x3C5);
  *v10 = v15 ^ 0x2D791074;
  v22 = STACK[0x648];
  v23 = ((v18 + 1) ^ (v17 + 1) ^ (v19 + 1)) - LODWORD(STACK[0x648]);
  v24 = 175430 - 965 * (LODWORD(STACK[0x660]) / 0x3C5);
  v10[260] = v23 - ((2 * v23 - 1793687754) & 0xC572A92A) - 1388014544;
  LODWORD(STACK[0x618]) = 174768;
  v10[254] = v16 + 478091174 - ((2 * v16 + 1938523682) & 0xC572A92A);
  LODWORD(STACK[0x624]) = 174106;
  v25 = v4;
  v26 = STACK[0x650];
  v27 = v3 + LODWORD(STACK[0x650]) - ((2 * (v3 + LODWORD(STACK[0x650])) + 930599110) & 0x27DFECB4) + 1336663741;
  v28 = ((2 * (v27 ^ (a1 + 1811919620))) & 0x8FE7A75E ^ 0x7C7A414) + (v27 ^ (a1 + 1811919620) ^ 0xD41C25F5);
  LODWORD(STACK[0x628]) = 173444;
  v29 = v5[v24] ^ 0x6B;
  v30 = ((v5[709] ^ 0x3D) << 24) | ((v5[406] ^ 0x3D) << 16) | ((v5[103] ^ 0x3D) << 8) | v29;
  v31 = v30 - 996090462 - 2 * (v30 & 0x44A0DDAA ^ v29 & 8);
  v32 = v31 ^ (v28 + 1699432150);
  v10[23] = v32 ^ 0x8C92C405;
  v33 = LODWORD(STACK[0x654]) - 1571090197;
  v34 = v33 + (v25 ^ 0x5572A83D) - 971980117 - ((2 * (v33 + (v25 ^ 0x5572A83D))) & 0x8C218556);
  v35 = v34 ^ v2 ^ 0x90BBA789;
  v36 = ((v28 + 940321873) ^ (v26 - 1242576814))
      - v28
      - ((2 * (((v28 + 940321873) ^ (v26 - 1242576814)) - v28) - 1880643746) & 0xD0DEE520)
      - 1335671233;
  v37 = v34 ^ v2 ^ 0x6F445876;
  v38 = v22 - 201617205 + v37;
  v39 = v37 + (v35 ^ v33) + 1 - ((2 * (v37 + (v35 ^ v33) + 1)) & 0xE36B088C) - 239762362;
  v40 = (v27 ^ 0x13EFF65A)
      + (v36 ^ 0x17908D6F)
      + 1954046271
      - ((2 * ((v27 ^ 0x13EFF65A) + (v36 ^ 0x17908D6F) + 1)) & 0xE8F0C27C);
  v41 = (v34 ^ 0xC610C2AB) + (v39 ^ 0xE4A7BB9);
  v42 = v35 - ((2 * v35 + 1518220554) & 0xBF21BEA2) + 214956502;
  v43 = ((v5[395876 - 965 * (LODWORD(STACK[0x6B8]) / 0x3C5)] ^ 0x6B) << 24) | ((v5[396538
                                                                                 - 965 * (LODWORD(STACK[0x6B4]) / 0x3C5)] ^ 0x6B) << 16) | v5[v20 - 1986] ^ 0x6B | ((v5[v21 + 3972] ^ 0x6B) << 8);
  v44 = v43 + 1950893084 - ((2 * v43) & 0xE8908838);
  v10[208] = v44 ^ v42 ^ 0xC961CFD8;
  v45 = v41 + 78057730 - ((2 * (v41 + 1)) & 0x94E2202);
  LODWORD(STACK[0x654]) = 399848 - 965 * (LODWORD(STACK[0x688]) / 0x3C5);
  v46 = v36 ^ (LODWORD(STACK[0x6F8]) - v28 - 1164363566);
  v47 = 399848 - 965 * (LODWORD(STACK[0x65C]) / 0x3C5);
  v48 = v39 ^ (v38 + 1);
  v49 = (v48 ^ 0xE4A7BB9)
      + (((v45 ^ 0xFB58EEFE) + (v45 ^ 0xAF7F8A4C ^ v44 ^ v42) + 1) ^ ((v42 ^ 0x206F20AE) + (v44 ^ 0x7448441C) + 1) ^ ((v31 ^ v40 ^ 0x4F274335) + (v31 ^ v40 ^ v44 ^ v42 ^ 0x1B002787) + 1));
  v50 = 399848 - 965 * (LODWORD(STACK[0x690]) / 0x3C5);
  v10[185] = (v32 ^ 0xC4A0DDF4)
           + (v46 ^ 0xE86F7290)
           - 1589631749
           - ((2 * ((v32 ^ 0xC4A0DDF4) + (v46 ^ 0xE86F7290)) + 2098045132) & 0xC572A92A);
  v51 = 175430 - 965 * (LODWORD(STACK[0x6D0]) / 0x3C5);
  v10[179] = v49 + 478091175 - ((2 * (v49 + 1) + 1938523682) & 0xC572A92A);
  v52 = v45 ^ v48;
  v53 = ((2 * ((v45 ^ 0x4A71101) + 1507285244)) & 0x7B9FFDFA) + (((v45 ^ 0x4A71101) + 1507285244) ^ 0x3DCFFEFD);
  v54 = (v39 ^ 0xF5129547 ^ v45) + 1037041405 - v53 - ((2 * ((v39 ^ 0xF5129547 ^ v45) + 1037041405 - v53)) & 0x6BC48DC0);
  v55 = (v42 ^ 0xDF90DF51) + 1037041405 - v53 - ((2 * ((v42 ^ 0xDF90DF51) + 1037041405 - v53)) & 0x20EBEAEC);
  v56 = v40 ^ v46;
  v57 = v36 ^ 0x9C1713AE ^ v40;
  v58 = v40 ^ 0x7478613E;
  v59 = (((v5[176092 - 965 * (LODWORD(STACK[0x6F4]) / 0x3C5)] ^ 0x3D) << 24) | ((v5[176754
                                                                                  - 965
                                                                                  * (LODWORD(STACK[0x6E0])
                                                                                   / 0x3C5)] ^ 0x3D) << 16) | ((v5[177416 - 965 * (LODWORD(STACK[0x6DC]) / 0x3C5)] ^ 0x3D) << 8) | v5[v51 + 2648] ^ 0x6B) ^ v56;
  v10[231] = v59 ^ 0x13B6825D;
  v60 = ((2 * (v58 + 1507285244)) & 0xBEF4FDDE) + ((v58 + 1507285244) ^ 0x5F7A7EEF);
  v61 = v57 + 1601863407 - v60 - ((2 * (v57 + 1601863407 - v60)) & 0x38F3B49A);
  v62 = v55 + 276166006;
  v63 = v28 - v60 - ((2 * (v28 - v60) + 160140170) & 0x5667DEEE) + 1878635836;
  v64 = ((2 * (v53 - 1037041404 + (v62 ^ 0xEF8A0A89))) & 0xFBD739FA)
      + ((v53 - 1037041404 + (v62 ^ 0xEF8A0A89)) ^ 0x7DEB9CFD);
  v65 = (v63 ^ 0x54CC1088) + v58 - ((2 * ((v63 ^ 0x54CC1088) + v58) + 330215930) & 0x16558BBA);
  v66 = v63 ^ v56;
  v67 = v62 ^ v52;
  v65 += 1694637786;
  v68 = (((v5[398524 - 965 * (LODWORD(STACK[0x698]) / 0x3C5)] ^ 0x6B) << 24) | ((v5[v50 - 662] ^ 0x6B) << 16) | ((v5[v47] ^ 0x6B) << 8) | v5[LODWORD(STACK[0x654]) + 662] ^ 0x6B) ^ v52;
  v10[133] = v68 ^ 0x50384986;
  v69 = (v65 ^ v63 ^ v56 ^ v68 ^ 0xF170DBE8) + (v59 ^ 0x550BBFBB ^ v65 ^ v63 ^ v56 ^ v68);
  v70 = v64 - 2112593149;
  v71 = (v68 ^ 0x32811D13)
      + (v56 ^ 0x5B849BFA)
      - 1589631749
      - ((2 * ((v68 ^ 0x32811D13) + (v56 ^ 0x5B849BFA)) + 2098045132) & 0xC572A92A);
  v72 = 404709 - 965 * (LODWORD(STACK[0x670]) / 0x3C5);
  v73 = 399848 - 965 * (LODWORD(STACK[0x678]) / 0x3C5);
  v74 = (v52 ^ 0xCD7EE2EC)
      + (((v67 ^ 0x1A989FCE) + (v67 ^ v59 ^ 0xBEE3FB9D) + 1) ^ (2112593149
                                                              - v64
                                                              + ((v64 - 2112593149) ^ v59 ^ 0x5B849BAC)) ^ (v69 + 1));
  v75 = 399848 - 965 * (LODWORD(STACK[0x680]) / 0x3C5);
  v10[110] = v71;
  v76 = 179402 - 965 * (LODWORD(STACK[0x6C0]) / 0x3C5);
  v77 = v54 + 904021728;
  v78 = v61 - 1669735859;
  v79 = v66 ^ 0x3724FCD9;
  v10[104] = v74 + 478091175 - ((2 * (v74 + 1) + 1938523682) & 0xC572A92A);
  v80 = (((v61 - 1669735859) ^ 0x638625B2) + (v66 ^ 0x3724FCD9) + 1) ^ v63;
  v81 = ((2 * v80) & 0xF7FFCEFE ^ 0xD140CE46) + (v80 ^ 0x975F805C);
  v82 = ((2 * ((v63 ^ 0x6CA06723) - 1196423713)) & 0x5FF1EFFE) + (((v63 ^ 0x6CA06723) - 1196423713) ^ 0xAFF8F7FF);
  v83 = v70 + (v67 ^ 0xE5676031);
  v84 = (((v54 + 904021728) ^ 0xCA1DB91F) + (v67 ^ 0xE5676031) + 1) ^ v62;
  v85 = ((2 * v84) & 0xFB0F3F7E ^ 0xAB0C3A44) + (v84 ^ 0x2A61E29D);
  v86 = ((2 * ((v62 ^ 0xD7E67D22) - 1196423713)) & 0xE3D5CBFA) + (((v62 ^ 0xD7E67D22) - 1196423713) ^ 0x71EAE5FD);
  v87 = (v78 ^ 0x9DD175D9) - v81;
  v88 = (v77 ^ 0x344AE974) - v85;
  v89 = (((v5[178740 - 965 * (LODWORD(STACK[0x644]) / 0x3C5)] ^ 0x3D) << 24) | ((v5[179402
                                                                                  - 965
                                                                                  * (LODWORD(STACK[0x658])
                                                                                   / 0x3C5)] ^ 0x3D) << 16) | ((v5[180064 - 965 * (LODWORD(STACK[0x6C8]) / 0x3C5)] ^ 0x3D) << 8) | v5[v76 + 1324] ^ 0x6B) ^ (v87 - 67115137);
  v90 = v89 - 1770890362 - ((2 * v89) & 0x2CE4B70C);
  v10[156] = v90 ^ 0xDE404221;
  v91 = (((v5[v75 + 1324] ^ 0x6B) << 24) | ((v5[v73 + 1986] ^ 0x6B) << 16) | ((v5[v72 - 2213] ^ 0x6B) << 8) | v5[LODWORD(STACK[0x638]) - 1551] ^ 0x6B) ^ (v88 - 41443393);
  v92 = v91 + 1656312981 - ((2 * v91) & 0xC572A92A);
  v10[58] = v92;
  v93 = ((-41443393 - (v83 - v88) + ((v83 - v88 + 41443393) ^ 0x62B95495 ^ v92)) ^ (-41443393
                                                                                  - v85
                                                                                  + ((v85 + 41443393) ^ 0x62B95495 ^ v92)) ^ ((((v65 ^ 0xB2AC5DD) + v79 - v87 + 67115137) ^ (v81 + 67115137) ^ v90 ^ 0x698DA42F) + (((v65 ^ 0xB2AC5DD) + v79 - v87 + 67115137) ^ (v81 + 67115137) ^ v90 ^ v92 ^ 0xF4CB0F45) + 1))
      - v86;
  v10[35] = v93 - ((2 * v93 + 1625517254) & 0xC572A92A) + 321587960;
  v10[29] = v82
          + 1342638081
          + (v90 ^ 0x96725BD0)
          + 478091174
          - ((2 * (v82 + 1342638081 + (v90 ^ 0x96725BD0)) + 1938523682) & 0xC572A92A);
  return (*(uint64_t (**)(void))(STACK[0x6E8]
                              + 8 * (LODWORD(STACK[0x600]) | (8 * ((LODWORD(STACK[0x640]) + 4) > 0xF)))))();
}

void sub_18C9DD73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;

  LODWORD(STACK[0x654]) = v9;
  LODWORD(STACK[0x648]) = v10;
  LODWORD(STACK[0x6F8]) = a8;
  LODWORD(STACK[0x650]) = v11;
  LODWORD(STACK[0x670]) += 10592;
  LODWORD(STACK[0x678]) += 10592;
  LODWORD(STACK[0x680]) += 10592;
  LODWORD(STACK[0x6C0]) += 10592;
  LODWORD(STACK[0x6C8]) += 10592;
  LODWORD(STACK[0x658]) += 10592;
  LODWORD(STACK[0x644]) = v8 + 10592;
  LODWORD(STACK[0x688]) += 10592;
  LODWORD(STACK[0x65C]) += 10592;
  LODWORD(STACK[0x690]) += 10592;
  LODWORD(STACK[0x698]) += 10592;
  LODWORD(STACK[0x6D0]) += 10592;
  LODWORD(STACK[0x6DC]) += 10592;
  LODWORD(STACK[0x6E0]) += 10592;
  LODWORD(STACK[0x6F4]) += 10592;
  LODWORD(STACK[0x6A0]) += 10592;
  LODWORD(STACK[0x6A8]) += 10592;
  LODWORD(STACK[0x6B4]) += 10592;
  LODWORD(STACK[0x6B8]) += 10592;
  LODWORD(STACK[0x660]) += 10592;
  LODWORD(STACK[0x668]) += 10592;
  JUMPOUT(0x18C9DC3B8);
}

uint64_t sub_18C9DD8A0@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  _DWORD *v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unint64_t v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unint64_t v165;
  unsigned int v166;
  int v167;
  int v168;

  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x5FC]) ^ 0x2ECC;
  LODWORD(STACK[0x6DC]) = 0;
  v8 = (LODWORD(STACK[0x6E0]) + 1972419123) & 0x8A6F47F7;
  v9 = (_DWORD *)STACK[0x700];
  v10 = *(_DWORD *)(STACK[0x700] + 92);
  LODWORD(STACK[0x6F8]) = v8;
  v11 = v9[(562614899 * (v8 ^ 0x627) - 1059781792) % 0x11B];
  HIDWORD(v13) = v10 ^ 0xFFFFFFF1;
  LODWORD(v13) = v10 ^ 0x48321980;
  v12 = v13 >> 7;
  HIDWORD(v13) = v10 ^ LODWORD(STACK[0x5D4]);
  LODWORD(v13) = v10 ^ 0x48300000;
  v14 = v13 >> 18;
  HIDWORD(v13) = v11 ^ 0x15;
  LODWORD(v13) = v11 ^ 0x62B95480;
  v15 = v12 ^ (v10 >> 3) ^ v14;
  v16 = (v13 >> 7) ^ (v11 >> 3);
  HIDWORD(v13) = v11 ^ 0x15495;
  LODWORD(v13) = v11 ^ 0x62B80000;
  v17 = v13 >> 18;
  v18 = v9[180];
  HIDWORD(v13) = v18 ^ 0x19F1;
  LODWORD(v13) = v18 ^ 0x48320000;
  v19 = v16 ^ v17;
  v20 = (v13 >> 17) - ((2 * (v13 >> 17)) & 0xACB182EE) - 698826377;
  HIDWORD(v13) = v18 ^ LODWORD(STACK[0x5D4]);
  LODWORD(v13) = v18 ^ 0x48300000;
  v21 = v9[(562614899 * (v8 ^ 0x627) - 1059779088) % 0x11B];
  v22 = (v21 ^ 0x62B95495) << ((v20 & 0xF ^ 7) + (v20 & 0xF ^ 8));
  v23 = (v13 >> 19) ^ (v18 >> 10) ^ v20;
  HIDWORD(v13) = v21 ^ 0x15495;
  LODWORD(v13) = v21 ^ 0x62B80000;
  v24 = v13 >> 19;
  v25 = a2 - ((2 * a2 + 194527266) & 0x441AA38A) - 1478921770;
  HIDWORD(v13) = v4 ^ v19 ^ 0xAFC4FB0;
  LODWORD(v13) = v4 ^ v19 ^ 0x55555555;
  v26 = v13 >> 28;
  HIDWORD(v13) = v26 ^ 0x55555555;
  LODWORD(v13) = v26 ^ 0x937D6320;
  v27 = (a4 - ((2 * a4 + 1476355592) & 0x441AA38A) - 1911749431) ^ v25 ^ v15;
  v28 = (v21 >> 10) ^ (v21 >> 17) ^ v24 ^ v22;
  v29 = ((v27 ^ 0xF6F9BCC1) + (v27 ^ v19 ^ 0x55169AC) + 1) ^ ((a1 ^ 0xAA8D57C2) + (a1 ^ 0x592582AF ^ v19) + 1) ^ ((v4 ^ 0xA9549ADD) + ((v13 >> 4) ^ 0x5937D632) + 1);
  v30 = a4 - ((2 * a4 + 402613768) & 0x34EC295C) + 108382130;
  v31 = ((2 * (v7 + 1375763444 + (v30 ^ 0x6589EB51))) & 0xB7FB3DFA)
      + ((v7 + 1375763444 + (v30 ^ 0x6589EB51)) ^ 0x5BFD9EFD);
  v32 = ((a3 - 224041693) ^ 0x9A7614AE ^ v30)
      - ((2 * ((a3 - 224041693) ^ 0x9A7614AE ^ v30) + 1891836984) & 0x46650FF6)
      - 1684792809;
  v33 = v30 ^ v25;
  v34 = ((2 * ((v4 ^ 0xA9549ADD) + v5 + 1047250061)) & 0x6FD9BDBE)
      + (((v4 ^ 0xA9549ADD) + v5 + 1047250061) ^ 0xB7ECDEDF);
  v35 = (v4 ^ 0x56AB6522) + (a1 ^ v4 ^ 0xFC2632E0) + 1;
  v36 = (v33 ^ 0x4784BA94) + a4 + 987814635 + (~(2 * ((v33 ^ 0x4784BA94) + a4) - 841429636) | 0x581717A7);
  v37 = (v4 ^ 0x56AB6522 ^ (v6 - 201617205))
      - 99429882
      + ~(2 * (((v4 ^ 0x56AB6522 ^ (v6 - 201617205)) + 6394396) & 0x1B13FEB ^ (v4 ^ 0x56AB6522 ^ (v6 - 201617205)) & 2));
  v38 = v37 ^ a1 ^ v4;
  LODWORD(STACK[0x6B4]) = v37;
  LODWORD(STACK[0x6D0]) = v32;
  LODWORD(STACK[0x698]) = v32 ^ v33;
  v39 = v35 - ((2 * v35 + 903440242) & 0x38D0F136) + 391457876;
  LODWORD(STACK[0x6B8]) = v36;
  LODWORD(STACK[0x6A0]) = v38;
  LODWORD(STACK[0x6A8]) = v39;
  v40 = v32 ^ 0x233287FB;
  v41 = v23 ^ 0xD64ACDF1;
  v42 = ((v38 ^ 0x7D970D09) + (v38 ^ 0x82706DFF ^ v28) + 1) ^ ((v39 ^ 0x63978764) + (v39 ^ 0x9C70E792 ^ v28) + 1) ^ ((v32 ^ v33 ^ v36 ^ v23 ^ 0xE10884B2) + (v28 ^ v32 ^ v33 ^ v36 ^ v23 ^ 0x1EEFE444) + 1);
  LODWORD(STACK[0x6C8]) = v31;
  v43 = v31 - ((2 * v31 + 1268394848) & 0x441063DC) + 1205159838;
  v44 = ((2 * (v43 ^ v36)) & 0x72FBBDFE ^ 0x62F88984) + (v43 ^ v36 ^ 0x48819B3D);
  LODWORD(STACK[0x690]) = v44;
  LODWORD(STACK[0x6C0]) = v34;
  v45 = v34 - ((2 * v34 + 331066268) & 0x2FCF9808) + 1640341970;
  v46 = ((2 * (v45 ^ v39)) & 0xEF6BDCB2 ^ 0x70B4832) + (v45 ^ v39 ^ 0x7C3A5AC6);
  LODWORD(STACK[0x688]) = v46;
  v47 = ((2 * ((v43 ^ 0xA20831EE) - v44 - 1182933249)) & 0xDFDB3F5E)
      + (((v43 ^ 0xA20831EE) - v44 - 1182933249) ^ 0x6FED9FAF);
  LODWORD(STACK[0x680]) = v47;
  v48 = ((2 * ((v45 ^ 0x17E7CC04) - v46 - 139071911)) & 0xF32FFEFE)
      + (((v45 ^ 0x17E7CC04) - v46 - 139071911) ^ 0xF997FF7F);
  LODWORD(STACK[0x6F4]) = v48;
  v49 = (v37 ^ 0x7E4EC016) - v6 + (v9[260] ^ 0x62B95495) + (v9[151] ^ 0x62B95495) + v29 + v42 - 1896427926;
  v9[192] = v49 - 1589631749 - ((2 * v49 + 2098045132) & 0xC572A92A);
  v50 = v9[254];
  v51 = v49 + v47 - 1877843887 - ((2 * (v49 + v47 - 1877843887)) & 0x318BD2C8) + 415623524;
  LODWORD(STACK[0x678]) = 1059782000;
  v52 = v9[145] ^ 0x62B95495;
  v53 = a3 + (v50 ^ 0x62B95495) + v40 + (v15 ^ 0x906433E) + 954180114 + v41;
  v54 = ((2 * v53) & 0xAD8FEBCA) + (v53 ^ 0x56C7F5E5);
  v9[186] = v52 - 1455945189 + v54 + 1656312981 - ((2 * (v52 - 1455945189 + v54)) & 0xC572A92A);
  v55 = v54 + v52 - v48 - ((2 * (v54 + v52 - v48) + 34901266) & 0x7D0F2FC);
  v56 = v55 + 1827848199;
  v57 = STACK[0x718];
  v58 = 662 * (HIBYTE(v51) & 0xF ^ 8) + 439568;
  v59 = 662 * ((v51 >> 20) & 0xF ^ 0xC) + 439568;
  v60 = 662 * (HIWORD(v51) & 0xF ^ 5) + 439568;
  v61 = 662 * (((unsigned __int16)v51 >> 12) ^ 0xE) + 439568;
  v62 = ((*(unsigned __int8 *)(STACK[0x718] + (v58 - 965 * ((4450744 * (unint64_t)v58) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v51 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v51 >> 28) ^ 1) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v60 - 965 * ((4450744 * (unint64_t)v60) >> 32))) ^ 0x6B;
  v63 = *(unsigned __int8 *)(STACK[0x718] + (v61 - 965 * ((4450744 * (unint64_t)v61) >> 32))) ^ 0x6B;
  v64 = 662 * ((v51 >> 8) & 0xF ^ 9) + 439568;
  v65 = 662 * ((v51 >> 4) ^ 6) + 439568;
  v66 = 662 * ((v55 + LODWORD(STACK[0x5D0])) >> 28) + 439568;
  v67 = (v62 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (v59 - 965 * ((4450744 * (unint64_t)v59) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v64 - 965 * ((4450744 * (unint64_t)v64) >> 32))) ^ 0x6B;
  v68 = ((v67 << 8) ^ (v63 << 12)) - 828374534 - ((v67 << 9) & 0x9D400200);
  v69 = 662 * (HIBYTE(v56) & 0xF ^ 3) + 439568;
  v70 = *(unsigned __int8 *)(STACK[0x718] + (v69 - 965 * ((4450744 * (unint64_t)v69) >> 32))) ^ 0x6B;
  v71 = *(unsigned __int8 *)(STACK[0x718]
                           + (662 * (v51 & 0xF ^ 4)
                                          + 439568
                                          - 965 * ((4450744 * (unint64_t)(662 * (v51 & 0xF ^ 4) + 439568)) >> 32))) ^ 0x6B;
  v72 = v71 - 1466387579 - ((2 * v71) & 0x10A);
  v73 = 662 * ((v56 >> 20) & 0xF ^ 0xE) + 439568;
  v74 = (v68 ^ 0xCEA001FA | v72 ^ 0xA898B385) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x718]
                                                                     + (v65
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v65) >> 32))) ^ 0x6B));
  v75 = (v70 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (v66 - 965 * ((4450744 * (unint64_t)v66) >> 32))) ^ 0x6B) << 12);
  v76 = 662 * (HIWORD(v56) & 0xF ^ 8) + 439568;
  v77 = *(unsigned __int8 *)(STACK[0x718] + (v73 - 965 * ((4450744 * (unint64_t)v73) >> 32))) ^ 0x6B;
  v78 = 662 * (((unsigned __int16)v56 >> 12) ^ 7) + 439568;
  v79 = v75 | *(unsigned __int8 *)(STACK[0x718] + (v76 - 965 * ((4450744 * (unint64_t)v76) >> 32))) ^ 0x6B;
  v80 = *(unsigned __int8 *)(STACK[0x718] + (v78 - 965 * ((4450744 * (unint64_t)v78) >> 32)));
  v81 = v56 & 0xF ^ 0xE;
  v82 = 662 * ((v56 >> 8) & 0xF ^ 9) + 439568;
  v83 = (v79 << 8) ^ (v77 << 12);
  v84 = 662 * ((v56 >> 4) ^ 7) + 439568;
  v85 = *(unsigned __int8 *)(STACK[0x718] + (v82 - 965 * ((4450744 * (unint64_t)v82) >> 32))) ^ 0x6B;
  v86 = ((v83 | v85) << 8) + 213558975 - (((v83 | v85) << 9) & 0x19754C00);
  v87 = v86 ^ ((v80 ^ 0x6B) << 12);
  v88 = *(unsigned __int8 *)(STACK[0x718]
                           + (662 * v81
                                          + 439568
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * v81 + 439568)) >> 32))) ^ 0x6B;
  v89 = v88 + 252980089 - ((2 * v88) & 0xF2);
  v90 = (v87 ^ 0xCBAA6BF | v89 ^ 0xF142B79) ^ (16
                                             * (*(unsigned __int8 *)(STACK[0x718]
                                                                   + (v84
                                                                                  - 965
                                                                                  * ((4450744 * (unint64_t)v84) >> 32))) ^ 0x6B));
  v91 = ((v72 & 0xF ^ 0xFE7BFFF3) - 25668381 + ((2 * (v72 & 0xF)) | 0x30F563C)) ^ 0x3AB17;
  v92 = 662
      * ((((16 * (v89 & 0xF)) ^ 0x90 | v91) + 1492512844 - 2
                                                         * (((16 * (v89 & 0xF)) ^ 0x90 | v91) & 0x58F5F04F ^ v91 & 3)) ^ 0x58F5F04C);
  v93 = 662
      * (*(unsigned __int8 *)(STACK[0x718] + (v92 + 466048) % 0x3C5) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x718] + 493) ^ 0x6B)) ^ 0x6B);
  LOBYTE(v81) = *(_BYTE *)(STACK[0x718] + (v93 + 466048) % 0x3C5);
  v94 = *(unsigned __int8 *)(STACK[0x718] + (v93 - 965 * ((4450744 * (unint64_t)v93) >> 32))) >> 4;
  v95 = 662
      * (((v94 ^ 6) + ((2 * ((v94 ^ 6 | 0x7B) ^ v94)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v92 % 0x3C5))
      + 466048;
  v96 = ((v74 >> 4) ^ 0xD125F9C7) & 0x4E0A9B92 ^ 0xB9D9E21B ^ ((((v74 >> 4) ^ 0xD125F9C7) & 0x4E0A9B9D ^ 0x95BAA674)
                                                             + ((v74 >> 4) & 0xC020008 ^ 0x28414008)
                                                             - ((((v74 >> 4) ^ 0xD125F9C7) & 0x4E0A9B9D ^ 0x95BAA674) & 0xC220468));
  v97 = 662 * (((v90 & 0xF0 | v96) + 1149760092 - 2 * ((v90 & 0x50 | v96 & 0x4487F25F) ^ v96 & 3)) ^ 0x4487F25C);
  v98 = 662
      * (*(unsigned __int8 *)(STACK[0x718] + (v97 + 466048) % 0x3C5) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x718]
                                                                                            + (v95 - 965 * ((4450744 * (unint64_t)v95) >> 32))) ^ 0x6B)) ^ 0x6B);
  v99 = *(unsigned __int8 *)(STACK[0x718]
                           + v98
                           + 466048
                           - 965 * (((8901487 * (unint64_t)(v98 + 466048)) >> 32) >> 1));
  v100 = *(unsigned __int8 *)(STACK[0x718] + (v98 - 965 * ((4450744 * (unint64_t)v98) >> 32))) >> 4;
  v101 = 16 * (v99 ^ 0x6B) - ((32 * (v99 ^ 0x6B)) & 0x5C0);
  v102 = ((v100 ^ 6) + ((2 * ((v100 ^ 6 | 0x7B) ^ v100)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v97 % 0x3C5);
  LOBYTE(v93) = (v81 ^ 0x6B) - ((2 * (v81 ^ 0x6B)) & 3) - 127;
  v103 = (v90 >> 4) & 0xF0 | (v74 >> 8) & 0xF;
  v104 = 662 * ((v103 - 2031554599 - 2 * (v103 & 0xDB ^ (v74 >> 8) & 2)) ^ 0x86E8EFD9);
  v105 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v104 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + ((2 * (v102 & 0x3F)
                                                                                                + (v102 ^ 0xEE9DC73F)
                                                                                                + 291650764)
                                                                                               * (2 * (v102 & 0x3F)
                                                                                                + (v102 ^ 0xEE9DC73F)
                                                                                                + 291650764)
                                                                                               - 109561
                                                                                               + (-291650433
                                                                                                - (2 * (v102 & 0x3F)
                                                                                                 + (v102 ^ 0xEE9DC73F)))
                                                                                               * (2 * (v102 & 0x3F)
                                                                                                + (v102 ^ 0xEE9DC73F)
                                                                                                + 291650433))
                                                                                              % 0x3C5) ^ 0x6B)) ^ 0x6B);
  v106 = *(unsigned __int8 *)(STACK[0x718]
                            + v105
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v105 + 466048)) >> 32) >> 1));
  v107 = (*(unsigned __int8 *)(STACK[0x718] + (v105 - 965 * ((4450744 * (unint64_t)v105) >> 32))) ^ 0x6Bu) >> ((v81 & 4 ^ 4) + (v81 & 4));
  v108 = (v107 - ((2 * v107) & 0xD6) + 107) ^ *(unsigned __int8 *)(STACK[0x718] + v104 % 0x3C5);
  v109 = ((v87 >> 8) & 0xF0 | ((unsigned __int16)v68 >> 12)) ^ 0xA0;
  v110 = 662 * ((v109 - 1328152070 - 2 * (v109 & 0xFFFFFFFB ^ (v68 >> 12) & 1)) ^ 0xB0D601FA);
  v111 = *(unsigned __int8 *)(STACK[0x718] + (v110 + 466048) % 0x3C5) ^ (16
                                                                       * (*(unsigned __int8 *)(STACK[0x718]
                                                                                             + (662 * v108 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v108 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B;
  v112 = 662 * v111
       + 466048
       - 965 * (((8901487 * (unint64_t)(662 * v111 + 466048)) >> 32) >> 1);
  v113 = v112 + 698583120 - ((2 * v112) & 0xA0);
  v114 = (v113 & 0x296 ^ 0x286 | v113 & 0x296 ^ 0x10) * v111;
  v115 = *(unsigned __int8 *)(STACK[0x718] + (v114 - 965 * ((4450744 * (unint64_t)v114) >> 32))) >> 4;
  v116 = ((v115 ^ 6) + ((2 * ((v115 ^ 6 | 0x7B) ^ v115)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v110 % 0x3C5);
  v117 = ((*(unsigned __int8 *)(STACK[0x718] + (v113 ^ 0x29A38850u)) ^ 0x6B) << 12) ^ ((v106 ^ 0x6B) << 8);
  v118 = 662
       * (((((v87 >> 12) & 0xF0 | HIWORD(v68) & 0xF) ^ 0xA0)
         - 575152873
         - 2 * (((v87 >> 12) & 0x10 | HIWORD(v68) & 0xF) ^ HIWORD(v68) & 8)) ^ 0xDDB7DD17);
  v119 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v118 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + ((((2 * v116) & 0x5A)
                                                                                                + (v116 ^ 0x3253CF2D)
                                                                                                - 844352290)
                                                                                               * (((2 * v116) & 0x5A)
                                                                                                + (v116 ^ 0x3253CF2D)
                                                                                                - 844352290)
                                                                                               - 109561
                                                                                               + (844352621
                                                                                                - (((2 * v116) & 0x5A)
                                                                                                 + (v116 ^ 0x3253CF2D)))
                                                                                               * (((2 * v116) & 0x5A)
                                                                                                + (v116 ^ 0x3253CF2Du)
                                                                                                - 844352621))
                                                                                              % 0x3C5) ^ 0x6B)) ^ 0x6B);
  v120 = *(unsigned __int8 *)(STACK[0x718]
                            + v119
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v119 + 466048)) >> 32) >> 1));
  v121 = *(unsigned __int8 *)(STACK[0x718] + (v119 - 965 * ((4450744 * (unint64_t)v119) >> 32))) >> 4;
  v122 = ((v121 ^ 6) + ((2 * ((v121 ^ 6 | 0x7B) ^ v121)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v118 % 0x3C5);
  v123 = v120 ^ 0x6B;
  v124 = (HIWORD(v86) & 0xF0 | (v68 >> 20) & 0xF) ^ 0xBA;
  v125 = 662 * ((v124 - 1944938093 - ((2 * v124) & 0x126)) ^ 0x8C129993);
  v126 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v125 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (662 * v122 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v122 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v127 = *(unsigned __int8 *)(STACK[0x718] + (v126 - 965 * ((4450744 * (unint64_t)v126) >> 32)));
  v128 = 662
       * ((((v127 >> 4) ^ 6) - ((2 * ((v127 >> 4) ^ 6)) & 0xF7) + 107) ^ *(unsigned __int8 *)(STACK[0x718] + v125 % 0x3C5))
       + 466048;
  v129 = ((*(unsigned __int8 *)(STACK[0x718]
                              + v126
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v126 + 466048)) >> 32) >> 1)) ^ 0x6B) << 20) ^ (v123 << 16);
  v130 = ((v86 >> 20) & 0xF0 | HIBYTE(v68) & 0xF) ^ 0xCE;
  v131 = *(unsigned __int8 *)(STACK[0x718] + (v128 - 965 * ((4450744 * (unint64_t)v128) >> 32))) ^ 0x6B;
  v132 = (v130 - 1527614350 - ((2 * v130) & 0xE4)) ^ 0xA4F27472;
  v133 = 662 * v132;
  v134 = ((662 * v132) ^ 0x37BEAC8B) + ((1324 * v132) & 0x6F7D5914);
  v135 = 662
       * (*(unsigned __int8 *)(STACK[0x718]
                             + (v134 - 934776843)
                             % (-1032533004 - ((v134 + 28661) & 0x4C82E | (934776842 - v134) & 0xC274C82F))) ^ (16 * v131) ^ 0x6B);
  v136 = v135 + 466048 - 965 * (((8901487 * (unint64_t)(v135 + 466048)) >> 32) >> 1);
  v137 = *(unsigned __int8 *)(STACK[0x718] + (v135 - 965 * ((4450744 * (unint64_t)v135) >> 32))) >> 4;
  v138 = ((2 * ((16 * (v93 & 0xF)) ^ 0x10 | v91)) & 0x79EFF37E) + (((16 * (v93 & 0xF)) ^ 0x10 | v91) ^ 0x7CF7F9BF);
  v139 = 662
       * (((v137 ^ 6) + ((2 * ((v137 ^ 6 | 0x7B) ^ v137)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v133 % 0x3C5))
       + 466048;
  v140 = 662 * ((HIBYTE(v86) & 0xF0 | (v68 >> 28)) ^ 0xC) + 466048;
  v141 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v140 - 965 * ((4450744 * (unint64_t)v140) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (v139 - 965 * ((4450744 * (unint64_t)v139) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v142 = v117 ^ (v101 - 1384631570);
  v143 = v142 ^ 0x5E75981 ^ v129;
  v144 = v143 ^ ((*(unsigned __int8 *)(STACK[0x718] + v136) ^ 0x6B) << 24);
  v145 = *(unsigned __int8 *)(STACK[0x718]
                            + ((v138 - 2096625450) * (v138 - 2096625450)
                             - 109561
                             + (2096625781 - v138) * (v138 - 2096625781))
                            % 0x3C5u);
  v146 = v144 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + v141
                                     - 965 * (((8901487 * (unint64_t)v141) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28);
  v147 = ((v142 >> 4) & 0xF0 | (v74 >> 8) & 0xF) ^ 0x20;
  v148 = v145 ^ (16
               * (*(unsigned __int8 *)(STACK[0x718]
                                     + (662
                                      * (((v101 - 18) ^ v93) & 0xF0 ^ 0x60 | v96)
                                      + 218460)
                                     % 0x3C5) ^ 0x6B));
  v149 = v148 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (662 * v147
                                                    + 218460
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * v147 + 218460)) >> 32))) ^ 0x6B) << 8);
  v150 = ((v143 >> 12) & 0xF0 | HIWORD(v68) & 0xF) ^ 0xF0;
  v151 = 662 * ((v117 >> 8) & 0xF0 | ((unsigned __int16)v68 >> 12)) + 218460;
  v152 = v149 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v151 - 965 * ((4450744 * (unint64_t)v151) >> 32))) ^ 0x6B) << 12);
  v153 = v152 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (662 * v150
                                                    + 218460
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * v150 + 218460)) >> 32))) ^ 0x6B) << 16);
  v154 = 662 * ((HIWORD(v129) & 0xF0 | (v68 >> 20) & 0xF) ^ 0xA) + 218460;
  v155 = ((v144 >> 20) & 0xF0 | HIBYTE(v68) & 0xF) ^ 0x8E;
  v156 = v153 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v154 - 965 * ((4450744 * (unint64_t)v154) >> 32))) ^ 0x6B) << 20);
  v157 = ((2 * (HIBYTE(v146) & 0xF0 | (v68 >> 28))) & 0xBA ^ 0x18) + ((HIBYTE(v146) & 0xF0 | (v68 >> 28)) ^ 0xF9C479F1);
  v158 = ((*(unsigned __int8 *)(STACK[0x718]
                              + ((v157 + 104565048) * (v157 + 104565048)
                               - 109561
                               + (-104564717 - v157) * (v157 + 104564717))
                              % 0x3C5) ^ 0xFFFFFFFB) << 28) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                                                                   + (662 * v155
                                                                                                  + 218460
                                                                                                  - 965 * ((4450744 * (unint64_t)(662 * v155 + 218460)) >> 32))) ^ 0x6B) << 24);
  v159 = (((v158 + 1458910361 - ((2 * v158) & 0xAC000000) + 1415) ^ v156) >> 24) ^ 0x56;
  v160 = v159 - ((2 * v159) & 0x1AC);
  v161 = 662 * ((v149 >> 8) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v149 >> 8) & 0xF) + 454132)) >> 32);
  v162 = STACK[0x678];
  v163 = (LODWORD(STACK[0x690]) - ((2 * LODWORD(STACK[0x690]) + 260560224) & 0x318BD2C8) + 9032724) ^ 0x483219F1 ^ v51;
  v164 = *(unsigned __int8 *)(STACK[0x718] + ((v161 + 423215491 - ((2 * v161) & 0x306)) ^ 0x1939C183u));
  v165 = STACK[0x700];
  *(_DWORD *)(STACK[0x700] + 4 * (unsigned __int16)(v162 - 17872 - 283 * ((((_WORD)v162 - 17872) & 0xFFF0u) / 0x11B))) = v163;
  v166 = 662 * ((v160 + 1216528854) & 0xF ^ 6) + 454132;
  v167 = ((v148 >> 4) ^ 6) - 1872307753 - 2 * (((v148 >> 4) ^ 6) & 7);
  v168 = ((((((*(unsigned __int8 *)(v57 + (v166 - 965 * ((4450744 * (unint64_t)v166) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v57 + (662 * (((v160 + 1216528854) >> 4) ^ 0x4882C1D) + 454132) % 0x3C5) ^ 0x6B) << 12) | *(unsigned __int8 *)(v57 + (662 * (HIWORD(v153) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v153) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v57 + (662 * ((v156 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v156 >> 20) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 12) | v164 ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v57 + (662 * ((unsigned __int16)v152 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v152 >> 12) + 454132)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v57 + (662 * (v145 & 0xF ^ 0xB) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v145 & 0xF ^ 0xBu) + 454132)) >> 32))) ^ 0x6B;
  *(_DWORD *)(v165 + 4 * (unsigned __int16)(v162 + 3984 - 283 * ((((_WORD)v162 + 3984) & 0xFFF0u) / 0x11B))) = (LODWORD(STACK[0x688]) - ((2 * LODWORD(STACK[0x688]) + 1394063020) & 0xB8E0F9AC) + 100423724) ^ (16 * (*(unsigned __int8 *)(v57 + 662 * (((2 * v167) & 0x15C ^ 0x10C) + (v167 ^ 0x9066DB79)) % 0x3C5) ^ 0x6B)) ^ 0x3EC92843 ^ v168;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8]
                                        + 8 * ((53 * (LODWORD(STACK[0x6DC]) == 47)) ^ (LODWORD(STACK[0x6E0]) + 510)))
                            - 12))();
}

void sub_18C9DF22C()
{
  JUMPOUT(0x18C9DD8B4);
}

uint64_t sub_18C9DF250@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unint64_t v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unint64_t v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unint64_t v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  char v353;
  int v354;
  BOOL v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  int v454;
  int v455;
  int v456;
  unsigned int v457;
  unint64_t v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  int v475;
  unsigned int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  int v520;
  unsigned int v521;
  int v522;
  unsigned int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  uint64_t v542;
  unsigned int v543;
  unsigned int v544;
  unint64_t v545;
  uint64_t v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  int v558;
  int v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  int v567;
  int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  unsigned int v575;
  int v576;
  int v577;
  int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  int v629;
  int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  unsigned int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  unsigned int v658;
  unsigned int v659;
  unsigned int v660;
  int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  unsigned int v670;
  unsigned int v671;
  unsigned int v672;
  int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  unsigned int v686;
  int v687;
  unsigned int v688;
  int v689;
  unsigned int v690;
  unsigned int v691;
  int v692;
  int v693;
  unsigned int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  int v703;
  unsigned int v704;
  int v705;
  int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  unsigned int v732;
  int v733;
  int v734;
  int v735;
  unsigned int v736;
  int v737;
  int v738;
  int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  int v743;
  int v744;
  int v745;
  unsigned int v746;
  unsigned int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  int v754;
  unint64_t v755;
  int v756;
  int v757;
  unsigned int v758;
  int v759;
  int v760;
  int v761;
  int v762;
  int v763;
  int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  int v772;
  int v773;
  int v774;
  unsigned int v775;
  int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  unsigned int v783;
  int v784;
  int v785;
  int v786;
  unsigned int v787;
  unsigned int v788;
  unsigned int v789;
  int v790;
  unsigned int v791;
  int v792;
  int v793;
  unint64_t v794;
  int v795;
  int v796;
  int v797;
  int v798;
  int v799;
  unsigned int v800;
  int v801;
  int v802;
  int v803;
  int v804;
  int v805;
  int v806;
  int v807;
  unsigned int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  unsigned int v816;
  unsigned int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  int v825;
  unsigned int v826;
  int v827;
  unsigned int v828;
  unsigned int v829;
  int v830;
  int v831;
  int v832;
  unsigned int v833;
  int v834;
  unsigned int v835;
  int v836;
  int v837;
  int v838;
  unsigned int v839;
  int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  unint64_t v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  unsigned int v862;
  int v863;
  unsigned int v864;
  unsigned int v865;
  int v866;
  unsigned int v867;
  int v868;
  unsigned int v869;
  unsigned int v870;
  int v871;
  unsigned int v872;
  unsigned int v873;
  int v874;
  int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  int v880;
  unsigned int v881;
  int v882;
  unsigned int v883;
  int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  unsigned int v888;
  unsigned int v889;
  unsigned int v890;
  unsigned int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  int v899;
  unsigned int v900;
  unsigned int v901;
  unsigned int v902;
  int v903;
  unsigned int v904;
  int v905;
  unsigned int v906;
  unsigned int v907;
  unsigned int v908;
  unsigned int v909;
  int v910;
  unsigned int v911;
  unsigned int v912;
  unsigned int v913;
  unsigned int v914;
  unsigned int v915;
  unsigned int v916;
  int v917;
  unsigned int v918;
  unsigned int v919;
  unsigned int v920;
  unsigned int v921;
  unsigned int v922;
  int v923;
  unsigned int v924;
  unsigned int v925;
  unsigned int v926;
  unsigned int v927;
  unsigned int v928;
  int v929;
  unsigned int v930;
  unsigned int v931;
  unsigned int v932;
  unsigned int v933;
  unsigned int v934;
  unsigned int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  unsigned int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  unsigned int v943;
  unsigned int v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  int v949;
  int v950;
  int v951;
  unsigned int v952;
  unsigned int v953;
  unsigned int v954;
  unsigned int v955;
  int v956;
  int v957;
  unsigned int v958;
  int v959;
  int v960;
  int v961;
  int v962;
  int v963;
  int v964;
  int v965;
  int v966;
  int v967;
  int v968;
  int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  unsigned int v973;
  unsigned int v974;
  unsigned int v975;
  unsigned int v976;
  unsigned int v977;
  int v978;
  int v979;
  unsigned int v980;
  unsigned int v981;
  int v982;
  unsigned int v983;
  unsigned int v984;
  unsigned int v985;
  int v986;
  int v987;
  unsigned int v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  unsigned int v1005;
  unsigned int v1006;
  unsigned int v1007;
  int v1008;
  unsigned int v1009;
  unsigned int v1010;
  unsigned int v1011;
  unsigned int v1012;
  unsigned int v1013;
  int v1014;
  unsigned int v1015;
  int v1016;
  int v1017;
  unsigned int v1018;
  unsigned int v1019;
  unsigned int v1020;
  unsigned int v1021;
  unsigned int v1022;
  int v1023;
  unsigned int v1024;
  int v1025;
  int v1026;
  unsigned int v1027;

  v18 = v12;
  v19 = STACK[0x718];
  v20 = *(unsigned __int8 *)(STACK[0x718] + 493) ^ 0x6B;
  v21 = 16 * v20;
  LODWORD(STACK[0x688]) = 16 * v20;
  v20 *= 32;
  LODWORD(STACK[0x698]) = v20;
  v22 = v21 + 462530202 - (v20 & 0xD20);
  LODWORD(STACK[0x6E0]) = v22;
  v23 = a3 - ((2 * a3 - 671128056) & 0x9A55C712) - 1188391283;
  LODWORD(STACK[0x6C0]) = v23;
  LODWORD(STACK[0x638]) = a1;
  v24 = ((2 * (v23 ^ (v13 + 781439417))) & 0xD7BEF7DE ^ 0x9214C712) + (v23 ^ (v13 + 781439417) ^ 0x26F59866);
  v25 = ((2 * (v14 ^ (v18 - 1528204823))) & 0xEB39FDAC ^ 0xA910C804) + (v14 ^ (v18 - 1528204823) ^ 0xA3379BF4);
  LODWORD(STACK[0x6DC]) = v25;
  v26 = ((v11 + 1181752524) ^ 0x15403E3B)
      - v24
      - 1496245298
      - ((2 * (((v11 + 1181752524) ^ 0x15403E3B) - v24 + 1809808367)) & 0x75E33FBE);
  LODWORD(STACK[0x6D0]) = v26;
  v27 = ((v26 & 0x15403E3B ^ 0x5002020 | v26 & 0x15403E3B ^ 0x10401E1B) ^ (v10 + 135274246)) - v25;
  LODWORD(STACK[0x6C8]) = v27;
  v28 = v22 ^ 0x1B91A6F1;
  v29 = v26 ^ 0x3AF19FDF;
  v30 = LODWORD(STACK[0x514])
      - 1802305297
      + (v26 ^ 0x3AF19FDF)
      - 1052829788
      + (~(2 * (LODWORD(STACK[0x514]) - 1802305297 + (v26 ^ 0x3AF19FDF))) | 0x7D81D0B9);
  v31 = LODWORD(STACK[0x508]) - v27;
  v32 = (2 * v31 + 919147422) & 0x3E076790;
  v31 += 1516780951;
  v33 = v31 - v32;
  v34 = 662 * (((v30 >> 23) & 0x10) + (HIBYTE(v30) & 0xF ^ 0x299));
  v35 = 662 * ((v30 >> 20) & 0xF ^ 3) + 439568;
  v36 = ((*(unsigned __int8 *)(v19 + (v34 - 965 * ((4450744 * (unint64_t)v34) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v30 >> 28) ^ 0xC) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v30 >> 28) ^ 0xC) + 439568)) >> 32))) ^ 0x6B) << 12);
  v37 = 662 * (~HIWORD(v30) & 0xF) + 439568;
  v38 = v36 | *(unsigned __int8 *)(v19 + (v37 - 965 * ((4450744 * (unint64_t)v37) >> 32))) ^ 0x6B;
  v39 = *(unsigned __int8 *)(v19 + (v35 - 965 * ((4450744 * (unint64_t)v35) >> 32))) ^ 0x6B;
  LODWORD(STACK[0x6A0]) = v30;
  v40 = 662 * (((unsigned __int16)v30 >> 12) ^ 1) + 439568;
  v41 = 662 * ((v30 >> 8) & 0xF ^ 7) + 439568;
  v42 = 662 * ((v30 >> 4) ^ 0xA) + 439568;
  v43 = *(unsigned __int8 *)(v19 + (v41 - 965 * ((4450744 * (unint64_t)v41) >> 32))) ^ 0x6B ^ (v38 << 8) ^ (v39 << 12) ^ (16 * (*(unsigned __int8 *)(v19 + (v40 - 965 * ((4450744 * (unint64_t)v40) >> 32))) ^ 0x6B));
  v44 = (v43 << 8) - 55468546 - ((v43 << 9) & 0xF9633A00);
  v45 = 662 * (~HIBYTE(v33) & 0xF) + 439568;
  v46 = *(unsigned __int8 *)(v19
                           + (662 * (v30 & 0xF ^ 3)
                                          + 439568
                                          - 965 * ((4450744 * (unint64_t)(662 * (v30 & 0xF ^ 3) + 439568)) >> 32))) ^ 0x6B;
  v47 = (v44 ^ 0xFCB19DFE | v46) ^ (16
                                  * (*(unsigned __int8 *)(v19
                                                        + (v42
                                                                       - 965 * ((4450744 * (unint64_t)v42) >> 32))) ^ 0x6B));
  v48 = 662 * (HIWORD(v33) & 0xF ^ 3) + 439568;
  v49 = 662 * (((unsigned __int16)v33 >> 12) ^ 0xB) + 439568;
  v50 = 662 * ((v33 >> 8) & 0xF ^ 3) + 439568;
  v51 = ((((*(unsigned __int8 *)(v19 + (v45 - 965 * ((4450744 * (unint64_t)v45) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v33 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v33 >> 28) ^ 1) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v48 - 965 * ((4450744 * (unint64_t)v48) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v33 >> 20) & 0xF) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v33 >> 20) & 0xF) + 439568)) >> 32))) ^ 0x6B) << 12);
  v52 = *(unsigned __int8 *)(v19 + (v49 - 965 * ((4450744 * (unint64_t)v49) >> 32))) ^ 0x6B;
  v53 = 662 * ((v33 >> 4) ^ 0xC) + 439568;
  v54 = *(unsigned __int8 *)(v19 + (v53 - 965 * ((4450744 * (unint64_t)v53) >> 32)));
  v55 = ((v51 | *(unsigned __int8 *)(v19 + (v50 - 965 * ((4450744 * (unint64_t)v50) >> 32))) ^ 0x6B) << 8) ^ (v52 << 12);
  v56 = *(unsigned __int8 *)(v19
                           + (662 * (v31 & 0xF ^ 8)
                                          + 439568
                                          - 965 * ((4450744 * (unint64_t)(662 * (v31 & 0xF ^ 8) + 439568)) >> 32))) ^ 0x6B;
  v57 = v56 - 1485799675 - ((2 * v56) & 0xA);
  v58 = v57 ^ 0xA7707F05 | v55;
  v59 = (((2 * (v46 & 0xF ^ 0xD)) | 0x2506614) - (v46 & 0xF ^ 0xD) - 19411722) ^ 0x4090207;
  v60 = v59 - ((2 * v59) & 0x4D33E848) + 1721365540;
  LODWORD(STACK[0x690]) = v60 ^ 0x63B8C524;
  v61 = (16 * (v57 & 0xF)) ^ 0x50 | v60 ^ 0x63B8C524;
  v62 = 662 * ((v61 - 826081358 - 2 * (v61 & 0x4EC2FFBB ^ v60 & 9)) ^ 0xCEC2FFB2);
  v63 = v62 + 466048 - 965 * ((((v62 + 466048) * (unint64_t)v15) >> 32) >> 4);
  v64 = *(unsigned __int8 *)(v19 + v62 - 965 * (((v62 * (unint64_t)v15) >> 32) >> 4));
  v65 = v58 ^ (16 * (v54 ^ 0x6B));
  v66 = ((v47 >> 4) ^ 0x6F238A46) & 0xD1E15E9 ^ 0xD764B21F ^ (((2 * ((v47 >> 4) ^ 0x6F238A46)) & 0xA300B4C)
                                                            - (((v47 >> 4) ^ 0x6F238A46) & 0xD1E15E6)
                                                            - 630803879);
  v67 = 662 * (*(unsigned __int8 *)(v19 + v63) ^ v28);
  LODWORD(STACK[0x670]) = v67;
  v68 = (*(unsigned __int8 *)(v19 + v67 - 965 * (((v67 * (unint64_t)v15) >> 32) >> 4)) >> 4) ^ 6;
  v69 = 662 * ((v68 - ((2 * v68) & 0xF7) + 107) ^ v64) + 466048;
  v70 = (v66 - ((2 * v66) & 0x6B3C0A1C) + 899630350) ^ 0x389D454E;
  LODWORD(STACK[0x680]) = v70;
  v71 = 662 * (((v70 | v65 & 0xF0) + 467532203 - ((2 * (v70 | v65 & 0xF0)) & 0x37BBF356)) ^ 0x1BDDF9AB);
  v72 = *(unsigned __int8 *)(v19
                           + v71
                           + 466048
                           - 965 * ((((v71 + 466048) * (unint64_t)v15) >> 32) >> 4));
  v73 = *(unsigned __int8 *)(v19 + (v69 - 965 * ((4450744 * (unint64_t)v69) >> 32))) ^ 0x6B;
  v74 = *(unsigned __int8 *)(v19 + v71 - 965 * (((v71 * (unint64_t)v15) >> 32) >> 4));
  LODWORD(STACK[0x678]) = v47;
  v75 = 662 * (v72 ^ (16 * v73) ^ 0x6B);
  LODWORD(STACK[0x660]) = v75;
  v76 = *(unsigned __int8 *)(v19 + (v75 - 965 * ((4450744 * (unint64_t)v75) >> 32))) >> 4;
  v77 = 662 * (((v76 ^ 6) + ((2 * ((v76 ^ 6 | 0x7B) ^ v76)) ^ 5) + 108) ^ v74) + 466048;
  v78 = (v65 >> 4) & 0xF0 | (v47 >> 8) & 0xF;
  v79 = 662 * ((v78 + 1432540825 - 2 * (v78 & 0x9B ^ (v47 >> 8) & 2)) ^ 0x5562D699);
  v80 = *(unsigned __int8 *)(v19
                           + v79
                           + 466048
                           - 965 * ((((v79 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v77 - 965 * ((4450744 * (unint64_t)v77) >> 32))) ^ 0x6B));
  LODWORD(STACK[0x658]) = v80 ^ 0x6B;
  v81 = (((v80 ^ 0x6B) + 331) ^ 0xFCF7B879) + 50874247 + ((2 * ((v80 ^ 0x6B) + 331)) & 0x30F2);
  v82 = (v80 ^ 0x6B) + (v80 ^ 0x6B) * (v80 ^ 0xFFFFFF94) - 109561 + v81 * v81;
  v83 = (*(unsigned __int8 *)(v19 + v82 - 965 * (((v82 * (unint64_t)v15) >> 32) >> 4)) >> 4) ^ 6;
  v84 = (v83 + (~(2 * v83) | 0xE9) + 108) ^ *(unsigned __int8 *)(v19
                                                                                + v79
                                                                                - 965
                                                                                * (((v79
                                                                                                 * (unint64_t)v15) >> 32) >> 4));
  v85 = v44;
  v86 = (v55 >> 8) & 0xF0 | ((unsigned __int16)v44 >> 12);
  v87 = *(unsigned __int8 *)(v19
                           + (662 * v84
                                          + 466048
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * v84 + 466048)) >> 32)));
  v88 = 662 * (((v86 ^ 9) + 887696484 - ((2 * v86) & 0xC8)) ^ 0x34E92C64);
  v89 = *(unsigned __int8 *)(v19
                           + v88
                           + 466048
                           - 965 * ((((v88 + 466048) * (unint64_t)v15) >> 32) >> 4));
  LODWORD(STACK[0x618]) = 465083;
  v90 = 662 * (v89 ^ (16 * (v87 ^ 0x6B)) ^ 0x6B);
  LODWORD(STACK[0x654]) = v90;
  v91 = *(unsigned __int8 *)(v19 + v88 - 965 * (((v88 * (unint64_t)v15) >> 32) >> 4));
  v92 = *(unsigned __int8 *)(v19 + (v90 - 965 * ((4450744 * (unint64_t)v90) >> 32))) >> 4;
  v93 = 662 * (((v92 ^ 6) + ((2 * ((v92 ^ 6 | 0x7B) ^ v92)) ^ 5) + 108) ^ v91) + 465083;
  LODWORD(STACK[0x650]) = v44;
  v94 = (HIWORD(v85) & 0xF ^ 0x1008101) - ((2 * (HIWORD(v85) & 0xF ^ 0x1008101)) & 0x2000014) + 2005031594;
  v95 = 662
      * ((((v55 >> 12) & 0xF0 | v94 ^ 0x7682DBAA)
        - 938836025
        - ((2 * ((v55 >> 12) & 0xF0 | v94 ^ 0x7682DBAA)) & 0x1014FF8E)) ^ 0xC80A7FC7);
  v96 = 662
      * (*(unsigned __int8 *)(v19
                            + v95
                            + 466048
                            - 965 * ((((v95 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + v93 - 965 * (((v93 * (unint64_t)v15) >> 32) >> 4)) ^ 0x6B)) ^ 0x6B);
  LODWORD(STACK[0x648]) = v96;
  v97 = *(unsigned __int8 *)(v19 + (v96 - 965 * ((4450744 * (unint64_t)v96) >> 32))) >> 4;
  v98 = 662
      * (((v97 ^ 6) + ((2 * ((v97 ^ 6 | 0x7B) ^ v97)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v95 - 965 * (((v95 * (unint64_t)v15) >> 32) >> 4)))
      + 466048;
  v99 = (unint64_t)HIWORD(v55) >> ((104
                                         * ((((BYTE2(v85) & 0xF ^ 1) - ((2 * (BYTE2(v85) & 0xF ^ 1)) & 0x14) - 86) ^ 0xAA)
                                          + (((BYTE2(v85) & 0xF ^ 1) - ((2 * (BYTE2(v85) & 0xF ^ 1)) & 0x14) - 86) ^ 0xC5))
                                         - 20) & 0xFC);
  LODWORD(STACK[0x644]) = v99 - ((2 * v99) & 0x12B8) - 1488647844;
  v100 = (v44 >> 20) & 0xF | (16 * (((_BYTE)v99 - ((2 * (_BYTE)v99) & 0xB8) + 92) & 0xF));
  v101 = *(unsigned __int8 *)(v19 + (v98 - 965 * ((4450744 * (unint64_t)v98) >> 32)));
  v102 = ((v100 ^ 0xCB)
        + 1480201960
        - 2
        * ((v100 ^ 0xCB) & 0xFC ^ ((v44 >> 20) & 4 | (16 * (((_BYTE)v99 - ((2 * (_BYTE)v99) & 0xB8) + 92) & 0xF)) & 0x14))) ^ 0x583A16E8;
  LODWORD(STACK[0x634]) = v102;
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + 662 * v102
                                    + 466048
                                    - 965
                                    * ((((662 * v102 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (v101 ^ 0x6B)) ^ 0x6B;
  LODWORD(STACK[0x630]) = 662 * v99;
  LODWORD(v99) = 662 * v99 + 507973310 - ((1324 * v99) & 0xE1D7C);
  LODWORD(STACK[0x62C]) = (v99 ^ 0x1E470EBE) % ((v99 & 0x3C4 ^ 0x141) + (v99 & 0x3C4 ^ 0x284));
  v103 = LODWORD(STACK[0x510]) + v24 + v16;
  LODWORD(STACK[0x5E0]) = v103;
  v104 = STACK[0x6DC];
  v1025 = LODWORD(STACK[0x6DC]) + v17 + 806309561 - ((2 * (LODWORD(STACK[0x6DC]) + v17) + 1864893472) & 0x70F6A896);
  v105 = ((v1025 + 1954) ^ 0xC784ABB4)
       + LODWORD(STACK[0x534])
       - ((2 * (((v1025 + 1954) ^ 0xC784ABB4) + LODWORD(STACK[0x534])) + 31902204) & 0xF1661B28);
  v106 = v103 + 296061247 - ((2 * (v103 + 296061247) + 713428636) & 0x83456BB8) + 1457896746;
  LODWORD(STACK[0x6DC]) = v106;
  v107 = 662 * (v106 & 0xF ^ 0xC)
       + 439568
       - 965 * ((4450744 * (unint64_t)(662 * (v106 & 0xF ^ 0xC) + 439568)) >> 32);
  v1016 = v107 - 1752684546 - ((2 * v107) & 0x7FC);
  v108 = *(unsigned __int8 *)(v19 + (v1016 ^ 0x978827FE)) ^ 0x6B;
  LODWORD(STACK[0x640]) = v14;
  v1014 = v108 - 927477845 - ((2 * v108) & 0x156);
  v1012 = v105 - 106532206;
  v109 = 662 * ((v105 - 106532206) & 0xF ^ 4) + 439568;
  v110 = *(unsigned __int8 *)(v19 + (v109 - 965 * ((4450744 * (unint64_t)v109) >> 32))) ^ 0x6B;
  v1023 = v110 - 1412610830 - ((2 * v110) & 0x1E4);
  LODWORD(v99) = (((2 * (v1014 & 0xF ^ 2)) | 0x1CD62D0) - (v1014 & 0xF ^ 2) + 1595494040) & 0x3FFFFFFF ^ 0x20E6B161;
  v1021 = 662
        * ((((16 * (v1023 & 0xF)) ^ 0x20 | v99)
          + 186764654
          - 2 * (((16 * (v1023 & 0xF)) ^ 0x20 | v99) & 0xB21CD6F ^ v99 & 1)) ^ 0xB21CD6E);
  v111 = (LODWORD(STACK[0x638]) ^ 0x5572A83D) - LODWORD(STACK[0x6F4]);
  v1019 = 662
        * (*(unsigned __int8 *)(v19
                              + v1021
                              + 466048
                              - 965 * ((((v1021 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ v28);
  v112 = v104 - ((2 * v104 + 1789624084) & 0x443B14E0) + 1467173370;
  v113 = *(unsigned __int8 *)(v19
                            + v1019
                            + 466048
                            - 965 * ((((v1019 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ 0x6B;
  LODWORD(STACK[0x5E8]) = v113 + 1049507285 - ((2 * v113) & 0xFA) + 3496;
  LODWORD(v99) = 662 * ((16 * (((_BYTE)v113 - 43 - ((2 * (_BYTE)v113) & 0xFA) - 88) & 0xF)) ^ 0xD0 | v99) + 218460;
  v114 = *(unsigned __int8 *)(v19
                            + v99
                            - 965 * (((v99 * (unint64_t)v15) >> 32) >> 4));
  LODWORD(STACK[0x6F4]) = v114;
  LODWORD(v99) = 662 * (v114 & 0xF ^ 0xB)
               + 454132
               - 965 * ((4450744 * (unint64_t)(662 * (v114 & 0xF ^ 0xBu) + 454132)) >> 32);
  v115 = v99 + 220843771 - ((2 * v99) & 0x5F6);
  LODWORD(STACK[0x668]) = v115;
  LODWORD(v99) = v24 + a2 - v16 - ((2 * (v24 + a2 - v16) - 2009901974) & 0xB82346FA);
  v116 = v24 - ((2 * v24 + 2116453602) & 0xB82346FA) + 455402990;
  LODWORD(STACK[0x60C]) = v116;
  v117 = ((2 * v116) & 0x7EDBEF9A ^ 0xC03A21A) + (v116 ^ 0x396E26E0);
  LODWORD(STACK[0x628]) = v112;
  v118 = ((2 * v112) & 0xD3FBB7FE ^ 0xD01BB040) + (v112 ^ 0x11F223DF);
  v119 = STACK[0x6C8];
  v120 = v118
       + (v112 ^ 0xE59921C4 ^ (v1025 + 1954))
       + LODWORD(STACK[0x6C8])
       - ((2 * (v118 + (v112 ^ 0xE59921C4 ^ (v1025 + 1954)) + LODWORD(STACK[0x6C8])) + 121521584) & 0x5695C54);
  v121 = v118
       + 369236553
       - ((-1449400587 - v117) & 0xF1D0196F)
       - ((v117 + 1449400586) & 0xF1D0196F)
       - 1108181695
       - ((2 * (v118 + 369236553 - ((-1449400587 - v117) & 0xF1D0196F) - ((v117 + 1449400586) & 0xF1D0196F) + 2488)) & 0x7BE4E712);
  LODWORD(STACK[0x624]) = v121;
  v122 = ((v111
         + 1528204823
         + (v112 ^ 0x221D8A70)
         + 572361328
         - ((2 * (v111 + 1528204823 + (v112 ^ 0x221D8A70))) & 0x443B14E0)) ^ v112)
       - v118
       - 369239041
       + (v121 ^ 0xBDF27389);
  LODWORD(v99) = ((v99 - 1607774798) ^ v116) - ((2 * ((v99 - 1607774798) ^ v116) + 476040482) & 0x645291F2);
  LODWORD(STACK[0x638]) = v117;
  v123 = v117 - ((2 * v117 + 495181192) & 0x747E7580) + 151071108;
  LODWORD(STACK[0x614]) = v123;
  LODWORD(v99) = v99 - 1067896950;
  v124 = v99 ^ LODWORD(STACK[0x6D0]);
  v125 = (v29
        - ((v24 + v16 - 1796850594) ^ (v24 - 1089256847))
        + v117
        + 1449400586
        + (v115 & 0x329 ^ 0x229)
        + (v115 & 0x329 ^ 0xEA2DED00)) ^ v123;
  LODWORD(STACK[0x610]) = v125;
  v126 = ((2 * ((v99 ^ 0xB22948F9) + (v125 ^ 0x45C0C53F) + 1)) & 0xF5DDBBF2)
       + (((v99 ^ 0xB22948F9) + (v125 ^ 0x45C0C53F) + 1) ^ 0xFAEEDDF9);
  v127 = v120 - 1907109630;
  LODWORD(STACK[0x6D0]) = v120 - 1907109630;
  v128 = v122 + 1552495735 + (~(2 * v122) | 0x46ED9711) + 1;
  v129 = v128 ^ (v119 - 174260522);
  LODWORD(v99) = v128 ^ 0x5C893477;
  v130 = v121 ^ v127;
  v131 = (v121 ^ v127 ^ 0xC0B9225C) + v99 + 1422204384 - ((2 * ((v121 ^ v127 ^ 0xC0B9225C) + v99 + 1)) & 0xA98A3BBE);
  LODWORD(STACK[0x5F8]) = v131;
  LODWORD(STACK[0x65C]) = v126;
  HIDWORD(v132) = v124 ^ 0x126 ^ (v126 + 7);
  LODWORD(v132) = v124 ^ 0x88D8D600 ^ (v126 + 85008903);
  LODWORD(v99) = v132 >> 9;
  HIDWORD(v132) = v99 ^ 0x7D4A8C;
  LODWORD(v132) = v99 ^ 0xBC000000;
  v1008 = (v132 >> 23) - ((2 * (v132 >> 23)) & 0x86E13574) - 1016030534;
  v133 = ((v125 ^ 0xBA3F3AC0) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x608]) = v133;
  v134 = (v1008 ^ 0x15F6492E) + v133;
  v1006 = v134;
  v135 = v134
       - 2045889327
       + LODWORD(STACK[0x518])
       - ((2 * (v134 - 2045889327 + LODWORD(STACK[0x518])) - 1855347996) & 0xF7EAB84E)
       - 995480167;
  v136 = 662 * (HIBYTE(v135) & 0xF ^ 0xB) + 439568;
  v137 = 662 * (~(v135 >> 20) & 0xF) + 439568;
  LODWORD(STACK[0x6C8]) = v129 ^ v131;
  v138 = ((v130 ^ 0x3F46DDA3) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x5FC]) = v138;
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + (662 * ((v135 >> 28) ^ 7)
                                                   + 439568
                                                   - 965
                                                   * ((4450744 * (unint64_t)(662 * ((v135 >> 28) ^ 7) + 439568)) >> 32)));
  v139 = (v129 ^ v131 ^ 0x245FE344) + v138;
  LODWORD(STACK[0x6B8]) = v139;
  LODWORD(STACK[0x6A8]) = v139 + 797932447;
  v140 = LODWORD(STACK[0x570])
       - (v139
        + 797932447)
       - ((2 * (LODWORD(STACK[0x570]) - (v139 + 797932447)) + 868624536) & 0x523EE276);
  v141 = 662 * (HIWORD(v135) & 0xF ^ 5) + 439568;
  LODWORD(v99) = ((*(unsigned __int8 *)(v19 + (v136 - 965 * ((4450744 * (unint64_t)v136) >> 32))) ^ 0x6B) << 8) ^ ((v99 ^ 0x6B) << 12);
  v142 = *(unsigned __int8 *)(v19 + (v137 - 965 * ((4450744 * (unint64_t)v137) >> 32)));
  v143 = 662 * (((unsigned __int16)v135 >> 12) ^ 5) + 439568;
  LODWORD(v99) = ((v99 | *(unsigned __int8 *)(v19
                                                          + (v141
                                                                         - 965
                                                                         * ((4450744 * (unint64_t)v141) >> 32))) ^ 0x6B) << 8) ^ ((v142 ^ 0x6B) << 12);
  v144 = 662 * ((v135 >> 8) & 0xF ^ 0xC) + 439568;
  LODWORD(STACK[0x600]) = v135;
  v145 = 662 * ((v135 >> 4) ^ 2) + 439568;
  LODWORD(v99) = v99 | *(unsigned __int8 *)(v19 + (v144 - 965 * ((4450744 * (unint64_t)v144) >> 32))) ^ 0x6B;
  v146 = ((_DWORD)v99 << 8) - 108006465 - (((_DWORD)v99 << 9) & 0xF31FE600);
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + (662 * (v135 & 0xF ^ 7)
                                                   + 439568
                                                   - 965
                                                   * ((4450744 * (unint64_t)(662 * (v135 & 0xF ^ 7) + 439568)) >> 32))) ^ 0x6B;
  v147 = v99 - 294606301 - ((2 * v99) & 0x46);
  v148 = v146 ^ ((*(unsigned __int8 *)(v19 + (v143 - 965 * ((4450744 * (unint64_t)v143) >> 32))) ^ 0x6B) << 12);
  v149 = (v148 ^ 0xF98FF3BF | v147 ^ 0xEE70AA23) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v145
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v145) >> 32))) ^ 0x6B));
  v140 -= 1023244921;
  v150 = 662 * (HIBYTE(v140) & 0xF ^ 9) + 439568;
  v151 = 662 * ((v140 >> 20) & 0xF ^ 1) + 439568;
  v152 = 662 * (~HIWORD(v140) & 0xF) + 439568;
  LODWORD(v99) = ((*(unsigned __int8 *)(v19 + (v150 - 965 * ((4450744 * (unint64_t)v150) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v140 >> 28) ^ 0xA) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v140 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0x6B) << 12);
  v153 = 662 * (((unsigned __int16)v140 >> 12) ^ 7) + 439568;
  LODWORD(v99) = v99 | *(unsigned __int8 *)(v19 + (v152 - 965 * ((4450744 * (unint64_t)v152) >> 32))) ^ 0x6B;
  v154 = 662 * ((v140 >> 8) & 0xF ^ 1) + 439568;
  LODWORD(v99) = ((_DWORD)v99 << 8) ^ ((*(unsigned __int8 *)(v19
                                                           + (v151
                                                                          - 965
                                                                          * ((4450744 * (unint64_t)v151) >> 32))) ^ 0x6B) << 12);
  v155 = 662 * ((v140 >> 4) ^ 3) + 439568;
  LODWORD(v99) = v99 | *(unsigned __int8 *)(v19 + (v154 - 965 * ((4450744 * (unint64_t)v154) >> 32))) ^ 0x6B;
  v156 = ((_DWORD)v99 << 8) + 1189288316 - (((_DWORD)v99 << 9) & 0x8DC63200);
  v157 = *(unsigned __int8 *)(v19
                            + (662 * (v140 & 0xF ^ 0xB)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v140 & 0xF ^ 0xB) + 439568)) >> 32))) ^ 0x6B;
  v158 = v157 + 1856729763 - ((2 * v157) & 0x146);
  v159 = v156 ^ ((*(unsigned __int8 *)(v19 + (v153 - 965 * ((4450744 * (unint64_t)v153) >> 32))) ^ 0x6B) << 12);
  v1011 = v156;
  LODWORD(v99) = (v159 ^ 0x46E3197C | v158 ^ 0x6EAB72A3) ^ (16
                                                          * (*(unsigned __int8 *)(v19
                                                                                + (v155
                                                                                               - 965
                                                                                               * ((4450744
                                                                                                 * (unint64_t)v155) >> 32))) ^ 0x6B));
  v160 = v147 & 0xF;
  LODWORD(STACK[0x5F0]) = v160;
  v161 = (v160 & 0xFFFFFF0F | (16 * (v158 & 0xF))) ^ 0x33;
  v162 = v161 + 1014044220 - ((2 * v161) & 0x78);
  v163 = 662 * (v162 ^ 0x3C71163C)
       + 466048
       - 965 * ((((662 * (v162 ^ 0x3C71163Cu) + 466048) * (unint64_t)v15) >> 32) >> 4);
  v164 = (v162 & 0x96 ^ 0x282 | v162 & 0x96 ^ 0x14) * (v162 ^ 0x3C71163C);
  v165 = ((v149 >> 4) ^ 0x4E2A7983) & 0x42CD3E9 ^ 0x88431662 ^ (((2 * ((v149 >> 4) ^ 0x4E2A7983)) & 0x9200C)
                                                              - (((v149 >> 4) ^ 0x4E2A7983) & 0x42CD3E6)
                                                              - 1939126304);
  v166 = (484764010 - (v165 | 0x1CE4E96A) + (v165 | 0xE31B1695)) ^ 0xE7334714;
  LODWORD(STACK[0x5EC]) = v166;
  v167 = *(unsigned __int8 *)(v19 + v163);
  LODWORD(STACK[0x6B4]) = v28;
  v1027 = 662 * (v167 ^ v28);
  v168 = (*(unsigned __int8 *)(v19 + v1027 - 965 * (((v1027 * (unint64_t)v15) >> 32) >> 4)) >> 4) ^ 6;
  v169 = 662
       * ((v168 - ((2 * v168) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + v164
                                                                                   - 965
                                                                                   * (((v164 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v170 = 662 * (((v166 | v99 & 0xF0) - 1258905123 - ((2 * (v166 | v99 & 0xF0)) & 0x69ED43BA)) ^ 0xB4F6A1DD);
  v1018 = 662
        * (*(unsigned __int8 *)(v19
                              + v170
                              + 466048
                              - 965 * ((((v170 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v169 - 965 * ((4450744 * (unint64_t)v169) >> 32))) ^ 0x6B)) ^ 0x6B);
  v171 = *(unsigned __int8 *)(v19 + (v1018 - 965 * ((4450744 * (unint64_t)v1018) >> 32))) >> 4;
  v172 = ((v171 ^ 6) + ((2 * ((v171 ^ 6 | 0x7B) ^ v171)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v170 - 965 * (((v170 * (unint64_t)v15) >> 32) >> 4));
  LODWORD(STACK[0x5F4]) = v149;
  LODWORD(v99) = (v99 >> 4) & 0xF0 | (v149 >> 8) & 0xF;
  LODWORD(v99) = 662 * ((v99 - 1056530083 - 2 * (v99 & 0x5F ^ (v149 >> 8) & 2)) ^ 0xC106A15D);
  v1010 = 662
        * (*(unsigned __int8 *)(v19
                              + (_DWORD)v99
                              + 466048
                              - 965
                              * ((((v99 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (662 * v172 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v172 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v173 = *(unsigned __int8 *)(v19 + (v1010 - 965 * ((4450744 * (unint64_t)v1010) >> 32))) >> 4;
  LODWORD(v99) = ((v173 ^ 6) + ((2 * ((v173 ^ 6 | 0x7B) ^ v173)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v99 - 965 * (((v99 * (unint64_t)v15) >> 32) >> 4));
  LODWORD(STACK[0x5DC]) = v148;
  v174 = ((v159 >> 8) & 0xF0 | ((unsigned __int16)v148 >> 12)) ^ 0x1F;
  v175 = 662 * ((v174 + 176722156 - ((2 * v174) & 0x1D8)) ^ 0xA8890EC);
  v1007 = 662
        * (*(unsigned __int8 *)(v19
                              + v175
                              + 466048
                              - 965 * ((((v175 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (662 * v99 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v99 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  LODWORD(v99) = *(unsigned __int8 *)(v19 + (v1007 - 965 * ((4450744 * (unint64_t)v1007) >> 32))) >> 4;
  LODWORD(v99) = 662
               * (((v99 ^ 6) + ((2 * ((v99 ^ 6 | 0x7B) ^ v99)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v175 - 965 * (((v175 * (unint64_t)v15) >> 32) >> 4)))
               + 466048;
  v176 = (v159 >> 12) & 0xF0 | HIWORD(v148) & 0xF;
  v177 = 662 * (((v176 ^ 0x3F) + 226051047 + ((2 * ((v176 ^ 0x3F | 0x7FFFFFE7) ^ v176)) ^ 0x4F) + 1) ^ 0xD7943E7);
  HIDWORD(v1004) = 662
                 * (*(unsigned __int8 *)(v19
                                       + v177
                                       + 466048
                                       - 965 * ((((v177 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B)) ^ 0x6B);
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + (HIDWORD(v1004)
                                                   - 965 * ((4450744 * (unint64_t)HIDWORD(v1004)) >> 32))) >> 4;
  v178 = 662
       * (((v99 ^ 6) + ((2 * ((v99 ^ 6 | 0x7B) ^ v99)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v177 - 965 * (((v177 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v1009 = v146;
  LODWORD(v99) = (HIWORD(v156) & 0xF0 | (v146 >> 20) & 0xF) ^ 0xE8;
  v179 = 662 * ((v99 - 382204788 - 2 * (v99 & 0x8E ^ (v146 >> 20) & 2)) ^ 0xE938048C);
  v180 = *(unsigned __int8 *)(v19
                            + v179
                            + 466048
                            - 965 * ((((v179 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v178 - 965 * ((4450744 * (unint64_t)v178) >> 32))) ^ 0x6B)) ^ 0x6B;
  HIDWORD(v1003) = 662 * v180;
  LODWORD(v1004) = v179;
  v181 = ((662 * v180) ^ 0xBFDFA7FF) + ((1324 * v180) & 0x3F4FFC);
  v1005 = (v181 + 1076327553) % (((v181 + 129) | (125 - v181)) & 0x84 | 0x341);
  v182 = v134 - ((2 * (v134 - 2045889327) + 1889042632) & 0x7390A480) + 2015545205;
  LODWORD(v1002) = v182;
  v183 = LODWORD(STACK[0x500])
       - 602667175
       + (v182 ^ 0x8FC52C5B)
       - ((2 * (LODWORD(STACK[0x500]) - 602667175 + (v182 ^ 0x8FC52C5B))) & 0x4B4D9CA2)
       + 631688785;
  LODWORD(v99) = LODWORD(STACK[0x6B8]) - ((2 * LODWORD(STACK[0x6A8]) + 496366380) & 0x471DE88A) + 1642686842;
  LODWORD(STACK[0x6A8]) = v99;
  v184 = 662 * (HIBYTE(v183) & 0xF ^ 5) + 439568;
  v185 = 662 * ((v183 >> 20) & 0xF ^ 0xA) + 439568;
  v186 = 662 * (HIWORD(v183) & 0xF ^ 6) + 439568;
  v187 = 662 * (((unsigned __int16)v183 >> 12) ^ 0xC) + 439568;
  v188 = ((((*(unsigned __int8 *)(v19 + (v184 - 965 * ((4450744 * (unint64_t)v184) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v183 >> 28) ^ 2) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v183 >> 28) ^ 2) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v186 - 965 * ((4450744 * (unint64_t)v186) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v185 - 965 * ((4450744 * (unint64_t)v185) >> 32))) ^ 0x6B) << 12);
  LODWORD(v1003) = v183;
  v189 = 662 * ((v183 >> 8) & 0xF ^ 0xE) + 439568;
  v190 = 662 * ((v183 >> 4) ^ 5) + 439568;
  v191 = v190 - 965 * ((4450744 * (unint64_t)v190) >> 32);
  v192 = v188 | *(unsigned __int8 *)(v19 + (v189 - 965 * ((4450744 * (unint64_t)v189) >> 32))) ^ 0x6B;
  v193 = (v192 << 8) + 1080963415 - ((v192 << 9) & 0x80DC6200);
  v194 = *(unsigned __int8 *)(v19
                            + (662 * (v183 & 0xF ^ 1)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v183 & 0xF ^ 1) + 439568)) >> 32))) ^ 0x6B;
  v195 = v194 - 739486715 - ((2 * v194) & 0xA);
  v196 = v193 ^ ((*(unsigned __int8 *)(v19 + (v187 - 965 * ((4450744 * (unint64_t)v187) >> 32))) ^ 0x6B) << 12);
  LODWORD(v99) = LODWORD(STACK[0x530])
               - 471726479
               + (v99 ^ 0x6A7C75A1)
               - ((2 * (LODWORD(STACK[0x530]) - 471726479 + (v99 ^ 0x6A7C75A1)) + 1659857818) & 0x42EB9C52)
               - 756186122;
  v197 = 662 * (BYTE3(v99) & 0xF ^ 1) + 439568;
  v198 = (v196 ^ 0x406E3157 | v195 ^ 0xD3EC5405) ^ (16 * (*(unsigned __int8 *)(v19 + v191) ^ 0x6B));
  v199 = 662 * ((v99 >> 20) & 0xF ^ 7) + 439568;
  v200 = 662 * (WORD1(v99) & 0xF ^ 5) + 439568;
  v201 = ((*(unsigned __int8 *)(v19 + (v197 - 965 * ((4450744 * (unint64_t)v197) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v99 >> 28) ^ 0xA) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v99 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v200 - 965 * ((4450744 * (unint64_t)v200) >> 32))) ^ 0x6B;
  v202 = 662 * (((unsigned __int16)v99 >> 12) ^ 0xC) + 439568;
  v203 = (v201 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v199 - 965 * ((4450744 * (unint64_t)v199) >> 32))) ^ 0x6B) << 12);
  v204 = 662 * ((v99 >> 8) & 0xF ^ 0xE) + 439568;
  v205 = 662 * ((v99 >> 4) ^ 2) + 439568;
  v206 = v203 | *(unsigned __int8 *)(v19 + (v204 - 965 * ((4450744 * (unint64_t)v204) >> 32))) ^ 0x6B;
  v207 = (v206 << 8) - 47547855 - ((v206 << 9) & 0xFA54F400);
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + (662 * (v99 & 0xF ^ 9)
                                                   + 439568
                                                   - 965 * ((4450744 * (662 * (v99 & 0xF ^ 9) + 439568)) >> 32))) ^ 0x6B;
  v208 = v99 + 1593318181 - ((2 * v99) & 0x4A);
  LODWORD(v99) = v207 ^ ((*(unsigned __int8 *)(v19
                                             + (v202 - 965 * ((4450744 * (unint64_t)v202) >> 32))) ^ 0x6B) << 12);
  v209 = ((v195 & 0xA) - (v195 & 5) + 681603349) ^ 0x2D24F2B0;
  v210 = (v99 ^ 0xFD2A7A31 | v208 ^ 0x5EF81B25) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v205
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v205) >> 32))) ^ 0x6B));
  v211 = ((2 * v209) & 0x8090018) - v209 + 330895267;
  v212 = ((16 * (v208 & 0xF)) ^ 0x50 | v211) ^ 0x163D8C03;
  v213 = 662 * ((v212 - 1911671460 - ((2 * v212) & 0x1C1C6AB8)) ^ 0x8E0E355C);
  v214 = v213 - 965 * (((v213 * (unint64_t)v15) >> 32) >> 4);
  v215 = 662
       * (*(unsigned __int8 *)(v19
                             + v213
                             + 466048
                             - 965 * ((((v213 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ v28);
  v216 = *(unsigned __int8 *)(v19
                            + v215
                            + 466048
                            - 965 * ((((v215 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ 0x6B;
  v217 = v216 - ((2 * v216) & 0x14C);
  v218 = *(unsigned __int8 *)(v19 + v215 - 965 * (((v215 * (unint64_t)v15) >> 32) >> 4)) >> 4;
  v219 = ((v218 ^ 6) + ((2 * ((v218 ^ 6 | 0x7B) ^ v218)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v214);
  v220 = 662
       * (((v210 & 0xF0 | (v198 >> 4))
         - 135347857
         - ((2 * (v210 & 0xF0 | (v198 >> 4))) & 0xDE)) ^ 0xF7EEC16F);
  v221 = 662
       * (*(unsigned __int8 *)(v19
                             + v220
                             + 466048
                             - 965 * ((((v220 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (662 * v219 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v219 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v222 = v221 - 965 * ((4450744 * (unint64_t)v221) >> 32);
  v223 = (v217 + 1764015270) ^ (16
                              * (*(unsigned __int8 *)(v19
                                                    + v221
                                                    + 466048
                                                    - 965
                                                    * (((8901487 * (unint64_t)(v221 + 466048)) >> 32) >> 1)) ^ 0x6B));
  v224 = (*(unsigned __int8 *)(v19 + v222) >> 4) ^ 6;
  v225 = 662
       * ((v224 - ((2 * v224) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + v220
                                                                                   - 965
                                                                                   * (((v220 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v226 = 662
       * ((((v210 >> 4) & 0xF0 | (v198 >> 8) & 0xF)
         + 387684450
         - 2 * (((v210 >> 4) & 0x70 | (v198 >> 8) & 2) ^ (v210 >> 4) & 0x10)) ^ 0x171B9862);
  v227 = v226 - 965 * (((v226 * (unint64_t)v15) >> 32) >> 4);
  v228 = 662
       * (*(unsigned __int8 *)(v19
                             + v226
                             + 466048
                             - 965 * ((((v226 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v225 - 965 * ((4450744 * (unint64_t)v225) >> 32))) ^ 0x6B)) ^ 0x6B);
  v229 = v228 + 466048 - 965 * (((8901487 * (unint64_t)(v228 + 466048)) >> 32) >> 1);
  v230 = *(unsigned __int8 *)(v19 + (v228 - 965 * ((4450744 * (unint64_t)v228) >> 32))) >> 4;
  v231 = 662
       * (((v230 ^ 6) + ((2 * ((v230 ^ 6 | 0x7B) ^ v230)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v227))
       + 466048;
  v232 = ((v99 >> 8) & 0xF0 | ((unsigned __int16)v196 >> 12)) ^ 0x73;
  v233 = 662 * ((v232 - 1333319803 - ((2 * v232) & 0x10A)) ^ 0xB0872785);
  v234 = 662
       * (*(unsigned __int8 *)(v19
                             + v233
                             + 466048
                             - 965 * ((((v233 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v231 - 965 * ((4450744 * (unint64_t)v231) >> 32))) ^ 0x6B)) ^ 0x6B);
  v235 = v234 + 466048 - 965 * (((8901487 * (unint64_t)(v234 + 466048)) >> 32) >> 1);
  v236 = (*(unsigned __int8 *)(v19 + (v234 - 965 * ((4450744 * (unint64_t)v234) >> 32))) >> 4) ^ 6;
  v237 = 662
       * ((v236 - ((2 * v236) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + v233
                                                                                   - 965
                                                                                   * (((v233 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  LODWORD(v99) = ((v99 >> 12) & 0xF0 | HIWORD(v196) & 0xF) ^ 0xAE;
  v238 = v99 - 77318139 - ((2 * v99) & 0xA);
  LODWORD(v99) = ((*(unsigned __int8 *)(v19 + v235) ^ 0x6B) << 12) ^ ((*(unsigned __int8 *)(v19 + v229) ^ 0x6B) << 8);
  v239 = 662 * (v238 ^ 0xFB643805);
  v240 = 662
       * (*(unsigned __int8 *)(v19
                             + v239
                             + 466048
                             - 965 * ((((v239 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v237 - 965 * ((4450744 * (unint64_t)v237) >> 32))) ^ 0x6B)) ^ 0x6B);
  v241 = (*(unsigned __int8 *)(v19 + (v240 - 965 * ((4450744 * (unint64_t)v240) >> 32))) >> 4) ^ 6;
  v242 = (v241 - ((2 * v241) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                  + v239
                                                                                  - 965
                                                                                  * (((v239 * (unint64_t)v15) >> 32) >> 4));
  v243 = v240 + 466048 - 965 * (((8901487 * (unint64_t)(v240 + 466048)) >> 32) >> 1);
  v244 = 662 * v242 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v242 + 466048)) >> 32);
  v245 = (HIWORD(v207) & 0xF0 | (v193 >> 20) & 0xF) ^ 0x26;
  v246 = 662 * ((v245 - 901037970 - 2 * (v245 & 0x6F ^ (v193 >> 20) & 1)) ^ 0xCA4B406E);
  v247 = 662
       * (*(unsigned __int8 *)(v19
                             + v246
                             + 466048
                             - 965 * ((((v246 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + v244) ^ 0x6B)) ^ 0x6B);
  v248 = v247 + 466048 - 965 * (((8901487 * (unint64_t)(v247 + 466048)) >> 32) >> 1);
  v249 = (*(unsigned __int8 *)(v19 + (v247 - 965 * ((4450744 * (unint64_t)v247) >> 32))) >> 4) ^ 6;
  v250 = 662
       * ((v249 - ((2 * v249) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + v246
                                                                                   - 965
                                                                                   * (((v246 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v251 = v250 - 965 * ((4450744 * (unint64_t)v250) >> 32);
  v252 = ((*(unsigned __int8 *)(v19 + v248) ^ 0x6B) << 20) ^ ((*(unsigned __int8 *)(v19 + v243) ^ 0x6B) << 16);
  v253 = ((v207 >> 20) & 0xF0 | HIBYTE(v193) & 0xF) ^ 0xD0;
  v254 = 662 * ((v253 - 1697538228 - ((2 * v253) & 0x98)) ^ 0x9AD19F4C);
  v255 = v254 - 965 * (((v254 * (unint64_t)v15) >> 32) >> 4);
  v256 = 662
       * (*(unsigned __int8 *)(v19
                             + v254
                             + 466048
                             - 965 * ((((v254 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + v251) ^ 0x6B)) ^ 0x6B);
  v257 = v256 + 466048 - 965 * (((8901487 * (unint64_t)(v256 + 466048)) >> 32) >> 1);
  v258 = (*(unsigned __int8 *)(v19 + (v256 - 965 * ((4450744 * (unint64_t)v256) >> 32))) >> 4) ^ 6;
  v259 = 662 * ((v258 - ((2 * v258) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v255)) + 466048;
  v260 = 662 * ((HIBYTE(v207) & 0xF0 | (v193 >> 28)) ^ 0xF4) + 466048;
  v261 = 662
       * (*(unsigned __int8 *)(v19 + (v260 - 965 * ((4450744 * (unint64_t)v260) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v259 - 965 * ((4450744 * (unint64_t)v259) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v262 = 662 * (((16 * (_BYTE)v217 + 96) & 0xF0 ^ 0x60 | v211) ^ 0x163D8C03) + 218460;
  v263 = 662 * ((v223 & 0xF0 | (v198 >> 4)) ^ 0xA0) + 218460;
  v264 = v99 ^ v223;
  v265 = 662 * (((v264 >> 4) & 0xF0 | (v198 >> 8) & 0xF) ^ 0xC0) + 218460;
  v266 = (*(unsigned __int8 *)(v19 + v262 - 965 * (((v262 * (unint64_t)v15) >> 32) >> 4)) ^ 0x6B | ((*(unsigned __int8 *)(v19 + (v265 - 965 * ((4450744 * (unint64_t)v265) >> 32))) ^ 0x6B) << 8)) ^ (16 * (*(unsigned __int8 *)(v19 + (v263 - 965 * ((4450744 * (unint64_t)v263) >> 32))) ^ 0x6B));
  LODWORD(v99) = 662 * (((v99 >> 8) & 0xF0 | ((unsigned __int16)v196 >> 12)) ^ 3) + 218460;
  v267 = v264 ^ 0x7F1F3F80 ^ v252;
  v268 = v267 ^ ((*(unsigned __int8 *)(v19 + v257) ^ 0x6B) << 24);
  v269 = 662 * (((v267 >> 12) & 0xF0 | HIWORD(v196) & 0xF) ^ 0xBE) + 218460;
  v270 = v266 ^ ((*(unsigned __int8 *)(v19
                                     + (v99 - 965
                                                          * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B) << 12) ^ ((*(unsigned __int8 *)(v19 + (v269 - 965 * ((4450744 * (unint64_t)v269) >> 32))) ^ 0x6B) << 16);
  v271 = 662 * ((HIWORD(v252) & 0xF0 | (v193 >> 20) & 0xF) ^ 6) + 218460;
  v272 = 662 * (((v268 >> 20) & 0xF0 | HIBYTE(v193) & 0xF) ^ 0x60) + 218460;
  v273 = 662
       * ((((v268 ^ ((*(unsigned __int8 *)(v19
                                         + v261
                                         - 965 * (((8901487 * (unint64_t)v261) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28)) >> 24) & 0xF0 | (v193 >> 28)) ^ 0x14)
       + 218460;
  v274 = v273 - 965 * ((4450744 * (unint64_t)v273) >> 32);
  LODWORD(v1001) = v270 ^ ((*(unsigned __int8 *)(v19
                                               + (v271 - 965 * ((4450744 * (unint64_t)v271) >> 32))) ^ 0x6B) << 20) ^ ((*(unsigned __int8 *)(v19 + (v272 - 965 * ((4450744 * (unint64_t)v272) >> 32))) ^ 0x6B) << 24) ^ ((unint64_t)(*(unsigned __int8 *)(v19 + ((v274 + 1588437632 - ((2 * v274) & 0x500)) ^ 0x5EADA280u)) ^ 0x6Bu) << ((v274 & 0x1C ^ 0x1C) + (v274 & 0x1Cu)));
  v275 = *(unsigned __int8 *)(v19
                            + (662 * (WORD1(v1001) & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (WORD1(v1001) & 0xF) + 454132)) >> 32))) ^ 0x6B;
  v276 = ((*(unsigned __int8 *)(v19
                              + (662 * (BYTE3(v1001) & 0xF)
                                             + 454132
                                             - 965
                                             * ((4450744 * (unint64_t)(662 * (BYTE3(v1001) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * (v1001 >> 28) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v1001 >> 28) + 454132)) >> 32))) ^ 0x6B) << 12) | v275;
  HIDWORD(v1002) = v182 ^ 0x53D07D72;
  v277 = LODWORD(STACK[0x504])
       + 1228823572
       + (v182 ^ 0x53D07D72)
       - ((2 * (LODWORD(STACK[0x504]) + 1228823572 + (v182 ^ 0x53D07D72))) & 0x833EA40);
  HIDWORD(v1000) = v276 - 2 * (v276 & 0x5BE1F ^ v275 & 8) + 1910881815;
  LODWORD(v99) = 662 * ((LODWORD(STACK[0x6DC]) >> 28) ^ 4) + 439568;
  v278 = 662 * (HIBYTE(LODWORD(STACK[0x6DC])) & 0xF ^ 1) + 439568;
  v279 = 662 * ((LODWORD(STACK[0x6DC]) >> 20) & 0xF ^ 0xA) + 439568;
  v280 = 662 * (HIWORD(LODWORD(STACK[0x6DC])) & 0xF ^ 2) + 439568;
  LODWORD(v99) = ((*(unsigned __int8 *)(v19 + (v278 - 965 * ((4450744 * (unint64_t)v278) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B) << 12);
  v281 = 662 * (((unsigned __int16)LODWORD(STACK[0x6DC]) >> 12) ^ 0xB) + 439568;
  LODWORD(v99) = ((v99 | *(unsigned __int8 *)(v19
                                                          + (v280
                                                                         - 965
                                                                         * ((4450744 * (unint64_t)v280) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v279 - 965 * ((4450744 * (unint64_t)v279) >> 32))) ^ 0x6B) << 12);
  v282 = 662 * ((LODWORD(STACK[0x6DC]) >> 8) & 0xF ^ 5) + 439568;
  v283 = 662 * ((LODWORD(STACK[0x6DC]) >> 4) ^ 0xD) + 439568;
  LODWORD(v99) = v99 | *(unsigned __int8 *)(v19 + (v282 - 965 * ((4450744 * (unint64_t)v282) >> 32))) ^ 0x6B;
  HIDWORD(v997) = ((_DWORD)v99 << 8) - 769451402 - (((_DWORD)v99 << 9) & 0xA4463400);
  LODWORD(v997) = HIDWORD(v997) ^ ((*(unsigned __int8 *)(v19
                                                       + (v281
                                                                      - 965 * ((4450744 * (unint64_t)v281) >> 32))) ^ 0x6B) << 12);
  v284 = 662 * ((~v1016 & 0x298) + ((v1012 >> 28) ^ 7) + (~v1016 & 0x298 ^ 0x298));
  LODWORD(v99) = (v997 ^ 0xD2231A76 | v1014 ^ 0xC8B7CFAB) ^ (16
                                                           * (*(unsigned __int8 *)(v19
                                                                                 + (v283
                                                                                                - 965
                                                                                                * ((4450744
                                                                                                  * (unint64_t)v283) >> 32))) ^ 0x6B));
  v285 = 662 * (HIBYTE(v1012) & 0xF ^ 8) + 439568;
  v286 = 662 * ((v1012 >> 20) & 0xF ^ 0xB) + 439568;
  v287 = (unint64_t)(v1012 ^ 0x78B30D94) >> (((93 - v1025) & 8 ^ 8) + ((93 - v1025) & 8u));
  v288 = 662 * (HIWORD(v1012) & 0xF ^ 3) + 439568;
  HIDWORD(v994) = (((*(unsigned __int8 *)(v19 + (v285 - 965 * ((4450744 * (unint64_t)v285) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v284 - 965 * ((4450744 * (unint64_t)v284) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v288 - 965 * ((4450744 * (unint64_t)v288) >> 32)))) ^ (16 * (*(unsigned __int8 *)(v19 + (v286 - 965 * ((4450744 * (unint64_t)v286) >> 32))) ^ 0x6B));
  v289 = ((v287 - ((2 * v287) & 0x8661594E) + 1127263399) & 0xF ^ 0x29F)
       + ((2 * (v287 - ((2 * v287) & 0x8661594E) + 1127263399)) & 0x10);
  v290 = 662 * (((v287 - ((2 * v287) & 0x4E) - 89) >> 4) ^ 0xA) + 439568;
  v291 = 662 * ((v1012 >> 4) ^ 9) + 439568;
  HIDWORD(v996) = ((HIDWORD(v994) << 16) ^ 0x6B0000)
                - 111698766
                + (~(2 * ((HIDWORD(v994) << 16) ^ 0x6B0000)) | 0xD51FFFF)
                + 1;
  LODWORD(v996) = ((HIDWORD(v996) ^ 0xF9579CB2)
                 + ((*(unsigned __int8 *)(v19
                                        + (662 * v289
                                                       - 965
                                                       * ((4450744 * (unint64_t)(662 * v289)) >> 32))) ^ 0x6B) << 8)) ^ ((*(unsigned __int8 *)(v19 + (v290 - 965 * ((4450744 * (unint64_t)v290) >> 32))) ^ 0x6B) << 12);
  v292 = (v996 | v1023 ^ 0xABCD44F2) ^ (16
                                      * (*(unsigned __int8 *)(v19
                                                            + (v291
                                                                           - 965
                                                                           * ((4450744 * (unint64_t)v291) >> 32))) ^ 0x6B));
  v293 = v99 >> (((-58 - LODWORD(STACK[0x5E0])) & 4 ^ 4) + ((-58 - LODWORD(STACK[0x5E0])) & 4));
  v294 = v293 - ((2 * v293) & 0xC713D366);
  v295 = *(unsigned __int8 *)(v19 + v1019 - 965 * (((v1019 * (unint64_t)v15) >> 32) >> 4)) >> 4;
  v296 = 662
       * (((v295 ^ 6) + ((2 * ((v295 ^ 6 | 0x7B) ^ v295)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v1021 - 965 * (((v1021 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v297 = (v292 & 0xF0 | ((_BYTE)v294 - 45) & 0xF) ^ 3;
  v298 = 662 * ((v297 + 542071353 - ((2 * v297) & 0x72)) ^ 0x204F5A39);
  v299 = 662
       * (*(unsigned __int8 *)(v19
                             + v298
                             + 466048
                             - 965 * ((((v298 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v296 - 965 * ((4450744 * (unint64_t)v296) >> 32))) ^ 0x6B)) ^ 0x6B);
  LODWORD(v287) = *(unsigned __int8 *)(v19
                                     + v299
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v299 + 466048)) >> 32) >> 1));
  v300 = (*(unsigned __int8 *)(v19 + (v299 - 965 * ((4450744 * (unint64_t)v299) >> 32))) ^ 0x6Bu) >> ((v287 & 4 ^ 4) + (v287 & 4));
  v301 = 662
       * ((v300 - ((2 * v300) & 0xD6) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + v298
                                                                                   - 965
                                                                                   * (((v298 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  HIDWORD(v995) = v294 - 477501005;
  v302 = ((v292 >> 4) & 0xF0 | ((v294 - 77) >> 4)) ^ 0xB;
  v303 = 662 * ((v302 + 2048862065 - ((2 * v302) & 0xE2)) ^ 0x7A1F2771);
  v304 = 662
       * (*(unsigned __int8 *)(v19
                             + v303
                             + 466048
                             - 965 * ((((v303 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v301 - 965 * ((4450744 * (unint64_t)v301) >> 32))) ^ 0x6B)) ^ 0x6B);
  v305 = v304 + 466048 - 965 * (((8901487 * (unint64_t)(v304 + 466048)) >> 32) >> 1);
  v306 = *(unsigned __int8 *)(v19 + (v304 - 965 * ((4450744 * (unint64_t)v304) >> 32))) >> 4;
  v307 = 662
       * (((v306 ^ 6) + ((2 * ((v306 ^ 6 | 0x7B) ^ v306)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v303 - 965 * (((v303 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v308 = (v996 >> 8) & 0xF0 | ((v294 - 477501005) >> 8) & 0xF;
  HIDWORD(v993) = 662 * (((v308 ^ 9) + 444286180 - ((2 * v308) & 0x1C8)) ^ 0x1A7B44E4);
  v309 = 662
       * (*(unsigned __int8 *)(v19
                             + HIDWORD(v993)
                             + 466048
                             - 965
                             * ((((HIDWORD(v993) + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v307 - 965 * ((4450744 * (unint64_t)v307) >> 32))) ^ 0x6B)) ^ 0x6B);
  v310 = *(unsigned __int8 *)(v19
                            + v309
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v309 + 466048)) >> 32) >> 1)) ^ 0x6B;
  v311 = 662
       * ((((16 * (v287 ^ 0x6B) - ((32 * (v287 ^ 0x6B)) & 0xA0) - 46) ^ LODWORD(STACK[0x5E8])) & 0xF0 | (v99 >> 4)) ^ 0xA0)
       + 218460;
  LODWORD(v992) = (v310 << 12) - ((v310 << 13) & 0x118000) + 2119745560;
  HIDWORD(v992) = v992 ^ ((*(unsigned __int8 *)(v19 + v305) ^ 0x6B) << 8);
  v312 = 662
       * ((((HIDWORD(v992) ^ (16 * (v287 ^ 0x6B)
                            - ((32 * (v287 ^ 0x6B)) & 0x1DA0)
                            + 1114320594)) >> 4) & 0xF0 | (v99 >> 8) & 0xF) ^ 0xE0)
       + 218460;
  LODWORD(v995) = LODWORD(STACK[0x6F4]) ^ (16
                                         * (*(unsigned __int8 *)(v19
                                                               + (v311
                                                                              - 965
                                                                              * ((4450744 * (unint64_t)v311) >> 32))) ^ 0x6B));
  LODWORD(v993) = v995 ^ ((*(unsigned __int8 *)(v19
                                              + (v312 - 965 * ((4450744 * (unint64_t)v312) >> 32))) ^ 0x6B) << 8);
  v313 = 662 * ((v993 >> 8) & 0xF)
       + 454132
       - 1930 * ((2225372 * (unint64_t)(662 * ((v993 >> 8) & 0xF) + 454132)) >> 32);
  LODWORD(v994) = ((2 * v313) & 0xFAC) + (v313 ^ 0x653FBFD7);
  LODWORD(v99) = ((2 * LODWORD(STACK[0x6A8])) & 0xC7D976CE ^ 0x830936CE) + (LODWORD(STACK[0x6A8]) ^ 0xAA7A6010);
  LODWORD(STACK[0x5E8]) = v99;
  v314 = LODWORD(STACK[0x528]) - v99 - ((2 * (LODWORD(STACK[0x528]) - v99) + 401985538) & 0x59E71D3C);
  HIDWORD(v1001) = v277 - 2078673632;
  LODWORD(v99) = 662 * (((v277 - 2078673632) >> 24) & 0xF ^ 4) + 439568;
  v315 = 662 * (((v277 - 2078673632) >> 20) & 0xF ^ 1) + 439568;
  v316 = *(unsigned __int8 *)(v19
                            + (662 * (((v277 - 2078673632) >> 16) & 0xF ^ 9) + 439568)
                            % (WORD2(v1000) & 0x3C5 ^ 0x205 | WORD2(v1000) & 0x3C5 ^ 0x1C0u)) ^ 0x6B | ((*(unsigned __int8 *)(v19 + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v277 + HIDWORD(a6)) >> 28) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v277 + HIDWORD(a6)) >> 28) + 439568)) >> 32))) ^ 0x6B) << 12);
  v317 = 662 * (~((v277 - 2078673632) >> 12) & 0xF) + 439568;
  LODWORD(v99) = v317 - 965 * ((4450744 * (unint64_t)v317) >> 32);
  v318 = 662 * (((v277 - 2078673632) >> 8) & 0xF ^ 5) + 439568;
  v319 = v318 - 965 * ((4450744 * (unint64_t)v318) >> 32);
  v320 = 662 * (((v277 + 32) >> 4) ^ 2) + 439568;
  v321 = v320 - 965 * ((4450744 * (unint64_t)v320) >> 32);
  v322 = v314 + 2028893855;
  v323 = 662 * (((v314 + 2028893855) >> 28) ^ 0xA) + 439568;
  v324 = ((v316 << 8) ^ ((*(unsigned __int8 *)(v19
                                             + (v315 - 965 * ((4450744 * (unint64_t)v315) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + v319) ^ 0x6B) ^ (16 * (*(unsigned __int8 *)(v19 + v99) ^ 0x6B));
  LODWORD(v99) = *(unsigned __int8 *)(v19
                                    + (662 * ((v277 - 2078673632) & 0xF)
                                                   + 439568
                                                   - 965
                                                   * ((4450744
                                                     * (unint64_t)(662 * ((v277 - 2078673632) & 0xFu) + 439568)) >> 32)));
  LODWORD(v287) = (v324 << 8) - 579906728 - ((v324 << 9) & 0xBADEA600);
  v325 = (v99 ^ 0x6B) - 1230122666 - ((2 * (v99 ^ 0x6B)) & 0xAC);
  v326 = 662 * (HIBYTE(v322) & 0xF ^ 0xC) + 439568;
  v327 = (v287 ^ 0xDD6F5358 | v325 ^ 0xB6ADD156) ^ (16 * (*(unsigned __int8 *)(v19 + v321) ^ 0x6B));
  LODWORD(v99) = 662 * (~(v322 >> 20) & 0xF) + 439568;
  v328 = 662 * (HIWORD(v322) & 0xF ^ 3) + 439568;
  v1017 = *(unsigned __int8 *)(v19 + (v328 - 965 * ((4450744 * (unint64_t)v328) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B));
  v329 = ((*(unsigned __int8 *)(v19 + (v326 - 965 * ((4450744 * (unint64_t)v326) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v323 - 965 * ((4450744 * (unint64_t)v323) >> 32))) ^ 0x6B) << 12);
  LODWORD(v99) = 662 * (((unsigned __int16)v322 >> 12) ^ 8) + 439568;
  v330 = v1017 ^ 0x3EF4F0AE ^ (v329 + 127173 - ((2 * v329) & 0xE000));
  v331 = 662 * ((v322 >> 8) & 0xF ^ 0xE) + 439568;
  v332 = 662 * ((v322 >> 4) ^ 9) + 439568;
  v1022 = (v330 << 16) + 1736048786 - ((v330 << 17) & 0xCEF40000);
  v333 = (v1022
        + ((*(unsigned __int8 *)(v19 + (v331 - 965 * ((4450744 * (unint64_t)v331) >> 32))) ^ 0x6B) << 8)) ^ ((*(unsigned __int8 *)(v19 + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) ^ 0x6B) << 12);
  v334 = *(unsigned __int8 *)(v19
                            + (662 * (v322 & 0xF ^ 0xE)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v322 & 0xF ^ 0xE) + 439568)) >> 32))) ^ 0x6B;
  LODWORD(v99) = v334 + 1530620593 - ((2 * v334) & 0x162);
  v335 = (v333 ^ 0x677A0092 | v99 ^ 0x5B3B6AB1) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v332
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v332) >> 32))) ^ 0x6B));
  v1026 = v325 & 0xF;
  v336 = (v1026 | (16 * (v99 & 0xF))) ^ 0x16;
  v337 = 662 * ((v336 - 308138828 - ((2 * v336) & 0x168)) ^ 0xEDA22CB4);
  LODWORD(STACK[0x5E0]) = v327;
  v338 = ((((v327 >> 4) ^ 0xEA816CF2) & 0x288EE513) - ((2 * ((v327 >> 4) ^ 0xEA816CF2)) & 0x401D4800) - 147872220) ^ ((v327 >> 4) ^ 0xEA816CF2) & 0x288EE51C;
  v1015 = 662
        * (*(unsigned __int8 *)(v19
                              + v337
                              + 466048
                              - 965 * ((((v337 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ LODWORD(STACK[0x6B4]));
  LODWORD(v99) = *(unsigned __int8 *)(v19 + v1015 - 965 * (((v1015 * (unint64_t)v15) >> 32) >> 4)) >> 4;
  v339 = ((v99 ^ 6) + ((2 * ((v99 ^ 6 | 0x7B) ^ v99)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v337 - 965 * (((v337 * (unint64_t)v15) >> 32) >> 4));
  v1020 = ((v338 & 0xCE02AC03 ^ 0x2C41) + (v338 ^ 0xDFAFC236) - ((v338 ^ 0xDFAFC236) & 0xC802AC03)) ^ 0xE682C853;
  LODWORD(v99) = 662 * (((v1020 | v335 & 0xF0) - 949414448 - ((2 * (v1020 | v335 & 0xF0)) & 0xED22BA0)) ^ 0xC76915D0);
  v1013 = 662
        * (*(unsigned __int8 *)(v19
                              + (_DWORD)v99
                              + 466048
                              - 965
                              * ((((v99 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (662 * v339 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v339 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v340 = (*(unsigned __int8 *)(v19 + (v1013 - 965 * ((4450744 * (unint64_t)v1013) >> 32))) >> 4) ^ 6;
  v341 = (v340 - ((2 * v340) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                  + v99
                                                                                  - 965
                                                                                  * (((v99 * (unint64_t)v15) >> 32) >> 4));
  v342 = (((v341 ^ 0x77E7AFFF) + 2 * v341 + 705) & 0x296 | (62 - ((v341 ^ 0x77E7AFFF) + 2 * v341)) & 0x96)
       * ((v341 ^ 0x77E7AFFF) + 2 * v341 - 2011671871);
  v343 = (v335 >> 4) & 0xF0 | (v327 >> 8) & 0xF;
  v344 = 662 * ((v343 - 1257455297 - 2 * (v343 & 0x3F)) ^ 0xB50CC13F);
  v1024 = v287;
  LODWORD(v99) = (v333 >> 8) & 0xF0 | ((unsigned __int16)v287 >> 12);
  LODWORD(v1000) = 662
                 * (*(unsigned __int8 *)(v19
                                       + v344
                                       + 466048
                                       - 965 * ((((v344 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + v342 - 965 * (((v342 * (unint64_t)v15) >> 32) >> 4)) ^ 0x6B)) ^ 0x6B);
  v345 = *(unsigned __int8 *)(v19
                            + (v1000 - 965 * ((4450744 * (unint64_t)v1000) >> 32))) >> 4;
  v346 = 662
       * (((v345 ^ 6) + ((2 * ((v345 ^ 6 | 0x7B) ^ v345)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v344 - 965 * (((v344 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v347 = 662 * (((v99 ^ 5) - 1131802255 - ((2 * (v99 ^ 5)) & 0xE2)) ^ 0xBC8A1171);
  HIDWORD(v999) = 662
                * (*(unsigned __int8 *)(v19
                                      + v347
                                      + 466048
                                      - 965 * ((((v347 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v346 - 965 * ((4450744 * (unint64_t)v346) >> 32))) ^ 0x6B)) ^ 0x6B);
  v348 = *(unsigned __int8 *)(v19
                            + (HIDWORD(v999) - 965 * ((4450744 * (unint64_t)HIDWORD(v999)) >> 32)));
  v349 = 662
       * ((((v348 >> 4) ^ 6)
                          + ((2
                            * (((v348 >> 4) ^ 6 | 0x7B) ^ (*(_BYTE *)(v19
                                                                    + (HIDWORD(v999)
                                                                                   - 965
                                                                                   * ((4450744
                                                                                     * (unint64_t)HIDWORD(v999)) >> 32))) >> 4))) ^ 5)
                          + 108) ^ *(unsigned __int8 *)(v19
                                                      + v347
                                                      - 965
                                                      * (((v347 * (unint64_t)v15) >> 32) >> 4)))
       + 466048;
  v350 = ((v333 >> 12) & 0xF0 | WORD1(v287) & 0xF) ^ 0xAF;
  LODWORD(v999) = 662 * ((v350 + 1926319932 - ((2 * v350) & 0x78)) ^ 0x72D14F3C);
  v351 = *(unsigned __int8 *)(v19
                            + (_DWORD)v999
                            + 466048
                            - 965 * ((((v999 + 466048) * (unint64_t)v15) >> 32) >> 4)) ^ (16 * (*(unsigned __int8 *)(v19 + (v349 - 965 * ((4450744 * (unint64_t)v349) >> 32))) ^ 0x6B)) ^ 0x6B;
  HIDWORD(v998) = 662 * v351;
  v352 = 662 * v351 + 221671298 - ((1324 * v351) & 0x6CDF04);
  v353 = v348 ^ 0x60;
  if ((v994 - 1698676695) >= 0x3C5)
    v354 = -33734;
  else
    v354 = -32769;
  HIDWORD(a10) = v354;
  v355 = (v353 & 0xF0) == 0;
  v356 = v352 ^ 0xD366C47;
  if (v355)
    v356 = 965;
  LODWORD(v998) = (v352 ^ 0xD366F82u) % (v356 & (v352 ^ 0xF2C9907D) | v352 & 0x3C4 ^ 0x380);
  v357 = v16 + LODWORD(STACK[0x5A8]) - ((2 * (v16 + LODWORD(STACK[0x5A8])) + 1694452780) & 0x8FE97572) + 2054447311;
  v358 = 662 * (HIBYTE(v357) & 0xF ^ 7) + 439568;
  v359 = ((*(unsigned __int8 *)(v19 + (v358 - 965 * ((4450744 * (unint64_t)v358) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v357 >> 28) ^ 4) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v357 >> 28) ^ 4) + 439568)) >> 32))) ^ 0x6B) << 12);
  v360 = 662 * (~(v357 >> 20) & 0xF) + 439568;
  v361 = 662 * (HIWORD(v357) & 0xF ^ 4) + 439568;
  v362 = v359 | *(unsigned __int8 *)(v19 + (v361 - 965 * ((4450744 * (unint64_t)v361) >> 32))) ^ 0x6B;
  v363 = 662 * (((unsigned __int16)v357 >> 12) ^ 0xB) + 439568;
  v364 = (v362 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v360 - 965 * ((4450744 * (unint64_t)v360) >> 32))) ^ 0x6B) << 12);
  v365 = 662 * ((v357 >> 8) & 0xF ^ 0xA) + 439568;
  v366 = 662
       * (((v16 + LOBYTE(STACK[0x5A8]) - ((2 * (v16 + LOBYTE(STACK[0x5A8])) + 44) & 0x72) - 49) >> 4) ^ 0xB)
       + 439568;
  v367 = v364 | *(unsigned __int8 *)(v19 + (v365 - 965 * ((4450744 * (unint64_t)v365) >> 32))) ^ 0x6B;
  v368 = (v367 << 8) + 954963380 - ((v367 << 9) & 0x71D72A00);
  v369 = *(unsigned __int8 *)(v19
                            + (662 * (v357 & 0xF ^ 9)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v357 & 0xF ^ 9) + 439568)) >> 32))) ^ 0x6B;
  v370 = v369 + 428072578;
  v371 = v369 + 428072578 - ((2 * v369) & 0xFC) - 4;
  v372 = v368 ^ ((*(unsigned __int8 *)(v19 + (v363 - 965 * ((4450744 * (unint64_t)v363) >> 32))) ^ 0x6B) << 12);
  v373 = (v372 ^ 0x38EB95B4 | v371 ^ 0x1983DE7E) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v366
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v366) >> 32))) ^ 0x6B));
  v374 = LODWORD(STACK[0x52C])
       - v17
       - 2 * ((LODWORD(STACK[0x52C]) - v17 + 571310296) & 0x33683205 ^ (LODWORD(STACK[0x52C]) - v17) & 1)
       + 360035036;
  v375 = 662 * (HIBYTE(v374) & 0xF ^ 3) + 439568;
  v376 = 662 * ((v374 >> 20) & 0xF ^ 6) + 439568;
  v377 = 662 * (HIWORD(v374) & 0xF ^ 8) + 439568;
  v378 = ((*(unsigned __int8 *)(v19 + (v375 - 965 * ((4450744 * (unint64_t)v375) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v374 >> 28) ^ 3) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v374 >> 28) ^ 3) + 439568)) >> 32))) ^ 0x6B) << 12);
  v379 = 662
       * (((unsigned __int16)(LOWORD(STACK[0x52C])
                            - v17
                            - 2 * ((LOWORD(STACK[0x52C]) - v17 - 32552) & 0x3205 ^ (LOWORD(STACK[0x52C]) - v17) & 1)
                            - 19748) >> 12) ^ 3)
       + 439568;
  v380 = 662 * ((v374 >> 8) & 0xF ^ 2) + 439568;
  v381 = ((v378 | *(unsigned __int8 *)(v19 + (v377 - 965 * ((4450744 * (unint64_t)v377) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v376 - 965 * ((4450744 * (unint64_t)v376) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v380 - 965 * ((4450744 * (unint64_t)v380) >> 32))) ^ 0x6B;
  v382 = 662
       * ((LOBYTE(STACK[0x52C])
                          - v17
                          - 2 * ((LOBYTE(STACK[0x52C]) - v17 - 40) & 5 ^ (LOBYTE(STACK[0x52C]) - v17) & 1)
                          - 36) >> 4)
       + 439568;
  v383 = ((v371 & 0xF ^ 0xC) - ((2 * v370) & 4) - 1154815550) ^ 0xB9A0DEC0;
  v384 = *(unsigned __int8 *)(v19
                            + (662 * (v374 & 0xF ^ 4)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v374 & 0xF ^ 4) + 439568)) >> 32))) ^ 0x6B;
  v385 = v384 - 1623805598 - ((2 * v384) & 0xC4);
  v386 = (v381 << 8) + 343725082 + (~(v381 << 9) | 0xD70657FF) + 1;
  v387 = v386 ^ ((*(unsigned __int8 *)(v19 + (v379 - 965 * ((4450744 * (unint64_t)v379) >> 32))) ^ 0x6B) << 12);
  v388 = (v387 ^ 0x147CD41A | v385 ^ 0x9F36B162) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v382
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v382) >> 32))) ^ 0x6B));
  v389 = (16 * (v385 & 0xF)) ^ 0x20;
  v390 = (-2044240639 - (v383 | 0x86275D01) + (v383 | 0x79D8A2FE)) ^ 0x7B5295FE;
  v391 = 662 * (((v389 | v390) + 1539948366 - ((2 * (v389 | v390)) & 0x37937E9C)) ^ 0x5BC9BF4E);
  v392 = 662 * (*(unsigned __int8 *)(v19 + (v391 + 466048) % 0x3C5) ^ LODWORD(STACK[0x6E0]) ^ 0x1B91A6F1);
  v393 = *(unsigned __int8 *)(v19 + v392 % 0x3C5) >> 4;
  v394 = (v392 + 466048) % 0x3C5;
  v395 = 662
       * (((v393 ^ 6) + ((2 * ((v393 ^ 6 | 0x7B) ^ v393)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v391 % 0x3C5))
       + 466048;
  v396 = (((v373 >> 4) & 2) + 1226961757 - ((v373 >> 4) & 0xD)) ^ 0x4921F35D;
  v397 = 662 * (((v388 & 0xF0 | v396) + 1135226825 - ((2 * (v388 & 0xF0 | v396)) & 0x5141992)) ^ 0x43AA2FC9);
  v398 = 662
       * (*(unsigned __int8 *)(v19 + (v397 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v395 - 965 * ((4450744 * (unint64_t)v395) >> 32))) ^ 0x6B)) ^ 0x6B);
  v399 = v398 + 466048 - 965 * (((8901487 * (unint64_t)(v398 + 466048)) >> 32) >> 1);
  v400 = v398 - 965 * ((4450744 * (unint64_t)v398) >> 32);
  v401 = ((v373 >> 8) ^ 0xAE95C308) & 0x288493F4 ^ 0xA792FE1E ^ ((((v373 >> 8) ^ 0xAE95C308) & 0x288493FB)
                                                               - (((v373 >> 8) ^ 0xAE95C308) & 0x20809212)
                                                               + (((v373 >> 8) ^ 0xAE95C308) & 0x809212 ^ 0x8792FE16));
  v402 = ((v388 >> 4) & 0xF0 | v401) - 1316716497 - ((2 * ((v388 >> 4) & 0xF0 | v401)) & 0x6309005E);
  v403 = *(unsigned __int8 *)(v19 + v400) >> 4;
  v404 = 662
       * (((v403 ^ 6) + ((2 * ((v403 ^ 6 | 0x7B) ^ v403)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v397 % 0x3C5))
       + 466048;
  v405 = *(unsigned __int8 *)(v19 + v394) ^ (16 * (*(unsigned __int8 *)(v19 + v399) ^ 0x6B));
  v406 = 662 * (v402 ^ 0xB184802F);
  v407 = 662
       * (*(unsigned __int8 *)(v19 + (v406 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v404 - 965 * ((4450744 * (unint64_t)v404) >> 32))) ^ 0x6B)) ^ 0x6B);
  v408 = *(unsigned __int8 *)(v19 + (v407 - 965 * ((4450744 * (unint64_t)v407) >> 32))) >> 4;
  v409 = 662
       * (((v408 ^ 6) + ((2 * ((v408 ^ 6 | 0x7B) ^ v408)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v406 % 0x3C5))
       + 466048;
  v410 = v409 - 965 * ((4450744 * (unint64_t)v409) >> 32);
  v411 = v410 - 602378254 - ((2 * v410) & 0x7E4);
  v412 = v405 ^ ((*(unsigned __int8 *)(v19
                                     + v407
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v407 + 466048)) >> 32) >> 1)) ^ 0x6B) << ((v411 & 8 ^ 8) + (v411 & 8)));
  v413 = ((v387 >> 8) & 0xF0 | ((unsigned __int16)v372 >> 12)) ^ 0xD9;
  v414 = 662 * ((v413 + 1670581647 - ((2 * v413) & 0xFFFFFF1F)) ^ 0x63930D8F);
  v415 = v414 % 0x3C5;
  v416 = 662
       * (*(unsigned __int8 *)(v19 + (v414 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19 + (v411 ^ 0xDC186FF2)) ^ 0x6B)) ^ 0x6B);
  v417 = v416 + 466048 - 965 * (((8901487 * (unint64_t)(v416 + 466048)) >> 32) >> 1);
  v418 = *(unsigned __int8 *)(v19 + (v416 - 965 * ((4450744 * (unint64_t)v416) >> 32))) >> 4;
  v419 = 662
       * (((v418 ^ 6) + ((2 * ((v418 ^ 6 | 0x7B) ^ v418)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v415))
       + 466048;
  v420 = ((v387 >> 12) & 0xF0 | HIWORD(v372) & 0xF) ^ 0xCB;
  v421 = 662 * ((v420 - 1139381843 - ((2 * v420) & 0x15A)) ^ 0xBC1669AD);
  v422 = 662
       * (*(unsigned __int8 *)(v19 + (v421 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v419 - 965 * ((4450744 * (unint64_t)v419) >> 32))) ^ 0x6B)) ^ 0x6B);
  v423 = v422 + 466048 - 965 * (((8901487 * (unint64_t)(v422 + 466048)) >> 32) >> 1);
  v424 = *(unsigned __int8 *)(v19 + (v422 - 965 * ((4450744 * (unint64_t)v422) >> 32))) >> 4;
  v425 = ((v424 ^ 6) + ((2 * ((v424 ^ 6 | 0x7B) ^ v424)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v421 % 0x3C5);
  v426 = *(unsigned __int8 *)(v19 + v423);
  v427 = 662
       * (((v368 >> 20) & 0xF | 0x2A51BCF0) ^ 0x2A51BCFE ^ (((v386 >> 20) & 0xF ^ 7) << ((v426 & 4 ^ 4) + (v426 & 4))));
  v428 = 662
       * (*(unsigned __int8 *)(v19 + (v427 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v425 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v425 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v429 = (*(unsigned __int8 *)(v19 + (v428 - 965 * ((4450744 * (unint64_t)v428) >> 32))) >> 4) ^ 6;
  v430 = ((*(unsigned __int8 *)(v19
                              + v428
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v428 + 466048)) >> 32) >> 1)) ^ 0x6B) << 20) ^ ((v426 ^ 0x6B) << 16);
  v431 = 662 * ((v429 - ((2 * v429) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v427 % 0x3C5)) + 466048;
  v432 = (v386 >> 20) & 0xF0 | HIBYTE(v368) & 0xF;
  v433 = 662 * (((v432 ^ 0x48) + 296012850 - ((2 * v432) & 0x64)) ^ 0x11A4CC32);
  v434 = 662
       * (*(unsigned __int8 *)(v19 + (v433 + LODWORD(STACK[0x618])) % 0x3C5) ^ (16
                                                                              * (*(unsigned __int8 *)(v19 + (v431 - 965 * ((4450744 * (unint64_t)v431) >> 32))) ^ 0x6B)) ^ 0x6B);
  v435 = v434 + 466048 - 965 * (((8901487 * (unint64_t)(v434 + 466048)) >> 32) >> 1);
  v436 = *(unsigned __int8 *)(v19 + (v434 - 965 * ((4450744 * (unint64_t)v434) >> 32))) >> 4;
  v437 = 662
       * (((v436 ^ 6) + ((2 * ((v436 ^ 6 | 0x7B) ^ v436)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v433 % 0x3C5))
       + 466048;
  v438 = 662 * ((HIBYTE(v386) & 0xF0 | (v368 >> 28)) ^ 0x13) + 466048;
  v439 = 662
       * (*(unsigned __int8 *)(v19 + (v438 - 965 * ((4450744 * (unint64_t)v438) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v437 - 965 * ((4450744 * (unint64_t)v437) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v440 = 662 * ((16 * ((v412 ^ 0x6B) & 0xF)) | v390) + 218460;
  v441 = v412 ^ 0x6B ^ ((*(unsigned __int8 *)(v19 + v417) ^ 0x6B) << 12);
  v442 = 662 * ((v412 ^ 0x6B) & 0xF0 | v396) + 218460;
  v443 = 662 * ((v412 >> 4) & 0xF0 | v401) + 218460;
  v444 = v430 ^ v441;
  v445 = 662 * (((v441 >> 8) & 0xF0 | ((unsigned __int16)v372 >> 12)) ^ 9) + 218460;
  v446 = (v444 >> 12) & 0xF0 | HIWORD(v372) & 0xF;
  v447 = ((*(unsigned __int8 *)(v19 + (v445 - 965 * ((4450744 * (unint64_t)v445) >> 32))) ^ 0x6B) << 12) ^ ((*(unsigned __int8 *)(v19 + v443 % 0x3C5) ^ 0x6B) << 8);
  v448 = v444 ^ ((*(unsigned __int8 *)(v19 + v435) ^ 0x6B) << 24);
  v449 = 662 * ((HIWORD(v444) & 0xF0 | (v368 >> 20) & 0xF) ^ 0xE) + 218460;
  v450 = ((*(unsigned __int8 *)(v19 + (v449 - 965 * ((4450744 * (unint64_t)v449) >> 32))) ^ 0x6B) << 20) ^ ((*(unsigned __int8 *)(v19 + (662 * (v446 ^ 0xB) + 218460 - 965 * ((4450744 * (unint64_t)(662 * (v446 ^ 0xBu) + 218460)) >> 32))) ^ 0x6B) << 16);
  v451 = v448 ^ ((*(unsigned __int8 *)(v19 + v439
                                           - 965 * (((8901487 * (unint64_t)v439) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28);
  v452 = 662 * (((v448 >> 20) & 0xF0 | HIBYTE(v368) & 0xF) ^ 8) + 218460;
  v453 = 662 * ((HIBYTE(v451) & 0xF0 | (v368 >> 28)) ^ 3) + 218460;
  v454 = *(unsigned __int8 *)(v19 + v440 % 0x3C5);
  v455 = v454 ^ (16 * (*(unsigned __int8 *)(v19 + v442 % 0x3C5) ^ 0x6B));
  v456 = v447 ^ v455 ^ 0x3ACEDD9D;
  v457 = v456 ^ ((*(unsigned __int8 *)(v19 + (v452 - 965 * ((4450744 * (unint64_t)v452) >> 32))) ^ 0x6B) << 24) ^ ((*(unsigned __int8 *)(v19 + (v453 - 965 * ((4450744 * (unint64_t)v453) >> 32))) ^ 0xFFFFFFFB) << 28) ^ (v450 + 986635677 - ((2 * v450) & 0x159C0000) + 89);
  v458 = (unint64_t)(v457 >> (v455 & 0x10)) >> (v455 & 0x10 ^ 0x10u);
  LOBYTE(v453) = v458 - ((2 * v458) & 0x4C) + 38;
  LODWORD(v458) = 662 * ((v453 >> 4) ^ 2) + 454132;
  v459 = *(unsigned __int8 *)(v19
                            + (662 * (v453 & 0xF ^ 6)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v453 & 0xF ^ 6) + 454132)) >> 32))) ^ 0x6B ^ ((*(unsigned __int8 *)(v19 + (662 * (HIBYTE(v457) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v457) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * (v457 >> 28) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v457 >> 28) + 454132)) >> 32))) ^ 0xB) << 12) ^ (16 * (*(unsigned __int8 *)(v19 + (v458 - 965 * ((4450744 * (unint64_t)v458) >> 32))) ^ 0x6B));
  v460 = v447 ^ v455 ^ 0xA7F0E979;
  v461 = ((v460 & 0x296 ^ 0x284) + (v456 & 0x296 ^ 0x96)) * (((unsigned __int16)v447 >> 12) + 686);
  v462 = 662 * ((v460 >> 8) & 0xF ^ 9) + 454132;
  LODWORD(v458) = 662 * ((v455 >> 4) ^ 6) + 454132;
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x640]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v458
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v458) >> 32))) ^ 0x6B)) ^ 0x4403939B ^ (((*(unsigned __int8 *)(v19 + (v462 - 965 * ((4450744 * (unint64_t)v462) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v461 - 965 * ((4450744 * (unint64_t)v461) >> 32))) ^ 0x6B) << 12) ^ (v459 << 16) | *(unsigned __int8 *)(v19 + (662 * (v454 & 0xF ^ 0xB) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v454 & 0xF ^ 0xBu) + 454132)) >> 32))) ^ 0x6B);
  LODWORD(STACK[0x6F4]) = v357 ^ 0x176D4F91 ^ LODWORD(STACK[0x6C0]);
  v463 = (*(unsigned __int8 *)(v19 + (v309 - 965 * ((4450744 * (unint64_t)v309) >> 32))) >> 4) ^ 6;
  v464 = (v463 - ((2 * v463) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + HIDWORD(v993) % 0x3C5);
  v465 = 662
       * ((289477344
         - ((v996 >> 11) & 0x1C0)
         + (((v996 >> 12) & 0xF0 | (WORD2(v995) >> 12)) ^ 0xE)) ^ 0x114112E0);
  v466 = 662
       * (*(unsigned __int8 *)(v19 + (v465 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v464 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v464 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v467 = v466 + 466048 - 965 * (((8901487 * (unint64_t)(v466 + 466048)) >> 32) >> 1);
  v468 = *(unsigned __int8 *)(v19 + (v466 - 965 * ((4450744 * (unint64_t)v466) >> 32))) >> 4;
  v469 = ((v468 ^ 6) + ((2 * ((v468 ^ 6 | 0x7B) ^ v468)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v465 % 0x3C5);
  v470 = *(unsigned __int8 *)(v19 + v467) ^ 0x6B;
  v471 = (BYTE4(v994) & 0xF0 | HIWORD(HIDWORD(v995)) & 0xF) ^ 0x69;
  v472 = 662 * ((v471 + 1359667637 - 2 * (v471 & 0xB7 ^ HIWORD(HIDWORD(v995)) & 2)) ^ 0x510AE1B5);
  v473 = 662
       * (*(unsigned __int8 *)(v19 + (v472 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v469 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v469 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v474 = *(unsigned __int8 *)(v19
                            + v473
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v473 + 466048)) >> 32) >> 1)) ^ 0x6B;
  v475 = *(unsigned __int8 *)(v19 + (v473 - 965 * ((4450744 * (unint64_t)v473) >> 32))) >> 4;
  v476 = 662
       * (((v475 ^ 6) + ((2 * ((v475 ^ 6 | 0x7B) ^ v475)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v472 % 0x3C5))
       + 466048;
  v477 = ((HIDWORD(v996) >> 20) & 0xF0 | (HIDWORD(v995) >> 20) & 0xF) ^ 0x98;
  v478 = 662 * ((v477 + 876968180 - ((2 * v477) & 0x1E8)) ^ 0x344578F4);
  v479 = 662
       * (*(unsigned __int8 *)(v19 + (v478 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v476 - 965 * ((4450744 * (unint64_t)v476) >> 32))) ^ 0x6B)) ^ 0x6B);
  LODWORD(v458) = v479 + 466048 - 965 * (((8901487 * (unint64_t)(v479 + 466048)) >> 32) >> 1);
  v480 = *(unsigned __int8 *)(v19 + (v479 - 965 * ((4450744 * (unint64_t)v479) >> 32))) >> 4;
  v481 = 662
       * (((v480 ^ 6) + ((2 * ((v480 ^ 6 | 0x7B) ^ v480)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v478 % 0x3C5))
       + 466048;
  v482 = 662 * ((HIBYTE(HIDWORD(v996)) & 0xF0 | HIBYTE(HIDWORD(v995)) & 0xF) ^ 0xF3) + 466048;
  v483 = 662
       * (*(unsigned __int8 *)(v19 + (v482 - 965 * ((4450744 * (unint64_t)v482) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v481 - 965 * ((4450744 * (unint64_t)v481) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v484 = (v470 << 16) - ((v470 << 17) & 0x15A0000) - 1414717028;
  v485 = (v474 << 20) - ((v474 << 21) & 0x11400000) - 660440818;
  v486 = v484 ^ v992;
  v487 = v485 ^ v484;
  LODWORD(v458) = (*(unsigned __int8 *)(v19 + v458) ^ 0x6B) << 24;
  v488 = v458 ^ ((*(unsigned __int8 *)(v19 + v483
                                           - 965 * (((8901487 * (unint64_t)v483) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28);
  v489 = v458 ^ v485;
  LODWORD(v458) = 662 * (((HIDWORD(v992) >> 8) & 0xF0 | ((unsigned __int16)v997 >> 12)) ^ 0xC1) + 218460;
  v490 = 662 * (((v486 >> 12) & 0xF0 | WORD1(v997) & 0xF) ^ 0x53) + 218460;
  LODWORD(v458) = v993 ^ ((*(unsigned __int8 *)(v19
                                              + (v458
                                                             - 965
                                                             * ((4450744 * (unint64_t)v458) >> 32))) ^ 0x6B) << 12);
  v491 = 662 * ((HIWORD(v487) & 0xF0 | (HIDWORD(v997) >> 20) & 0xF) ^ 2) + 218460;
  v492 = 662 * (((v489 >> 20) & 0xF0 | HIBYTE(HIDWORD(v997)) & 0xF) ^ 0x82) + 218460;
  v493 = 662 * ((HIBYTE(v488) & 0xF0 | (HIDWORD(v997) >> 28)) ^ 0xD) + 218460;
  v494 = *(unsigned __int8 *)(v19 + (v493 - 965 * ((4450744 * (unint64_t)v493) >> 32))) ^ 0xB;
  v495 = v458 ^ ((*(unsigned __int8 *)(v19 + (v490 - 965 * ((4450744 * (unint64_t)v490) >> 32))) ^ 0x6B) << 16);
  v496 = v495 ^ ((*(unsigned __int8 *)(v19 + (v491 - 965 * ((4450744 * (unint64_t)v491) >> 32))) ^ 0x6B) << 20);
  v497 = v496 ^ ((*(unsigned __int8 *)(v19 + (v492 - 965 * ((4450744 * (unint64_t)v492) >> 32))) ^ 0x6B) << 24);
  v498 = 662 * (((((v494 << 28) - ((v494 & 3) << 29) - 1136907171) ^ v497) >> 28) ^ 0xB) + 454132;
  v499 = ((((*(unsigned __int8 *)(v19
                                + (662 * (HIBYTE(v497) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (HIBYTE(v497) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v498 - 965 * ((4450744 * (unint64_t)v498) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (HIWORD(v495) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v495) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v496 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v496 >> 20) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 12);
  v500 = 662 * ((v995 >> 4) ^ 6) + 454132;
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x6DC]) ^ LODWORD(STACK[0x60C]);
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x628]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v500
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v500) >> 32))) ^ 0x6B)) ^ 0x30B57CC9 ^ (((v499 | *(unsigned __int8 *)(v19 + (v994 - 1698643926 + HIDWORD(a10))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((unsigned __int16)v458 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v458 >> 12) + 454132)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (LODWORD(STACK[0x668]) ^ 0xD29CEFBu)) ^ 0x6B);
  v501 = *(unsigned __int8 *)(v19
                            + LODWORD(STACK[0x660])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x660]) + 466048)) >> 32) >> 1)) ^ 0x6B;
  v502 = *(unsigned __int8 *)(v19 + (662 * LODWORD(STACK[0x658]) + 466048) % 0x3C5u) ^ 0x6B;
  v503 = (v502 << 8) - 1650026882 - ((v502 << 9) & 0x12C00);
  v504 = *(unsigned __int8 *)(v19
                            + LODWORD(STACK[0x654])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x654]) + 466048)) >> 32) >> 1)) ^ 0x6B;
  LODWORD(v458) = *(unsigned __int8 *)(v19
                                     + LODWORD(STACK[0x648])
                                     + 466048
                                     - 965
                                     * (((8901487
                                                      * (unint64_t)(LODWORD(STACK[0x648]) + 466048)) >> 32) >> 1)) ^ 0x6B;
  v505 = *(unsigned __int8 *)(v19
                            + LODWORD(STACK[0x630])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x630]) + 466048)) >> 32) >> 1)) ^ 0x6B;
  v506 = (*(unsigned __int8 *)(v19 + LODWORD(STACK[0x62C])) >> 4) ^ 6;
  v507 = (v506 - ((2 * v506) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                  + LODWORD(STACK[0x634])
                                                                                  * (((LODWORD(STACK[0x650]) >> 20) & 0xB)
                                                                                   + ((LODWORD(STACK[0x650]) >> 20) & 0xB ^ 0xB)
                                                                                   + 651)
                                                                                  % 0x3C5);
  v508 = (STACK[0x644] & 0xF0 | HIBYTE(LODWORD(STACK[0x650])) & 0xF) ^ 0x5C;
  v509 = 662 * ((v508 - 1450914678 - ((2 * v508) & 0x114)) ^ 0xA984CC8A);
  v510 = 662
       * (*(unsigned __int8 *)(v19 + (v509 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v507 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v507 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v511 = v510 + 466048 - 965 * (((8901487 * (unint64_t)(v510 + 466048)) >> 32) >> 1);
  v512 = *(unsigned __int8 *)(v19 + (v510 - 965 * ((4450744 * (unint64_t)v510) >> 32))) >> 4;
  v513 = 662
       * (((v512 ^ 6) + ((2 * ((v512 ^ 6 | 0x7B) ^ v512)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v509 % 0x3C5))
       + 466048;
  v514 = -2 - LODWORD(STACK[0x650]);
  v515 = 662 * (((LODWORD(STACK[0x644]) >> 4) & 0xF0 | (v514 >> 28)) ^ 0x90) + 466048;
  v516 = 662
       * (*(unsigned __int8 *)(v19 + (v515 - 965 * ((4450744 * (unint64_t)v515) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v513 - 965 * ((4450744 * (unint64_t)v513) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v517 = *(unsigned __int8 *)(v19 + v516 - 965 * (((8901487 * (unint64_t)v516) >> 32) >> 1)) ^ 0xB;
  v518 = *(unsigned __int8 *)(v19 + v511) ^ 0x6B;
  v519 = v518 >> 3;
  v520 = (v518 << 24) - 132026272;
  v521 = ((v517 << 28) - 132026272 - (v517 << 29)) ^ (v520 - (v519 << 28));
  v522 = 16 * v501 - ((32 * v501) & 0x4A0) + 2101961311;
  LOBYTE(v499) = *(_BYTE *)(v19 + (LODWORD(STACK[0x670]) + 466048) % 0x3C5u) ^ 0x6B;
  LOBYTE(v519) = v522 ^ (v499 - ((2 * v499) & 0x80) + 64);
  v523 = (v504 << 12) - ((v504 << 13) & 0xFFFBFFFF) + 1648227523;
  LODWORD(v458) = ((_DWORD)v458 << 16) - (((_DWORD)v458 << 17) & 0xB40000) + 257597868;
  v524 = (v505 << 20) - ((v505 << 21) & 0xDA00000) - 2032551161;
  v525 = 662 * ((((v503 ^ v522) >> 4) & 0xF0 | (LODWORD(STACK[0x678]) >> 8) & 0xF) ^ 0x40) + 218460;
  v526 = 662 * ((((v523 ^ v503) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x650]) >> 12)) ^ 0x69) + 218460;
  v527 = 662 * ((((v458 ^ v523) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x650])) & 0xF) ^ 0x71) + 218460;
  LODWORD(v458) = 662 * ((((v524 ^ v458) >> 16) & 0xF0 | (LODWORD(STACK[0x650]) >> 20) & 0xF) ^ 0x8B)
                + 218460;
  v528 = 662 * ((((v520 ^ v524) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x650])) & 0xF) ^ 0xEC) + 218460;
  v529 = 662 * (HIBYTE(v521) & 0xF0 | (v514 >> 28)) + 218460;
  v530 = *(unsigned __int8 *)(v19 + (662 * ((16 * (v499 & 0xFu)) | LODWORD(STACK[0x690])) + 218460) % 0x3C5);
  v531 = *(unsigned __int8 *)(v19 + (v529 - 965 * ((4450744 * (unint64_t)v529) >> 32))) ^ 0xB;
  v532 = v530 ^ (16
               * (*(unsigned __int8 *)(v19 + (662 * (v519 & 0xF0 ^ 0x10 | LODWORD(STACK[0x680])) + 218460) % 0x3C5) ^ 0x6B));
  v533 = v532 ^ ((*(unsigned __int8 *)(v19 + (v525 - 965 * ((4450744 * (unint64_t)v525) >> 32))) ^ 0x6B) << 8);
  v534 = v533 ^ ((*(unsigned __int8 *)(v19 + (v526 - 965 * ((4450744 * (unint64_t)v526) >> 32))) ^ 0x6B) << 12);
  v535 = v534 ^ ((*(unsigned __int8 *)(v19 + (v527 - 965 * ((4450744 * (unint64_t)v527) >> 32))) ^ 0x6B) << 16);
  LODWORD(v458) = v535 ^ ((*(unsigned __int8 *)(v19
                                              + (v458
                                                             - 965
                                                             * ((4450744 * (unint64_t)v458) >> 32))) ^ 0x6B) << 20);
  v536 = v458 ^ ((*(unsigned __int8 *)(v19 + (v528 - 965 * ((4450744 * (unint64_t)v528) >> 32))) ^ 0x6B) << 24);
  v537 = 662 * (((((v531 << 28) - ((v531 << 29) & 0x40000000) - 1594662546) ^ v536) >> 28) ^ 0xA) + 454132;
  v538 = ((((*(unsigned __int8 *)(v19
                                + (662 * (HIBYTE(v536) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (HIBYTE(v536) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v537 - 965 * ((4450744 * (unint64_t)v537) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (HIWORD(v535) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v535) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v458 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v458 >> 20) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 12);
  LODWORD(v458) = 662 * ((v532 >> 4) ^ 6) + 454132;
  v539 = v538 | *(unsigned __int8 *)(v19
                                   + (662 * ((v533 >> 8) & 0xF)
                                                  + 454132
                                                  - 965
                                                  * ((4450744 * (unint64_t)(662 * ((v533 >> 8) & 0xF) + 454132)) >> 32))) ^ 0x6B;
  LODWORD(STACK[0x6DC]) = LODWORD(STACK[0x6A0]) ^ 0xBD7C2C87 ^ LODWORD(STACK[0x614]);
  LODWORD(STACK[0x6C0]) = LODWORD(STACK[0x624]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v458
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v458) >> 32))) ^ 0x6B)) ^ 0xAF5A8530 ^ ((v539 << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((unsigned __int16)v534 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v534 >> 12) + 454132)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (v530 & 0xF ^ 0xB) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v530 & 0xF ^ 0xBu) + 454132)) >> 32))) ^ 0x6B);
  LODWORD(v458) = ((2 * v1008) & 0x9BFFF7BE ^ 0x13CB0784) + (v1008 ^ 0xF41A781D);
  LODWORD(STACK[0x6A0]) = v458;
  LODWORD(STACK[0x690]) = LODWORD(STACK[0x610]) ^ (LODWORD(STACK[0x638])
                                                 - 2
                                                 * ((LODWORD(STACK[0x638]) + 1321332420) & 0x78111852 ^ STACK[0x638] & 2)
                                                 - 959248620);
  LODWORD(v458) = v458
                + LODWORD(STACK[0x4FC])
                - 2 * ((v458 + LODWORD(STACK[0x4FC]) + 1425174368) & 0x40C0F1DB ^ (v458 + LODWORD(STACK[0x4FC])) & 0x1A)
                - 1783406303;
  v540 = 662 * ((v458 >> 20) & 0xF ^ 0xC) + 439568;
  v541 = 662 * (((v458 >> 15) & 0x10) + (WORD1(v458) & 0xF ^ 0x298));
  v542 = ((*(unsigned __int8 *)(v19
                              + (662 * (BYTE3(v458) & 0xF)
                                             + 439568
                                             - 965
                                             * ((4450744 * (unint64_t)(662 * (BYTE3(v458) & 0xF) + 439568)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((v458 >> 28) ^ 0xC) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v458 >> 28) ^ 0xC) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v541 - 965 * ((4450744 * (unint64_t)v541) >> 32))) ^ 0x6Bu;
  v543 = 662 * (~(v458 >> 12) & 0xF) + 439568;
  v544 = 662 * ((v458 >> 8) & 0xF ^ 1) + 439568;
  v545 = (v542 << 8) ^ ((unint64_t)(*(unsigned __int8 *)(v19
                                                              + (v540
                                                                             - 965
                                                                             * ((4450744 * (unint64_t)v540) >> 32))) ^ 0x6Bu) << 12);
  v546 = *(unsigned __int8 *)(v19 + (v544 - 965 * ((4450744 * (unint64_t)v544) >> 32)));
  v547 = 662 * ((v458 >> 4) ^ 0xC) + 439568;
  LODWORD(v545) = (((2 * ((v545 | v546 ^ 0x6A) >> 1)) ^ (16
                                                                     * (*(unsigned __int8 *)(v19
                                                                                           + (v543 - 965 * ((4450744 * (unint64_t)v543) >> 32))) ^ 0x6B)) | ((((v545 | v546 ^ 0x6A) >> 1) ^ (~(_DWORD)v546 << 31)) >> 31)) << 8) ^ 0x19C0B500;
  v548 = v545 + 1093039986 - ((2 * v545) & 0x824CEE00);
  v549 = (LODWORD(STACK[0x6C8]) ^ 0xF7B3D657)
       + LODWORD(STACK[0x524])
       - ((2 * ((LODWORD(STACK[0x6C8]) ^ 0xF7B3D657) + LODWORD(STACK[0x524])) + 1158167268) & 0x4A4A2884)
       - 945213004;
  LODWORD(v545) = 662 * (HIBYTE(v549) & 0xF ^ 5) + 439568;
  v550 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LODWORD(v545) = 662 * ((v549 >> 20) & 0xF ^ 2) + 439568;
  v551 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LODWORD(v545) = *(unsigned __int8 *)(v19
                                     + (662 * (v458 & 0xF ^ 1)
                                                    + 439568
                                                    - 965 * ((4450744 * (662 * (v458 & 0xF ^ 1) + 439568)) >> 32))) ^ 0x6B;
  v552 = v545 + 1958489010 - ((2 * v545) & 0x164);
  LODWORD(v545) = 662 * (HIWORD(v549) & 0xF ^ 5) + 439568;
  v553 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  v554 = v548 ^ 0x41267772;
  LODWORD(v545) = (v548 ^ 0x41267772 | v552 ^ 0x74BC2BB2) ^ (16
                                                           * (*(unsigned __int8 *)(v19
                                                                                 + (v547
                                                                                                - 965
                                                                                                * ((4450744
                                                                                                  * (unint64_t)v547) >> 32))) ^ 0x6B));
  v555 = 662
       * (((unsigned __int16)((LOWORD(STACK[0x6C8]) ^ 0xD657)
                            + LOWORD(STACK[0x524])
                            - ((2 * ((LOWORD(STACK[0x6C8]) ^ 0xD657) + LOWORD(STACK[0x524])) + 15076) & 0x2884)
                            + 12724) >> 12) ^ 1)
       + 439568;
  LODWORD(v546) = ((*(unsigned __int8 *)(v19 + v550) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19
                                                                                          + (662 * ((v549 >> 28) ^ 0xA) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v549 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + v553) ^ 0x6B;
  v556 = 662 * ((v549 >> 8) & 0xF ^ 4) + 439568;
  LODWORD(v546) = ((_DWORD)v546 << 8) ^ ((*(unsigned __int8 *)(v19 + v551) ^ 0x6B) << 12);
  v557 = 662
       * ((((LOBYTE(STACK[0x6C8]) ^ 0x57)
                           + LOBYTE(STACK[0x524])
                           - ((2 * ((LOBYTE(STACK[0x6C8]) ^ 0x57) + LOBYTE(STACK[0x524])) - 28) & 0x84)
                           - 76) >> 4) ^ 4)
       + 439568;
  v558 = 2 * ((v552 & 0xF ^ 9) & 1) - (v552 & 0xF ^ 9) + 2117929950;
  LODWORD(v546) = v546 | *(unsigned __int8 *)(v19
                                            + (v556 - 965 * ((4450744 * (unint64_t)v556) >> 32))) ^ 0x6B;
  LODWORD(v546) = ((_DWORD)v546 << 8) + 1839936093 - (((_DWORD)v546 << 9) & 0xDB566400);
  v559 = *(unsigned __int8 *)(v19
                            + (662 * (v549 & 0xF ^ 2)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v549 & 0xF ^ 2) + 439568)) >> 32))) ^ 0x6B;
  v560 = v559 + 195569251 - ((2 * v559) & 0xC6);
  v561 = v546 ^ ((*(unsigned __int8 *)(v19 + (v555 - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0x6B) << 12);
  v562 = (v561 ^ 0x6DAB325D | v560 ^ 0xBA82663) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v557
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v557) >> 32))) ^ 0x6B));
  v563 = (v558 & 0x10000823) + (v558 ^ 0x5A501BF7) - ((v558 ^ 0x5A501BF7) & 0x4D0023) - 2138921984;
  v564 = (16 * (v560 & 0xF)) ^ 0x30 | v563 ^ 0xB4A2BC01;
  v565 = 662 * ((v564 + 1776643807 - ((2 * v564) & 0x53CADDBE)) ^ 0x69E56EDF);
  v566 = 662 * (*(unsigned __int8 *)(v19 + (v565 + 466048) % 0x3C5) ^ LODWORD(STACK[0x6B4]));
  v567 = (*(unsigned __int8 *)(v19 + v566 % 0x3C5) >> 4) ^ 6;
  v568 = (v567 - ((2 * v567) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v565 % 0x3C5);
  v569 = (292502484
        - (((v545 >> 4) ^ 0x824B40AB) & 0x8AB753C1)
        + ((2 * ((v545 >> 4) ^ 0x824B40AB)) & 0x15208000)
        + 11) ^ ((v545 >> 4) ^ 0x824B40AB) & 0x8AB753CE;
  v570 = 662
       * (((v569 ^ 0x116F3BD4 | v562 & 0xF0) - 815419815 - ((2 * (v569 ^ 0x116F3BD4 | v562 & 0xF0)) & 0x1ECB5CB2)) ^ 0xCF65AE59);
  v571 = 662
       * (*(unsigned __int8 *)(v19 + (v570 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v568 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v568 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v572 = v571 + 466048 - 965 * (((8901487 * (unint64_t)(v571 + 466048)) >> 32) >> 1);
  v573 = (*(unsigned __int8 *)(v19 + (v571 - 965 * ((4450744 * (unint64_t)v571) >> 32))) >> 4) ^ 6;
  v574 = 662 * ((v573 - ((2 * v573) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v570 % 0x3C5)) + 466048;
  v575 = (((v545 >> 8) & 0xF ^ 6) - ((2 * ((v545 >> 8) & 0xF ^ 6)) & 0xFFFFFFFB) - 456816595) ^ 0xCCC530BE;
  v576 = (v575 - ((2 * v575) & 0x50017130) + 1010286040) ^ 0x14370548;
  LODWORD(STACK[0x6B4]) = v576;
  v577 = *(unsigned __int8 *)(v19 + (v566 + 466048) % 0x3C5) ^ 0x6B;
  v578 = v577 - ((2 * v577) & 0x5E);
  v579 = 662
       * (((v576 | (v562 >> 4) & 0xF0) - 1611662723 - 2 * ((v576 & 0x1FEFFA7F | (v562 >> 4) & 0x70) ^ v575 & 2)) ^ 0x9FEFFA7D);
  v580 = 662
       * (*(unsigned __int8 *)(v19 + (v579 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v574 - 965 * ((4450744 * (unint64_t)v574) >> 32))) ^ 0x6B)) ^ 0x6B);
  v581 = *(unsigned __int8 *)(v19 + (v580 - 965 * ((4450744 * (unint64_t)v580) >> 32))) >> 4;
  v582 = 662
       * (((v581 ^ 6) + ((2 * ((v581 ^ 6 | 0x7B) ^ v581)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v579 % 0x3C5))
       + 466048;
  v583 = ((*(unsigned __int8 *)(v19
                              + v580
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v580 + 466048)) >> 32) >> 1)) ^ 0x6B) << 8) ^ (16 * (*(unsigned __int8 *)(v19 + v572) ^ 0x6B));
  v584 = ((((v548 >> 12) ^ 0x5ACE4C80) & 0x40C28AD8) - ((2 * ((v548 >> 12) ^ 0x5ACE4C80)) & 0x81010100) + 1150666117) ^ ((v548 >> 12) ^ 0x5ACE4C80) & 0x40C28AD7;
  v585 = ((v584 & 0x86507C9E ^ 0x92003892) + (v584 ^ 0x457474D) - ((v584 ^ 0x457474D) & 0x86507C9E)) ^ 0xD692FE5A;
  v586 = 662
       * (((v585 | (v561 >> 8) & 0xF0 ^ 0x30)
         + 1017480932
         - 2 * ((v585 | (v561 >> 8) & 0xF0 ^ 0x30) & 0x3CA586E7 ^ v585 & 3)) ^ 0x3CA586E4);
  v587 = 662
       * (*(unsigned __int8 *)(v19 + (v586 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v582 - 965 * ((4450744 * (unint64_t)v582) >> 32))) ^ 0x6B)) ^ 0x6B);
  v588 = v587 + 466048 - 965 * (((8901487 * (unint64_t)(v587 + 466048)) >> 32) >> 1);
  v589 = *(unsigned __int8 *)(v19 + (v587 - 965 * ((4450744 * (unint64_t)v587) >> 32))) >> 4;
  v590 = ((v589 ^ 6) + ((2 * ((v589 ^ 6 | 0x7B) ^ v589)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v586 % 0x3C5);
  v591 = (HIWORD(v548) ^ 0x9264078F) & 0x8503 ^ 0x6D1123BC ^ (((2 * ((HIWORD(v548) ^ 0x9264078F) & 0x4850C)) | 0xDA224F68)
                                                            - ((HIWORD(v548) ^ 0x9264078F) & 0x4850C)
                                                            - 1829840820);
  v592 = (v561 >> 12) & 0xF0 ^ 0xB0;
  v593 = ((2 * v591) | 0x2B1C4792) - v591 + 1785846839;
  v594 = v593 ^ 0x958A27C8;
  v595 = 662
       * (((v593 ^ 0x958A27C8 | v592) + 1089929121 - 2 * ((v593 ^ 0x958A27C8 | v592) & 0x40F6FFA7 ^ v593 & 6)) ^ 0x40F6FFA1);
  v596 = v595 % 0x3C5;
  v597 = 662
       * (*(unsigned __int8 *)(v19 + (v595 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (662 * v590 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v590 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v598 = v597 + 466048 - 965 * (((8901487 * (unint64_t)(v597 + 466048)) >> 32) >> 1);
  v599 = (*(unsigned __int8 *)(v19 + (v597 - 965 * ((4450744 * (unint64_t)v597) >> 32))) >> 4) ^ 6;
  v600 = ((((v548 >> 20) ^ 0xD4E2DF51) & 0x54E25A5B) + 1624655780 - ((2 * ((v548 >> 20) ^ 0xD4E2DF51)) & 0x81848400)) ^ ((v548 >> 20) ^ 0xD4E2DF51) & 0x54E25A54;
  v601 = 662 * ((v599 - ((2 * v599) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v596)) + 466048;
  v602 = v601 - 965 * ((4450744 * (unint64_t)v601) >> 32);
  v603 = v600 ^ 0x60D647AB;
  v604 = (v600 ^ 0x60D647AB | WORD1(v546) & 0xF0) ^ 0xA0;
  v605 = 662 * ((v604 - 1851258662 - 2 * (v604 & 0x11A808DE ^ v600 & 4)) ^ 0x91A808DA);
  v606 = 662
       * (*(unsigned __int8 *)(v19 + (v605 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v19 + v602) ^ 0x6B)) ^ 0x6B);
  v607 = v606 + 466048 - 965 * (((8901487 * (unint64_t)(v606 + 466048)) >> 32) >> 1);
  v608 = (*(unsigned __int8 *)(v19 + (v606 - 965 * ((4450744 * (unint64_t)v606) >> 32))) >> 4) ^ 6;
  v609 = 662 * ((v608 - ((2 * v608) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v605 % 0x3C5)) + 466048;
  v610 = v609 - 965 * ((4450744 * (unint64_t)v609) >> 32);
  v611 = (((2 * (HIBYTE(v554) & 0xF ^ 0x155A0CC1)) | 0xB4D8C5B0) - (HIBYTE(v554) & 0xF ^ 0x155A0CC1) - 1517052632) ^ 0x4F366E10;
  v612 = ((2 * (v611 | (v546 >> 20) & 0xF0 ^ 0xD0)) & 0x7FBB3EF2)
       + ((v611 | (v546 >> 20) & 0xF0 ^ 0xD0) ^ 0xBFDD9F79);
  v578 += 76574767;
  LOWORD(v368) = v578 ^ 0xA1FD ^ v583;
  v613 = 662
       * (*(unsigned __int8 *)(v19 + (662 * (v612 + (v368 & 0x2C0 ^ 0x200 | v368 & 0x2C0 ^ 0xC0)) - 656040678) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v19 + v610) ^ 0x6B)) ^ 0x6B);
  v614 = v613 + 466048 - 965 * (((8901487 * (unint64_t)(v613 + 466048)) >> 32) >> 1);
  v615 = (*(unsigned __int8 *)(v19 + (v613 - 965 * ((4450744 * (unint64_t)v613) >> 32))) >> 4) ^ 6;
  v616 = 662
       * ((v615 - ((2 * v615) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                   + (662 * v612 - 656040678) % 0x3C5))
       + 466048;
  LODWORD(v546) = 662 * ((BYTE3(v546) & 0xF0 | (v554 >> 28)) ^ 0x61) + 466048;
  v617 = 662
       * (*(unsigned __int8 *)(v19
                             + (v546 - 965 * ((4450744 * (unint64_t)v546) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v616 - 965 * ((4450744 * (unint64_t)v616) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  LODWORD(v546) = (v368 & 0xF0 ^ 0x3DF5FF2B) - 1039532027 + ((2 * (v368 & 0xF0)) ^ 0x1A0);
  v618 = (v546 - (v546 | v569 ^ 0x116F3BD4)) ^ ((v569 ^ 0xEE90C42B) + 1);
  LODWORD(v546) = 662 * ((v569 ^ 0x4A474C10 ^ (v618 - ((2 * v618) & 0xB650EF88) + 1529378756)) + v546) + 218460;
  v619 = v583 ^ ((*(unsigned __int8 *)(v19 + v588) ^ 0x6B) << 12);
  LODWORD(v545) = 662 * (LODWORD(STACK[0x6B4]) | (v583 >> 4) & 0xF0) + 218460;
  v620 = v619 ^ ((*(unsigned __int8 *)(v19 + v598) ^ 0x6B) << 16);
  v621 = v620 ^ ((*(unsigned __int8 *)(v19 + v607) ^ 0x6B) << 20);
  v622 = *(unsigned __int8 *)(v19 + (662 * ((~(16 * v578) & 0xF0 | v563) ^ 0xB4A2BC01) + 218460) % 0x3C5);
  LODWORD(v546) = v622 ^ (16 * (*(unsigned __int8 *)(v19 + v546 % 0x3C5) ^ 0x6B));
  LODWORD(v545) = (v546 | ((*(unsigned __int8 *)(v19 + (662 * ((v619 >> 8) & 0xF0 | v585) + 218460) % 0x3C5) ^ 0x6B) << 12)) ^ ((*(unsigned __int8 *)(v19 + v545 % 0x3C5) ^ 0x6B) << 8);
  v623 = v621 ^ ((*(unsigned __int8 *)(v19 + v614) ^ 0x6B) << 24);
  v624 = 662
       * ((((v623 ^ ((*(unsigned __int8 *)(v19
                                         + v617
                                         - 965 * (((8901487 * (unint64_t)v617) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28)) >> 24) & 0xF0 | (v554 >> 28)) ^ 1)
       + 218460;
  v625 = v545 ^ ((*(unsigned __int8 *)(v19 + (662 * ((v620 >> 12) & 0xF0 | v594) + 218460) % 0x3C5) ^ 0x6B) << 16);
  v626 = v625 ^ ((*(unsigned __int8 *)(v19 + (662 * (HIWORD(v621) & 0xF0 | v603) + 218460) % 0x3C5u) ^ 0x6B) << 20);
  v627 = v626 ^ ((*(unsigned __int8 *)(v19 + (662 * ((v623 >> 20) & 0xF0 | v611) + 218460) % 0x3C5) ^ 0x6B) << 24);
  v628 = v627 ^ ((*(unsigned __int8 *)(v19 + (v624 - 965 * ((4450744 * (unint64_t)v624) >> 32))) ^ 0xFFFFFFFB) << 28);
  v629 = *(unsigned __int8 *)(v19
                            + (662 * (HIBYTE(v627) & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (HIBYTE(v627) & 0xF) + 454132)) >> 32))) ^ 0x6B;
  v630 = *(unsigned __int8 *)(v19
                            + (662 * (v628 >> 28)
                                           + 454132
                                           - 965 * ((4450744 * (unint64_t)(662 * (v628 >> 28) + 454132)) >> 32))) ^ 0x6B;
  v631 = ((v630 << 12) - 685163859 - ((v630 << 13) & 0x126000)) ^ ((v629 << 8) - 685163859 - ((v629 << 9) & 0x7400));
  v632 = 662
       * (((256 - ((_WORD)v629 << 8)) & 0x200 | (v626 >> 20) & 0xF) + ((256 - ((_WORD)v629 << 8)) & 0x200 ^ 0x2AE));
  v633 = 662 * ((unsigned __int16)v545 >> 12)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v545 >> 12) + 454132)) >> 32);
  LODWORD(v545) = 662 * (((v545 >> 8) & 0xF ^ 0x2AE) + ((v545 >> 7) & 0x1C));
  v634 = ((v631
         + (*(unsigned __int8 *)(v19
                               + (662 * (HIWORD(v625) & 0xF)
                                              + 454132
                                              - 965
                                              * ((4450744 * (unint64_t)(662 * (HIWORD(v625) & 0xF) + 454132)) >> 32))) ^ 0x6B)) << 8) ^ ((*(unsigned __int8 *)(v19 + (v632 - 965 * ((4450744 * (unint64_t)v632) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (v545 - 965 * ((4450744 * (unint64_t)v545) >> 32))) ^ 0x6B;
  LODWORD(v545) = 662 * ((v546 >> 4) ^ 6) + 454132;
  v635 = 662 * (v622 & 0xF ^ 0xB)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * (v622 & 0xF ^ 0xBu) + 454132)) >> 32);
  v636 = v635 - 434915104 - ((2 * v635) & 0x1C0);
  v637 = (v634 << 8) ^ ((*(unsigned __int8 *)(v19 + v633) ^ 0x6B) << 12);
  v638 = STACK[0x690];
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x690]) ^ 0x2A67DB8A ^ v458;
  v639 = (v637 | *(unsigned __int8 *)(v19 + (v636 ^ 0xE613B8E0)) ^ 0x6B) ^ (16
                                                                          * (*(unsigned __int8 *)(v19
                                                                                                + (v545 - 965 * ((4450744 * (unint64_t)v545) >> 32))) ^ 0x6B));
  v640 = (v638 ^ 0x2CDB2BAF) + 366088407 + (v636 & 0x329 ^ 0x20) + (v636 & 0x329 ^ 0xEA2DEF09);
  LODWORD(v545) = LODWORD(STACK[0x6A0]) + LODWORD(STACK[0x65C]);
  LODWORD(STACK[0x680]) = v639 - ((2 * v639) & 0x5695C54);
  v641 = (LODWORD(STACK[0x6C8]) ^ 0x84C29A8) + (LODWORD(STACK[0x5F8]) ^ 0x54C51DDF);
  v642 = v545 - 2 * ((v545 + 923870760) & 0x26CD53AF ^ v545 & 1);
  LODWORD(v458) = *(unsigned __int8 *)(v19
                                     + v1018
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1018 + 466048)) >> 32) >> 1)) ^ 0x6B;
  LODWORD(v546) = (~(32 * v458) | 0xFFFFFF3F) + 16 * v458;
  LOBYTE(v545) = *(_BYTE *)(v19 + (v1027 + 466048) % 0x3C5) ^ 0x6B;
  LOBYTE(v633) = v545 - ((2 * v545) & 0xE3);
  LODWORD(v458) = ((*(unsigned __int8 *)(v19
                                       + v1007
                                       + 466048
                                       - 965
                                       * (((8901487 * (unint64_t)(v1007 + 466048)) >> 32) >> 1)) ^ 0x6B) << 12) ^ ((*(unsigned __int8 *)(v19 + v1010 + 466048 - 965 * (((8901487 * (unint64_t)(v1010 + 466048)) >> 32) >> 1)) ^ 0x6B) << 8);
  v643 = (*(unsigned __int8 *)(v19
                             + (HIDWORD(v1003) - 965
                                                             * ((4450744 * (unint64_t)HIDWORD(v1003)) >> 32))) >> 4) ^ 6;
  LODWORD(v545) = (v643 - ((2 * v643) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19
                                                                                           + v1004 % 0x3C5);
  v644 = ((v1011 >> 20) & 0xF0 | HIBYTE(v1009) & 0xF) ^ 0x69;
  v645 = 662 * ((v644 + 1182030361 - 2 * (v644 & 0x1B ^ HIBYTE(v1009) & 2)) ^ 0x46745A19);
  LODWORD(v545) = 662
                * (*(unsigned __int8 *)(v19 + (v645 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(v19
                                                                                              + (662 * v545 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v545 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v646 = v545 + 466048 - 965 * (((8901487 * (unint64_t)(v545 + 466048)) >> 32) >> 1);
  LODWORD(v545) = *(unsigned __int8 *)(v19
                                     + (v545
                                                    - 965 * ((4450744 * (unint64_t)v545) >> 32))) >> 4;
  LODWORD(v545) = 662
                * (((v545 ^ 6) + ((2 * ((v545 ^ 6 | 0x7B) ^ v545)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v645 % 0x3C5))
                + 466048;
  v647 = (v640 ^ 0xA15B4C73) - ((2 * (v640 ^ 0xA15B4C73) + 213630088) & 0x1434B416) + 544749647;
  LOBYTE(v585) = ((v640 ^ 0x73) - ((2 * (v640 ^ 0x73) - 120) & 0x16) + 79) & 4;
  v648 = 662
       * (*(unsigned __int8 *)(v19
                             + (662 * ((((v1011 >> 28) ^ 4) << v585 << (v585 ^ 4)) ^ (~v1009 >> 28)) + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v19 + (v545 - 965 * ((4450744 * (unint64_t)v545) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  LOBYTE(v633) = v633 - 15;
  v649 = 662 * ((STACK[0x5F0] & 0xFFFFFF0F | (16 * (v633 & 0xF))) ^ 0x13) + 218460;
  LODWORD(v546) = v546 + 77885544;
  v650 = 662 * ((v546 ^ v633) & 0xF0 ^ 0x90 | LODWORD(STACK[0x5EC])) + 218460;
  LODWORD(v546) = v546 ^ 0xE25733A7 ^ v458;
  v651 = v546 ^ ((*(unsigned __int8 *)(v19
                                     + HIDWORD(v1004)
                                     + 466048
                                     - 965
                                     * (((8901487
                                                      * (unint64_t)(HIDWORD(v1004) + 466048)) >> 32) >> 1)) ^ 0x6B) << 16);
  LODWORD(v546) = 662 * (((v546 >> 4) & 0xF0 | (LODWORD(STACK[0x5F4]) >> 8) & 0xF) ^ 0x30) + 218460;
  v652 = v546 - 965 * ((4450744 * (unint64_t)v546) >> 32);
  LODWORD(v546) = *(unsigned __int8 *)(v19 + (v649 - 965 * ((4450744 * (unint64_t)v649) >> 32)));
  v653 = (v546 ^ 0x6B | ((*(unsigned __int8 *)(v19 + v652) ^ 0x6B) << 8)) ^ (16
                                                                           * (*(unsigned __int8 *)(v19 + v650 % 0x3C5) ^ 0x6B));
  LODWORD(v458) = 662 * (((v458 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5DC]) >> 12)) ^ 0xF)
                + 218460;
  v654 = v651 ^ ((*(unsigned __int8 *)(v19 + v1005) ^ 0x6B) << 20);
  v655 = 662 * (((v651 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5DC])) & 0xF) ^ 0x3F) + 218460;
  v656 = v654 ^ ((*(unsigned __int8 *)(v19 + v646) ^ 0x6B) << 24);
  v657 = 662 * ((HIWORD(v654) & 0xF0 | (v1009 >> 20) & 0xF) ^ 0xF8) + 218460;
  v658 = v656 ^ ((*(unsigned __int8 *)(v19 + v648
                                           - 965 * (((8901487 * (unint64_t)v648) >> 32) >> 1)) ^ 0xFFFFFFFB) << 28);
  v659 = 662 * (((v656 >> 20) & 0xF0 | HIBYTE(v1009) & 0xF) ^ 0x69) + 218460;
  v660 = 662 * ((HIBYTE(v658) & 0xF0 | (~v1009 >> 28)) ^ 0xE0) + 218460;
  v661 = *(unsigned __int8 *)(v19 + (v660 - 965 * ((4450744 * (unint64_t)v660) >> 32))) ^ 0xB;
  LODWORD(v458) = v653 ^ ((*(unsigned __int8 *)(v19
                                              + (v458
                                                             - 965
                                                             * ((4450744 * (unint64_t)v458) >> 32))) ^ 0x6B) << 12);
  v662 = ((*(unsigned __int8 *)(v19 + (v657 - 965 * ((4450744 * (unint64_t)v657) >> 32))) ^ 0x6B) << 20) ^ ((*(unsigned __int8 *)(v19 + (v655 - 965 * ((4450744 * (unint64_t)v655) >> 32))) ^ 0x6B) << 16) ^ v458;
  v663 = v662 ^ ((*(unsigned __int8 *)(v19 + (v659 - 965 * ((4450744 * (unint64_t)v659) >> 32))) ^ 0x6B) << 24);
  v664 = 662 * ((v663 ^ ~(~(v661 << 29) + (v661 << 28) - 133126953)) >> 28) + 454132;
  v665 = 662 * ((v662 >> 20) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v662 >> 20) & 0xF) + 454132)) >> 32);
  v666 = ((((((*(unsigned __int8 *)(v19
                                  + (662 * (HIBYTE(v663) & 0xF)
                                                 + 454132
                                                 - 965
                                                 * ((4450744 * (unint64_t)(662 * (HIBYTE(v663) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v664 - 965 * ((4450744 * (unint64_t)v664) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (HIWORD(v662) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v662) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + v665) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * ((v653 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v653 >> 8) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((unsigned __int16)v458 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v458 >> 12) + 454132)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (v546 & 0xF ^ 0xB) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v546 & 0xF ^ 0xB) + 454132)) >> 32))) ^ 0x6B;
  v667 = STACK[0x6D0];
  v668 = (LODWORD(STACK[0x6B8]) + 199597561) ^ LODWORD(STACK[0x6D0]) ^ (v641 - ((2 * v641) & 0x2064E0E0) + 271741040);
  LODWORD(STACK[0x670]) = v668;
  LODWORD(v546) = LODWORD(STACK[0x600]) ^ 0xA0EB6D1C ^ ((v640 ^ 0xA15B4C73) + 9162093);
  v669 = LODWORD(STACK[0x608])
       + 199597561
       + (v1002 ^ 0xC637ADBF)
       + (v647 ^ 0x1FC84ADD)
       + ((2 * v647) & 0xD45BDE52 ^ 0xEBEF6BED);
  v670 = v667 ^ 0xCD1AEB66;
  v671 = 2 * (v667 ^ 0xCD1AEB66);
  v672 = (v667 ^ 0xCD1AEB66) - ((v671 + 18324186) & 0xCBE8FA40) + 1719683725;
  LODWORD(STACK[0x6B4]) = v672 ^ (16
                                * (*(unsigned __int8 *)(v19
                                                      + (662 * (v653 >> 4)
                                                                     + 454132
                                                                     - 965
                                                                     * ((4450744
                                                                       * (unint64_t)(662
                                                                                          * (v653 >> 4)
                                                                                          + 454132)) >> 32))) ^ 0x6B)) ^ 0x30CDE305 ^ v666;
  v673 = STACK[0x6A8];
  v674 = LODWORD(STACK[0x5FC]) + 199597561 + (v672 ^ 0x9A0B82DF) + (LODWORD(STACK[0x6A8]) ^ 0xDC710BBA);
  v675 = *(unsigned __int8 *)(v19
                            + (662 * (v1001 & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v1001 & 0xF) + 454132)) >> 32))) ^ 0x6B;
  v676 = ((((HIDWORD(v1000) << 8) ^ ((*(unsigned __int8 *)(v19
                                                         + (662 * ((v1001 >> 20) & 0xF)
                                                                        + 454132
                                                                        - 965
                                                                        * ((4450744
                                                                          * (unint64_t)(662
                                                                                             * ((v1001 >> 20) & 0xF)
                                                                                             + 454132)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * ((v1001 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v1001 >> 8) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (662 * ((unsigned __int16)v1001 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v1001 >> 12) + 454132)) >> 32))) ^ 0x6B) << 12) | v675) ^ ((16 * (*(unsigned __int8 *)(v19 + (662 * (v1001 >> 4) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v1001 >> 4) + 454132)) >> 32))) ^ 0x6B)) | 0xBE170000);
  LODWORD(STACK[0x678]) = v676 + 100464209 - 2 * (v676 & 0x5FCF65F ^ v675 & 0xE);
  LODWORD(v545) = (v640 ^ 0xA15B4C73) + 224358934;
  LODWORD(v458) = (v669 + 3) ^ 0xD248A134;
  LODWORD(STACK[0x6A0]) = v458;
  v677 = (v458 + (v545 ^ 0x12FDF2A0) - ((2 * (v458 + (v545 ^ 0x12FDF2A0))) & 0xC5E1E9C4) + 1659958498) ^ v1002;
  LODWORD(STACK[0x6B8]) = v1003 ^ 0xEC450DCA ^ v545;
  v678 = v670 - ((v671 + 180282412) & 0xBF9ECA2) + 324823143;
  LODWORD(STACK[0x6C8]) = v678;
  LODWORD(v545) = (v674 + 2) ^ 0xD248A134;
  v679 = (v545 + (v678 ^ 0x170104F1) - ((2 * (v545 + (v678 ^ 0x170104F1))) & 0x471DE88A) + 596571205) ^ v673;
  LODWORD(STACK[0x6A8]) = (v1006 + 199597561) ^ (v642 + 1574861270) ^ 0x448597E5 ^ v640;
  v680 = (v668 ^ 0x1E3B132E)
       + 1593311431
       + (v679 ^ 0x2FC7BCD)
       + 1841525773
       - ((2 * ((v668 ^ 0x1E3B132E) + 1593311431 + (v679 ^ 0x2FC7BCD))) & 0xDB86E81A);
  v681 = (v679 ^ 0x2FC7BCD) + v545;
  LODWORD(v545) = *(unsigned __int8 *)(v19
                                     + v1013
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1013 + 466048)) >> 32) >> 1)) ^ 0x6B;
  v682 = *(unsigned __int8 *)(v19 + (v1015 + 466048) % 0x3C5) ^ 0x6B;
  v683 = v682 - ((2 * v682) & 0x1B8);
  v684 = *(unsigned __int8 *)(v19
                            + (_DWORD)v1000
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(v1000 + 466048)) >> 32) >> 1)) ^ 0x6B;
  v685 = *(unsigned __int8 *)(v19
                            + HIDWORD(v998)
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(HIDWORD(v998) + 466048)) >> 32) >> 1)) ^ 0x6B;
  v686 = (v685 << 16) - 520625806 - ((v685 << 17) & 0xFFEFFFFF);
  v687 = (*(unsigned __int8 *)(v19 + v998) >> 4) ^ 6;
  v688 = 662
       * ((v687 - ((2 * v687) & 0xF7) + 107) ^ *(unsigned __int8 *)(v19 + v999 % 0x3C5))
       + 466048;
  v689 = (v1017 & 0xF0 | (v1024 >> 20) & 0xF) ^ 0x66;
  v690 = 662 * ((v689 - 474554841 - 2 * (v689 & 0x2F ^ (v1024 >> 20) & 8)) ^ 0xE3B6DE27);
  v691 = 662
       * (*(unsigned __int8 *)(v19 + (v690 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v688 - 965 * ((4450744 * (unint64_t)v688) >> 32))) ^ 0x6B)) ^ 0x6B);
  v692 = *(unsigned __int8 *)(v19
                            + v691
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v691 + 466048)) >> 32) >> 1));
  v693 = *(unsigned __int8 *)(v19 + (v691 - 965 * ((4450744 * (unint64_t)v691) >> 32))) >> 4;
  v694 = 662
       * (((v693 ^ 6) + ((2 * ((v693 ^ 6 | 0x7B) ^ v693)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v690 % 0x3C5))
       + 466048;
  v695 = 662
       * ((1215459968 - ((v1022 >> 19) & 0x100) + (((v1022 >> 20) & 0xF0 | HIBYTE(v1024) & 0xF) ^ 0x7D)) ^ 0x48727280);
  v696 = 662
       * (*(unsigned __int8 *)(v19 + (v695 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v694 - 965 * ((4450744 * (unint64_t)v694) >> 32))) ^ 0x6B)) ^ 0x6B);
  v697 = v696 + 466048 - 965 * (((8901487 * (unint64_t)(v696 + 466048)) >> 32) >> 1);
  v698 = *(unsigned __int8 *)(v19 + (v696 - 965 * ((4450744 * (unint64_t)v696) >> 32))) >> 4;
  v699 = 662
       * (((v698 ^ 6) + ((2 * ((v698 ^ 6 | 0x7B) ^ v698)) ^ 5) + 108) ^ *(unsigned __int8 *)(v19 + v695 % 0x3C5))
       + 466048;
  v700 = 662 * ((HIBYTE(v1022) & 0xF0 | (v1024 >> 28)) ^ 0x6D) + 466048;
  v701 = 662
       * (*(unsigned __int8 *)(v19 + (v700 - 965 * ((4450744 * (unint64_t)v700) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v699 - 965 * ((4450744 * (unint64_t)v699) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v702 = STACK[0x640];
  v703 = *(unsigned __int8 *)(v19 + v701 - 965 * (((8901487 * (unint64_t)v701) >> 32) >> 1));
  v704 = (((v692 ^ 0x6B) << 20) - 520625806 - (((v692 ^ 0x6B) & 0xF) << 21)) ^ v686 ^ ((*(unsigned __int8 *)(v19 + v697) ^ 0x6B) << 24) ^ ((v703 ^ 0xFFFFFFFB) << 28);
  LODWORD(v545) = 16 * v545 - ((32 * v545) & 0x1A40) + 272063788;
  v683 -= 1808079140;
  v705 = (v684 << 8) - ((v684 << 9) & 0xDA00) - 1162187292;
  v706 = (*(unsigned __int8 *)(v19
                             + HIDWORD(v999)
                             + 466048
                             - 965
                             * (((8901487 * (unint64_t)(HIDWORD(v999) + 466048)) >> 32) >> 1)) ^ 0x6B) << 12;
  v707 = v686 ^ v706;
  v708 = v706 ^ v705;
  v709 = v705 ^ v545;
  LODWORD(v545) = v545 ^ v683;
  v710 = 662 * ((v1026 & 0xFFFFFF0F | (16 * (v683 & 0xF))) ^ 0xC6) + 218460;
  v711 = (662 * (~(_DWORD)v545 & 0xF0 | v1020) + 218460) % 0x3C5;
  LODWORD(v545) = 662 * ((v709 >> 4) & 0xF0 | (LODWORD(STACK[0x5E0]) >> 8) & 0xF) + 218460;
  v712 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LODWORD(v545) = 662 * (((v708 >> 8) & 0xF0 | ((unsigned __int16)v1024 >> 12)) ^ 0x65) + 218460;
  v713 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LODWORD(v545) = (v704 >> 20) - 223450099 - ((v704 >> 19) & 0x181A);
  v714 = 662 * (((v707 >> 12) & 0xF0 | HIWORD(v1024) & 0xF) ^ 0x7F) + 218460;
  v715 = (v545 ^ 0xF2AE6C0D) >> (v703 & 4);
  LODWORD(v545) = 662 * (((v1024 >> 20) & 0xF | (16 * (v545 & 0xF))) ^ 0xD6) + 218460;
  v716 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LOBYTE(v545) = (v715 >> (~(_BYTE)v703 & 4)) - ((2 * (v715 >> (~(_BYTE)v703 & 4))) & 0x24) - 110;
  v717 = 662 * ((HIBYTE(v1024) & 0xF | (16 * (v545 & 0xF))) ^ 0x2D) + 218460;
  LODWORD(v545) = 662 * ((v545 & 0xF0 | (v1024 >> 28)) ^ 0x9D) + 218460;
  v718 = v545 - 965 * ((4450744 * (unint64_t)v545) >> 32);
  LODWORD(v545) = *(unsigned __int8 *)(v19 + (v710 - 965 * ((4450744 * (unint64_t)v710) >> 32)));
  v719 = v545 ^ (16 * (*(unsigned __int8 *)(v19 + v711) ^ 0x6B));
  v720 = v719 ^ ((*(unsigned __int8 *)(v19 + v712) ^ 0x6B) << 8);
  v721 = v720 ^ ((*(unsigned __int8 *)(v19 + v713) ^ 0x6B) << 12);
  v722 = v721 ^ ((*(unsigned __int8 *)(v19 + (v714 - 965 * ((4450744 * (unint64_t)v714) >> 32))) ^ 0x6B) << 16);
  v723 = v722 ^ ((*(unsigned __int8 *)(v19 + v716) ^ 0x6B) << 20);
  v724 = v723 ^ ((*(unsigned __int8 *)(v19 + (v717 - 965 * ((4450744 * (unint64_t)v717) >> 32))) ^ 0x6B) << 24);
  v725 = 662 * ((v724 ^ ((*(unsigned __int8 *)(v19 + v718) ^ 0xFFFFFFFB) << 28)) >> 28) + 454132;
  v726 = 662 * (((v723 >> 20) & 0xF ^ 0x2AE) + ((v723 >> 19) & 0x1C));
  v727 = 662 * (((v721 >> 11) & 0x1C) + (((unsigned __int16)v721 >> 12) ^ 0x2AE));
  v728 = ((((*(unsigned __int8 *)(v19
                                + (662 * (HIBYTE(v724) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (HIBYTE(v724) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v725 - 965 * ((4450744 * (unint64_t)v725) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v19 + (662 * (HIWORD(v722) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v722) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v19 + (v726 - 965 * ((4450744 * (unint64_t)v726) >> 32))) ^ 0x6B) << 12);
  v729 = v677 ^ 0x59C4DD6F;
  v730 = LODWORD(STACK[0x6A8])
       + 366088407
       + (v677 ^ 0x59C4DD6F)
       - ((2 * (LODWORD(STACK[0x6A8]) + 366088407 + (v677 ^ 0x59C4DD6F)) + 306962400) & 0x4A97AD40)
       + 1852950160;
  v731 = (v730 ^ 0x254BD6A0) + HIDWORD(v1002);
  LODWORD(STACK[0x690]) = HIDWORD(v1001) ^ 0x6C31974 ^ v677;
  v732 = 662 * ((v719 >> 4) ^ 6) + 454132;
  v733 = (v677 ^ 0x59C4DD6F) + LODWORD(STACK[0x6A0]);
  v734 = v728 | *(unsigned __int8 *)(v19
                                   + (662 * ((v720 >> 8) & 0xF)
                                                  + 454132
                                                  - 965
                                                  * ((4450744 * (unint64_t)(662 * ((v720 >> 8) & 0xF) + 454132)) >> 32))) ^ 0x6B;
  v735 = STACK[0x6B8];
  v736 = v729 + (v730 ^ 0xDAB4295F) + 1024633776 - ((2 * (v729 + (v730 ^ 0xDAB4295F) + 1)) & 0x7A25575E);
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x4F8]) + 2145097367;
  v737 = LODWORD(STACK[0x680]) - 2102088150;
  v738 = *(unsigned __int8 *)(v19
                            + (662 * (v545 & 0xF ^ 0xB)
                                           + 454132
                                           - 965 * ((4450744 * (662 * (v545 & 0xF ^ 0xB) + 454132)) >> 32))) ^ v679 ^ (((*(unsigned __int8 *)(v19 + (v727 - 965 * ((4450744 * (unint64_t)v727) >> 32))) ^ 0x6B) << 12) | (16 * (*(unsigned __int8 *)(v19 + (v732 - 965 * ((4450744 * (unint64_t)v732) >> 32))) ^ 0x6B))) ^ (v734 << 8) ^ 0x57C5E583;
  LODWORD(v458) = (LODWORD(STACK[0x670]) ^ 0xE1C4ECD1)
                - ((2 * (LODWORD(STACK[0x670]) ^ 0xE1C4ECD1) + 1108344436) & 0xE83FE40A)
                - 1792544449;
  v739 = (v680 ^ 0x8601CBCF)
       + (v458 ^ 0xF41FF205)
       + 2035391456
       - ((2 * ((v680 ^ 0x8601CBCF) + (v458 ^ 0xF41FF205))) & 0xF2A337C0);
  v740 = (v730 ^ 0xF39BC2CD ^ v736) + 2 * ((v736 ^ 0x3D12ABAF) & (v730 ^ 0x4E896962));
  v741 = v740 - 1029419178 - ((2 * v740) & 0x85489EAC);
  v742 = (v681 + 1841525773 - ((2 * v681) & 0xDB86E81A)) ^ v680 ^ v739;
  LODWORD(STACK[0x65C]) = (v742 ^ (LODWORD(STACK[0x5E8]) + 471024793 + (v680 ^ 0x6DC3740D)) ^ 0xA7A9E056)
                        + 905420784
                        + ((2 * (v742 ^ (LODWORD(STACK[0x5E8]) + 471024793 + (v680 ^ 0x6DC3740D)))) & 0xBDF0F76C ^ 0xB0A03740);
  v743 = v730 ^ (v733 + 625727136 - ((2 * v733) & 0x4A97AD40)) ^ v741;
  LODWORD(v458) = v458 ^ 0xA92025F ^ v742;
  v744 = (v743 ^ v731 ^ 0x70CAD8B9) + 1610346079 + ((2 * (v743 ^ v731)) & 0x64DD2FDE ^ 0x4480E8C);
  v745 = STACK[0x6B4];
  LODWORD(STACK[0x6A8]) = LODWORD(STACK[0x6D0]) ^ 0xFC5DFF86 ^ v737;
  v746 = v743 ^ 0xFE001603;
  v747 = v736 ^ 0xB0698667 ^ v743 ^ 0xFE001603;
  v748 = (((v742 ^ 0x79519BE0) + 749426951) ^ 0xB7F72FED) + (a6 & (2 * ((v742 ^ 0x79519BE0) + 749426951)));
  v749 = v748 + 2143024640;
  v750 = LODWORD(STACK[0x6C8]) ^ 0x47C46C85 ^ LODWORD(STACK[0x678]);
  LODWORD(STACK[0x650]) = -2143024640 - v748;
  LODWORD(STACK[0x5F4]) = ((LODWORD(STACK[0x570]) + 158746559) | 0xC8812365)
                        + ((914995264 - LODWORD(STACK[0x570])) & 0x377EDC9A)
                        + 1;
  LODWORD(STACK[0x5F0]) = LODWORD(STACK[0x688]) + 2054172336 - (STACK[0x698] & 0x1D60);
  LODWORD(STACK[0x60C]) = -2147483646;
  v751 = STACK[0x690];
  LODWORD(STACK[0x608]) = -1697294191;
  LODWORD(STACK[0x6D0]) = 29120;
  LODWORD(STACK[0x6C8]) = 14976;
  LODWORD(STACK[0x670]) = 63;
  LODWORD(STACK[0x698]) = STACK[0x538];
  v752 = STACK[0x6F8];
  LODWORD(STACK[0x690]) = v751;
  v753 = v546;
  LODWORD(v545) = v738;
  v754 = v750;
  HIDWORD(v755) = v745 ^ 0x25;
  LODWORD(v755) = v745 ^ 0x55399E00;
  LODWORD(v546) = v755 >> 6;
  v756 = (v752 - 1247) | 0x800;
  HIDWORD(v755) = v745 ^ 0x625;
  LODWORD(v755) = v745 ^ 0x55399800;
  v757 = v755 >> 11;
  LODWORD(STACK[0x600]) = v756;
  v758 = v756 ^ v753 ^ 0xDB1E3B23;
  LODWORD(STACK[0x654]) = v545;
  v759 = (v758 & (v545 ^ 0x55399E25)) + 172520104 - ((2 * (v758 & (v545 ^ 0x55399E25))) & 0x1490E550);
  HIDWORD(v755) = v753 ^ 0xFFFFFFFB;
  LODWORD(v755) = v753 ^ 0xDB1E3100;
  v760 = v755 >> 6;
  LODWORD(STACK[0x6B4]) = v745;
  HIDWORD(v755) = v745 ^ 0x1399E25;
  LODWORD(v755) = v745 ^ 0x55555555;
  v761 = v755 >> 25;
  v762 = v757 ^ v546;
  HIDWORD(v755) = v753 ^ 0x13B;
  LODWORD(v755) = v753 ^ 0xDB1E3000;
  LODWORD(v546) = v755 >> 11;
  v763 = v762 ^ v761;
  LODWORD(STACK[0x680]) = v753;
  HIDWORD(v755) = v753 ^ 0x11E313B;
  LODWORD(v755) = v753 ^ 0xDA000000;
  LODWORD(STACK[0x688]) = v754;
  v754 ^= 0x55399E25u;
  LODWORD(STACK[0x6B8]) = v735;
  v764 = (v735 ^ v751) & (v745 ^ 0x55399E25) ^ v758 & v754;
  v765 = v546 ^ (v755 >> 25) ^ v760;
  v766 = LODWORD(STACK[0x5F4])
       + (v702 ^ 0x1DB316A1)
       - 964951580
       - ((2 * (LODWORD(STACK[0x5F4]) + (v702 ^ 0x1DB316A1))) & 0x8CF803C8);
  LODWORD(v546) = (v764 + (v759 ^ 0xF5B78D57 ^ v764) + 1) ^ ((v759 ^ 0xF5B78D57) + 1);
  LODWORD(v546) = ((v546 + 172520104 - ((2 * v546) & 0x1490E550)) ^ v759) + v764;
  v767 = v741 ^ 0xC2A44F56;
  v768 = (v741 ^ 0xC2A44F56) - ((2 * (v741 ^ 0xC2A44F56) + 107943916) & 0xE93395F2) - 137275665;
  LODWORD(STACK[0x5F8]) = v745 ^ 0x55399E25;
  LODWORD(STACK[0x5EC]) = v754;
  LODWORD(STACK[0x5FC]) = v758;
  v769 = (v745 ^ 0x55399E25) & (v545 ^ 0x55399E25) ^ v751 ^ (v745 ^ 0x55399E25) & v754 ^ (v735 ^ v751) & v758;
  v770 = (v747 ^ v741 ^ v763 ^ 0x8C84C434) + (v765 ^ 0x737B3BCB ^ v747 ^ v741 ^ v763);
  v771 = ((2 * (v767 + 53971958)) & 0x6BBBD76E) + ((v767 + 53971958) ^ 0xB5DDEBB7);
  v772 = ((v458 ^ 0x78239445) + (v458 ^ 0x87DC6BBA ^ v765) + 1) ^ ((v739 ^ 0x86AE641F) + (v739 ^ 0x79519BE0 ^ v765) + 1);
  v773 = v746 ^ 0x3CA45955;
  v774 = v772 ^ (v770 + 1);
  v775 = v771 + (v746 ^ 0x3CA45955) + (v768 ^ 0xF499CAF9);
  v776 = v768 ^ v747 ^ 0x4546BE64;
  v777 = v776 - v771 - ((2 * (v776 - v771) + 1807472494) & 0x6B199478);
  v778 = (v739 ^ 0x79519BE0) - ((2 * (v739 ^ 0x79519BE0) + 107943916) & 0x7D4302A) - 2027838453;
  LODWORD(v458) = v458 ^ 0x43673AF ^ v778;
  v779 = (v778 ^ 0x7C15E7EA) + v458 - 1255428369 - ((2 * ((v778 ^ 0x7C15E7EA) + v458 + 1)) & 0x6A575DDC);
  v780 = ((2 * v778) ^ 0x7D4302A) + v749;
  v781 = v546 ^ v545;
  v782 = v777 + 1802155507;
  LODWORD(v546) = (v777 + 1802155507) ^ v768;
  v783 = ((v744 + (v768 ^ 0x5B7AAADB) + v776 + 356669108) ^ 0xE3E6EFAE)
       + 1593800412
       + ((2 * (v744 + (v768 ^ 0x5B7AAADB) + v776 + 356669108)) & 0xC7CDDF5C);
  LODWORD(v545) = LODWORD(STACK[0x65C]) + (v778 ^ 0x2C097837) + v458 + 314360156;
  v784 = ((2 * v545) & 0xF9F5CFFE) + (v545 ^ 0xFCFAE7FF);
  v785 = v779 ^ v778;
  v786 = ((v778 ^ 0xD3F687C8) + (v778 ^ 0x7930E612 ^ v781) + 1) ^ ((v546 ^ v769 ^ 0xCA17AE23)
                                                                 + (v546 ^ v769 ^ 0x60D1CFF9 ^ v781)
                                                                 + 1) ^ ((v779 ^ 0x4AD45111)
                                                                       + (v779 ^ 0xE01230CB ^ v781)
                                                                       + 1);
  LODWORD(v458) = ((2 * (v784 + 50665473 + (v779 ^ 0xB52BAEEE))) & 0xAD7FFFBC)
                + ((v784 + 50665473 + (v779 ^ 0xB52BAEEE)) ^ 0xD6BFFFDE);
  v787 = v783 + (v782 ^ LODWORD(STACK[0x5C8]));
  v788 = v783 + ((v787 - 756307379) ^ 0xEA2DEF29);
  v789 = v787 + 717728035;
  v790 = 2 * (v787 + 717728035);
  v791 = v788 + 426237921 + ((v790 + 1346896468) & 0xD45BDE52);
  v792 = *((_DWORD *)off_1E2538470[STACK[0x6F8] & 0x944ED8E0] + 189);
  v793 = *((_DWORD *)off_1E2538470[STACK[0x6F8] & 0x944ED8E0] + 9) ^ 0x1C258D97;
  LODWORD(v545) = LODWORD(STACK[0x650]) + LODWORD(STACK[0x6A0]) + (v769 ^ 0xDB1E313B);
  LODWORD(STACK[0x658]) = v775;
  LODWORD(v545) = v545 + v775 + v774;
  v794 = STACK[0x700];
  v795 = v545 + (*(_DWORD *)(STACK[0x700] + 4 * (LODWORD(STACK[0x6C8]) % 0x11B)) ^ 0x62B95495);
  LODWORD(v545) = STACK[0x6A8];
  v796 = STACK[0x6C0];
  v797 = STACK[0x668];
  v798 = v795 - 1446619537 + v793;
  LODWORD(STACK[0x624]) = v798;
  v799 = *(_DWORD *)(v794 + 4 * (LODWORD(STACK[0x6D0]) % 0x11B)) ^ 0x62B95495;
  LODWORD(STACK[0x628]) = v780;
  v800 = v773
       - v780
       + LODWORD(STACK[0x698])
       + v763
       + v799
       + (((v792 ^ 0x90DD2C31) + 536929007) ^ 0x53D5FEB5)
       + v786
       + 1624676478;
  LODWORD(STACK[0x618]) = v800;
  v801 = STACK[0x6E0];
  HIDWORD(v755) = LODWORD(STACK[0x6E0]) ^ 1;
  LODWORD(v755) = LODWORD(STACK[0x6E0]) ^ 0x12A8F6B8;
  v802 = v755 >> 2;
  HIDWORD(v755) = LODWORD(STACK[0x6E0]) ^ 0x28F6B9;
  LODWORD(v755) = LODWORD(STACK[0x6E0]) ^ 0x12800000;
  v803 = v755 >> 22;
  HIDWORD(v755) = LODWORD(STACK[0x6E0]) ^ 0x16B9;
  LODWORD(v755) = LODWORD(STACK[0x6E0]) ^ 0x12A8E000;
  v804 = (v755 >> 13) ^ v802 ^ v803;
  LODWORD(STACK[0x638]) = v804;
  v805 = STACK[0x6F4];
  HIDWORD(v755) = LODWORD(STACK[0x6F4]) ^ 1;
  LODWORD(v755) = LODWORD(STACK[0x6F4]) ^ 0x1DB316A0;
  v806 = v755 >> 2;
  HIDWORD(v755) = LODWORD(STACK[0x6F4]) ^ 0x16A1;
  LODWORD(v755) = LODWORD(STACK[0x6F4]) ^ 0x1DB30000;
  v807 = (v755 >> 13) ^ v806;
  HIDWORD(v755) = LODWORD(STACK[0x6F4]) ^ 0x3316A1;
  LODWORD(v755) = LODWORD(STACK[0x6F4]) ^ 0x1D800000;
  LODWORD(STACK[0x678]) = v766;
  v766 ^= 0xC67C01E4;
  v805 ^= 0x1DB316A1u;
  v808 = LODWORD(STACK[0x6DC]) ^ 0xC67C01E4;
  v809 = (v796 ^ 0x12A8F6B9 ^ v797 ^ 0x12A8F6B9) & v805 ^ (v796 ^ 0x12A8F6B9) & v766 ^ (v801 ^ 0x12A8F6B9) & v766 ^ v808 & (v801 ^ v797);
  LODWORD(STACK[0x6C0]) = v797;
  LODWORD(STACK[0x6A8]) = v796;
  LODWORD(STACK[0x5DC]) = v801 ^ 0x12A8F6B9;
  LODWORD(STACK[0x5E8]) = v766;
  LODWORD(STACK[0x5E0]) = v808;
  v810 = (v796 ^ 0x12A8F6B9) & (v797 ^ 0x12A8F6B9) ^ (v801 ^ 0x12A8F6B9) & (v796 ^ v797) ^ v808 & v805 ^ v766 & v805 ^ v808 & v766;
  LODWORD(STACK[0x634]) = v810;
  LODWORD(v546) = v546 ^ 0x7E432E2C;
  v811 = v458 - 2 * ((v458 + 230649896) & 0xBA4E8D4 ^ v458 & 4) + 1499748600;
  v812 = v785 ^ v811;
  LODWORD(STACK[0x668]) = ((v812 ^ 0xED79C1F6) + (v812 ^ 0x12863E09 ^ v807 ^ (v755 >> 22)) + 1) ^ ((v811 ^ 0x745B172F)
                                                                                                 + (v807 ^ (v755 >> 22) ^ 0x8BA4E8D0 ^ v811)
                                                                                                 + 1) ^ ((v546 ^ v804 ^ 0x6F4AB134) + (v807 ^ (v755 >> 22) ^ 0x90B54ECB ^ v546 ^ v804) + 1);
  LODWORD(STACK[0x630]) = v791;
  v813 = ((v787 + 717728035 - ((v790 + 765640882) & 0x216A9D96) - 947474652) ^ v546) + 2 * v791 + 151637772;
  v814 = v813 - 1269321897 - ((2 * v813) & 0x68AF5EAE);
  v815 = v458 + v784;
  LODWORD(STACK[0x640]) = v458 + v784;
  v816 = ((2 * ((v812 ^ 0x12863E09) + 2 * v815 + 439389224)) & 0xFEAEFEFE)
       + (((v812 ^ 0x12863E09) + 2 * v815 + 439389224) ^ 0xFF577F7F);
  LODWORD(v546) = ((v787 + 1964737359) ^ v810 ^ v814 ^ 0xB457AF57)
                - 544407786
                - 2
                * (((v787 + 1964737359) ^ v810 ^ v814 ^ 0xB457AF57) & 0x5F8CFF1E ^ ((v787 + 1964737359) ^ v810 ^ v814) & 8);
  LODWORD(STACK[0x65C]) = (-11042945 - v816 + ((v816 + 11042945) ^ v809)) ^ ((v809 ^ (v458 - 515773957))
                                                                           - v458
                                                                           + 515773957) ^ ((v546 ^ 0x207300E9)
                                                                                         + (v809 ^ 0xDF8CFF16 ^ v546)
                                                                                         + 1);
  v817 = v791 + v787 + 717728035;
  LODWORD(v546) = ((2 * ((v814 ^ 0xB457AF57) - v817 + 824655438)) & 0x51AFFFDE)
                + (((v814 ^ 0xB457AF57) - v817 + 824655438) ^ 0xA8D7FFEF);
  v818 = v815 + v458;
  v819 = v815 + v458 + 657571437;
  v820 = v816 - v819;
  LODWORD(v458) = v816 - (v815 + 657571437) - 1981807084;
  v821 = ((v816 - (v815 + 657571437) + 448919770) ^ (v780 - v819 - 1975257874))
       - 2018490405
       - ((2 * ((v816 - (v815 + 657571437) + 448919770) ^ (v780 - v819 - 1975257874))) & 0xF608FB6);
  v822 = v458 + v820 - 1792104865 + (~(2 * (v458 + v820) - 1799093430) | 0x6A66B68D);
  v823 = v789 + v546 + 1475258367;
  LODWORD(v458) = (v823 + 1233990206) ^ (v775 - v817 + 823408667);
  v824 = v823 + v546 - 1164861034;
  v825 = STACK[0x690];
  LODWORD(STACK[0x698]) = ((v458 + (LODWORD(STACK[0x690]) ^ 0xDB1E313B)) ^ 0xDBE7F67F)
                        + 664790047
                        + ((2 * (v458 + (LODWORD(STACK[0x690]) ^ 0xDB1E313B))) & 0xB7CFECFE);
  v826 = v817 - ((2 * v817 + 2109636394) & 0x79D23660);
  v827 = v546 - ((2 * v546 + 105212338) & 0x505DE6A) - 1515871218;
  v828 = v827 ^ v825 ^ (v824 - ((2 * v824 - 867753614) & 0xB63C6276) - 1052655116);
  v829 = v820 - ((2 * v820 + 183863118) & 0xE6485C60) + 2023682519;
  v830 = v818 - ((2 * v819 + 241032970) & 0xF608FB6);
  v831 = ((2 * (v458 - 1228702806)) & 0xF97BE65A) + ((v458 - 1228702806) ^ 0xFCBDF32D);
  LODWORD(STACK[0x6A0]) = (v821 ^ 0x784FB824)
                        - 565307477
                        + (((v822 ^ 0x35335B46) + (LODWORD(STACK[0x654]) ^ 0x9FF53A9C ^ v822) + 1) ^ ((v829 ^ 0xCDBD1CF) + (LODWORD(STACK[0x654]) ^ 0xA61DB015 ^ v829) + 1) ^ ((v828 ^ 0xFD7D10CA) + (LODWORD(STACK[0x654]) ^ 0x57BB7110 ^ v828) + 1));
  v832 = v831 + 54660307 + ((v824 - ((2 * v824 + 71770482) & 0x505DE6A) - 391741458) ^ v827);
  v833 = v832 - 453068865 - ((2 * v832) & 0xC9FD6F7E);
  v834 = v821 ^ (v830 - 435096115);
  v821 ^= 0x87B047DB;
  v835 = ((v821 - 1228702806) ^ 0xCDDEDBD5) + 2134844928 + ((2 * (v821 - 1228702806)) & 0x9BBDB7AA);
  v836 = v831 + v546;
  v837 = (((v826 - 70755643) ^ 0xBCE91B30 ^ v458) + v458) ^ (v546 + 918422227);
  LODWORD(v546) = ((2 * v837) & 0xD7EF9BF8) + (v837 ^ 0x6BF7CDFC);
  v838 = (v836 - ((2 * v836 + 872423244) & 0x2551ED72) + 1286145631) ^ v545 ^ v833;
  v839 = ((2 * ((v834 + v821) ^ (v820 + 420876705))) & 0xBDDDCBAE) + ((v834 + v821) ^ (v820 + 420876705) ^ 0xDEEEE5D7);
  v840 = v820 + v835;
  v841 = (v829 ^ 0x39E88A89 ^ v822) + v835;
  v842 = ((2 * (v821 - 2138462770)) & 0x7FAEDFF6) + ((v821 - 2138462770) ^ 0xBFD76FFB);
  v843 = LODWORD(STACK[0x660]) ^ 0xC67C01E4;
  v844 = v843 ^ (v840 - 872935476);
  v845 = v843 ^ (v841 - 1293812181);
  v840 += 1140982674;
  v846 = v839 + v840 - ((2 * (v839 + v840) + 1376668870) & 0x72659852);
  v841 -= 171987238;
  v847 = (v844 - v840 + 2013918150) ^ (v845 - v841 + 1121824943) ^ ((v838 ^ 0x1B014840)
                                                                  + (LODWORD(STACK[0x660]) ^ 0x2282B65B ^ v838)
                                                                  + 1);
  LODWORD(v458) = v458 - ((2 * v458 + 18041756) & 0x18507596) - 1934499687;
  v848 = ((2 * v458) & 0xABD8FBBE ^ 0x8B98EB92) + (v458 ^ 0x1A330A16);
  v849 = v546 + v836;
  LODWORD(STACK[0x654]) = v849;
  LODWORD(STACK[0x660]) = v848;
  v850 = (v546 - v848 - 369840157) ^ (v849 - 838319702);
  LODWORD(STACK[0x690]) = v850;
  LODWORD(v545) = (v545 ^ 0x12A8F6B9) + v798 + (v458 ^ 0xC283ACB) - 1049022566 + v850;
  LODWORD(v546) = v545 - ((2 * v545) & 0x16131838);
  v851 = ((2 * (v842 + 1076400133)) & 0x47CDF9EE ^ 0x7CC9804) + ((v842 + 1076400133) ^ 0xE011B1F5);
  v852 = ((2 * ((v846 + 1647964812) ^ (v839 - v851 - 990374112))) & 0x67FE3F76 ^ 0x62641852)
       + ((v846 + 1647964812) ^ (v839 - v851 - 990374112) ^ 0x8ACDD392);
  LODWORD(STACK[0x610]) = v852;
  LODWORD(STACK[0x648]) = ((v458 ^ 0xF3D7C534) + (v833 ^ 0xE4FEB7BF) + 1) ^ (((2 * v458) & 0xABD8FBBE ^ 0x8B98EB92)
                                                                           + (v458 ^ 0x1A330A16)
                                                                           + 1746028557);
  v853 = 662 * ((v546 + LODWORD(STACK[0x5C4])) >> 28) + 439568;
  LODWORD(STACK[0x650]) = ((2 * (((v846 + 1647964812) ^ 0xB932CC29) + 1571000102)) & 0xFF7BDF7C)
                        + ((((v846 + 1647964812) ^ 0xB932CC29) + 1571000102) ^ 0x7FBDEFBE);
  LODWORD(STACK[0x614]) = (v851 + 437766389) ^ (v841 - v842 + 2096742220);
  v854 = v546 - 1962308580;
  LODWORD(v546) = 662 * (((v546 - 1962308580) >> 24) & 0xF ^ 0xB) + 439568;
  v855 = STACK[0x718];
  LODWORD(v546) = ((*(unsigned __int8 *)(STACK[0x718]
                                       + (v546
                                                      - 965 * ((4450744 * (unint64_t)v546) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (v853 - 965 * ((4450744 * (unint64_t)v853) >> 32))) ^ 0x6B) << 12);
  v856 = v800
       - v842
       - v852
       + v847
       + 974179493
       - 1243945862
       - ((2 * (v800 - v842 - v852 + v847 + 974179493)) & 0x6BB5C8F4);
  v857 = 662 * (HIWORD(v854) & 0xF ^ 9) + 439568;
  v858 = 662 * (((unsigned __int16)v854 >> 12) ^ 8) + 439568;
  LODWORD(v546) = ((v546 | *(unsigned __int8 *)(STACK[0x718]
                                                            + (v857
                                                                           - 965
                                                                           * ((4450744 * (unint64_t)v857) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v854 >> 20) & 0xF) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v854 >> 20) & 0xF) + 439568)) >> 32))) ^ 0x6B) << 12);
  v859 = 662 * ((v854 >> 8) & 0xF ^ 0xC) + 439568;
  v860 = v859 - 965 * ((4450744 * (unint64_t)v859) >> 32);
  v861 = 662 * ((v854 >> 4) ^ 1) + 439568;
  v862 = ((v546 | *(unsigned __int8 *)(STACK[0x718] + v860) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (v858 - 965 * ((4450744 * (unint64_t)v858) >> 32))) ^ 0x6B) << 12);
  LODWORD(v546) = *(unsigned __int8 *)(STACK[0x718]
                                     + (662 * (v854 & 0xF ^ 0xC)
                                                    + 439568
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * (v854 & 0xF ^ 0xC) + 439568)) >> 32))) ^ 0x6B;
  LODWORD(v546) = (((v546 + 90871227 - ((2 * v546) & 0x77777777)) ^ 0xFA956A44) + 1) ^ (v546
                                                                                      + 90871227
                                                                                      - ((2 * v546) & 0x77777777)) ^ (v862 - ((v546 + 90871227 - ((2 * v546) & 0x77777777)) ^ 0x56A95BB | v862));
  v863 = (v546 ^ 0x56A95BB) + v862 - ((2 * ((v546 ^ 0x56A95BB) + v862)) & 0x2C2530B4);
  v864 = 662 * (HIBYTE(v856) & 0xF ^ 5) + 439568;
  v865 = 662
       * ((((((2 * v856) ^ 0x944A370B)
           + (v856 ^ 0xB5DAE47A)
           - ((2 * (((2 * v856) ^ 0x944A370B) + (v856 ^ 0xB5DAE47A))) & 0xF4)
           + 122) ^ v856) & 0x298)
        + ((v856 >> 20) & 0xF ^ 0xD));
  v866 = ((*(unsigned __int8 *)(STACK[0x718] + (v864 - 965 * ((4450744 * (unint64_t)v864) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v856 >> 28) ^ 0xB) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v856 >> 28) ^ 0xB) + 439568)) >> 32))) ^ 0x6B) << 12);
  v867 = 662 * (HIWORD(v856) & 0xF ^ 0xA) + 439568;
  v868 = v866 | *(unsigned __int8 *)(STACK[0x718]
                                   + (v867 - 965 * ((4450744 * (unint64_t)v867) >> 32))) ^ 0x6B;
  v869 = 662 * (((unsigned __int16)v856 >> 12) ^ 0xE) + 439568;
  v870 = 662 * ((v856 >> 8) & 0xF ^ 4) + 439568;
  v871 = (v868 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                            + (v865 - 965 * ((4450744 * (unint64_t)v865) >> 32))) ^ 0x6B) << 12);
  v872 = 662 * ((v856 >> 4) ^ 7) + 439568;
  v873 = v872 - 965 * ((4450744 * (unint64_t)v872) >> 32);
  v874 = v871 | *(unsigned __int8 *)(STACK[0x718]
                                   + (v870 - 965 * ((4450744 * (unint64_t)v870) >> 32))) ^ 0x6B;
  LODWORD(v458) = (v874 << 8) + 1907200932 - ((v874 << 9) & 0xE35B2600);
  v875 = *(unsigned __int8 *)(STACK[0x718]
                            + (662 * (v856 & 0xF ^ 0xA)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v856 & 0xF ^ 0xA) + 439568)) >> 32))) ^ 0x6B;
  v876 = v875 - 1369819679 - ((2 * v875) & 0xFFFFFFC3);
  v877 = v458 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v869 - 965 * ((4450744 * (unint64_t)v869) >> 32))) ^ 0x6B) << 12);
  v878 = (v877 ^ 0x71AD93A4 | v876 ^ 0xAE5A35E1) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + v873) ^ 0x6B));
  LODWORD(v546) = ((((v546 & 1) + (v546 & 0xF ^ 0x389CFE8B)) | 0x81630060) - ((v546 & 0xF ^ 0x389CFE8B) & STACK[0x5C0])) ^ 0xEA4182F3;
  LODWORD(v546) = (((2 * v546) | 0x6C1150E) - v546 - 56658567) ^ 0x50D2A295;
  v879 = 662
       * (((v546 | (16 * (v876 & 0xF)) ^ 0x10)
         - 1351652414
         - 2 * ((v546 | (16 * (v876 & 0xF)) ^ 0x10) & 0x2F6F6BC7 ^ v546 & 5)) ^ 0xAF6F6BC2);
  v880 = *(unsigned __int8 *)(STACK[0x718] + (v879 + 466048) % 0x3C5);
  v881 = v879 % 0x3C5;
  v882 = LODWORD(STACK[0x5F0]) ^ 0x7A702EDB;
  v883 = 662 * (v880 ^ v882);
  v884 = *(unsigned __int8 *)(STACK[0x718] + v883 % 0x3C5) >> 4;
  v885 = ((v884 ^ 6) + ((2 * ((v884 ^ 6 | 0x7B) ^ v884)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v881);
  v886 = 662 * v885 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v885 + 466048)) >> 32);
  LODWORD(v794) = v863 - 1777166246;
  v887 = (v863 - 1777166246) ^ (16
                              * (*(unsigned __int8 *)(STACK[0x718]
                                                    + (v861
                                                                   - 965 * ((4450744 * (unint64_t)v861) >> 32))) ^ 0x6B));
  v888 = ((v887 >> 4) ^ 0xFDB87DD1) & 0x49A44698 ^ 0xBD319EC9 ^ (1120821554
                                                               - (((v887 >> 4) ^ 0xFDB87DD1) & 0x9200685 | 0x42CE6132)
                                                               + (((v887 >> 4) ^ 0xFDB87DD1) & 0x40844012 | 0xBD319ECD));
  v889 = 662 * (((v888 | v878 & 0xF0) - 1980330363 - ((2 * (v888 | v878 & 0xF0)) & 0x13ED1D0A)) ^ 0x89F68E85);
  v890 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v889 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718] + v886) ^ 0x6B)) ^ 0x6B);
  v891 = v890 + 466048 - 965 * (((8901487 * (unint64_t)(v890 + 466048)) >> 32) >> 1);
  v892 = *(unsigned __int8 *)(STACK[0x718] + (v890 - 965 * ((4450744 * (unint64_t)v890) >> 32))) >> 4;
  v893 = ((v892 ^ 6) + ((2 * ((v892 ^ 6 | 0x7B) ^ v892)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v889 % 0x3C5);
  v894 = (v887 >> 8) ^ 0x2E55F621;
  v895 = (v894 & 0x2470A1C1) + 1806565457 - ((2 * v894) & 0x40400080);
  v896 = v894 & 0x2470A1CE;
  v897 = *(unsigned __int8 *)(STACK[0x718] + (v883 + 466048) % 0x3C5);
  LOBYTE(v894) = v897 ^ 0x6B;
  v898 = ((v897 ^ 0x6B) - ((2 * v897) & 0x100) - 1259561344) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + v891) ^ 0x6B));
  v899 = v896 ^ 0x6BAE0051 ^ (v895 + 7);
  v900 = 662
       * (((v899 | (v878 >> 4) & 0xF0) + 668862589 - ((2 * (v899 | (v878 >> 4) & 0xF0)) & 0x4FBC10FA)) ^ 0x27DE087D);
  v901 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v900 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (662 * v893 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v893 + 466048)) >> 32))) ^ 0x6B)) ^ 0x6B);
  v902 = v901 + 466048 - 965 * (((8901487 * (unint64_t)(v901 + 466048)) >> 32) >> 1);
  v903 = (*(unsigned __int8 *)(STACK[0x718] + (v901 - 965 * ((4450744 * (unint64_t)v901) >> 32))) >> 4) ^ 6;
  v904 = 662 * ((v903 - ((2 * v903) & 0xF7) + 107) ^ *(unsigned __int8 *)(STACK[0x718] + v900 % 0x3C5))
       + 466048;
  v905 = ((v877 >> 8) & 0xF0 | ((unsigned __int16)v794 >> 12)) ^ 0x99;
  v906 = 662 * ((v905 - 553671077 - 2 * (v905 & 0x5F ^ (v794 >> 12) & 4)) ^ 0xDEFFA65B);
  v907 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v906 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v904 - 965 * ((4450744 * (unint64_t)v904) >> 32))) ^ 0x6B)) ^ 0x6B);
  v908 = v907 - 965 * ((4450744 * (unint64_t)v907) >> 32);
  v909 = ((*(unsigned __int8 *)(STACK[0x718]
                              + v907
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v907 + 466048)) >> 32) >> 1)) ^ 0x6B) << 12) ^ ((*(unsigned __int8 *)(STACK[0x718] + v902) ^ 0x6B) << 8);
  v910 = *(unsigned __int8 *)(STACK[0x718] + v908) >> 4;
  v911 = 662
       * (((v910 ^ 6) + ((2 * ((v910 ^ 6 | 0x7B) ^ v910)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v906 % 0x3C5))
       + 466048;
  v912 = ((v877 >> 12) & 0xF0 | WORD1(v794) & 0xF) ^ 0xD2;
  v913 = 662 * ((v912 - 502104943 - ((2 * v912) & 0x122)) ^ 0xE2127C91);
  v914 = v913 % 0x3C5;
  v915 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v913 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v911 - 965 * ((4450744 * (unint64_t)v911) >> 32))) ^ 0x6B)) ^ 0x6B);
  v916 = v915 + 466048 - 965 * (((8901487 * (unint64_t)(v915 + 466048)) >> 32) >> 1);
  v917 = *(unsigned __int8 *)(STACK[0x718] + (v915 - 965 * ((4450744 * (unint64_t)v915) >> 32))) >> 4;
  v918 = 662
       * (((v917 ^ 6) + ((2 * ((v917 ^ 6 | 0x7B) ^ v917)) ^ 5) + 108) ^ *(unsigned __int8 *)(STACK[0x718] + v914))
       + 466048;
  v919 = (WORD1(v458) & 0xF0 | (v794 >> 20) & 0xF) ^ 0xA1;
  v920 = 662 * ((v919 + 1723766037 - ((2 * v919) & 0x2A)) ^ 0x66BE9515);
  v921 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v920 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v918 - 965 * ((4450744 * (unint64_t)v918) >> 32))) ^ 0x6B)) ^ 0x6B);
  v922 = v921 + 466048 - 965 * (((8901487 * (unint64_t)(v921 + 466048)) >> 32) >> 1);
  v923 = (*(unsigned __int8 *)(STACK[0x718] + (v921 - 965 * ((4450744 * (unint64_t)v921) >> 32))) >> 4) ^ 6;
  v924 = 662 * ((v923 - ((2 * v923) & 0xF7) + 107) ^ *(unsigned __int8 *)(STACK[0x718] + v920 % 0x3C5))
       + 466048;
  v925 = ((v458 >> 20) & 0xF0 | BYTE3(v794) & 0xF) ^ 0x16;
  v926 = 662 * ((v925 - 196526728 - ((2 * v925) & 0xF0)) ^ 0xF4493D78);
  v927 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v926 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v924 - 965 * ((4450744 * (unint64_t)v924) >> 32))) ^ 0x6B)) ^ 0x6B);
  v928 = v927 + 466048 - 965 * (((8901487 * (unint64_t)(v927 + 466048)) >> 32) >> 1);
  v929 = (*(unsigned __int8 *)(STACK[0x718] + (v927 - 965 * ((4450744 * (unint64_t)v927) >> 32))) >> 4) ^ 6;
  v930 = 662 * ((v929 - ((2 * v929) & 0xF7) + 107) ^ *(unsigned __int8 *)(STACK[0x718] + v926 % 0x3C5))
       + 466048;
  v931 = 662 * ((BYTE3(v458) & 0xF0 | (v794 >> 28)) ^ 0x79) + 466048;
  v932 = 662
       * (*(unsigned __int8 *)(STACK[0x718] + (v931 - 965 * ((4450744 * (unint64_t)v931) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (v930 - 965 * ((4450744 * (unint64_t)v930) >> 32))) ^ 0x6B)) ^ 0x6B)
       + 466048;
  v933 = v932 - 965 * (((8901487 * (unint64_t)v932) >> 32) >> 1);
  v934 = 662 * (v546 | (16 * (v894 & 0xF))) + 218460;
  LODWORD(v546) = 662 * (v888 | v898 & 0xF0 ^ 0x80) + 218460;
  v935 = v898 ^ 0xCDE8AD5 ^ v909;
  v936 = v935 ^ ((*(unsigned __int8 *)(STACK[0x718] + v916) ^ 0x6B) << 16);
  v937 = 662 * ((v935 >> 4) & 0xF0 ^ 0x40 | v899) + 218460;
  v938 = 662 * (((v909 >> 8) & 0xF0 | ((unsigned __int16)v794 >> 12)) ^ 9) + 218460;
  v939 = v938 - 965 * ((4450744 * (unint64_t)v938) >> 32);
  v940 = v936 ^ ((*(unsigned __int8 *)(STACK[0x718] + v922) ^ 0x6B) << 20);
  v941 = 662 * (((v936 >> 12) & 0xF0 | WORD1(v794) & 0xF) ^ 0x22) + 218460;
  v942 = v940 ^ ((*(unsigned __int8 *)(STACK[0x718] + v928) ^ 0x6B) << 24);
  v943 = 662 * ((HIWORD(v940) & 0xF0 | (v794 >> 20) & 0xF) ^ 0x31) + 218460;
  v944 = v943 - 965 * ((4450744 * (unint64_t)v943) >> 32);
  v945 = v942 ^ ((*(unsigned __int8 *)(STACK[0x718] + v933) ^ 0xFFFFFFFB) << 28);
  v946 = 662 * (((v942 >> 20) & 0xF0 | BYTE3(v794) & 0xF) ^ 0x86) + 218460;
  v947 = 662 * ((HIBYTE(v945) & 0xF0 | (v794 >> 28)) ^ 0xB9) + 218460;
  v948 = v947 - 965 * ((4450744 * (unint64_t)v947) >> 32);
  v949 = *(unsigned __int8 *)(STACK[0x718] + v934 % 0x3C5);
  v950 = v949 ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + v546 % 0x3C5) ^ 0x6B));
  LODWORD(v546) = v950 ^ ((*(unsigned __int8 *)(STACK[0x718] + v937 % 0x3C5) ^ 0x6B) << 8);
  v951 = v546 ^ ((*(unsigned __int8 *)(STACK[0x718] + v939) ^ 0x6B) << 12);
  v952 = v951 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v941 - 965 * ((4450744 * (unint64_t)v941) >> 32))) ^ 0x6B) << 16);
  v953 = v952 ^ ((*(unsigned __int8 *)(STACK[0x718] + v944) ^ 0x6B) << 20);
  v954 = v953 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v946 - 965 * ((4450744 * (unint64_t)v946) >> 32))) ^ 0x6B) << 24);
  v955 = 662 * ((v954 ^ ((*(unsigned __int8 *)(STACK[0x718] + v948) ^ 0xFFFFFFFB) << 28)) >> 28) + 454132;
  LODWORD(v546) = *(unsigned __int8 *)(STACK[0x718]
                                     + (662 * ((v546 >> 8) & 0xF)
                                                    + 454132
                                                    - 965
                                                    * ((4450744
                                                      * (unint64_t)(662 * ((v546 >> 8) & 0xF)
                                                                         + 454132)) >> 32))) ^ 0x6B ^ ((((*(unsigned __int8 *)(STACK[0x718] + (662 * (HIBYTE(v954) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v954) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (v955 - 965 * ((4450744 * (unint64_t)v955) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(STACK[0x718] + (662 * (HIWORD(v952) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v952) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (662 * ((v953 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v953 >> 20) & 0xF) + 454132)) >> 32))) ^ 0x6B) << 12) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (662 * ((unsigned __int16)v951 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v951 >> 12) + 454132)) >> 32))) ^ 0x6B));
  v956 = LODWORD(STACK[0x660]) - ((2 * LODWORD(STACK[0x660]) + 546165660) & 0x26F6BEA6);
  v957 = LODWORD(STACK[0x690]) - ((2 * LODWORD(STACK[0x690]) + 15020846) & 0x7376196C);
  v958 = 662 * ((v950 >> 4) ^ 6) + 454132;
  v959 = STACK[0x648];
  LODWORD(STACK[0x690]) = v854 ^ LODWORD(STACK[0x648]);
  LODWORD(STACK[0x660]) = v956 - 1010677471;
  v960 = ((v956 - 1010677471) ^ 0x137B5F53) + v959;
  v961 = v957 - 97671603;
  v962 = (v957 - 97671603) ^ 0x39BB0CB6;
  v963 = LODWORD(STACK[0x654]) + 732680400 + v962;
  LODWORD(STACK[0x62C]) = v960 + v962 + 252069694 - ((2 * (v960 + v962)) & 0x1E0C8E7C);
  v964 = STACK[0x614];
  LODWORD(STACK[0x644]) = *(unsigned __int8 *)(v855
                                             + (662 * (v949 & 0xF ^ 0xB)
                                                            + 454132
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * (v949 & 0xF ^ 0xBu) + 454132)) >> 32))) ^ LODWORD(STACK[0x614]) ^ (16 * (*(unsigned __int8 *)(v855 + (v958 - 965 * ((4450744 * (unint64_t)v958) >> 32))) ^ 0x6B)) ^ ((_DWORD)v546 << 8);
  LODWORD(STACK[0x648]) = v963 + 968559798 - ((2 * v963) & 0x7376196C);
  v965 = v851 - ((2 * v851 + 10016108) & 0x1D74F1E) + 1664619077;
  LODWORD(STACK[0x654]) = v965;
  v966 = v964 + (v965 ^ 0xEBA78F);
  v967 = LODWORD(STACK[0x650]) + LODWORD(STACK[0x610]);
  v968 = LODWORD(STACK[0x610]) - ((2 * LODWORD(STACK[0x610]) + 417788856) & 0x2046E98A);
  LODWORD(STACK[0x650]) = v966
                        - 1938589220
                        + LODWORD(STACK[0x610])
                        - 3033101
                        - ((2 * (v966 - 1938589220 + LODWORD(STACK[0x610]))) & 0xFFA36FE6);
  LODWORD(v545) = LODWORD(STACK[0x640])
                - 2 * LODWORD(STACK[0x628])
                + LODWORD(STACK[0x618])
                + LODWORD(STACK[0x668])
                + LODWORD(STACK[0x65C])
                - 1985583790;
  LODWORD(STACK[0x640]) = v961 ^ 0x29987873;
  v969 = v968 - 675617240 - ((2 * (v968 - 1667830111)) & 0x7647EF0E);
  LODWORD(STACK[0x65C]) = v969;
  v970 = v545 + (v961 ^ 0x29987873) - ((2 * (v545 + (v961 ^ 0x29987873))) & 0x3B5D630E) + 497987975;
  v971 = 662 * (HIBYTE(v970) & 0xF ^ 0xD) + 439568;
  LODWORD(v545) = LODWORD(STACK[0x638])
                + 2 * LODWORD(STACK[0x658])
                + LODWORD(STACK[0x634])
                + LODWORD(STACK[0x624])
                - LODWORD(STACK[0x630])
                + 1671531584
                + (v969 ^ 0xC4DC0878);
  LOBYTE(v546) = v545 - ((2 * v545) & 0xBE);
  LODWORD(STACK[0x668]) = v967 - ((2 * v967 + 426447932) & 0x7647EF0E);
  v972 = 662 * ((v970 >> 20) & 0xF ^ 0xA) + 439568;
  v973 = v972 - 965 * ((4450744 * (unint64_t)v972) >> 32);
  LODWORD(v458) = 662 * (HIWORD(v970) & 0xF ^ 0xE) + 439568;
  v974 = 662 * (((unsigned __int16)v970 >> 12) ^ 0xB) + 439568;
  LODWORD(v458) = ((((*(unsigned __int8 *)(v855 + (v971 - 965 * ((4450744 * (unint64_t)v971) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v855 + (662 * ((v970 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v970 >> 28) ^ 1) + 439568)) >> 32))) ^ 0x6B) << 12) | *(unsigned __int8 *)(v855 + (v458 - 965 * ((4450744 * (unint64_t)v458) >> 32))) ^ 0x6B) << 8) ^ ((*(unsigned __int8 *)(v855 + v973) ^ 0x6B) << 12);
  v975 = 662 * ((v970 >> 8) & 0xF ^ 1) + 439568;
  LODWORD(v458) = v458 | *(unsigned __int8 *)(v855
                                            + (v975 - 965 * ((4450744 * (unint64_t)v975) >> 32))) ^ 0x6B;
  v976 = 662 * ((v970 >> 4) ^ 8) + 439568;
  v977 = v976 - 965 * ((4450744 * (unint64_t)v976) >> 32);
  v978 = *(unsigned __int8 *)(v855
                            + (662 * (v970 & 0xF ^ 7)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v970 & 0xF ^ 7) + 439568)) >> 32)));
  v979 = ((v978 ^ 0x6B) & 2)
       + ((v978 ^ 0x6B) & 0xF ^ 6)
       - (((v978 ^ 0x6B) & 0xF ^ 6) & 2)
       - 1477803184;
  v980 = (v979 & STACK[0x5B8] ^ 0x810282B) + (v979 ^ 0xF76A9354) - ((v979 ^ 0xF76A9354) & 0x1000107F);
  v981 = 662 * (((v546 - 33) >> 4) ^ 0xD) + 439568;
  LOBYTE(v981) = *(_BYTE *)(v855 + (v981 - 965 * ((4450744 * (unint64_t)v981) >> 32))) ^ 0x6B;
  LODWORD(v546) = 662 * ((16 - (_BYTE)v546) & 0xF) + 439568;
  LOBYTE(v546) = *(_BYTE *)(v855 + (v546 - 965 * ((4450744 * (unint64_t)v546) >> 32))) ^ 0x6B;
  LOBYTE(v546) = v546 - ((2 * v546) & 0xEA) + 117;
  LOBYTE(v794) = v546 ^ (16 * v981 - ((32 * v981) & 0x40) - 89);
  LODWORD(v546) = (16 * (v546 & 0xF)) ^ 0x50 | v980 ^ 0x4C902A7F;
  LODWORD(v546) = 662 * ((v546 - 1899929001 - 2 * (v546 & 0xEC1625F ^ (v980 ^ 0x4C902A7F) & 8)) ^ 0x8EC16257);
  v982 = (*(unsigned __int8 *)(v855
                             + 662 * (*(unsigned __int8 *)(v855 + ((int)v546 + 466048) % 0x3C5u) ^ v882)
                             % 0x3C5) >> 4) ^ 6;
  v983 = 662
       * ((v982 - ((2 * v982) & 0xF7) + 107) ^ *(unsigned __int8 *)(v855 + v546 % 0x3C5))
       + 466048;
  v984 = (((((_DWORD)v458 << 8) - 99429882 - (((_DWORD)v458 << 9) & 0xF425A600) + 340) ^ ((*(unsigned __int8 *)(v855 + (v974 - 965 * ((4450744 * (unint64_t)v974) >> 32))) ^ 0x6B) << 12) ^ (16 * (*(unsigned __int8 *)(v855 + v977) ^ 0x6B)) ^ ((v978 ^ 0x6B) - ((2 * v978) & 0x20) + 1783731472)) >> 4) ^ 0xFBF6D799;
  v985 = v984 & 0x98EC5F6 ^ 0x19CA51D5 ^ (-2 - ((~(v984 & 0x698EC5F9) | 0x1948902C) + (v984 & 0x9088028 | 0xE6B76FD3)));
  v986 = 662
       * (*(unsigned __int8 *)(v855
                             + (662
                              * ((((((2 * v985) & 0x6629D930) - v985 + 1290474343) ^ 0x2C69D293 | v794 & 0xF0 ^ 0xD0)
                                - 625409511
                                - 2
                                * (((((2 * v985) & 0x6629D930) - v985 + 1290474343) ^ 0x2C69D293 | v794 & 0xF0 ^ 0xD0) & 0x5AB9021D ^ (((2 * v985) & 0x6629D930) - v985 + 1290474343) & 4)) ^ 0xDAB90219)
                              + 466048)
                             % 0x3C5) ^ (16
                                       * (*(unsigned __int8 *)(v855
                                                             + (v983
                                                                            - 965
                                                                            * ((4450744 * (unint64_t)v983) >> 32))) ^ 0x6B)) ^ 0x6B);
  v987 = *(unsigned __int8 *)(v855
                            + v986
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(v986 + 466048)) >> 32) >> 1)) ^ 0x6B;
  LODWORD(STACK[0x658]) = 16 * v987 - ((32 * v987) & 0xD20);
  LODWORD(STACK[0x698]) += 3032;
  v988 = (LODWORD(STACK[0x660]) ^ 0xB5CEBBBF) - (v961 ^ 0x102374C5 ^ LODWORD(STACK[0x648]));
  v989 = (LODWORD(STACK[0x640]) ^ (v988 - 299609540)) - v988;
  v990 = LODWORD(STACK[0x65C]) ^ (LODWORD(STACK[0x668]) + 1205436837);
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * ((503 * (LODWORD(STACK[0x670]) == 0)) ^ LODWORD(STACK[0x6F8]))) - 4))(LODWORD(STACK[0x670]), (LODWORD(STACK[0x654]) ^ 0xA65E4363) - v990, v990, LODWORD(STACK[0x644]) ^ 0x55399E4Eu, (v961 ^ 0x269E3F4D ^ LODWORD(STACK[0x62C]))+ 299609540- v988- 1310755683- ((2 * ((v961 ^ 0x269E3F4D ^ LODWORD(STACK[0x62C])) + 299609540 - v988)) & 0x63BEE93A), 299609540, v989, (v989 + 608580626), a4, a5, a6, a7, a8, a9, a10,
           v992,
           v993,
           v994,
           v995,
           v996,
           v997,
           v998,
           v999,
           v1000,
           v1001,
           v1002,
           v1003,
           v1004);
}

void sub_18C9E9418(int a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  LODWORD(STACK[0x65C]) = v3;
  v5 = STACK[0x60C];
  v6 = LODWORD(STACK[0x608]) + 1;
  LODWORD(STACK[0x650]) = 1007075041 - a2;
  LODWORD(STACK[0x6D0]) += 208;
  LODWORD(STACK[0x6C8]) += 208;
  LODWORD(STACK[0x60C]) = v5 + 2;
  LODWORD(STACK[0x670]) = a1 - 1;
  LODWORD(STACK[0x6F4]) = v2;
  LODWORD(STACK[0x668]) = STACK[0x6E0];
  LODWORD(STACK[0x6E0]) = v4;
  LODWORD(STACK[0x660]) = STACK[0x6DC];
  LODWORD(STACK[0x608]) = v6;
  LODWORD(STACK[0x6DC]) = STACK[0x678];
  JUMPOUT(0x18C9E6474);
}

uint64_t sub_18C9E94D4@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, int a4@<W6>, char a5@<W7>, int a6@<W8>, __int16 a7, int a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  _BYTE *v49;
  int v50;
  int v51;
  int v52;
  _BYTE *v53;
  unsigned int v54;
  BOOL v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  _BYTE *v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  uint64_t v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;

  v53 = v49;
  LODWORD(STACK[0x65C]) = LODWORD(STACK[0x5E0]) + LODWORD(STACK[0x524]);
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x5DC]) + LODWORD(STACK[0x510]);
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x5E8]) + LODWORD(STACK[0x514]);
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x528]) + LODWORD(STACK[0x5EC]);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x518]) + v45;
  LODWORD(STACK[0x5B4]) += 64;
  LODWORD(STACK[0x6D0]) = LODWORD(STACK[0x4F8]) + LODWORD(STACK[0x6A0]);
  v54 = LODWORD(STACK[0x5B0]) + 817172469;
  LODWORD(STACK[0x6A0]) = (a43 + 1510357149) < 0x86B50C5E;
  LODWORD(STACK[0x658]) = v54 < 0x86B50C5E;
  v55 = a43 + 1510357149 >= v54;
  v56 = STACK[0x600];
  v57 = 35 * (LODWORD(STACK[0x600]) ^ 0xA37);
  LODWORD(STACK[0x640]) = v57;
  v58 = (a3 ^ 0xB1DF749D) - ((2 * (a3 ^ 0xB1DF749D) + 732176814) & 0xF5F71BC4) + (v57 ^ 0x10CD98D4);
  v59 = (v56 - 2480) | 0xB01;
  LODWORD(STACK[0x6F8]) = v59;
  v60 = a6 - (((v59 ^ 0x1FE6CF79) + 2 * v44) & 0x2E52579E);
  v61 = a4 - 2 * ((a4 + 381627250) & 0x30A251BF ^ a5 & 0x14);
  v62 = ((2 * v58) & 0xD45BDE52 ^ 0xD4531A40) + (v58 ^ 0x10D662CB);
  v63 = a1
      + 1603977771
      + ((v60 - 1377282239) ^ 0x17292BCF)
      - 1121620009
      - ((2 * (a1 + 1603977771 + ((v60 - 1377282239) ^ 0x17292BCF))) & 0x7A4ADFAE);
  v61 -= 949912291;
  LODWORD(STACK[0x654]) = v52 ^ 0x3CA45955;
  v64 = (v61 ^ 0x30A251AB)
      + (v52 ^ 0x3CA45955)
      - 2106657107
      - ((2 * ((v61 ^ 0x30A251AB) + (v52 ^ 0x3CA45955))) & 0x4DDED5A);
  LODWORD(STACK[0x650]) = ((v48 ^ 0x86AE641F) + (v50 ^ v48 ^ 0x6BF96D59) + 1) ^ ((v46 ^ 0x78239445)
                                                                               + (v46 ^ v50 ^ 0x95749D03)
                                                                               + 1) ^ ((v47 ^ a3 ^ v43 ^ 0x9137D295)
                                                                                     + (v50 ^ 0x7C60DBD3 ^ v47 ^ a3 ^ v43)
                                                                                     + 1);
  v65 = ((2 * (v62 - ((2 * v62) & 0xC73ECA0C) + 1671390470)) & 0x2FD7F208 ^ 0x2BD70008)
      + ((v62 - ((2 * v62) & 0xC73ECA0C) + 1671390470) ^ 0xCA147958);
  v66 = (v48 ^ 0x79519BE0)
      - 1511535791
      + (v63 ^ 0xBD256FD7)
      - 1966252123
      - ((2 * ((v48 ^ 0x79519BE0) - 1511535791 + (v63 ^ 0xBD256FD7))) & 0x159ABF4A);
  v67 = ((2 * ((v64 ^ 0x826EF6AD) + (v47 ^ 0xC2A44F56))) & 0xD45DEEFC)
      + (((v64 ^ 0x826EF6AD) + (v47 ^ 0xC2A44F56)) ^ 0xEA2EF77E);
  v68 = v65 - ((2 * v65 + 341565010) & 0x270FA936) + 2109064132;
  v69 = v68 ^ v64;
  LODWORD(STACK[0x648]) = v68 ^ v64;
  v70 = (v61 ^ 0xB2CCA706 ^ v64) + (v68 ^ v64 ^ 0xEE16DDC9) + 1;
  v71 = v70 - 703574007 + (~(2 * v70) | 0x53DF5FEF);
  v72 = (v60 - 1377282239) ^ 0xAA0C4418 ^ v63;
  v73 = (v46 ^ 0x39BC8EE0) - ((2 * (v46 ^ 0x39BC8EE0) + 70504538) & 0x1C33E5FE) + 271833900;
  v74 = v63 ^ v73;
  v75 = (v63 ^ v73 ^ 0x4CC362D7) + 1;
  LODWORD(STACK[0x644]) = v75;
  LODWORD(STACK[0x6F4]) = ((v66 ^ 0x7532A05A) + (LODWORD(STACK[0x6F4]) ^ 0x977E4904 ^ v66) + 1) ^ ((v73 ^ 0xF1E60D00)
                                                                                                 + (LODWORD(STACK[0x6F4]) ^ 0x13AAE45E ^ v73)
                                                                                                 + 1) ^ (((v67 - 1145515053) ^ LODWORD(STACK[0x6E0]) ^ (v65 - 366088407) ^ 0xED570946) + (LODWORD(STACK[0x6F4]) ^ 0xF1BE018 ^ (v67 - 1145515053) ^ LODWORD(STACK[0x6E0]) ^ (v65 - 366088407)) + 1);
  v76 = 2 * v67 + 1052326020;
  v77 = (v67 - (v76 & 0x8CF803C8) + 1708695078) ^ LODWORD(STACK[0x678]);
  v78 = v75 + v72 - ((2 * (v75 + v72)) & 0x50254936) + 672310427;
  v79 = v73 ^ 0x260B5664 ^ v78;
  v80 = v66 ^ v74;
  v81 = v78 ^ v66 ^ v74;
  v82 = v68 ^ 0x45978493 ^ v71;
  v83 = v69 ^ (v67 - 1145515053);
  v84 = v71 ^ v83;
  v85 = v67 - (v76 & 0xAA549270);
  v86 = v66 ^ 0x8ACD5FA5;
  v87 = (v66 ^ 0x8ACD5FA5) - ((2 * (v66 ^ 0x8ACD5FA5) + 1195872478) & 0x4B6B9744) + 156865553;
  v88 = v79 + (v81 ^ 0xEE1C99E9) + 1 - ((2 * (v79 + (v81 ^ 0xEE1C99E9) + 1)) & 0x56A945BC) - 1420516642;
  v89 = (v88 ^ 0x54AB5D21) + (LODWORD(STACK[0x6C0]) ^ 0xB9FC5467 ^ v88);
  v90 = v88 ^ v87;
  v91 = v82 + (v84 ^ 0x38068DC1) + 1 - ((2 * (v82 + (v84 ^ 0x38068DC1) + 1)) & 0xF09EE07C) + 2018471998;
  LODWORD(STACK[0x6C0]) = (v89 + 1) ^ ((v87 ^ 0xDA4A345D) + (LODWORD(STACK[0x6C0]) ^ 0x371D3D1B ^ v87) + 1) ^ ((v77 ^ v91 ^ 0x87B08FC1) + (LODWORD(STACK[0x6C0]) ^ 0x6AE78687 ^ v77 ^ v91) + 1);
  v85 -= 192486022;
  v92 = v83 ^ 0xE760D2EE;
  v93 = v91 ^ v85;
  v94 = ((2 * (v92 + (v91 ^ v85 ^ 0xD29AC6F9) + 1)) & 0xDFBBFDFE) + ((v92 + (v91 ^ v85 ^ 0xD29AC6F9) + 1) ^ 0x6FDDFEFF);
  v95 = ((2 * ((v85 ^ 0x552A4938) + 1876819711 - v94)) & 0x6CFEFF84)
      + (((v85 ^ 0x552A4938) + 1876819711 - v94) ^ 0xB67F7FC2);
  v96 = ((2 * ((v80 ^ 0xCF783255) + (v90 ^ 0x711E9683) + 1)) & 0xFEBFFEFE)
      + (((v80 ^ 0xCF783255) + (v90 ^ 0x711E9683) + 1) ^ 0xFF5FFF7F);
  v97 = (v90 ^ 0x8EE1697C ^ (v96 + 10485889)) - 331387946 - ((2 * (v90 ^ 0x8EE1697C ^ (v96 + 10485889))) & 0xD87ED7AC);
  v98 = ((v94 - 1876819711) ^ v93 ^ 0x2D653906)
      + 1709310019
      - 2 * (((v94 - 1876819711) ^ v93 ^ 0x2D653906) & 0x65E20053 ^ ((v94 - 1876819711) ^ v93) & 0x10);
  v99 = v86 - v96 - ((2 * (v86 - v96) - 1109944994) & 0xE6D4DFE0) - 766100833;
  v100 = v53;
  v101 = v98 ^ LODWORD(STACK[0x6DC]) ^ (v95 - ((2 * v95 - 1966012930) & 0x8CF803C8) + 199525603);
  LODWORD(STACK[0x6DC]) = ((v97 ^ 0x13C09429) + (LODWORD(STACK[0x6A8]) ^ 0xFE979D6F ^ v97) + 1) ^ ((v99 ^ 0xC95900F)
                                                                                                 + (LODWORD(STACK[0x6A8]) ^ 0xE1C29949 ^ v99)
                                                                                                 + 1) ^ ((v101 ^ 0x9A1DFFBC) + (LODWORD(STACK[0x6A8]) ^ 0x774AF6FA ^ v101) + 1);
  v102 = v96 - ((2 * v96 - 1228782474) & 0xBDB1308E);
  v103 = v98 ^ v84;
  v98 ^= 0x65E20043u;
  v104 = ((2 * (v95 + 1233158206 + v98)) & 0xAF57FF1A) + ((v95 + 1233158206 + v98) ^ 0xD7ABFF8D);
  v105 = v97 ^ v81;
  v97 ^= 0xEC3F6BD6;
  v106 = (v99 ^ 0xF36A6FF0) + v97 - 679505942 - ((2 * ((v99 ^ 0xF36A6FF0) + v97)) & 0xAEFF1FD4);
  v107 = (v98 - ((2 * v98 + 166307116) & 0x182C9204) + 285940632) ^ v103;
  v108 = (v104 + 607912756) ^ v103;
  v109 = v107 ^ (v104 - ((2 * v104 - 110601310) & 0xAA733C4A) - 772944906) ^ a2;
  v110 = (v97 - 2064330090) ^ v105;
  v111 = v106 ^ v105;
  v112 = (v106 ^ 0xD77F8FEA) - ((2 * (v106 ^ 0xD77F8FEA) + 821056826) & 0x7FB312A6) + 408007664;
  v113 = v111 ^ 0xA04AB0AA ^ v112;
  v114 = (v110 ^ 0xF2F8E7B1) + 1;
  v115 = ((v112 ^ 0x402676AC) + (LODWORD(STACK[0x690]) ^ 0x34D0054F ^ v112) + 1) ^ (v114
                                                                                  + (LODWORD(STACK[0x690]) ^ 0x860E9452 ^ v110)) ^ ((v109 ^ 0x2129D10E) + (LODWORD(STACK[0x690]) ^ 0x55DFA2ED ^ v109) + 1);
  v116 = v94 - ((2 * v94 + 365315446) & 0x2C657EB8) + 18211351;
  v117 = ((2 * ((v116 ^ 0x158A6501) + (v107 ^ 0x2129D10E) + 1)) & 0xF79F77BE)
       + (((v116 ^ 0x158A6501) + (v107 ^ 0x2129D10E) + 1) ^ 0x7BCFBBDF);
  v118 = v102 + 976861826;
  v119 = ((2 * (v114 + (v118 ^ 0xDD60421A))) & 0x7ABF6FCA) + ((v114 + (v118 ^ 0xDD60421A)) ^ 0xBD5FB7E5);
  v120 = (v116 ^ 0xEA759AFE) + 1;
  v121 = ((2 * ((v108 ^ 0x9DA6A643) + v120)) & 0xF3FFFAAE) + (((v108 ^ 0x9DA6A643) + v120) ^ 0xF9FFFD57);
  v122 = v108 ^ v116 ^ 0x541578A0 ^ (((v104 + 2092182993) ^ 0xF0DB158E)
                                   + 1100946849
                                   - ((2 * ((v104 + 2092182993) ^ 0xF0DB158E)) & 0x833E3B42));
  v123 = (v117 - 571671081 + (v116 ^ 0xEA759AFE ^ (v117 - 571671081)) + 1) ^ v120;
  v124 = ((2 * ((v118 ^ 0x229FBDE5) + (v111 ^ 0x151E5614) + 1)) & 0x3FE3FCF2)
       + (((v118 ^ 0x229FBDE5) + (v111 ^ 0x151E5614) + 1) ^ 0x9FF1FE79);
  v125 = ((2 * ((v118 ^ 0xDD60421A) - 1074086811)) & 0xFFBFDEFE) + (((v118 ^ 0xDD60421A) - 1074086811) ^ 0xFFDFEF7F);
  v126 = ((v116 ^ 0x158A6501) - 1692865119 + ~((2 * (v116 ^ 0x158A6501) + 2146793674) & 0xB63C6276)) ^ LODWORD(STACK[0x680]) ^ v122;
  v127 = ((v113 ^ v118 ^ 0x89A928BE ^ 0x6EDD3B06) + (LODWORD(STACK[0x6B4]) ^ 0xC41B5ADC ^ v113 ^ v118 ^ 0x89A928BE) + 1) ^ (-2101377 - v125 + (LODWORD(STACK[0x5F8]) ^ (v125 + 2101377))) ^ ((v126 ^ 0x5DE48D82) + (LODWORD(STACK[0x6B4]) ^ 0xF722EC58 ^ v126) + 1);
  v128 = ((v123 + 1100946849 - ((2 * v123) & 0x833E3B42)) ^ v116 ^ 0x541578A0) + v117;
  v129 = (v122 ^ 0xA21B727D ^ (v128 - 571671081))
       - 214543256
       - ((2 * (v122 ^ 0xA21B727D ^ (v128 - 571671081))) & 0xE66CA8D0);
  v130 = v129 ^ 0xF3365468;
  v131 = ((2 * ((v129 ^ 0xF3365468) - 434367386)) & 0x4F69FAFC) + (((v129 ^ 0xF3365468) - 434367386) ^ 0xA7B4FD7E);
  v132 = (v116 ^ 0x158A6501) - v121;
  v133 = v128 - v132 + (v129 & 0xEA2DEF29 ^ 0x1DDBBBD7) + (v129 & 0xEA2DEF29 ^ 0xF7F654FE) + 2088899900;
  v134 = ((2 * v133) & 0xEB7F7DEE) + (v133 ^ 0xF5BFBEF7);
  v135 = v125 - v124;
  v136 = v119 - ((2 * v119 + 951714722) & 0x5D8E9756) + 1260670332;
  v137 = v136 ^ v118 ^ 0x89A928BE;
  v138 = v136 ^ v113 ^ 0x6B2CE5F6;
  v139 = v135 - 2 * ((v135 + 12967896) & 0x1979E86 ^ v135 & 4) + 2052947546;
  v140 = (v132 - 1834055014) ^ LODWORD(STACK[0x688]) ^ (v131 + 1481310850);
  v141 = ((2 * (v138 - 434367386)) & 0xFE5FFA6C) + ((v138 - 434367386) ^ 0xFF2FFD36);
  LODWORD(STACK[0x6E0]) = ((v139 ^ 0xFE68617D) + (LODWORD(STACK[0x6B8]) ^ 0xDA89AFB9 ^ v139) + 1) ^ (-13632202 - v141 + (LODWORD(STACK[0x6B8]) ^ 0xDB1E313B ^ (v141 + 13632202))) ^ ((v140 ^ 0xAAC661DA) + (LODWORD(STACK[0x6B8]) ^ 0x8E27AF1E ^ v140) + 1);
  v142 = (v137 ^ 0xFA0E210F) - v135;
  v143 = v142 + 169341572 + v141;
  v144 = v124 + v138;
  v145 = v121 + v130;
  LODWORD(STACK[0x534]) += LODWORD(STACK[0x644]) + LODWORD(STACK[0x6F4]);
  LODWORD(STACK[0x524]) = LODWORD(STACK[0x65C]) + (v116 ^ 0x1632BF5C);
  LODWORD(STACK[0x5A8]) = LODWORD(STACK[0x5A8]) - a1 - 1603977771 + LODWORD(STACK[0x650]);
  v146 = LODWORD(STACK[0x4FC]) + (v118 ^ 0x212767B8) + LODWORD(STACK[0x6DC]);
  v147 = LODWORD(STACK[0x500]) + (v137 ^ 0x5F1DEF0) + v127;
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x660]) + (LODWORD(STACK[0x648]) ^ 0x11E92236);
  v148 = !v55;
  if (LODWORD(STACK[0x658]) != LODWORD(STACK[0x6A0]))
    v149 = STACK[0x658];
  else
    v149 = v148;
  LODWORD(STACK[0x6F4]) = v149;
  LODWORD(STACK[0x52C]) += LODWORD(STACK[0x654]) + (v51 ^ 0xFFD1B798);
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x530]) - 571671081 + LODWORD(STACK[0x5FC]) + v128;
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x570]) - 1117800475 - v119 + v115;
  LODWORD(STACK[0x538]) = LODWORD(STACK[0x538]) - 59238006 + LODWORD(STACK[0x698]);
  v150 = LODWORD(STACK[0x508]) + (v80 ^ 0x3087CDAA) + LODWORD(STACK[0x6C0]);
  v151 = v131 + 985011782 + v134 + 130623997;
  v152 = v145 + v131 + 1115635779;
  v153 = v134 + 130623997 - v152;
  v154 = v151 - (v153 - 93074882);
  LODWORD(STACK[0x514]) = LODWORD(STACK[0x668]) + v92;
  LODWORD(STACK[0x528]) = LODWORD(STACK[0x670]) + 171983113 + v134;
  v155 = v144 - v142 + v143;
  v156 = v142 - (v155 + 1731134410);
  v157 = v143 - (v156 - 1439107452);
  v100[473] = v157 - ((2 * v157 + 14) & 0xD6) - 14;
  v100[170] = (v137 ^ 0xF) - (v155 - 54) + 11 - ((2 * ((v137 ^ 0xF) - (v155 - 54) + 11) - 102) & 0xD6) - 72;
  v100[956] = (v151 - (v153 + 62) + 28) ^ 0x3D;
  v100[47] = (v152 + 111) ^ 0x3D;
  LODWORD(STACK[0x518]) = LODWORD(STACK[0x6C8]) + v117 - 2077211615;
  v158 = LODWORD(STACK[0x504]) - v142;
  v100[529] = v155 - 54 + (~(2 * (v155 - 54) + 20) | 0x29) - 10;
  v159 = ((v153 - 424979932) ^ 0xCBAB92E) + 1494505355 - ((2 * ((v153 - 424979932) ^ 0xCBAB92E)) & 0xB228AF16);
  v100[653] = (v132 + v153 + 62 + 7) ^ 0x3D;
  v100[832] = v142 - (v155 - 54) - 124 - ((2 * (v142 - (v155 - 54) - 124) - 22) & 0xD6) - 32;
  v160 = v132
       + v153
       - 93074882
       + v153
       - 708388961
       - ((2 * (v132 + v153 - 93074882 + v153 - 708388961) + 400441624) & 0xBFDD590A)
       + 1809698065;
  v161 = v135 + 1553189511 + v156 - 1439107452 + v156 - 1439107452;
  v162 = v161 - ((2 * v161 + 44862340) & 0x570FA3CC);
  v163 = ((2 * ((v159 ^ 0xA6EBA874) + (v160 ^ 0x5FEEAC85) + 1)) & 0x9DF7DF1E)
       + (((v159 ^ 0xA6EBA874) + (v160 ^ 0x5FEEAC85) + 1) ^ 0xCEFBEF8F);
  v162 += 752752552;
  v164 = v160 ^ (v154 + 823994266);
  v100[709] = v164 ^ 0xB8;
  v165 = v162 ^ (v157 - 1915698939);
  v166 = ((2 * ((v159 ^ 0x5914578B) + 357086072)) & 0xC337FFCE) + (((v159 ^ 0x5914578B) + 357086072) ^ 0xE19BFFE7);
  v100[226] = v162 ^ (v157 + 5) ^ 0x8D;
  v167 = ((v156 - 558316295) ^ 0xCBAB92E) + 961040374 - ((2 * ((v156 - 558316295) ^ 0xCBAB92E)) & 0x72909FEC);
  v168 = ((2 * ((v167 ^ 0xC6B7B009) + (v162 ^ 0x2B87D1E6) + 1)) & 0xF7FC5FDE)
       + (((v167 ^ 0xC6B7B009) + (v162 ^ 0x2B87D1E6) + 1) ^ 0x7BFE2FEF);
  v169 = ((2 * ((v167 ^ 0x39484FF6) + 357086072)) & 0xD1F5FEFE) + (((v167 ^ 0x39484FF6) + 357086072) ^ 0x68FAFF7F);
  v170 = v164 ^ (v152 - 637822122);
  v171 = v165 ^ (v155 + 351660091);
  v100[103] = (v166 + 25) ^ 0x3D;
  v100[282] = v171 ^ 0x8D;
  v100[350] = (v153 + 36) ^ 0x3D;
  v172 = v170 ^ 0x5FEEAC85;
  v173 = ((2 * ((v170 ^ 0x5FEEAC85) + v166 + 509870105)) & 0x7FFEEEDC)
       + (((v170 ^ 0x5FEEAC85) + v166 + 509870105) ^ 0x3FFF776E);
  v100[585] = v169 + (~(2 * v169 + 2) | 0x29) - 19;
  v171 ^= 0x2B87D1E6u;
  v174 = (a10 & (2 * (v171 + v169 - 1761279871))) + ((v171 + v169 - 1761279871) ^ 0xEFFDFFE7);
  v100[888] = v168 - ((2 * v168 + 34) & 0xD6) + 124;
  v175 = ((v163 - 251356925 + v173) ^ (v173 - 1073706862))
       + 1000421123
       - ((2 * ((v163 - 251356925 + v173) ^ (v173 - 1073706862))) & 0x77426E06);
  v176 = ((2 * ((v165 ^ 0x2B87D1E6) + 212972025)) & 0xDFF73B86)
       + (((v165 ^ 0x2B87D1E6) + 212972025) ^ 0x6FFB9DC3)
       - v174;
  v100[765] = v170 ^ 0xB8;
  v100[944] = v176 + (~(2 * v176 + 72) | 0x29) - 112;
  v177 = v171 - 268566553 - v174 - ((2 * (v171 - 268566553 - v174)) & 0xFF47F144);
  v178 = ((v174 + 268566553) ^ (v168 - 1811689430 + v174))
       - 1134751480
       - ((2 * ((v174 + 268566553) ^ (v168 - 1811689430 + v174))) & 0x78BA2210);
  v179 = (v164 ^ 0x5FEEAC85) - v173;
  v100[462] = (v179 + 103) ^ 0x3D;
  v177 += 2141452450;
  v100[406] = (v163 + 113) ^ 0x3D;
  v180 = (v164 ^ 0xA011537A) + 1073706862 + v172 + v179 + 1;
  v100[159] = v175 ^ 0x3E;
  v100[641] = v178 ^ 0x63;
  v100[35] = v177 ^ 0xC9;
  v181 = v175 ^ 0x3BA13703;
  v182 = ((2 * (v179 + 1286678887 + (v175 ^ 0x3BA13703))) & 0xF2F6FADA)
       + ((v179 + 1286678887 + (v175 ^ 0x3BA13703)) ^ 0x797B7D6D);
  v183 = v178 ^ 0xBC5D1108;
  v184 = ((2 * (v176 - 2147327452 + (v178 ^ 0xBC5D1108))) & 0x7FF6F7FA)
       + ((v176 - 2147327452 + (v178 ^ 0xBC5D1108)) ^ 0xBFFB7BFD);
  v185 = v180 - ((2 * v180) & 0x72A6D2AE) - 1185715881;
  v186 = v175 ^ v185;
  v187 = v178 ^ v177;
  v188 = (v186 ^ 0x7D0DA1AB) + v173 - ((2 * ((v186 ^ 0x7D0DA1AB) + v173) - 143867110) & 0xB260EE2E);
  v100[338] = v174 + (~(2 * v174 + 38) | 0x29) + 127;
  v100[518] = v185 ^ 0x6A;
  v189 = (v186 ^ 0x82F25E54)
       - 2038136173
       + v182
       + 790661645
       - ((2 * ((v186 ^ 0x82F25E54) - 2038136173 + v182)) & 0x5E41141A);
  v190 = (v187 ^ 0x3C011655) + v174 - ((2 * ((v187 ^ 0x3C011655) + v174) + 393196072) & 0x50345214);
  v191 = (v187 ^ 0xC3FEE9AA)
       + 1074037763
       + v184
       + 272497876
       - ((2 * ((v187 ^ 0xC3FEE9AA) + 1074037763 + v184)) & 0x207BF9A8);
  v188 += 1424414884;
  v190 -= 204340706;
  v192 = v184 - 2 * ((v184 + 777508576) & 0x3AB9AB96 ^ v184 & 2);
  v193 = v188 ^ (v182 - 1260923536);
  v100[821] = (v173 - 116) ^ 0x3D;
  v194 = v192 - 1458470284;
  v100[697] = -117 - v192;
  v195 = v189 ^ (v181 + 1470844795);
  v196 = v191 ^ (v183 + 1470844795);
  v100[394] = v196 ^ 0xBF;
  v100[877] = v195 ^ 0x30;
  v197 = v194 ^ v190;
  v100[91] = v194 ^ v190 ^ 0xF5;
  v100[753] = v191 ^ 0xBF;
  v100[574] = v188 ^ (v182 + 112) ^ 0x2A;
  v198 = v195 ^ v193;
  v199 = v188 ^ 0x7610FD1A ^ v195;
  v200 = ((2 * ((v195 ^ v193 ^ 0x7610FD1A) + (v189 ^ 0x2F208A0D))) & 0x2E673FBA)
       + (((v195 ^ v193 ^ 0x7610FD1A) + (v189 ^ 0x2F208A0D)) ^ 0x97339FDD);
  v201 = v190 ^ 0xB827D5DE ^ v196;
  v202 = v197 ^ v196;
  v203 = ((2 * ((v202 ^ 0x829E7E4A) + (v191 ^ 0x103DFCD4))) & 0xFFFAE9FE)
       + (((v202 ^ 0x829E7E4A) + (v191 ^ 0x103DFCD4)) ^ 0xFFFD74FF);
  v204 = v199 - 1758224419 - v200 - 1743175917 - ((2 * (v199 - 1758224419 - v200)) & 0x30327E26);
  v100[271] = v189 ^ 0x30;
  v205 = (v191 ^ 0x829E7E4A ^ v197 ^ (v203 + 166657))
       + 1074986790
       - ((2 * (v191 ^ 0x829E7E4A ^ v197 ^ (v203 + 166657))) & 0x8025FE4C);
  v100[215] = (v182 + 112) ^ 0x3D;
  v206 = v201 - 166657 - v203 - 1972450120 - ((2 * (v201 - 166657 - v203)) & 0x14DD9970);
  LOBYTE(v201) = v204 ^ v198;
  v207 = (v193 ^ v189 ^ 0x7610FD1A ^ (v200 + 1758224419))
       - 2054357324
       - ((2 * (v193 ^ v189 ^ 0x7610FD1A ^ (v200 + 1758224419))) & 0xB19FD68);
  v208 = v206 ^ v202;
  v100[933] = v204 ^ 0x2E;
  v100[809] = v205 ^ 0x4D;
  v100[147] = v208 ^ 0x99;
  v209 = v204 ^ v198 ^ 0xEE09C209;
  v204 ^= 0x98193F13;
  v210 = ((2 * (v209 + v204)) & 0xE8FD77BE) + ((v209 + v204) ^ 0x747EBBDF);
  LOBYTE(v204) = ((2 * (v204 - v200 - 35)) & 0xCC) + ((v204 - v200 - 35) ^ 0xE6);
  v100[450] = v206 ^ 0xD3;
  v100[630] = v201 ^ 0x34;
  v100[327] = v207 ^ 0x89;
  v206 ^= 0x8A6ECCB8;
  v211 = ((2 * ((v208 ^ 0x8F0B2F2) + v206)) & 0xE7ADFE34) + (((v208 ^ 0x8F0B2F2) + v206) ^ 0xF3D6FF1A);
  v100[506] = v203 - ((2 * v203 - 82) & 0xD6) + 66;
  v212 = (((v207 ^ 0x858CFEB4) + 1954462687 - v210) ^ (v200 + 1901656862))
       - 401030584
       - ((2 * (((v207 ^ 0x858CFEB4) + 1954462687 - v210) ^ (v200 + 1901656862))) & 0xD0318490);
  v213 = ((2 * (v206 - v203 - 497762519)) & 0xBE77DF14) + ((v206 - v203 - 497762519) ^ 0x5F3BEF8A);
  v100[24] = (v200 - 7) ^ 0x3D;
  v214 = v203 - ((2 * v203 + 287198200) & 0x28453410) + 481411076;
  v215 = ((v205 ^ 0x4012FF26) - 204013798 - v211) ^ v214;
  v100[562] = v215 ^ 0x63;
  v216 = ((2 * ((v214 ^ 0xEBDD65F7) + 204013799 + v211)) & 0xADDFFDFE)
       + (((v214 ^ 0xEBDD65F7) + 204013799 + v211) ^ 0xD6EFFEFF);
  v100[259] = v203 - ((2 * v203 - 106) & 0xD6) - 74;
  v100[203] = v213 - ((2 * v213 + 6) & 0xD6) + 110;
  v215 ^= 0x14229A08u;
  v217 = ((2 * (v215 - 520242382)) & 0x67ED7FFC) + ((v215 - 520242382) ^ 0x33F6BFFE);
  v100[865] = v216 - ((2 * v216 + 2) & 0xD6) + 108;
  v100[686] = (v204 - 47) ^ 0x3D;
  v218 = v212 ^ 0xE818C248;
  v219 = (a8 & (2 * ((v212 ^ 0xE818C248) - 520242382))) + (((v212 ^ 0xE818C248) - 520242382) ^ a9);
  v100[80] = v212 ^ 0x75;
  v220 = v210 - v200;
  LOBYTE(v204) = v210 - v200 - v204;
  v100[742] = (v200 + 109) ^ 0x3D;
  v100[383] = (v210 - v200 + 3) ^ 0x3D;
  v221 = v203 - v216 - 74379636 + v217;
  v100[12] = v221 + ((2 * v221) & 0xD6 ^ 0x7F) + 44;
  v100[439] = (v210 - v200 - 32) ^ 0x3D;
  v100[315] = ((2 * (v215 + 50)) & 0xFC)
            + ((v215 + 50) ^ 0xFE)
            - ((2 * (((2 * (v215 + 50)) & 0xFC) + ((v215 + 50) ^ 0xFE)) + 4) & 0xD6)
            + 109;
  v100[136] = (((2 * (v204 - 2 * ((v204 - 32) & 0xBC ^ v204 & 4) - 104)) & 0x52 ^ 0x50)
             + ((v204 - 2 * ((v204 - 32) & 0xBC ^ v204 & 4) - 104) ^ 0x91)) ^ 0x3D;
  v100[798] = (v219 + 3) ^ 0x3D;
  v222 = v216 - v213;
  v100[618] = v222 - ((2 * v222 - 86) & 0xD6) + 64;
  v223 = v221 + v217 + 139264920 - ((2 * (v221 + v217) + 1988082564) & 0x9A1A4BAC);
  v100[921] = v216 - ((2 * v216 - 68) & 0xD6) + 73;
  v224 = v219 + v200 - v220;
  v100[495] = (v224 + 109) ^ 0x3D;
  LOBYTE(v220) = v204 + v220 - ((2 * (v204 + v220) - 46) & 0x6C);
  LOBYTE(v204) = v219 + v204;
  v225 = v217 + v222;
  v226 = v222 + v216 - ((2 * (v222 + v216) + 1445276006) & 0x9F1127FA);
  v227 = v215 - 756629542;
  v228 = v224 + v219 - ((2 * (v224 + v219) + 821298912) & 0x25DEAD1A) - 1419159043;
  v229 = v228 ^ (v218 - 756629542);
  v230 = v225 - ((2 * v225 + 908244896) & 0x3DE7725C) - 637201154;
  v100[371] = (v225 - ((2 * v225 - 96) & 0x5C) - 2) ^ 0x45;
  v231 = v223 ^ v227;
  v232 = (v223 ^ 0x4D0D25D6) - ((2 * (v223 ^ 0x4D0D25D6) + 2009165766) & 0xB3AFC35A) + 364419472;
  v233 = v232 ^ v230;
  v100[730] = v232 ^ 0xC6;
  LOBYTE(v214) = v231 ^ 0xD6;
  v100[854] = (v204 + 5) ^ 0x3D;
  v234 = (v231 ^ 0x4D0D25D6) + (v232 ^ v230 ^ 0x38DBA77C) + 1;
  LOBYTE(v228) = (v228 ^ 0x8D) - ((2 * (v228 ^ 0x8D) - 58) & 0xDA) + 80;
  LOBYTE(v218) = v228 ^ (v204 + 5);
  v235 = (v234 - ((2 * v234) & 0xB3AFC35A) - 640163411) ^ v232;
  v236 = v229 ^ 0x12EF568D;
  LOBYTE(v219) = ((v229 ^ 0x8D) + (v218 ^ 0x92) + 1) ^ v228;
  v100[248] = v228 ^ 0x50;
  LOBYTE(v204) = v220 + 31;
  LOBYTE(v228) = (v220 + 31) ^ 0xB;
  v100[192] = v228;
  v100[910] = v228;
  v237 = v226 + 2056988848;
  LOBYTE(v226) = (v226 - 80) ^ 0x96;
  v100[674] = v226;
  v100[427] = v226;
  v100[124] = (v233 ^ 0x83) - ((2 * (v233 ^ 0x83) + 38) & 0xD6) + 126;
  v100[607] = ((v218 ^ 0x6D) + 19) ^ 0x3D;
  LOBYTE(v229) = v229 ^ 0xB0;
  v100[551] = v229;
  v100[304] = v229;
  v238 = (v236 - ((2 * v236) & 0xAEu) + 343) & 0x1E3;
  LOBYTE(v231) = v231 ^ 0xBD;
  v100[68] = v231;
  v100[786] = v231;
  LOBYTE(v236) = 2 * (v236 - 121) + ~(v236 - 121);
  LOBYTE(v226) = ((2 * (v214 - 121)) & 0xDE) + ((v214 - 121) ^ 0xEF);
  v100[1] = v219 ^ 0x79;
  LOBYTE(v231) = (v219 ^ 0x44) + ((v220 + 31) ^ 0xB7);
  LOBYTE(v220) = (v218 ^ 0x6D) - ((2 * (v218 ^ 0x6D) + 50) & 0x8A) - 34;
  v100[(v238 ^ 0xA0) + (v238 ^ 0x143)] = v235 ^ 0x42;
  LODWORD(v238) = ((2 * ((v237 ^ 0xEEB8587C) + (v235 ^ 0xAD180829) + 1)) & 0xFAFFF3F6)
                + (((v237 ^ 0xEEB8587C) + (v235 ^ 0xAD180829) + 1) ^ 0xFD7FF9FB);
  v100[663] = v204 ^ 0x93;
  v100[236] = v238 + (~(2 * v238 - 14) | 0x29) + 101;
  LOBYTE(v220) = ((2 * v220) & 0xAE ^ 0x82) + (v220 ^ 0xBE);
  v100[539] = v226 - v238 - 2 * ((v226 - v238 + 24) & 0xEF ^ (v226 - v238) & 4) - 125;
  v100[180] = v237 ^ 0xE;
  v100[360] = (v220 + 41) ^ 0x3D;
  LOBYTE(v218) = v220 + v236 - ((2 * (v220 + v236) + 84) & 0x24);
  v239 = ((2 * ((v233 ^ 0xC7245883) - 847298151)) & 0x73FFF2FE ^ 0x134B6258)
       + (((v233 ^ 0xC7245883) - 847298151) ^ 0xF65A4A53);
  v100[842] = v239 - ((2 * v239 + 2) & 0xD6) - 20;
  LOBYTE(v220) = 123 - v220 - ((-82 - 2 * v220) & 0x48);
  LOBYTE(v214) = (v220 ^ (v231 - 29) ^ 0xA4) + 126 - 2 * ((v220 ^ (v231 - 29) ^ 0xA4) & 0x7F ^ (v220 ^ (v231 - 29)) & 1);
  v100[719] = (v231 - 11) ^ 0x3D;
  LOBYTE(v204) = ((2 * ((v204 ^ 0xAE) + 119 + (v214 ^ 0x81))) & 0x28) + (((v204 ^ 0xAE) + 119 + (v214 ^ 0x81)) ^ 0x94);
  v100[57] = (v236 - v231 + 12) ^ 0x3D;
  v240 = 526893981 - v239 - ((1946153726 - 2 * v239) & 0xCACF943C);
  v100[292] = v240 ^ 0x75;
  v100[416] = (v204 + 108) ^ 0x3D;
  v241 = (v240 ^ 0xE567CA1E ^ (v238 + 2052126695))
       + 18295384
       - ((2 * (v240 ^ 0xE567CA1E ^ (v238 + 2052126695))) & 0x22E54B0);
  LOBYTE(v218) = v218 - 68;
  v100[113] = v218 ^ 0x18;
  v242 = (v241 ^ 0x1172A58) - ((2 * (v241 ^ 0x1172A58)) & 0x1C8);
  LOBYTE(v226) = v226 - 110 + ((2 * ((v233 ^ 0x83) - 103)) ^ 0x58) + (((v233 ^ 0x83) - 103) ^ 0x53);
  v100[595] = v226 ^ 0xDC;
  v100[775] = v220 ^ 0x99;
  LOBYTE(v233) = ((2 * ((v220 ^ 0x5B) + 109 + v204)) & 0x8E) + (((v220 ^ 0x5B) + 109 + v204) ^ 0x47);
  LOWORD(v237) = (a7 & (2 * ((v237 ^ 0x4C65) + 27255 + (v241 ^ 0xD5A7))))
               + (((v237 ^ 0x4C65) + 27255 + (v241 ^ 0xD5A7)) ^ 0xFBF5);
  v100[898] = v237 - ((2 * v237 + 22) & 0xD6) + 118;
  LOWORD(v204) = v237 + v239;
  v100[472] = v214 ^ 0x43;
  LOBYTE(v220) = (v220 ^ 0x60) + v231;
  v100[(v242 + 740) & 0x3BALL ^ 0x11A | (v242 + 740) & 0x3BALL ^ 0x2A0] = ((v240 ^ 0x1E ^ (v238 - 25))
                                                                         + 88
                                                                         - ((2 * (v240 ^ 0x1E ^ (v238 - 25))) & 0xB0)) ^ 0x33;
  LOWORD(v240) = v238 + (v240 ^ 0xBEDA);
  LOWORD(v239) = v204 + v238;
  LOWORD(v214) = (v204 + v238 - 13336) & 0x86BF ^ (v204 + v238) & 2;
  LOBYTE(v237) = v233 + v231 - ((2 * (v233 + v231) + 34) & 0xF8) - 115;
  LOBYTE(v238) = v220 - v233 - ((2 * (v220 - v233) + 106) & 0xE0) + 37;
  LOWORD(v239) = v239 - 2 * v214 + 21157;
  LOBYTE(v214) = (v218 ^ 0x25) - v220 - v233 + 100 - ((2 * ((v218 ^ 0x25) - v220 - v233 + 100)) & 0x98) - 52;
  v100[707] = v239 ^ 0xD6;
  v100[45] = v240 - ((2 * v240 - 50) & 0xD6) + 82;
  LOBYTE(v218) = (v226 ^ 0xB7) - v240 - v204 - 115 - ((2 * ((v226 ^ 0xB7) - v240 - v204 - 115)) & 0x96) - 53;
  v100[831] = v214 ^ 0xF1;
  v100[169] = (v233 + 46) ^ 0x3D;
  v100[651] = v204 - ((2 * v204 + 2) & 0xD6) + 108;
  LOWORD(v226) = v240 - v204 - ((2 * (v240 - v204) + 18380) & 0x1976);
  v100[348] = v218 ^ 0xA0;
  LOBYTE(v231) = v237 ^ v238;
  v100[225] = v237 ^ 0x41;
  LOBYTE(v240) = v237 ^ v238 ^ 0x17;
  LOWORD(v226) = v226 + 12449;
  LOBYTE(v214) = v237 ^ v238 ^ v214;
  LOWORD(v239) = v239 ^ v226;
  LOBYTE(v237) = v239 ^ v218;
  v100[528] = (v220 - 29) ^ 0x3D;
  LOWORD(v204) = v204 - 30002 + (v239 ^ 0x91D) - ((2 * (v204 - 30002 + (v239 ^ 0x91D))) & 0xB4DE) + 23151;
  LOBYTE(v240) = ((2 * (v233 - 78 + v240)) & 0xD6) + ((v233 - 78 + v240) ^ 0xEB);
  LOBYTE(v218) = (v226 ^ 0xBB) - ((2 * (v226 ^ 0xBB) + 102) & 0xC0) + 19;
  LOBYTE(v238) = (v238 ^ 0x70) - ((2 * (v238 ^ 0x70) + 102) & 0xCC) + 25;
  v100[584] = v214 ^ 0xFD;
  v100[887] = (v240 + 94) ^ 0x3D;
  v100[404] = v204 ^ 4;
  v100[(unsigned __int16)(25919 * ((v204 & 0x3D5B ^ 0x184B) + (v204 & 0x3D5B ^ 0x2510)))] = v237 ^ 0xA6;
  LOBYTE(v233) = ((2 * (v238 ^ v231)) & 0x3E ^ 0x22) + (v238 ^ v231 ^ 0x6E);
  v100[763] = v218 ^ 0x8B;
  v100[460] = v239 ^ 0x76;
  LOBYTE(v226) = v240 + 94;
  LOBYTE(v240) = v214 ^ 0xC0;
  LOBYTE(v214) = v214 ^ 0xC0 ^ v226;
  LOBYTE(v226) = ((2 * (v214 + (v238 ^ 0xE6))) & 0xFA) + ((v214 + (v238 ^ 0xE6)) ^ 0xFD);
  LOBYTE(v220) = ((2 * (v218 ^ v239)) & 0xF6 ^ 0xF2) + (v218 ^ v239 ^ 6);
  LOBYTE(v240) = ((2 * (v240 + 3 + v226)) & 0xFC) + ((v240 + 3 + v226) ^ 0xFE);
  v100[943] = v231 ^ 0x2A;
  LOBYTE(v231) = ((2 * (v204 ^ v237)) & 0xBE ^ 4) + (v204 ^ v237 ^ 0x7D);
  v100[281] = v238 ^ 0xDB;
  LOBYTE(v238) = ((2 * (v214 + 2 + v240)) & 0x7A) + ((v214 + 2 + v240) ^ 0xBD);
  LOBYTE(v239) = ((2 * ((v218 ^ 0xE0) + 33 + v231)) & 0xFA) + (((v218 ^ 0xE0) + 33 + v231) ^ 0xFD);
  LOBYTE(v240) = v240 - v233 - ((2 * (v240 - v233) + 66) & 0x50) - 55;
  LOBYTE(v214) = ((2 * ((v237 ^ 0xCD) + 3 + v239)) & 0xDE) + (((v237 ^ 0xCD) + 3 + v239) ^ 0x6F);
  LOBYTE(v204) = v214 + v231;
  LOBYTE(v231) = v214 + v231 + 0x80;
  LOBYTE(v237) = v231 + v239 - ((2 * (v231 + v239) + 106) & 0xB8) - 111;
  v100[157] = v231 - ((2 * v231 + 100) & 0xD6) - 99;
  LOBYTE(v239) = v214 - v220 - ((2 * (v214 - v220) + 24) & 0x4C) + 50;
  LOBYTE(v231) = v238 + v226 - ((2 * (v238 + v226) - 116) & 0x86) + 9;
  LOBYTE(v220) = v220 - v204 - ((2 * (v220 - v204) - 90) & 0xAE) + 42;
  LOBYTE(v214) = v233 - v238 - ((2 * (v233 - v238) + 60) & 0x1C) + 44;
  v100[213] = v220 ^ 0xBC;
  LOBYTE(v226) = v214 ^ v240;
  v100[819] = v239 ^ 0xCD;
  LOBYTE(v239) = v220 ^ v239;
  v100[640] = (v238 + 67) ^ 0x3D;
  v100[337] = v240 ^ 0x15;
  v100[696] = v214 ^ 0x33;
  LOBYTE(v233) = ((2 * (v214 ^ v240)) ^ 0xB3) + v238 - ((2 * (((2 * (v214 ^ v240)) ^ 0xB3) + v238) - 120) & 0xC2) + 37;
  LOBYTE(v240) = v220 ^ 0xBC ^ v237;
  LOBYTE(v220) = 2 * ((v226 ^ 0x26) - 42) + ~((v226 ^ 0x26) - 42);
  LOBYTE(v204) = ((2 * v239) ^ 0x1D) + v204 - ((2 * (((2 * v239) ^ 0x1D) + v204) + 102) & 0x70) - 21;
  v100[875] = v204 ^ 0x53;
  v100[393] = v233 ^ 0xDC;
  LOBYTE(v239) = ((2 * ((v239 ^ 0x71) - 42)) & 0xEE) + (((v239 ^ 0x71) - 42) ^ 0xF7);
  v100[572] = v239 - ((2 * v239 + 18) & 0xD6) + 116;
  LOBYTE(v240) = v240 - 9 - v239 - ((2 * (v240 - 9 - v239)) & 0xF8) + 124;
  v100[269] = v240 ^ 0x17;
  v100[516] = v237 ^ 0x37;
  LOBYTE(v218) = (v214 ^ v231 ^ 0xFA) - 1 - v220 - ((2 * ((v214 ^ v231 ^ 0xFA) - 1 - v220)) & 0xA) - 123;
  v100[90] = ((v226 ^ 0x26) - 42) ^ 0x3D;
  v100[931] = v237 ^ 0x37;
  v100[752] = v218 ^ 0xB8;
  LODWORD(STACK[0x4FC]) = v146 + 1;
  LODWORD(STACK[0x500]) = v147 + 1;
  LODWORD(STACK[0x508]) = v150 + 1;
  v100[34] = v231 ^ 0xFE;
  v100[449] = v231 ^ 0xFE;
  v100[146] = ((v233 ^ 0xE1) - ((2 * (v233 ^ 0xE1) - 126) & 0x60) - 15) ^ 6;
  v100[22] = v240 ^ v204 ^ 0x13;
  v100[808] = ((v218 ^ 0x7A)
             + v220
             + (v218 ^ v233 ^ 0xA7)
             - ((2 * ((v218 ^ 0x7A) + v220 + (v218 ^ v233 ^ 0xA7)) + 6) & 0x8E)
             + 74) ^ 0x7A;
  v100[505] = v218 ^ v233 ^ 0x65;
  v100[628] = ((v204 ^ 0x38) - 63) ^ 0x60;
  v100[325] = ((v240 ^ 0x83)
             + v239
             + (v240 ^ v204 ^ 0x87)
             - ((2 * ((v240 ^ 0x83) + v239 + (v240 ^ v204 ^ 0x87)) + 22) & 0xC2)
             - 20) ^ 0x8A;
  v100[684] = ((v237 ^ 0x5C) + 126) ^ 0x3B;
  v100[202] = ((v231 ^ 0xC3) - 2 * (((v231 ^ 0xC3) + 126) & 0x27 ^ (v231 ^ 0xC3) & 1) - 92) ^ 0x4B;
  LODWORD(STACK[0x504]) = v158 + 833629444 + LODWORD(STACK[0x6E0]);
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x6D0]) + 565307478;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * (LODWORD(STACK[0x600]) ^ (56 * LODWORD(STACK[0x6F4]))))
                            - 4))();
}

void sub_18C9EC154()
{
  JUMPOUT(0x18C9D80E0);
}

uint64_t sub_18C9EC360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,char a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  unsigned int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  int a98;
  int a99;
  int a100;
  int a101;
  int a102;
  int a103;
  int a104;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unint64_t v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  BOOL v323;
  int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  unint64_t v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  int v375;
  unsigned int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  int v440;
  unsigned int v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  unsigned int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  int v460;
  unsigned int v461;
  int v462;
  unsigned int v463;
  int v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  unsigned int v468;
  int v469;
  int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  int v478;
  int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  unsigned int v500;
  int v501;
  int v502;
  int v503;
  unsigned int v504;
  int v505;
  unsigned int v506;
  int v507;
  unsigned int v508;
  int v509;
  int v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  unsigned int v520;
  int v521;
  int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  int v532;
  unsigned int v533;
  unsigned int v534;
  int v535;
  int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  int v541;
  int v542;
  unsigned int v543;
  int v544;
  unsigned int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  int v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  int v572;
  int v573;
  int v574;
  unsigned int v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  unsigned int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  unsigned int v603;
  int v604;
  int v605;
  unsigned __int8 *v606;
  int v607;
  int v608;
  int v609;
  unsigned int v610;
  unsigned int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  uint64_t v628;
  int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  unsigned int v637;
  int v638;
  int v639;
  int v640;
  uint64_t v641;
  int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  unsigned int v650;
  int v651;
  unsigned int v652;
  unsigned int v653;
  int v654;
  unsigned int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  unsigned int v690;
  int v691;
  int v692;
  unsigned int v693;
  int v694;
  unsigned int v695;
  unsigned int v696;
  int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  int v703;
  unsigned int v704;
  int v705;
  int v706;
  unsigned int v707;
  int v708;
  int v709;
  int v710;
  unsigned int v711;
  unsigned int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  unsigned int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  unsigned int v731;
  int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  int v739;
  int v740;
  int v741;
  unsigned int v742;
  unsigned int v743;
  int v744;
  int v745;
  unsigned int v746;
  int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  int v759;
  unsigned int v760;
  unsigned int v761;
  int v762;
  int v763;
  unsigned int v764;
  int v765;
  unsigned int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  int v777;
  unsigned int v778;
  int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  int v786;
  int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  unsigned int v791;
  int v792;
  unsigned int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  unsigned int v798;
  unsigned int v799;
  unsigned int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  unsigned int v812;
  int v813;
  int v814;
  unsigned int v815;
  int v816;
  unsigned int v817;
  int v818;
  unsigned int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  int v824;
  unsigned int v825;
  unsigned int v826;
  unsigned int v827;
  unsigned int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  int v835;
  unsigned int v836;
  int v837;
  unsigned int v838;
  unsigned int v839;
  int v840;
  unsigned int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  unsigned int v846;
  int v847;
  unsigned int v848;
  int v849;
  int v850;
  int v851;
  unsigned int v852;
  int v853;
  int v854;
  unsigned int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  unsigned int v860;
  int v861;
  int v862;
  int v863;
  int v864;
  unsigned int v865;
  int v866;
  int v867;
  int v868;
  unsigned int v869;
  unsigned int v870;
  unsigned int v871;
  int v872;
  int v873;
  int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  int v879;
  unsigned int v880;
  unsigned int v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  int v885;
  int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  unsigned int v901;
  unsigned int v902;
  unsigned int v903;
  unsigned int v904;
  unsigned int v905;
  unsigned int v906;
  int v907;
  unsigned int v908;
  unsigned int v909;
  unsigned int v910;
  unsigned int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  int v916;
  int v917;
  unsigned int v918;
  int v919;
  int v920;
  int v921;
  int v922;
  int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  unsigned int v929;
  unsigned int v930;
  int v931;
  int v932;
  int v933;
  unsigned int v934;
  unsigned int v935;
  int v936;
  unsigned int v937;
  int v938;
  unsigned int v939;
  unsigned int v940;
  int v941;
  int v942;
  unsigned int v943;
  int v944;
  int v945;
  unsigned int v946;
  int v947;
  int v948;
  int v949;
  int v950;
  unsigned int v951;
  int v952;
  int v953;
  unsigned int v954;
  int v955;
  unsigned int v956;
  unsigned int v957;
  unsigned int v958;
  int v959;
  unsigned int v960;
  unsigned int v961;
  unsigned int v962;
  uint64_t v963;
  unsigned int v964;
  unsigned int v965;
  unsigned int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  int v973;
  unsigned int v974;
  unsigned int v975;
  unsigned int v976;
  unsigned int v977;
  unsigned int v978;
  unsigned int v979;
  unsigned int v980;
  unsigned int v981;
  unsigned int v982;
  unsigned int v983;
  unsigned int v984;
  unsigned int v985;
  int v986;
  unsigned int v987;
  int v988;
  unsigned int v989;
  unsigned int v990;
  int v991;
  unsigned int v992;
  unsigned int v993;
  unsigned int v994;
  unsigned int v995;
  int v996;
  int v997;
  unsigned int v998;
  int v999;
  unsigned int v1000;
  unsigned int v1001;
  unsigned int v1002;
  unsigned int v1003;
  unsigned int v1004;
  unsigned int v1005;
  int v1006;
  int v1007;
  int v1008;
  unsigned int v1009;
  unsigned int v1010;
  unsigned int v1011;
  int v1012;
  int v1013;
  int v1014;
  unsigned int v1015;
  unsigned int v1016;
  int v1017;
  int v1018;
  int v1019;
  unsigned int v1020;
  unsigned int v1021;
  int v1022;
  int v1023;
  int v1024;
  int v1025;
  unsigned int v1026;
  int v1027;
  int v1028;
  int v1029;
  unsigned int v1030;
  unsigned int v1031;
  unsigned int v1032;
  unsigned int v1033;
  int v1034;
  int v1035;
  unsigned int v1036;
  unsigned int v1037;
  unsigned int v1038;
  int v1039;
  unsigned int v1040;
  int v1041;
  int v1042;
  int v1043;
  unsigned int v1044;
  int v1045;
  int v1046;
  int v1047;
  int v1048;
  int v1049;
  int v1050;
  int v1051;
  int v1052;
  unsigned int v1053;
  int v1054;
  unsigned int v1055;
  int v1056;
  int v1057;
  unint64_t v1058;
  int v1059;
  unsigned int v1060;
  int v1061;
  int v1062;
  unsigned int v1063;
  int v1064;
  unsigned int v1065;
  int v1066;
  int v1067;
  unsigned int v1068;
  int v1069;
  int v1070;
  int v1071;
  int v1072;
  int v1073;
  int v1074;
  int v1075;
  int v1076;
  int v1077;
  int v1078;
  int v1079;
  int v1080;
  int v1081;
  int v1082;
  int v1083;
  int v1084;
  int v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  int v1090;
  int v1091;
  unsigned int v1092;
  int v1093;
  int v1094;
  int v1095;
  int v1096;
  unsigned int v1097;
  unsigned int v1098;
  unsigned int v1099;
  int v1100;
  unsigned int v1101;
  unsigned int v1102;
  unsigned int v1103;
  int v1104;
  int v1105;
  unsigned int v1106;
  unsigned int v1107;
  unsigned int v1108;
  int v1109;
  int v1110;
  int v1111;
  unsigned int v1112;
  int v1113;
  unsigned int v1114;
  int v1115;
  int v1116;
  int v1117;
  int v1118;
  int v1119;
  int v1120;
  unsigned int v1121;
  int v1122;
  int v1123;
  unsigned int v1124;
  int v1125;
  unsigned int v1126;
  unsigned int v1127;
  unsigned int v1128;
  int v1129;
  int v1130;
  int v1131;
  unsigned int v1132;
  unsigned int v1133;
  int v1134;
  int v1135;
  int v1136;
  int v1137;
  unsigned int v1138;
  unsigned int v1139;
  int v1140;
  unsigned int v1141;
  unsigned int v1142;
  unsigned int v1143;
  unsigned int v1144;
  unsigned int v1145;
  int v1146;
  unsigned int v1147;
  unsigned int v1148;
  int v1149;
  unsigned int v1150;
  unsigned int v1151;
  unsigned int v1152;
  unsigned int v1153;
  int v1154;
  int v1155;
  unsigned int v1156;
  int v1157;
  unsigned int v1158;
  unsigned int v1159;
  unsigned int v1160;
  int v1161;
  int v1162;
  unsigned int v1163;
  int v1164;
  unsigned int v1165;
  int v1166;
  unsigned int v1167;
  unsigned int v1168;
  int v1169;
  unsigned int v1170;
  int v1171;
  unsigned int v1172;
  unsigned int v1173;
  unsigned int v1174;
  int v1175;
  unsigned int v1176;
  unsigned int v1177;
  unsigned int v1178;
  unsigned int v1179;
  int v1180;
  int v1181;
  unsigned int v1182;
  unsigned int v1183;
  unsigned int v1184;
  unsigned int v1185;
  int v1186;
  int v1187;
  int v1188;
  unsigned int v1189;
  unsigned int v1190;
  int v1191;
  int v1192;
  unsigned int v1193;
  int v1194;
  unsigned int v1195;
  int v1196;
  int v1197;
  unsigned int v1198;
  int v1199;
  int v1200;
  int v1201;
  int v1202;
  unsigned int v1203;
  int v1204;
  int v1205;
  int v1206;
  int v1207;
  int v1208;
  unsigned int v1209;
  int v1210;
  int v1211;
  int v1212;
  int v1213;
  int v1214;
  int v1215;
  int v1216;
  int v1217;
  int v1218;
  unsigned int v1219;
  int v1220;
  unsigned int v1221;
  unsigned int v1222;
  unsigned int v1223;
  unsigned int v1224;
  int v1225;
  int v1226;
  unsigned int v1227;
  unsigned int v1228;
  unsigned int v1229;
  unsigned int v1230;
  unsigned int v1231;
  unsigned int v1232;
  unsigned int v1233;
  int v1234;
  unsigned int v1235;
  int v1236;
  unsigned int v1237;
  int v1238;
  unsigned int v1239;
  unsigned int v1240;
  unsigned int v1241;
  unsigned int v1242;
  unsigned int v1243;
  int v1244;
  unsigned int v1245;
  unsigned int v1246;
  unsigned int v1247;
  unsigned int v1248;
  unsigned int v1249;
  int v1250;
  unsigned int v1251;
  unsigned int v1252;
  int v1253;
  unsigned __int8 *v1254;
  int v1255;
  int v1256;
  unsigned int v1257;
  unsigned int v1258;
  unsigned int v1259;
  unsigned int v1260;
  int v1261;
  unsigned int v1262;
  int v1263;
  unsigned int v1264;
  unsigned int v1265;
  unsigned int v1266;
  int v1267;
  int v1268;
  int v1269;
  int v1270;
  int v1271;
  unsigned int v1272;
  int v1273;
  int v1274;
  unsigned int v1275;
  int v1276;
  unsigned int v1277;
  unsigned int v1278;
  int v1279;
  unsigned int v1280;
  int v1281;
  unsigned int v1282;
  int v1283;
  int v1284;
  int v1285;
  unsigned int v1286;
  unsigned __int8 *v1287;
  int v1288;
  int v1289;
  int v1290;
  int v1291;
  int v1292;
  int v1293;
  int v1294;
  int v1295;
  int v1296;
  int v1297;
  int v1298;
  int v1299;
  int v1300;
  int v1301;
  int v1302;
  int v1303;
  int v1304;
  int v1305;
  int v1306;
  int v1307;
  int v1308;
  int v1309;
  unsigned int v1310;

  v104 = LODWORD(STACK[0x264]) | (LODWORD(STACK[0x260]) << 7);
  v105 = LODWORD(STACK[0x368]) ^ a47;
  LODWORD(STACK[0x630]) = v105;
  LODWORD(STACK[0x638]) = a53 ^ a52;
  v106 = LODWORD(STACK[0x24C]) ^ LODWORD(STACK[0x408]);
  v107 = LODWORD(STACK[0x214]) ^ a99;
  LODWORD(STACK[0x62C]) = a55 ^ a54;
  LODWORD(STACK[0x6B8]) = a73 ^ a74;
  LODWORD(STACK[0x60C]) = a45 - LODWORD(STACK[0x5B4]);
  v108 = a48 ^ (LODWORD(STACK[0x480]) >> 20) ^ (LODWORD(STACK[0x474]) >> 1);
  v109 = ((v108 ^ 0x7961CBA0) + 18478616 - 2 * ((v108 ^ 0x7961CBA0) & 0x119F619 ^ v108 & 1)) ^ LODWORD(STACK[0x450]);
  v110 = (v109 - 894008998 - ((2 * v109) & 0x956D02B4)) ^ LODWORD(STACK[0x448]);
  v111 = (v110 + 674158033 - ((2 * v110) & 0x505DABA2)) ^ LODWORD(STACK[0x458]);
  v112 = (v111 + 2049681425 - ((2 * v111) & 0xF4575022)) ^ LODWORD(STACK[0x454]);
  v113 = (v112 + 655311101 - ((2 * v112) & 0x4E1E81FA)) ^ LODWORD(STACK[0x44C]);
  v114 = (v113 - 1474482169 - ((2 * v113) & 0x503A600E)) ^ a50;
  v115 = (v114 + 154369333 - ((2 * v114) & 0x1266FA6A)) ^ a49;
  v116 = (v115 - 1015101147 - ((2 * v115) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  v117 = (v116 + 614641874 - ((2 * v116) & 0x494561A4)) ^ a51;
  v118 = (v117 - 671840815 - ((2 * v117) & 0xAFE90BA2)) ^ a46;
  v119 = ((a60 ^ (LODWORD(STACK[0x210]) >> 26)) + 1282537114 - ((LODWORD(STACK[0x210]) >> 25) & 0x34)) ^ a101;
  v120 = (v119 + 228620174 - ((2 * v119) & 0x1B40EF1C)) ^ a96;
  v121 = (v120 + 1036966240 - ((2 * v120) & 0x7B9DB2C0)) ^ a104;
  v122 = (v121 - 2084925195 - ((2 * v121) & 0x77521EA)) ^ a97;
  v123 = (v122 - 557814307 - ((2 * v122) & 0x3D80DBBA)) ^ a103;
  v124 = (v123 - 415049373 - ((2 * v123) & 0x4E85B2C6)) ^ a100;
  v125 = (v124 - 952931301 - ((2 * v124) & 0xE66D836)) ^ a95;
  v126 = (v125 - 389248802 - ((2 * v125) & 0x519911BC)) ^ a102;
  v127 = (v126 + 1873241641 - ((2 * v126) & 0x5F4ECC52)) ^ a93;
  v128 = a85 ^ a81 ^ (v127 - 1316389793 - ((2 * v127) & 0x6312F8BE));
  v129 = a94 & 0x17448E2 ^ (LODWORD(STACK[0x210]) >> 3) ^ (v128 & 0xE68BB71D ^ a94 & 0x8BB71D | v128 & 0x197448E2);
  v130 = a84 ^ a83 ^ ((v129 ^ 0x7D80D4) + 1077739170 - 2 * ((v129 ^ 0x7D80D4) & 0x403CFEAB ^ v129 & 9));
  v131 = (v130 >> 21) ^ (v130 >> 27);
  v132 = (2 * LODWORD(STACK[0x210])) ^ (LODWORD(STACK[0x210]) << 6) ^ (LODWORD(STACK[0x210]) << 29) ^ (4 * v130) ^ (v130 << 11) ^ (32 * v130) ^ (4 * v131) ^ (32 * v131) ^ (v131 << 11) ^ 0xB418BF9E;
  v133 = (v132 - 1028967858 - ((2 * v132) & 0x8556649C)) ^ a92;
  v134 = (v133 + 1381803228 - ((2 * v133) & 0xA4B949B8)) ^ LODWORD(STACK[0x20C]);
  v135 = (v134 + 1164920061 - ((2 * v134) & 0x8ADE89FA)) ^ LODWORD(STACK[0x208]);
  v136 = (v135 - 1293054971 - ((2 * v135) & 0x65DB180A)) ^ LODWORD(STACK[0x3C8]);
  v137 = (v136 + 1689347628 - ((2 * v136) & 0xC962CC58)) ^ LODWORD(STACK[0x3BC]);
  v138 = (v137 + 1008858936 - ((2 * v137) & 0x7843EE70)) ^ LODWORD(STACK[0x200]);
  v139 = (v138 + 700382682 - ((2 * v138) & 0x537DFBB4)) ^ LODWORD(STACK[0x3C4]);
  v140 = (v139 - 1684728521 - ((2 * v139) & 0x372A2A6E)) ^ LODWORD(STACK[0x3C0]);
  v141 = (v140 + 1502247261 - ((2 * v140) & 0xB314F2BA)) ^ LODWORD(STACK[0x204]);
  v142 = (v141 + 356636029 - ((2 * v141) & 0x2A83AAFA)) ^ LODWORD(STACK[0x3B0]);
  v143 = (v142 - 859654943 - ((2 * v142) & 0x998569C2)) ^ LODWORD(STACK[0x3B4]);
  v144 = (v143 + 2044278500 - ((2 * v143) & 0xF3B26DC8)) ^ LODWORD(STACK[0x3AC]);
  v145 = (v144 - 29692453 - ((2 * v144) & 0xFC75DBB6)) ^ a98;
  v146 = (v145 + 2007160412 - ((2 * v145) & 0xEF45ACB8)) ^ LODWORD(STACK[0x3B8]);
  v147 = (v146 - 1879659887 - ((2 * v146) & 0x1FED5522)) ^ LODWORD(STACK[0x370]);
  v148 = (v147 - ((2 * v147) & 0x3E78076C) - 1623456842) ^ v130;
  v149 = a69 ^ (a72 >> 21);
  v150 = v131 ^ (8 * a82) ^ (16 * a82) ^ (32 * a82) ^ (a82 << 30) ^ ((v148 ^ 0x9F00EA0A)
                                                                   - 2
                                                                   * ((v148 ^ 0x9F00EA0A) & 0x6EAF0839 ^ v148 & 0x11)
                                                                   - 290519000) ^ (4 * a72) ^ (32 * a72) ^ (a72 << 11) ^ (4 * v149) ^ (32 * v149) ^ (v149 << 11) ^ 0xEC0B33F1;
  v151 = (v150 - 1764675852 - ((2 * v150) & 0x2DA25DE8)) ^ LODWORD(STACK[0x544]);
  v152 = (v151 + 1640387915 - ((2 * v151) & 0xC38CAA96)) ^ LODWORD(STACK[0x378]);
  v153 = (v152 - 1985508972 - ((2 * v152) & 0x134F1328)) ^ LODWORD(STACK[0x53C]);
  v154 = (v153 + 1496427215 - ((2 * v153) & 0xB263559E)) ^ LODWORD(STACK[0x540]);
  v155 = (v154 + 329329469 - ((2 * v154) & 0x2742567A)) ^ LODWORD(STACK[0x3A8]);
  v156 = (v155 + 1629381343 - ((2 * v155) & 0xC23CC5BE)) ^ LODWORD(STACK[0x388]);
  v157 = (v156 - 2134734322 - ((2 * v156) & 0x185141C)) ^ a77;
  v158 = (v157 - 553087724 - ((2 * v157) & 0xBE111A28)) ^ LODWORD(STACK[0x384]);
  v159 = (v158 + 635070466 - ((2 * v158) & 0x4BB4D004)) ^ LODWORD(STACK[0x37C]);
  v160 = (v159 + 539691067 - ((2 * v159) & 0x40561076)) ^ a68;
  v161 = (v160 - 2146622676 - ((2 * v160) & 0x1A4658)) ^ LODWORD(STACK[0x374]);
  v162 = (v161 + 1413627459 - ((2 * v161) & 0xA8847C86)) ^ LODWORD(STACK[0x380]);
  v163 = a72 ^ a41 ^ (((v162 - 617659035 - ((2 * v162) & 0xB65E8ACA)) ^ LODWORD(STACK[0x3A4]))
                    - 2
                    * (((v162 - 617659035 - ((2 * v162) & 0xB65E8ACA)) ^ LODWORD(STACK[0x3A4])) & 0x2481068C ^ (v162 - 617659035 - ((2 * v162) & 0xB65E8ACA)) & 8)
                    - 1535048060);
  v164 = v149 ^ (v163 - ((2 * v163) & 0x24C0225A) + 308285741) ^ (LODWORD(STACK[0x474]) << 12) ^ (LODWORD(STACK[0x474]) << 31) ^ (LODWORD(STACK[0x474]) << 18) ^ a59;
  v165 = v105 ^ (v118 - 397092666 - ((2 * v118) & 0xD0A9B18C));
  v166 = (LODWORD(STACK[0x480]) >> 31) ^ (v165 >> 21) ^ (v165 >> 27);
  v167 = v164 ^ (4 * v165) ^ (32 * v165) ^ (v165 << 11) ^ (4 * v166) ^ (32 * v166) ^ (v166 << 11) ^ 0x99A7E4E1;
  v168 = (v167 - 1075907020 - ((2 * v167) & 0x7FBDEC68)) ^ LODWORD(STACK[0x43C]);
  v169 = (v168 + 975111934 - ((2 * v168) & 0x743E0DFC)) ^ LODWORD(STACK[0x55C]);
  v170 = (v169 - 53156464 - ((2 * v169) & 0xF9A9CB20)) ^ LODWORD(STACK[0x554]);
  v171 = (v170 + 656080334 - ((2 * v170) & 0x4E35FB9C)) ^ a58;
  v172 = (v171 + 55882071 - ((2 * v171) & 0x6A962AE)) ^ LODWORD(STACK[0x46C]);
  v173 = (v172 - 1783238975 - ((2 * v172) & 0x2B6BDD82)) ^ LODWORD(STACK[0x550]);
  v174 = (v173 + 734828898 - ((2 * v173) & 0x579932C4)) ^ a57;
  v175 = (v174 - 1019783913 - ((2 * v174) & 0x866EAA2E)) ^ LODWORD(STACK[0x558]);
  v176 = (v175 - 1332414969 - ((2 * v175) & 0x6129EC0E)) ^ LODWORD(STACK[0x54C]);
  v177 = (v176 + 653938573 - ((2 * v176) & 0x4DF49F1A)) ^ LODWORD(STACK[0x36C]);
  v178 = (v177 - 327383551 - ((2 * v177) & 0xD8F90C02)) ^ a56;
  v179 = (v178 + 1918639684 - ((2 * v178) & 0xE4B83C88)) ^ LODWORD(STACK[0x468]);
  v180 = v165 ^ 0x7D1112B6 ^ (v179 - ((2 * v179) & 0xE47A56A4) + 1916611410);
  LODWORD(STACK[0x6C0]) = (v180 - ((2 * v180) & 0x44BE8B52) + 576669097) ^ v166;
  v181 = STACK[0x4B0];
  v182 = (LODWORD(STACK[0x4B0]) ^ 0x68B36606u) >> ((a61 & 0xE ^ 0xE) + (a61 & 0xE));
  v183 = v182 - 91443772 - ((2 * v182) & 0xF5195B88);
  v184 = (~v183 >> 27) ^ (~v183 >> 30);
  v185 = HIBYTE(LODWORD(STACK[0x4B4])) ^ (LODWORD(STACK[0x4B4]) >> 17) ^ 0x135;
  v186 = v183 ^ (v185 - 91443772 - ((2 * v185) & 0x5B88));
  v187 = (v186 - ((2 * v186) & 0x9BEC640C) - 839503354) ^ a53 ^ a52;
  v188 = (v187 + 25136430 - ((2 * v187) & 0x2FF1A5C)) ^ a65;
  v189 = (v188 + 1055413490 - ((2 * v188) & 0x7DD0A9E4)) ^ a64;
  v190 = (v189 - 1847080652 - ((2 * v189) & 0x23CF9268)) ^ LODWORD(STACK[0x564]);
  v191 = (v190 - 1199326931 - ((2 * v190) & 0x7107725A)) ^ LODWORD(STACK[0x47C]);
  v192 = (v191 + 1089025351 - ((2 * v191) & 0x81D26A8E)) ^ a63;
  v193 = (v192 + 1395749347 - ((2 * v192) & 0xA662E3C6)) ^ a62;
  v194 = (v193 + 2138233577 - ((2 * v193) & 0xFEE5B5D2)) ^ LODWORD(STACK[0x478]);
  v195 = (v194 - 1484203417 - ((2 * v194) & 0x4F11B4CE)) ^ LODWORD(STACK[0x4A4]);
  v196 = (LODWORD(STACK[0x4B0]) >> 9) ^ 0xE2E5778;
  LODWORD(STACK[0x634]) = v196;
  v197 = (v195 + 236588747 - ((2 * v195) & 0x1C341D96)) ^ v196;
  v198 = (v197 + 1968015627 - ((2 * v197) & 0xEA9B1216)) ^ a67;
  v199 = (v198 + 235177029 - ((2 * v198) & 0x1C09088A)) ^ a66;
  v200 = v199 + 935411952 - ((2 * v199) & 0x6F8281E0);
  v201 = STACK[0x59C];
  v202 = (LODWORD(STACK[0x59C]) >> 20) ^ (LODWORD(STACK[0x59C]) >> 1) ^ 0x26F0BBE4;
  v203 = (v202 + 1024639131 - ((2 * v202) & 0x7A258136)) ^ LODWORD(STACK[0x4C0]);
  v204 = (v203 + 45139448 - ((2 * v203) & 0x5618BF0)) ^ LODWORD(STACK[0x4C4]);
  v205 = (v204 + 1545593533 - ((2 * v204) & 0xB83FC57A)) ^ a91;
  v206 = (v205 - 1140868695 - ((2 * v205) & 0x77FF7352)) ^ LODWORD(STACK[0x4D0]);
  v207 = (v206 - 1880198983 - ((2 * v206) & 0x1FDCE172)) ^ LODWORD(STACK[0x4CC]);
  v208 = (v207 - 558656027 - ((2 * v207) & 0xBD672BCA)) ^ LODWORD(STACK[0x4BC]);
  v209 = (v208 - 1687051671 - ((2 * v208) & 0x36E344D2)) ^ a89;
  v210 = (v209 - 569297577 - ((2 * v209) & 0xBC226AAE)) ^ a88;
  v211 = (v210 - 1027250510 - ((2 * v210) & 0x858ACD64)) ^ LODWORD(STACK[0x4B8]);
  v212 = (v211 - 103109627 - ((2 * v211) & 0xF3B5580A)) ^ a90;
  v213 = (v212 - 358220659 - ((2 * v212) & 0xD54BF91A)) ^ a86;
  v214 = a87 ^ LODWORD(STACK[0x4C8]) ^ (v213 - 1875191680 - ((2 * v213) & 0x2075B100));
  v215 = (((LODWORD(STACK[0x2A4]) >> 26) ^ LODWORD(STACK[0x26C]) ^ 0x23)
        + 1717482624
        - 2
        * (((LODWORD(STACK[0x2A4]) >> 26) ^ LODWORD(STACK[0x26C]) ^ 0x23) & 0x1E ^ (LODWORD(STACK[0x2A4]) >> 26) & 0x1C)
        + 2) ^ LODWORD(STACK[0x2A0]);
  v216 = (v215 + 1552977625 - ((2 * v215) & 0x39211DBA) + 4) ^ LODWORD(STACK[0x298]);
  v217 = (v216 - 1094938406 - ((2 * v216) & 0x7D7921B4)) ^ LODWORD(STACK[0x280]);
  v218 = (v217 + 607485716 - ((2 * v217) & 0x486AFE28)) ^ LODWORD(STACK[0x424]);
  v219 = (v218 + 187048751 - ((2 * v218) & 0x164C465E)) ^ LODWORD(STACK[0x27C]);
  v220 = (v219 - 1662919153 - ((2 * v219) & 0x39C3BC1E)) ^ LODWORD(STACK[0x428]);
  v221 = (v220 - 1856673875 - ((2 * v220) & 0x22AACF5A)) ^ LODWORD(STACK[0x278]);
  v222 = (v221 + 540011005 - ((2 * v221) & 0x405FD3FA)) ^ LODWORD(STACK[0x29C]);
  v223 = (v222 - 729373303 - ((2 * v222) & 0x290D4B12)) ^ LODWORD(STACK[0x274]);
  v224 = (v223 - 124159404 - ((2 * v223) & 0xF132F4A8)) ^ LODWORD(STACK[0x410]);
  v225 = (v224 - 1412515023 - ((2 * v224) & 0x579D7662)) ^ LODWORD(STACK[0x268]);
  v226 = v106 ^ (v225 + 690207803 - ((2 * v225) & 0x52477876));
  HIDWORD(v227) = v226 ^ 0x3DEDC6;
  LODWORD(v227) = v226 ^ 0x2000000;
  v228 = (v227 >> 25) ^ v104;
  HIDWORD(v227) = v228 ^ 0x16;
  LODWORD(v227) = v228 ^ 0xC79A0900;
  v229 = (v227 >> 7) - 1428071921 - ((2 * (v227 >> 7)) & 0x55C2B41E);
  v230 = v229 ^ (((LODWORD(STACK[0x2A4]) >> 3) ^ 0x11EF6E33)
               - 1428071921
               - ((2 * ((LODWORD(STACK[0x2A4]) >> 3) ^ 0x11EF6E33)) & 0x15C2B41E));
  v231 = 2 * LODWORD(STACK[0x2A4]);
  v232 = (LODWORD(STACK[0x2A4]) << 6) ^ (LODWORD(STACK[0x2A4]) << 29) ^ v231 ^ (v230 << 11) ^ (32 * v230) ^ (4 * v230) ^ 0xBEC0B174;
  v233 = (v232 - 1887735396 - 2 * (v232 & 0xF7B719E ^ v231 & 2)) ^ LODWORD(STACK[0x2A4]);
  v234 = (v233 - 643548715 - ((2 * v233) & 0xB34873AA)) ^ LODWORD(STACK[0x284]);
  v235 = (v234 - 637422040 - ((2 * v234) & 0xB4036C50)) ^ LODWORD(STACK[0x42C]);
  v236 = (v235 + 894909978 - ((2 * v235) & 0x6AAE7C34)) ^ LODWORD(STACK[0x40C]);
  v237 = (v236 + 900986370 - ((2 * v236) & 0x6B67EC04)) ^ LODWORD(STACK[0x438]);
  v238 = (v237 + 1567566926 - ((2 * v237) & 0xBADE589C)) ^ LODWORD(STACK[0x288]);
  v239 = (v238 - 1877566734 - ((2 * v238) & 0x202D35E4)) ^ LODWORD(STACK[0x290]);
  v240 = (v239 - 326914391 - ((2 * v239) & 0xD9075D52)) ^ LODWORD(STACK[0x434]);
  v241 = (v240 - 342764392 - ((2 * v240) & 0xD723A930)) ^ LODWORD(STACK[0x430]);
  v242 = (v241 - 548956295 - ((2 * v241) & 0xBE8F2EF2)) ^ LODWORD(STACK[0x414]);
  v243 = (v242 - 119338097 - ((2 * v242) & 0xF1C6171E)) ^ LODWORD(STACK[0x41C]);
  v244 = (v243 - 1668093285 - ((2 * v243) & 0x3925D536)) ^ LODWORD(STACK[0x418]);
  v245 = (v244 - 284365264 - ((2 * v244) & 0xDE19DC60)) ^ LODWORD(STACK[0x420]);
  v246 = (v245 - 1413275303 - ((2 * v245) & 0x578642B2)) ^ LODWORD(STACK[0x28C]);
  v247 = (v246 - 770565306 - ((2 * v246) & 0xA424368C)) ^ LODWORD(STACK[0x294]);
  v248 = (v230 >> 27) ^ ((v229 + 0x80000000) >> 30) ^ (v230 >> 21);
  v249 = (v247 - ((2 * v247) & 0xA7A50586) - 741178685) ^ v230;
  v250 = (16 * LODWORD(STACK[0x25C])) ^ (32 * LODWORD(STACK[0x25C])) ^ (LODWORD(STACK[0x25C]) << 30) ^ 0x2CF49DB0;
  v251 = (v250 - 765162173 - ((2 * v250) & 0xA4C91A80)) ^ LODWORD(STACK[0x3E0]);
  v252 = (v251 - 1220429869 - ((2 * v251) & 0x6E836FA6)) ^ LODWORD(STACK[0x3E4]);
  v253 = (v252 - 1775379310 - ((2 * v252) & 0x2C5BB924)) ^ LODWORD(STACK[0x404]);
  v254 = (v253 - 1462124327 - ((2 * v253) & 0x51B381B2)) ^ LODWORD(STACK[0x258]);
  v255 = (v254 - 1698168808 - ((2 * v254) & 0x35900030)) ^ LODWORD(STACK[0x254]);
  v256 = (v255 - 260813814 - ((2 * v255) & 0xE0E89814)) ^ LODWORD(STACK[0x3DC]);
  v257 = (v256 + 469843287 - ((2 * v256) & 0x38027AAE)) ^ LODWORD(STACK[0x234]);
  v258 = (v257 - 2094813738 - ((2 * v257) & 0x6475BAC)) ^ LODWORD(STACK[0x230]);
  v259 = (v258 + 958596883 - ((2 * v258) & 0x72460E26)) ^ LODWORD(STACK[0x400]);
  v260 = (v259 + 1598541004 - ((2 * v259) & 0xBE8F9998)) ^ LODWORD(STACK[0x3D4]);
  v261 = (v260 + 796093881 - ((2 * v260) & 0x5EE6DB72)) ^ LODWORD(STACK[0x3F0]);
  v262 = (v261 + 505246566 - ((2 * v261) & 0x3C3AE6CC)) ^ LODWORD(STACK[0x3D8]);
  v263 = (((LODWORD(STACK[0x25C]) >> 2) ^ 0x1B6EB1D2)
        - 471912138
        - 2 * (((LODWORD(STACK[0x25C]) >> 2) ^ 0x1B6EB1D2) & 0x23DF3137 ^ (LODWORD(STACK[0x25C]) >> 2) & 1)) ^ LODWORD(STACK[0x248]);
  v264 = (v263 + 2031437677 - ((2 * v263) & 0xF22A8EDA)) ^ LODWORD(STACK[0x244]);
  v265 = (v264 + 996543403 - ((2 * v264) & 0x76CC1756)) ^ LODWORD(STACK[0x23C]);
  v266 = (LODWORD(STACK[0x270]) >> 27) ^ (LODWORD(STACK[0x270]) >> 28) ^ LODWORD(STACK[0x3E8]) ^ 0x53A74E48 ^ (v265 - ((2 * v265) & 0x881E4E5C) + 1141843758);
  v267 = (v266 - 1563914425 - ((2 * v266) & 0x45911E8E)) ^ LODWORD(STACK[0x3F8]);
  v268 = (v267 + 728064449 - ((2 * v267) & 0x56CAC382)) ^ LODWORD(STACK[0x238]);
  v269 = (v268 - 1887709524 - ((2 * v268) & 0x1EF7AD58)) ^ LODWORD(STACK[0x22C]);
  v270 = (v269 + 1248803272 - ((2 * v269) & 0x94DE7390)) ^ LODWORD(STACK[0x228]);
  v271 = (v270 + 859120886 - ((2 * v270) & 0x666A49EC)) ^ LODWORD(STACK[0x250]);
  v272 = (v271 - ((2 * v271) & 0xEC6B5372) - 164255303) ^ LODWORD(STACK[0x224]);
  v273 = ((v272 ^ 0xF60374DA) + 1717133756 - 2 * ((v272 ^ 0xF60374DA) & 0x665961BD ^ v272 & 1)) ^ LODWORD(STACK[0x3EC]);
  v274 = v107 ^ (v273 - ((2 * v273) & 0x284DEC12) - 1809385975);
  v275 = (v274 >> 27) ^ (v274 >> 21);
  v276 = v248 ^ (32 * v248) ^ (4 * v248) ^ (v248 << 11) ^ LODWORD(STACK[0x240]) ^ (v262
                                                                                 - 1943496861
                                                                                 - ((2 * v262) & 0x18512EC6)) ^ ((v249 ^ 0xF6AA01C8) - 2 * ((v249 ^ 0xF6AA01C8) & 0x77D99EDF ^ v249 & 1) - 136732962) ^ (32 * v274) ^ (v274 << 11) ^ (32 * v275) ^ (v275 << 11) ^ (4 * (v275 ^ v274));
  v277 = ((v276 ^ 0x7C536E9) + 520274485 - 2 * ((v276 ^ 0x7C536E9) & 0x1F02C237 ^ v276 & 2)) ^ v274;
  v278 = (a70 ^ 0x30000000) - 1150076094 - ((2 * (a70 ^ 0x30000000)) & 0x70000000);
  LODWORD(STACK[0x618]) = v278;
  v279 = (v181 << 8) ^ (v181 << 15) ^ a78 ^ a75 ^ 0x60630600;
  v280 = (v279 + 1250536039 - ((2 * v279) & 0x95135400)) ^ LODWORD(STACK[0x38C]);
  v281 = (v280 - 1449696164 - ((2 * v280) & 0x532EC8B8)) ^ a55 ^ a54;
  v282 = (v281 + 1928199035 - ((2 * v281) & 0xE5DBF6F6)) ^ LODWORD(STACK[0x39C]);
  v283 = (a71 ^ 0x9B303000) + 656802620 - ((2 * (a71 ^ 0x9B303000)) & 0x4E4C0000);
  LODWORD(STACK[0x624]) = v283;
  v284 = (v282 + 656802620 - ((2 * v282) & 0x4E4C0678)) ^ v283;
  v285 = (v284 - 283603516 - ((2 * v284) & 0xDE311B88)) ^ LODWORD(STACK[0x4A8]);
  v286 = (v285 - 180358100 - ((2 * v285) & 0xEA7FE858)) ^ LODWORD(STACK[0x490]);
  v287 = (v286 - 2041490910 - ((2 * v286) & 0xCA2A444)) ^ a79;
  v288 = (v287 - 1782866148 - ((2 * v287) & 0x2B773E38)) ^ LODWORD(STACK[0x488]);
  v289 = (a80 ^ 0x3000000) - 1900548253 - ((2 * (a80 ^ 0x3000000)) & 0x1D000000);
  LODWORD(STACK[0x628]) = v289;
  v290 = (v288 - 1978511814 - ((2 * v288) & 0x14249C74)) ^ LODWORD(STACK[0x56C]);
  v291 = (v290 - 1900548253 - ((2 * v290) & 0x1D6FDEC6)) ^ v289;
  v292 = (v291 + 1577036220 - ((2 * v291) & 0xBBFF5378)) ^ LODWORD(STACK[0x3A0]);
  v293 = (v292 - 406898472 - ((2 * v292) & 0xCF7E71B0)) ^ LODWORD(STACK[0x498]);
  v294 = (v275 | (LODWORD(STACK[0x3D0]) << 31)) ^ (v201 << 12) ^ ((v277 ^ 0x8E924E72)
                                                                + 1169201155
                                                                - 2 * ((v277 ^ 0x8E924E72) & 0x45B0980F ^ v277 & 0xC));
  v295 = LODWORD(STACK[0x4F0]) >> 31;
  LODWORD(STACK[0x614]) = v295;
  v296 = v295 ^ (v214 >> 21) ^ (v214 >> 27);
  v297 = v294 ^ (32 * v214) ^ (4 * v214) ^ (v214 << 11) ^ (4 * v296) ^ (32 * v296) ^ (v296 << 11) ^ v278 ^ (v293 - 1150076094 - ((2 * v293) & 0x76E67684));
  v298 = a76 ^ (v181 >> 5);
  LODWORD(STACK[0x610]) = v298;
  v299 = v298 ^ v200;
  v300 = v184 ^ (v299 >> 21);
  LODWORD(STACK[0x644]) = v300;
  v301 = v297 ^ (4 * v299) ^ (32 * v299) ^ (v299 << 11) ^ (4 * v300) ^ (32 * v300) ^ (v300 << 11) ^ 0x632F2A51;
  v302 = (v301 - 1253584277 - ((2 * v301) & 0x6A8FA4D6)) ^ LODWORD(STACK[0x484]);
  v303 = (v302 + 1217385037 - ((2 * v302) & 0x911FA49A)) ^ LODWORD(STACK[0x5A0]);
  v304 = (v303 + 1656680149 - ((2 * v303) & 0xC57DDDAA)) ^ LODWORD(STACK[0x440]);
  v305 = (v304 + 375871979 - ((2 * v304) & 0x2CCEB3D6)) ^ LODWORD(STACK[0x598]);
  v306 = (v305 + 1842338490 - ((2 * v305) & 0xDB9FB574)) ^ LODWORD(STACK[0x218]);
  v307 = (v306 + 1104295814 - ((2 * v306) & 0x83A46F0C)) ^ LODWORD(STACK[0x5A4]);
  v308 = (v307 - 871306853 - ((2 * v307) & 0x9821D336)) ^ LODWORD(STACK[0x4E0]);
  v309 = (v308 - 1714393117 - ((2 * v308) & 0x33A0DFC6)) ^ LODWORD(STACK[0x590]);
  v310 = (v309 + 1744033714 - ((2 * v309) & 0xCFE7AF64)) ^ LODWORD(STACK[0x220]);
  v311 = (v310 + 1445448351 - ((2 * v310) & 0xAC4F953E)) ^ LODWORD(STACK[0x21C]);
  v312 = (v311 - 850141978 - ((2 * v311) & 0x9AA7B9CC)) ^ LODWORD(STACK[0x594]);
  v313 = (v312 + 1558143912 - ((2 * v312) & 0xB9BEC750)) ^ LODWORD(STACK[0x3CC]);
  v314 = (v313 - 1924192076 - ((2 * v313) & 0x1A9E5168)) ^ LODWORD(STACK[0x580]);
  v315 = (v314 + 1565182520 - ((2 * v314) & 0xBA959470)) ^ LODWORD(STACK[0x58C]);
  v316 = v214 ^ 0xAA1191ED ^ (v315 - ((2 * v315) & 0x5D9F0C14) - 1362131446);
  v317 = v299 ^ v296 ^ (v316 - ((2 * v316) & 0x1D679FC4) + 246665186);
  LODWORD(STACK[0x5EC]) = v317 >> 29;
  v318 = ((v317 >> 29) ^ HIBYTE(v317) ^ 0x5A) + 1190849311 - 2 * (((v317 >> 29) ^ HIBYTE(v317) ^ 0x5A) & 0x1F);
  v319 = v317;
  v320 = (v317 >> 30) ^ 0x46FAEB1E;
  LODWORD(STACK[0x5DC]) = v320;
  LODWORD(STACK[0x5F4]) = v319 >> 25;
  LODWORD(STACK[0x434]) = v319;
  v321 = v320 ^ (v319 >> 25) ^ v318;
  LODWORD(STACK[0x5FC]) = v321;
  v322 = (v321 & 0x10 ^ 0x7D6DF5FA) + 2 * (v321 & 0x10);
  v319 >>= 22;
  LODWORD(STACK[0x5F0]) = v319;
  LODWORD(STACK[0x5F8]) = v319 ^ 0x161;
  v323 = ((v322 + 518) & (v319 ^ 0x161)) == 0;
  v324 = v322 + 65360;
  v325 = 60228 - v322;
  if (v323)
    v325 = v324;
  LODWORD(STACK[0x608]) = v325;
  v326 = STACK[0x5AC];
  LODWORD(STACK[0x688]) = ((4 * LODWORD(STACK[0x5AC])) ^ 0x1ED11640)
                        - 535700055
                        - 2
                        * (((4 * LODWORD(STACK[0x5AC])) ^ 0x1ED11640) & 0x6011DDAC ^ (4 * LODWORD(STACK[0x5AC])) & 4);
  LODWORD(STACK[0x6B4]) = ((8 * v326) ^ 0x3DA22C80)
                        + 2141566351
                        - 2 * (((8 * v326) ^ 0x3DA22C80) & 0x7FA5B598 ^ (8 * v326) & 0x10);
  LODWORD(STACK[0x708]) = ((v326 << 10) ^ 0xD1164000) - 1293277497 - ((2 * ((v326 << 10) ^ 0xD1164000)) & 0x65D44800);
  LODWORD(STACK[0x690]) = ((v326 << 22) ^ 0x64000000) + 1100913726 - ((2 * ((v326 << 22) ^ 0x64000000)) & 0x83000000);
  LODWORD(STACK[0x710]) = ((v326 << 7) ^ 0xDA22C800) + 1115435089 - ((2 * ((v326 << 7) ^ 0xDA22C800)) & 0x84F86000);
  LODWORD(STACK[0x6C8]) = ((v326 << 13) ^ 0x88B20000) + 131487667 - ((2 * ((v326 << 13) ^ 0x88B20000)) & 0xFAC8000);
  LODWORD(STACK[0x6F4]) = ((v326 << 16) ^ 0x45900000) - 439169492 - ((2 * ((v326 << 16) ^ 0x45900000)) & 0xCBA40000);
  LODWORD(STACK[0x700]) = ((v326 << 20) ^ 0x59000000) - 1034491021 - ((2 * ((v326 << 20) ^ 0x59000000)) & 0x84A00000);
  LODWORD(STACK[0x6A0]) = ((v326 << 14) ^ 0x11640000) + 501064734 - ((2 * ((v326 << 14) ^ 0x11640000)) & 0x3BBB0000);
  LODWORD(STACK[0x600]) = v326 << 29;
  LODWORD(STACK[0x6A8]) = (v326 << 28) + 1848223927 - ((v326 << 29) & 0xC0000000);
  LODWORD(STACK[0x678]) = ((v326 << 24) ^ 0x90000000) + 1250695142 - ((v326 << 25) & 0x94000000);
  v327 = ((v326 << 25) ^ 0x20000000) + 981408207 - ((2 * ((v326 << 25) ^ 0x20000000)) & 0x77777777);
  LODWORD(STACK[0x658]) = v327;
  LODWORD(STACK[0x6D0]) = ((v326 << 26) ^ 0x40000000) + 2106992119 - 2 * ((v326 << 26) ^ 0x40000000);
  LODWORD(STACK[0x640]) = ((v326 << 11) ^ 0xA22C8000) - 295971623 - ((2 * ((v326 << 11) ^ 0xA22C8000)) & 0xDCB7A000);
  v328 = *(unsigned __int8 *)(STACK[0x718] + 202);
  LODWORD(STACK[0x3F8]) = v328;
  LODWORD(STACK[0x6E0]) = ((v326 << 18) ^ 0x16400000) + 875087367 - ((2 * ((v326 << 18) ^ 0x16400000)) & 0x68500000);
  LODWORD(STACK[0x6DC]) = ((v326 << 21) ^ 0xB2000000) - 46610437 - ((2 * ((v326 << 21) ^ 0xB2000000)) & 0xFA400000);
  LODWORD(STACK[0x698]) = ((v326 << 19) ^ 0x2C800000) + 153847549 - ((2 * ((v326 << 19) ^ 0x2C800000)) & 0x12500000);
  v329 = ((v326 << 23) ^ 0xC8000000) + 1430135347 - ((2 * ((v326 << 23) ^ 0xC8000000)) & 0xAA000000);
  LODWORD(STACK[0x430]) = v329;
  LODWORD(STACK[0x668]) = (v326 << 27) - ((v326 << 28) & 0xD0000000);
  v330 = v326 ^ 0x47B44590;
  STACK[0x3F0] = v330;
  v331 = STACK[0x568];
  v332 = LODWORD(STACK[0x568]) >> 11;
  v333 = (LODWORD(STACK[0x568]) >> 27) ^ (LODWORD(STACK[0x568]) >> 28) ^ v332 ^ (v326 >> 2) ^ (v326 >> 10) ^ (unsigned __int16)(v330 >> (v328 & 0x15 ^ 1 | v328 & 0x15 ^ 0x14));
  v334 = (LODWORD(STACK[0x568]) >> 30) ^ 0x1FAE2ACF;
  LODWORD(STACK[0x540]) = v334;
  LODWORD(STACK[0x680]) = v326 ^ 0xB037D479;
  v335 = ((v326 ^ 0xB037D479) >> 29) | 0x3491A920;
  LODWORD(STACK[0x5B4]) = v335;
  v336 = v335 ^ v334;
  v337 = ((v333 ^ 0x11F40AF1) + 725582825 - 2 * ((v333 ^ 0x11F40AF1) & 0x2B3F83EF ^ v333 & 6)) ^ v335 ^ v334;
  v338 = (v331 >> 19) ^ 0x4ADBFCA1;
  v339 = (v337 + 1255928919 - ((2 * v337) & 0x95B7E8AE)) ^ v338;
  v340 = v331 >> 18;
  v341 = (v331 >> 18) ^ 0xEE37AF2E;
  LODWORD(STACK[0x544]) = v341;
  v342 = (v339 - 298336573 - ((2 * v339) & 0xDC6F7D86)) ^ v341;
  v343 = (v331 >> 15) ^ 0xDADCF14D;
  LODWORD(STACK[0x5B0]) = v343;
  v344 = (v342 - 623083995 - ((2 * v342) & 0xB5B8FC4A)) ^ v343;
  v345 = v331 >> 14;
  v346 = (v331 >> 14) ^ 0x57CF3BAC;
  v347 = (v344 + 1473127805 - ((2 * v344) & 0xAF9C4AFA)) ^ v346;
  v348 = (v331 >> 13) ^ 0xB9AEAC53;
  v349 = v331;
  v350 = (v347 - 1179872783 - ((2 * v347) & 0x735923E2)) ^ v348;
  v351 = (v326 >> 6) ^ 0x564B115A;
  v352 = (v350 + 1465237580 - ((2 * v350) & 0xAEAB8098)) ^ v351;
  v353 = (v326 >> 9) ^ 0xC1D4C2B3;
  v354 = (v352 - 1040770927 - ((2 * v352) & 0x83EE3122)) ^ v353;
  LODWORD(STACK[0x670]) = v351 ^ (v326 >> 4);
  v355 = (v326 >> 4) ^ (v326 >> 5) ^ 0x5ADCBB66 ^ (v354 - ((2 * v354) & 0xB1C23294) + 1491147082);
  LODWORD(STACK[0x5E8]) = v355;
  v355 >>= 21;
  LODWORD(STACK[0x5E0]) = v355;
  LODWORD(STACK[0x42C]) = HIWORD(v349);
  v356 = HIWORD(v349) ^ (v349 >> 20) ^ v340 ^ (v326 >> 1) ^ 0x23DA70EA ^ (unsigned __int16)(v330 >> ((v355 & 0x16 ^ 0x14) + (v355 & 0x16 ^ 2)));
  v357 = (v349 >> 21) ^ 0xA40F5A3A;
  v358 = (v356 - 1542498297 - ((2 * v356) & 0x481EB00E)) ^ v357;
  v359 = (v349 >> 25) ^ 0xE67B7CD9;
  v360 = (v358 - 428114694 - ((2 * v358) & 0xCCF6F9F4)) ^ v359;
  LODWORD(STACK[0x414]) = v359;
  v361 = v338;
  LODWORD(STACK[0x428]) = v338;
  v362 = (v360 + 1255928919 - ((2 * v360) & 0x95B7E8AE)) ^ v338;
  v363 = (v362 + 1473127805 - ((2 * v362) & 0xAF9C4AFA)) ^ v346;
  v364 = (v349 >> 12) ^ 0x9FE0FA93;
  v365 = (v363 - 1612414505 - ((2 * v363) & 0x3FC903AE)) ^ v364;
  LODWORD(STACK[0x410]) = v364;
  v366 = (v365 - 1179872783 - ((2 * v365) & 0x735923E2)) ^ v348;
  v367 = (v366 - 2043864563 - ((2 * v366) & 0xC5A341A)) ^ v332 ^ 0x8625EC85;
  v368 = (v326 >> 7) ^ 0xF2BD72DB;
  LODWORD(STACK[0x40C]) = v368;
  v369 = (v367 - 231597488 - ((2 * v367) & 0xE46434A0)) ^ v368;
  LODWORD(STACK[0x3CC]) = v369 + 1465237580 - ((2 * v369) & 0xAEAB8098);
  LODWORD(STACK[0x408]) = v349 >> 22;
  LODWORD(v330) = (v349 >> 17) ^ HIBYTE(v349) ^ (v349 >> 22) ^ v364 ^ 0x2283 ^ ((v345 ^ 0x15965 ^ HIWORD(v349))
                                                                              - 1612414505
                                                                              - ((2 * (v345 ^ 0x15965 ^ HIWORD(v349))) & 0x103AE));
  LODWORD(v330) = (v330 - 428114694 - ((2 * v330) & 0x4CF6F9F4)) ^ v359;
  v370 = (v330 + 725582825 - ((2 * v330) & 0x567F07D2)) ^ v336;
  v371 = (v370 - 1542498297 - ((2 * v370) & 0x481EB00E)) ^ v357;
  v372 = (v371 + 1255928919 - ((2 * v371) & 0x15B7E8AE)) ^ v361;
  v373 = (v372 - 2043864563 - ((2 * v372) & 0xC5A341A)) ^ v332 ^ 0x8625EC85;
  v374 = (v326 >> 10) ^ 0x24D01B14;
  LODWORD(STACK[0x404]) = v374;
  v375 = (v373 + 616691205 - ((2 * v373) & 0x4983EC0A)) ^ v374;
  v376 = (v375 - 1040770927 - ((2 * v375) & 0x83EE3122)) ^ v353;
  v377 = (v326 >> 8) ^ 0x8CB976;
  LODWORD(STACK[0x400]) = v377;
  v378 = v377 ^ (v326 >> 7) ^ (v376 + 13307187 - ((2 * v376) & 0x1961A66));
  v379 = LODWORD(STACK[0x668]) - 325600686;
  LODWORD(STACK[0x420]) = v379;
  v380 = (v326 >> 5) ^ (v326 >> 6) ^ v378;
  v381 = ((unint64_t)(v380 ^ 0x3AC1BB1) >> (((v378 & 0x7F ^ 0x74)
                                                                                    + (v378 & 0x7F ^ 0xB)) & ((v378 & 0x9B ^ 0x10) + (v378 & 0x9B ^ 0x8B)))) ^ (v380 >> 21);
  v382 = (32 * v381) ^ (v381 << 11) ^ 0x5C12CA11 ^ LODWORD(STACK[0x6C0]) ^ (v326 << 8) ^ (v326 << 15) ^ ((v379 ^ 0x56E8A39D ^ v327) - ((2 * (v379 ^ 0x56E8A39D ^ v327)) & 0x5C07DEF6) + 772009851) ^ (4 * v380) ^ (32 * v380) ^ (v380 << 11) ^ (4 * v381);
  v383 = (v382
        + 1115435089
        - 2
        * (v382 & 0x427C305D ^ ((LOBYTE(STACK[0x6C0]) ^ ((v379 ^ 0x9D ^ v327)
                                                                        - ((2 * (v379 ^ 0x9D ^ v327)) & 0xF6)
                                                                        + 123) ^ (4 * v380) ^ (32 * v380)) ^ (4 * v381)) & 0xC)) ^ LODWORD(STACK[0x710]);
  v384 = (v383 - 535700055 - ((2 * v383) & 0xC023BB52)) ^ LODWORD(STACK[0x688]);
  v385 = (v384 + 2141566351 - ((2 * v384) & 0xFF4B6B1E)) ^ LODWORD(STACK[0x6B4]);
  v386 = (v385 - 1293277497 - ((2 * v385) & 0x65D44D8E)) ^ LODWORD(STACK[0x708]);
  v387 = STACK[0x640];
  v388 = (v386 - 295971623 - ((2 * v386) & 0xDCB7A9B2)) ^ LODWORD(STACK[0x640]);
  v389 = (v388 + 131487667 - ((2 * v388) & 0xFACAF66)) ^ LODWORD(STACK[0x6C8]);
  v390 = (v389 - 439169492 - ((2 * v389) & 0xCBA59C58)) ^ LODWORD(STACK[0x6F4]);
  v391 = (v390 + 875087367 - ((2 * v390) & 0x68518C0E)) ^ LODWORD(STACK[0x6E0]);
  v392 = (v391 - 1034491021 - ((2 * v391) & 0x84ADD6E6)) ^ LODWORD(STACK[0x700]);
  v393 = (v392 - 46610437 - ((2 * v392) & 0xFA718FF6)) ^ LODWORD(STACK[0x6DC]);
  v394 = (v393 + 1100913726 - ((2 * v393) & 0x833D387C)) ^ LODWORD(STACK[0x690]);
  v395 = (v394 + 1430135347 - ((2 * v394) & 0xAA7C4466)) ^ v329;
  v396 = (v395 + 1250695142 - ((2 * v395) & 0x95182FCC)) ^ LODWORD(STACK[0x678]);
  v397 = v380 ^ LODWORD(STACK[0x6D0]) ^ (v396 + 2106992119 - ((2 * v396) & 0xFB2C4BEE));
  LODWORD(STACK[0x650]) = v397;
  v398 = v397 ^ v381;
  v399 = v397 ^ v381 ^ 0x4D9B0AB1;
  v400 = ((4 * v399) ^ 0x38DC4474) + 431564031 - ((2 * ((4 * v399) ^ 0x38DC4474)) & 0x337249F8);
  LODWORD(STACK[0x53C]) = v400;
  v401 = ((8 * v399) ^ 0x71B888E8) - 1324005554 - ((2 * ((8 * v399) ^ 0x71B888E8)) & 0x622A8E90);
  LODWORD(STACK[0x438]) = v401;
  v402 = ((v399 << 11) ^ 0xB888E800) - 1486187535 - ((2 * ((v399 << 11) ^ 0xB888E800)) & 0x4ED52000);
  LODWORD(STACK[0x668]) = v402;
  LODWORD(STACK[0x3EC]) = v399 << 19;
  v403 = ((v399 << 18) ^ 0x44740000) + 722075106 - ((v399 << 19) & 0x56100000);
  LODWORD(STACK[0x660]) = v403;
  v404 = ((v399 << 21) ^ 0x23A00000) + 1155652212 - ((2 * ((v399 << 21) ^ 0x23A00000)) & 0x89C00000);
  LODWORD(STACK[0x65C]) = v404;
  v405 = ((v399 << 27) ^ 0xE8000000) - 757394584 - ((2 * ((v399 << 27) ^ 0xE8000000)) & 0xA0000000);
  LODWORD(STACK[0x424]) = v405;
  v406 = ((v399 << 22) ^ 0x47400000) + 1338145660 - ((2 * ((v399 << 22) ^ 0x47400000)) & 0x9FFFFFFF);
  LODWORD(STACK[0x41C]) = v406;
  v407 = ((v399 << 23) ^ 0x8E800000) - 1120894835 - ((2 * ((v399 << 23) ^ 0x8E800000)) & 0x7A000000);
  LODWORD(STACK[0x418]) = v407;
  v408 = ((v399 << 26) ^ 0x74000000) + 1094719871 + (((v399 << 26) ^ 0x74000000) >> 30 << 31);
  LODWORD(STACK[0x654]) = v408;
  v409 = ((v399 << 7) ^ 0x1B888E80) - 1076187253 - ((2 * ((v399 << 7) ^ 0x1B888E80)) & 0x7FB55F00);
  LODWORD(STACK[0x3E8]) = v409;
  v410 = ((v399 << 10) ^ 0xDC447400) - 1856817684 - ((2 * ((v399 << 10) ^ 0xDC447400)) & 0x22A66800);
  LODWORD(STACK[0x3E4]) = v410;
  v411 = ((v399 << 13) ^ 0xE223A000) - 1107177111 - ((2 * ((v399 << 13) ^ 0xE223A000)) & 0x7C038000);
  LODWORD(STACK[0x3E0]) = v411;
  v412 = ((v399 << 16) ^ 0x111D0000) - 1805481595 - ((2 * ((v399 << 16) ^ 0x111D0000)) & 0x28C40000);
  LODWORD(STACK[0x3DC]) = v412;
  v413 = ((v399 << 20) ^ 0x11D00000) - 1849268276 - ((2 * ((v399 << 20) ^ 0x11D00000)) & 0x23800000);
  LODWORD(STACK[0x3D8]) = v413;
  LODWORD(v330) = ((v399 << 25) ^ 0x3A000000) - 854795217 - ((2 * ((v399 << 25) ^ 0x3A000000)) & 0x98000000);
  LODWORD(STACK[0x3D4]) = v330;
  LODWORD(STACK[0x648]) = v399;
  v414 = ((v397 ^ v381) << 24) ^ (v399 << 15) ^ (v399 << 8) ^ 0x139F9D00;
  v415 = (v414 - 1324005554 - ((2 * v414) & 0x622A8E00)) ^ v401;
  v416 = (v415 + 431564031 - ((2 * v415) & 0x337249FE)) ^ v400;
  v417 = (v416 - 1076187253 - ((2 * v416) & 0x7FB55F16)) ^ v409;
  v418 = (v417 - 1856817684 - ((2 * v417) & 0x22A66BD8)) ^ v410;
  v419 = (v418 - 1107177111 - ((2 * v418) & 0x7C03A2D2)) ^ v411;
  v420 = (v419 - 1486187535 - ((2 * v419) & 0x4ED527E2)) ^ v402;
  v421 = (v420 - 1805481595 - ((2 * v420) & 0x28C5130A)) ^ v412;
  v422 = (v421 + 722075106 - ((2 * v421) & 0x5613FBC4)) ^ v403;
  v423 = (v422 - 1849268276 - ((2 * v422) & 0x238CCF98)) ^ v413;
  v424 = (v423 + 1155652212 - ((2 * v423) & 0x89C3B4E8)) ^ v404;
  v425 = (v424 + 1338145660 - ((2 * v424) & 0x9F84F6F8)) ^ v406;
  v426 = STACK[0x650];
  v427 = HIBYTE(LODWORD(STACK[0x650])) ^ 0x3ADCE ^ (LODWORD(STACK[0x650]) >> 17);
  LODWORD(STACK[0x3D0]) = v398;
  v428 = (v426 >> 29) ^ (v426 >> 30) | 0x6744FDD8;
  LODWORD(STACK[0x374]) = v428;
  v429 = ((v427 ^ (v398 >> 8)) + 1732574680 - ((2 * (v427 ^ (v398 >> 8))) & 0x89FBB0)) ^ v428;
  v430 = (v426 >> 25) ^ 0x51CBE722;
  LODWORD(STACK[0x3BC]) = v430;
  v431 = (v429 + 1372317474 - ((2 * v429) & 0x2397CE46) + 1) ^ v430;
  v432 = (v426 >> 21) ^ 0x88BEC70B;
  LODWORD(STACK[0x3B4]) = v432;
  v433 = (v431 - 2000763114 - ((2 * v431) & 0x117D8E2C)) ^ v432;
  v434 = (v426 >> 22) ^ 0x756F4794;
  LODWORD(STACK[0x3A0]) = v434;
  v435 = (v433 + 1970227098 - ((2 * v433) & 0xEADE8F34)) ^ v434;
  LODWORD(STACK[0x36C]) = v426 >> 19;
  v436 = (v426 >> 19) ^ 0xF6E93CE2;
  LODWORD(STACK[0x3AC]) = v436;
  v437 = (v435 - 152486761 - ((2 * v435) & 0xEDD2792E)) ^ v436;
  v438 = HIWORD(v426) ^ 0xC465DCF2;
  LODWORD(STACK[0x3A8]) = v438;
  v439 = (v437 - 999956642 - ((2 * v437) & 0x88CBBEBC)) ^ v438;
  v440 = (v426 >> 14) ^ 0x511B6130;
  LODWORD(STACK[0x3A4]) = v440;
  v441 = (v439 + 1360752512 - ((2 * v439) & 0xA236DF00)) ^ v440;
  v442 = (v426 >> 11) ^ 0xA75AC4F7;
  LODWORD(STACK[0x37C]) = v442;
  v443 = (v441 - 1487228556 - ((2 * v441) & 0x4EB562E8)) ^ v442;
  v444 = (v426 >> 12) ^ 0x3FCC9E1B;
  LODWORD(STACK[0x39C]) = v444;
  v445 = (v443 + 1070376154 - ((2 * v443) & 0x7F9949B4)) ^ v444;
  v446 = (v398 >> 10) ^ 0x3BF34BAB;
  LODWORD(STACK[0x368]) = v446;
  v447 = (v445 + 1005822125 - ((2 * v445) & 0x77E7415A)) ^ v446;
  v448 = (v425 - 1120894835 - ((2 * v425) & 0x7A61011A)) ^ v407;
  v449 = (v398 >> 9) ^ 0xB59E7E55;
  LODWORD(STACK[0x2A4]) = v449;
  v450 = (v447 - 1247827880 - ((2 * v447) & 0x6B3F50B0)) ^ v449;
  v451 = (v398 >> 7) ^ 0x1DF4F479;
  LODWORD(STACK[0x370]) = v451;
  v452 = (v450 + 502508622 - ((2 * v450) & 0x3BE7589C)) ^ v451;
  v453 = (v448 - 854795217 - ((2 * v448) & 0x9A19B85E)) ^ v330;
  v454 = v453 + 1094719871 - ((2 * v453) & 0x828032FE);
  LODWORD(STACK[0x29C]) = v399 >> 5;
  v455 = (v398 >> 6) ^ 0x1C31F990;
  LODWORD(STACK[0x378]) = v455;
  v456 = (v399 >> 5) ^ v455 ^ (v452 + 473909758 - ((2 * v452) & 0x387E93FC));
  v457 = (LODWORD(STACK[0x5AC]) << 12) ^ (LODWORD(STACK[0x5AC]) << 31) ^ v405 ^ (4 * v456) ^ (32 * v456) ^ (v456 << 11) ^ (v456 >> 21) ^ (32 * (v456 >> 21)) ^ (v456 >> 21 << 11) ^ (((4 * (v456 >> 21)) ^ 0x4C) - ((2 * ((4 * (v456 >> 21)) ^ 0x4C)) & 0x1A10) + 1125534984) ^ ((v454 ^ v408) - 757394584 - ((2 * (v454 ^ v408)) & 0xA5B626D0));
  v458 = LODWORD(STACK[0x670]) ^ LODWORD(STACK[0x3CC]);
  v459 = LODWORD(STACK[0x568]) >> 31;
  LODWORD(STACK[0x280]) = v459;
  v460 = v459 ^ (v458 >> 21) ^ (v458 >> 27);
  v461 = v457 ^ (4 * v458) ^ (32 * v458) ^ (v458 << 11) ^ (4 * v460) ^ (32 * v460) ^ (v460 << 11) ^ 0x89DC2AF3;
  v462 = (v461 + 501064734 - ((2 * v461) & 0x3BBB483C)) ^ LODWORD(STACK[0x6A0]);
  v463 = (v462 - 439169492 - ((2 * v462) & 0xCBA59C58)) ^ LODWORD(STACK[0x6F4]);
  v464 = (v463 + 153847549 - ((2 * v463) & 0x12570DFA)) ^ LODWORD(STACK[0x698]);
  v465 = (v464 + 1115435089 - ((2 * v464) & 0x84F860A2)) ^ LODWORD(STACK[0x710]);
  v466 = (v465 - 142372375 - ((2 * v465) & 0xEF0723D2)) ^ LODWORD(STACK[0x680]);
  v467 = (v466 - 1293277497 - ((2 * v466) & 0x65D44D8E)) ^ LODWORD(STACK[0x708]);
  v468 = (v467 - 295971623 - ((2 * v467) & 0xDCB7A9B2)) ^ v387;
  v469 = (v468 + 131487667 - ((2 * v468) & 0xFACAF66)) ^ LODWORD(STACK[0x6C8]);
  v470 = (v469 + 875087367 - ((2 * v469) & 0x68518C0E)) ^ LODWORD(STACK[0x6E0]);
  v471 = (v470 - 1034491021 - ((2 * v470) & 0x84ADD6E6)) ^ LODWORD(STACK[0x700]);
  v472 = (v471 - 46610437 - ((2 * v471) & 0xFA718FF6)) ^ LODWORD(STACK[0x6DC]);
  v473 = (v472 + 981408207 - ((2 * v472) & 0x74FE339E)) ^ LODWORD(STACK[0x658]);
  v474 = (v473 + 2106992119 - ((2 * v473) & 0xFB2C4BEE)) ^ LODWORD(STACK[0x6D0]);
  v475 = (v474 + 1848223927 - ((2 * v474) & 0xDC53516E)) ^ LODWORD(STACK[0x6A8]);
  v476 = (v475 - ((2 * v475) & 0x659D8FD4) - 1295071254) ^ LODWORD(STACK[0x560]);
  v477 = v458 ^ 0xF401FFDE ^ ((v476 ^ 0xBB00B9A7) - 2 * ((v476 ^ 0xBB00B9A7) & 0x707ABB9F ^ v476 & 0x18) - 260392057);
  v478 = (v477 - ((2 * v477) & 0x12D57F6) + 9874427) ^ v456;
  LODWORD(STACK[0x3CC]) = v478;
  v479 = v478 ^ v460;
  v480 = ((8 * (v478 ^ v460)) ^ 0x17389A80) - 2008529228 - ((2 * ((8 * (v478 ^ v460)) ^ 0x17389A80)) & 0x10908D60);
  LODWORD(STACK[0x3C4]) = v480;
  v481 = ((4 * (v478 ^ v460)) ^ 0xB9C4D40) - 810595852 - ((2 * ((4 * (v478 ^ v460)) ^ 0xB9C4D40)) & 0x9F5E93E8);
  LODWORD(STACK[0x3C0]) = v481;
  LODWORD(v330) = (((v478 ^ v460) << 7) ^ 0x7389A800)
                - 706310540
                - ((2 * (((v478 ^ v460) << 7) ^ 0x7389A800)) & 0xABCD1C00);
  LODWORD(STACK[0x3B8]) = v330;
  v482 = (((v478 ^ v460) << 10) ^ 0x9C4D4000) - 1801706905 - ((2 * (((v478 ^ v460) << 10) ^ 0x9C4D4000)) & 0x29384000);
  LODWORD(STACK[0x3B0]) = v482;
  v483 = (((v478 ^ v460) << 14) ^ 0xC4D40000) + 270111495 - ((2 * (((v478 ^ v460) << 14) ^ 0xC4D40000)) & 0x20330000);
  LODWORD(STACK[0x298]) = v483;
  v484 = (((v478 ^ v460) << 13) ^ 0xE26A0000) + 476564817 - ((2 * (((v478 ^ v460) << 13) ^ 0xE26A0000)) & 0x38CF8000);
  LODWORD(STACK[0x388]) = v484;
  v485 = (((v478 ^ v460) << 20) ^ 0x35000000) + 781253844 - ((2 * (((v478 ^ v460) << 20) ^ 0x35000000)) & 0x5D200000);
  LODWORD(STACK[0x38C]) = v485;
  v486 = (((v478 ^ v460) << 16) ^ 0x13500000) - 1470434413 - ((2 * (((v478 ^ v460) << 16) ^ 0x13500000)) & 0x50B40000);
  LODWORD(STACK[0x384]) = v486;
  v487 = (((v478 ^ v460) << 22) ^ 0xD4000000) - 1171935753 - ((2 * (((v478 ^ v460) << 22) ^ 0xD4000000)) & 0x74000000);
  LODWORD(STACK[0x380]) = v487;
  v488 = (2 * (v478 ^ v460)) ^ ((v478 ^ v460) << 6) ^ ((v478 ^ v460) << 17) ^ 0x9AAAF2A0;
  LODWORD(STACK[0x294]) = v479 ^ 0x632034CA;
  LODWORD(STACK[0x3C8]) = v479;
  v489 = (v488 + 1640441754 - ((2 * v488) & 0xC38E4F34)) ^ v479 ^ 0x632034CA;
  v490 = (v489 - 810595852 - ((2 * v489) & 0x9F5E93E8)) ^ v481;
  v491 = (v490 - 2008529228 - ((2 * v490) & 0x10908D68)) ^ v480;
  v492 = (v491 - 706310540 - ((2 * v491) & 0xABCD1CE8)) ^ v330;
  v493 = (v492 - 1801706905 - ((2 * v492) & 0x293844CE)) ^ v482;
  v494 = (v493 + 476564817 - ((2 * v493) & 0x38CF9AA2)) ^ v484;
  v495 = (v494 + 270111495 - ((2 * v494) & 0x2033260E)) ^ v483;
  v496 = ((v479 << 24) ^ 0x50000000) - 1061528239 + (((v479 << 24) ^ 0x50000000u) >> 30 << 31);
  LODWORD(STACK[0x2A0]) = v496;
  v497 = (v495 - 1470434413 - ((2 * v495) & 0x50B5E726)) ^ v486;
  v498 = (v497 + 781253844 - ((2 * v497) & 0x5D21F9A8)) ^ v485;
  v499 = v496 ^ v487 ^ (v498 - 1171935753 - ((2 * v498) & 0x744B5BEE));
  LODWORD(STACK[0x290]) = v499;
  v500 = (v479 << 25) ^ 0xA0000000;
  LODWORD(STACK[0x288]) = v500;
  LODWORD(STACK[0x28C]) = v500 + 835593710;
  v501 = ((v500 + 835593710) & 0x8000000 ^ 0x5ECDE2DF) + 2 * ((v500 + 835593710) & 0x8000000);
  LODWORD(STACK[0x284]) = v501;
  v323 = ((v499 ^ 0xC0000000) & (v501 - 1590551263)) == 0;
  v502 = ((LODWORD(STACK[0x480]) >> 31) | 0x1F4F3776) ^ (LODWORD(STACK[0x480]) >> 26) ^ (LODWORD(STACK[0x474]) >> 3) ^ LODWORD(STACK[0x2FC]) ^ LODWORD(STACK[0x300]);
  v503 = (v502 + 159049991 - ((v502 << (LODWORD(STACK[0x6F8]) - 104)) & 0x12F5D20E)) ^ LODWORD(STACK[0x464]);
  v504 = (v503 - 957504782 - ((2 * v503) & 0x8DDB45E4)) ^ LODWORD(STACK[0x30C]);
  v505 = (v504 + 18478616 - ((2 * v504) & 0x233EC30)) ^ LODWORD(STACK[0x450]);
  v506 = (v505 - 894008998 - ((2 * v505) & 0x956D02B4)) ^ LODWORD(STACK[0x448]);
  v507 = (v506 + 674158033 - ((2 * v506) & 0x505DABA2)) ^ LODWORD(STACK[0x458]);
  v508 = (v507 + 2049681425 - ((2 * v507) & 0xF4575022)) ^ LODWORD(STACK[0x454]);
  v509 = (v508 + 655311101 - ((2 * v508) & 0x4E1E81FA)) ^ LODWORD(STACK[0x44C]);
  v510 = (v509 - 1631503272 - ((2 * v509) & 0x3D8278B0)) ^ LODWORD(STACK[0x308]);
  v511 = (v510 - 1015101147 - ((2 * v510) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  v512 = (v511 + 126108934 - ((2 * v511) & 0xF088A0C)) ^ LODWORD(STACK[0x304]);
  v513 = LODWORD(STACK[0x630]) ^ (v512 - 397092666 - ((2 * v512) & 0xD0A9B18C));
  v514 = (v513 >> 21) ^ (v513 >> 27);
  v515 = (2 * LODWORD(STACK[0x474])) ^ (LODWORD(STACK[0x474]) << 6) ^ (LODWORD(STACK[0x474]) << 29) ^ LODWORD(STACK[0x310]) ^ LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x45C]) ^ (4 * v513) ^ (32 * v513) ^ (v513 << 11) ^ v514 ^ (4 * v514) ^ (32 * v514) ^ (v514 << 11);
  v516 = ((v515 ^ 0xAC1DF920) - 1075907020 - 2 * ((v515 ^ 0xAC1DF920) & 0x3FDEF63F ^ v515 & 0xB)) ^ LODWORD(STACK[0x43C]);
  v517 = (v516 + 2110358745 - ((2 * v516) & 0xFB9309B2)) ^ LODWORD(STACK[0x320]);
  v518 = (v517 - 639319786 - ((2 * v517) & 0xB3C9822C)) ^ LODWORD(STACK[0x318]);
  v519 = (v518 + 975111934 - ((2 * v518) & 0x743E0DFC)) ^ LODWORD(STACK[0x55C]);
  v520 = (v519 - 53156464 - ((2 * v519) & 0xF9A9CB20)) ^ LODWORD(STACK[0x554]);
  v521 = (v520 + 180215366 - ((2 * v520) & 0x157BBC8C)) ^ LODWORD(STACK[0x470]);
  v522 = (v521 + 55882071 - ((2 * v521) & 0x6A962AE)) ^ LODWORD(STACK[0x46C]);
  v523 = (v522 - 1783238975 - ((2 * v522) & 0x2B6BDD82)) ^ LODWORD(STACK[0x550]);
  v524 = (v523 - 820841351 - ((2 * v523) & 0x9E25E8F2)) ^ LODWORD(STACK[0x314]);
  v525 = (v524 - 1019783913 - ((2 * v524) & 0x866EAA2E)) ^ LODWORD(STACK[0x558]);
  v526 = (v525 - 1332414969 - ((2 * v525) & 0x6129EC0E)) ^ LODWORD(STACK[0x54C]);
  v527 = (v526 + 1918639684 - ((2 * v526) & 0xE4B83C88)) ^ LODWORD(STACK[0x468]);
  v528 = (v527 - ((2 * v527) & 0x46536AE) + 36870999) ^ v513;
  LODWORD(STACK[0x448]) = v528;
  LODWORD(STACK[0x55C]) = (LODWORD(STACK[0x2F4]) ^ (-1673081951 * LODWORD(STACK[0x2B0])
                                                  + 1847546227
                                                  - ((948803394 * LODWORD(STACK[0x2B0]) + 968328188) & 0xA2871EEA)))
                        + LODWORD(STACK[0x2CC]);
  v529 = -1673081951 * LODWORD(STACK[0x2A8]) - 33316267 - ((948803394 * LODWORD(STACK[0x2A8]) + 968328188) & 0xC24FC0AE);
  v530 = -1673081951 * LODWORD(STACK[0x2B4])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2B4]) + 968328188) & 0x4C4B5584);
  v531 = -1673081951 * LODWORD(STACK[0x2B8]) - 33316267 - ((948803394 * LODWORD(STACK[0x2B8]) + 968328188) & 0xC24FC0AE);
  v532 = -1673081951 * LODWORD(STACK[0x2BC])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2BC]) + 968328188) & 0x4C4B5584);
  v533 = -1673081951 * LODWORD(STACK[0x2C0]) - 33316267 - ((948803394 * LODWORD(STACK[0x2C0]) + 968328188) & 0xC24FC0AE);
  v534 = -1673081951 * LODWORD(STACK[0x2C8]) - 33316267 - ((948803394 * LODWORD(STACK[0x2C8]) + 968328188) & 0xC24FC0AE);
  v535 = -1673081951 * LODWORD(STACK[0x2C4])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2C4]) + 968328188) & 0x4C4B5584);
  LODWORD(v330) = -1673081951 * LODWORD(STACK[0x2D0])
                - 33316267
                - ((948803394 * LODWORD(STACK[0x2D0]) + 968328188) & 0xC24FC0AE);
  v536 = -1673081951 * LODWORD(STACK[0x2D4])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2D4]) + 968328188) & 0x4C4B5584);
  v537 = -1673081951 * LODWORD(STACK[0x2D8]) - 33316267 - ((948803394 * LODWORD(STACK[0x2D8]) + 968328188) & 0xC24FC0AE);
  v538 = -1673081951 * LODWORD(STACK[0x2DC])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2DC]) + 968328188) & 0x4C4B5584);
  v539 = -1673081951 * LODWORD(STACK[0x2E0])
       - 1023316800
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2E0]) + 484164094) & 0x2625AAC3 ^ (-1673081951 * LODWORD(STACK[0x2E0])) & 1);
  v540 = -1673081951 * LODWORD(STACK[0x2E4]) - 33316267 - ((948803394 * LODWORD(STACK[0x2E4]) + 968328188) & 0xC24FC0AE);
  v541 = -1673081951 * LODWORD(STACK[0x2E8])
       - 1023316800
       - ((948803394 * LODWORD(STACK[0x2E8]) + 968328188) & 0x4C4B5584);
  v542 = STACK[0x2F0];
  LODWORD(STACK[0x558]) = LODWORD(STACK[0x2F0]) ^ (-1673081951 * LODWORD(STACK[0x2AC])
                                                 - 1023316800
                                                 - ((948803394 * LODWORD(STACK[0x2AC]) + 968328188) & 0x4C4B5584));
  LODWORD(STACK[0x550]) = v542 ^ v530;
  LODWORD(STACK[0x54C]) = v542 ^ v532;
  LODWORD(STACK[0x470]) = v542 ^ v535;
  LODWORD(STACK[0x46C]) = v542 ^ v536;
  LODWORD(STACK[0x460]) = v542 ^ v538;
  LODWORD(STACK[0x454]) = v542 ^ v539;
  LODWORD(STACK[0x45C]) = v542 ^ v541;
  v543 = -1673081951 * LODWORD(STACK[0x2EC]) - 33316267 - ((948803394 * LODWORD(STACK[0x2EC]) + 968328188) & 0xC24FC0AE);
  v544 = STACK[0x2F8];
  LODWORD(STACK[0x554]) = LODWORD(STACK[0x2F8]) ^ v529;
  LODWORD(STACK[0x480]) = v544 ^ v531;
  LODWORD(STACK[0x474]) = v544 ^ v533;
  LODWORD(STACK[0x458]) = v544 ^ v534;
  LODWORD(STACK[0x468]) = v544 ^ v330;
  LODWORD(STACK[0x464]) = v544 ^ v537;
  LODWORD(STACK[0x450]) = v544 ^ v540;
  LODWORD(STACK[0x44C]) = v544 ^ v543;
  v545 = (LODWORD(STACK[0x4B4]) >> 28) ^ (LODWORD(STACK[0x4B4]) >> 27) ^ (LODWORD(STACK[0x4B0]) >> 2) ^ LODWORD(STACK[0x330]);
  v546 = ((LODWORD(STACK[0x638]) ^ 0xD151DDE7 ^ v545)
        - 1199326931
        - ((2 * (LODWORD(STACK[0x638]) ^ 0xD151DDE7 ^ v545)) & 0x7107725A)) ^ LODWORD(STACK[0x47C]);
  v547 = (v546 - 1847080652 - ((2 * v546) & 0x23CF9268)) ^ LODWORD(STACK[0x564]);
  v548 = (v547 - 644792186 - ((2 * v547) & 0xB322810C)) ^ LODWORD(STACK[0x32C]);
  v549 = (v548 - 1357874729 - ((2 * v548) & 0x5E20F3AE)) ^ LODWORD(STACK[0x338]);
  v550 = (v549 + 960293507 - ((2 * v549) & 0x7279D506)) ^ LODWORD(STACK[0x328]);
  v551 = (v550 + 1394653988 - ((2 * v550) & 0xA6417648)) ^ LODWORD(STACK[0x324]);
  v552 = (v551 + 2138233577 - ((2 * v551) & 0xFEE5B5D2)) ^ LODWORD(STACK[0x478]);
  v553 = (v552 - 1484203417 - ((2 * v552) & 0x4F11B4CE)) ^ LODWORD(STACK[0x4A4]);
  v554 = (v553 + 236588747 - ((2 * v553) & 0x1C341D96)) ^ LODWORD(STACK[0x634]);
  v555 = LODWORD(STACK[0x610]) ^ (v554 + 935411952 - ((2 * v554) & 0x6F8281E0));
  v556 = (v555 >> 21) ^ (v545 >> 27);
  v557 = LODWORD(STACK[0x614]) ^ (LODWORD(STACK[0x59C]) >> 26) ^ 0x13;
  v558 = (v557 + 589770874 - ((2 * v557) & 0xFFFFFFF7) + 1) ^ LODWORD(STACK[0x34C]);
  v559 = (v558 + 159722517 - ((2 * v558) & 0x130A582E) + 2) ^ LODWORD(STACK[0x350]);
  v560 = (v559 + 1024639131 - ((2 * v559) & 0x7A258136)) ^ LODWORD(STACK[0x4C0]);
  v561 = (v560 + 45139448 - ((2 * v560) & 0x5618BF0)) ^ LODWORD(STACK[0x4C4]);
  v562 = (v561 - 1140868695 - ((2 * v561) & 0x77FF7352)) ^ LODWORD(STACK[0x4D0]);
  v563 = (v562 - 1880198983 - ((2 * v562) & 0x1FDCE172)) ^ LODWORD(STACK[0x4CC]);
  v564 = (v563 - 558656027 - ((2 * v563) & 0x3D672BCA)) ^ LODWORD(STACK[0x4BC]);
  v565 = (v564 - 1027250510 - ((2 * v564) & 0x858ACD64)) ^ LODWORD(STACK[0x4B8]);
  v566 = (v565 + 1252563740 - ((2 * v565) & 0x95513638)) ^ LODWORD(STACK[0x354]);
  v567 = (v566 - 1710070918 - ((2 * v566) & 0x3424C6F4)) ^ LODWORD(STACK[0x348]);
  v568 = LODWORD(STACK[0x6B8]) ^ 0x9BC2FC ^ (v567 - 2127163668 - ((2 * v567) & 0x26C1DD8));
  v569 = v568 + (LODWORD(STACK[0x344]) ^ 0x13785F9) - 2 * (v568 & (LODWORD(STACK[0x344]) ^ 0x13785F9));
  v570 = v569 - 136523795 - ((2 * v569) & 0xEFB99FDA);
  v571 = (((LODWORD(STACK[0x59C]) >> 3) ^ 0x9BC2FCE)
        - 136523795
        - ((2 * ((LODWORD(STACK[0x59C]) >> 3) ^ 0x9BC2FCE)) & 0x2FB99FDA)) ^ LODWORD(STACK[0x4C8]) ^ v570;
  v572 = (16 * LODWORD(STACK[0x4B0])) ^ (32 * LODWORD(STACK[0x4B0])) ^ 0x1D5AA0A0;
  v573 = ((v572 ^ (LODWORD(STACK[0x4B0]) << 30)) - 1449696164 - ((2 * v572) & 0x532EC8A0)) ^ LODWORD(STACK[0x62C]);
  v574 = (v573 + 656802620 - ((2 * v573) & 0x4E4C0678)) ^ LODWORD(STACK[0x624]);
  v575 = (v574 - 283603516 - ((2 * v574) & 0xDE311B88)) ^ LODWORD(STACK[0x4A8]);
  v576 = (v575 + 877411359 - ((2 * v575) & 0x6898783E)) ^ LODWORD(STACK[0x340]);
  v577 = (v576 + 1202125257 - ((2 * v576) & 0x8F4DF392)) ^ LODWORD(STACK[0x33C]);
  v578 = (v577 - 180358100 - ((2 * v577) & 0xEA7FE858)) ^ LODWORD(STACK[0x490]);
  v579 = (v578 - 1265280726 - ((2 * v578) & 0x692AB254)) ^ LODWORD(STACK[0x334]);
  v580 = (v579 - 1782866148 - ((2 * v579) & 0x2B773E38)) ^ LODWORD(STACK[0x488]);
  v581 = (v580 - 1978511814 - ((2 * v580) & 0x14249C74)) ^ LODWORD(STACK[0x56C]);
  v582 = (v581 - 1900548253 - ((2 * v581) & 0x1D6FDEC6)) ^ LODWORD(STACK[0x628]);
  v583 = (v582 - 406898472 - ((2 * v582) & 0xCF7E71B0)) ^ LODWORD(STACK[0x498]);
  v584 = (v583 - 1150076094 - ((2 * v583) & 0x76E67684)) ^ LODWORD(STACK[0x618]);
  v585 = (v571 >> 27) ^ (~v570 >> 30) ^ (v571 >> 21);
  v586 = (LODWORD(STACK[0x4F0]) << 29) ^ (LODWORD(STACK[0x59C]) << 6) ^ (2 * LODWORD(STACK[0x59C])) ^ (4 * v571) ^ (32 * v571) ^ (v571 << 11) ^ (4 * v585) ^ (32 * v585) ^ (v585 << 11) ^ LODWORD(STACK[0x4AC]) ^ (4 * v555) ^ (32 * v555) ^ (v555 << 11) ^ (4 * v556) ^ (32 * v556) ^ (v556 << 11) ^ (v584 - 1390171720 - ((2 * v584) & 0x5A475370)) ^ 0x52E58F48;
  v587 = (v586 + 1656680149 - ((2 * v586) & 0xC57DDDAA)) ^ LODWORD(STACK[0x440]);
  v588 = (v587 - 818321368 - ((2 * v587) & 0x9E72D050)) ^ LODWORD(STACK[0x4F4]);
  v589 = (v588 - 1373423771 - ((2 * v588) & 0x5C466ECA)) ^ LODWORD(STACK[0x358]);
  v590 = (v589 + 1217385037 - ((2 * v589) & 0x911FA49A)) ^ LODWORD(STACK[0x5A0]);
  v591 = (v590 + 375871979 - ((2 * v590) & 0x2CCEB3D6)) ^ LODWORD(STACK[0x598]);
  v592 = (v591 + 1104295814 - ((2 * v591) & 0x83A46F0C)) ^ LODWORD(STACK[0x5A4]);
  v593 = (v592 - 871306853 - ((2 * v592) & 0x9821D336)) ^ LODWORD(STACK[0x4E0]);
  v594 = (v593 - 1714393117 - ((2 * v593) & 0x33A0DFC6)) ^ LODWORD(STACK[0x590]);
  v595 = (v594 - 1626213737 - ((2 * v594) & 0x3E23E52E)) ^ LODWORD(STACK[0x35C]);
  v596 = (v595 - 850141978 - ((2 * v595) & 0x9AA7B9CC)) ^ LODWORD(STACK[0x594]);
  v597 = (v596 - 1898158376 - ((2 * v596) & 0x1DB8CDB0)) ^ LODWORD(STACK[0x4EC]);
  v598 = (v597 - 1226941868 - ((2 * v597) & 0x6DBCB4A8)) ^ LODWORD(STACK[0x4D8]);
  v599 = (v598 - 1924192076 - ((2 * v598) & 0x1A9E5168)) ^ LODWORD(STACK[0x580]);
  v600 = (v599 + 1565182520 - ((2 * v599) & 0xBA959470)) ^ LODWORD(STACK[0x58C]);
  v601 = (v600 - 1253584277 - ((2 * v600) & 0x6A8FA4D6)) ^ LODWORD(STACK[0x484]);
  v602 = v571 ^ 0x8C94064 ^ (v601 - ((2 * v601) & 0x182EAF06) + 202856323);
  v603 = v585 ^ 0xDE3624FC ^ (v602 - 566876966 - ((2 * v602) & 0xBC6C49B4));
  v604 = (v603 - ((2 * v603) & 0x2B5C1CAC) + 363728470) ^ v555;
  v605 = ((v604 ^ 0x16EB9566) + 1038594350 - 2 * ((v604 ^ 0x16EB9566) & 0x3DE7B13E ^ v604 & 0x10)) ^ v556;
  LODWORD(STACK[0x478]) = v605;
  v606 = (unsigned __int8 *)STACK[0x718];
  LODWORD(STACK[0x4B0]) = ((*(unsigned __int8 *)(STACK[0x718] + 956) ^ 0x6B) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + 653) ^ 0x3D) << 8) | *(unsigned __int8 *)(STACK[0x718] + 350) ^ 0x3D;
  v607 = v606[170] ^ 0x6B;
  v608 = v607 | ((v606[473] ^ 0x6B) << 8);
  v609 = v608 - 873297774 - 2 * (v608 & 0x88BB ^ v607 & 0x29);
  v610 = (v609 & 0x88F2FFFF ^ 0xCBFB8892)
       + 949934876
       + ((2 * ((v609 & 0x88F2FFFF ^ 0xCBFB8892) & 0x892DB5B ^ (v609 | 0xFFFFFFBF))) ^ 0x100081);
  v611 = ((v610 << 8) ^ 0x9EDB1B00) - ((2 * ((v610 << 8) ^ 0x9EDB1B00)) & 0xC4F6600) + 1177006856;
  LODWORD(STACK[0x56C]) = (v611 ^ 0x27B308) + (v606[832] ^ 0x6B);
  LOWORD(v610) = ((LODWORD(STACK[0x5A8]) - 7401) | 0x4CC2)
               - ((LODWORD(STACK[0x5A8]) - 7401) & 0xB33D)
               + (v611 & 0xB400 ^ 0x41F)
               + (v611 & 0xB400 ^ 0xB000);
  LODWORD(STACK[0x4EC]) = ((v606[709] ^ 0x6B ^ (((((unsigned __int16)v609 ^ 0x8892)
                                                - 9444
                                                + ((unsigned __int16)(2 * ((v609 ^ 0x8892) & 0xDB5B ^ (v609 | 0xFFBF))) ^ 0x81)) & 0x7A56 ^ 0x5A12)
                                              + (v609 & 0x7A56 ^ 0x7244))) << 16) | ((v606[406] ^ 0x6B) << 8) | v606[103] ^ 0x6B;
  v612 = v606[585] ^ 0x6B | ((v606[888] ^ 0x6B) << 8) | ((v606[(unsigned __int16)(v610 + 1)] ^ 0x6B) << 16);
  v613 = ((v606[159] ^ 0x6B) << 8) | ((v606[462] ^ 0x6B) << 16) | v606[821] ^ 0x6B;
  v614 = ((v606[641] ^ 0x6B) << 8) | ((v606[944] ^ 0x6B) << 16);
  LODWORD(STACK[0x4C4]) = v606[282] ^ 0x6B | (v612 << 8);
  LODWORD(STACK[0x4B8]) = v606[518] ^ 0x6B | (v613 << 8);
  v615 = ((v606[877] ^ 0x6B) << 8) | ((v606[215] ^ 0x6B) << 16);
  LODWORD(STACK[0x484]) = v606[35] ^ 0x6B | ((v614 | v606[338] ^ 0x6B) << 8);
  LODWORD(STACK[0x4BC]) = v615 | v606[574] ^ 0x6B;
  LODWORD(STACK[0x498]) = v606[753] ^ 0x6B | ((((v606[394] ^ 0x6B) << 8) | ((v606[697] ^ 0x6B) << 16) | v606[91] ^ 0x6B) << 8);
  LODWORD(STACK[0x58C]) = v606[24] ^ 0x6B | ((((v606[933] ^ 0x6B) << 16) | ((v606[630] ^ 0x6B) << 8) | v606[327] ^ 0x6B) << 8);
  LODWORD(STACK[0x4D0]) = v606[809] ^ 0x6B | ((v606[450] ^ 0x6B) << 16) | ((v606[147] ^ 0x6B) << 8);
  v616 = ((v606[686] ^ 0x6B) << 16) | ((v606[383] ^ 0x6B) << 8) | v606[80] ^ 0x6B;
  LODWORD(STACK[0x4A4]) = ((v606[203] ^ 0x6B) << 16) | ((v606[865] ^ 0x6B) << 8) | v606[562] ^ 0x6B;
  LODWORD(STACK[0x598]) = v606[742] ^ 0x6B | (v616 << 8);
  v617 = v606[136] ^ 0x6B;
  v618 = (v617 << 9) & 0x1800;
  v619 = (v617 << 8) - 303625127;
  v620 = (v619 - v618) ^ a40 | ((v606[439] ^ 0x6B) << 16);
  LODWORD(STACK[0x590]) = ((v606[921] ^ 0x6B) << 16) | ((v606[618] ^ 0x6B) << 8) | v606[315] ^ 0x6B;
  LODWORD(STACK[0x4B4]) = (v606[v619 & 0x300 ^ 0x11ELL | v619 & 0x300 ^ 0x200] ^ 0x6B) + v620;
  v621 = v606[248];
  LODWORD(STACK[0x59C]) = v621 ^ 0x6B | ((v606[551] ^ 0x6B | ((v606[854] ^ 0x6B) << 8) | ((v606[192] ^ 0x6B) << 16)) << 8);
  LODWORD(STACK[0x47C]) = ((v606[371] ^ 0x6B) << 8) | ((v606[((v621 & 0x1C ^ 0x14) + (v621 & 0x1C ^ 8)) ^ 0x2BE] ^ 0x6B) << 16) | v606[68] ^ 0x6B;
  LODWORD(STACK[0x594]) = ((v606[910] ^ 0x6B) << 24) | ((v606[607] ^ 0x3D) << 16) | ((v606[304] ^ 0x6B) << 8) | v606[1] ^ 0x6B;
  LODWORD(STACK[0x488]) = v606[483] ^ 0x6B | ((((v606[124] ^ 0x6B) << 8) | ((v606[427] ^ 0x6B) << 16) | v606[786] ^ 0x6B) << 8);
  v622 = v606[57] ^ 0x6B | ((v606[663] ^ 0x6B) << 16) | ((v606[360] ^ 0x6B) << 8);
  LODWORD(STACK[0x4A8]) = ((v606[180] ^ 0x6B) << 16) | ((v606[842] ^ 0x6B) << 8) | v606[539] ^ 0x6B;
  LODWORD(STACK[0x490]) = v606[719] ^ 0x6B | (v622 << 8);
  LODWORD(STACK[0x4E0]) = ((v606[416] ^ 0x6B) << 16) | ((v606[113] ^ 0x6B) << 8) | v606[775] ^ 0x3D;
  LODWORD(STACK[0x564]) = ((v606[595] ^ 0x6B) << 8) | ((v606[898] ^ 0x6B) << 16) | v606[292] ^ 0x6B;
  LODWORD(STACK[0x4C8]) = v606[225] ^ 0x6B | ((v606[528] ^ 0x6B | ((v606[831] ^ 0x6B) << 8) | ((v606[169] ^ 0x6B) << 16)) << 8);
  LODWORD(STACK[0x4F0]) = v606[45] ^ 0x6B | ((v606[348] ^ 0x6B) << 8) | ((v606[651] ^ 0x6B) << 16);
  LODWORD(STACK[0x4F4]) = v606[281] ^ 0x6B | ((v606[584] ^ 0x6B) << 8) | ((v606[887] ^ 0x6B) << 16);
  LODWORD(STACK[0x4CC]) = ((v606[404] ^ 0x6B) << 16) | ((v606[101] ^ 0x6B) << 8) | v606[763] ^ 0x6B;
  LODWORD(STACK[0x4D8]) = ((v606[640] ^ 0x6B) << 16) | ((v606[337] ^ 0x6B) << 8) | v606[34] ^ 0x6B;
  LODWORD(STACK[0x5A0]) = ((v606[157] ^ 0x6B) << 16) | ((v606[819] ^ 0x6B) << 8) | v606[516] ^ 0x6B;
  LODWORD(STACK[0x4C0]) = ((v606[393] ^ 0x6B) << 16) | ((v606[90] ^ 0x6B) << 8) | v606[752] ^ 0x6B;
  LODWORD(STACK[0x4AC]) = ((v606[875] ^ 0x6B) << 16) | ((v606[572] ^ 0x6B) << 8) | v606[269] ^ 0x6B;
  v623 = v606[505] ^ 0x6B | ((v606[808] ^ 0x6B) << 8) | ((v606[146] ^ 0x6B) << 16);
  LODWORD(STACK[0x5A4]) = v606[22] ^ 0x6B | ((v606[325] ^ 0x6B) << 8) | ((v606[628] ^ 0x6B) << 16);
  v624 = STACK[0x3F8];
  v625 = ((LODWORD(STACK[0x3F8]) ^ 0x6B) - 969508868 - ((2 * (LODWORD(STACK[0x3F8]) ^ 0x6B)) & 0x1F8)) ^ 0xC63677FC;
  LODWORD(STACK[0x830]) = -2009212831 * (LODWORD(STACK[0x548]) ^ 0x3162B6DA) - 75026750;
  LODWORD(STACK[0x834]) = -2009212831 * (v605 ^ 0x5B3DF28E) - 75026750;
  LODWORD(STACK[0x838]) = -2009212831 * (LODWORD(STACK[0x578]) ^ 0x9E65269E) - 75026750;
  v626 = STACK[0x434];
  v627 = LODWORD(STACK[0x434]) ^ LODWORD(STACK[0x644]);
  v628 = v627 ^ 0x585285D2;
  LODWORD(STACK[0x83C]) = -2009212831 * v628 - 75026750;
  LODWORD(STACK[0x844]) = -2009212831 * (LODWORD(STACK[0x560]) ^ 0x9CE7E4D) - 75026750;
  LODWORD(STACK[0x848]) = -2009212831 * (LODWORD(STACK[0x6C0]) ^ 0xFF72CE5A) - 75026750;
  LODWORD(STACK[0x840]) = -2009212831 * (v528 ^ 0x10CBBE48) - 75026750;
  LOBYTE(v540) = v625 - 2 * (v625 & 0x9F ^ v625 & 6) - 103;
  LODWORD(STACK[0x580]) = (v625 | (v623 << 8)) - 2 * ((v625 | (v623 << 8)) & 0x7D1DF19F ^ v625 & 6) - 48369255;
  v629 = v627 ^ 0x3962F5E;
  LODWORD(STACK[0x6B8]) = (((v627 ^ 0x3962F5E) << 11) ^ 0x25546000)
                        - 1410539297
                        - ((2 * (((v627 ^ 0x3962F5E) << 11) ^ 0x25546000)) & 0x57D9C000);
  LODWORD(STACK[0x84C]) = -75026750 - 2009212831 * STACK[0x3F0];
  LODWORD(STACK[0x610]) = ((8 * (v627 ^ 0x3962F5E)) ^ 0xDE255460)
                        - 1282174385
                        - 2 * (((8 * (v627 ^ 0x3962F5E)) ^ 0xDE255460) & 0x33939258 ^ (8 * (v627 ^ 0x3962F5E)) & 0x10);
  v630 = v606[12];
  LODWORD(STACK[0x560]) = v630;
  LOBYTE(v533) = (v630 & 0xD ^ 9) + (v630 & 0xD ^ 4);
  v631 = (v627 ^ 0x3962F5E) << 14;
  LODWORD(STACK[0x638]) = (v631 ^ 0x2AA30000) - 1402275384 - ((2 * (v631 ^ 0x2AA30000)) & 0x58D58000);
  v632 = (v626 >> 28) ^ (v626 >> 27) ^ LODWORD(STACK[0x5EC]) ^ 0xC;
  v633 = v632 + 1190849311 - 2 * v632;
  v634 = (v627 ^ 0x3962F5E) << 26;
  LODWORD(STACK[0x628]) = v634;
  LODWORD(STACK[0x6C0]) = (v634 ^ 0x30000000) - 559834230 - ((2 * (v634 ^ 0x30000000)) & 0xB8000000);
  LODWORD(STACK[0x634]) = (((v627 ^ 0x3962F5E) << 18) ^ 0xAA300000)
                        - 1376269395
                        - ((2 * (((v627 ^ 0x3962F5E) << 18) ^ 0xAA300000)) & 0x5BE80000);
  v635 = (v627 ^ 0x3962F5E) << 20;
  LODWORD(STACK[0x630]) = (((v627 ^ 0x3962F5E) << 19) ^ 0x54600000) + 570629073 - (v635 & 0x44000000);
  v636 = (v627 ^ 0x3962F5E) << 23;
  v637 = (((v627 ^ 0x3962F5E) << 22) ^ 0xA3000000) - 721564755 - (v636 & 0xA9800000);
  LODWORD(STACK[0x354]) = v637;
  v638 = v606[449];
  LODWORD(STACK[0x644]) = v638;
  v639 = (v636 ^ 0x46000000) - 1549849892 - ((2 * (v636 ^ 0x46000000)) & 0x47000000);
  LODWORD(STACK[0x358]) = v639;
  LODWORD(v606) = (_DWORD)v628 << ((~(_BYTE)v540 & 2) + (~(_BYTE)v624 & 2));
  v640 = (_DWORD)v628 << v533;
  v641 = v628 << ((v638 & 0x75 ^ 0x61 | v638 & 0x75 ^ 0x14) ^ 0x60u);
  LODWORD(v628) = v628 >> ((((v540 ^ 0x66) - 2 * ((v540 ^ 0x66) & 3) + 11) ^ v624) & 0xB);
  v642 = v628 - 1786417574 - ((2 * v628) & 0x2B0ADCB4);
  v643 = (((v627 ^ 0x3962F5E) << 27) ^ 0x60000000)
       + 1970146053
       - ((((v627 ^ 0x3962F5E) << 27) ^ 0x60000000) >> 28 << 29);
  LODWORD(STACK[0x350]) = v643;
  v644 = (((v627 ^ 0x3962F5E) << 28) ^ 0xC0000000) - 68311682 - 2 * (((v627 ^ 0x3962F5E) << 28) ^ 0xC0000000);
  LODWORD(STACK[0x5EC]) = v644;
  LODWORD(v628) = v626;
  v645 = ((v627 ^ 0x3962F5E) >> 2) ^ (v626 >> 15) ^ v633;
  v646 = v642 ^ ((LODWORD(STACK[0x5DC]) ^ 0x16F19A06 ^ v645)
               - 1786417574
               - 2 * ((LODWORD(STACK[0x5DC]) ^ 0x16F19A06 ^ v645) & 0x15856E7A ^ v645 & 0x20));
  v647 = v646 + 301960722 - ((2 * v646) & 0x23FF1C24);
  v648 = (v626 >> 21) ^ 0x11FF8CD0;
  v649 = (v626 >> 19) ^ 0xEFD39D6F;
  v650 = ((v647 ^ v648) - 271346075 - ((2 * (v647 ^ v648)) & 0xDFA72CCA)) ^ v649;
  v651 = (v626 >> 18) ^ 0x70DCADD6;
  v652 = (v650 + 1893514178 - ((2 * v650) & 0xE1B97784)) ^ v651;
  v653 = (v626 >> 14) ^ 0xB5D46EE2;
  v654 = (v652 - 1244328024 - ((2 * v652) & 0x6BAA1F50)) ^ v653;
  v655 = (v626 >> 13) ^ 0xA1803E00;
  v656 = (v654 - 1585251180 - ((2 * v654) & 0x4305F928)) ^ v655;
  v657 = (v627 >> 10) ^ 0x2649F6E5;
  LODWORD(STACK[0x3F8]) = v657;
  v658 = (v656 + 643818052 - ((2 * v656) & 0x4CBFC488)) ^ v657;
  v659 = (v627 >> 9) ^ 0x22B5466;
  LODWORD(STACK[0x3F0]) = v659;
  v660 = (v658 + 34045220 - ((2 * v658) & 0x40EFA48)) ^ v659;
  v661 = v660 + 2073503212 - ((2 * v660) & 0xF72E4BD8);
  v662 = (v627 >> 6) ^ 0x7AF66FFB;
  v663 = (v627 ^ 0x3962F5E) >> 4;
  v664 = (v627 ^ 0x3962F5E) >> 5;
  LODWORD(STACK[0x35C]) = v664;
  v665 = v664 ^ v663 ^ ((v661 ^ v662) - ((2 * (v661 ^ v662)) & 0x1E5E9022) - 1892726767);
  LODWORD(STACK[0x62C]) = (((v627 ^ 0x3962F5E) << 13) ^ 0x95518000) - 1977203719 - (v631 & 0x144C8000);
  v666 = ((v665 ^ 0x8DF16D45) >> 27) ^ ((v642 + 0x80000000) >> 30) ^ ((v665 ^ 0x8DF16D45) >> 21);
  v667 = (16 * (v627 ^ 0x3962F5E)) ^ (32 * (v627 ^ 0x3962F5E)) ^ ((v627 ^ 0x3962F5E) << 17) ^ ((v627 ^ 0x3962F5E) << 30) ^ v640 ^ v641 ^ v606 ^ (4 * (v665 ^ 0x8DF16D45)) ^ (32 * (v665 ^ 0x8DF16D45)) ^ ((v665 ^ 0x8DF16D45) << 11) ^ (32 * v666) ^ (4 * v666) ^ (v666 << 11) ^ 0xD2EBABF4;
  v668 = (v667 - 1282174385 - ((2 * v667) & 0x6727249E)) ^ LODWORD(STACK[0x610]);
  v669 = (v668 - 1410539297 - ((2 * v668) & 0x57D9C1BE)) ^ LODWORD(STACK[0x6B8]);
  v670 = (v669 - 1402275384 - ((2 * v669) & 0x58D5F390)) ^ LODWORD(STACK[0x638]);
  v671 = STACK[0x634];
  v672 = (v670 - 1376269395 - ((2 * v670) & 0x5BEF975A)) ^ LODWORD(STACK[0x634]);
  v673 = (v672 + 570629073 - ((2 * v672) & 0x440637A2)) ^ LODWORD(STACK[0x630]);
  v674 = (v673 - 721564755 - ((2 * v673) & 0xA9FB975A)) ^ v637;
  v675 = (v674 - 1549849892 - ((2 * v674) & 0x473E55B8)) ^ v639;
  v676 = (v675 - 559834230 - ((2 * v675) & 0xBD433714)) ^ LODWORD(STACK[0x6C0]);
  v677 = (v676 - 68311682 - ((2 * v676) & 0xF7DB4AFC)) ^ v644;
  v678 = (v677 + 1970146053 - ((2 * v677) & 0xEADC160A)) ^ v643;
  v679 = LODWORD(STACK[0x548]) ^ (v678 - ((2 * v678) & 0x9D4A51EE) - 828036873) ^ 0xFFC79E2D;
  v680 = v665 ^ 0x5387B9A2 ^ (v679 - ((2 * v679) & 0xB7953C9E) - 607478193);
  LODWORD(STACK[0x440]) = v666 ^ 0x8275E270 ^ (v680 - 2106203554 + (~(2 * v680) | 0xFB143B45));
  LODWORD(STACK[0x614]) = (((v627 ^ 0x3962F5E) << 7) ^ 0xE2554600)
                        + 118707824
                        - ((2 * (((v627 ^ 0x3962F5E) << 7) ^ 0xE2554600)) & 0xE26AC00);
  LODWORD(STACK[0x618]) = (((v627 ^ 0x3962F5E) << 10) ^ 0x12AA3000)
                        + 395019564
                        - ((2 * (((v627 ^ 0x3962F5E) << 10) ^ 0x12AA3000)) & 0x2F170800);
  v681 = (((v627 ^ 0x3962F5E) << 16) ^ 0xAA8C0000)
       + 534998858
       - ((2 * (((v627 ^ 0x3962F5E) << 16) ^ 0xAA8C0000)) & 0x3FC60000);
  LODWORD(STACK[0x548]) = v681;
  LODWORD(STACK[0x624]) = (v635 ^ 0xA8C00000) - 1228077073 - ((2 * (v635 ^ 0xA8C00000)) & 0x6D800000);
  LODWORD(STACK[0x628]) = (((v627 ^ 0x3962F5E) << 25) ^ 0x18000000) - 953887766 - (STACK[0x628] & 0x8C000000);
  v682 = (((v627 ^ 0x3962F5E) << 21) ^ 0x51800000)
       - 1065912549
       - ((2 * (((v627 ^ 0x3962F5E) << 21) ^ 0x51800000)) & 0x80FFFFFF);
  LODWORD(STACK[0x5DC]) = v682;
  v683 = (v628 >> 20) ^ ((v627 ^ 0x3962F5E) >> 1) ^ 0x2DE250C3;
  v684 = WORD1(v628) ^ 0xDD66238E;
  v685 = (v683 - 580486180 - ((2 * v683) & 0xBACCF7B8)) ^ v684;
  v686 = (v685 + 1893514178 - ((2 * v685) & 0xE1B97784)) ^ v651;
  v687 = LODWORD(STACK[0x5F4]) ^ 0xA0D75B03 ^ (v686 - 1596499197 + (~(2 * v686) | 0xBE5149A1) + 45);
  v688 = LODWORD(STACK[0x5F0]) ^ 0x5C1FA53C ^ (v687 + 1545577565 - ((2 * v687) & 0xB83F48BA));
  v689 = (v688 + 301960722 - ((2 * v688) & 0x23FF1C24)) ^ v648;
  v690 = (v689 - 271346075 - ((2 * v689) & 0xDFA72CCA)) ^ v649;
  v691 = (v690 - 1244328024 - ((2 * v690) & 0x6BAA1F50)) ^ v653;
  v692 = (v691 - 1585251180 - ((2 * v691) & 0x4305F928)) ^ v655;
  v693 = (v628 >> 12) ^ 0x1174F6;
  v694 = (v692 + 1372638 - ((2 * v692) & 0x29E3BC)) ^ v693;
  v695 = (v628 >> 11) ^ 0x5A07017D;
  v696 = (v694 + 1510738733 - ((2 * v694) & 0xB418165A)) ^ v695;
  v697 = (v627 >> 7) ^ 0x362E119B;
  v698 = (v696 + 916370576 - ((2 * v696) & 0x6D3D6920)) ^ v697;
  v699 = v663 ^ v662 ^ (v698 + 2073503212 - ((2 * v698) & 0xF72E4BD8));
  LODWORD(STACK[0x5F4]) = v699;
  v700 = (v699 >> 21) ^ (v628 >> 31) ^ (v699 >> 27);
  LODWORD(STACK[0x5F0]) = v700;
  LODWORD(STACK[0x444]) = ((4 * v700) ^ 0xB4) - ((8 * v700) & 0x410);
  v701 = (v627 >> 8) ^ (v628 >> 17) ^ STACK[0x5FC] & 0xEF ^ (unsigned __int16)(LODWORD(STACK[0x5F8])
                                                                                           + LODWORD(STACK[0x608])
                                                                                           + 2742);
  v702 = ((v701 ^ 0x587E80) + 301960722 - 2 * ((v701 ^ 0x587E80) & 0xFF8E1A ^ v701 & 8)) ^ v648;
  v703 = (v702 - 271346075 - ((2 * v702) & 0x5FA72CCA)) ^ v649;
  v704 = (v703 - 580486180 - ((2 * v703) & 0xBACCF7B8)) ^ v684;
  v705 = (v704 - 1244328024 - ((2 * v704) & 0x6BAA1F50)) ^ v653;
  v706 = (v705 + 1372638 - ((2 * v705) & 0x29E3BC)) ^ v693;
  v707 = (v706 + 1510738733 - ((2 * v706) & 0xB418165A)) ^ v695;
  v708 = (v707 + 643818052 - ((2 * v707) & 0x4CBFC488)) ^ LODWORD(STACK[0x3F8]);
  v709 = (v708 + 34045220 - ((2 * v708) & 0x40EFA48)) ^ LODWORD(STACK[0x3F0]);
  v710 = (v709 + 916370576 - ((2 * v709) & 0x6D3D6920)) ^ v697;
  v711 = LODWORD(STACK[0x35C]) ^ v662 ^ (v710 + 2073503212 - ((2 * v710) & 0xF72E4BD8));
  LODWORD(STACK[0x43C]) = v627;
  v712 = (4 * v627) ^ (v627 << 8) ^ (v627 << 15) ^ (v627 << 24) ^ (4 * v711) ^ 0xA85E5018;
  v713 = (v712 - 1282174385 - ((2 * v712) & 0x6727249E)) ^ LODWORD(STACK[0x610]);
  v714 = (v713 + 118707824 - ((2 * v713) & 0xE26ACE0)) ^ LODWORD(STACK[0x614]);
  v715 = (v714 + 395019564 - ((2 * v714) & 0x2F170A58)) ^ LODWORD(STACK[0x618]);
  v716 = (v715 + 534998858 - ((2 * v715) & 0x3FC6DE94)) ^ v681;
  v717 = (v716 - 1977203719 - ((2 * v716) & 0x144C87F2)) ^ LODWORD(STACK[0x62C]);
  v718 = (v717 - 1410539297 - ((2 * v717) & 0x57D9C1BE)) ^ LODWORD(STACK[0x6B8]);
  v719 = (v718 - 1376269395 - ((2 * v718) & 0x5BEF975A)) ^ v671;
  v720 = (v719 - 1228077073 - ((2 * v719) & 0x6D9A0FDE)) ^ LODWORD(STACK[0x624]);
  v721 = (v720 - 1065912549 - ((2 * v720) & 0x80EEEE36)) ^ v682;
  v722 = (v721 - 721564755 - ((2 * v721) & 0xA9FB975A)) ^ LODWORD(STACK[0x354]);
  v723 = (v722 - 1549849892 - ((2 * v722) & 0x473E55B8)) ^ LODWORD(STACK[0x358]);
  v724 = (v723 - 953887766 - ((2 * v723) & 0x8E49A7D4)) ^ LODWORD(STACK[0x628]);
  v725 = (v724 - 559834230 - ((2 * v724) & 0xBD433714)) ^ LODWORD(STACK[0x6C0]);
  v726 = (v725 + 1970146053 - ((2 * v725) & 0xEADC160A)) ^ LODWORD(STACK[0x350]);
  v727 = v711 ^ LODWORD(STACK[0x578]) ^ (v726 - ((2 * v726) & 0xE7679E3A) + 1941163805);
  v728 = v711 >> 21;
  v729 = (4 * (v711 >> 21)) ^ (v711 << 11) ^ (32 * (v711 >> 21)) ^ (v711 >> 21 << 11) ^ v727 ^ ((v711 ^ 0x2DE2554) << ((v727 & 5 ^ 5) + (v727 & 5)));
  v730 = STACK[0x5AC];
  v731 = ((LODWORD(STACK[0x5AC]) << 17) ^ 0x8B200000)
       - 835421093
       - ((2 * ((LODWORD(STACK[0x5AC]) << 17) ^ 0x8B200000)) & 0x9C680000);
  v732 = LODWORD(STACK[0x280]) ^ (LODWORD(STACK[0x568]) >> 26) ^ LODWORD(STACK[0x408]) ^ (LODWORD(STACK[0x5AC]) >> 3) ^ 0x8F689BD;
  v733 = (((v732 + 531507918 - ((2 * v732) & 0x3F5C559C)) ^ LODWORD(STACK[0x540]))
        + 881961248
        - 2
        * (((v732 + 531507918 - ((2 * v732) & 0x3F5C559C)) ^ LODWORD(STACK[0x540])) & 0x3491A937 ^ (v732
                                                                                                  + 531507918
                                                                                                  - ((2 * v732) & 0x3F5C559C)) & 0x10)
        + 7) ^ LODWORD(STACK[0x5B4]);
  v734 = (v733 - 428114694 - ((2 * v733) & 0xCCF6F9F4)) ^ LODWORD(STACK[0x414]);
  v735 = (v734 + 1255928919 - ((2 * v734) & 0x95B7E8AE)) ^ LODWORD(STACK[0x428]);
  v736 = (v735 - 298336573 - ((2 * v735) & 0xDC6F7D86)) ^ LODWORD(STACK[0x544]);
  v737 = LODWORD(STACK[0x42C]) ^ 0x550BDB9E ^ (v736 - ((2 * v736) & 0xAA173854) + 1426824234);
  v738 = (v737 - 623083995 - ((2 * v737) & 0xB5B8FC4A)) ^ LODWORD(STACK[0x5B0]);
  v739 = (v738 - 1612414505 - ((2 * v738) & 0x3FC903AE)) ^ LODWORD(STACK[0x410]);
  v740 = (v739 + 616691205 - ((2 * v739) & 0x4983EC0A)) ^ LODWORD(STACK[0x404]);
  v741 = (v740 + 13307187 - ((2 * v740) & 0x1961A66)) ^ LODWORD(STACK[0x400]);
  v742 = (v741 - 231597488 - ((2 * v741) & 0xE46434A0)) ^ LODWORD(STACK[0x40C]);
  v743 = LODWORD(STACK[0x670]) ^ (v742 + 1465237580 - ((2 * v742) & 0xAEAB8098));
  v744 = (2 * LODWORD(STACK[0x5AC])) ^ (LODWORD(STACK[0x5AC]) << 6) ^ LODWORD(STACK[0x600]);
  LODWORD(v628) = (v743 >> 27) ^ (v743 >> 21);
  LODWORD(STACK[0x670]) = v628;
  v745 = v744 ^ (4 * v743) ^ (v743 << 11) ^ (32 * v743) ^ (4 * v628) ^ (32 * v628) ^ ((_DWORD)v628 << 11) ^ 0x26DFA188;
  v746 = (v745 - 142372375 - ((2 * v745) & 0xEF0723D2)) ^ LODWORD(STACK[0x680]);
  v747 = STACK[0x688];
  v748 = (v746 - 535700055 - ((2 * v746) & 0xC023BB52)) ^ LODWORD(STACK[0x688]);
  v749 = STACK[0x6B4];
  v750 = (v748 + 2141566351 - ((2 * v748) & 0xFF4B6B1E)) ^ LODWORD(STACK[0x6B4]);
  v751 = (v750 + 1115435089 - ((2 * v750) & 0x84F860A2)) ^ LODWORD(STACK[0x710]);
  v752 = (v751 - 1293277497 - ((2 * v751) & 0x65D44D8E)) ^ LODWORD(STACK[0x708]);
  LODWORD(v330) = STACK[0x6C8];
  v753 = (v752 + 131487667 - ((2 * v752) & 0xFACAF66)) ^ LODWORD(STACK[0x6C8]);
  v754 = STACK[0x6A0];
  v755 = (v753 + 501064734 - ((2 * v753) & 0x3BBB483C)) ^ LODWORD(STACK[0x6A0]);
  v756 = (v755 - 439169492 - ((2 * v755) & 0xCBA59C58)) ^ LODWORD(STACK[0x6F4]);
  v757 = (v756 - 835421093 - ((2 * v756) & 0x9C68F8B6)) ^ v731;
  v758 = (v757 - 1034491021 - ((2 * v757) & 0x84ADD6E6)) ^ LODWORD(STACK[0x700]);
  v759 = STACK[0x690];
  v760 = (v758 + 1100913726 - ((2 * v758) & 0x833D387C)) ^ LODWORD(STACK[0x690]);
  v761 = (v760 + 1250695142 - ((2 * v760) & 0x95182FCC)) ^ LODWORD(STACK[0x678]);
  v762 = (v761 + 981408207 - ((2 * v761) & 0x74FE339E)) ^ LODWORD(STACK[0x658]);
  v763 = STACK[0x6D0];
  v764 = (v762 + 2106992119 - ((2 * v762) & 0xFB2C4BEE)) ^ LODWORD(STACK[0x6D0]);
  v765 = STACK[0x6A8];
  v766 = (v764 + 1848223927 - ((2 * v764) & 0xDC53516E)) ^ LODWORD(STACK[0x6A8]);
  v767 = v743 ^ 0x89CAAB1 ^ (v766 - ((2 * v766) & 0x19CFDDD0) + 216526568);
  LODWORD(STACK[0x700]) = v767 - ((2 * v767) & 0x599C3B2E);
  v768 = STACK[0x5E8];
  v769 = (16 * v730) ^ (32 * v730) ^ (v730 << 30) ^ (4 * LODWORD(STACK[0x5E8]));
  LODWORD(v628) = LODWORD(STACK[0x5E0]) ^ (LODWORD(STACK[0x5E8]) >> 27);
  LODWORD(STACK[0x708]) = v628;
  v770 = v768;
  v771 = v769 ^ (32 * v768) ^ (v768 << 11) ^ (4 * v628);
  v772 = (32 * v628) ^ ((_DWORD)v628 << 11) ^ 0xC96AA5A8 ^ v771;
  v773 = (v772 + 2141566351 - 2 * (v772 & 0x7FA5B59F ^ v771 & 0x10)) ^ v749;
  v774 = (v773 - 535700055 - ((2 * v773) & 0xC023BB52)) ^ v747;
  v775 = (v774 - 295971623 - ((2 * v774) & 0xDCB7A9B2)) ^ LODWORD(STACK[0x640]);
  v776 = (v775 + 131487667 - ((2 * v775) & 0xFACAF66)) ^ v330;
  v777 = (v776 + 501064734 - ((2 * v776) & 0x3BBB483C)) ^ v754;
  v778 = (v777 - 835421093 - ((2 * v777) & 0x9C68F8B6)) ^ v731;
  v779 = (v778 + 875087367 - ((2 * v778) & 0x68518C0E)) ^ LODWORD(STACK[0x6E0]);
  v780 = (v779 + 153847549 - ((2 * v779) & 0x12570DFA)) ^ LODWORD(STACK[0x698]);
  v781 = (v780 - 46610437 - ((2 * v780) & 0xFA718FF6)) ^ LODWORD(STACK[0x6DC]);
  v782 = (v781 + 1100913726 - ((2 * v781) & 0x833D387C)) ^ v759;
  v783 = (v782 + 1430135347 - ((2 * v782) & 0xAA7C4466)) ^ LODWORD(STACK[0x430]);
  v784 = (v783 + 2106992119 - ((2 * v783) & 0xFB2C4BEE)) ^ v763;
  v785 = v784 + 1848223927 - ((2 * v784) & 0xDC53516E);
  LOBYTE(v777) = v785 ^ v765;
  v786 = ((v785 ^ v765) + 1821882962 - 2 * ((v785 ^ v765) & 0x6C97BA5A ^ v785 & 8)) ^ LODWORD(STACK[0x420]);
  v787 = LODWORD(STACK[0x448]) ^ (v786 + 275660974 - 2 * (v786 & 0x106E40AF ^ v777 & 1)) ^ 0xA5FEE6;
  v788 = (v787 - ((2 * v787) & 0x75A132B2) - 1160734375) ^ v770;
  LODWORD(STACK[0x6F4]) = (v788 ^ 0xBEABDD00) - 2 * ((v788 ^ 0xBEABDD00) & 0x6CD0F ^ v788 & 3);
  LODWORD(v330) = v729 ^ v728;
  v789 = v729 ^ v728 ^ 0x3414F288;
  v790 = ((4 * v789) ^ 0xA8D8B344) + 1124473465 - ((2 * ((4 * v789) ^ 0xA8D8B344)) & 0x860C34F0);
  LODWORD(STACK[0x710]) = v790;
  v791 = ((v789 << 16) ^ 0x2CD10000) + 1499172568 - ((2 * ((v789 << 16) ^ 0x2CD10000)) & 0xB2B60000);
  LODWORD(STACK[0x678]) = v791;
  v792 = ((8 * v789) ^ 0x51B16688) - 1124479146 - ((2 * ((8 * v789) ^ 0x51B16688)) & 0x79F39EA0);
  LODWORD(STACK[0x6D0]) = v792;
  v793 = ((v789 << 10) ^ 0xD8B34400) - 1057116069 - ((2 * ((v789 << 10) ^ 0xD8B34400)) & 0x81FB6000);
  LODWORD(STACK[0x688]) = v793;
  v794 = ((v789 << 7) ^ 0x1B166880) - 853236343 - ((2 * ((v789 << 7) ^ 0x1B166880)) & 0x9A494B00);
  LODWORD(STACK[0x680]) = v794;
  LODWORD(v641) = ((v789 << 14) ^ 0x8B344000) + 600029553 - ((2 * ((v789 << 14) ^ 0x8B344000)) & 0x47870000);
  v795 = ((v789 << 20) ^ 0xCD100000) - 1966910240 - ((2 * ((v789 << 20) ^ 0xCD100000)) & 0x15800000);
  LODWORD(STACK[0x658]) = v795;
  v796 = ((v789 << 25) ^ 0xA2000000) - 425880033 - ((2 * ((v789 << 25) ^ 0xA2000000)) & 0xCC000000);
  LODWORD(STACK[0x640]) = v796;
  v797 = ((v789 << 22) ^ 0x34400000) + 1002314259 - ((2 * ((v789 << 22) ^ 0x34400000)) & 0x77777777);
  LODWORD(STACK[0x6DC]) = v797;
  v798 = ((v789 << 24) ^ 0xD1000000) + 1223160259 - ((2 * ((v789 << 24) ^ 0xD1000000)) & 0x90000000);
  LODWORD(STACK[0x6B4]) = v798;
  v799 = ((v789 << 26) ^ 0x44000000) + 1810235292 - ((2 * ((v789 << 26) ^ 0x44000000)) & 0xD0000000);
  LODWORD(STACK[0x5FC]) = v799;
  LODWORD(v606) = v729 ^ v728 ^ 0x1E22DE59;
  v800 = ((v729 ^ v728) << 29) ^ ((_DWORD)v606 << 28) ^ (v789 << 17) ^ (v789 << 6) ^ (2 * v789) ^ 0xA0456DE2;
  v801 = v729 ^ v728 ^ 0xFE014EF3;
  LODWORD(STACK[0x6A8]) = v801;
  v802 = (v800 - 534540118 - 2 * (v800 & 0x602390AE ^ (2 * v789) & 4)) ^ v801;
  v803 = (v802 + 1124473465 - ((2 * v802) & 0x860C34F2)) ^ v790;
  v804 = (v803 - 1124479146 - ((2 * v803) & 0x79F39EAC)) ^ v792;
  v805 = (v804 - 853236343 - ((2 * v804) & 0x9A494B12)) ^ v794;
  v806 = (v805 - 1057116069 - ((2 * v805) & 0x81FB60B6)) ^ v793;
  v807 = ((v789 << 13) ^ 0xC59A2000) + 1533474624 + (~(2 * ((v789 << 13) ^ 0xC59A2000)) | 0x49323FFF) + 1;
  LODWORD(v628) = (v806 + 1533474624 - ((2 * v806) & 0xB6CDEE80)) ^ v807;
  LODWORD(v628) = (v628 + 600029553 - 2 * (v628 & 0x23C3B977 ^ v806 & 6)) ^ v641;
  LODWORD(v628) = (v628 + 1499172568 - ((2 * v628) & 0xB2B71DB0)) ^ v791;
  LODWORD(v628) = (v628 - 1966910240 - ((2 * v628) & 0x1586A9C0)) ^ v795;
  LODWORD(v628) = (v628 + 1002314259 - ((2 * v628) & 0x777C3426)) ^ v797;
  LODWORD(v628) = (v628 + 1223160259 - ((2 * v628) & 0x91CFE386)) ^ v798;
  LODWORD(v628) = (v628 - 425880033 - ((2 * v628) & 0xCD3B2C3E)) ^ v796;
  v808 = v628 + 1810235292 - ((2 * v628) & 0xD7CBFF38);
  v809 = (v729 >> 26) ^ (v729 >> 15) ^ (v789 >> 3);
  v810 = (v729 >> 30) | 0x67CC66B8;
  v811 = ((((v729 >> 31) | 0x546F9D8) ^ v809)
        + 1741448888
        - 2 * ((((v729 >> 31) | 0x546F9D8) ^ v809) & 0x7CC66BE ^ v809 & 6)) ^ v810;
  v812 = (v729 >> 29) ^ 0xBB6E7F8D ^ (v811 - 1150386291 - ((2 * v811) & 0x76DCFF1A));
  v813 = (v729 >> 25) ^ 0x171273C3;
  v814 = (v812 + 387085260 - ((2 * v812) & 0x2E24E798)) ^ v813;
  v815 = (v729 >> 22) ^ 0xB15AEE61;
  v816 = (v814 - 1319440871 - ((2 * v814) & 0x62B5DC32)) ^ v815;
  v817 = (v729 >> 18) ^ 0xAE50DB0D;
  v818 = (v816 - 1370432379 - ((2 * v816) & 0x5CA1B90A)) ^ v817;
  v819 = (v729 >> 19) ^ 0xCBE98C2B;
  LODWORD(STACK[0x6A0]) = v819;
  v820 = (v818 - 873885713 - ((2 * v818) & 0x97D31FDE)) ^ v819;
  v821 = HIWORD(v729) ^ 0xE6E4AB81;
  v822 = (v820 - 421218909 - ((2 * v820) & 0xCDC96B46)) ^ v821;
  v823 = (v729 >> 12) ^ 0x8573DA2F;
  v824 = (v822 - 2056112126 - ((2 * v822) & 0xAE47004)) ^ v823;
  v825 = ((v729 ^ v728) >> 10) ^ 0xCCA3DA14;
  LODWORD(STACK[0x610]) = v825;
  v826 = (v824 - 861646173 - ((2 * v824) & 0x9948A546)) ^ v825;
  v827 = ((v729 ^ v728) >> 8) ^ 0xDA750118;
  LODWORD(STACK[0x608]) = v827;
  v828 = (v826 - 630512698 - ((2 * v826) & 0xB4D6478C)) ^ v827;
  LODWORD(STACK[0x698]) = v789 >> 7;
  LODWORD(v628) = (v789 >> 7) ^ 0x903219B7;
  v829 = (v828 - 1872333330 - ((2 * v828) & 0x20CCEBDC)) ^ v628;
  v830 = (v808 ^ v799) - ((2 * (v808 ^ v799)) & 0xC8DB108E);
  v831 = ((v789 << 11) ^ 0xB1668800) + 1623707992 - ((2 * ((v789 << 11) ^ 0xB1668800)) & 0xC18FA000);
  LODWORD(STACK[0x600]) = v831;
  v832 = ((v729 ^ v728) >> 6) ^ 0xFA40E0AE;
  v833 = v832 ^ (v789 >> 4);
  v834 = v833 ^ (v829 - 96965673 - ((2 * v829) & 0xF470D7AE));
  v835 = (v834 >> 27) ^ (v834 >> 21);
  LODWORD(STACK[0x6E0]) = v835;
  v836 = v834 ^ (32 * v834) ^ (v834 << 11) ^ (4 * (v834 ^ v835)) ^ (32 * v835) ^ (v835 << 11) ^ 0xA339FAEA ^ (v830 - 462583737);
  LODWORD(STACK[0x6C8]) = v836 - ((2 * v836) & 0xA578B68E);
  v837 = v641 ^ (v789 << 12);
  v838 = v807 ^ 0xE597A1CE ^ v837;
  v837 ^= 0x410EA971u;
  v839 = (v838 + v837 + 1) ^ ((v807 ^ 0xA49908BF) + 1);
  v840 = ((v839 + 1533474624 - ((2 * v839) & 0xB6CDEE80)) ^ v807) + v837;
  v841 = ((v789 << 21) ^ 0x9A200000) - 420503527 - ((2 * ((v789 << 21) ^ 0x9A200000)) & 0xCDC00000);
  v842 = (v729 >> 13) ^ (v729 >> 20) ^ (v789 >> 1) ^ (unsigned __int16)(v606 >> ((v729 >> 25) & 0x13 ^ 0x10 | (v729 >> 25) & 0x13 ^ 3));
  v843 = ((v842 ^ 0x151BE69C) + 387085260 - 2 * ((v842 ^ 0x151BE69C) & 0x171273CF ^ v842 & 3)) ^ v813;
  v844 = (v843 - 1319440871 - ((2 * v843) & 0x62B5DC32)) ^ v815;
  v845 = (v729 >> 21) ^ 0x62233CD7;
  v846 = (v844 + 1646476326 - ((2 * v844) & 0xC446784C)) ^ v845;
  v847 = (v846 - 1370432379 - ((2 * v846) & 0x5CA1B90A)) ^ v817;
  v848 = (v847 - 421218909 - ((2 * v847) & 0xCDC96B46)) ^ v821;
  v849 = (v729 >> 14) ^ 0x2F07B453;
  v850 = (v848 + 789040344 - ((2 * v848) & 0x5E0F99B0)) ^ v849;
  v851 = (v850 - 2056112126 - ((2 * v850) & 0xAE47004)) ^ v823;
  v852 = (v729 >> 11) ^ 0xB01C85C0;
  v853 = (v851 - 1340128869 - ((2 * v851) & 0x603E8336)) ^ v852;
  v854 = (v853 - 1872333330 - ((2 * v853) & 0x20CCEBDC)) ^ v628;
  v855 = v833 ^ (v854 - 96965673 - ((2 * v854) & 0xF470D7AE));
  v856 = ((8 * v855) & 0x5FAB6FF8 ^ 0x150B0668) + ((4 * v855) ^ 0x25583CCB);
  LODWORD(v628) = (v789 << 19) ^ ((v729 ^ ~v728) << 31) ^ (v789 << 28) ^ v840 ^ (LODWORD(STACK[0x440])
                                                                               - ((2 * LODWORD(STACK[0x440])) & 0xB39D797E)
                                                                               - 640762689) ^ v855;
  LODWORD(v628) = ((v628 ^ 0xADE5DE72) - 534540118 - 2 * ((v628 ^ 0xADE5DE72) & 0x602390AB ^ v628 & 1)) ^ LODWORD(STACK[0x6A8]);
  v857 = STACK[0x680];
  LODWORD(v628) = (v628 - 853236343 - ((2 * v628) & 0x9A494B12)) ^ LODWORD(STACK[0x680]);
  LODWORD(v641) = STACK[0x688];
  LODWORD(v628) = (v628 - 1057116069 - ((2 * v628) & 0x81FB60B6)) ^ LODWORD(STACK[0x688]);
  LODWORD(v628) = (v628 + 1623707992 - ((2 * v628) & 0xC18FA2B0)) ^ v831;
  v858 = STACK[0x678];
  LODWORD(v628) = (v628 + 1499172568 - ((2 * v628) & 0xB2B71DB0)) ^ LODWORD(STACK[0x678]);
  v859 = STACK[0x658];
  LODWORD(v628) = (v628 - 1966910240 - ((2 * v628) & 0x1586A9C0)) ^ LODWORD(STACK[0x658]);
  LODWORD(v628) = (v628 - 420503527 - ((2 * v628) & 0xCDDF4032)) ^ v841;
  LODWORD(v628) = (v628 - 946635153 - ((2 * v628) & 0x8F26FCDE)) ^ (((v789 << 18) ^ 0xB3440000)
                                                                  - 946635153
                                                                  - ((2 * ((v789 << 18) ^ 0xB3440000)) & 0x8F200000));
  v860 = ((v789 << 18) ^ 0xB3440000) - 946635153 - ((2 * ((v789 << 18) ^ 0xB3440000)) & 0x8F200000);
  v861 = STACK[0x640];
  LODWORD(v606) = STACK[0x5FC];
  LODWORD(v628) = LODWORD(STACK[0x640]) ^ 0x6BE5FF9C ^ LODWORD(STACK[0x5FC]) ^ (v628
                                                                              - 425880033
                                                                              - ((2 * v628) & 0xCD3B2C3E));
  v862 = (v729 >> 31) ^ (v855 >> 21) ^ (v855 >> 27);
  LODWORD(STACK[0x690]) = v862;
  v863 = ((v729 >> 29) & 3 | 0x67CC66B8) ^ v810 | (v729 >> 29) & 4;
  v864 = (32 * v855) ^ (v855 << 11) ^ (4 * v862) ^ (32 * v862) ^ ((unint64_t)(v862 ^ 0x15u) << (38 - (v862 & 0x1B ^ 0x11 | v862 & 0x1B ^ 0xAu))) ^ 0x4F7A3354 ^ (v856 + v628 - 2 * (v628 & (v856 + 1344948225)) - 802535423);
  LODWORD(STACK[0x6A8]) = v864 - ((2 * v864) & 0x948D7042);
  v865 = (v729 >> 17) ^ HIBYTE(v729) ^ (v330 >> 9) ^ (v330 >> 5);
  v866 = ((v865 ^ v863 ^ 0xFE0892) - 96965673 - 2 * ((v865 ^ v863 ^ 0xFE0892) & 0x7A386BDF ^ v865 & 8)) ^ v832;
  v867 = (v866 + 387085260 - ((2 * v866) & 0x2E24E798)) ^ v813;
  v868 = (v867 - 1319440871 - ((2 * v867) & 0x62B5DC32)) ^ v815;
  v869 = (v868 + 1646476326 - ((2 * v868) & 0xC446784C)) ^ v845;
  v870 = (v869 - 873885713 - ((2 * v869) & 0x97D31FDE)) ^ LODWORD(STACK[0x6A0]);
  v871 = (v870 - 421218909 - ((2 * v870) & 0xCDC96B46)) ^ v821;
  v872 = (v871 + 789040344 - ((2 * v871) & 0x5E0F99B0)) ^ v849;
  v873 = (v872 - 2056112126 - ((2 * v872) & 0xAE47004)) ^ v823;
  v874 = (v873 - 1340128869 - ((2 * v873) & 0x603E8336)) ^ v852;
  v875 = (v874 - 861646173 - ((2 * v874) & 0x9948A546)) ^ LODWORD(STACK[0x610]);
  v876 = LODWORD(STACK[0x698]) ^ LODWORD(STACK[0x608]) ^ (v875 - 630512698 - ((2 * v875) & 0xB4D6478C));
  v877 = ((_DWORD)v330 << 27) ^ ((_DWORD)v330 << 15) ^ (v789 << 8) ^ ((((_DWORD)v330 << 23) ^ 0x2C800000)
                                                                    + 1223160259
                                                                    - ((2 * (((_DWORD)v330 << 23) ^ 0x2C800000)) & 0x91000000)) ^ LODWORD(STACK[0x6B4]) ^ 0x91005100;
  v878 = (v877 + 1499172568 - ((2 * v877) & 0xB2B71DB2)) ^ v858;
  v879 = (v878 - 1124479146 - ((2 * v878) & 0x79F39EAC)) ^ LODWORD(STACK[0x6D0]);
  v880 = (v879 + 1124473465 - ((2 * v879) & 0x860C34F2)) ^ LODWORD(STACK[0x710]);
  v881 = (v880 - 853236343 - ((2 * v880) & 0x9A494B12)) ^ v857;
  v882 = (v881 - 1057116069 - ((2 * v881) & 0x81FB60B6)) ^ v641;
  v883 = (v882 + 1623707992 - ((2 * v882) & 0xC18FA2B0)) ^ LODWORD(STACK[0x600]);
  v884 = (v883 + 1533474624 - ((2 * v883) & 0xB6CDEE80)) ^ v807;
  v885 = (v884 - 946635153 - 2 * (v884 & 0x47937E7F ^ v883 & 0x10)) ^ v860;
  v886 = (v885 - 1966910240 - ((2 * v885) & 0x1586A9C0)) ^ v859;
  v887 = (v886 - 420503527 - ((2 * v886) & 0xCDDF4032)) ^ v841;
  v888 = (v887 + 1002314259 - ((2 * v887) & 0x777C3426)) ^ LODWORD(STACK[0x6DC]);
  v889 = (v888 - 425880033 - ((2 * v888) & 0xCD3B2C3E)) ^ v861;
  v890 = ((LODWORD(STACK[0x43C]) << 31) | 0x1DE69228) ^ (v629 << 12) ^ (4 * LODWORD(STACK[0x5F4])) ^ (32 * LODWORD(STACK[0x5F4])) ^ (LODWORD(STACK[0x5F4]) << 11) ^ LODWORD(STACK[0x5F0]) ^ (32 * LODWORD(STACK[0x5F0])) ^ (LODWORD(STACK[0x5F0]) << 11) ^ (LODWORD(STACK[0x444]) - 1126374903) ^ v606 ^ (4 * v876) ^ (32 * v876) ^ (v876 << 11) ^ (4 * (v876 >> 21)) ^ (32 * (v876 >> 21)) ^ (v876 >> 21 << 11) ^ (v889 + 1810235292 - ((2 * v889) & 0xD7CBFF38));
  v891 = (v890 + 118707824 - ((2 * v890) & 0xE26ACE0)) ^ LODWORD(STACK[0x614]);
  v892 = LODWORD(STACK[0x43C]) ^ 0x1DB9FE74 ^ (v891 - ((2 * v891) & 0x8BD6F74C) + 1173060518);
  v893 = (v892 + 395019564 - ((2 * v892) & 0x2F170A58)) ^ LODWORD(STACK[0x618]);
  v894 = (v893 - 1410539297 - ((2 * v893) & 0x57D9C1BE)) ^ LODWORD(STACK[0x6B8]);
  v895 = (v894 - 1977203719 - ((2 * v894) & 0x144C87F2)) ^ LODWORD(STACK[0x62C]);
  v896 = (v895 - 1402275384 - ((2 * v895) & 0x58D5F390)) ^ LODWORD(STACK[0x638]);
  v897 = (v896 + 534998858 - ((2 * v896) & 0x3FC6DE94)) ^ LODWORD(STACK[0x548]);
  v898 = (v897 - 1376269395 - ((2 * v897) & 0x5BEF975A)) ^ LODWORD(STACK[0x634]);
  v899 = (v898 + 570629073 - ((2 * v898) & 0x440637A2)) ^ LODWORD(STACK[0x630]);
  v900 = (v899 - 1228077073 - ((2 * v899) & 0x6D9A0FDE)) ^ LODWORD(STACK[0x624]);
  v901 = (v900 - 1065912549 - ((2 * v900) & 0x80EEEE36)) ^ LODWORD(STACK[0x5DC]);
  v902 = (v901 - 953887766 - ((2 * v901) & 0x8E49A7D4)) ^ LODWORD(STACK[0x628]);
  v903 = (v902 - 559834230 - ((2 * v902) & 0xBD433714)) ^ LODWORD(STACK[0x6C0]);
  v904 = (v903 - 68311682 - ((2 * v903) & 0xF7DB4AFC)) ^ LODWORD(STACK[0x5EC]);
  v905 = (v904 - ((2 * v904) & 0xEB2FEF4A) + 1972893605) ^ LODWORD(STACK[0x5F4]);
  LODWORD(v330) = v876 ^ LODWORD(STACK[0x478]) ^ ((v905 ^ 0x702BBD0D)
                                                + 1169064557
                                                - 2 * ((v905 ^ 0x702BBD0D) & 0x45AE826F ^ v905 & 2));
  v906 = v330 ^ (v876 >> 21);
  v907 = STACK[0x3D0];
  LODWORD(STACK[0x6B8]) = (LODWORD(STACK[0x3D0]) ^ 0x3AC1BAC) << ((v906 ^ 0x45) & 0xD ^ 0xD) << ((v906 ^ 0x45) & 0xD);
  LODWORD(STACK[0x710]) = (LODWORD(STACK[0x3EC]) ^ 0x88E80000)
                        + 1492516485
                        - ((2 * (LODWORD(STACK[0x3EC]) ^ 0x88E80000)) & 0xB1E00000);
  v908 = STACK[0x648];
  v909 = ((LODWORD(STACK[0x648]) << 14) ^ 0xC4474000)
       + 1737063702
       - ((2 * ((LODWORD(STACK[0x648]) << 14) ^ 0xC4474000)) & 0xCF128000);
  LODWORD(STACK[0x6DC]) = v909;
  LODWORD(STACK[0x6D0]) = ((v908 << 28) ^ 0xD0000000) - 96716970 + (a39 ^ (v908 << 29));
  v910 = STACK[0x650];
  v911 = v908;
  v912 = (LODWORD(STACK[0x650]) >> 28) ^ (LODWORD(STACK[0x650]) >> 27) ^ (LODWORD(STACK[0x650]) >> 15) ^ LODWORD(STACK[0x36C]) ^ (v908 >> 2) ^ 0x138DC36A;
  v913 = (v912 + 1732574680 - ((2 * v912) & 0x4E89FBB0)) ^ LODWORD(STACK[0x374]);
  LODWORD(v606) = STACK[0x3B4];
  v914 = (v913 - 2000763114 - ((2 * v913) & 0x117D8E2C)) ^ LODWORD(STACK[0x3B4]);
  v915 = (LODWORD(STACK[0x650]) >> 18) ^ 0x99A18A8E;
  v916 = (v914 - 1717466523 - ((2 * v914) & 0x334314CA)) ^ v915;
  v917 = STACK[0x3A4];
  v918 = (v916 + 1360752512 - ((2 * v916) & 0xA236DF00)) ^ LODWORD(STACK[0x3A4]);
  v919 = (LODWORD(STACK[0x650]) >> 13) ^ 0x1F26D3C8;
  v920 = (v918 + 522636968 - ((2 * v918) & 0x3E4D9D50)) ^ v919;
  v921 = STACK[0x37C];
  v922 = (v920 - 1487228556 - ((2 * v920) & 0x4EB562E8)) ^ LODWORD(STACK[0x37C]);
  v923 = (v922 + 1005822125 - ((2 * v922) & 0x77E7415A)) ^ LODWORD(STACK[0x368]);
  v924 = (v923 - 1247827880 - ((2 * v923) & 0x6B3F50B0)) ^ LODWORD(STACK[0x2A4]);
  v925 = STACK[0x378];
  v926 = (v924 + 473909758 - ((2 * v924) & 0x387E93FC)) ^ LODWORD(STACK[0x378]);
  v927 = (v911 >> 4) ^ LODWORD(STACK[0x29C]) ^ (v926 - ((2 * v926) & 0x53195C98) - 1450398132);
  LODWORD(STACK[0x6C0]) = v927;
  v928 = v927 ^ 0xABFD16C4;
  v929 = ((v928 >> 26) & 0x1E) + ((v928 >> 27) ^ 0xEFEBFFCF);
  v930 = ((v928 >> 20) & 0x45E ^ 0x4E) + ((v928 >> 21) ^ 0xD6FDF208);
  v931 = v929 + v930 - 2 * ((v930 + 688000465) & (v929 + 269746225)) + 957746690;
  LODWORD(STACK[0x6B4]) = (v931 ^ 0x2EFFD777) + 10377 + ((2 * v931) & 0x5DFFAEEE);
  v932 = (((v911 >> 1) ^ (v910 >> 20) ^ 0x271B88B4)
        - 1487228556
        - 2 * (((v911 >> 1) ^ (v910 >> 20) ^ 0x271B88B4) & 0x275AB17C ^ ((v911 >> 1) ^ (v910 >> 20)) & 8)) ^ v921;
  v933 = (v932 + 502508622 - ((2 * v932) & 0x3BE7589C)) ^ LODWORD(STACK[0x370]);
  v934 = (v933 + 1970227098 - ((2 * v933) & 0xEADE8F34)) ^ LODWORD(STACK[0x3A0]);
  v935 = (v934 - 2000763114 - ((2 * v934) & 0x117D8E2C)) ^ v606;
  v936 = (v935 + 1372317474 + (~(2 * v935) | 0x5C6831B9) + 2) ^ LODWORD(STACK[0x3BC]);
  v937 = (v936 - 152486761 - ((2 * v936) & 0xEDD2792E)) ^ LODWORD(STACK[0x3AC]);
  v938 = (v937 - 1717466523 - ((2 * v937) & 0x334314CA)) ^ v915;
  v939 = (v938 - 999956642 - ((2 * v938) & 0x88CBBEBC)) ^ LODWORD(STACK[0x3A8]);
  v940 = (v939 + 1360752512 - ((2 * v939) & 0xA236DF00)) ^ v917;
  v941 = (v940 + 522636968 - ((2 * v940) & 0x3E4D9D50)) ^ v919;
  v942 = (v941 + 1070376154 - ((2 * v941) & 0x7F9949B4)) ^ LODWORD(STACK[0x39C]);
  v943 = (v911 >> 4) ^ v925 ^ (v942 + 473909758 - ((2 * v942) & 0x387E93FC));
  v944 = (v943 >> 27) ^ (v910 >> 31) ^ (v943 >> 21);
  v945 = ((v907 << 31) | 0x657D4F37) ^ (v911 << 12) ^ (4 * v943) ^ (v943 << 11) ^ (32 * v943) ^ (4 * v944) ^ (v944 << 11) ^ (32 * v944) ^ LODWORD(STACK[0x708]) ^ (LODWORD(STACK[0x6F4]) - 2147037940);
  v946 = v907 ^ 0xD2A08648 ^ (v945 - ((2 * v945) & 0xA2193BC8) - 787702300);
  v947 = (v946 - 1076187253 - ((2 * v946) & 0x7FB55F16)) ^ LODWORD(STACK[0x3E8]);
  v948 = (v947 - 1856817684 - ((2 * v947) & 0x22A66BD8)) ^ LODWORD(STACK[0x3E4]);
  v949 = (v948 - 1486187535 - ((2 * v948) & 0x4ED527E2)) ^ LODWORD(STACK[0x668]);
  v950 = (v949 - 1107177111 - ((2 * v949) & 0x7C03A2D2)) ^ LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x6A0]) = -820839892;
  v951 = (v950 + 1737063702 - ((2 * v950) & 0xCF12FA2C)) ^ v909;
  v952 = (v951 - 1805481595 - ((2 * v951) & 0x28C5130A)) ^ LODWORD(STACK[0x3DC]);
  v953 = (v952 + 722075106 - ((2 * v952) & 0x5613FBC4)) ^ LODWORD(STACK[0x660]);
  v954 = (v953 + 1492516485 - ((2 * v953) & 0xB1EBFD0A)) ^ LODWORD(STACK[0x710]);
  v955 = (v954 - 1849268276 - ((2 * v954) & 0x238CCF98)) ^ LODWORD(STACK[0x3D8]);
  v956 = (v955 + 1155652212 - ((2 * v955) & 0x89C3B4E8)) ^ LODWORD(STACK[0x65C]);
  v957 = (v956 - 854795217 - ((2 * v956) & 0x9A19B85E)) ^ LODWORD(STACK[0x3D4]);
  v958 = (v957 + 1094719871 - ((2 * v957) & 0x828032FE)) ^ LODWORD(STACK[0x654]);
  v959 = LODWORD(STACK[0x6D0]) + 1;
  LODWORD(STACK[0x698]) = v959;
  v960 = (v958 - 96716970 - ((2 * v958) & 0xF4786EAC)) ^ v959;
  LODWORD(STACK[0x6D0]) = v944 ^ v943 ^ (v960 - ((2 * v960) & 0xE98F6F4A) + 1959245733);
  LODWORD(v641) = (((v906 ^ 0xE96D4A45) << 13) ^ 0x4ADFA000)
                - 433188048
                - ((2 * (((v906 ^ 0xE96D4A45) << 13) ^ 0x4ADFA000)) & 0xCC5C0000);
  v961 = (((v906 ^ 0xE96D4A45) << 11) ^ 0x52B7E800)
       - 804984253
       - ((2 * (((v906 ^ 0xE96D4A45) << 11) ^ 0x52B7E800)) & 0xA009D000);
  v962 = (((v906 ^ 0xE96D4A45) << 18) ^ 0x5BF40000)
       + 1858489290
       - ((2 * (((v906 ^ 0xE96D4A45) << 18) ^ 0x5BF40000)) & 0xDD880000);
  v963 = v906 ^ 0x1EC71CB8;
  v964 = v963 >> (STACK[0x5AC] & 0xF) >> (STACK[0x5AC] & 0xF ^ 0xF);
  v965 = v964 + 375717470 - ((2 * v964) & 0x2CC9FCBC);
  v966 = (((v906 ^ 0xE96D4A45) << 23) ^ 0x7E800000)
       - 542873208
       - ((2 * (((v906 ^ 0xE96D4A45) << 23) ^ 0x7E800000)) & 0xBF000000);
  v967 = (v330 >> 28) ^ (v330 >> 27) ^ (v330 >> 18) ^ 0x7B3;
  v968 = v967 + 375717470 - ((2 * v967) & 0x7CBC);
  v969 = (((v906 ^ 0xE96D4A45) << 21) ^ 0xDFA00000)
       - 1061309613
       - ((2 * (((v906 ^ 0xE96D4A45) << 21) ^ 0xDFA00000)) & 0x81400000);
  v970 = (((v906 ^ 0xE96D4A45) << 26) ^ 0xF4000000)
       + 408177266
       - ((2 * (((v906 ^ 0xE96D4A45) << 26) ^ 0xF4000000)) & 0x30000000);
  v971 = (((v906 ^ 0xE96D4A45) << 22) ^ 0xBF400000)
       + 1290195985
       - ((2 * (((v906 ^ 0xE96D4A45) << 22) ^ 0xBF400000)) & 0x99800000);
  v972 = (v330 >> 13) ^ ((v906 ^ 0xE96D4A45) >> 4) ^ v965 ^ 0xF7A5357 ^ v968;
  v973 = v972 + 558346958 - ((2 * v972) & 0x428F659C);
  v974 = ((v330 >> 29) | 0xD92F1430) ^ (v330 >> 30) ^ 0xF868A6FE;
  v975 = (v330 >> 21) ^ 0xDB104B26;
  v976 = ((v973 ^ v974) - 619689008 - ((2 * (v973 ^ v974)) & 0xB62097A0)) ^ v975;
  v977 = v976 - 627019152 - ((2 * v976) & 0xB540E4E0);
  v978 = (v330 >> 19) ^ 0xDAA071A8;
  v979 = (v977 ^ v978) + 2038852894 - ((2 * (v977 ^ v978)) & 0xF30CDA3C);
  v980 = (v330 >> 14) ^ 0x79861602;
  LODWORD(v606) = (v979 ^ v980) + 2080732325 - ((2 * (v979 ^ v980)) & 0xF80AE94A);
  v981 = (v330 >> 11) ^ 0x7C06AC46;
  v982 = (v906 >> 10) ^ 0xD133771C;
  LODWORD(v606) = ((v606 ^ v981) - 785070373 - ((2 * (v606 ^ v981)) & 0xA2698DB6)) ^ v982;
  v983 = (v906 >> 9) ^ 0xDC53B3D5;
  LODWORD(v606) = ((_DWORD)v606 - 597897125 - ((2 * (_DWORD)v606) & 0xB8B9A0B6)) ^ v983;
  v984 = (v906 >> 6) ^ ((v906 ^ 0xE96D4A45) >> 5) ^ 0xCE1CAF10;
  LODWORD(v606) = v984 ^ ((_DWORD)v606 - 832064670 - ((2 * (_DWORD)v606) & 0x9CCF66C4));
  v985 = v606 ^ ((v906 ^ 0xE96D4A45) >> 2);
  v986 = (v985 >> 27) ^ (v965 >> 30) ^ (v985 >> 21);
  v987 = LODWORD(STACK[0x6E0]) ^ (LODWORD(STACK[0x6C8]) + 1388075847) ^ (16 * (v906 ^ 0xE96D4A45)) ^ (32 * (v906 ^ 0xE96D4A45)) ^ ((v906 ^ 0xE96D4A45) << 14) ^ ((v906 ^ 0xE96D4A45) << 17) ^ ((v906 ^ 0xE96D4A45) << 19) ^ ((v906 ^ 0xE96D4A45) << 28) ^ ((v906 ^ 0xE96D4A45) << 30) ^ (4 * v985) ^ (32 * v985) ^ (v986 | (v985 << 11)) ^ (4 * v986) ^ (32 * v986) ^ (v986 << 11) ^ 0xDF6F8223;
  v988 = v987 + 248913893 - ((2 * v987) & 0x1DAC3FCA);
  v989 = (4 * (v906 ^ 0xE96D4A45)) ^ (8 * (v906 ^ 0xE96D4A45)) ^ 0x6D2DF3F9;
  v990 = ((v988 ^ v989) - 804984253 - ((2 * (v988 ^ v989)) & 0xA009D486)) ^ v961;
  v991 = (v990 - 433188048 - ((2 * v990) & 0xCC5C2660)) ^ v641;
  v992 = (v991 + 1858489290 - ((2 * v991) & 0xDD8C9794)) ^ v962;
  v993 = (v992 - 1061309613 - ((2 * v992) & 0x817B66A6)) ^ v969;
  v994 = (v993 + 1290195985 - ((2 * v993) & 0x99CDA822)) ^ v971;
  v995 = (v994 - 542873208 - ((2 * v994) & 0xBF48D310)) ^ v966;
  v996 = (v995 + 408177266 - ((2 * v995) & 0x30A894E4)) ^ v970;
  v997 = v996 + 98789692 - ((2 * v996) & 0xBC6D278);
  v998 = (((v906 ^ 0xE96D4A45) << 27) ^ 0xEDE36943) - 7;
  LODWORD(STACK[0x6F4]) = v985 ^ v998 ^ v997;
  LODWORD(v330) = (v330 >> 22) ^ BYTE3(v330) ^ (v330 >> 25) ^ (v330 >> 17) ^ WORD1(v330) ^ (v330 >> 12) ^ (v906 >> 7) ^ (v906 >> 8) ^ 0x22B49A;
  LODWORD(v330) = (v330 - 619689008 - ((2 * v330) & 0x362097A0)) ^ v975;
  v999 = (((v330 + 558346958 - ((2 * v330) & 0x428F659C)) ^ v974)
        - 627019152
        - ((2 * ((v330 + 558346958 - ((2 * v330) & 0x428F659C)) ^ v974)) & 0x3540E4E0)) ^ v978;
  v1000 = (v999 + 2038852894 - ((2 * v999) & 0xF30CDA3C)) ^ v980;
  v1001 = (v1000 + 2080732325 - ((2 * v1000) & 0xF80AE94A)) ^ v981;
  v1002 = (v1001 - 785070373 - ((2 * v1001) & 0xA2698DB6)) ^ v982;
  v1003 = (v1002 - 597897125 - ((2 * v1002) & 0xB8B9A0B6)) ^ v983;
  v1004 = v984 ^ (v1003 - 832064670 - ((2 * v1003) & 0x9CCF66C4));
  LODWORD(v628) = (LODWORD(STACK[0x690]) | (v906 << 24)) ^ (v906 << 25) ^ ((v906 ^ 0xE96D4A45) << 8) ^ ((v906 ^ 0xE96D4A45) << 7) ^ ((v906 ^ 0xE96D4A45) << 10) ^ ((v906 ^ 0xE96D4A45) << 16) ^ ((v906 ^ 0xE96D4A45) << 20);
  v1005 = ((32 * v1004) ^ 0xF7AA56E0) - 1077921990 - ((2 * ((32 * v1004) ^ 0xF7AA56E0)) & 0x7F806E40);
  LOBYTE(v330) = (((32 * v1004) ^ 0xE0) + 58 - ((2 * ((32 * v1004) ^ 0xE0)) & 0x40)) & 0x80;
  LODWORD(v330) = (4 * v1004) ^ (32 * (v1004 >> 21)) ^ __ROR4__(v1004, 21) ^ (v1004 >> 21 << 11) ^ 0xF4611D41 ^ ((unint64_t)((v1004 >> 21) ^ 0x3D) << ((119 * ((v330 ^ 0x8E) + v330)) & 0xFE));
  v1006 = v1004 ^ 0xE43D5948 ^ (v330 - ((2 * v330) & 0xC70017FE) - 478147585);
  v1007 = v628 ^ v989 ^ (v963 << ((85 * ((v606 & 0xD3 ^ 0x93) + (v606 & 0xD3 ^ 0x40))) | 6u)) ^ (LODWORD(STACK[0x6A8]) - 901335007) ^ (v1006 + 248913893 - ((2 * v1006) & 0x1DAC3FCA));
  LODWORD(STACK[0x708]) = v1007;
  v1008 = ((((v961 ^ 0x3D4925F7 ^ v1007) - 433188048 - ((2 * (v961 ^ 0x3D4925F7 ^ v1007)) & 0xCC5C2660)) ^ v641)
         + 1858489290
         - ((2 * (((v961 ^ 0x3D4925F7 ^ v1007) - 433188048 - ((2 * (v961 ^ 0x3D4925F7 ^ v1007)) & 0xCC5C2660)) ^ v641)) & 0xDD8C9794)) ^ v962;
  v1009 = (v1008 - 1061309613 - ((2 * v1008) & 0x817B66A6)) ^ v969;
  v1010 = (v1009 + 1290195985 - ((2 * v1009) & 0x99CDA822)) ^ v971;
  v1011 = (v1010 - 542873208 - ((2 * v1010) & 0xBF48D310)) ^ v966;
  v1012 = (v1011 + 408177266 - ((2 * v1011) & 0x30A894E4)) ^ v970;
  LODWORD(STACK[0x690]) = v1012 + 98789692 - ((2 * v1012) & 0xBC6D278);
  LODWORD(STACK[0x688]) = v1005 ^ v998;
  v1013 = LODWORD(STACK[0x28C]) - ((2 * LODWORD(STACK[0x288])) & 0x60000000);
  LODWORD(STACK[0x634]) = v1013;
  v1014 = LODWORD(STACK[0x284]) - 12583069;
  if (!v323)
    v1014 = -1126447839 - LODWORD(STACK[0x284]);
  v1015 = (LODWORD(STACK[0x290]) ^ 0xC0BA5D51) - 1577968194 + v1014;
  v1016 = STACK[0x3C8];
  v1017 = ((LODWORD(STACK[0x3C8]) << 26) ^ 0x40000000) - 1900197239;
  v1018 = LODWORD(STACK[0x3C8]) << 27;
  LODWORD(STACK[0x678]) = v1018;
  v1019 = v1017 - (v1018 & 0x18000000);
  v1020 = (v1015 ^ v1013 & 0xF6000000 ^ 0x30000000)
        - 1900197239
        - 2 * ((v1015 ^ v1013 & 0xF6000000) & 0xEBD4A8B ^ v1015 & 2);
  v1021 = STACK[0x3CC];
  v1022 = (LODWORD(STACK[0x3CC]) >> 31) ^ (LODWORD(STACK[0x3CC]) >> 29) ^ (LODWORD(STACK[0x3CC]) >> 26) ^ (LODWORD(STACK[0x3CC]) >> 15) ^ (v1016 >> 3);
  v1023 = (LODWORD(STACK[0x3CC]) >> 30) ^ 0x3364079E;
  LODWORD(STACK[0x638]) = v1023;
  v1024 = ((v1022 ^ 0x5CE7A4) + 862193566 - 2 * ((v1022 ^ 0x5CE7A4) & 0x3364079F ^ v1022 & 1)) ^ v1023;
  v1025 = (v1021 >> 25) ^ 0x4462BB65;
  v1026 = (v1024 + 1147321188 - ((2 * v1024) & 0x88C576C8)) ^ v1025;
  v1027 = (v1021 >> 22) ^ 0x331F899F;
  v1028 = (v1026 + 857704852 - ((2 * v1026) & 0x663F1328)) ^ v1027;
  v1029 = (v1021 >> 19) ^ 0x40933CA2;
  v1030 = (v1028 + 1083391230 - ((2 * v1028) & 0x812679FC)) ^ v1029;
  v1031 = (v1021 >> 18) ^ 0xDE02A1B9 ^ (v1030 - 570253056 - ((2 * v1030) & 0xBC054200));
  LODWORD(STACK[0x680]) = HIWORD(v1021);
  v1032 = HIWORD(v1021) ^ 0xCB1A028C;
  v1033 = (v1031 - 887488405 - ((2 * v1031) & 0x963400D6)) ^ v1032;
  v1034 = (v1021 >> 12) ^ 0xE9CFE89;
  v1035 = (v1033 + 245158136 - ((2 * v1033) & 0x1D39A1F0)) ^ v1034;
  v1036 = (v1016 >> 10) ^ 0xDD0653A3;
  LODWORD(STACK[0x630]) = v1036;
  v1037 = (v1035 - 586749337 - ((2 * v1035) & 0xBA0DD4CE)) ^ v1036;
  LODWORD(STACK[0x650]) = 51034408;
  v1038 = (v1016 >> 8) ^ 0x8187BB87;
  LODWORD(STACK[0x658]) = v1038;
  v1039 = (v1037 - 2121966444 - ((2 * v1037) & 0x30AB928)) ^ v1038;
  v1040 = (v1016 >> 7) ^ 0x9B1B6118;
  v1041 = (v1039 - 1692487874 - ((2 * v1039) & 0x363D5E7C)) ^ v1040;
  v1042 = (v1016 << 28) + 1047872131 - ((v1016 << 29) & 0x60000000);
  LODWORD(STACK[0x6A8]) = v1016 >> 6;
  v1043 = (v1016 >> 6) ^ (v1016 >> 4) ^ 0x8181242;
  v1044 = v1043 ^ (v1041 + 135499279 - ((2 * v1041) & 0x10271C1E));
  v1045 = (v1044 >> 27) ^ (v1044 >> 21);
  v1046 = v1019 ^ (v1016 << 29) ^ (32 * v1044) ^ (4 * v1044) ^ (v1044 << 11) ^ (4 * v1045) ^ v1020;
  v1047 = ((v1016 << 11) ^ 0x389A8000) - 1103836010 - ((2 * ((v1016 << 11) ^ 0x389A8000)) & 0x7C699000);
  v1048 = (((v1021 >> 20) ^ 0x2E) + 857704852 - ((2 * ((v1021 >> 20) ^ 0x2E)) & 0x1328)) ^ v1027;
  v1049 = (v1048 + 1147321188 - ((2 * v1048) & 0x8C576C8)) ^ v1025;
  v1050 = v1049 + 1073905164 - ((2 * v1049) & 0x4FC18);
  LODWORD(STACK[0x6E0]) = v1045;
  v1051 = (32 * v1045) ^ (v1045 << 11) ^ 0x76FE4250 ^ v1046;
  v1052 = v1051 + 1047872131 - 2 * (v1051 & 0x3E75428B ^ v1046 & 8);
  v1053 = v1044 ^ 0xB64C2510 ^ ((v1052 ^ v1042) - 2 * ((v1052 ^ v1042) & 0x3662543D ^ v1052 & 0x18) - 1235069915);
  LODWORD(STACK[0x6C8]) = v1053 - ((2 * v1053) & 0xD67572C6);
  v1054 = (v1021 >> 21) ^ 0x40027E1B;
  v1055 = v1029 ^ (v1021 >> 18) ^ ((v1050 ^ v1054) + 1083391230 - ((2 * (v1050 ^ v1054)) & 0x812679FC));
  v1056 = ((v1016 << 18) ^ 0x4D400000) - 1296071753 - ((v1016 << 19) & 0x65780000);
  LODWORD(STACK[0x640]) = v1056;
  v1057 = ((v1016 << 21) ^ 0x6A000000) - 1339821870 - ((2 * ((v1016 << 21) ^ 0x6A000000)) & 0x60606060);
  LOBYTE(v1041) = v1055 & 0x1F ^ 0x19 | v1055 & 0x1F ^ 6;
  v1058 = v1016 ^ 0x2E71350;
  v1059 = (v1016 >> 1) ^ (v1021 >> 13) ^ (v1058 >> ((STACK[0x644] & 0x91 ^ 0x6F) + (STACK[0x644] & 0x91 ^ 0xFEu) - 98));
  v1060 = ((v1059 ^ 0x1739E90) - 887488405 - 2 * ((v1059 ^ 0x1739E90) & 0x4B1A006F ^ v1059 & 4)) ^ v1032 ^ v1055;
  v1061 = (((v1021 >> 14) ^ 0xB25 ^ v1060) + 245158136 - ((2 * ((v1021 >> 14) ^ 0xB25 ^ v1060)) & 0x1D39A1F0)) ^ v1034;
  v1062 = (v1061 - 1692487874 - ((2 * v1061) & 0x363D5E7C)) ^ v1040;
  v1063 = v1043 ^ (v1062 + 135499279 - ((2 * v1062) & 0x10271C1E));
  v1064 = (_DWORD)v1058 << v1041;
  v1065 = (v1016 << 19) ^ (v1016 << 12) ^ 0xEBB50000 ^ v1064;
  v1066 = STACK[0x3B8];
  v1067 = (v1065 - 706310540 - 2 * (v1065 & 0x55E68E76 ^ v1064 & 2)) ^ LODWORD(STACK[0x3B8]);
  v1068 = (v1067 + 1640441754 - ((2 * v1067) & 0xC38E4F34)) ^ LODWORD(STACK[0x294]);
  v1069 = STACK[0x3B0];
  v1070 = (v1068 - 1801706905 - ((2 * v1068) & 0x293844CE)) ^ LODWORD(STACK[0x3B0]);
  v1071 = (v1070 - 1103836010 - ((2 * v1070) & 0x7C69992C)) ^ v1047;
  v1072 = STACK[0x388];
  v1073 = (v1071 + 476564817 - ((2 * v1071) & 0x38CF9AA2)) ^ LODWORD(STACK[0x388]);
  v1074 = (v1073 + 270111495 - ((2 * v1073) & 0x2033260E)) ^ LODWORD(STACK[0x298]);
  v1075 = STACK[0x384];
  v1076 = (v1074 - 1470434413 - ((2 * v1074) & 0x50B5E726)) ^ LODWORD(STACK[0x384]);
  v1077 = (v1076 - 1296071753 - ((2 * v1076) & 0x657F076E)) ^ v1056;
  v1078 = STACK[0x38C];
  v1079 = (v1077 + 781253844 - ((2 * v1077) & 0x5D21F9A8)) ^ LODWORD(STACK[0x38C]);
  v1080 = (v1079 - 1339821870 - ((2 * v1079) & 0x6047E1A4)) ^ v1057;
  v1081 = STACK[0x634];
  v1082 = (v1080 + 835593710 - ((2 * v1080) & 0x639C4BDC)) ^ LODWORD(STACK[0x634]);
  v1083 = (v1082 - 1900197239 - ((2 * v1082) & 0x1D7A9512)) ^ v1019;
  v1084 = (unsigned __int16)LODWORD(STACK[0x6B4]);
  v1085 = LODWORD(STACK[0x670]) ^ (32 * LODWORD(STACK[0x648])) ^ (16 * LODWORD(STACK[0x648])) ^ (LODWORD(STACK[0x648]) << 17) ^ (LODWORD(STACK[0x648]) << 30) ^ (LODWORD(STACK[0x700]) - 1395778153) ^ LODWORD(STACK[0x6B8]) ^ (4 * v928) ^ (32 * v928) ^ (v928 << 11) ^ v1084;
  v1086 = v1084 - ((2 * LODWORD(STACK[0x6B4])) & 0x4C62) - 1342953935;
  v1087 = v1085 ^ (4 * v1086) ^ (32 * v1086) ^ (v1086 << 11) ^ v1042 ^ (v1083 + 1047872131 - ((2 * v1083) & 0x7CEA8506));
  v1088 = STACK[0x6D0];
  LOBYTE(v1042) = STACK[0x6D0] & 0x1D ^ 0x11 | STACK[0x6D0] & 0x1D ^ 0xC;
  v1089 = (v1063 >> 27) ^ (v1060 >> 30) ^ (v1063 >> 21);
  LODWORD(STACK[0x700]) = v1089;
  v1090 = (32 * v1063) ^ (v1063 << 11);
  v1091 = v1089 ^ v1063;
  v1092 = ((v1090 ^ (4 * v1091) ^ 0xE997DD34 ^ v1087)
         - 1324005554
         - 2 * ((v1090 ^ (4 * v1091) ^ 0xE997DD34 ^ v1087) & 0x3115474F ^ v1087 & 1)) ^ LODWORD(STACK[0x438]);
  v1093 = (v1092 - 1486187535 - ((2 * v1092) & 0x4ED527E2)) ^ LODWORD(STACK[0x668]);
  v1094 = (v1093 + 431564031 - ((2 * v1093) & 0x337249FE)) ^ LODWORD(STACK[0x53C]);
  v1095 = (v1094 + 1737063702 - (STACK[0x6A0] & (2 * v1094))) ^ LODWORD(STACK[0x6DC]);
  v1096 = (v1095 + 722075106 - ((2 * v1095) & 0x5613FBC4)) ^ LODWORD(STACK[0x660]);
  v1097 = (v1096 + 1492516485 - ((2 * v1096) & 0xB1EBFD0A)) ^ LODWORD(STACK[0x710]);
  v1098 = (v1097 + 1155652212 - ((2 * v1097) & 0x89C3B4E8)) ^ LODWORD(STACK[0x65C]);
  v1099 = (v1098 + 1338145660 - ((2 * v1098) & 0x9F84F6F8)) ^ LODWORD(STACK[0x41C]);
  v1100 = (v1099 - 1120894835 - ((2 * v1099) & 0x7A61011A)) ^ LODWORD(STACK[0x418]);
  v1101 = (v1100 + 1094719871 - ((2 * v1100) & 0x828032FE)) ^ LODWORD(STACK[0x654]);
  v1102 = (v1101 - 757394584 - ((2 * v1101) & 0xA5B626D0)) ^ LODWORD(STACK[0x424]);
  v1103 = (v1102 - 96716970 - ((2 * v1102) & 0xF4786EAC)) ^ LODWORD(STACK[0x698]);
  v1104 = (v1103 - 2 * (v1103 & 0x7F48A879 ^ v1101 & 1) - 12015496) ^ LODWORD(STACK[0x6C0]);
  v1105 = v1091 ^ ((v1104 ^ 0x5056CFAD) - 2 * ((v1104 ^ 0x5056CFAD) & 0x5EAC65BE ^ v1104 & 0x10) - 559127122);
  LODWORD(STACK[0x6DC]) = v1105;
  LODWORD(v1058) = (v1021 >> 17) ^ HIBYTE(v1021) ^ (v1021 >> 11) ^ LODWORD(STACK[0x680]) ^ (v1058 >> 9) ^ (((v1016 >> 5) ^ 0x17389A) - ((2 * ((v1016 >> 5) ^ 0x17389A)) & 0x840B36E) - 1809819209) ^ (v1058 >> v1042) ^ 0x942006C3;
  LODWORD(v1058) = (v1058 + 862193566 - ((2 * v1058) & 0x66C80F3C)) ^ LODWORD(STACK[0x638]);
  LODWORD(v1058) = (v1058 + 1147321188 - ((2 * v1058) & 0x88C576C8)) ^ v1025;
  LODWORD(v1058) = (v1058 + 857704852 - ((2 * v1058) & 0x663F1328)) ^ v1027;
  LODWORD(v1058) = (v1058 + 1073905164 - ((2 * v1058) & 0x8004FC18)) ^ v1054;
  LODWORD(v1058) = (v1058 + 1083391230 - ((2 * v1058) & 0x812679FC)) ^ v1029;
  LODWORD(v1058) = (v1021 >> 14) ^ 0xF4F6D661 ^ (v1058 - 185149855 - ((2 * v1058) & 0xE9EDBBFA) + 1948);
  LODWORD(v1058) = (v1058 + 245158136 - ((2 * v1058) & 0x1D39A1F0)) ^ v1034;
  LODWORD(v1058) = (v1058 - 586749337 - ((2 * v1058) & 0xBA0DD4CE)) ^ LODWORD(STACK[0x630]);
  LODWORD(v1058) = (v1058 - 2121966444 - (LODWORD(STACK[0x650]) & (2 * v1058))) ^ LODWORD(STACK[0x658]);
  v1106 = v1040 ^ LODWORD(STACK[0x6A8]) ^ (v1058 - 1692487874 - ((2 * v1058) & 0x363D5E7C));
  LODWORD(v1058) = ((v1106 >> 21) ^ 0xFE65BFBE) + ((v1106 >> 20) & 0xF7C) + 26886210;
  LODWORD(v1058) = (v1058 ^ 0x7CFDD753) + 10413 + ((2 * v1058) & 0xF9FBAEA6);
  v1107 = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x690]);
  v1108 = ((v1107 << 10) ^ 0xDCE800) + 1190883029 - ((2 * ((v1107 << 10) ^ 0xDCE800)) & 0x8DF6D800);
  v1109 = (v1016 << 15) ^ (v1016 << 8) ^ (v1016 << 23) ^ LODWORD(STACK[0x678]) ^ (4 * v1106) ^ (32 * v1106) ^ (v1106 << 11) ^ (unsigned __int16)v1058 ^ (32 * ((unsigned __int16)v1058 - ((2 * v1058) & 0xBAC6) - 1799529117)) ^ (((unsigned __int16)v1058 - ((2 * (_DWORD)v1058) & 0xBAC6) - 1799529117) << 11) ^ (4 * ((unsigned __int16)v1058 - ((2 * v1058) & 0xBAC6) - 1799529117)) ^ 0x34B10178;
  v1110 = (v1109
         - 1103836010
         - 2
         * (v1109 & 0x3E34CC97 ^ ((LOBYTE(STACK[0x678]) ^ (4 * v1106) ^ (32 * v1106)) ^ v1058) & 1)) ^ v1047;
  v1111 = (v1110 + 476564817 - ((2 * v1110) & 0x38CF9AA2)) ^ v1072;
  v1112 = (v1111 - 810595852 - ((2 * v1111) & 0x9F5E93E8)) ^ LODWORD(STACK[0x3C0]);
  v1113 = (v1112 - 2008529228 - ((2 * v1112) & 0x10908D68)) ^ LODWORD(STACK[0x3C4]);
  v1114 = (v1113 - 706310540 - ((2 * v1113) & 0xABCD1CE8)) ^ v1066;
  v1115 = (v1114 - 1801706905 - ((2 * v1114) & 0x293844CE)) ^ v1069;
  v1116 = (v1115 - 1470434413 - ((2 * v1115) & 0x50B5E726)) ^ v1075;
  v1117 = (v1116 - 1296071753 - ((2 * v1116) & 0x657F076E)) ^ LODWORD(STACK[0x640]);
  v1118 = (v1117 + 781253844 - ((2 * v1117) & 0x5D21F9A8)) ^ v1078;
  v1119 = (v1118 - 1339821870 - ((2 * v1118) & 0x6047E1A4)) ^ v1057;
  v1120 = (v1119 - 1171935753 - ((2 * v1119) & 0x744B5BEE)) ^ LODWORD(STACK[0x380]);
  v1121 = (v1120 - 1061528239 - ((2 * v1120) & 0x8174BAA2)) ^ LODWORD(STACK[0x2A0]);
  v1122 = (v1121 + 835593710 - ((2 * v1121) & 0x639C4BDC)) ^ v1081;
  v1123 = (v1122 - 1900197239 - ((2 * v1122) & 0x1D7A9512)) ^ v1019;
  v1124 = v1106 ^ v1088 ^ (v1123 - ((2 * v1123) & 0xA5A2CFD4) + 1389455338);
  v1125 = ((v1107 << 14) ^ 0xDCE8000) + 193990542 - ((2 * ((v1107 << 14) ^ 0xDCE8000)) & 0x17200000);
  v1126 = ((v1107 << 16) ^ 0x373A0000) + 1925158409 - ((2 * ((v1107 << 16) ^ 0x373A0000)) & 0xE57E0000);
  v1127 = ((v1107 << 13) ^ 0x6E74000) + 1799998799 - ((2 * ((v1107 << 13) ^ 0x6E74000)) & 0xD6938000);
  v1128 = (v1107 >> 19) ^ 0xF5CB34BA;
  v1129 = (((v1107 >> 18) ^ 0x2FF0) - 171236542 - 2 * (((v1107 >> 18) ^ 0x2FF0) & 0x2343 ^ (v1107 >> 18) & 1)) ^ v1128;
  v1130 = (v1107 >> 22) ^ 0x764C2637 ^ (v1129 + 1984701640 - ((2 * v1129) & 0x6C984990));
  v1131 = ((v1107 << 20) ^ 0x73A00000) + 711930723 - ((2 * ((v1107 << 20) ^ 0x73A00000)) & 0x54C00000);
  v1132 = ((v1107 << 26) ^ 0xE8000000) + 1838362075 - ((2 * ((v1107 << 26) ^ 0xE8000000)) & 0xD8000000);
  v1133 = HIWORD(v1107) ^ 0xA5570EB3;
  LODWORD(v1058) = (v1107 >> 30) ^ (v1107 >> 29) ^ (v1107 >> 26) ^ (v1107 >> 15) ^ (v1107 >> 10) ^ (v1107 >> 12) ^ (v1107 >> 25) ^ ((LODWORD(STACK[0x688]) ^ ~LODWORD(STACK[0x690])) >> 31) ^ v1133 ^ 0x2573F9 ^ (v1130 - 1520979597 - ((2 * v1130) & 0x4AAF62E6));
  v1134 = ((v1107 << 25) ^ 0x74000000) + 1539913174 - (a37 & (2 * ((v1107 << 25) ^ 0x74000000)));
  LODWORD(v1058) = ((v1107 ^ 0xBFC0373A) >> (v1105 & 7 ^ 2) >> (v1105 & 7 ^ 5)) ^ (v1058
                                                                                 + (a38 ^ (v1107 >> 8))
                                                                                 - 2 * (v1058 & (a38 ^ (v1107 >> 8))));
  v1135 = LODWORD(STACK[0x708]) << 29;
  v1136 = ((LODWORD(STACK[0x708]) << 28) ^ 0x40000000) - 145185468 + (v1135 ^ 0x7FFFFFFF);
  v1137 = (((v1107 >> 3) ^ 0x17F806E7) - 1629365875 - ((2 * ((v1107 >> 3) ^ 0x17F806E7)) & 0x3DC3B31A)) ^ 0x9EE1D98D ^ v1058;
  v1138 = (v1107 >> 6) ^ (v1107 >> 4) ^ 0xAF65CDBE;
  v1139 = v1138 ^ (v1137 - 1382363806 - ((2 * v1137) & 0x5B359AC4));
  LODWORD(v1058) = (v1139 >> 27) ^ (v1058 >> 30) ^ (v1139 >> 21);
  v1140 = v1135 ^ (2 * v1107) ^ (4 * v1107) ^ (8 * v1107) ^ (v1107 << 6) ^ (v1107 << 17) ^ (v1107 << 22) ^ (v1107 << 24) ^ (4 * v1139) ^ (32 * v1139) ^ (v1139 << 11) ^ (4 * v1058) ^ (32 * v1058) ^ ((_DWORD)v1058 << 11) ^ 0x2411C4D8;
  v1141 = v1107 ^ 0xBA450C73;
  v1142 = (v1140 + 92617545 - ((2 * v1140) & 0xB0A7692)) ^ v1107 ^ 0xBA450C73;
  v1143 = (v1142 + 987452971 - ((2 * v1142) & 0x75B6AC56)) ^ (((v1107 << 7) ^ 0xE01B9D00)
                                                            + 987452971
                                                            - ((2 * ((v1107 << 7) ^ 0xE01B9D00)) & 0x75B6AC00));
  v1144 = ((v1107 << 7) ^ 0xE01B9D00) + 987452971 - ((2 * ((v1107 << 7) ^ 0xE01B9D00)) & 0x75B6AC00);
  v1145 = (v1143 + 1190883029 - ((2 * v1143) & 0x8DF6DDAA)) ^ v1108;
  v1146 = (v1145 + 193990542 - ((2 * v1145) & 0x17201F1C)) ^ v1125;
  v1147 = (v1146 + 1799998799 - ((2 * v1146) & 0xD6939A9E)) ^ v1127;
  v1148 = (v1147 + 1925158409 - ((2 * v1147) & 0xE57F2C12)) ^ v1126;
  v1149 = (v1148 + 711930723 - ((2 * v1148) & 0x54DE66C6)) ^ v1131;
  v1150 = (v1149 + 1539913174 - ((2 * v1149) & 0xB7926BAC)) ^ v1134;
  v1151 = (v1150 + 1838362075 - ((2 * v1150) & 0xDB265BB6)) ^ v1132;
  v1152 = (v1151 - 145185468 - ((2 * v1151) & 0xEEB14A88)) ^ ++v1136;
  LODWORD(STACK[0x710]) = v1058 ^ v1139 ^ (v1152 + 424201181 - 2 * (v1152 & 0x1948CBDF ^ v1151 & 2));
  v1153 = (v1107 >> 21) ^ (v1107 >> 20) ^ (v1107 >> 14) ^ (v1107 >> 11) ^ (v1107 >> 13) ^ (v1107 >> 7) ^ (v1107 >> 1);
  v1154 = (v1107 >> 18) ^ (v1107 >> 12) ^ (v1107 >> 22) ^ 0x5E84BDFA ^ v1153;
  v1155 = (v1154 - 1699946311 - ((2 * v1154) & 0x3559C172)) ^ (v1107 >> 25);
  v1156 = ((v1155 ^ 0x9AACE0E6) - 171236542 - 2 * ((v1155 ^ 0x9AACE0E6) & 0x75CB234B ^ v1155 & 9)) ^ v1128;
  v1157 = (v1156 - 1520979597 - ((2 * v1156) & 0x4AAF62E6)) ^ v1133;
  v1158 = v1138 ^ (v1157 - 1382363806 - ((2 * v1157) & 0x5B359AC4));
  v1159 = (LODWORD(STACK[0x708]) << 31) ^ (v1107 << 11) ^ (v1107 << 12) ^ (v1107 << 18) ^ (v1107 << 19) ^ (v1107 << 21) ^ 0x80B27000;
  v1160 = (v1159 + 1799998799 - ((2 * v1159) & 0xD6939A9E)) ^ v1127;
  v1161 = (v1160 + 987452971 - ((2 * v1160) & 0x75B6AC56)) ^ v1144;
  v1162 = (v1161 + 92617545 - ((2 * v1161) & 0xB0A7692)) ^ v1141;
  v1163 = (v1162 + 1190883029 - ((2 * v1162) & 0x8DF6DDAA)) ^ v1108;
  v1164 = (v1163 + 193990542 - ((2 * v1163) & 0x17201F1C)) ^ v1125;
  v1165 = (v1164 + 1925158409 - ((2 * v1164) & 0xE57F2C12)) ^ v1126;
  v1166 = (v1165 + 711930723 - ((2 * v1165) & 0x54DE66C6)) ^ v1131;
  v1167 = (v1166 + 1539913174 - ((2 * v1166) & 0xB7926BAC)) ^ v1134;
  v1168 = v1132 ^ v1136 ^ (v1167 + 1838362075 - ((2 * v1167) & 0xDB265BB6));
  v1169 = LODWORD(STACK[0x6F4]) ^ 0x32F09DB3 ^ v1168;
  v1168 ^= 0xF758A544;
  v1170 = (v1169 + v1168 + 1) ^ ((LODWORD(STACK[0x6F4]) ^ 0xC5A838F7) + 1);
  v1171 = (v1158 >> 27) ^ (v1153 >> 30) ^ (v1158 >> 21);
  LODWORD(STACK[0x708]) = v1158 ^ (v1158 << 11) ^ (4 * v1158) ^ v1171 ^ (32 * v1171) ^ (v1171 << 11) ^ (((4 * v1171) ^ (32 * v1158) ^ 0x7F806F1C) - 2 * (((4 * v1171) ^ (32 * v1158) ^ 0x7F806F1C) & 0x6CA865E8 ^ ((4 * v1171) ^ (32 * v1158)) & 0x20) - 324508213) ^ ((LODWORD(STACK[0x6F4]) ^ 0x9CAB6574 ^ (v1170 - ((2 * v1170) & 0x4DF944F8) - 1493392772)) + v1168);
  v1172 = ((v1124 << 13) ^ 0xC7A68000) - 1602022009 - ((2 * ((v1124 << 13) ^ 0xC7A68000)) & 0x41060000);
  v1173 = ((v1124 << 18) ^ 0xF4D00000) + 24255253 - ((2 * ((v1124 << 18) ^ 0xF4D00000)) & 0x2E00000);
  v1174 = ((v1124 << 21) ^ 0xA6800000) + 157670033 - ((v1124 << 22) & 0x12C00000);
  v1175 = ((v1124 << 22) ^ 0x4D000000) - 1085260020 - ((2 * ((v1124 << 22) ^ 0x4D000000)) & 0x7E800000);
  v1176 = ((v1124 << 26) ^ 0xD0000000) - 1083972049 - ((2 * ((v1124 << 26) ^ 0xD0000000)) & 0x78000000);
  v1177 = ((v1124 << 27) ^ 0xA0000000) + 838039895 - ((2 * ((v1124 << 27) ^ 0xA0000000)) & 0x60000000);
  LODWORD(v1058) = (v1124 >> 14) ^ 0x6A34B20B;
  LODWORD(STACK[0x6F4]) = v1058;
  v1178 = (v1124 >> 4) ^ (v1124 >> 2) ^ (v1124 >> 27) ^ (v1124 >> 28) ^ (v1124 >> 13) ^ v1058 ^ (((v1124 >> 15) ^ (v1124 >> 18) ^ 0x4D43)
                                                                                               + 1781807603
                                                                                               - 2
                                                                                               * (((v1124 >> 15) ^ (v1124 >> 18) ^ 0x4D43) & 0x39F7 ^ ((v1124 >> 15) ^ (v1124 >> 18)) & 4));
  v1179 = (v1124 >> 29) ^ 0xBE4D8D59;
  v1180 = (((v1124 >> 30) ^ 0xA917B69 ^ v1178)
         - 1102213800
         - 2 * (((v1124 >> 30) ^ 0xA917B69 ^ v1178) & 0x3E4D8D5C ^ v1178 & 4)) ^ v1179;
  v1181 = (v1124 >> 21) ^ 0x46A4E533;
  v1182 = (v1180 + 1185211428 - ((2 * v1180) & 0x8D49C848)) ^ v1181;
  v1183 = (v1124 >> 19) ^ 0xEDEEC0D3;
  v1184 = (v1182 - 303119220 - ((2 * v1182) & 0xDBDD8918)) ^ v1183;
  v1185 = v1184 + 2100882850 - ((2 * v1184) & 0xFA71DB44);
  v1186 = (v1124 >> 11) ^ 0x7D3CB265;
  v1187 = (v1185 ^ v1186) + 627502149 - ((2 * (v1185 ^ v1186)) & 0x4ACDD88A);
  v1188 = (v1124 >> 10) ^ 0x256E53CA;
  v1189 = (v1187 ^ v1188) - 897187005 - ((2 * (v1187 ^ v1188)) & 0x950C0686);
  v1190 = (v1124 >> 9) ^ 0xCA977C5D;
  v1191 = (v1189 ^ v1190) + 984889414 - ((2 * (v1189 ^ v1190)) & 0x7568708C);
  v1192 = (v1124 >> 6) ^ (v1124 >> 5) ^ 0x3A3FC0B2;
  v1193 = v1192 ^ v1191;
  v1194 = (v1193 >> 21) ^ (v1178 >> 27);
  v1195 = LODWORD(STACK[0x6E0]) ^ (LODWORD(STACK[0x6C8]) + 1799010659) ^ (16 * v1124) ^ (32 * v1124) ^ (v1124 << 14) ^ (v1124 << 17) ^ (v1124 << 19) ^ (v1124 << 28) ^ (v1124 << 30) ^ (4 * v1193) ^ (32 * v1193) ^ (v1193 << 11) ^ (4 * v1194) ^ (32 * v1194) ^ (v1194 << 11) ^ 0xDEB53722;
  v1196 = (8 * v1124) ^ (4 * v1124) ^ 0xDAE6F42;
  v1197 = (v1195 - 1851297230 - ((2 * v1195) & 0x234EE464)) ^ v1196;
  v1198 = (v1197 - 733829596 - ((2 * v1197) & 0xA8854C48)) ^ (((v1124 << 11) ^ 0xF1E9A000)
                                                            - 733829596
                                                            - ((2 * ((v1124 << 11) ^ 0xF1E9A000)) & 0xA8854000));
  v1199 = (v1198 - 1602022009 - ((2 * v1198) & 0x41062B0E)) ^ v1172;
  v1200 = (v1199 + 24255253 - ((2 * v1199) & 0x2E4362A)) ^ v1173;
  v1201 = (v1200 + 157670033 - ((2 * v1200) & 0x12CBB522)) ^ v1174;
  v1202 = (v1201 - 1085260020 - ((2 * v1201) & 0x7EA07E18)) ^ v1175;
  v1203 = (v1202 + 1917154568 - ((2 * v1202) & 0xE48AEA10)) ^ (((v1124 << 23) ^ 0x9A000000)
                                                             + 1917154568
                                                             - ((2 * ((v1124 << 23) ^ 0x9A000000)) & 0xE4000000));
  v1204 = (v1203 - 1083972049 - ((2 * v1203) & 0x7EC7CC5E)) ^ v1176;
  v1205 = (v1204 + 838039895 - ((2 * v1204) & 0x63E6F2AE)) ^ v1177;
  v1206 = v1194 ^ v1193 ^ (v1205 - ((2 * v1205) & 0x50B70B44) + 677086626);
  v1207 = (v1124 << 7) ^ (v1124 << 8) ^ (v1124 << 10) ^ (v1124 << 15) ^ (v1124 << 16) ^ (v1124 << 20) ^ (v1124 << 24) ^ (v1124 << 25) ^ v1177 ^ v1176;
  v1208 = ((v1207 ^ 0x5BA9E178) - 1851297230 - 2 * ((v1207 ^ 0x5BA9E178) & 0x11A77236 ^ v1207 & 4)) ^ v1196;
  v1209 = (v1208 - 733829596 - ((2 * v1208) & 0xA8854C48)) ^ (((v1124 << 11) ^ 0xF1E9A000)
                                                            - 733829596
                                                            - ((2 * ((v1124 << 11) ^ 0xF1E9A000)) & 0xA8854000));
  v1210 = (v1209 - 1602022009 - ((2 * v1209) & 0x41062B0E)) ^ v1172;
  v1211 = (v1210 + 24255253 - ((2 * v1210) & 0x2E4362A)) ^ v1173;
  v1212 = (v1211 + 157670033 - ((2 * v1211) & 0x12CBB522)) ^ v1174;
  v1213 = (v1212 - 1085260020 - ((2 * v1212) & 0x7EA07E18)) ^ v1175;
  v1214 = (v1124 >> 8) ^ (v1124 >> 7) ^ (v1124 >> 22) ^ HIBYTE(v1124) ^ (v1124 >> 25) ^ (v1124 >> 17) ^ HIWORD(v1124) ^ (v1124 >> 12) ^ 0x651E9D;
  v1215 = (v1214 + 1185211428 - ((2 * v1214) & 0xD49C848)) ^ v1181;
  v1216 = (v1215 - 1102213800 - ((2 * v1215) & 0x7C9B1AB0)) ^ v1179;
  v1217 = (((v1124 >> 30) ^ 0x2740280A ^ (v1216 + 658515978 - ((2 * v1216) & 0x4E805014)))
         - 303119220
         - 2
         * (((v1124 >> 30) ^ 0x2740280A ^ (v1216 + 658515978 - ((2 * v1216) & 0x4E805014))) & 0x6DEEC4AC ^ (v1216 + 658515978 - ((2 * v1216) & 0x4E805014)) & 0x20)) ^ v1183;
  v1218 = (v1217 + 1781807603 + (~(2 * v1217) | 0x2B978C19) + 1) ^ LODWORD(STACK[0x6F4]);
  v1219 = (v1218 + 2100882850 - ((2 * v1218) & 0xFA71DB44)) ^ v1186;
  v1220 = (v1219 + 627502149 - ((2 * v1219) & 0x4ACDD88A)) ^ v1188;
  v1221 = (v1220 - 897187005 - ((2 * v1220) & 0x950C0686)) ^ v1190;
  v1222 = v1192 ^ (v1221 + 984889414 - ((2 * v1221) & 0x7568708C));
  v1223 = (32 * LODWORD(STACK[0x700])) ^ (LODWORD(STACK[0x700]) << 11) ^ (v1213 + 1917154568 - ((2 * v1213) & 0xE48AEA10)) ^ (4 * v1222) ^ (32 * v1222) ^ (v1222 << 11) ^ (4 * (v1222 >> 21));
  v1224 = (((v1124 << 23) ^ 0x9A000000) + 1917154568 - ((2 * ((v1124 << 23) ^ 0x9A000000)) & 0xE4000000)) ^ (32 * (v1222 >> 21)) ^ (v1222 >> 21 << 11) ^ 0x992EFB84 ^ v1223;
  v1225 = (v1224 - 2 * (v1224 & 0x41778A9B ^ v1223 & 0x10) - 1049130357) ^ LODWORD(STACK[0x6DC]);
  v1226 = (v1222 >> 21) ^ v1222 ^ ((v1225 ^ 0x1FF59E11) - 2 * ((v1225 ^ 0x1FF59E11) & 0xB026ADF ^ v1225 & 2) - 1962775843);
  v1227 = LODWORD(STACK[0x44C]) + 1625839563 - ((2 * LODWORD(STACK[0x44C])) & 0xC1D0AF96);
  v1228 = LODWORD(STACK[0x450]) + 1625839563 - ((2 * LODWORD(STACK[0x450])) & 0xC1D0AF96);
  v1229 = LODWORD(STACK[0x454]) - 316447172 - ((2 * LODWORD(STACK[0x454])) & 0xDA46CC78);
  v1230 = LODWORD(STACK[0x710]) ^ 0xF1177D4B;
  v1231 = -2009212831
        * (v1230 ^ (LODWORD(STACK[0x534]) - ((2 * LODWORD(STACK[0x534]) + 31902202) & 0xC7476B76) + 1687624376))
        - 75026750;
  LODWORD(STACK[0x728]) = -2009212831
                        * (v1230 ^ (LODWORD(STACK[0x5A8])
                                  - ((2 * LODWORD(STACK[0x5A8]) - 115360888) & 0xC7476B76)
                                  + 1613992831))
                        - 75026750;
  LODWORD(STACK[0x72C]) = v1231;
  v1232 = LODWORD(STACK[0x508]) - ((2 * LODWORD(STACK[0x508]) + 1644368202) & 0xC7476B76);
  v1233 = LODWORD(STACK[0x458]) + 1625839563 - ((2 * LODWORD(STACK[0x458])) & 0xC1D0AF96);
  v1234 = LODWORD(STACK[0x45C]) ^ v1226;
  LODWORD(STACK[0x788]) = -2009212831 * (v1234 ^ 0x8A159B3C) - 75026750;
  LODWORD(STACK[0x78C]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1229) - 75026750;
  v1235 = LODWORD(STACK[0x460]) - 316447172 - ((2 * LODWORD(STACK[0x460])) & 0xDA46CC78);
  v1236 = LODWORD(STACK[0x708]) ^ 0x48555700;
  LODWORD(STACK[0x768]) = -2009212831 * (v1236 ^ v1227) - 75026750;
  LODWORD(STACK[0x76C]) = -2009212831 * (v1236 ^ v1228) - 75026750;
  v1237 = LODWORD(STACK[0x524]) - ((2 * LODWORD(STACK[0x524]) + 1158167266) & 0xC7476B76);
  v1238 = -75026750 - 2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x510]) - 1845341137));
  LODWORD(STACK[0x748]) = -75026750 - 2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x52C]) - 2073521725));
  LODWORD(STACK[0x74C]) = v1238;
  v1239 = LODWORD(STACK[0x464]) + 1625839563 - ((2 * LODWORD(STACK[0x464])) & 0xC1D0AF96);
  v1240 = LODWORD(STACK[0x570]) - ((2 * LODWORD(STACK[0x570]) - 328045236) & 0xC7476B76);
  v1241 = LODWORD(STACK[0x46C]) - 316447172 - ((2 * LODWORD(STACK[0x46C])) & 0xDA46CC78);
  v1242 = LODWORD(STACK[0x468]) + 1625839563 - ((2 * LODWORD(STACK[0x468])) & 0xC1D0AF96);
  v1243 = LODWORD(STACK[0x470]) - 316447172 - ((2 * LODWORD(STACK[0x470])) & 0xDA46CC78);
  LODWORD(STACK[0x730]) = -75026750 - 2009212831 * (v1230 ^ (v1232 + 346373728));
  LODWORD(STACK[0x734]) = -75026750 - 2009212831 * (v1230 ^ (v1237 + 103273260));
  LODWORD(STACK[0x790]) = -75026750 - 2009212831 * (v1226 ^ 0x6736FD00 ^ v1235);
  LODWORD(STACK[0x794]) = -75026750 - 2009212831 * (v1226 ^ 0x6736FD00 ^ v1241);
  LODWORD(STACK[0x770]) = -75026750 - 2009212831 * (v1236 ^ v1233);
  LODWORD(STACK[0x774]) = -75026750 - 2009212831 * (v1236 ^ v1239);
  v1244 = -75026750 - 2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x4FC]) - 1561171137));
  LODWORD(STACK[0x750]) = -75026750 - 2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x514]) - 1802305297));
  LODWORD(STACK[0x754]) = v1244;
  v1245 = LODWORD(STACK[0x474]) + 1625839563 - ((2 * LODWORD(STACK[0x474])) & 0xC1D0AF96);
  v1246 = LODWORD(STACK[0x504]) - ((2 * LODWORD(STACK[0x504]) - 1837320152) & 0xC7476B76);
  v1247 = LODWORD(STACK[0x54C]) - 316447172 - ((2 * LODWORD(STACK[0x54C])) & 0xDA46CC78);
  v1248 = LODWORD(STACK[0x480]) + 1625839563 - ((2 * LODWORD(STACK[0x480])) & 0xC1D0AF96);
  v1249 = -2009212831
        * (v1230 ^ (LODWORD(STACK[0x530]) - ((2 * LODWORD(STACK[0x530]) + 716404858) & 0xC7476B76) - 117607944))
        - 75026750;
  LODWORD(STACK[0x738]) = -2009212831 * (v1230 ^ (v1240 - 639832991)) - 75026750;
  LODWORD(STACK[0x73C]) = v1249;
  LODWORD(STACK[0x798]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1243) - 75026750;
  LODWORD(STACK[0x79C]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1247) - 75026750;
  v1250 = -2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x518]) - 1025677238)) - 75026750;
  LODWORD(STACK[0x75C]) = -2009212831 * (v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x500]) - 602667175)) - 75026750;
  LODWORD(STACK[0x758]) = v1250;
  v1251 = LODWORD(STACK[0x550]) - 316447172 - ((2 * LODWORD(STACK[0x550])) & 0xDA46CC78);
  LODWORD(STACK[0x778]) = -2009212831 * (v1236 ^ v1242) - 75026750;
  LODWORD(STACK[0x77C]) = -2009212831 * (v1236 ^ v1245) - 75026750;
  v1252 = LODWORD(STACK[0x4F8]) - ((2 * LODWORD(STACK[0x4F8]) + 1125842394) & 0xC7476B76);
  v1253 = v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x528]) - 401724262);
  LODWORD(STACK[0x6F4]) = v1206 ^ 0x294C7442 ^ (LODWORD(STACK[0x538]) - 59238006);
  LODWORD(STACK[0x700]) = (v1253 + 1663319554)
                        * (v1234 & 0x883DD061 ^ 0x88159020 ^ ((v1234 & 0x883DD861 ^ 0x284041) + (~v1234 & 0x800)));
  v1254 = (unsigned __int8 *)STACK[0x718];
  v1255 = *(unsigned __int8 *)(STACK[0x718] + 47) ^ 0x6B;
  v1256 = (v1255 | (LODWORD(STACK[0x4B0]) << 8))
        + 1625839563
        - 2 * ((v1255 | (LODWORD(STACK[0x4B0]) << 8)) & 0x60E857EB ^ v1255 & 0x20);
  v1257 = LODWORD(STACK[0x554]) + 1625839563 - ((2 * LODWORD(STACK[0x554])) & 0xC1D0AF96);
  v1258 = LODWORD(STACK[0x558]) - 316447172 - ((2 * LODWORD(STACK[0x558])) & 0xDA46CC78);
  LODWORD(STACK[0x740]) = -2009212831 * (v1230 ^ (v1246 + 753013199)) - 75026750;
  LODWORD(STACK[0x744]) = -2009212831 * (v1230 ^ (v1252 - 2060372824)) - 75026750;
  v1259 = LODWORD(STACK[0x60C]) - ((2 * LODWORD(STACK[0x60C]) + 2102293080) & 0xB669D29E);
  v1260 = LODWORD(STACK[0x55C]) - 475810373 - ((2 * LODWORD(STACK[0x55C])) & 0xC7476B76);
  LODWORD(STACK[0x780]) = -2009212831 * (v1236 ^ v1248) - 75026750;
  LODWORD(STACK[0x784]) = -2009212831 * (v1236 ^ v1257) - 75026750;
  LODWORD(STACK[0x828]) = -2009212831 * (v1230 ^ v1260) - 75026750;
  v1261 = (v1254[529] ^ 0x6B | (LODWORD(STACK[0x56C]) << 8))
        - 316447172
        - 2 * ((v1254[529] ^ 0x6B | (LODWORD(STACK[0x56C]) << 8)) & 0x6D23663F ^ (v1254[529] ^ 0x6B) & 3);
  LODWORD(STACK[0x7A0]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1251) - 75026750;
  LODWORD(STACK[0x7A4]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1258) - 75026750;
  v1262 = LODWORD(STACK[0x484]) - 316447172 - ((2 * LODWORD(STACK[0x484])) & 0xDA46CC78);
  v1263 = (v1254[765] ^ 0x6B | (LODWORD(STACK[0x4EC]) << 8))
        - 475810373
        - 2 * ((v1254[765] ^ 0x6B | (LODWORD(STACK[0x4EC]) << 8)) & 0x63A3B5BF ^ (v1254[765] ^ 0x6B) & 4);
  v1264 = LODWORD(STACK[0x4B8]) + 1625839563 - ((2 * LODWORD(STACK[0x4B8])) & 0xC1D0AF96);
  v1265 = LODWORD(STACK[0x4C4]) + 1530194255 - ((2 * LODWORD(STACK[0x4C4])) & 0xB669D29E);
  v1266 = LODWORD(STACK[0x498]) + 1530194255 - ((2 * LODWORD(STACK[0x498])) & 0xB669D29E);
  v1267 = v1206 ^ 0x72789D0D;
  LODWORD(STACK[0x82C]) = -2009212831 * (v1206 ^ 0x72789D0D ^ (v1259 + 433857147)) - 75026750;
  v1268 = (v1254[271] ^ 0x6B | (LODWORD(STACK[0x4BC]) << 8))
        - 475810373
        - 2 * ((v1254[271] ^ 0x6B | (LODWORD(STACK[0x4BC]) << 8)) & 0x63A3B5BF ^ (v1254[271] ^ 0x6B) & 4);
  v1269 = (v1254[730] ^ 0x6B | (LODWORD(STACK[0x47C]) << 8))
        + 1530194255
        - 2 * ((v1254[730] ^ 0x6B | (LODWORD(STACK[0x47C]) << 8)) & 0x5B34E95F ^ (v1254[730] ^ 0x6B) & 0x10);
  v1270 = (v1254[259] ^ 0x6B | (LODWORD(STACK[0x4A4]) << 8))
        + 1530194255
        - 2 * ((v1254[259] ^ 0x6B | (LODWORD(STACK[0x4A4]) << 8)) & 0x5B34E95F ^ (v1254[259] ^ 0x6B) & 0x10);
  v1271 = (v1254[506] ^ 0x6B | (LODWORD(STACK[0x4D0]) << 8))
        - 316447172
        - 2 * ((v1254[506] ^ 0x6B | (LODWORD(STACK[0x4D0]) << 8)) & 0x6D23663F ^ (v1254[506] ^ 0x6B) & 3);
  v1272 = (LODWORD(STACK[0x58C]) ^ 0x56560000) + 1625839563 - ((2 * (LODWORD(STACK[0x58C]) ^ 0x56560000)) & 0xC1D0AF96);
  LODWORD(STACK[0x7A8]) = -2009212831 * (v1256 ^ 0x56000056 ^ v1236) - 75026750;
  LODWORD(STACK[0x7AC]) = -2009212831 * (v1263 ^ 0x565656 ^ v1230) - 75026750;
  v1273 = STACK[0x708];
  LODWORD(v1058) = LODWORD(STACK[0x708]) ^ 0x1E030156;
  LODWORD(STACK[0x6E0]) = v1058;
  v1274 = -2009212831 * (v1058 ^ v1264) - 75026750;
  LODWORD(v1058) = STACK[0x710];
  v1275 = LODWORD(STACK[0x710]) ^ 0xA7412B1D;
  LODWORD(STACK[0x7B0]) = v1274;
  LODWORD(STACK[0x7B4]) = -2009212831 * (v1275 ^ v1268) - 75026750;
  v1276 = v1273 ^ 0x48550156 ^ (((v1254[495] ^ 0x6B | (LODWORD(STACK[0x4B4]) << 8)) ^ 0x56560000)
                              + 1625839563
                              - 2
                              * (((v1254[495] ^ 0x6B | (LODWORD(STACK[0x4B4]) << 8)) ^ 0x56560000) & 0x60E857DB ^ (v1254[495] ^ 0x6B) & 0x10));
  LODWORD(STACK[0x7E8]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1261) - 75026750;
  LODWORD(STACK[0x7EC]) = -2009212831 * (v1267 ^ v1265) - 75026750;
  v1277 = LODWORD(STACK[0x598]) - 475810373 - ((2 * LODWORD(STACK[0x598])) & 0xC7476B76);
  v1278 = LODWORD(STACK[0x488]) - 316447172 - ((2 * LODWORD(STACK[0x488])) & 0xDA46CC78);
  LODWORD(STACK[0x7F4]) = -2009212831 * (v1267 ^ v1266) - 75026750;
  LODWORD(STACK[0x7F0]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1262) - 75026750;
  v1279 = (LODWORD(STACK[0x560]) ^ 0x6B | (LODWORD(STACK[0x590]) << 8))
        - 316447172
        - 2
        * ((LODWORD(STACK[0x560]) ^ 0x6B | (LODWORD(STACK[0x590]) << 8)) & 0x6D23663F ^ (LODWORD(STACK[0x560]) ^ 0x6B) & 3);
  v1280 = LODWORD(STACK[0x490]) - 475810373 - ((2 * LODWORD(STACK[0x490])) & 0xC7476B76);
  LODWORD(STACK[0x7B8]) = -2009212831 * (v1273 ^ 0x48550156 ^ v1272) - 75026750;
  LODWORD(STACK[0x7BC]) = -2009212831 * (v1275 ^ v1277) - 75026750;
  v1281 = (v1254[236] ^ 0x6B | (LODWORD(STACK[0x4A8]) << 8))
        + 1530194255
        - 2 * ((v1254[236] ^ 0x6B | (LODWORD(STACK[0x4A8]) << 8)) & 0x5B34E95F ^ (v1254[236] ^ 0x6B) & 0x10);
  LODWORD(STACK[0x7F8]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1271) - 75026750;
  LODWORD(STACK[0x7FC]) = -2009212831 * (v1267 ^ v1270) - 75026750;
  v1282 = LODWORD(STACK[0x594]) + 1625839563 - ((2 * LODWORD(STACK[0x594])) & 0xC1D0AF96);
  v1283 = -2009212831
        * (((2 * (v1058 ^ LODWORD(STACK[0x59C]))) & 0xC6487C04 ^ 0x80403C04)
         + (v1058 ^ LODWORD(STACK[0x59C]) ^ 0x27C6A0A4));
  LODWORD(STACK[0x7C0]) = -2009212831 * v1276 - 75026750;
  LODWORD(STACK[0x7C4]) = v1283;
  v1284 = v1282 ^ 0x56005656 ^ v1236;
  v1285 = ((v1254[472] ^ 0x6B | (LODWORD(STACK[0x4E0]) << 8))
         + 1625839563
         - 2 * ((v1254[472] ^ 0x6B | (LODWORD(STACK[0x4E0]) << 8)) & 0x60E857EB ^ (v1254[472] ^ 0x6B) & 0x20)) ^ 0x56560056 ^ v1236;
  v1286 = LODWORD(STACK[0x4C8]) - 475810373 - ((2 * LODWORD(STACK[0x4C8])) & 0xC7476B76);
  v1287 = v1254;
  v1288 = v1254[954] ^ 0x6B;
  v1289 = v1288 | (LODWORD(STACK[0x564]) << 8);
  LODWORD(STACK[0x808]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1278) - 75026750;
  v1290 = v1254[707] ^ 0x6B;
  v1291 = v1290 | (LODWORD(STACK[0x4F0]) << 8);
  v1292 = v1291 & 0x5B34E95F ^ v1290 & 0x10;
  v1293 = v1254[460] ^ 0x6B;
  v1294 = v1293 | (LODWORD(STACK[0x4CC]) << 8);
  v1295 = v1291 + 1530194255 - 2 * v1292;
  v1296 = v1254[943] ^ 0x6B;
  v1297 = v1296 | (LODWORD(STACK[0x4F4]) << 8);
  LODWORD(STACK[0x800]) = -2009212831 * (v1226 ^ 0x6736FD00 ^ v1279) - 75026750;
  v1298 = v1254[696] ^ 0x6B;
  v1299 = v1298 | (LODWORD(STACK[0x4D8]) << 8);
  LODWORD(STACK[0x804]) = -2009212831 * (v1267 ^ v1269) - 75026750;
  v1300 = v1254[213] ^ 0x6B;
  v1301 = -2009212831 * LODWORD(STACK[0x6F4]) - 75026750;
  LODWORD(STACK[0x760]) = STACK[0x700];
  v1302 = v1254[931] ^ 0x6B;
  LODWORD(v1058) = v1302 | (LODWORD(STACK[0x4AC]) << 8);
  v1303 = LODWORD(STACK[0x644]) ^ 0x6B;
  LODWORD(v1254) = v1303 | (LODWORD(STACK[0x4C0]) << 8);
  LODWORD(v1287) = v1287[684] ^ 0x6B;
  LODWORD(STACK[0x764]) = v1301;
  v1304 = -2009212831 * v1285 - 75026750;
  LODWORD(STACK[0x80C]) = -2009212831 * (v1267 ^ v1281) - 75026750;
  LODWORD(STACK[0x7CC]) = -2009212831 * (v1275 ^ v1280) - 75026750;
  LODWORD(STACK[0x7C8]) = -2009212831 * v1284 - 75026750;
  v1305 = v1226 ^ 0x6736FD00 ^ (v1294 - 316447172 - 2 * (v1294 & 0x6D23663E ^ v1293 & 2));
  v1306 = v1226 ^ 0x6736FD00 ^ (v1058 - 316447172 - 2 * (v1058 & 0x6D23663D ^ v1302 & 1));
  v1307 = STACK[0x6E0];
  v1308 = v1300 | (LODWORD(STACK[0x5A0]) << 8);
  v1309 = -2009212831 * (LODWORD(STACK[0x6E0]) ^ (v1297 + 1625839563 - 2 * (v1297 & 0x60E857DB ^ v1296 & 0x10)))
        - 75026750;
  LODWORD(STACK[0x810]) = ((v1301 & 0x883DD861 ^ 0x883DD861) + (v1301 & 0x883DD861))
                        * ((v1226 ^ 0x6736FD00 ^ (v1289 - 316447172 - 2 * (v1289 & 0x6D23663D ^ v1288 & 1))) + 1663319554);
  LODWORD(STACK[0x814]) = -2009212831 * (v1267 ^ v1295) - 75026750;
  LODWORD(STACK[0x7D0]) = v1304;
  LODWORD(STACK[0x7D4]) = -2009212831 * (v1275 ^ v1286) - 75026750;
  LODWORD(STACK[0x818]) = -2009212831 * v1305 - 75026750;
  LODWORD(STACK[0x81C]) = -2009212831 * (v1267 ^ (v1308 + 1530194255 - ((2 * v1308) & 0xB669D29E))) - 75026750;
  LODWORD(v1058) = LODWORD(STACK[0x580]) ^ 0xB9FF6F3F ^ LODWORD(STACK[0x710]);
  LODWORD(STACK[0x7D8]) = v1309;
  LODWORD(STACK[0x7DC]) = -2009212831 * (v1275 ^ (v1299 - 475810373 - 2 * (v1299 & 0x63A3B5BF ^ v1298 & 4))) - 75026750;
  v1310 = v1287 | (LODWORD(STACK[0x5A4]) << 8);
  LODWORD(STACK[0x7E4]) = -2009212831 * v1058 - 75026750;
  LODWORD(STACK[0x7E0]) = -2009212831
                        * (v1307 ^ ((_DWORD)v1254 + 1625839563 - 2 * (v1254 & 0x60E857CF ^ v1303 & 4)))
                        - 75026750;
  LODWORD(STACK[0x820]) = -2009212831 * v1306 - 75026750;
  LODWORD(STACK[0x824]) = -2009212831
                        * (v1267 ^ (v1310 + 1530194255 - 2 * (v1310 & 0x5B34E96F ^ v1287 & 0x20)))
                        - 75026750;
  STACK[0x720] -= 2112;
  return sub_18C9F6FDC();
}

uint64_t sub_18C9F6FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * (((*a5 == 0) * (((v5 + 1491) | 0x308) + 829)) ^ v5))
                            - ((614 * (v5 ^ 0x28Cu)) ^ 0x4C0)))();
}

uint64_t sub_18C9F702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(STACK[0x390] + 24);
  v6 = (v4 + 1933);
  v7 = (char *)&STACK[0x850] + v3;
  STACK[0x4D8] = (unint64_t)&STACK[0x850] + v3 + 1104;
  STACK[0x720] = v3 + v6 - 937;
  STACK[0x488] = v5;
  STACK[0x718] = (unint64_t)&STACK[0x850] + v3 + 1184;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6E8] + 8 * (int)((45 * (v5 == 0)) ^ v6));
  STACK[0x710] = (unint64_t)v7;
  STACK[0x4D0] = (unint64_t)(v7 + 2144);
  return v8(a1, 3157481556, a3, 3175188736, 2273246967, 1151250986, 822303832, 2372421482);
}

uint64_t sub_18C9F70FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((7275 * (v2 == 1101913970)) ^ v1)))(841318499);
}

uint64_t sub_18C9F74BC@<X0>(int a1@<W0>, int a2@<W2>, unsigned int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unint64_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;

  v10 = (a2 ^ 0x2B4C9D8F) + 934268241 * (v9 - 1673081951 * *(_DWORD *)(v4 + 4 * v9 - 0x16B953758)) + 1394859291;
  v11 = (v10 ^ 0x23C75FD5) - 600268757 + ((v10 << ((9 * (v3 ^ 0xAF)) ^ 0x1A)) & 0x478EBFAA);
  v12 = v11
      - 875632995
      * (v11
       - ((((v11 * (unint64_t)a3) >> 32)
                       + ((v11 - ((v11 * (unint64_t)a3) >> 32)) >> 1)) >> 11)
       * v5);
  v13 = (v12 - 1677064915 - ((2 * v12) & 0x38140A5A)) ^ v8;
  v14 = ((v13 - 1092933104 - ((2 * v13) & 0x7DB65420)) ^ a1) + (v7 ^ 0x32C9BEB6);
  v15 = v14 - ((2 * v14 - 157029004) & 0xE6A5AC36);
  v16 = v15 + 1856294101;
  v17 = ((v15 + 1856294101) ^ 0xCAD29E4) + 1;
  HIDWORD(v18) = (v15 + 1856294101) ^ 0x7352D61B;
  LODWORD(v18) = -1856294102 - v15;
  v19 = ((2 * (v17 + (a1 ^ 0xBEDB2A10))) & 0xEFD97DFE) + ((v17 + (a1 ^ 0xBEDB2A10)) ^ 0x77ECBEFF);
  v20 = 2012004095 - v19 + (v18 >> 31);
  v21 = v20 ^ (v17 + (v8 ^ 0x9C0A052D) - ((2 * (v17 + (v8 ^ 0x9C0A052D))) & 0x416C7930) + 548813976);
  v22 = (v7 ^ 0xC19B68AD ^ v16) - ((2 * (v7 ^ 0xC19B68AD ^ v16)) & 0x19EBE5F2) - 1930038535;
  HIDWORD(v18) = v21 ^ v22 ^ 0x795D9232;
  LODWORD(v18) = v21 ^ v22;
  v23 = ((2 * (v19 - 2012004095 + HIDWORD(v18))) & 0xBDD57FDE) + ((v19 - 2012004095 + HIDWORD(v18)) ^ 0xDEEABFEF);
  v24 = (v18 >> 31) - 69411776 - ((2 * (v18 >> 31)) & 0xF7B9B8FA) + 61;
  v25 = v24 ^ (v23 + 17);
  v23 += 555040785;
  HIDWORD(v18) = v25 ^ 0xFFFFFFFD;
  LODWORD(v18) = v24 ^ 0xFBDCDC40 ^ v23;
  v26 = v18 >> 6;
  v27 = v22 ^ v20;
  HIDWORD(v18) = v26 ^ 0x39999C8;
  LODWORD(v18) = v26 ^ 0x3C000000;
  v28 = (v27 ^ 0xA6145155) + (v21 ^ 0xA579F34) + ((v18 >> 26) ^ 0xE666720F);
  v29 = v28 - ((2 * v28 + 958594190) & 0x8B870C5E) + 1649738870;
  v30 = ((2 * ((v29 ^ 0xC5C3862F) + v23)) & 0xB7FD3BDE) + (((v29 ^ 0xC5C3862F) + v23) ^ 0x5BFE9DEF);
  v31 = ((v29 >> 29) ^ 6 | (8 * v29) ^ 0x2E1C3178)
      - v30
      + ((2 * ((v27 ^ 0x59EBAEAA) + (v29 ^ 0x3A3C79D0) + 1)) & 0xFFB3DD4C)
      + (((v27 ^ 0x59EBAEAA) + (v29 ^ 0x3A3C79D0) + 1) ^ 0x7FD9EEA6)
      - 601575607;
  v32 = (v31 - ((2 * v31) & 0x330A4672) + 428155705) ^ v21 ^ 0x29EEC5DD ^ v29;
  v33 = v30 - 1543413231 + ((v32 - ((2 * v32 + 240188878) & 0x56993B1E) + 1920277622) ^ 0x2B4C9D8F);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * ((101 * (v9 != 1524977183)) ^ v3)) - 4))(v33 - 1092933104 - ((2 * v33) & 0x7DB65420u));
}

uint64_t sub_18C9F78E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  _BOOL4 v6;

  *(_BYTE *)(STACK[0x718] + (431 * v5 - 2012127469) % 0x3BDu) = v5 - ((2 * v5 + 52) & 0xF0) + 18;
  v6 = (((a4 - 1542) | 0xC28) ^ 0xC3C) + v5 != 1479506806;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v6) | (4 * v6)) ^ a4)) - 8))();
}

uint64_t sub_18C9F797C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;

  v17 = 13 * (v8 ^ 0xC90);
  v18 = v13 ^ v12;
  v19 = ((2 * ((v11 & 0xF ^ 1) & 7) - (v11 & 0xF ^ 1) - 618936024) ^ 0xDB1BC929) * v9 + 139213;
  v20 = (_BYTE *)STACK[0x710];
  v21 = *(_BYTE *)(STACK[0x710] + 1632);
  v22 = v19
      - ((((v19 * (unint64_t)v10) >> 32)
                      + ((v19 - ((v19 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
      * a2;
  v23 = STACK[0x718];
  v20[1632] = *(_BYTE *)(STACK[0x718] + v22);
  *(_BYTE *)(v23 + v22) = v21;
  LOBYTE(v22) = v20[2063];
  v24 = (v13 ^ v12) % (v17 ^ 0x8C6u) * v9 + 139644;
  v25 = v24
      - ((((v24 * (unint64_t)v10) >> 32)
                      + ((v24 - ((v24 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
      * a2;
  v20[2063] = *(_BYTE *)(v23 + v25);
  v26 = (((a8 ^ 0x224F5915u) % 0xE) ^ 0x7E5F6FBF) + 2 * ((a8 ^ 0x224F5915u) % 0xE);
  *(_BYTE *)(v23 + v25) = v22;
  LODWORD(v25) = (v26 - 2120183418) * ((v14 & v9 ^ 0x100) + (((v16 ^ 0x90) + 281) & v9));
  v27 = v20[1537];
  v20[1537] = *(_BYTE *)(v23 + (v25 - ((4487950 * (unint64_t)v25) >> 32) * a2));
  LODWORD(v25) = (((121 - v26) | (v26 + 134)) & 0xA7 | 0x108) * (v26 - 2120183418);
  *(_BYTE *)(v23 + (v25 - ((4487950 * (unint64_t)v25) >> 32) * a2)) = v27;
  LODWORD(v25) = (((v15 ^ 0x995326Fu) % 0xD) ^ 0xF53FBBFF) + 2 * ((v15 ^ 0x995326Fu) % 0xD);
  v28 = (v25 + ((507 - v25) & 0x143 ^ v25 & 3)) * v9 + 431129276;
  LOBYTE(v22) = v20[1968];
  v29 = v13 ^ v14;
  v20[1968] = *(_BYTE *)(v23
                       + v28
                       - ((((v28 * (unint64_t)v10) >> 32)
                                       + ((v28 - ((v28 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
                       * a2);
  LODWORD(v25) = v25 * v9
               + 431268489
               - (((((v25 * v9 + 431268489) * (unint64_t)v10) >> 32)
                               + ((v25 * v9
                                               + 431268489
                                               - (((v25 * v9 + 431268489) * (unint64_t)v10) >> 32)) >> 1)) >> 9)
               * a2;
  LODWORD(v25) = v25 - ((2 * v25) & 0x520) + 174169744;
  *(_BYTE *)(v23 + (v25 ^ 0xA619E90)) = v22;
  LODWORD(v22) = ((2 * ((v15 ^ 0xD37B7F7E) + (v29 ^ 0x1CA7DAD5) + 1)) & 0xBFBFB7BE)
               + (((v15 ^ 0xD37B7F7E) + (v29 ^ 0x1CA7DAD5) + 1) ^ 0xDFDFDBDF);
  LODWORD(v25) = (v25 & 0x131 ^ 0x10 | v25 & 0x131 ^ 0xEDEC1121) ^ v29;
  v30 = ((2 * v25) & 0xDD7FE8CC ^ 0xC4304844) + (v25 ^ 0xDE7D14C);
  v31 = v18 - v30;
  v32 = v18 - v30 - 1758890047;
  v33 = ((v30 + 289409946) % 0xCu * v9
                     + 140937
                     - ((4487950 * (unint64_t)((v30 + 289409946) % 0xCu * v9 + 140937)) >> 32) * a2);
  v34 = v30 + (a8 ^ 0x4648200B);
  v35 = v20[1442];
  v20[1442] = *(_BYTE *)(v23 + v33);
  v36 = (v32 % 0xB * v9 + 141368 - ((4487950 * (unint64_t)(v32 % 0xB * v9 + 141368)) >> 32) * a2);
  *(_BYTE *)(v23 + v33) = v35;
  v37 = v20[1873];
  v20[1873] = *(_BYTE *)(v23 + v36);
  *(_BYTE *)(v23 + v36) = v37;
  v38 = ((v34 + 289409946) % 0xAu * v9
                     + 141799
                     - ((4487950 * (unint64_t)((v34 + 289409946) % 0xAu * v9 + 141799)) >> 32) * a2);
  v39 = v20[1347];
  v20[1347] = *(_BYTE *)(v23 + v38);
  *(_BYTE *)(v23 + v38) = v39;
  v40 = (((int)v22 + 538977313) % 9u * v9
                     + 142230
                     - ((4487950 * (unint64_t)(((int)v22 + 538977313) % 9u * v9 + 142230)) >> 32) * a2);
  v41 = v31 + v22;
  LODWORD(v22) = ((2 * v32) & 0xEFFE2FFE ^ 0x61000AE8) + (v32 ^ 0xCF7F5A8B);
  LODWORD(v38) = v30 - v41 - 423950758 + v22 - 1381185;
  LODWORD(v36) = v41 - v38;
  LODWORD(v25) = v30 + v34 - 2 * ((v34 + 289409946) & (v30 + 289409946)) + v22 - 1381185;
  LOBYTE(v41) = v20[1778];
  v20[1778] = *(_BYTE *)(v23 + v40);
  *(_BYTE *)(v23 + v40) = v41;
  v42 = v25 + 599812114;
  v43 = v36 + v25 + 599812114;
  v44 = ((v38 & 7) * v9
                     + 142661
                     - ((4487950 * (unint64_t)((v38 & 7) * v9 + 142661)) >> 32) * a2);
  LOBYTE(v40) = v20[1252];
  v20[1252] = *(_BYTE *)(v23 + v44);
  *(_BYTE *)(v23 + v44) = v40;
  LOBYTE(v44) = v20[1683];
  v45 = (((int)v22 - 1257623252) % 7u * v9
                     + 143092
                     - ((4487950 * (unint64_t)(((int)v22 - 1257623252) % 7u * v9 + 143092)) >> 32) * a2);
  v20[1683] = *(_BYTE *)(v23 + v45);
  *(_BYTE *)(v23 + v45) = v44;
  LODWORD(v33) = ((((int)v36 - 1141360830) % 5u) ^ 0xE4FF776F) + 2 * (((int)v36 - 1141360830) % 5u);
  LODWORD(v44) = v33 - ((2 * v33 + 906039608) & 0xBE003CE8) + 2046863120;
  v46 = (((int)v25 - 1433005450) % 6u * v9
                     + 143523
                     - ((4487950 * (unint64_t)(((int)v25 - 1433005450) % 6u * v9 + 143523)) >> 32) * a2);
  LOBYTE(v45) = v20[2114];
  v20[2114] = *(_BYTE *)(v23 + v46);
  *(_BYTE *)(v23 + v46) = v45;
  LOBYTE(v46) = v42 - v38;
  v47 = (((v42 - v38 - 1954265660) ^ (v22 - 1257623252))
       - ((2 * ((v42 - v38 - 1954265660) ^ (v22 - 1257623252))) & 0x13F041EA)
       - 1980227339) ^ 0x89F820F5;
  LOBYTE(v22) = v22 + v38 - 52 + v47;
  LOBYTE(v41) = v20[1588];
  LOBYTE(v46) = v46 + v22 + 1;
  LODWORD(v38) = (2 * (v44 & 3) + (v44 ^ 0x5F001F37)) * v9;
  v20[1588] = *(_BYTE *)(v23
                       + (_DWORD)v33 * v9
                       + 1978146417
                       - (((((v33 * v9 + 1978146417) * (unint64_t)v10) >> 32)
                                       + ((v33 * v9
                                                       + 1978146417
                                                       - (((v33 * v9 + 1978146417) * (unint64_t)v10) >> 32)) >> 1)) >> 9)
                       * a2);
  *(_BYTE *)(v23
           + v38
           - ((((v38 * (unint64_t)v10) >> 32)
                           + ((v38 - ((v38 * (unint64_t)v10) >> 32)) >> 1)) >> 9)
           * a2) = v41;
  LODWORD(v33) = ((~(_BYTE)v22 + 2 * (_BYTE)v22 + 1) & 3) * v9 + 144385;
  v48 = (v33 - ((4487950 * (unint64_t)v33) >> 32) * a2);
  LOBYTE(v38) = v20[2019];
  v20[2019] = *(_BYTE *)(v23 + v48);
  *(_BYTE *)(v23 + v48) = v38;
  v49 = ((v43 + 1120788902 + v47) % 3u * v9
                     + 144816
                     - ((4487950 * (unint64_t)((v43 + 1120788902 + v47) % 3u * v9 + 144816)) >> 32) * a2);
  LOBYTE(v22) = v20[1493];
  v20[1493] = *(_BYTE *)(v23 + v49);
  *(_BYTE *)(v23 + v49) = v22;
  v50 = v20[1924];
  v51 = (((_BYTE)v46 + 1) & 1) == 0;
  v52 = 214;
  if (v51)
    v52 = 740;
  v20[1924] = *(_BYTE *)(v23 + v52);
  *(_BYTE *)(v23 + v52) = v50;
  v53 = STACK[0x6E8];
  v54 = (*(unsigned __int8 *)(v23
                            + 621100657 * v9
                            - 1406271602
                            - (((((621100657 * v9 - 1406271602) * (unint64_t)v10) >> 32)
                                            + ((621100657 * v9
                                                            - 1406271602
                                                            - (((621100657 * v9 - 1406271602)
                                                              * (unint64_t)v10) >> 32)) >> 1)) >> 9)
                            * a2) ^ 0x78)
      * v9
      + 279719;
  *(_BYTE *)(v23 + (v54 - ((4487950 * (unint64_t)v54) >> 32) * a2)) = 120;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (v17 ^ 0x4F4)) - 12))(a1);
}

void sub_18C9F80F4()
{
  JUMPOUT(0x18C9F8084);
}

uint64_t sub_18C9F80FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;

  *(_BYTE *)(v7 + (431 * a5 - 1255400891) % 0x3BDu) = a5 - (((_BYTE)a5 << (a6 + 56)) & 0xF0) + 112;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((57 * (a5 + 1 == v8 + 16)) ^ a6)) - 12))();
}

uint64_t sub_18C9F8170(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t (*v52)(unint64_t **);

  v14 = a6 - 625;
  v15 = ((9 - a7) & 0xF) * v11 + 139213;
  v16 = (v15 - ((4487950 * (unint64_t)v15) >> 32) * v13);
  v17 = (_BYTE *)STACK[0x710];
  v18 = *(_BYTE *)(STACK[0x710] + 1632);
  v17[1632] = *(_BYTE *)(v7 + v16);
  *(_BYTE *)(v7 + v16) = v18;
  v19 = v17[2063];
  v20 = ((a1 ^ 0xBEDB2A10) % 0xF * v11
                     + 139644
                     - ((4487950 * (unint64_t)((a1 ^ 0xBEDB2A10) % 0xF * v11 + 139644)) >> 32) * v13);
  v17[2063] = *(_BYTE *)(v7 + v20);
  *(_BYTE *)(v7 + v20) = v19;
  LOBYTE(v20) = v17[1537];
  v21 = ((v9 ^ 0x9C0A052D) % 0xE * v11
                     + 140075
                     - ((4487950 * (unint64_t)((v9 ^ 0x9C0A052D) % 0xE * v11 + 140075)) >> 32) * v13);
  v17[1537] = *(_BYTE *)(v7 + v21);
  *(_BYTE *)(v7 + v21) = v20;
  LODWORD(v20) = (((v8 ^ 0x32C9BEB6u) % 0xD - ((2 * ((v8 ^ 0x32C9BEB6u) % 0xD)) & 0x12) - 835247527) ^ 0xCE372259) * v11
               + 140506;
  v22 = a1 ^ a3;
  v23 = v20
      - ((((v20 * (unint64_t)v12) >> 32)
                      + ((v20 - ((v20 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
      * v13;
  LOBYTE(v21) = v17[1968];
  LODWORD(v16) = (a1 ^ 0xBEDB2A10) - 1469480100 + (a1 ^ a3 ^ 0x87845951);
  LODWORD(v16) = ((2 * v16) & 0x9C3FBF2E) + (v16 ^ 0x4E1FDF97);
  v24 = v22 ^ 0x787BA6AE;
  v17[1968] = *(_BYTE *)(v7 + v23);
  *(_BYTE *)(v7 + v23) = v21;
  LOBYTE(v23) = v17[1442];
  v25 = v16 - 1310711703;
  v26 = ((v22 ^ 0x787BA6AEu) % 0xC * v11
                     + 140937
                     - ((4487950 * (unint64_t)((v22 ^ 0x787BA6AEu) % 0xC * v11 + 140937)) >> 32) * v13);
  v27 = ((2 * ((v8 ^ 0xE827F3A7) + (v22 ^ 0x6A684860) + 1)) & 0xEE8F9EFE)
      + (((v8 ^ 0xE827F3A7) + (v22 ^ 0x6A684860) + 1) ^ 0x7747CF7F);
  v17[1442] = *(_BYTE *)(v7 + v26);
  v28 = (v22 ^ 0x787BA6AE)
      + (v9 ^ 0xF80D7C33)
      - ((2 * ((v22 ^ 0x787BA6AE) + (v9 ^ 0xF80D7C33))) & 0x10E6CEE2)
      - 2005702799;
  *(_BYTE *)(v7 + v26) = v23;
  v29 = ((((int)v16 - 1310711703) % 0xBu - ((2 * (((int)v16 - 1310711703) % 0xBu)) & 0x12) - 1755111143) ^ 0x97632119)
      * v11
      + 141368;
  v30 = v29
      - ((((v29 * (unint64_t)v12) >> 32)
                      + ((v29 - ((v29 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
      * v13;
  v31 = v17[1873];
  v17[1873] = *(_BYTE *)(v7 + v30);
  *(_BYTE *)(v7 + v30) = v31;
  v32 = ((v28 ^ 0x88736771) % 0xA * v11
                     + 141799
                     - ((4487950 * (unint64_t)((v28 ^ 0x88736771) % 0xA * v11 + 141799)) >> 32) * v13);
  v33 = v22 ^ 0xF008C1DF ^ v28;
  LOBYTE(v28) = v17[1347];
  v17[1347] = *(_BYTE *)(v7 + v32);
  LODWORD(v16) = v16 + v27;
  v34 = ((2 * v25) & 0xDDB7FF4E ^ 0x51009A48) + (v25 ^ 0xD65BB2D3);
  v35 = (v27 - 2001194879) % 9 - ((2 * ((v27 - 2001194879) % 9)) & 0x14) - 1225375238;
  *(_BYTE *)(v7 + v32) = v28;
  v36 = v24 - v16 + v34 - 571564160;
  LODWORD(v32) = (v35 ^ 0xB6F641FA) * v11;
  v37 = (v32 ^ 0xEE3DF7EE) + ((862 * (v35 ^ 0xB6F641FA)) & 0x7BEFDC);
  v38 = v33 + v34 - 571564160;
  v39 = v16 - (v36 - 1715808994);
  LOBYTE(v33) = v17[1778];
  v17[1778] = *(_BYTE *)(v7 + (v37 + 298070952) % ((((87 - v37) & 0x3AD) + ((v37 + 936) & 0x3AD)) | 0x18u));
  *(_BYTE *)(v7
           + (_DWORD)v32
           + v10
           - (((((v32 + v10) * (unint64_t)v12) >> 32)
                           + ((v32 + v10 - (((v32 + v10) * (unint64_t)v12) >> 32)) >> 1)) >> 9)
           * v13) = v33;
  LODWORD(v16) = v34 - 1104328316;
  LOBYTE(v32) = v17[1252];
  v40 = v10 + (((_BYTE)v36 - 1) & 7) * v11 + 431;
  v41 = (v40 - ((4487950 * (unint64_t)v40) >> 32) * v13);
  v17[1252] = *(_BYTE *)(v7 + v41);
  v42 = v38 - 207370839;
  v43 = v34 + v36 - 1715808994;
  *(_BYTE *)(v7 + v41) = v32;
  LODWORD(v26) = v10
               + (((v34 - 1104328316) % 7 - ((2 * ((v34 - 1104328316) % 7)) & 0xA) - 1529719771) ^ 0xA4D25425) * v11
               + 862;
  v44 = v26
      - ((((v26 * (unint64_t)v12) >> 32)
                      + ((v26 - ((v26 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
      * v13;
  LOBYTE(v34) = v17[1683];
  v17[1683] = *(_BYTE *)(v7 + v44);
  *(_BYTE *)(v7 + v44) = v34;
  LODWORD(v44) = v10 + (v38 - 1288347431) % 6 * v11 + 1293;
  LOBYTE(v38) = v17[2114];
  v45 = (v44 - ((4487950 * (unint64_t)v44) >> 32) * v13);
  v17[2114] = *(_BYTE *)(v7 + v45);
  LODWORD(v16) = (v42 - (v36 - 1715808994) - ((2 * (v42 - (v36 - 1715808994)) + 22986942) & 0x3BF559EA) + 2125073748) ^ v16;
  LODWORD(v16) = ((2 * v16) & 0x2EFF65CC ^ 0x2AF541C8) + (v16 ^ 0x8A851E13);
  LOBYTE(v32) = v43 + v16;
  *(_BYTE *)(v7 + v45) = v38;
  LODWORD(v23) = ((((v39 + 1538659865) % 5u) ^ 0x3FFCEF7F) + 2 * ((v39 + 1538659865) % 5u)) * v11 + 1160444801;
  v46 = v23
      - ((((v23 * (unint64_t)v12) >> 32)
                      + ((v23 - ((v23 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
      * v13;
  LOBYTE(v38) = v17[1588];
  v17[1588] = *(_BYTE *)(v7 + v46);
  *(_BYTE *)(v7 + v46) = v38;
  LODWORD(v46) = v10 + (((_BYTE)v43 + (_BYTE)v16 - 1) & 3) * v11 + 2155;
  LOBYTE(v38) = v17[2019];
  v47 = (v46 - ((4487950 * (unint64_t)v46) >> 32) * v13);
  v17[2019] = *(_BYTE *)(v7 + v47);
  *(_BYTE *)(v7 + v47) = v38;
  v48 = (v10
                     + (v39 + v42 + 63438435 + v16) % 3 * v11
                     + 2586
                     - ((4487950 * (unint64_t)(v10 + (v39 + v42 + 63438435 + v16) % 3 * v11 + 2586)) >> 32)
                     * v13);
  LOBYTE(v47) = v17[1493];
  v17[1493] = *(_BYTE *)(v7 + v48);
  *(_BYTE *)(v7 + v48) = v47;
  LODWORD(v47) = ((((v43 - 1659927467) & 0xBAB96DD2 ^ 0xBAB96DD2) + ((v43 - 1659927467) & 0xBAB96DD2))
                * (((v36 - 1197666321) & 0x315A896F ^ 0x315A896F) + ((v36 - 1197666321) & 0x315A896F))) & 0xFFFFFFFE | (~((_BYTE)v32 + 14) + ~((_BYTE)v42 - ((_BYTE)v36 + 30))) & 1;
  LODWORD(v48) = ((2 * v47) & 0xCFF58BFE) + (v47 ^ 0x67FAC5FF);
  LODWORD(v47) = v48 * v11
               - 254883972
               - (((((v48 * v11 - 254883972) * (unint64_t)v12) >> 32)
                               + ((v48 * v11
                                               - 254883972
                                               - (((v48 * v11 - 254883972) * (unint64_t)v12) >> 32)) >> 1)) >> 9)
               * v13;
  LODWORD(v47) = v47 - ((2 * v47) & 0x374) + 686385594;
  LODWORD(v48) = (v48 + (((v47 & 0x18B ^ 0x1FE) + (v47 & 0x18B ^ 0x75) + 396) & 0x143)) * v11 - 255023185;
  v49 = v17[1924];
  v17[1924] = *(_BYTE *)(v7 + (v47 ^ 0x28E969BA));
  *(_BYTE *)(v7
           + v48
           - ((((v48 * (unint64_t)v12) >> 32)
                           + ((v48 - ((v48 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
           * v13) = v49;
  v50 = *(_BYTE *)(STACK[0x718] + (279719 - 292 * v13));
  v51 = (unsigned __int16)(69
                         * (*(unsigned __int8 *)(STACK[0x718]
                                               + 279719
                                               - ((((279719 * (unint64_t)v12) >> 32)
                                                               + ((279719
                                                                               - ((279719 * (unint64_t)v12) >> 32)) >> 1)) >> 9)
                                               * v13) ^ 0xB7 ^ (~(32 * v50) + 16 * v50 - 7) & 0xF8)
                         + 1311)
      % 0x3A0u;
  v52 = off_1E2538470[v14 ^ 0x67E];
  LODWORD(v51) = (*((_BYTE *)v52 + v51) ^ 0xBD ^ (((*((_BYTE *)v52 + v51) >> 3) ^ 0x13 ^ ((~*((unsigned __int8 *)v52 + v51) & 0x80u) >> 7))
                                                                 - ((2 * ((*((_BYTE *)v52 + v51) >> 3) ^ 0x13)) & 0x1C)
                                                                 + 14))
               * v11
               + 139213;
  *(_BYTE *)(STACK[0x718]
           + 162683284 * v11
           - 1396727743
           - (((((162683284 * v11 - 1396727743) * (unint64_t)v12) >> 32)
                           + ((162683284 * v11
                                           - 1396727743
                                           - (((162683284 * v11 - 1396727743) * (unint64_t)v12) >> 32)) >> 1)) >> 9)
           * v13) = *(_BYTE *)(STACK[0x718]
                             + (v51 - ((4487950 * (unint64_t)v51) >> 32) * v13));
  return (*(uint64_t (**)(void))(STACK[0x6E8] + 8 * v14))();
}

uint64_t sub_18C9F8A7C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v9 = v6 + 431 * (((_BYTE)v3 + 55 + (_BYTE)a3 - 52) & 0xF);
  v10 = v6 + 431 * ((a3 + 3311) >> 4);
  LOBYTE(v10) = *(_BYTE *)(v8 + (v10 - 957 * ((4487950 * (unint64_t)v10) >> 32)));
  LOBYTE(v10) = *(_BYTE *)(v4
                         + (unsigned __int16)(69
                                            * (*(unsigned __int8 *)(v8
                                                                  + (v9
                                                                                 - 957
                                                                                 * ((4487950 * (unint64_t)v9) >> 32))) ^ 0xFA ^ (~(32 * (_BYTE)v10) + 16 * (_BYTE)v10 - 7) & 0xF8)
                                            + 20769)
                         % 0x3A0u) ^ 0xE;
  LOBYTE(v10) = v10 - ((2 * v10 - 98) & 0x84) - 111;
  v11 = v7 + 431 * ((((((96 * (v10 ^ 0xC2)) & 0x80) + 48 * (v10 ^ 0xC2) - 62) ^ v10) >> 4) ^ 7);
  *(_BYTE *)(v8 + (431 * a3 + 586192481) % 0x3BDu) = -16
                                                   * *(_BYTE *)(v8
                                                              + (v11
                                                                             - 957
                                                                             * ((4487950 * (unint64_t)v11) >> 32)))
                                                   - 8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((8022 * (a3 == 1164559376)) ^ v3)))();
}

uint64_t sub_18C9F8BDC(uint64_t a1, int a2, uint64_t a3, __int16 a4, int a5, __int16 a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;

  v16 = v13 + ((v7 + 15) & (v9 ^ 0x104C)) * v11;
  v17 = v13 + ((v7 + 191) >> 4) * v11;
  LOWORD(v17) = (*(unsigned __int8 *)(v15
                                    + v16
                                    - ((((v16 * (unint64_t)a7) >> 32)
                                                    + ((v16 - ((v16 * (unint64_t)a7) >> 32)) >> 1)) >> 9)
                                    * a2) ^ (-16
                                           * *(_BYTE *)(v15
                                                      + (v17 - ((v17 * (unint64_t)v12) >> 32) * a2))
                                           - 8) & 0xF8 ^ 0x2A)
              * a4
              - 24481;
  v18 = v14
      + (*(unsigned __int8 *)(v8
                            + (unsigned __int16)(v17
                                               - ((unsigned __int16)(((unsigned __int16)v17 * a5) >> 16) >> 8)
                                               * a6)) ^ 0x8E)
      * v11;
  *(_BYTE *)(v15
           + v7 * v11
           - 146164343
           - (((((v7 * v11 - 146164343) * (unint64_t)a7) >> 32)
                           + ((v7 * v11
                                           - 146164343
                                           - (((v7 * v11 - 146164343) * (unint64_t)a7) >> 32)) >> 1)) >> 9)
           * a2) = *(_BYTE *)(v15 + (v18 - ((v18 * (unint64_t)v12) >> 32) * a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((11 * (v7 != 1913643072)) ^ v9)) - 4))();
}

uint64_t sub_18C9F8CE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;

  v5 = (431 * v3 + 134275654) % 0x3BDu - 534534445 - ((2 * ((431 * v3 + 134275654) % 0x3BDu)) & 0x5A6);
  v6 = 69 * ((v5 & 0x11A ^ 0x12) + (v5 & 0x11A ^ 0x108) + (*(unsigned __int8 *)(v4 + (v5 ^ 0xE023A6D3)) ^ 0x77));
  *(_BYTE *)(v4 + (431 * v3 + 134400644) % 0x3BDu) = *(_BYTE *)(v1
                                                              + (v6
                                                                             - 928
                                                                             * ((4628198 * (unint64_t)v6) >> 32))) ^ 0x6C;
  return (*(uint64_t (**)(void))(v2 + 8 * ((998 * (v3 != -727764738)) ^ v0)))();
}

uint64_t sub_18C9F8DE4@<X0>(unsigned int a1@<W7>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  v12 = (((((48 - v10) & (v2 - 2461)) + (v9 & 0x41 ^ 1)) | ~(v9 ^ (a1 + 6) | v9 ^ 0xC0369AB1) | 0x142)
       + (*(unsigned __int8 *)(v4 + (v9 ^ a1) * v6 - (v9 ^ a1) * v6 / 0x3A0 * v8) ^ 0x9B))
      * a2;
  *(_BYTE *)(v11
           + v10 * a2
           + 2026170920
           - (((((v10 * a2 + 2026170920) * (unint64_t)v3) >> 32)
                           + ((v10 * a2
                                           + 2026170920
                                           - (((v10 * a2 + 2026170920) * (unint64_t)v3) >> 32)) >> 1)) >> 9)
           * v5) = *(_BYTE *)(v11
                            + v12
                            - ((((v12 * (unint64_t)v3) >> 32)
                                            + ((v12 - ((v12 * (unint64_t)v3) >> 32)) >> 1)) >> 9)
                            * v5);
  return (*(uint64_t (**)(void))(v7 + 8 * ((693 * (v10 == 1998288960)) ^ v2)))();
}

uint64_t sub_18C9F8EF4()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6E8]
                                                                                 + 8 * ((v0 + 603) ^ 0x7E))
                                                                     - 4))(548570251, 4026482668, 1317115726, 4216590097);
}

void sub_18C9F93B0()
{
  JUMPOUT(0x18C9F8F9CLL);
}

uint64_t sub_18C9F93D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL4 v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;

  v10 = (a7 - 651) | 0x4CC;
  LODWORD(STACK[0x6F4]) = ((((v10 - 1486275987) ^ v9) + 1598753077) ^ 0x7FE1FB83)
                        - 419446785
                        + ((2 * (((v10 - 1486275987) ^ v9) + 1598753077)) & 0xFFC3F706);
  v11 = (a6 + 1041356854);
  v12 = LODWORD(STACK[0x6F8]) - 1016005298;
  v13 = v12 < 0xB368BC2B;
  LODWORD(STACK[0x700]) = (v10 - 310520031) & 0x12822CDA;
  v14 = *(unsigned __int8 *)(STACK[0x580] + ((v10 - 310520031) & 0x12822CDA ^ 0xF0116D3B) + 267295245)
      + ((v10 - 310520031) & 0x12822CDA ^ 0xF0116D3B)
      + 267295245;
  v15 = (-2109510243 * v14 - ((75946810 * v14 - 1577837358) & 0xF52DB448) - 879695731) ^ 0x5EE3CDCC;
  v16 = (v8 ^ 0xFF1D07D2) + (v7 ^ 0x3B6BFEC2) + ((v15 % 0x101) ^ v15) + 2;
  v17 = ((v16 - 681451304 - ((2 * v16) & 0xAEC3C1B0)) ^ LODWORD(STACK[0x710]))
      - ((2 * ((v16 - 681451304 - ((2 * v16) & 0xAEC3C1B0)) ^ LODWORD(STACK[0x710])) - 649501600) & 0xB949BA02);
  v18 = v8 ^ 0xDC46252C ^ (v17 + 1229557553);
  v19 = ((v17 + 1229557553) ^ 0x235B22FE) + 1;
  v20 = v19 + (LODWORD(STACK[0x710]) ^ 0xD761E0D8);
  HIDWORD(v21) = (v17 + 1229557553) ^ 0x5CA4DD01;
  LODWORD(v21) = -1229557554 - v17;
  v22 = v19 + (v7 ^ 0xC494013D);
  v23 = (((v21 >> 31) + v18) ^ v22) + v20;
  v24 = (v23 ^ 0xA6E151A8) + v18;
  v25 = (v22 - ((2 * v22) & 0x7C3E7D84) - 1105248574) ^ v23 ^ 0x18FE6F6A;
  v26 = (v23 ^ 0xA6E151A8) + v20;
  HIDWORD(v21) = v23 ^ 0x26E151A8;
  LODWORD(v21) = ~v23;
  v27 = (((v21 >> 31) - v24) ^ v25) - v26;
  v28 = (v27 ^ 0xA8C66706) + v26 + 1;
  HIDWORD(v21) = v27 ^ 0x573998F9;
  LODWORD(v21) = v27;
  v29 = (v25 + (v27 ^ 0xA8C66706) + 2 + (v21 >> 31) + (v27 ^ v24 ^ 0x573998F9) + ((2 * (v27 ^ v24)) ^ 0x518CCE0D)) ^ v28;
  if (v12 >= 0xB368BC2B)
    v13 = v12 > 0xB368BC2C;
  LODWORD(STACK[0x710]) = v28 ^ 0xDA0E95AE ^ (v29 - ((2 * v29 + 426186040) & 0x1ADEEAEC) - 1172111342);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6E8]
                                                                       + 8 * ((2470 * v13) ^ (v10 - 680))))(2742690335, v11, 3009985579, 1463392505);
}

void sub_18C9F9778()
{
  JUMPOUT(0x18C9F9508);
}

uint64_t sub_18C9F9784()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unint64_t v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;

  LODWORD(STACK[0x658]) = v3;
  LODWORD(STACK[0x660]) = v4;
  v6 = v0 - 75;
  LODWORD(STACK[0x65C]) = v1 - 106879236;
  v7 = (v2 ^ v5) - 211276228 + v6 + v1;
  LODWORD(STACK[0x654]) = 2 * v7;
  LODWORD(STACK[0x650]) = (v7 ^ 0xF7D0CBFE) + 1610612720;
  LODWORD(STACK[0x708]) = 1618106919;
  v8 = (((v6 - 778) ^ 0x647C9017) + 764453921 * LODWORD(STACK[0x728]) - 907016450) ^ 0x99C91727;
  v9 = LODWORD(STACK[0x708])
     + 722999849
     + ((-1583063336
       - 1587129527 * (((v8 - 1583063336 - ((2 * v8) & 0x4348BDB0)) ^ 0xA1A45ED8) % 0x6AD)
       - ((1120708242 * (((v8 - 1583063336 - ((2 * v8) & 0x4348BDB0)) ^ 0xA1A45ED8) % 0x6AD)) & 0x4348BDB0)) ^ (v8 - 1583063336 - ((2 * v8) & 0x4348BDB0)));
  v10 = (v9 - 659010957 - ((2 * v9) & 0xB17094E6)) ^ 0x7306C65B;
  v11 = v10 - ((2 * v10 + 93326872) & 0x21ADEAF4) + 329186438;
  v12 = v11 ^ 0x7306C65B;
  v13 = (v11 ^ 0x375C8E9B) - ((2 * (v11 ^ 0x375C8E9B)) & 0x44FF386) - 2111309373;
  v14 = ((2 * (LODWORD(STACK[0x708]) - 2087870904 + (v11 ^ 0x90D6F57A))) & 0x9CDD95DE)
      + ((LODWORD(STACK[0x708]) - 2087870904 + (v11 ^ 0x90D6F57A)) ^ 0xCE6ECAEF);
  HIDWORD(v15) = v11 ^ 0xD6F57A;
  LODWORD(v15) = v11 ^ 0x90000000;
  v16 = (v15 >> 28) - 831599889 - v14 + (v13 ^ 0x7DD8063C) + 1;
  v17 = (v16 + 1215217417 + (~(2 * v16) | 0x6F2281ED) + 1) ^ v12;
  v18 = v17 - ((2 * v17 - 214807126) & 0xA0100C74) - 912184049;
  v19 = v18 ^ v13;
  v20 = (v12 ^ 0x486EBF09)
      + (v18 ^ 0xAFF7F9C5)
      + 323612411
      + (~(2 * ((v12 ^ 0x486EBF09) + (v18 ^ 0xAFF7F9C5) + 1)) | 0xD96C220D);
  HIDWORD(v15) = v18 ^ 0x8063A;
  LODWORD(v15) = v18 ^ 0x55555555;
  v21 = ((2 * (v14 + 831599890 + (v18 ^ 0xAFF7F9C5))) & 0xC77EC7DE)
      + ((v14 + 831599890 + (v18 ^ 0xAFF7F9C5)) ^ 0x63BF63EF);
  v22 = (v20 ^ 0xECB61106)
      + (((v15 >> 28) - 1673487343 + v21 - 768606215 - ((2 * ((v15 >> 28) - 1673487343 + v21)) & 0xA45FFFF2)) ^ v19)
      + 1;
  v23 = v22 - ((2 * v22 + 382328454) & 0x3BAEECFE) + 1765565890;
  v24 = (v23 ^ 0xE2288980) + v21 - ((2 * ((v23 ^ 0xE2288980) + v21) + 947992612) & 0xAE0911E6) - 213572347;
  HIDWORD(v15) = v23 ^ 0x1DD7767F;
  LODWORD(v15) = v23;
  v25 = ((v15 >> 29)
       + ((2 * ((v19 ^ 0xD22FFFF9) + (v23 ^ 0xE2288980) + 1)) & 0xFDEDE63E)
       + (((v19 ^ 0xD22FFFF9) + (v23 ^ 0xE2288980) + 1) ^ 0x7EF6F31F)
       - 2130113310
       + (v24 ^ 0xA8FB770C)) ^ v23 ^ v20;
  v26 = ((2 * v25) & 0x596677BC ^ 0x1924310C) + (v25 ^ 0xA22DA358);
  LODWORD(STACK[0x708]) = ((2 * ((v26 - 1297421617) ^ v24)) & 0xFDEFEB7A ^ 0xAC090162)
                        + ((v26 - 1297421617) ^ v24 ^ 0xA9F37D4E)
                        + 2105175035;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6E8] + 8 * (v6 ^ 0xCF)))(2711903960, 3387950846, 2851306830, 4260359034, 2430006650, 1215217417, 2105175035, 1235406903);
}

void sub_18C9F9C38()
{
  JUMPOUT(0x18C9F9890);
}

uint64_t sub_18C9F9C50@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unint64_t v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  unsigned int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  uint64_t v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  char v337;
  int v338;
  int v339;
  unsigned int v340;
  char v341;
  unsigned int v342;
  uint64_t v343;
  int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  int v484;
  int v485;
  unsigned int v486;
  int v487;
  int v488;
  unsigned int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  unsigned int v512;
  int v513;
  int v514;
  unsigned int v515;
  unsigned int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  int v543;
  unsigned int v544;
  int v545;
  unsigned int v546;
  unsigned int v547;
  int v548;
  int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  unint64_t v553;
  int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  unsigned int v561;
  int v562;
  int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  int v570;
  int v571;
  int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  int v584;
  int v585;
  unsigned int v586;
  int v587;
  int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  int v610;
  unsigned int v611;
  unsigned int v612;
  int v613;
  int v614;
  unsigned int v615;
  int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  int v620;
  int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  unsigned int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  unsigned int v642;
  int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  int v648;
  unsigned int v649;
  int v650;
  int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  unsigned int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  int v688;
  unsigned int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  int v694;
  int v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  unsigned int v711;
  unsigned int v712;
  int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  int v717;
  int v718;
  int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  int v723;
  int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  int v750;
  unsigned int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  unsigned int v759;
  int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  unsigned int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  int v772;
  unsigned int v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  unsigned int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  int v790;
  int v791;
  int v792;
  unsigned int v793;
  int v794;
  int v795;
  int v796;
  _BYTE *v797;
  int v798;
  int v799;
  int v800;
  int v801;
  unsigned int v802;
  int v803;
  int v804;
  int v805;
  unsigned int v806;
  int v807;
  int v808;
  unsigned int v809;
  unsigned int v810;
  unsigned int v811;
  int v812;
  int v813;
  unsigned int v814;
  int v815;
  unsigned int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  unsigned int v822;
  unsigned int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  unsigned int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  unsigned int v850;
  int v851;
  int v852;
  int v853;
  int v854;
  unsigned int v855;
  unsigned int v856;
  int v857;
  unsigned int v858;
  int v859;
  int v860;
  unsigned int v861;
  int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  int v867;
  int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  int v874;
  int v875;
  int v876;
  int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  unint64_t v883;
  unsigned int v884;
  int v885;
  int v886;
  int v887;
  int v888;
  int v889;
  int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  unsigned int v895;
  int v896;
  unsigned int v897;
  unsigned int v898;
  int v899;
  int v900;
  int v901;
  unsigned int v902;
  int v903;
  int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  unsigned int v909;
  unsigned int v910;
  int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  unsigned int v920;
  unsigned int v921;
  int v922;
  unsigned int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  int v929;
  int v930;
  int v931;
  int v932;
  int v933;
  int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  int v938;
  int v939;
  unsigned int v940;
  unsigned int v941;
  int v942;
  int v943;
  int v944;
  int v945;
  int v946;
  unsigned int v947;
  int v948;
  int v949;

  LODWORD(STACK[0x6C8]) = v1;
  LODWORD(STACK[0x6F4]) = v4;
  LODWORD(STACK[0x6F8]) = v3;
  STACK[0x498] = 0;
  LODWORD(STACK[0x554]) = 0;
  STACK[0x4E0] = 0;
  STACK[0x490] = 0;
  LODWORD(STACK[0x700]) = (a1 - 236406671) & 0xE174FFF;
  v6 = STACK[0x83C];
  LODWORD(STACK[0x638]) = STACK[0x83C];
  LODWORD(STACK[0x690]) = -1673081951 * v6;
  v7 = STACK[0x84C];
  v8 = -1673081951 * v6 - ((948803394 * v6 + 968328188) & 0x8536D51E);
  v9 = v8 + 1601645731;
  v10 = v8 + 1601645709;
  LODWORD(STACK[0x648]) = STACK[0x84C];
  LODWORD(STACK[0x6B4]) = -1673081951 * v7 - ((948803394 * v7 + 968328188) & 0xB9D5B0FE);
  v11 = (4 * (v8 + 1601645709)) ^ 0xA6DAA3C;
  LODWORD(STACK[0x6A8]) = v11;
  v12 = -1601645710 - v8;
  v13 = (((v8 + 1601645709) << 22) ^ 0xA3C00000) - ((2 * (((v8 + 1601645709) << 22) ^ 0xA3C00000)) & 0x6800000);
  v14 = ((v10 << 11) ^ 0xDB547800) - ((2 * ((v10 << 11) ^ 0xDB547800)) & 0xCDC50000) + 1726121743;
  LODWORD(STACK[0x6E0]) = v14;
  v15 = ((v10 << 14) ^ 0xDAA3C000) - ((2 * ((v10 << 14) ^ 0xDAA3C000)) & 0xC40C8000) + 1644582587;
  LODWORD(STACK[0x634]) = v15;
  v16 = (-1673081951 * LODWORD(STACK[0x830]) - 1663319554) ^ (32 * v10) ^ (16 * v10) ^ (v10 << 17) ^ (v9 << 30);
  v17 = (v9 << 28) - 1447636631;
  LODWORD(STACK[0x618]) = v17;
  v18 = ((v10 << 13) ^ 0x6D51E000) - ((2 * ((v10 << 13) ^ 0x6D51E000)) & 0x9BC38000) - 840837703;
  LODWORD(STACK[0x6DC]) = v18;
  v19 = v16 ^ v18 ^ ((v15 ^ v14 ^ 0x4E4D1B4) - ((2 * (v15 ^ v14 ^ 0x4E4D1B4)) & 0x9BC3AB72) - 840837703);
  v20 = (v10 >> 21) ^ 0x4CA510C;
  v21 = (v10 >> 28) ^ (v10 >> 27) ^ (v10 >> 15) ^ (v10 >> 2) ^ (v10 >> 21) ^ (v10 >> 19) ^ 0x30A741C6;
  v22 = ((v12 >> 30) + 1886944428) ^ (v10 >> 29);
  LODWORD(STACK[0x62C]) = v22;
  v23 = (v21 - ((2 * v21) & 0x60F0F954) + 1886944426) ^ v22;
  v24 = (v10 >> 18) ^ 0xB3809A76;
  v25 = (v23 - ((2 * v23) & 0x670155A0) - 1283413296) ^ v24;
  v26 = (v10 >> 14) ^ 0x7F3BC7EC;
  LODWORD(STACK[0x5FC]) = v26;
  v27 = (v25 - ((2 * v25) & 0xFE719B02) + 2134429057) ^ v26;
  v28 = (v10 >> 13) ^ 0xAEE7B1C6;
  v29 = (v27 - ((2 * v27) & 0x5DC34A3A) - 1360943843) ^ v28;
  v30 = (v10 >> 11) ^ 0x5F11D0D7;
  LODWORD(STACK[0x600]) = v30;
  v31 = (v29 - ((2 * v29) & 0xBE130774) + 1594459066) ^ v30;
  v32 = (v10 >> 10) ^ 0x594170A;
  LODWORD(STACK[0x6A0]) = v32;
  v33 = (v31 - ((2 * v31) & 0xB4963A0) + 94679504) ^ v32;
  v34 = (v10 >> 9) ^ 0x95E481CB;
  LODWORD(STACK[0x688]) = v34;
  v35 = (v33 - ((2 * v33) & 0x2B0B98FC) - 1786393474) ^ v34;
  v36 = (v10 >> 6) ^ 0x3F206249;
  LODWORD(STACK[0x698]) = v36;
  v37 = (v35 - ((2 * v35) & 0x78541FC6) + 1009389539) ^ v36;
  LODWORD(STACK[0x668]) = v10 >> 5;
  LODWORD(STACK[0x628]) = v2;
  v38 = (v10 >> 5) ^ (v10 >> 4) ^ (v37 - 297405421 + (~(2 * v37) | 0x237417DB));
  v39 = (v38 ^ 0xE8512F46) >> 27;
  v40 = (v38 ^ 0xE8512F46) >> 21;
  v41 = v40 ^ v39 ^ 0xFFFFFF9F;
  v40 ^= 0x61u;
  v42 = (v40 + v41 + 1) ^ ((v39 ^ 0xFFFFFFFE) + 1);
  v43 = ((v42 + 1302362944 - ((2 * v42) & 0x9B40F682) + 1) ^ (((v38 ^ 0xE8512F46) >> 27) | 0x4DA07B40)) + v40;
  v44 = v43 - ((2 * v43) & 0x79255AF4);
  LODWORD(STACK[0x680]) = ((v10 << 16) ^ 0x6A8F0000) - ((2 * ((v10 << 16) ^ 0x6A8F0000)) & 0x83D80000);
  LODWORD(STACK[0x644]) = v44 + 1016245626;
  v45 = v19 ^ 0x40000000 ^ (4 * (v38 ^ 0xE8512F46)) ^ (32 * (v38 ^ 0xE8512F46)) ^ ((v38 ^ 0xE8512F46 ^ (v44 + 1016245626)) << 11) ^ (32 * (v44 + 1016245626)) ^ (4 * (v44 + 1016245626)) ^ 0xA2947C18;
  v46 = v45 - 2 * (v45 & 0x788A983D ^ (v19 ^ 0x40000000) & 1) - 125134788;
  v47 = (v11 - ((2 * v11) & 0xCFA1CA48) - 405740250) ^ (8 * v10);
  v48 = ((v10 << 18) ^ 0xAA3C0000) - ((2 * ((v10 << 18) ^ 0xAA3C0000)) & 0x60780000) + 809493710;
  LODWORD(STACK[0x6D0]) = v48;
  v49 = ((v47 ^ 0xB812962 ^ v46) - ((2 * (v47 ^ 0xB812962 ^ v46)) & 0x607FC99C) + 809493710) ^ v48;
  v50 = ((v10 << 19) ^ 0x54780000) - ((2 * ((v10 << 19) ^ 0x54780000)) & 0x30C00000) + 409245674;
  LODWORD(STACK[0x624]) = v50;
  v51 = (v49 - ((2 * v49) & 0x30C92FD4) + 409245674) ^ v50;
  v52 = ((v10 << 21) ^ 0x51E00000) - ((2 * ((v10 << 21) ^ 0x51E00000)) & 0xED400000) - 156597223;
  LODWORD(STACK[0x6C0]) = v52;
  v53 = (v51 - ((2 * v51) & 0xED550832) - 156597223) ^ v52;
  v54 = ((v10 << 23) ^ 0x47800000) - ((2 * ((v10 << 23) ^ 0x47800000)) & 0xDB000000) - 309276992;
  LODWORD(STACK[0x678]) = v54;
  v55 = (v53 - ((2 * v53) & 0xDB219D80) - 309276992) ^ v54;
  LODWORD(STACK[0x614]) = v13 + 56468663;
  v56 = (v55 - ((2 * v55) & 0x6BB496E) + 56468663) ^ (v13 + 56468663);
  v57 = ((v10 << 26) ^ 0x3C000000) - ((2 * ((v10 << 26) ^ 0x3C000000)) & 0x68000000) + 876443081;
  LODWORD(STACK[0x6B8]) = v57;
  v58 = (v56 - ((2 * v56) & 0x687AEB92) + 876443081) ^ v57;
  v59 = ((v10 << 27) ^ 0x78000000) - ((2 * ((v10 << 27) ^ 0x78000000)) & 0x20000000) + 320117448;
  LODWORD(STACK[0x670]) = v59;
  v60 = (v58 - ((2 * v58) & 0x26293590) + 320117448) ^ v59;
  v61 = v38 ^ 0x6358709F ^ (((v60 - ((2 * v60) & 0xF36DA2D2) - 105459351) ^ v17)
                          - 2
                          * (((v60 - ((2 * v60) & 0xF36DA2D2) - 105459351) ^ v17) & 0x720E975 ^ (v60
                                                                                               - ((2 * v60) & 0xF36DA2D2)
                                                                                               - 105459351) & 4)
                          - 2027886223);
  LODWORD(STACK[0x640]) = v61 - ((2 * v61) & 0x79255AF4) + 1016245626;
  LODWORD(STACK[0x5F8]) = ((v10 << 20) ^ 0xA8F00000) - ((2 * ((v10 << 20) ^ 0xA8F00000)) & 0xDCC00000);
  LODWORD(STACK[0x5F4]) = ((v10 << 25) ^ 0x1E000000) - ((2 * ((v10 << 25) ^ 0x1E000000)) & 0x87FFFFFF);
  LODWORD(STACK[0x630]) = v5;
  LODWORD(STACK[0x610]) = ((v10 << 7) ^ 0x4DB54780) - ((2 * ((v10 << 7) ^ 0x4DB54780)) & 0x8536D500) - 1030002033;
  v62 = (v10 >> 1) ^ (v10 >> 20) ^ ((v10 ^ 0xC29B6A8F) >> (((v5 - 1) | -(char)v5) & 6));
  v63 = (v10 >> 22) ^ 0xFCBAFF6D;
  v64 = (((v10 >> 25) ^ 0x614DB90F ^ v62) - ((2 * ((v10 >> 25) ^ 0x614DB90F ^ v62)) & 0xF975F8CE) - 54854553) ^ v63;
  v65 = (v64 - ((2 * v64) & 0x994AE30) + 80369432) ^ v20;
  v66 = (v10 >> 19) ^ 0xF494C2CF;
  v67 = (v65 - ((2 * v65) & 0xE929B538) - 191571300) ^ v66;
  v68 = (v67 - ((2 * v67) & 0x670155A0) - 1283413296) ^ v24;
  v69 = HIWORD(v10) ^ 0xB14B4E26;
  v70 = (v68 - ((2 * v68) & 0x6297197A) - 1320448835) ^ v69;
  v71 = STACK[0x5FC];
  v72 = (v70 - ((2 * v70) & 0xFE719B02) + 2134429057) ^ LODWORD(STACK[0x5FC]);
  v73 = (v72 - ((2 * v72) & 0x5DC34A3A) - 1360943843) ^ v28;
  v74 = v73 - ((2 * v73) & 0x75A4A79C);
  v75 = (v10 >> 12) ^ 0x3ADE7A78;
  v76 = STACK[0x600];
  v77 = (((v74 + 986862542) ^ v75) - ((2 * ((v74 + 986862542) ^ v75)) & 0xBE130774) + 1594459066) ^ LODWORD(STACK[0x600]);
  v78 = (v10 >> 7) ^ 0x2B8D916C;
  v79 = v78 ^ (v10 >> 4) ^ (v77 - ((2 * v77) & 0x54114F72) + 705210297);
  LODWORD(STACK[0x60C]) = v79;
  LODWORD(STACK[0x608]) = (v79 >> 21) ^ (v62 >> 30);
  v80 = v47 ^ ((v10 ^ 0xC29B6A8F) << ((-LOBYTE(STACK[0x6A8]) & 4 ^ 7) + (-LOBYTE(STACK[0x6A8]) & 4)));
  HIDWORD(v82) = v80 ^ 0x1E;
  LODWORD(v82) = v80 ^ 0xF30BB140;
  v81 = v82 >> 5;
  HIDWORD(v82) = (8 * v10) ^ 0x525C9DD ^ v81;
  LODWORD(v82) = v81 ^ 0xBFFFFFFF;
  v83 = HIBYTE(v10) ^ (v10 >> 17) ^ (v10 >> 8) ^ 0xC2FAE5;
  v84 = (v83 - ((2 * v83) & 0xF0F954) + 1886944426) ^ LODWORD(STACK[0x62C]);
  v85 = (v10 >> 25) ^ 0x5A3C131F ^ (v84 + 1513886495 - ((2 * v84) & 0x347826FC) + 95);
  v86 = (v85 - ((2 * v85) & 0xF975F8CE) - 54854553) ^ v63;
  v87 = (v86 - ((2 * v86) & 0x994AE30) + 80369432) ^ v20;
  v88 = (v87 - ((2 * v87) & 0xE929B538) - 191571300) ^ v66;
  v89 = (v88 - ((2 * v88) & 0x6297197A) - 1320448835) ^ v69;
  v90 = (v89 - ((2 * v89) & 0xFE719B02) + 2134429057) ^ v71;
  v91 = (v90 - ((2 * v90) & 0x75A4A79C) + 986862542) ^ v75;
  v92 = (v91 - ((2 * v91) & 0xBE130774) + 1594459066) ^ v76;
  v93 = (v92 - ((2 * v92) & 0xB4963A0) + 94679504) ^ LODWORD(STACK[0x6A0]);
  v94 = (v93 - ((2 * v93) & 0x2B0B98FC) - 1786393474) ^ LODWORD(STACK[0x688]);
  v95 = (v94 - ((2 * v94) & 0x54114F72) + 705210297) ^ v78;
  v96 = LODWORD(STACK[0x698]) ^ LODWORD(STACK[0x668]) ^ (v95 - ((2 * v95) & 0x78541FC6) + 1009389539);
  v97 = LODWORD(STACK[0x6B4]) + 2043058838;
  v98 = LODWORD(STACK[0x6B4]) + 2043058813;
  v99 = -2043058814 - LODWORD(STACK[0x6B4]);
  LODWORD(STACK[0x5C0]) = v99;
  v100 = ((4 * v98) ^ 0x73AB61FC) - ((2 * ((4 * v98) ^ 0x73AB61FC)) & 0xA8C62720) - 731704431;
  LODWORD(STACK[0x6A8]) = ((v98 << 13) ^ 0x5B0FE000) - ((2 * ((v98 << 13) ^ 0x5B0FE000)) & 0xF0008000);
  LODWORD(STACK[0x6A0]) = ((v98 << 7) ^ 0x756C3F80) - ((2 * ((v98 << 7) ^ 0x756C3F80)) & 0x4697C500);
  LODWORD(STACK[0x62C]) = v99 >> 31;
  v101 = (v98 >> 30) ^ 0x3C52B5FE;
  LODWORD(STACK[0x668]) = v101;
  v102 = (((v99 >> 31) ^ (v98 >> 26) ^ 0x37) - ((2 * ((v99 >> 31) ^ (v98 >> 26) ^ 0x37)) & 0xFFFFFFFB) + 1012053501) ^ v101;
  v103 = (v98 >> 29) + 1230085856;
  LODWORD(STACK[0x698]) = v103;
  v104 = ((v102 - ((2 * v102) & 0x12A33DCC) + 1230085862) ^ v103)
       - 2
       * (((v102 - ((2 * v102) & 0x12A33DCC) + 1230085862) ^ v103) & 0x6E6B8EDF ^ (v102
                                                                                 - ((2 * v102) & 0x12A33DCC)
                                                                                 + 1230085862) & 8);
  LODWORD(STACK[0x5D4]) = ((v98 << 14) ^ 0xB61FC000) - ((2 * ((v98 << 14) ^ 0xB61FC000)) & 0x57160000);
  LODWORD(STACK[0x688]) = v98 << 10;
  LODWORD(STACK[0x5D0]) = ((v98 << 10) ^ 0xAB61FC00) - ((2 * ((v98 << 10) ^ 0xAB61FC00)) & 0xA365800);
  LOBYTE(v38) = v10;
  v105 = (-1663319554 - 1673081951 * LODWORD(STACK[0x838])) ^ (v10 << 15) ^ (v10 << 24);
  LODWORD(STACK[0x600]) = v10 << 10;
  LODWORD(STACK[0x59C]) = v10;
  LODWORD(STACK[0x6B4]) = v96 >> 21;
  v106 = v105 ^ (v10 << 10) ^ (v82 >> 27) ^ (4 * v96) ^ (32 * v96) ^ (v96 << 11) ^ (4 * (v96 >> 21)) ^ (32 * (v96 >> 21)) ^ (v96 >> 21 << 11) ^ 0x2BFE9D10;
  v107 = (v106 - ((2 * v106) & 0xCDC50E1E) + 1726121743) ^ LODWORD(STACK[0x6E0]);
  v108 = (v107 - ((2 * v107) & 0x9BC3AB72) - 840837703) ^ LODWORD(STACK[0x6DC]);
  v109 = LODWORD(STACK[0x680]) + 1105997197;
  LODWORD(STACK[0x5FC]) = v109;
  v110 = (v108 - ((2 * v108) & 0x83D85B1A) + 1105997197) ^ v109;
  v111 = (v110 - ((2 * v110) & 0x607FC99C) + 809493710) ^ LODWORD(STACK[0x6D0]);
  v112 = LODWORD(STACK[0x5F8]) + 1852413998;
  LODWORD(STACK[0x5F8]) = v112;
  v113 = (v111 - ((2 * v111) & 0xDCD3305C) + 1852413998) ^ v112;
  v114 = (v113 - ((2 * v113) & 0xED550832) - 156597223) ^ LODWORD(STACK[0x6C0]);
  v115 = (v114 - ((2 * v114) & 0x6BB496E) + 56468663) ^ LODWORD(STACK[0x614]);
  v116 = (v115 - ((2 * v115) & 0xDB219D80) - 309276992) ^ LODWORD(STACK[0x678]);
  v117 = LODWORD(STACK[0x5F4]) - 1019133715;
  LODWORD(STACK[0x5F4]) = v117;
  v118 = (v116 - ((2 * v116) & 0x868281DA) - 1019133715) ^ v117;
  v119 = (v118 - ((2 * v118) & 0x687AEB92) + 876443081) ^ LODWORD(STACK[0x6B8]);
  LODWORD(STACK[0x5F0]) = v96 ^ LODWORD(STACK[0x670]) ^ (v119 - ((2 * v119) & 0x26293590) + 320117448);
  LODWORD(STACK[0x5CC]) = ((v98 << 20) ^ 0x87F00000) - ((2 * ((v98 << 20) ^ 0x87F00000)) & 0x3B000000);
  v120 = (v98 >> 25) ^ 0xEE6B8EB9;
  LODWORD(STACK[0x5E0]) = v120;
  v121 = ((v104 - 294940969) ^ v120) - ((2 * ((v104 - 294940969) ^ v120)) & 0x5E9C47EA);
  LODWORD(STACK[0x5E8]) = v98 >> 22;
  v122 = (v98 >> 22) ^ 0x2F4E2086;
  LODWORD(STACK[0x5DC]) = v122;
  LODWORD(STACK[0x5EC]) = v98 >> 19;
  v123 = (v98 >> 19) ^ 0x713B981C;
  LODWORD(STACK[0x5AC]) = v123;
  LODWORD(STACK[0x594]) = v98 >> 18;
  v124 = v123 ^ (v98 >> 18) ^ (((v121 + 793650165) ^ v122)
                             - ((2 * ((v121 + 793650165) ^ v122)) & 0x62770702)
                             + 1899725697);
  v125 = HIWORD(v98) ^ 0xFFFF142F ^ v124;
  v124 ^= 0x373Au;
  v126 = HIWORD(v98) ^ 0x4557139B;
  LODWORD(STACK[0x5D8]) = v126;
  v127 = (v125 + v124 + 1) ^ ((HIWORD(v98) ^ 0xFFFF2315) + 1);
  LODWORD(STACK[0x5C8]) = ((v98 << 17) ^ 0xB0FE0000) - ((2 * ((v98 << 17) ^ 0xB0FE0000)) & 0x7DD40000);
  v128 = ((v127 - ((2 * v127) & 0x8AAF9EE2) + 1163382641) ^ v126) + v124;
  v129 = 1610612736 - (v97 << 26);
  LODWORD(STACK[0x614]) = v129;
  v130 = -1610742513 - ((v129 & 0xDFFFFFFF) + (v97 << 25));
  LODWORD(STACK[0x5C4]) = ((v98 << 24) ^ 0x7F000000) - ((2 * ((v98 << 24) ^ 0x7F000000)) & 0xA8000000);
  v131 = 994837193 - (v97 << 26) - ((-1073741824 - (v97 << 27)) & 0xB0000000);
  v132 = -422163453 - (v97 << 28) - ((-536870912 * v97) & 0xC0000000);
  LODWORD(STACK[0x680]) = v132;
  v133 = v128;
  v134 = (((v98 >> 3) ^ 0x1B9D5B0F) - ((2 * ((v98 >> 3) ^ 0x1B9D5B0F)) & 0x189DA574) - 330378566) ^ ((v98 ^ 0xDCEAD87F) >> 6) ^ 0xEC4ED2BA ^ v128;
  v135 = v134 - ((2 * v134) & 0xB82690A8);
  v136 = (v98 >> 15) ^ 0xDC12F181;
  v137 = (v98 >> 12) ^ 0xB5CEF21B;
  LODWORD(STACK[0x590]) = v137;
  v138 = (((v135 - 602716076) ^ v136) - ((2 * ((v135 - 602716076) ^ v136)) & 0x6B86796C) - 1245496138) ^ v137;
  v139 = (v98 >> 10) ^ 0xC756303;
  v140 = (v138 - ((2 * v138) & 0x1884B36A) + 205674933) ^ v139;
  LODWORD(STACK[0x568]) = v139;
  v141 = (v98 >> 8) ^ 0x8AFA1D3B;
  LODWORD(STACK[0x5A0]) = v141;
  v142 = (v140 - ((2 * v140) & 0x144DEFC6) - 1977157661) ^ v141;
  LODWORD(STACK[0x598]) = v98 >> 7;
  v143 = (v98 >> 7) ^ 0x76BB7A24;
  LODWORD(STACK[0x580]) = v143;
  LODWORD(STACK[0x558]) = v98 >> 4;
  v144 = v143 ^ (v98 >> 4) ^ (v142 - ((2 * v142) & 0xEE055F28) + 1996664724);
  v145 = (v144 >> 27) ^ (v133 >> 30) ^ (v144 >> 21);
  LODWORD(STACK[0x5B8]) = v145;
  v146 = (-536870912 * v97) ^ (32 * v144) ^ (4 * v144) ^ ((v144 ^ v145) << 11) ^ (32 * v145) ^ (4 * v145) ^ 0xFB804AA0;
  v147 = ((8 * v98) ^ 0xE756C3F8) - ((2 * ((8 * v98) ^ 0xE756C3F8)) & 0x7CCB7F50) - 1100628055;
  v148 = (v146 - ((2 * v146) & 0x7CCB7F56) - 1100628055) ^ v147;
  v149 = v100 ^ v147;
  LODWORD(STACK[0x56C]) = v100 ^ v147;
  v150 = v98 ^ v100 ^ (((2 * v98) ^ (v98 << 6) ^ 0x8363AF3E)
                     - ((2 * ((2 * v98) ^ (v98 << 6) ^ 0x8363AF3E)) & 0xB9D5B0FC)
                     - 588588929) ^ 0x558EB7A1 ^ (v148 - ((2 * v148) & 0x3DB4860) - 2115132368);
  v151 = LODWORD(STACK[0x6A0]) + 592175772;
  v152 = (v150 - ((2 * v150) & 0x4697C538) + 592175772) ^ v151;
  LODWORD(STACK[0x570]) = v151;
  v153 = LODWORD(STACK[0x6A8]) + 2013286998;
  LODWORD(STACK[0x678]) = v153;
  v154 = (v152 - ((2 * v152) & 0xF000A4AC) + 2013286998) ^ v153;
  v155 = LODWORD(STACK[0x5D0]) - 2061816828;
  v156 = (v154 - ((2 * v154) & 0xA365808) - 2061816828) ^ v155;
  v157 = LODWORD(STACK[0x5D4]) + 730540002;
  LODWORD(STACK[0x5D4]) = v157;
  v158 = (v156 - ((2 * v156) & 0x57164FC4) + 730540002) ^ v157;
  v159 = (((v98 << 16) ^ 0xD87F0000) - 1783585825 + (~(2 * ((v98 << 16) ^ 0xD87F0000)) | 0xD49FFFFF)) | 1;
  LODWORD(STACK[0x6A8]) = v159;
  v160 = (v158 - ((2 * v158) & 0x2B6147BE) - 1783585825) ^ v159;
  v161 = LODWORD(STACK[0x5C8]) - 1091881434;
  v162 = (v160 - ((2 * v160) & 0x7DD66C4C) - 1091881434) ^ v161;
  v163 = LODWORD(STACK[0x5CC]) - 1652457144;
  LODWORD(STACK[0x6A0]) = v163;
  v164 = (v162 - ((2 * v162) & 0x3B030290) - 1652457144) ^ v163;
  v165 = ((v98 << 22) ^ 0x1FC00000) - ((2 * ((v98 << 22) ^ 0x1FC00000)) & 0xF9800000) + 2093432609;
  v166 = (v164 - ((2 * v164) & 0xF98E7E42) + 2093432609) ^ v165;
  LODWORD(STACK[0x578]) = v165;
  v167 = LODWORD(STACK[0x5C4]) - 731867053;
  LODWORD(STACK[0x5C8]) = v167;
  v168 = (v166 - ((2 * v166) & 0xA8C130A6) - 731867053) ^ v167;
  LODWORD(STACK[0x670]) = v130;
  v169 = (v168 - ((2 * v168) & 0xDFFC0A1E) + 1878918415) ^ v130;
  v170 = (v169 - ((2 * v169) & 0xB6980592) - 615775543) ^ v131;
  v171 = (v170 - ((2 * v170) & 0xCDAC9806) + 1725320195) ^ v132;
  v172 = v144 ^ 0x829B2BD2 ^ (v171 - ((2 * v171) & 0x1EAB0CAA) - 1890220459);
  LODWORD(STACK[0x5B4]) = v172 - ((2 * v172) & 0xFD7F4A88) - 20994748;
  LODWORD(STACK[0x5CC]) = ((v98 << 19) ^ 0xC3F80000) - ((2 * ((v98 << 19) ^ 0xC3F80000)) & 0xBD600000);
  LODWORD(STACK[0x58C]) = v98 << 18;
  v173 = (((-268435456 * v97) & 0x70000000) + (v97 << 27)) ^ 0xFC4F3243;
  v174 = (v98 ^ 0xDCEAD87F) << ((v38 ^ (LODWORD(STACK[0x690]) + 14)) & 0xE);
  LODWORD(STACK[0x5C4]) = ((v98 << 23) ^ 0x3F800000) - ((2 * ((v98 << 23) ^ 0x3F800000)) & 0xF3FFFFFF);
  v175 = STACK[0x594];
  v176 = (v98 >> 28) ^ (LODWORD(STACK[0x5C0]) >> 30) ^ (v98 >> 2) ^ (v98 >> 27) ^ LODWORD(STACK[0x594]) ^ 0x373A8133;
  v177 = (v176 - ((2 * v176) & 0x12A33DCC) + 1230085862) ^ LODWORD(STACK[0x698]);
  LODWORD(STACK[0x690]) = v98 >> 21;
  v178 = (v98 >> 21) ^ 0x1C309F13;
  v179 = (v177 - ((2 * v177) & 0x386133E8) + 472947188) ^ v178;
  v180 = STACK[0x5AC];
  v181 = (v179 - ((2 * v179) & 0xE2770702) + 1899725697) ^ LODWORD(STACK[0x5AC]);
  v182 = (v181 - ((2 * v181) & 0xB82690A8) - 602716076) ^ v136;
  v183 = (v98 >> 14) ^ 0x415809C;
  v184 = (v182 - ((2 * v182) & 0x82DE66E) + 68612919) ^ v183;
  v185 = (v98 >> 13) ^ 0x8A7006E1;
  v186 = (v184 - ((2 * v184) & 0x14EDC36E) - 1971920457) ^ v185;
  v187 = (v98 >> 11) ^ 0x35D7376B;
  v188 = (v186 - ((2 * v186) & 0x6B995460) + 902605360) ^ v187;
  v189 = (v188 - ((2 * v188) & 0x1884B36A) + 205674933) ^ v139;
  v190 = (v98 >> 9) ^ 0xD5EB8977;
  LODWORD(STACK[0x564]) = v190;
  v191 = (v189 - 712639461 - ((2 * v189) & 0xAB0BF836)) ^ v190;
  v192 = v191 - ((2 * v191) & 0x67BA05A0);
  LODWORD(STACK[0x560]) = v98 >> 6;
  v193 = (v98 >> 6) ^ 0xB0AEA9B1;
  v194 = (v98 >> 5) ^ 0x31280872;
  LODWORD(STACK[0x55C]) = v194;
  v195 = v194 ^ (v98 >> 4) ^ (((v192 - 1277361456) ^ v193)
                            - ((2 * ((v192 - 1277361456) ^ v193)) & 0x6F9EBD62)
                            + 936337073);
  v196 = v151 ^ v98 ^ v155;
  v197 = (v195 >> 27) ^ (v195 >> 21);
  v198 = (-1073741824 * v97) ^ (LODWORD(STACK[0x700]) - 1673081951 * LODWORD(STACK[0x840]) - 1663323611) ^ (32 * v98) ^ (16 * v98) ^ v174 ^ (32 * v195) ^ (4 * v195) ^ (v195 << 11) ^ (4 * v197);
  v199 = (32 * v197) ^ (v197 << 11) ^ 0xA876C2B0 ^ v198;
  v200 = (v199 - 2 * (v199 & 0x6A06AC3D ^ v198 & 5) + 1778822200) ^ v149;
  v201 = ((v98 << 11) ^ 0x56C3F800) - ((2 * ((v98 << 11) ^ 0x56C3F800)) & 0x9E94000) - 2064341859;
  v202 = (v200 - ((2 * v200) & 0x9E9493A) - 2064341859) ^ v201;
  v203 = STACK[0x678];
  v204 = (v202 - ((2 * v202) & 0xF000A4AC) + 2013286998) ^ LODWORD(STACK[0x678]);
  v205 = (v204 - ((2 * v204) & 0x7DD66C4C) - 1091881434) ^ v161;
  v206 = ((v98 << 18) ^ 0x61FC0000) - ((2 * ((v98 << 18) ^ 0x61FC0000)) & 0x39600000) + 481542723;
  LODWORD(STACK[0x5D0]) = v206;
  v207 = (v205 - ((2 * v205) & 0x39678486) + 481542723) ^ v206;
  v208 = LODWORD(STACK[0x5CC]) + 1589067805;
  LODWORD(STACK[0x5CC]) = v208;
  v209 = (v207 - ((2 * v207) & 0xBD6E803A) + 1589067805) ^ v208;
  v210 = ((v98 << 21) ^ 0xFE00000) - ((2 * ((v98 << 21) ^ 0xFE00000)) & 0x7BC00000) - 1108214029;
  v211 = (v209 - ((2 * v209) & 0x7BE3FDE6) - 1108214029) ^ v210;
  LODWORD(STACK[0x5B0]) = v210;
  v212 = (v211 - ((2 * v211) & 0xF98E7E42) + 2093432609) ^ v165;
  v213 = LODWORD(STACK[0x5C4]) - 108764229;
  v214 = (v212 - ((2 * v212) & 0xF308C776) - 108764229) ^ v213;
  v215 = (v214 - ((2 * v214) & 0xB6980592) - 615775543) ^ v131;
  v216 = ((v215 - ((2 * v215) & 0x789E6486) + 1011823171) ^ v173)
       - 2
       * (((v215 - ((2 * v215) & 0x789E6486) + 1011823171) ^ v173) & 0x66D64C1B ^ (v215
                                                                                 - ((2 * v215) & 0x789E6486)
                                                                                 + 1011823171) & 0x18)
       + 1725320195;
  v217 = v195 ^ 0x144C236C ^ ((v216 ^ LODWORD(STACK[0x680]))
                            - 2 * ((v216 ^ LODWORD(STACK[0x680])) & 0x19828EFB ^ v216 & 0x10)
                            + 427986667);
  HIDWORD(v82) = v196 ^ 0x16E7;
  LODWORD(v82) = v196 ^ 0x7ABA0000;
  v218 = (v82 >> 15) ^ ((LODWORD(STACK[0x680]) ^ 0x66D64C03) & 0xFFFE0000 | (v201 >> 15));
  HIDWORD(v82) = v218 ^ 0x97CB;
  LODWORD(v82) = v218 ^ 0x14360000;
  LODWORD(STACK[0x5C4]) = v82 >> 17;
  LODWORD(STACK[0x5A4]) = v197 ^ 0x649F8E1C ^ (v217 + 1688178204 - ((2 * v217) & 0xC93F1CE6) + 87);
  v219 = STACK[0x5E0];
  v220 = (((v98 >> 20) ^ (v98 >> 1) ^ 0x6E7561F1)
        - 2 * (((v98 >> 20) ^ (v98 >> 1) ^ 0x6E7561F1) & 0x6E6B8EDF ^ ((v98 >> 20) ^ (v98 >> 1)) & 8)
        - 294940969) ^ LODWORD(STACK[0x5E0]);
  v221 = (v220 - ((2 * v220) & 0x5E9C47EA) + 793650165) ^ LODWORD(STACK[0x5DC]);
  v222 = (v221 - ((2 * v221) & 0x386133E8) + 472947188) ^ v178;
  v223 = (v222 - ((2 * v222) & 0xE2770702) + 1899725697) ^ v180;
  v224 = v175 ^ 0x8079471C ^ (v223 - ((2 * v223) & 0xF2E04C) - 2139525082);
  v225 = STACK[0x5D8];
  v226 = (v224 - ((2 * v224) & 0x8AAF9EE2) + 1163382641) ^ LODWORD(STACK[0x5D8]);
  v227 = (v226 - ((2 * v226) & 0x82DE66E) + 68612919) ^ v183;
  v228 = (v227 - ((2 * v227) & 0x14EDC36E) - 1971920457) ^ v185;
  v229 = STACK[0x590];
  v230 = (v228 - 1245496138 + (~(2 * v228) | 0x94798693) + 1) ^ LODWORD(STACK[0x590]);
  v231 = (v230 - ((2 * v230) & 0x6B995460) + 902605360) ^ v187;
  v232 = (v231 - ((2 * v231) & 0xEE055F28) + 1996664724) ^ LODWORD(STACK[0x580]);
  LODWORD(STACK[0x5C0]) = v193 ^ LODWORD(STACK[0x558]) ^ (v232 - ((2 * v232) & 0x67BA05A0) - 1277361456);
  v233 = ((LODWORD(STACK[0x5E8]) ^ HIBYTE(v98) ^ 0x3AF)
        - ((2 * (LODWORD(STACK[0x5E8]) ^ HIBYTE(v98) ^ 0x3AF)) & 0x5CC)
        + 1230085862) ^ LODWORD(STACK[0x698]);
  v234 = (v233 - ((2 * v233) & 0x78A56BFA) + 1012053501) ^ LODWORD(STACK[0x668]);
  v235 = v219 ^ LODWORD(STACK[0x690]) ^ (v234 - 294940969 + (~(2 * v234) | 0xA328E251) + 1);
  v236 = LODWORD(STACK[0x5EC]) ^ 0xFFFFE285 ^ v235;
  v235 ^= 0x6E7u;
  v237 = (v236 + v235 + 1) ^ ((LODWORD(STACK[0x5EC]) ^ 0xFFFFE462) + 1);
  v238 = (((v237 - ((2 * v237) & 0xE2770702) + 1899725697) ^ v180) + v235) ^ (v98 >> 17) ^ 0x6E75;
  v239 = (v238 - ((2 * v238) & 0x8AAF9EE2) + 1163382641) ^ v225;
  v240 = (v239 - ((2 * v239) & 0x82DE66E) + 68612919) ^ v183;
  v241 = (v240 - ((2 * v240) & 0x6B86796C) - 1245496138) ^ v229;
  v242 = (v241 - ((2 * v241) & 0x6B995460) + 902605360) ^ v187;
  v243 = (v242 - ((2 * v242) & 0x1884B36A) + 205674933) ^ LODWORD(STACK[0x568]);
  v244 = (v243 - ((2 * v243) & 0xAB0BF836) - 712639461) ^ LODWORD(STACK[0x564]);
  v245 = LODWORD(STACK[0x598]) ^ LODWORD(STACK[0x5A0]) ^ 0x1B9D5B0 ^ (v244 - ((2 * v244) & 0x144DEFC6) - 1977157661);
  v246 = v245 + (LODWORD(STACK[0x560]) ^ 0x373AB61) - 2 * (v245 & (LODWORD(STACK[0x560]) ^ 0x373AB61));
  v247 = v246 - ((2 * v246) & 0xC2450880) + 1629652032;
  v248 = STACK[0x5F0];
  v249 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x6B4]);
  v250 = v247 ^ LODWORD(STACK[0x55C]);
  LODWORD(STACK[0x5EC]) = v249 ^ 0x644A2206;
  v251 = (((2 * v249) ^ (v249 << 6) ^ 0x2552B66)
        - ((2 * ((2 * v249) ^ (v249 << 6) ^ 0x2552B66)) & 0xBB1A9BA8)
        + 1569541589) ^ v249 ^ 0x644A2206;
  v252 = ((4 * v249) ^ 0xE71DBF4C) - ((2 * ((4 * v249) ^ 0xE71DBF4C)) & 0x8A775A40) + 1161538849;
  LODWORD(STACK[0x594]) = v252;
  v253 = (v251 - ((2 * v251) & 0x8A775A42) + 1161538849) ^ v252;
  v254 = ((8 * v249) ^ 0xCE3B7E98) - ((2 * ((8 * v249) ^ 0xCE3B7E98)) & 0x6498BBB0) - 1303618081;
  LODWORD(STACK[0x590]) = v254;
  v255 = (v253 - ((2 * v253) & 0x6498BBBE) - 1303618081) ^ v254;
  v256 = -1673081951 * LODWORD(STACK[0x848]) - 1663319554;
  LODWORD(STACK[0x5A8]) = v98;
  v257 = v256 ^ (v98 << 15) ^ (v98 << 8) ^ LODWORD(STACK[0x688]);
  v258 = (v247 >> 30) ^ (v247 >> 27) ^ (v250 >> 21);
  LODWORD(STACK[0x598]) = v258;
  v259 = v257 ^ (v250 << 11) ^ (4 * v250) ^ (32 * v250) ^ (v258 << 11) ^ (4 * v258) ^ (LODWORD(STACK[0x58C]) | (32 * v258)) ^ 0xA4B4334C;
  v260 = (v259 - 2 * (v259 & 0x6A06AC3A ^ v256 & 2) + 1778822200) ^ LODWORD(STACK[0x56C]);
  v261 = (v260 - ((2 * v260) & 0x4697C538) + 592175772) ^ LODWORD(STACK[0x570]);
  v262 = (v261 - ((2 * v261) & 0x9E9493A) - 2064341859) ^ v201;
  v263 = (v262 - ((2 * v262) & 0xF000A4AC) + 2013286998) ^ v203;
  v264 = (v263 - ((2 * v263) & 0x2B6147BE) - 1783585825) ^ LODWORD(STACK[0x6A8]);
  v265 = (v264 - ((2 * v264) & 0x3B030290) - 1652457144) ^ LODWORD(STACK[0x6A0]);
  v266 = (v265 - ((2 * v265) & 0x7BE3FDE6) - 1108214029) ^ v210;
  v267 = (v266 - ((2 * v266) & 0xF98E7E42) + 2093432609) ^ LODWORD(STACK[0x578]);
  v268 = (v267 - ((2 * v267) & 0xF308C776) - 108764229) ^ v213;
  v269 = (v268 - ((2 * v268) & 0xDFFC0A1E) + 1878918415) ^ LODWORD(STACK[0x670]);
  v270 = (v269 - ((2 * v269) & 0xA8C130A6) - 731867053) ^ LODWORD(STACK[0x5C8]);
  LODWORD(STACK[0x580]) = ((v270 - ((2 * v270) & 0xB6980592) - 615775543) ^ v131)
                        - 2
                        * (((v270 - ((2 * v270) & 0xB6980592) - 615775543) ^ v131) & 0x3C4F3253 ^ (v270
                                                                                                 - ((2 * v270) & 0xB6980592)
                                                                                                 - 615775543) & 0x10)
                        + 1011823171;
  LODWORD(STACK[0x578]) = v250 ^ v173;
  v271 = ((v249 << 7) ^ 0xE3B7E980) - ((2 * ((v249 << 7) ^ 0xE3B7E980)) & 0xFB68900) + 131810538;
  LODWORD(STACK[0x690]) = v271;
  v272 = (v255 - ((2 * v255) & 0xFB689D4) + 131810538) ^ v271;
  v273 = ((v249 << 13) ^ 0xEDFA6000) - ((2 * ((v249 << 13) ^ 0xEDFA6000)) & 0x80C8000) + 67524389;
  LODWORD(STACK[0x698]) = v273;
  v274 = ((v249 << 10) ^ 0x1DBF4C00) - ((2 * ((v249 << 10) ^ 0x1DBF4C00)) & 0xA8C55000) + 1415752520;
  LODWORD(STACK[0x668]) = v274;
  v275 = ((v249 << 14) ^ 0xDBF4C000) - ((2 * ((v249 << 14) ^ 0xDBF4C000)) & 0x514C8000) - 1465487082;
  LODWORD(STACK[0x5E8]) = v275;
  v276 = v272 - ((2 * v272) & 0xA8C55690) + 1415752520;
  v277 = ((v273 ^ v274 ^ v276) & 0xF144160B ^ v275 & 0xF1440000 | (v273 ^ v274 ^ v276) & 0xEBBE9F4 ^ v275 & 0xEBBC000) ^ (v249 << 17) ^ 0x73061725;
  v278 = ((v249 << 16) ^ 0x6FD30000) - ((2 * ((v249 << 16) ^ 0x6FD30000)) & 0xAFD00000) + 1474860486;
  LODWORD(STACK[0x688]) = v278;
  v279 = (v277 - 2 * (v277 & 0x57E895D6 ^ v276 & 0x10) + 1474860486) ^ v278;
  v280 = ((v249 << 20) ^ 0xFD300000) - 1739861596 + (~(2 * ((v249 << 20) ^ 0xFD300000)) | 0xCF7FFFFF) + 1;
  LODWORD(STACK[0x5E0]) = v280;
  v281 = ((v279 - ((2 * v279) & 0x3097A348) - 1739861596) ^ v280)
       - 2 * (((v279 - ((2 * v279) & 0x3097A348) - 1739861596) ^ v280) & 0x50AE71B ^ v277 & 1);
  v282 = ((v249 << 22) ^ 0xF4C00000) - ((2 * ((v249 << 22) ^ 0xF4C00000)) & 0xA000000) + 84600602;
  LODWORD(STACK[0x570]) = v282;
  v283 = ((v249 << 24) ^ 0xD3000000) - ((2 * ((v249 << 24) ^ 0xD3000000)) & 0xB8000000) - 587791958;
  LODWORD(STACK[0x56C]) = v283;
  v284 = (((v281 + 84600602) ^ v282) - ((2 * ((v281 + 84600602) ^ v282)) & 0xB9EE0354) - 587791958) ^ v283;
  v285 = v284 - ((2 * v284) & 0x93AC1024);
  v286 = v249 ^ 0x39C76FD3;
  v287 = v248;
  v288 = v248 >> 22;
  LODWORD(STACK[0x558]) = (v248 >> 30) ^ 0xB56CD14A;
  v289 = (v248 >> 18) ^ (v248 >> 26) ^ (v248 >> 15) ^ (v248 >> 22) ^ ((v248 >> 31) | 0xB56CD14A) ^ (v249 >> 3) ^ (v248 >> 30) ^ 0xB25441A6;
  v290 = (v289 - ((2 * v289) & 0x737BC47E) - 104996289) ^ ((v286 >> 7)
                                                         - ((v286 >> 6) & 0x37BC47E)
                                                         - 104996289);
  v291 = (v248 >> 29) ^ 0xD9A19B4E;
  v292 = (v290 - ((2 * v290) & 0xB343369E) - 643720369) ^ v291;
  v293 = (v248 >> 25) ^ 0x44234FF2;
  v294 = (v292 - ((2 * v292) & 0x88469FDC) + 1143164910) ^ v293;
  v295 = (v248 >> 19) ^ 0x86D38DE2;
  v296 = (v294 - ((2 * v294) & 0xDA715B4) - 2032956710) ^ v295;
  v297 = HIWORD(v248) ^ 0x6FA3F01D;
  v298 = (v296 - ((2 * v296) & 0xDF4793B4) + 1873005018) ^ v297;
  v299 = (v248 >> 12) ^ 0x30DCCAC4;
  v300 = (v298 - ((2 * v298) & 0x61BEAD64) + 819943090) ^ v299;
  v301 = (v249 >> 10) ^ 0x94611B48;
  LODWORD(STACK[0x550]) = v301;
  v302 = (v300 - ((2 * v300) & 0x28DED526) - 1804637549) ^ v301;
  v303 = (v249 >> 8) ^ 0x9427F895;
  v304 = (v302 - ((2 * v302) & 0x283C7FF4) - 1809956870) ^ v303;
  v305 = ((v249 << 25) ^ 0xA6000000) - ((v249 << 26) & 0x90000000) + 1238763538;
  LODWORD(STACK[0x5D8]) = v305;
  v306 = ((v249 << 26) ^ 0x4C000000) - ((2 * ((v249 << 26) ^ 0x4C000000)) & 0x28000000) + 340804533;
  LODWORD(STACK[0x5DC]) = v306;
  v307 = v306 ^ v305;
  LODWORD(STACK[0x568]) = v307;
  v308 = v307 ^ (v285 + 1238763538);
  v309 = (v304 - ((2 * v304) & 0xF29C48A6) - 112319405) ^ (v249 >> 4);
  v310 = (v249 >> 6) ^ 0xF9A939EC ^ v309;
  v311 = (v309 >> 27) ^ 0x1C;
  v312 = v311 ^ (v310 >> 21);
  v313 = (v249 << 29) ^ (4 * v310) ^ (32 * v310) ^ (v310 << 11) ^ (32 * v312) ^ 0xFE48EFB4 ^ ((unint64_t)(v312 ^ 0x1Fu) << (((v308 & 0xFE ^ 0x4A) + (v308 & 0xFE ^ 0xB4)) & 0x46 ^ 0x44u));
  v314 = v308 ^ 0x81C50C64 ^ (v313 - ((2 * v313) & 0x2B2A9FA2) - 1785376815);
  v315 = ((v249 << 28) ^ 0x30000000) - ((2 * ((v249 << 28) ^ 0x30000000)) & 0xBFFFFFFF) + 1346136811;
  LODWORD(STACK[0x5C8]) = v315;
  v316 = (v314 + 1346136811 + (~(2 * v314) | 0x5F872A29) + 1) ^ v315;
  v317 = v312 ^ v310 ^ (v316 - ((2 * v316) & 0x412CC1DA) - 1600757523);
  LODWORD(STACK[0x564]) = ((v249 << 11) ^ 0x3B7E9800) - ((2 * ((v249 << 11) ^ 0x3B7E9800)) & 0xE58AC000);
  v318 = ((v312 << 11) ^ 0xF800) + 819776196 - ((2 * ((v312 << 11) ^ 0xF800)) & 0x39A000) + 3167;
  v319 = (v317 & 0x2704259E ^ v318 & 0x42000 | v317 & 0xD8FBDA61 ^ v318 & 0x3BD800) ^ 0xA316C60F;
  LODWORD(STACK[0x58C]) = v319 - ((2 * v319) & 0x4E46D492);
  LODWORD(STACK[0x560]) = ((v249 << 18) ^ 0xBF4C0000) - ((2 * ((v249 << 18) ^ 0xBF4C0000)) & 0x72080000);
  LODWORD(STACK[0x55C]) = ((v249 << 21) ^ 0xFA600000) - ((2 * ((v249 << 21) ^ 0xFA600000)) & 0x94000000);
  v320 = v286 >> (((v287 >> 11) & 0x4B ^ 0x49) + ((v287 >> 11) & 0x4B ^ 2) - 69);
  v321 = v320 - ((2 * v320) & 0x7799D0C4) + 1003284578;
  v322 = (v287 >> 13) ^ (v287 >> 20) ^ (v287 >> 21) ^ (v249 >> 1) ^ 0x1CE27B80 ^ (v286 >> (v311 & 0x12 ^ 2 | v311 & 0x12 ^ 0x10));
  v323 = v288 ^ 0xED72ED01;
  v324 = (v322 - 311235327 - ((2 * v322) & 0xDAE5DBCC) + 229) ^ v288 ^ 0xED72ED01;
  v325 = (v324 - ((2 * v324) & 0x88469FDC) + 1143164910) ^ v293;
  v326 = (v325 - ((2 * v325) & 0xDA715B4) - 2032956710) ^ v295;
  v327 = (v326 - ((2 * v326) & 0xDF4793B4) + 1873005018) ^ v297;
  v328 = v327 - ((2 * v327) & 0x357AEDDC);
  v329 = (v287 >> 14) ^ 0x1ABD91F3;
  v330 = (((v328 + 448624366) ^ v329) - ((2 * ((v328 + 448624366) ^ v329)) & 0x61BEAD64) + 819943090) ^ v299;
  v331 = (v287 >> 11) ^ 0xE0CDEA25 ^ (v330 - ((2 * v330) & 0xC195A590) - 523578680);
  v332 = v331 - ((2 * v331) & 0xB5C77252);
  v333 = (v249 >> 7) ^ 0x5A9037F6;
  v334 = v321 ^ v333 ^ (v332 + 1524873513);
  v335 = v334 ^ (v249 >> 4);
  LODWORD(STACK[0x5AC]) = v335;
  LODWORD(STACK[0x5A0]) = (v335 >> 27) ^ (v334 >> 30);
  v336 = (((v249 << 8) ^ 0xC76FD300) - ((2 * ((v249 << 8) ^ 0xC76FD300)) & 0x6498BA00) - 1303618081) ^ LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x594]) ^ LODWORD(STACK[0x690]);
  v337 = v321 & 0x63;
  v338 = STACK[0x668];
  v339 = -1263157954 - (STACK[0x668] & 0x800000 | 0x5A5ADE9F);
  if ((STACK[0x668] & 0x800000 & ~v336) == 0)
    v339 = STACK[0x668] & 0x800000 | 0x5A5ADE9F;
  v340 = (v336 ^ 0x42E0E9CB) - 1515904671 + v339;
  v341 = v337 ^ 0x62 | v337 ^ 1;
  v342 = (v286 >> 11) - ((v286 >> 10) & 0x15B008) - 1924474876;
  v343 = v286 << (v341 ^ 0x77u);
  v344 = (_DWORD)v286 << ((LODWORD(STACK[0x628]) + 3) & 0x17) << ((LODWORD(STACK[0x628]) + 3) & 0x17 ^ 0x17);
  v345 = (v249 >> 9) ^ (v249 >> 5) ^ v342 ^ 0x1D2D8C9 ^ (((v287 >> 21) ^ (v287 >> 17) ^ 0x1D2D)
                                                       - ((2 * ((v287 >> 21) ^ (v287 >> 17) ^ 0x1D2D)) & 0xB008)
                                                       - 1924474876);
  v346 = (v345 - ((2 * v345) & 0x6AD9A294) - 1251159734) ^ LODWORD(STACK[0x558]);
  v347 = (v346 - ((2 * v346) & 0x3343369E) - 643720369) ^ v291;
  v348 = (v347 - ((2 * v347) & 0x88469FDC) + 1143164910) ^ v293;
  v349 = (v348 - 311235327 + (~(2 * v348) | 0x251A2433) + 230) ^ v323;
  LODWORD(STACK[0x628]) = v287 ^ ~LODWORD(STACK[0x6B4]);
  v350 = HIBYTE(v287);
  v351 = HIBYTE(v287) ^ 0xF385454D ^ (v349 - 209369779 - ((2 * v349) & 0xE70A8AE8) + 39);
  v352 = (v351 - ((2 * v351) & 0xDA715B4) - 2032956710) ^ v295;
  v353 = (v352 - ((2 * v352) & 0xDF4793B4) + 1873005018) ^ v297;
  v354 = (v353 - ((2 * v353) & 0x357AEDDC) + 448624366) ^ v329;
  v355 = (v354 - ((2 * v354) & 0x61BEAD64) + 819943090) ^ v299;
  v356 = (v355 - ((2 * v355) & 0x28DED526) - 1804637549) ^ LODWORD(STACK[0x550]);
  v357 = (v356 - ((2 * v356) & 0x283C7FF4) - 1809956870) ^ v303;
  v358 = v333 ^ (v249 >> 6) ^ (v357 - ((2 * v357) & 0xB5C77252) + 1524873513);
  v359 = LODWORD(STACK[0x608]) ^ (LODWORD(STACK[0x60C]) >> 27);
  v360 = (-1673081951 * LODWORD(STACK[0x834]) - 1663319554) ^ (LODWORD(STACK[0x638]) << 31) ^ LODWORD(STACK[0x59C]) ^ (LODWORD(STACK[0x59C]) << 12) ^ LODWORD(STACK[0x600]) ^ LODWORD(STACK[0x610]) ^ (4 * LODWORD(STACK[0x60C])) ^ (32 * LODWORD(STACK[0x60C])) ^ (LODWORD(STACK[0x60C]) << 11) ^ (4 * v359) ^ (32 * v359) ^ (v359 << 11) ^ (4 * v358) ^ 0x20B8F0F8;
  v361 = (v360 - ((2 * v360) & 0xCDC50E1E) + 1726121743) ^ LODWORD(STACK[0x6E0]);
  v362 = (v361 - ((2 * v361) & 0xC40CAD76) + 1644582587) ^ LODWORD(STACK[0x634]);
  v363 = (v362 - 840837703 + (~(2 * v362) | 0x643C548D) + 1) ^ LODWORD(STACK[0x6DC]);
  v364 = (v363 - ((2 * v363) & 0x83D85B1A) + 1105997197) ^ LODWORD(STACK[0x5FC]);
  v365 = (v364 - ((2 * v364) & 0x607FC99C) + 809493710) ^ LODWORD(STACK[0x6D0]);
  v366 = (v365 - ((2 * v365) & 0x30C92FD4) + 409245674) ^ LODWORD(STACK[0x624]);
  v367 = (v366 - ((2 * v366) & 0xDCD3305C) + 1852413998) ^ LODWORD(STACK[0x5F8]);
  v368 = (v367 - ((2 * v367) & 0xED550832) - 156597223) ^ LODWORD(STACK[0x6C0]);
  v369 = (v368 - ((2 * v368) & 0x868281DA) - 1019133715) ^ LODWORD(STACK[0x5F4]);
  v370 = (v369 - ((2 * v369) & 0x687AEB92) + 876443081) ^ LODWORD(STACK[0x6B8]);
  v371 = (v370 - 105459351 + (~(2 * v370) | 0xC925D2D) + 1) ^ LODWORD(STACK[0x618]);
  v372 = LODWORD(STACK[0x60C]) ^ 0xF4BA12D4 ^ (v371 - ((2 * v371) & 0xF12748F8) - 124541828);
  v373 = (v372 + 372733480 - ((2 * v372) & 0x2C6EEC92) + 33) ^ v359;
  v374 = STACK[0x580];
  v375 = STACK[0x578];
  v376 = LODWORD(STACK[0x578]) ^ LODWORD(STACK[0x580]);
  v377 = v376 ^ LODWORD(STACK[0x598]);
  v378 = v377 ^ 0x38E4942F;
  v379 = (4 * (v377 ^ 0x38E4942F)) ^ (8 * (v377 ^ 0x38E4942F)) ^ 0x9B666A4E;
  LODWORD(STACK[0x600]) = v379;
  v380 = (v358 >> 21) ^ 0x11;
  LODWORD(STACK[0x6C0]) = v380;
  v381 = (v249 << 27) ^ (v249 << 15) ^ v344 ^ v338 & 0xFF7FFC00 ^ v340 ^ v343 ^ v358 ^ (32 * v358) ^ (v358 << 11) ^ (4 * v380) ^ (32 * v380) ^ (v380 << 11) ^ 0xDB4D6D0B ^ ((v373 ^ 0x16377628) - 2 * ((v373 ^ 0x16377628) & 0x42FA5CF ^ v373 & 3) - 2077252148);
  v382 = LODWORD(STACK[0x564]) + 1925538602;
  LODWORD(STACK[0x598]) = v382;
  v383 = (v381 - ((2 * v381) & 0xE58AC654) + 1925538602) ^ v382;
  v384 = (v383 - ((2 * v383) & 0x80CAE4A) + 67524389) ^ LODWORD(STACK[0x698]);
  v385 = (v384 - ((2 * v384) & 0xAFD12B8C) + 1474860486) ^ LODWORD(STACK[0x688]);
  v386 = LODWORD(STACK[0x560]) - 1190842225;
  LODWORD(STACK[0x594]) = v386;
  v387 = (v385 - ((2 * v385) & 0x720A611E) - 1190842225) ^ v386;
  v388 = LODWORD(STACK[0x55C]) - 905567717;
  LODWORD(STACK[0x59C]) = v388;
  v389 = (v387 - ((2 * v387) & 0x940C4436) - 905567717) ^ v388;
  v390 = (v389 - ((2 * v389) & 0xA15CE34) + 84600602) ^ LODWORD(STACK[0x570]);
  v391 = (v390 - ((2 * v390) & 0xB9EE0354) - 587791958) ^ LODWORD(STACK[0x56C]);
  v392 = LODWORD(STACK[0x568]) ^ (v391 - ((2 * v391) & 0x93AC1024) + 1238763538);
  v393 = (v377 ^ 0x38E4942F) << 13;
  LODWORD(STACK[0x6E0]) = v393;
  v394 = (v393 ^ 0x298C8000) - ((2 * (v393 ^ 0x298C8000)) & 0x97F10000);
  v395 = ((v375 ^ ~v374) >> 28) ^ (v376 >> 27);
  v396 = (v376 >> 30) ^ (v376 >> 29);
  LODWORD(STACK[0x578]) = v396;
  v397 = (v376 >> 21) ^ 0x8F8038B9;
  LODWORD(STACK[0x560]) = v397;
  v398 = v396 ^ v397 ^ (v395 - ((2 * v395) & 0x1C) - 1887421938);
  LODWORD(STACK[0x580]) = v398;
  LODWORD(STACK[0x6B8]) = (((v377 ^ 0x38E4942F) << 23) ^ 0x32000000)
                        - ((2 * (((v377 ^ 0x38E4942F) << 23) ^ 0x32000000)) & 0xE2000000);
  v399 = (v377 ^ 0x38E4942F) << 27;
  v400 = (((v377 ^ 0x38E4942F) << 26) ^ 0x90000000) - (v399 & 0xD0000000);
  v401 = (v377 ^ 0x56EDD84B) >> ((v350 & 0xB ^ 2) + (v350 & 0xB ^ 9));
  v402 = v401 - ((2 * v401) & 0x80234D4A);
  v403 = (v377 ^ 0x38E4942F) << 28;
  LODWORD(STACK[0x608]) = (((v377 ^ 0x38E4942F) << 10) ^ 0x25319000)
                        - ((2 * (((v377 ^ 0x38E4942F) << 10) ^ 0x25319000)) & 0x9167800);
  v404 = (v376 >> 15) ^ ((v377 ^ 0x38E4942F) >> 2) ^ 0x1B82FEC2;
  v402 += 1074898597;
  v405 = (v404 - ((2 * v404) & 0x234D4A) + 1074898597) ^ v402;
  v406 = (v376 >> 19) ^ 0xE3A7CE93;
  v407 = (v405 - ((2 * v405) & 0xC74F889C) - 475544498) ^ v406;
  LODWORD(STACK[0x550]) = v406;
  v408 = v398 ^ 0x144708F3 ^ (v407 - ((2 * v407) & 0x288E11E0) + 340199664);
  v409 = (v376 >> 18) ^ 0x61279CB4;
  v410 = (v408 - ((2 * v408) & 0xC24F121E) + 1629980943) ^ v409;
  v411 = (v376 >> 14) ^ 0x85CB1C91;
  LODWORD(STACK[0x558]) = v411;
  v412 = (v410 - ((2 * v410) & 0xB948E4C) - 2050341082) ^ v411;
  v413 = (v376 >> 13) ^ 0x3EA0D13E;
  v414 = (v412 - ((2 * v412) & 0x7D44CCA0) + 1050830416) ^ v413;
  v415 = (v377 >> 10) ^ 0x726BB664;
  LODWORD(STACK[0x570]) = v415;
  v416 = (v414 - ((2 * v414) & 0xE4FC1A24) + 1920863506) ^ v415;
  v417 = (v377 >> 9) ^ 0x24520F1;
  LODWORD(STACK[0x56C]) = v417;
  v418 = (v416 - ((2 * v416) & 0x4DCAC3A) + 40785437) ^ v417;
  v419 = (v377 >> 6) ^ 0xC776C72C;
  LODWORD(STACK[0x568]) = v419;
  v420 = (v418 - ((2 * v418) & 0x8C5AE09A) - 970100659) ^ v419;
  v421 = v420 - ((2 * v420) & 0x96CD76AE) - 882459817;
  v422 = (v377 ^ 0x38E4942F) >> 5;
  LODWORD(STACK[0x564]) = v422;
  v423 = (v377 ^ 0x38E4942F) >> 4;
  v424 = v422 ^ v423 ^ v421;
  v425 = ((v424 ^ 0xC816F134) >> 27) ^ (v402 >> 30);
  LOBYTE(v402) = ((LODWORD(STACK[0x630]) + 15) & 0x14) + ((16 - LODWORD(STACK[0x630])) & 0x14);
  LODWORD(STACK[0x610]) = (((v377 ^ 0x38E4942F) << 7) ^ 0x4A63200)
                        - ((2 * (((v377 ^ 0x38E4942F) << 7) ^ 0x4A63200)) & 0xAA025D00);
  v426 = v425 ^ ((v424 ^ 0xC816F134) >> 21);
  v427 = LODWORD(STACK[0x5B8]) ^ (32 * (v377 ^ 0x38E4942F)) ^ LODWORD(STACK[0x5B4]) ^ (16 * (v377 ^ 0x38E4942F)) ^ ((v377 ^ 0x38E4942F) << 17) ^ ((v377 ^ 0x38E4942F) << 30) ^ (4 * (v424 ^ 0xC816F134)) ^ (32 * (v424 ^ 0xC816F134)) ^ ((v424 ^ 0xC816F134) << 11);
  LODWORD(STACK[0x6B4]) = v426;
  v428 = v427 ^ (4 * v426) ^ (v426 << 11) ^ (32 * v426) ^ 0x84FDA22B;
  v429 = (v428 - ((2 * v428) & 0xA61271FC) + 1393113342) ^ v379;
  v430 = (((v377 ^ 0x38E4942F) << 11) ^ 0x4A632000)
       - ((2 * (((v377 ^ 0x38E4942F) << 11) ^ 0x4A632000)) & 0xF3B75000)
       - 103044969;
  v431 = (v429 - ((2 * v429) & 0xF3B7512E) - 103044969) ^ v430;
  LODWORD(STACK[0x630]) = v430;
  v432 = (v431 - ((2 * v431) & 0x97F13472) - 872900039) ^ (v394 - 872900039);
  v433 = (((v377 ^ 0x38E4942F) << 14) ^ 0x53190000)
       - ((2 * (((v377 ^ 0x38E4942F) << 14) ^ 0x53190000)) & 0x30410000)
       + 404795544;
  LODWORD(STACK[0x6DC]) = v433;
  v434 = (v432 - ((2 * v432) & 0x30416130) + 404795544) ^ v433;
  v435 = (((v377 ^ 0x38E4942F) << 18) ^ 0x31900000)
       - ((2 * (((v377 ^ 0x38E4942F) << 18) ^ 0x31900000)) & 0xC03FFFFF)
       + 1612564373;
  v436 = (v434 - ((2 * v434) & 0xC03B8F2A) + 1612564373) ^ v435;
  LODWORD(STACK[0x60C]) = v435;
  v437 = (((v377 ^ 0x38E4942F) << 19) ^ 0x63200000)
       - ((2 * (((v377 ^ 0x38E4942F) << 19) ^ 0x63200000)) & 0xD5900000)
       - 355808685;
  LODWORD(STACK[0x6D0]) = v437;
  v438 = (v436 - ((2 * v436) & 0xD59594A6) - 355808685) ^ v437;
  v439 = (((v377 ^ 0x38E4942F) << 21) ^ 0x8C800000)
       - ((2 * (((v377 ^ 0x38E4942F) << 21) ^ 0x8C800000)) & 0xB6000000)
       - 620662702;
  v440 = (v438 - ((2 * v438) & 0xB602E0A4) - 620662702) ^ v439;
  LODWORD(STACK[0x624]) = v439;
  v441 = (((v377 ^ 0x38E4942F) << 22) ^ 0x19000000)
       - ((2 * (((v377 ^ 0x38E4942F) << 22) ^ 0x19000000)) & 0x56800000)
       - 1421712775;
  v442 = (v440 - ((2 * v440) & 0x5684C4F2) - 1421712775) ^ v441;
  v443 = LODWORD(STACK[0x6B8]) - 246752309;
  v444 = (v442 - ((2 * v442) & 0xE295B796) - 246752309) ^ v443;
  v445 = (v444 - ((2 * v444) & 0xD0374E26) - 400840941) ^ (v400 - 400840941);
  LODWORD(STACK[0x5F8]) = v400 - 400840941;
  v446 = (v399 ^ 0x20000000) - (v403 & 0xBFFFFFFF) - 600636890;
  LODWORD(STACK[0x55C]) = v446;
  v447 = (v445 - ((2 * v445) & 0xB866044C) - 600636890) ^ v446;
  v448 = 2138206935 - (v403 ^ 0x40000000);
  LODWORD(STACK[0x6B8]) = v448;
  v449 = (v447 - ((2 * v447) & 0xFEE4E5AE) + 2138206935) ^ v448;
  v450 = v424 ^ 0xAD532966 ^ (v449 - ((2 * v449) & 0xC74A9928) + 1671777428);
  LODWORD(STACK[0x638]) = v450 - ((2 * v450) & 0x3C5C2198) + 506335436;
  LODWORD(STACK[0x5F4]) = (((v377 ^ 0x38E4942F) << 20) ^ 0xC6400000)
                        - ((2 * (((v377 ^ 0x38E4942F) << 20) ^ 0xC6400000)) & 0x98E00000);
  LODWORD(STACK[0x5F0]) = (((v377 ^ 0x38E4942F) << 25) ^ 0xC8000000)
                        - ((2 * (((v377 ^ 0x38E4942F) << 25) ^ 0xC8000000)) & 0x5C000000);
  v451 = ((v377 ^ 0x56EDD84B) >> v402) ^ ((v377 ^ 0x38E4942F) >> 7) ^ ((v377 ^ 0x38E4942F) >> 1) ^ ((v377 ^ 0x56EDD84B) >> ((v377 ^ 0x2F) & 6 ^ 2 | (v377 ^ 0x2F) & 6 ^ 4));
  v452 = (v376 >> 25) ^ 0x64B2EF71;
  v453 = (((v376 >> 22) ^ 0x37D8B5F1 ^ v451) - ((2 * ((v376 >> 22) ^ 0x37D8B5F1 ^ v451)) & 0xC965DEB4) + 1689448282) ^ v452;
  v454 = STACK[0x560];
  v455 = (v453 - ((2 * v453) & 0x1F00741C) - 1887421938) ^ LODWORD(STACK[0x560]);
  v456 = (v455 - ((2 * v455) & 0xC74F889C) - 475544498) ^ v406;
  v457 = (v456 - ((2 * v456) & 0xC24F121E) + 1629980943) ^ v409;
  v458 = HIWORD(v376) ^ 0xC1D9E315;
  v459 = (v457 - ((2 * v457) & 0x83B36BF0) - 1042696712) ^ v458;
  v460 = STACK[0x558];
  v461 = (v459 - ((2 * v459) & 0xB948E4C) - 2050341082) ^ LODWORD(STACK[0x558]);
  v462 = (v461 - ((2 * v461) & 0x7D44CCA0) + 1050830416) ^ v413;
  LODWORD(v343) = (v376 >> 12) ^ 0xDFB7A96A;
  v463 = (v462 - ((2 * v462) & 0xBF658F6E) - 541931593) ^ v343;
  v464 = (v376 >> 11) ^ 0x42953842;
  v465 = v423 ^ v464 ^ (v463 - ((2 * v463) & 0x853FCBF2) + 1117775353);
  LODWORD(STACK[0x618]) = LODWORD(STACK[0x5A4]) - ((2 * LODWORD(STACK[0x5A4])) & 0x95B30A3E) - 891714273;
  LODWORD(STACK[0x634]) = v465;
  v466 = (v465 >> 21) ^ (v451 >> 30) ^ ((v465 ^ 0x6E094C6) >> ((((v376 >> 25) ^ 0x30)
                                                                               + ((v376 >> 25) & 0x64 ^ 0xDF)
                                                                               + 1) | (v376 >> 25) & 0x1B ^ 0xB));
  LODWORD(STACK[0x5FC]) = v466;
  v467 = LODWORD(STACK[0x58C]) + 656632393;
  LODWORD(STACK[0x5B4]) = v467;
  STACK[0x5B8] = (unint64_t)(v466 ^ 0x37u) << (((v467 & 0xE4 ^ 0xA4) + (v467 & 0xE4 ^ 0x40)) ^ 0xEFu);
  v468 = (v377 << 24) ^ (v377 << 15) ^ ((v377 ^ 0x38E4942F) << 8) ^ 0xAE69E400;
  v469 = LODWORD(STACK[0x610]) + 1426140865;
  LODWORD(STACK[0x610]) = v469;
  v470 = (v468 - ((2 * v468) & 0xAA025C00) + 1426140865) ^ v469;
  v471 = (v470 - ((2 * v470) & 0xA61271FC) + 1393113342) ^ LODWORD(STACK[0x600]);
  v472 = LODWORD(STACK[0x608]) - 2071249500;
  LODWORD(STACK[0x600]) = v472;
  v473 = (v471 - ((2 * v471) & 0x9167B48) - 2071249500) ^ v472;
  v474 = (v473 - ((2 * v473) & 0xF3B7512E) - 103044969) ^ v430;
  v475 = (v474 - ((2 * v474) & 0x97F13472) - 872900039) ^ (v394 - 872900039);
  v476 = (((v377 ^ 0x38E4942F) << 16) ^ 0x4C640000)
       - ((2 * (((v377 ^ 0x38E4942F) << 16) ^ 0x4C640000)) & 0xC020000)
       + 100766683;
  LODWORD(STACK[0x608]) = v476;
  v477 = (v475 - ((2 * v475) & 0xC0327B6) + 100766683) ^ v476;
  v478 = (v477 - ((2 * v477) & 0xC03B8F2A) + 1612564373) ^ v435;
  v479 = LODWORD(STACK[0x5F4]) - 864710186;
  LODWORD(STACK[0x5F4]) = v479;
  v480 = (v478 - ((2 * v478) & 0x98EB23AC) - 864710186) ^ v479;
  v481 = (v480 - ((2 * v480) & 0xB602E0A4) - 620662702) ^ v439;
  v482 = (v481 - ((2 * v481) & 0x5684C4F2) - 1421712775) ^ v441;
  v483 = (v482 - ((2 * v482) & 0xE295B796) - 246752309) ^ v443;
  v484 = LODWORD(STACK[0x5F0]) - 1365867679;
  LODWORD(STACK[0x5F0]) = v484;
  v485 = (v483 - ((2 * v483) & 0x5D2D06C2) - 1365867679) ^ v484;
  v486 = (v485 - ((2 * v485) & 0xD0374E26) - 400840941) ^ (v400 - 400840941);
  LODWORD(STACK[0x590]) = v377;
  v487 = HIBYTE(v376) ^ (v376 >> 17) ^ (v377 >> 8) ^ (v377 >> 7) ^ 0xFB1D48;
  v488 = (v487 - 1484851975 - ((2 * v487) & 0x2FDE9F4) + 1) ^ LODWORD(STACK[0x578]);
  v489 = ((v488 ^ 0xA77EF4F9) - 2 * ((v488 ^ 0xA77EF4F9) & 0x64B2EF5E ^ v488 & 4) + 1689448282) ^ v452;
  v490 = (v489 - ((2 * v489) & 0x2957858E) - 1800682809) ^ (v376 >> 22);
  v491 = ((v490 ^ 0x94ABC39C) - 2 * ((v490 ^ 0x94ABC39C) & 0xF803A0F ^ v490 & 1) - 1887421938) ^ v454;
  v492 = (v491 - ((2 * v491) & 0xC74F889C) - 475544498) ^ LODWORD(STACK[0x550]);
  v493 = (v492 - ((2 * v492) & 0x83B36BF0) - 1042696712) ^ v458;
  v494 = (v493 - ((2 * v493) & 0xB948E4C) - 2050341082) ^ v460;
  v495 = (v494 - ((2 * v494) & 0xBF658F6E) - 541931593) ^ v343;
  v496 = (v495 - ((2 * v495) & 0x853FCBF2) + 1117775353) ^ v464;
  v497 = (v496 - ((2 * v496) & 0xE4FC1A24) + 1920863506) ^ LODWORD(STACK[0x570]);
  v498 = (v497 - ((2 * v497) & 0x4DCAC3A) + 40785437) ^ LODWORD(STACK[0x56C]);
  v499 = LODWORD(STACK[0x564]) ^ LODWORD(STACK[0x568]) ^ (v498 - ((2 * v498) & 0x8C5AE09A) - 970100659);
  v500 = LODWORD(STACK[0x62C]) ^ (LODWORD(STACK[0x5C0]) >> 21) ^ (LODWORD(STACK[0x5C0]) >> 27);
  v501 = STACK[0x5C0];
  v502 = (-1673081951 * LODWORD(STACK[0x844]) - 1663319554) ^ (LODWORD(STACK[0x648]) << 31) ^ (LODWORD(STACK[0x5A8]) << 12) ^ LODWORD(STACK[0x5C4]) ^ (4 * LODWORD(STACK[0x5C0])) ^ (32 * LODWORD(STACK[0x5C0])) ^ (LODWORD(STACK[0x5C0]) << 11) ^ (4 * v500) ^ (32 * v500) ^ (v500 << 11) ^ (4 * v499) ^ (32 * v499) ^ (v499 << 11) ^ (4 * (v499 >> 21)) ^ (v486 - ((2 * v486) & 0xB866044C) - 600636890);
  v503 = ((v392 >> 29) | 0xC63FC30) ^ ((v392 >> 30) | 0xFE93DCD0);
  LODWORD(STACK[0x62C]) = v503;
  v504 = v392 ^ LODWORD(STACK[0x6C0]);
  v505 = (4 * (v504 ^ 0xF062D289)) ^ (8 * (v504 ^ 0xF062D289)) ^ 0xD7A39D89;
  v506 = LODWORD(STACK[0x614]) ^ LODWORD(STACK[0x55C]);
  LODWORD(STACK[0x648]) = v499 >> 21;
  v507 = v506 ^ (32 * (v499 >> 21)) ^ (v499 >> 21 << 11) ^ 0xB79C1C40 ^ v502;
  v508 = (v507 - 2 * (v507 & 0x7800525F ^ v502 & 9) + 2013286998) ^ LODWORD(STACK[0x678]);
  v509 = (v508 - ((2 * v508) & 0x57164FC4) + 730540002) ^ LODWORD(STACK[0x5D4]);
  v510 = (v509 - ((2 * v509) & 0x2B6147BE) - 1783585825) ^ LODWORD(STACK[0x6A8]);
  v511 = (v510 - ((2 * v510) & 0x39678486) + 481542723) ^ LODWORD(STACK[0x5D0]);
  v512 = (v511 - ((2 * v511) & 0xBD6E803A) + 1589067805) ^ LODWORD(STACK[0x5CC]);
  v513 = (v512 - ((2 * v512) & 0x3B030290) - 1652457144) ^ LODWORD(STACK[0x6A0]);
  v514 = (v513 - ((2 * v513) & 0x7BE3FDE6) - 1108214029) ^ LODWORD(STACK[0x5B0]);
  v515 = (((v514 - ((2 * v514) & 0xDFFC0A1E) + 1878918415) ^ LODWORD(STACK[0x670]))
        - 2
        * (((v514 - ((2 * v514) & 0xDFFC0A1E) + 1878918415) ^ LODWORD(STACK[0x670])) & 0x66D64C13 ^ (v514 - ((2 * v514) & 0xDFFC0A1E) + 1878918415) & 0x10)
        + 1725320195) ^ LODWORD(STACK[0x680]);
  v516 = v501 ^ 0xF266779D ^ (v515 - ((2 * v515) & 0xFF51B434) - 5711334);
  v517 = v500 ^ 0x122E2DBB ^ (v516 + 305016251 - ((2 * v516) & 0x245C5BA8) + 25);
  v518 = (v517 - ((2 * v517) & 0x970AD2B6) + 1267034459) ^ v499;
  LODWORD(STACK[0x6C0]) = (v518 ^ 0x48F52338) - 2 * ((v518 ^ 0x48F52338) & 0x50B9AE77 ^ v518 & 5) - 793137550;
  v519 = (v504 ^ 0x145043A3) >> (-127 - (STACK[0x580] & 0x72 ^ 2 | STACK[0x580] & 0x72 ^ 0x70));
  v520 = v519 - 1390109266 - ((2 * v519) & 0x5A493B5C);
  v521 = (v504 ^ 0xF062D289) << 24;
  LODWORD(STACK[0x6A8]) = v521;
  v522 = (((v504 ^ 0xF062D289) << 23) ^ 0x95000000) - (v521 & 0x90000000);
  LODWORD(STACK[0x6A0]) = (((v504 ^ 0xF062D289) << 26) ^ 0xA8000000)
                        - ((2 * (((v504 ^ 0xF062D289) << 26) ^ 0xA8000000)) & 0x40000000);
  v523 = (v504 ^ 0xF062D289) << 28;
  v524 = (v392 >> 28) ^ (v392 >> 27) ^ (v392 >> 21) ^ (v392 >> 18) ^ (v392 >> 13) ^ 0xA737;
  v525 = (v524 - ((2 * v524) & 0x5A493B5C) - 1390109266) ^ v520;
  v526 = (v525 - ((2 * v525) & 0xE5E041C0) - 219143968) ^ v503;
  v527 = (v392 >> 19) ^ 0xADFA357E;
  v528 = (v526 - ((2 * v526) & 0x5BF46FE8) - 1376110604) ^ v527;
  v529 = (v392 >> 14) ^ 0xBB75EC03;
  v530 = (v528 - ((2 * v528) & 0x76EB7A84) - 1149911742) ^ v529;
  v531 = (v392 >> 11) ^ 0x1B49F6F5;
  v532 = (v530 - ((2 * v530) & 0x3696F9FA) + 457932029) ^ v531;
  LODWORD(v343) = ((v504 ^ 0xF062D289) >> 4) ^ ((v504 ^ 0xF062D289) >> 2);
  v533 = (v504 >> 10) ^ 0xFDB55EED;
  v534 = (v504 >> 6) ^ 0x3A049E35;
  LODWORD(STACK[0x678]) = v534;
  v535 = (v504 ^ 0xF062D289) >> 9;
  v536 = v535 ^ v533 ^ v534 ^ ((v343 ^ 0x374F8D58) - 2 * ((v343 ^ 0x374F8D58) & 0x3A55DF3F ^ v343 & 4) + 978706235) ^ (v532 - ((2 * v532) & 0xFB6095FA) - 38778115);
  v537 = (32 * (v504 ^ 0xF062D289)) ^ ((v504 ^ 0xF062D289) << 30) ^ (16 * (v504 ^ 0xF062D289)) ^ ((v504 ^ 0xF062D289) << 11) ^ ((v504 ^ 0xF062D289) << 14) ^ ((v504 ^ 0xF062D289) << 17) ^ ((v504 ^ 0xF062D289) << 19) ^ v523 ^ 0x7EBCE7E0;
  v538 = (v537 - ((2 * v537) & 0xCDFAA0EA) + 1727877233) ^ v505;
  v539 = (((v504 ^ 0xF062D289) << 13) ^ 0x52254000)
       - ((2 * (((v504 ^ 0xF062D289) << 13) ^ 0x52254000)) & 0xADEC4000)
       + 1458977344;
  v540 = (v538 - ((2 * v538) & 0xADEC7480) + 1458977344) ^ v539;
  v541 = (((v504 ^ 0xF062D289) << 18) ^ 0x44A80000)
       - ((2 * (((v504 ^ 0xF062D289) << 18) ^ 0x44A80000)) & 0x25A00000)
       + 315698174;
  v542 = (v540 - ((2 * v540) & 0x25A257FC) + 315698174) ^ v541;
  LODWORD(v343) = (((v504 ^ 0xF062D289) << 21) ^ 0x25400000)
                - ((2 * (((v504 ^ 0xF062D289) << 21) ^ 0x25400000)) & 0x53400000)
                + 699836658;
  v543 = (v542 - ((2 * v542) & 0x536D51E4) + 699836658) ^ v343;
  v544 = (((v504 ^ 0xF062D289) << 22) ^ 0x4A800000)
       - ((2 * (((v504 ^ 0xF062D289) << 22) ^ 0x4A800000)) & 0x25000000)
       - 1832980177;
  v545 = (v543 - ((2 * v543) & 0x257DE25E) - 1832980177) ^ v544;
  v546 = (v545 - ((2 * v545) & 0x909E4E40) + 1213146912) ^ (v522 + 1213146912);
  v547 = v546 - ((2 * v546) & 0x4090E874);
  v548 = LODWORD(STACK[0x6A0]) + 541619258;
  v549 = ((v547 + 541619258) ^ v548) - ((2 * ((v547 + 541619258) ^ v548)) & 0x5152F11A);
  v550 = (((v504 ^ 0xF062D289) << 27) ^ 0x50000000) - (v523 & 0x55555555) + 682195085;
  v551 = (v504 ^ 0xF062D289) >> 5;
  v552 = v536 ^ v551 ^ 0x117B9940;
  HIDWORD(v553) = v552 ^ LODWORD(STACK[0x5B4]) ^ (((v549 + 682195085) ^ v550)
                                                - ((2 * ((v549 + 682195085) ^ v550)) & 0x4E46D492)
                                                + 656632393) ^ 0x16281481;
  LODWORD(v553) = v552 ^ LODWORD(STACK[0x5B4]) ^ (((v549 + 682195085) ^ v550)
                                                - ((2 * ((v549 + 682195085) ^ v550)) & 0x4E46D492)
                                                + 656632393);
  v554 = (v553 >> 30) ^ ((v536 >> 28) & 3 | (16 * v552));
  LODWORD(STACK[0x680]) = (v536 >> 27) ^ ((v520 + 0x80000000) >> 30) ^ ((v536 ^ v551) >> 21);
  HIDWORD(v553) = v554 ^ 1;
  LODWORD(v553) = v554 ^ 0xE99813FC;
  LODWORD(STACK[0x6A0]) = ((v553 >> 2) - ((2 * (v553 >> 2)) & 0xE46F8DCE) + 1916258023) ^ (((32 * v552) ^ (v552 << 11) ^ 0x85A69820)
                                                                                         - ((2
                                                                                           * ((32 * v552) ^ (v552 << 11) ^ 0x85A69820)) & 0xE46F8DC0)
                                                                                         + 1916258023);
  v555 = (v504 ^ 0x145043A3) >> (HIBYTE(v392) & 0x15 ^ 1 | HIBYTE(v392) & 0x15 ^ 0x14);
  v556 = (v392 >> 22) ^ (v392 >> 25) ^ (v392 >> 17) ^ 0xA73;
  v557 = v556 - ((2 * v556) & 0x9B16);
  v558 = v555 - ((2 * v555) & 0x464D9B16) + 589745547;
  v559 = HIWORD(v392) ^ (v392 >> 12) ^ (v504 >> 7) ^ (v504 >> 8) ^ v558 ^ (v557 + 589745547) ^ 0x3DA190;
  v560 = HIBYTE(v392) ^ 0x7425F61F ^ (v559 - ((2 * v559) & 0xE84BEC16) + 1948644875);
  v561 = (v560 - ((2 * v560) & 0xE5E041C0) - 219143968) ^ LODWORD(STACK[0x62C]);
  v562 = (v561 - ((2 * v561) & 0x5BF46FE8) - 1376110604) ^ v527;
  v563 = (v562 - ((2 * v562) & 0x76EB7A84) - 1149911742) ^ v529;
  v564 = (v563 - ((2 * v563) & 0x3696F9FA) + 457932029) ^ v531;
  v565 = (v564 - ((2 * v564) & 0xFB6095FA) - 38778115) ^ v533;
  v566 = (v565 - ((2 * v565) & 0xF6265750) - 82629720) ^ v535;
  v567 = (v504 << 20) ^ (v504 << 25) ^ ((v504 ^ 0xF062D289) << 16) ^ ((v504 ^ 0xF062D289) << 8) ^ ((v504 ^ 0xF062D289) << 7) ^ ((v504 ^ 0xF062D289) << 10) ^ ((v504 ^ 0xF062D289) << 15) ^ LODWORD(STACK[0x6A8]) ^ 0x6E121700 ^ ((v504 ^ 0x145043A3) << ((((v553 >> 2) - ((2 * (v553 >> 2)) & 0xCE) - 25) ^ 3 | ~(((v553 >> 2) - ((2 * (v553 >> 2)) & 0xCE) - 25) ^ (((32 * v552) ^ 0x20) - ((2 * ((32 * v552) ^ 0x20)) & 0xC0) - 25))) & 0xB));
  v568 = (v567
        - 2
        * (v567 & 0x66FD5077 ^ ((v504 ^ 0x145043A3) << ((((v553 >> 2) - ((2 * (v553 >> 2)) & 0xCE) - 25) ^ 3 | ~(((v553 >> 2) - ((2 * (v553 >> 2)) & 0xCE) - 25) ^ (((32 * v552) ^ 0x20) - ((2 * ((32 * v552) ^ 0x20)) & 0xC0) - 25))) & 0xB)) & 6)
        + 1727877233) ^ v505;
  v569 = (v568 - ((2 * v568) & 0xADEC7480) + 1458977344) ^ v539;
  v570 = (v569 - ((2 * v569) & 0x25A257FC) + 315698174) ^ v541;
  v571 = (v570 - ((2 * v570) & 0x536D51E4) + 699836658) ^ v343;
  v572 = (v571 - ((2 * v571) & 0x257DE25E) - 1832980177) ^ v544;
  v573 = (v572 - ((2 * v572) & 0x909E4E40) + 1213146912) ^ (v522 + 1213146912);
  v574 = (v573 - ((2 * v573) & 0x4090E874) + 541619258) ^ v548;
  v575 = v551 ^ LODWORD(STACK[0x678]) ^ ((v566 ^ 0xFB6132E0)
                                       - 2 * ((v566 ^ 0xFB6132E0) & 0x3A55DF3F ^ v566 & 4)
                                       + 978706235);
  v576 = STACK[0x6C0];
  v577 = LODWORD(STACK[0x6C0]) ^ LODWORD(STACK[0x648]);
  LODWORD(STACK[0x5C4]) = ((v577 << 7) ^ 0xD4523900) - ((2 * ((v577 << 7) ^ 0xD4523900)) & 0xB2A3200);
  v578 = LODWORD(STACK[0x5A0]) ^ (LODWORD(STACK[0x5AC]) >> 21);
  v579 = LODWORD(STACK[0x644]) ^ LODWORD(STACK[0x640]) ^ (v249 << 19) ^ (v249 << 12) ^ (LODWORD(STACK[0x628]) << 31) ^ (LODWORD(STACK[0x5AC]) << 11) ^ (4 * (LODWORD(STACK[0x5AC]) ^ 0x929084E5)) ^ (32 * (LODWORD(STACK[0x5AC]) ^ 0x929084E5)) ^ (4 * v578) ^ (32 * v578) ^ (v578 << 11) ^ v550 ^ 0x7F9CF91C ^ (v574 + 682195085 + (~(2 * v574) | 0xAEAD0EE5) + 1);
  v580 = (v579 - ((2 * v579) & 0xBB1A9BAA) + 1569541589) ^ LODWORD(STACK[0x5EC]);
  v581 = (v580 - ((2 * v580) & 0xFB689D4) + 131810538) ^ LODWORD(STACK[0x690]);
  v582 = (v581 - ((2 * v581) & 0xA8C55690) + 1415752520) ^ LODWORD(STACK[0x668]);
  v583 = (v582 - ((2 * v582) & 0xE58AC654) + 1925538602) ^ LODWORD(STACK[0x598]);
  v584 = (v583 - ((2 * v583) & 0x80CAE4A) + 67524389) ^ LODWORD(STACK[0x698]);
  v585 = (v584 - ((2 * v584) & 0x514CE22C) - 1465487082) ^ LODWORD(STACK[0x5E8]);
  v586 = (v585 - ((2 * v585) & 0xAFD12B8C) + 1474860486) ^ LODWORD(STACK[0x688]);
  v587 = (v586 - ((2 * v586) & 0x720A611E) - 1190842225) ^ LODWORD(STACK[0x594]);
  v588 = (v587 - ((2 * v587) & 0x3097A348) - 1739861596) ^ LODWORD(STACK[0x5E0]);
  v589 = (v588 - ((2 * v588) & 0x940C4436) - 905567717) ^ LODWORD(STACK[0x59C]);
  v590 = (v589 - ((2 * v589) & 0x93AC1024) + 1238763538) ^ LODWORD(STACK[0x5D8]);
  v591 = (v590 - ((2 * v590) & 0x28A0876A) + 340804533) ^ LODWORD(STACK[0x5DC]);
  v592 = (v591 - ((2 * v591) & 0xA078D5D6) + 1346136811) ^ LODWORD(STACK[0x5C8]);
  v593 = (v592 - ((2 * v592) & 0xDD8A7C74) + 1858420282) ^ LODWORD(STACK[0x5AC]);
  v594 = v578 ^ 0xBD777C24 ^ ((v593 ^ 0x5695A0A5)
                            - 1116242908
                            - 2 * ((v593 ^ 0x5695A0A5) & 0x3D777DF3 ^ v593 & 0x12)
                            + 445);
  LODWORD(STACK[0x5A0]) = v575 ^ (4 * v575) ^ (32 * v575) ^ (v575 << 11) ^ (v594 - ((2 * v594) & 0x747C37CE) - 1170334745);
  LODWORD(STACK[0x5E8]) = ((4 * v577) ^ 0x7EA291C8) - ((2 * ((4 * v577) ^ 0x7EA291C8)) & 0x4E689EC0);
  LODWORD(v343) = (v558 >> 30) ^ (v558 >> 27) ^ (v575 >> 21);
  LODWORD(STACK[0x614]) = ((8 * v577) ^ 0xFD452390) - ((2 * ((8 * v577) ^ 0xFD452390)) & 0xFBC5A830);
  LODWORD(STACK[0x59C]) = (32 * v343) ^ ((_DWORD)v343 << 11) ^ (((4 * v343) ^ 0xF4)
                                                              - ((2 * ((4 * v343) ^ 0xF4)) & 0xFFFFE7FF)
                                                              - 809757699);
  LODWORD(STACK[0x5B4]) = ((v577 << 13) ^ 0x148E4000) - ((2 * ((v577 << 13) ^ 0x148E4000)) & 0xCA7C000);
  LODWORD(STACK[0x5C8]) = ((v577 << 10) ^ 0xA291C800) - ((2 * ((v577 << 10) ^ 0xA291C800)) & 0x533F3800);
  LODWORD(STACK[0x5AC]) = ((v577 << 16) ^ 0xA4720000) - ((2 * ((v577 << 16) ^ 0xA4720000)) & 0x3D900000);
  LODWORD(STACK[0x5DC]) = ((v577 << 20) ^ 0x47200000) - ((2 * ((v577 << 20) ^ 0x47200000)) & 0xAD800000);
  LODWORD(STACK[0x678]) = ((v577 << 14) ^ 0x291C8000) - ((2 * ((v577 << 14) ^ 0x291C8000)) & 0x67AB0000);
  LODWORD(STACK[0x688]) = ((v577 << 25) ^ 0xE4000000) - (((v577 << 25) ^ 0xE4000000) >> 26 << 27);
  LODWORD(STACK[0x5D8]) = ((v577 << 22) ^ 0x1C800000) - ((2 * ((v577 << 22) ^ 0x1C800000)) & 0xA3800000);
  LODWORD(STACK[0x690]) = ((v577 << 28) ^ 0x20000000) - ((2 * ((v577 << 28) ^ 0x20000000)) & 0x40000000);
  LODWORD(STACK[0x594]) = ((v577 << 24) ^ 0x72000000) - ((2 * ((v577 << 24) ^ 0x72000000)) & 0x68000000);
  LODWORD(STACK[0x598]) = ((v577 << 26) ^ 0xC8000000) - ((v577 << 27) & 0x40000000);
  v595 = (v577 >> 6) ^ (v577 >> 4) ^ 0x9296E83D;
  LODWORD(STACK[0x698]) = v595;
  LODWORD(STACK[0x6A8]) = v576 >> 18;
  v596 = (v576 >> 25) ^ 0x7A502343;
  v597 = (((v576 >> 18) ^ (v576 >> 20) ^ 0x610) - ((2 * ((v576 >> 18) ^ (v576 >> 20) ^ 0x610)) & 0x4698) + 2052072268) ^ v596;
  LODWORD(STACK[0x670]) = v596;
  v598 = (v576 >> 22) ^ 0x7EA2ED86;
  v599 = (v597 - ((2 * v597) & 0x7D45DBF0) + 2124606968) ^ v598;
  LODWORD(STACK[0x62C]) = v598;
  v600 = (v576 >> 21) ^ 0xBBB187B8;
  v601 = HIWORD(v576) ^ 0x420CF644;
  LODWORD(STACK[0x640]) = v601;
  v602 = (v576 >> 19) ^ 0x28EF291C;
  LODWORD(STACK[0x644]) = v602;
  v603 = v602 ^ HIWORD(v576) ^ (((v599 - ((2 * v599) & 0x77630E8A) - 1145993403) ^ v600)
                              - ((2 * ((v599 - ((2 * v599) & 0x77630E8A) - 1145993403) ^ v600)) & 0x51DE55D2)
                              + 686762729);
  v604 = (v576 >> 14) ^ 0x7EA2;
  v605 = (v604 + ((v576 >> 14) ^ 0xFFFF9EF5 ^ v603) + 1) ^ ((v603 ^ 0xFFFFE057) + 1);
  v606 = (v577 >> 1) ^ (v576 >> 13) ^ ((v603 ^ 0xB1FBEFC ^ (v605 - ((2 * v605) & 0x163F42A8) + 186622292)) + v604);
  v607 = (v576 >> 12) ^ 0xCE3E561F;
  LODWORD(STACK[0x5E0]) = v607;
  v608 = (v576 >> 11) ^ 0x8DAFF2AF;
  v609 = (((v576 >> 12) ^ 0xFD555F6 ^ v606) - ((2 * ((v576 >> 12) ^ 0xFD555F6 ^ v606)) & 0x1B580F76) - 1918105669) ^ v608;
  v610 = (v577 >> 7) ^ 0x5CA68C29;
  v611 = (v609 - ((2 * v609) & 0xB933BAC2) + 1553587553) ^ v610;
  LODWORD(STACK[0x5EC]) = v610;
  v612 = v595 ^ (v611 - ((2 * v611) & 0x25D09558) - 1830270292);
  LODWORD(STACK[0x5D0]) = v612;
  LODWORD(STACK[0x5D4]) = ((4 * v612) ^ 0x7EA291C) - ((2 * ((4 * v612) ^ 0x7EA291C)) & 0xDDC78E58) - 287062228;
  LODWORD(STACK[0x5CC]) = (v612 >> 27) ^ (v606 >> 30);
  v613 = (v577 >> 10) ^ (v577 >> 8);
  LODWORD(STACK[0x668]) = v613;
  v614 = v613 ^ HIBYTE(v576) ^ (v576 >> 17) ^ (v577 >> 9) ^ (v577 >> 5) ^ 0xEADC37;
  v615 = (v576 >> 30) | 0xE4BB3144;
  LODWORD(STACK[0x648]) = v615;
  v616 = ((v614 - ((2 * v614) & 0x49766288) - 457494204) ^ v615)
       - 2
       * (((v614 - ((2 * v614) & 0x49766288) - 457494204) ^ v615) & 0x51DD21FF ^ (v614
                                                                                - ((2 * v614) & 0x49766288)
                                                                                - 457494204) & 0x10);
  v617 = (v576 >> 29) ^ 0xD1DD21EF;
  LODWORD(STACK[0x628]) = v617;
  v618 = (((v616 - 774037009) ^ v617) - ((2 * ((v616 - 774037009) ^ v617)) & 0xF4A04698) + 2052072268) ^ (v576 >> 25) ^ 0x7A502343;
  v619 = (v618 - ((2 * v618) & 0xFD45DBF0) + 2124606968) ^ v598;
  v620 = (v619 - ((2 * v619) & 0x77630E8A) - 1145993403) ^ v600;
  v621 = (v620 - ((2 * v620) & 0x51DE55D2) + 686762729) ^ v602;
  v622 = (v621 - ((2 * v621) & 0x8419D3D8) + 1108142572) ^ v601;
  v623 = (v576 >> 14) ^ 0xCF81997E ^ (v622 - ((2 * v622) & 0x9F03CFB8) - 813570084);
  v624 = (v623 - ((2 * v623) & 0x9C7F592A) - 834687851) ^ v607;
  v625 = (v624 - ((2 * v624) & 0x1B580F76) - 1918105669) ^ v608;
  v626 = (v577 >> 7) ^ 0x5CA68C29 ^ (v577 >> 6) ^ (v625 - ((2 * v625) & 0xB933BAC2) + 1553587553);
  v627 = (v577 << 8) ^ (v577 << 15) ^ (v577 << 23) ^ (v577 << 25) ^ (v577 << 27) ^ 0xB79D7200;
  v628 = LODWORD(STACK[0x614]) - 35466210;
  LODWORD(STACK[0x614]) = v628;
  v629 = (v627 - ((2 * v627) & 0xFBC5A83C) - 35466210) ^ v628;
  v630 = LODWORD(STACK[0x5E8]) - 1489744029;
  LODWORD(STACK[0x5E8]) = v630;
  v631 = (v629 - ((2 * v629) & 0x4E689EC6) - 1489744029) ^ v630;
  v632 = LODWORD(STACK[0x5C4]) - 2053826260;
  LODWORD(STACK[0x5C0]) = v632;
  v633 = (v631 - ((2 * v631) & 0xB2A3258) - 2053826260) ^ v632;
  v634 = LODWORD(STACK[0x5C8]) + 698326763;
  LODWORD(STACK[0x5C8]) = v634;
  v635 = (v633 - ((2 * v633) & 0x533F3DD6) + 698326763) ^ v634;
  v636 = ((v577 << 11) ^ 0x45239000) - ((2 * ((v577 << 11) ^ 0x45239000)) & 0xEF495000) + 2007280626;
  LODWORD(STACK[0x5A4]) = v636;
  v637 = (v635 - ((2 * v635) & 0xEF4957E4) + 2007280626) ^ v636;
  v638 = LODWORD(STACK[0x5B4]) + 106165236;
  LODWORD(STACK[0x5B0]) = v638;
  v639 = (v637 - ((2 * v637) & 0xCA7E7E8) + 106165236) ^ v638;
  v640 = LODWORD(STACK[0x5AC]) - 1631054879;
  LODWORD(STACK[0x5C4]) = v640;
  v641 = (v639 - ((2 * v639) & 0x3D9027C2) - 1631054879) ^ v640;
  v642 = ((v577 << 18) ^ 0x91C80000) - ((2 * ((v577 << 18) ^ 0x91C80000)) & 0x1BF80000) + 234831441;
  LODWORD(STACK[0x5B4]) = v642;
  v643 = (v641 - ((2 * v641) & 0x1BFE7CA2) + 234831441) ^ v642;
  v644 = LODWORD(STACK[0x5DC]) - 691859368;
  LODWORD(STACK[0x5AC]) = v644;
  v645 = (v643 - ((2 * v643) & 0xAD8620B0) - 691859368) ^ v644;
  v646 = ((v577 << 21) ^ 0x8E400000) - ((2 * ((v577 << 21) ^ 0x8E400000)) & 0xDEC00000) + 1868796147;
  LODWORD(STACK[0x5A8]) = v646;
  v647 = (v645 - ((2 * v645) & 0xDEC721E6) + 1868796147) ^ v646;
  v648 = LODWORD(STACK[0x5D8]) - 773709886;
  LODWORD(STACK[0x5DC]) = v648;
  v649 = (v647 - ((2 * v647) & 0xA3C43F84) - 773709886) ^ v648;
  v650 = LODWORD(STACK[0x594]) - 1262563210;
  LODWORD(STACK[0x5D8]) = v650;
  v651 = (v649 - ((2 * v649) & 0x697DA0EC) - 1262563210) ^ v650;
  v652 = v651 - ((2 * v651) & 0x46F60DE8);
  v653 = STACK[0x5A0];
  v654 = LODWORD(STACK[0x59C]) ^ LODWORD(STACK[0x5A0]);
  v655 = v654 ^ v343 ^ 0x60BFC3B2;
  v656 = STACK[0x5FC];
  v657 = LODWORD(STACK[0x618]) ^ (v378 << 12) ^ (v378 << 31) ^ LODWORD(STACK[0x6E0]) ^ LODWORD(STACK[0x634]) ^ (32 * LODWORD(STACK[0x634])) ^ (4 * LODWORD(STACK[0x634])) ^ (LODWORD(STACK[0x634]) << 11) ^ (4 * LODWORD(STACK[0x5FC])) ^ (32 * LODWORD(STACK[0x5FC])) ^ STACK[0x5B8];
  v658 = (v652 + 595265268) ^ 0x497F6435;
  v659 = LODWORD(STACK[0x598]) + 595265268;
  LODWORD(STACK[0x634]) = v659;
  LODWORD(STACK[0x618]) = v626 >> 21;
  v660 = v657 ^ v659 ^ (4 * v626) ^ (32 * v626) ^ (v626 << 11) ^ (4 * (v626 >> 21)) ^ (32 * (v626 >> 21)) ^ (v626 >> 21 << 11) ^ v658;
  v661 = LODWORD(STACK[0x590]) ^ 0x8CBA30F3 ^ (v660 - ((2 * v660) & 0xB4AFD170) - 631773000);
  v662 = (v661 - ((2 * v661) & 0xAA025D82) + 1426140865) ^ LODWORD(STACK[0x610]);
  v663 = (v662 - ((2 * v662) & 0x9167B48) - 2071249500) ^ LODWORD(STACK[0x600]);
  v664 = (v663 - ((2 * v663) & 0xF3B7512E) - 103044969) ^ LODWORD(STACK[0x630]);
  v665 = (v664 - ((2 * v664) & 0x30416130) + 404795544) ^ LODWORD(STACK[0x6DC]);
  v666 = (v665 - ((2 * v665) & 0xC03B8F2A) + 1612564373) ^ LODWORD(STACK[0x60C]);
  v667 = (v666 - ((2 * v666) & 0xC0327B6) + 100766683) ^ LODWORD(STACK[0x608]);
  v668 = (v667 - ((2 * v667) & 0xD59594A6) - 355808685) ^ LODWORD(STACK[0x6D0]);
  v669 = (v668 - ((2 * v668) & 0x98EB23AC) - 864710186) ^ LODWORD(STACK[0x5F4]);
  v670 = (v669 - ((2 * v669) & 0xB602E0A4) - 620662702) ^ LODWORD(STACK[0x624]);
  v671 = (v670 - ((2 * v670) & 0x5D2D06C2) - 1365867679) ^ LODWORD(STACK[0x5F0]);
  v672 = (v671 - ((2 * v671) & 0xD0374E26) - 400840941) ^ LODWORD(STACK[0x5F8]);
  v673 = (v672 - ((2 * v672) & 0xFEE4E5AE) + 2138206935) ^ LODWORD(STACK[0x6B8]);
  v674 = v626 ^ v656 ^ (v673 - ((2 * v673) & 0xA16898CE) + 1353993319);
  v675 = (v653 >> 31) ^ (v654 >> 26) ^ (v654 >> 29) ^ (v654 >> 30) ^ 0x27;
  v676 = (v654 >> 25) ^ 0xC1A2473C ^ (v654 >> 22);
  LODWORD(STACK[0x6DC]) = v676;
  v677 = (v675 - ((2 * v675) & 0x4A) - 1046330011) ^ v676;
  HIDWORD(v553) = v677 ^ 0x2B709E5;
  LODWORD(v553) = v677 ^ 0x9FFFFFFF;
  v678 = v553 >> 27;
  HIDWORD(v553) = v678 ^ 0xFFFFFFF3;
  LODWORD(v553) = v678 ^ 0x56E13CA0;
  v679 = (v553 >> 5) - 1618646109 - ((2 * (v553 >> 5)) & 0x3F0AD746);
  LODWORD(STACK[0x6E0]) = ((v655 << 25) ^ 0x70000000) - (((v654 ^ v343) << 26) & 0x14000000);
  LODWORD(STACK[0x60C]) = ((v655 << 26) ^ 0xE0000000) - ((2 * ((v655 << 26) ^ 0xE0000000)) & 0x68000000);
  v680 = (v655 << 28) - ((v655 << 29) & 0xC0000000) - 517116472;
  LODWORD(STACK[0x610]) = v680;
  v681 = ((v654 ^ v343) >> 3) ^ (v655 >> 8) ^ (((v654 >> 15) ^ (v655 >> 10) ^ 0x388E2B)
                                                           - ((2 * ((v654 >> 15) ^ (v655 >> 10) ^ 0x388E2B)) & 0xAD746)
                                                           - 1618646109) ^ 0x1030523A ^ v679;
  v682 = (v654 >> 19) ^ 0x4C2BD5E2;
  v683 = (v681 - ((2 * v681) & 0x98578A68) + 1277936948) ^ v682;
  v684 = (v654 >> 18) ^ 0xEFF965B3;
  v685 = (v683 - ((2 * v683) & 0xDFF2883E) - 268876769) ^ v684;
  v686 = HIWORD(v654) ^ 0xD52CF86B;
  LODWORD(STACK[0x6B8]) = v686;
  v687 = (v685 - ((2 * v685) & 0xAA58FDB2) - 718504231) ^ v686;
  LODWORD(STACK[0x6D0]) = v654 >> 12;
  v688 = (v654 >> 12) ^ 0x164630D5 ^ (v687 - ((2 * v687) & 0x2C9CB7F4) + 374234106);
  v689 = ((v654 ^ v343) >> 7) ^ 0x93DE226E;
  LODWORD(STACK[0x630]) = v689;
  v690 = (v688 - ((2 * v688) & 0x25A68F3C) - 1831647330) ^ v689;
  v691 = ((v654 ^ v343) >> 6) ^ (v655 >> 4) ^ 0xC43A4A00;
  LODWORD(STACK[0x624]) = v691;
  v692 = v691 ^ (v690 - ((2 * v690) & 0x8C4103C0) - 970948128);
  v693 = (v692 >> 27) ^ ((v679 + 0x80000000) >> 30) ^ (v692 >> 21);
  v694 = v654 ^ v343 ^ (4 * v655) ^ (8 * v655) ^ (v655 << 6) ^ (v655 << 17) ^ (v655 << 22) ^ (v655 << 24) ^ (v655 << 29) ^ (((2 * v655) ^ 0xCC1A7770) - 2 * (((2 * v655) ^ 0xCC1A7770) & 0x47A9C7AE ^ (2 * v655) & 8) - 945174617) ^ (4 * v692) ^ (32 * v692) ^ (v692 << 11) ^ (4 * v693) ^ (32 * v693) ^ (v693 << 11) ^ 0xB87F9C89;
  v695 = ((v655 << 7) ^ 0x69DDC00) - ((2 * ((v655 << 7) ^ 0x69DDC00)) & 0x154B3F00) - 1968857205;
  v696 = (v694 - ((2 * v694) & 0x154B3F16) - 1968857205) ^ v695;
  v697 = ((v655 << 10) ^ 0x34EEE000) - ((2 * ((v655 << 10) ^ 0x34EEE000)) & 0xF2982800) - 112454270;
  v698 = (v696 - ((2 * v696) & 0xF2982B04) - 112454270) ^ v697;
  v699 = ((v655 << 13) ^ 0xA7770000) - ((2 * ((v655 << 13) ^ 0xA7770000)) & 0xB688C000) - 616268439;
  v700 = (v698 - ((2 * v698) & 0xB688FAD2) - 616268439) ^ v699;
  v701 = ((v655 << 14) ^ 0x4EEE0000) - ((2 * ((v655 << 14) ^ 0x4EEE0000)) & 0xD3058000) + 1770185412;
  v702 = (v700 - ((2 * v700) & 0xD305C588) + 1770185412) ^ v701;
  v703 = ((v655 << 16) ^ 0x3BB80000) - ((2 * ((v655 << 16) ^ 0x3BB80000)) & 0xFD620000) + 2125594011;
  v704 = (v702 - ((2 * v702) & 0xFD63FB36) + 2125594011) ^ v703;
  v705 = ((v655 << 20) ^ 0xBB800000) - ((2 * ((v655 << 20) ^ 0xBB800000)) & 0xDFFFFFFF) + 1878272545;
  v706 = (v704 - ((2 * v704) & 0xDFE85442) + 1878272545) ^ v705;
  v707 = LODWORD(STACK[0x6E0]) - 1975728714;
  v708 = (v706 - ((2 * v706) & 0x14798B6C) - 1975728714) ^ v707;
  v709 = LODWORD(STACK[0x60C]) - 1212165075;
  v710 = (v708 - ((2 * v708) & 0x6F7FA85A) - 1212165075) ^ v709;
  v711 = (v710 - ((2 * v710) & 0xC25ADB90) + 1630367176) ^ v680;
  LODWORD(STACK[0x6E0]) = v693 ^ v692 ^ (v711 - ((2 * v711) & 0x596FDC4E) - 1397232089);
  v712 = (((v655 << 11) ^ (v655 << 12) ^ 0xBA664000)
        - ((2 * ((v655 << 11) ^ (v655 << 12) ^ 0xBA664000)) & 0x154B3000)
        - 1968857205) ^ v695;
  v713 = v654 ^ v343 ^ 0x411B3FAD ^ (v712 - ((2 * v712) & 0x8F538F4E) - 945174617);
  v714 = v699 ^ v697 ^ (v713 - ((2 * v713) & 0xF2982B04) - 112454270);
  v715 = ((v701 ^ 0x4D396052 ^ v714) + (v701 ^ 0x6982E2C5)) ^ ((v714 ^ 0x24BB8296) + 1);
  v716 = (v714 ^ 0xF463CB5E ^ (v715 - ((2 * v715) & 0x5E4F6C6E) + 791131703)) + (v701 ^ 0x6982E2C4);
  v717 = (((v654 >> 21) ^ (v654 >> 20) ^ 0xC5E) - ((2 * ((v654 >> 21) ^ (v654 >> 20) ^ 0xC5E)) & 0xACA) - 1046330011) ^ LODWORD(STACK[0x6DC]);
  v718 = (v717 - ((2 * v717) & 0x18578A68) + 1277936948) ^ v682;
  v719 = (v718 - ((2 * v718) & 0x5FF2883E) - 268876769) ^ v684;
  v720 = (((v654 ^ v343) << 31) | 0x44200000) ^ (v655 << 21) ^ (v655 << 19) ^ (v655 << 18) ^ v716;
  v721 = (v720 - 2 * (v720 & 0x7EB1FD9F ^ v716 & 4) + 2125594011) ^ v703;
  v722 = (v721 - ((2 * v721) & 0xDFE85442) + 1878272545) ^ v705;
  v723 = (v722 - ((2 * v722) & 0x14798B6C) - 1975728714) ^ v707;
  v724 = (v723 - ((2 * v723) & 0x6F7FA85A) - 1212165075) ^ v709;
  v725 = (v654 >> 14) ^ (v654 >> 13) ^ (v654 >> 11) ^ ((v654 ^ v343) >> 1) ^ LODWORD(STACK[0x6B8]) ^ (v719 - 718504231 + (~(2 * v719) | 0xD5A7024D) + 1);
  v726 = ((LODWORD(STACK[0x6D0]) ^ 0x4347EE29 ^ v725)
        - ((2 * (LODWORD(STACK[0x6D0]) ^ 0x4347EE29 ^ v725)) & 0x25A68F3C)
        - 1831647330) ^ LODWORD(STACK[0x630]);
  v727 = LODWORD(STACK[0x624]) ^ (v726 - ((2 * v726) & 0x8C4103C0) - 970948128);
  v728 = v674 ^ LODWORD(STACK[0x618]);
  v729 = v728 ^ 0xDBCDD49;
  v730 = STACK[0x680];
  v731 = (v727 >> 21) ^ (v725 >> 30) ^ (v727 >> 27);
  v732 = (32 * (LODWORD(STACK[0x680]) ^ 0x54D)) ^ (4 * LODWORD(STACK[0x680])) ^ ((LODWORD(STACK[0x680]) ^ 0x54D) << 11) ^ (4 * v727) ^ (32 * v727) ^ (v727 << 11) ^ (4 * v731) ^ (v724 - ((2 * v724) & 0xC25ADB90) + 1630367176);
  v733 = ((v674 >> 30) | 0xA9292750) ^ (v674 >> 29) ^ 0x509C483F;
  LODWORD(STACK[0x5F8]) = v733;
  v734 = LODWORD(STACK[0x610]) ^ (32 * v731) ^ (v731 << 11) ^ 0xF32C6028 ^ v732;
  v735 = v730 ^ 0xB3E42F32 ^ (v734 - 2 * (v734 & 0x33E42F1B ^ v732 & 0x13) - 1276891384);
  v736 = LODWORD(STACK[0x6A0]) ^ 0x9018DAB2 ^ (v735 - ((2 * v735) & 0xE5BD1892) - 220296119);
  v737 = v731 ^ v727 ^ (v736 - ((2 * v736) & 0xEED45106) - 144037757);
  LODWORD(STACK[0x6B8]) = v737;
  v738 = (((v728 ^ 0xDBCDD49) << 13) ^ 0xC6716000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 13) ^ 0xC6716000)) & 0xEE248000)
       + 1997689138;
  LODWORD(STACK[0x680]) = v738;
  v739 = ((((v728 ^ 0xDBCDD49) << 10) ^ 0xD8CE2C00)
        - ((2 * (((v728 ^ 0xDBCDD49) << 10) ^ 0xD8CE2C00)) & 0xEE24A000)
        + 1997689138) ^ v738;
  v740 = 8 * (v728 ^ 0xDBCDD49);
  LODWORD(STACK[0x618]) = v740;
  v741 = ((v728 ^ 0xDBCDD49) << 7) ^ ((v728 ^ 0xDBCDD49) << 8) ^ ((v728 ^ 0xDBCDD49) << 15) ^ v740 ^ ((((v728 ^ 0xDBCDD49) << 16) ^ 0x338B0000) - ((2 * (((v728 ^ 0xDBCDD49) << 16) ^ 0x338B0000)) & 0xB1800000) + 1489006578);
  v742 = (((v728 ^ 0xDBCDD49) << 11) ^ 0xB19C5800)
       - ((2 * (((v728 ^ 0xDBCDD49) << 11) ^ 0xB19C5800)) & 0xF06DE000)
       + 2016867803;
  LODWORD(STACK[0x624]) = v742;
  v743 = (((v728 ^ 0xDBCDD49) << 18) ^ 0xCE2C0000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 18) ^ 0xCE2C0000)) & 0xB1800000)
       + 1489006578;
  LODWORD(STACK[0x630]) = v743;
  v744 = v741 ^ v743 ^ v742 ^ (v739 - ((2 * v739) & 0xF06DEBB6) + 2016867803);
  v745 = (v728 << 24) ^ (v728 << 25) ^ (v728 << 20) ^ 0x957E52D8 ^ v744;
  v746 = v745 - 2 * (v745 & 0x60B327BF ^ v744 & 2);
  v747 = ((4 * (v728 ^ 0xDBCDD49)) ^ 0x75D8CE2C)
       - ((2 * ((4 * (v728 ^ 0xDBCDD49)) ^ 0x75D8CE2C)) & 0xC1664F78)
       + 1622353853;
  LODWORD(STACK[0x608]) = v747;
  v748 = ((v746 + 1622353853) ^ v747) - ((2 * ((v746 + 1622353853) ^ v747)) & 0xB16E00B8);
  v749 = (((v728 ^ 0xDBCDD49) << 21) ^ 0x71600000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 21) ^ 0x71600000)) & 0xB1400000)
       + 1488388188;
  LODWORD(STACK[0x610]) = v749;
  v750 = ((v748 + 1488388188) ^ v749) - ((2 * ((v748 + 1488388188) ^ v749)) & 0x4136CA82);
  v751 = (((v728 ^ 0xDBCDD49) << 22) ^ 0xE2C00000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 22) ^ 0xE2C00000)) & 0x41000000)
       + 547054913;
  LODWORD(STACK[0x60C]) = v751;
  v752 = ((v750 + 547054913) ^ v751) - ((2 * ((v750 + 547054913) ^ v751)) & 0x7ACCFF98);
  LODWORD(STACK[0x6DC]) = v728;
  v753 = (v674 >> 14) ^ (v674 >> 12) ^ HIBYTE(v674) ^ (v674 >> 25) ^ (v674 >> 22) ^ (v674 >> 17) ^ HIWORD(v674) ^ (v728 >> 7) ^ (v728 >> 8) ^ 0xF56922;
  v754 = (v753 - ((2 * v753) & 0x736ADED8) - 105549972) ^ v733;
  LODWORD(STACK[0x5F0]) = v674 >> 21;
  v755 = (v754 - ((2 * v754) & 0xC029276) + 1174489403) ^ (v674 >> 21);
  v756 = (v674 >> 19) ^ 0x1B76DD64;
  LODWORD(STACK[0x5F4]) = v756;
  v757 = ((v755 ^ 0x46014BBD) - 2 * ((v755 ^ 0x46014BBD) & 0x1B76D77F ^ v755 & 2) + 460773245) ^ v756;
  v758 = (v674 >> 11) ^ 0x40A13B53;
  LODWORD(STACK[0x5B8]) = v758;
  v759 = (v757 - ((2 * v757) & 0x8156441C) + 1084957198) ^ v758;
  v760 = (v728 >> 10) ^ 0x5489BBB6;
  LODWORD(STACK[0x5A0]) = v760;
  v761 = (v759 - ((2 * v759) & 0xA93B121A) + 1419610381) ^ v760;
  v762 = (v728 >> 9) ^ 0xE5D65033;
  LODWORD(STACK[0x59C]) = v762;
  v763 = (v761 - ((2 * v761) & 0xCBFC6A88) - 436325052) ^ v762;
  v764 = (((v728 ^ 0xDBCDD49) << 23) ^ 0xC5800000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 23) ^ 0xC5800000)) & 0x7A000000)
       - 1117356084;
  LODWORD(STACK[0x600]) = v764;
  v765 = (((v728 ^ 0xDBCDD49) << 26) ^ 0x2C000000)
       - ((2 * (((v728 ^ 0xDBCDD49) << 26) ^ 0x2C000000)) & 0x55555555)
       - 1429289057;
  LODWORD(STACK[0x5FC]) = v765;
  v766 = (((v752 - 1117356084) ^ v764) - ((2 * ((v752 - 1117356084) ^ v764)) & 0x559D8F3E) - 1429289057) ^ v765;
  v767 = LODWORD(STACK[0x5CC]) ^ (LODWORD(STACK[0x5D0]) >> 21);
  v768 = LODWORD(STACK[0x6B4]) ^ LODWORD(STACK[0x638]) ^ (v577 << 19) ^ (v577 << 12) ^ (v577 << 31) ^ LODWORD(STACK[0x5D0]) ^ (32 * LODWORD(STACK[0x5D0])) ^ (LODWORD(STACK[0x5D0]) << 11) ^ (4 * v767) ^ (32 * v767) ^ (v767 << 11) ^ LODWORD(STACK[0x5D4]);
  v769 = (((v728 ^ 0xDBCDD49) << 27) ^ 0x58000000) - ((v728 << 28) & 0x40000000) - 1570090017;
  LODWORD(STACK[0x638]) = v769;
  v770 = ((v728 ^ 0xDBCDD49) >> 6) ^ ((v728 ^ 0xDBCDD49) >> 5);
  v771 = v770 ^ (v763 - ((2 * v763) & 0x49D7896E) + 619431095);
  v772 = v768 ^ v769 ^ (v766 - ((2 * v766) & 0x44D4A7BE) - 1570090017) ^ (4 * v771) ^ (32 * v771) ^ (v771 << 11) ^ (4 * (v771 >> 21)) ^ (32 * (v771 >> 21)) ^ (v771 >> 21 << 11) ^ 0x6DE6AC15;
  v773 = (v772 - ((2 * v772) & 0xEF4957E4) + 2007280626) ^ LODWORD(STACK[0x5A4]);
  v774 = STACK[0x5C0];
  v775 = (v773 - ((2 * v773) & 0xB2A3258) - 2053826260) ^ LODWORD(STACK[0x5C0]);
  v776 = STACK[0x5C8];
  v777 = (((v775 - ((2 * v775) & 0xEED1EAAC) + 2003367254) ^ v577 ^ 0x68C05124)
        - ((2 * ((v775 - ((2 * v775) & 0xEED1EAAC) + 2003367254) ^ v577 ^ 0x68C05124)) & 0x533F3DD6)
        + 698326763) ^ LODWORD(STACK[0x5C8]);
  v778 = STACK[0x5B0];
  v779 = (v777 - ((2 * v777) & 0xCA7E7E8) + 106165236) ^ LODWORD(STACK[0x5B0]);
  v780 = LODWORD(STACK[0x678]) + 869636404;
  v781 = (v779 - ((2 * v779) & 0x67AB3268) + 869636404) ^ v780;
  v782 = STACK[0x5C4];
  v783 = (v781 - ((2 * v781) & 0x3D9027C2) - 1631054879) ^ LODWORD(STACK[0x5C4]);
  v784 = (v783 - ((2 * v783) & 0x1BFE7CA2) + 234831441) ^ LODWORD(STACK[0x5B4]);
  v785 = STACK[0x5AC];
  v786 = (v784 - ((2 * v784) & 0xAD8620B0) - 691859368) ^ LODWORD(STACK[0x5AC]);
  v787 = (v786 - ((2 * v786) & 0xDEC721E6) + 1868796147) ^ LODWORD(STACK[0x5A8]);
  v788 = LODWORD(STACK[0x688]) + 2081313121;
  v789 = (v787 - ((2 * v787) & 0xF81CA2C2) + 2081313121) ^ v788;
  LODWORD(v343) = STACK[0x634];
  v790 = (v789 - ((2 * v789) & 0x46F60DE8) + 595265268) ^ LODWORD(STACK[0x634]);
  v791 = v790 - ((2 * v790) & 0x4DC043CE);
  v792 = LODWORD(STACK[0x690]) - 1495260697;
  v793 = v767 ^ 0xAD11CA4B ^ (((v791 - 1495260697) ^ v792)
                            - ((2 * ((v791 - 1495260697) ^ v792)) & 0x5A239488)
                            - 1391343036);
  v794 = (v771 >> 21) ^ v771 ^ (v793 - ((2 * v793) & 0x7D1C6BAA) + 1049507285);
  v795 = STACK[0x7E8];
  LODWORD(STACK[0x690]) = STACK[0x7EC];
  v796 = v794 ^ (-1663319554 - 1673081951 * v795);
  v797 = (_BYTE *)STACK[0x710];
  v797[1632] = (HIBYTE(v796) ^ 0x19) - 2 * ((HIBYTE(v796) ^ 0x19) & 0x7C ^ HIBYTE(v796) & 4) + 120;
  v798 = v737 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7A8]));
  v797[1370] = BYTE2(v798) ^ 0xCE;
  v797[1537] = (BYTE1(v796) ^ 0x99) - ((2 * (BYTE1(v796) ^ 0x99)) & 0xF0) + 120;
  v797[1275] = v798 ^ 0x8F;
  v799 = STACK[0x728];
  LODWORD(STACK[0x6A0]) = STACK[0x72C];
  v800 = STACK[0x6E0];
  v801 = LODWORD(STACK[0x6E0]) ^ (-1663319554 - 1673081951 * v799);
  LODWORD(STACK[0x6B4]) = v801;
  v802 = v800 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7AC]));
  *(_BYTE *)(STACK[0x718] + (v801 & 0x20A ^ 0x200 | v801 & 0x20A ^ 0xAu)) = HIBYTE(v802) ^ 0x66;
  v803 = LODWORD(STACK[0x668]) ^ (LODWORD(STACK[0x6C0]) >> 26) ^ LODWORD(STACK[0x6A8]) ^ ((LODWORD(STACK[0x6C0]) >> 31) | 0x3ED51EE) ^ (v577 >> 3) ^ LODWORD(STACK[0x5E0]) ^ (((LODWORD(STACK[0x6C0]) >> 15) ^ 0x3F51) - 2 * (((LODWORD(STACK[0x6C0]) >> 15) ^ 0x3F51) & 0x1AC9F ^ (LODWORD(STACK[0x6C0]) >> 15) & 0xA) - 834687851);
  v804 = (v803 - ((2 * v803) & 0x49766288) - 457494204) ^ LODWORD(STACK[0x648]);
  v805 = (v804 - 774037009 + (~(2 * v804) | 0x5C45BC21) + 1) ^ LODWORD(STACK[0x628]);
  v806 = (v805 - ((2 * v805) & 0xFD45DBF0) + 2124606968) ^ LODWORD(STACK[0x62C]);
  v807 = (v806 + 2052072268 + (~(2 * v806) | 0xB5FB967) + 1) ^ LODWORD(STACK[0x670]);
  v808 = (v807 - ((2 * v807) & 0x51DE55D2) + 686762729) ^ LODWORD(STACK[0x644]);
  v809 = (v808 - ((2 * v808) & 0x8419D3D8) + 1108142572) ^ LODWORD(STACK[0x640]);
  v810 = (v809 - ((2 * v809) & 0xB933BAC2) + 1553587553) ^ LODWORD(STACK[0x5EC]);
  v811 = LODWORD(STACK[0x698]) ^ (v810 - ((2 * v810) & 0x25D09558) - 1830270292);
  v812 = (v811 >> 21) ^ (v811 >> 27);
  v813 = (2 * v577) ^ (v577 << 6) ^ (v577 << 17) ^ (v577 << 29) ^ (4 * v811) ^ (32 * v811) ^ (v811 << 11) ^ (4 * v812) ^ (32 * v812) ^ (v812 << 11) ^ 0x31757444;
  v814 = (v813 - ((2 * v813) & 0xEED1EAAC) + 2003367254) ^ v577 ^ 0x68C05124;
  v815 = (v814 - ((2 * v814) & 0x4E689EC6) - 1489744029) ^ LODWORD(STACK[0x5E8]);
  v816 = (v815 - ((2 * v815) & 0xFBC5A83C) - 35466210) ^ LODWORD(STACK[0x614]);
  v817 = (v816 - ((2 * v816) & 0xB2A3258) - 2053826260) ^ v774;
  v818 = (v817 - ((2 * v817) & 0x533F3DD6) + 698326763) ^ v776;
  v819 = (v818 - ((2 * v818) & 0xCA7E7E8) + 106165236) ^ v778;
  v820 = (v819 - ((2 * v819) & 0x67AB3268) + 869636404) ^ v780;
  v821 = (v820 - ((2 * v820) & 0x3D9027C2) - 1631054879) ^ v782;
  v822 = (v821 - ((2 * v821) & 0xAD8620B0) - 691859368) ^ v785;
  v823 = (v822 - ((2 * v822) & 0xA3C43F84) - 773709886) ^ LODWORD(STACK[0x5DC]);
  v824 = (v823 - ((2 * v823) & 0x697DA0EC) - 1262563210) ^ LODWORD(STACK[0x5D8]);
  v825 = (v824 + 2081313121 + (~(2 * v824) | 0x7E35D3D) + 1) ^ v788;
  v826 = (v825 + 595265268 + (~(2 * v825) | 0xB909F217) + 1) ^ v343;
  v827 = (v826 - ((2 * v826) & 0x4DC043CE) - 1495260697) ^ v792;
  v828 = (v827 - ((2 * v827) & 0x4E83286) + 41163075) ^ v811;
  v829 = (LODWORD(STACK[0x6DC]) ^ 0x50CAEEC2u) >> (((STACK[0x6D0] & 0x1E ^ 0x10) + (STACK[0x6D0] & 0x1E ^ 0xE)) & 0x2E);
  v830 = v829 - ((2 * v829) & 0xDD354992) + 1855628489;
  v831 = (v674 >> 27) ^ (v674 >> 28) ^ (v674 >> 18) ^ (v674 >> 15) ^ (v729 >> 2) ^ (v729 >> 4) ^ (((v674 >> 13) ^ 0x28657)
                                                                                                - ((2
                                                                                                  * ((v674 >> 13) ^ 0x28657)) & 0x54992)
                                                                                                + 1855628489) ^ v830;
  v832 = ((LODWORD(STACK[0x5F0]) ^ 0x128A58F4 ^ v831)
        - ((2 * (LODWORD(STACK[0x5F0]) ^ 0x128A58F4 ^ v831)) & 0xF36ADED8)
        - 105549972) ^ LODWORD(STACK[0x5F8]);
  v833 = (v832 - ((2 * v832) & 0x36EDAEFA) + 460773245) ^ LODWORD(STACK[0x5F4]);
  v834 = (v833 - ((2 * v833) & 0x8156441C) + 1084957198) ^ LODWORD(STACK[0x5B8]);
  v835 = (v834 - ((2 * v834) & 0xA93B121A) + 1419610381) ^ LODWORD(STACK[0x5A0]);
  v836 = (v835 - ((2 * v835) & 0xCBFC6A88) - 436325052) ^ LODWORD(STACK[0x59C]);
  v837 = v770 ^ 0x705CA5F6 ^ (v836 - ((2 * v836) & 0xE56E28D4) + 1924600938);
  v838 = v812 ^ ((v828 ^ 0x38E9304) - 2 * ((v828 ^ 0x38E9304) & 0x135BE6FC ^ v828 & 0x10) + 324789996) ^ (LODWORD(STACK[0x6DC]) << 30) ^ (16 * v729) ^ (32 * v729) ^ (v729 << 14) ^ (v729 << 17) ^ (v729 << 19) ^ (v729 << 28) ^ LODWORD(STACK[0x618]) ^ (4 * v837) ^ (32 * v837) ^ 0xED8F8993;
  v839 = (v838 - ((2 * v838) & 0xC1664F7A) + 1622353853) ^ LODWORD(STACK[0x608]);
  v840 = (v839 - ((2 * v839) & 0xF06DEBB6) + 2016867803) ^ LODWORD(STACK[0x624]);
  v841 = (v840 - ((2 * v840) & 0xEE24A264) + 1997689138) ^ LODWORD(STACK[0x680]);
  v842 = (v841 - ((2 * v841) & 0xB180DFE4) + 1489006578) ^ LODWORD(STACK[0x630]);
  v843 = (v842 - ((2 * v842) & 0xB16E00B8) + 1488388188) ^ LODWORD(STACK[0x610]);
  v844 = (v843 - ((2 * v843) & 0x4136CA82) + 547054913) ^ LODWORD(STACK[0x60C]);
  v845 = (v844 - ((2 * v844) & 0x7ACCFF98) - 1117356084) ^ LODWORD(STACK[0x600]);
  v846 = (v845 - ((2 * v845) & 0x559D8F3E) - 1429289057) ^ LODWORD(STACK[0x5FC]);
  v847 = v837 ^ LODWORD(STACK[0x638]) ^ (v846 - ((2 * v846) & 0x44D4A7BE) - 1570090017);
  v848 = (v831 >> 27) ^ (v830 >> 30) ^ (v837 >> 21);
  v849 = (4 * v848) ^ (v837 << 11) ^ ((v848 ^ 8) << ((v847 & 5 ^ 1) + (v847 & 5 ^ 4)));
  v850 = v847 ^ v848 ^ ((v849 ^ (v848 << 11) ^ 0xAEC63020)
                      - 2 * ((v849 ^ (v848 << 11) ^ 0xAEC63020) & 0x5F5B63F3 ^ v849 & 0x10)
                      - 547658781);
  v797[2063] = (BYTE2(v796) ^ 0xFB) - ((2 * (BYTE2(v796) ^ 0xFB)) & 0xF0) + 120;
  v797[1801] = BYTE1(v798) ^ 0x3F;
  v797[1896] = HIBYTE(v798) ^ 0x3D;
  v851 = STACK[0x6B8];
  v852 = LODWORD(STACK[0x6B8]) ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x784]));
  v853 = v852;
  LODWORD(STACK[0x6D0]) = v852;
  v854 = ((2 * v852) ^ 0x69) + (v852 ^ 0x4B);
  v797[1968] = v796 ^ 0x73;
  v855 = v850 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x690]));
  v797[1442] = (HIBYTE(v855) ^ 0xDE) - ((2 * (HIBYTE(v855) ^ 0xDE)) & 0xF0) + 120;
  v797[1347] = (BYTE1(v855) ^ 0x3B) + ((v855 >> 7) & 0xF0 ^ 0x8F) - 7;
  v797[1873] = (BYTE2(v855) ^ 0x2E) - 2 * ((BYTE2(v855) ^ 0x2E) & 0xF9 ^ BYTE2(v855) & 1) + 120;
  v856 = ((8 * ((v854 | v853 ^ 1) & 0xA5)) | (4 * ((v854 | v853 ^ 1) & 0xA5))) ^ HIWORD(v802) ^ 0xFFFFFFD7;
  v797[1611] = BYTE1(v802) ^ 0xF9;
  v797[2137] = v856 - ((2 * v856) & 0xF0) + 120;
  v797[2042] = v802 ^ 0x2A;
  v857 = STACK[0x7F4];
  v858 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7F0]));
  v797[1778] = v855 ^ 0x5D;
  v859 = STACK[0x7B4];
  v860 = v851 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B0]));
  v797[1516] = HIBYTE(v860) ^ 0x3D;
  v797[1947] = BYTE2(v860) ^ 0xCE;
  v797[1683] = (BYTE2(v858) ^ 0xFB) - ((2 * (BYTE2(v858) ^ 0xFB)) & 0xF0) + 120;
  v797[1252] = (HIBYTE(v858) ^ 0x19) - 2 * ((HIBYTE(v858) ^ 0x19) & 0x7E ^ HIBYTE(v858) & 6) + 120;
  v797[2114] = (BYTE1(v858) ^ 0x19) + ((v858 >> 7) & 0xF0 ^ 0xCF) - 7;
  v797[1421] = BYTE1(v860) ^ 0x3F;
  v797[1852] = v860 ^ 0x8F;
  v861 = v850 ^ (-1663319554 - 1673081951 * v857);
  v797[1588] = v858 ^ 0x73;
  v797[2019] = (HIBYTE(v861) ^ 0xDE) - ((2 * (HIBYTE(v861) ^ 0xDE)) & 0xF0) + 120;
  v862 = STACK[0x6E0];
  v863 = LODWORD(STACK[0x6E0]) ^ (-1663319554 - 1673081951 * v859);
  v797[1326] = HIBYTE(v863) ^ 0x66;
  v797[1757] = BYTE2(v863) ^ 0x13;
  v864 = STACK[0x7FC];
  v865 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7F8]));
  v797[1493] = (BYTE2(v861) ^ 0x2E) - ((2 * (BYTE2(v861) ^ 0x2E)) & 0xF0) + 120;
  v797[1924] = (BYTE1(v861) ^ 0x3B) + ((v861 >> 7) & 0xF0 ^ 0x8F) - 7;
  v797[1231] = BYTE1(v863) ^ 0xF9;
  v797[1662] = v863 ^ 0x2A;
  v866 = STACK[0x7BC];
  v867 = v851 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B8]));
  v797[1567] = BYTE2(v867) ^ 0xCE;
  v797[1829] = (HIBYTE(v865) ^ 0x19) - 2 * ((HIBYTE(v865) ^ 0x19) & 0x7E ^ HIBYTE(v865) & 6) + 120;
  v797[2093] = HIBYTE(v867) ^ 0x3D;
  v797[1472] = v867 ^ 0x8F;
  v797[1398] = v861 ^ 0x5D;
  v797[1208] = v865 ^ 0x73;
  v868 = v850 ^ (-1673081951 * v864 - 1663319554);
  v797[1303] = (BYTE2(v865) ^ 0xFB) - ((2 * (BYTE2(v865) ^ 0xFB)) & 0xF0) + 120;
  v797[1639] = (HIBYTE(v868) ^ 0xDE) + (~(2 * (HIBYTE(v868) ^ 0xDE)) | 0xF) + 121;
  v797[1998] = BYTE1(v867) ^ 0x3F;
  v797[1734] = (BYTE1(v865) ^ 0x99) - ((2 * (BYTE1(v865) ^ 0x99)) & 0xF0) + 120;
  v869 = v862 ^ (-1673081951 * v866 - 1663319554);
  v797[1903] = HIBYTE(v869) ^ 0x66;
  v870 = STACK[0x7C4];
  v871 = v851 ^ (-1673081951 * LODWORD(STACK[0x7C0]) - 1663319554);
  v872 = STACK[0x770];
  LODWORD(STACK[0x688]) = STACK[0x774];
  v873 = v851 ^ (-1673081951 * v872 - 1663319554);
  LODWORD(STACK[0x6C0]) = v873;
  v797[1377] = ((((v873 & 0x5F ^ 0x4B | v873 & 0x5F ^ 0x14) & (v871 & 0x7F ^ 0x34 | v871 & 0x7F ^ 0x4B)) + 93) ^ BYTE2(v869) ^ 0xD7)
             - ((2
               * ((((v873 & 0x5F ^ 0x4B | v873 & 0x5F ^ 0x14) & (v871 & 0x7F ^ 0x34 | v871 & 0x7F ^ 0x4B)) + 93) ^ BYTE2(v869) ^ 0xD7)) & 0xF0)
             + 120;
  v797[1808] = BYTE1(v869) ^ 0xF9;
  v797[1544] = (BYTE1(v868) ^ 0xBB) + (~(2 * (BYTE1(v868) ^ 0xBB)) | 0xF) + 121;
  v797[1713] = HIBYTE(v871) ^ 0x3D;
  v874 = STACK[0x804];
  v875 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x800]));
  v797[2070] = (BYTE2(v868) ^ 0x2E) - ((2 * (BYTE2(v868) ^ 0x2E)) & 0xF0) + 120;
  v797[1282] = v869 ^ 0x2A;
  v797[1975] = v868 ^ 0x5D;
  v797[1618] = BYTE1(v871) ^ 0x3F;
  v797[1449] = (HIBYTE(v875) ^ 0x19) - ((2 * (HIBYTE(v875) ^ 0x19)) & 0xF0) + 120;
  v876 = v862 ^ (-1663319554 - 1673081951 * v870);
  v797[1523] = HIBYTE(v876) ^ 0x66;
  v797[1354] = (BYTE1(v875) ^ 0x99) - ((2 * (BYTE1(v875) ^ 0x99)) & 0xF0) + 120;
  v877 = v850 ^ (-1663319554 - 1673081951 * v874);
  v797[1187] = BYTE2(v871) ^ 0xCE;
  v797[1880] = (BYTE2(v875) ^ 0xFB) - ((2 * (BYTE2(v875) ^ 0xFB)) & 0xF0) + 120;
  v797[1785] = v875 ^ 0x73;
  v797[2049] = v871 ^ 0x8F;
  v797[1690] = (BYTE2(v877) ^ 0x2E) - 2 * ((BYTE2(v877) ^ 0x2E) & 0xF9 ^ BYTE2(v877) & 1) + 120;
  v797[1259] = (HIBYTE(v877) ^ 0xDE) - ((2 * (HIBYTE(v877) ^ 0xDE)) & 0xF0) + 120;
  v797[1428] = BYTE1(v876) ^ 0xF9;
  v797[1954] = BYTE2(v876) ^ 0x13;
  v797[2121] = (BYTE1(v877) ^ 0xBB) + (~(2 * (BYTE1(v877) ^ 0xBB)) | 0xF) + 121;
  v797[1859] = v876 ^ 0x2A;
  v878 = STACK[0x80C];
  v879 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x808]));
  v880 = v851 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7C8]));
  v797[1333] = HIBYTE(v880) ^ 0x3D;
  v797[1500] = (BYTE2(v879) ^ 0xFB) - ((2 * (BYTE2(v879) ^ 0xFB)) & 0xF0) + 120;
  v797[1595] = v877 ^ 0x5D;
  v881 = STACK[0x820];
  LODWORD(STACK[0x698]) = STACK[0x824];
  v882 = v794 ^ (-1663319554 - 1673081951 * v881);
  LODWORD(STACK[0x6A8]) = v882;
  v797[2026] = (HIBYTE(v879) ^ 0x19) - 2 * ((HIBYTE(v879) ^ 0x19) & 0x7C ^ HIBYTE(v879) & 4) + 120;
  v797[1764] = BYTE2(v880) ^ 0xCE;
  v797[1238] = BYTE1(v880) ^ 0x3F;
  v883 = STACK[0x718];
  *(_BYTE *)(v883 + (((v882 & 0x8C2EB ^ 0x8800B) + (v882 & 0x8C2EB ^ 0x42E0u)) & 0x1007FBLL)) = (BYTE1(v879) ^ 0x99)
                                                                                              - 2
                                                                                              * ((BYTE1(v879) ^ 0x99) & 0x7A ^ BYTE1(v879) & 2)
                                                                                              + 120;
  v884 = v850 ^ (-1673081951 * v878 - 1663319554);
  v797[1215] = v884 ^ 0x5D;
  v885 = v862 ^ (-1673081951 * LODWORD(STACK[0x6A0]) - 1663319554);
  LODWORD(STACK[0x6A0]) = v885;
  v797[1310] = (BYTE2(v884) ^ 0x2E) - ((2 * (BYTE2(v884) ^ 0x2E)) & 0xF0) + 120;
  v886 = v851 ^ (-1673081951 * LODWORD(STACK[0x7D0]) - 1663319554);
  *(_BYTE *)(v883 + (((v885 & 0xC8 ^ 0xC8) + (v885 & 0xC8)) & 0xF8)) = BYTE2(v886) ^ 0xCE;
  v797[1405] = v879 ^ 0x73;
  v797[1669] = v880 ^ 0x8F;
  v797[1836] = (HIBYTE(v884) ^ 0x5E) + ((v884 >> 23) & 0xF0 ^ 0x4F) - 7;
  v887 = STACK[0x814];
  v888 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x810]));
  v797[1741] = (BYTE1(v884) ^ 0xBB) - 2 * ((BYTE1(v884) ^ 0xBB) & 0x7C ^ BYTE1(v884) & 4) + 120;
  v889 = v862 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7CC]));
  v797[1574] = BYTE2(v889) ^ 0x13;
  v797[1479] = v889 ^ 0x2A;
  v797[1910] = HIBYTE(v886) ^ 0x3D;
  v797[1646] = (HIBYTE(v888) ^ 0x19) - ((2 * (HIBYTE(v888) ^ 0x19)) & 0xF0) + 120;
  v797[1815] = BYTE1(v886) ^ 0x3F;
  v797[1289] = v886 ^ 0x8F;
  v797[1551] = (BYTE1(v888) ^ 0x99) - ((2 * (BYTE1(v888) ^ 0x99)) & 0xF0) + 120;
  *(_BYTE *)(v883 + (v794 & 0x31E ^ 0x10A | v794 & 0x31E ^ 0x214u)) = v888 ^ 0x73;
  v797[2005] = BYTE1(v889) ^ 0xF9;
  v797[2100] = HIBYTE(v889) ^ 0x66;
  v797[2077] = (BYTE2(v888) ^ 0xFB) - ((2 * (BYTE2(v888) ^ 0xFB)) & 0xF0) + 120;
  v890 = v850 ^ (-1663319554 - 1673081951 * v887);
  LOBYTE(v888) = (BYTE2(v890) ^ 0x2E) - ((2 * (BYTE2(v890) ^ 0x2E)) & 0xF0);
  v797[1456] = (HIBYTE(v890) ^ 0xDE) - ((2 * (HIBYTE(v890) ^ 0xDE)) & 0xF0) + 120;
  v797[1361] = (BYTE1(v890) ^ 0xBB) - ((2 * (BYTE1(v890) ^ 0xBB)) & 0xF0) + 120;
  v891 = v862 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7D4]));
  v797[1720] = HIBYTE(v891) ^ 0x66;
  v797[1194] = BYTE2(v891) ^ 0x13;
  v797[1792] = v890 ^ 0x5D;
  v797[2056] = v891 ^ 0x2A;
  v797[1625] = BYTE1(v891) ^ 0xF9;
  v892 = STACK[0x81C];
  v893 = v794 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x818]));
  v797[1887] = v888 + 120;
  v894 = v851 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7D8]));
  v797[1961] = BYTE2(v894) ^ 0xCE;
  v797[2128] = (BYTE1(v893) ^ 0x99) - 2 * ((BYTE1(v893) ^ 0x99) & 0x7E ^ BYTE1(v893) & 6) + 120;
  v797[1530] = HIBYTE(v894) ^ 0x3D;
  v797[1866] = v894 ^ 0x8F;
  v895 = (v893 ^ 0x19FB990Bu) >> (((((HIBYTE(v894) ^ 0xF9) - 2 * ((HIBYTE(v894) ^ 0xF9) & 0x1A ^ HIBYTE(v894) & 2) + 56) ^ HIBYTE(v894) ^ 0x3D) & 0x3E ^ 0xFD)
                                + 79);
  v797[1697] = v895 - ((2 * v895) & 0xF0) + 120;
  v797[1435] = BYTE1(v894) ^ 0x3F;
  v797[1602] = v893 ^ 0x73;
  v896 = v850 ^ (-1663319554 - 1673081951 * v892);
  v797[1266] = (HIBYTE(v893) ^ 0x19) - 2 * ((HIBYTE(v893) ^ 0x19) & 0x7E ^ HIBYTE(v893) & 6) + 120;
  v797[1507] = (BYTE2(v896) ^ 0x2E) - 2 * ((BYTE2(v896) ^ 0x2E) & 0xF9 ^ BYTE2(v896) & 1) + 120;
  v897 = v862 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7DC]));
  v898 = ((v884 & 0xBC ^ 0x98) + (v884 & 0xBC ^ 0x24)) ^ HIBYTE(v897) ^ 0xFFFFFFA2;
  v797[1340] = v898 - ((2 * v898) & 0xF0) + 120;
  v797[1771] = BYTE2(v897) ^ 0x13;
  v797[1245] = BYTE1(v897) ^ 0xF9;
  v797[2033] = (HIBYTE(v896) ^ 0xDE) - ((2 * (HIBYTE(v896) ^ 0xDE)) & 0xF0) + 120;
  *(_BYTE *)(v883 + (v885 & 0x2F2 ^ 0xE2u) + (unint64_t)(v885 & 0x2F2 ^ 0x210u)) = (BYTE1(v896) ^ 0xBB)
                                                                                        - ((2 * (BYTE1(v896) ^ 0xBB)) & 0xF0)
                                                                                        + 120;
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x658]) + 2146400991;
  LODWORD(STACK[0x690]) = LODWORD(STACK[0x650]) + (STACK[0x654] & 0xEFA197FC);
  v899 = STACK[0x74C];
  LODWORD(STACK[0x678]) = (-1663319554 - 1673081951 * LODWORD(STACK[0x748])) ^ 0xFF5A0FC7;
  v900 = -1673081951 * LODWORD(STACK[0x768])
       - 2
       * ((-1673081951 * LODWORD(STACK[0x768]) + 484164094) & 0x2C9D1F87 ^ (-1673081951 * LODWORD(STACK[0x768])) & 1);
  v901 = (-1663319554 - 1673081951 * LODWORD(STACK[0x788])) ^ 0x388F2DE9;
  v902 = (-1663319554 - 1673081951 * LODWORD(STACK[0x78C])) ^ 0xD0C440CC;
  v903 = -1673081951 * LODWORD(STACK[0x76C]) - ((948803394 * LODWORD(STACK[0x76C]) + 968328188) & 0x593A3F0C);
  v904 = STACK[0x734];
  LODWORD(v343) = -1673081951 * LODWORD(STACK[0x730]) - ((948803394 * LODWORD(STACK[0x730]) + 968328188) & 0xDCA771BA);
  LODWORD(STACK[0x670]) = (-1673081951 * v899 - 1663319554) ^ 0x171162E2;
  LODWORD(STACK[0x668]) = (-1673081951 * v904 - 1663319554) ^ 0xEBF984AA;
  v905 = STACK[0x754];
  LODWORD(STACK[0x658]) = (((948803394 * LODWORD(STACK[0x750])) & 0x39B783FC)
                         + ((-1673081951 * LODWORD(STACK[0x750])) ^ 0x9CDBC1FE)) ^ 0xC597420F;
  LODWORD(STACK[0x654]) = (-1673081951 * v905 - 1663319554) ^ 0x21A45B38;
  v906 = STACK[0x794];
  v907 = (-1673081951 * LODWORD(STACK[0x790]) - 1663319554) ^ 0x2426021;
  LODWORD(STACK[0x650]) = (-1673081951 * LODWORD(STACK[0x688]) - 1663319554) ^ 0xB024420F;
  v908 = STACK[0x73C];
  LODWORD(v883) = -1673081951 * LODWORD(STACK[0x738]) - ((948803394 * LODWORD(STACK[0x738]) + 968328188) & 0xDCA771BA);
  v909 = (-1673081951 * v906 - 1663319554) ^ 0xE6717916;
  v910 = v794 ^ 0x9FE1D75E;
  LODWORD(STACK[0x484]) = v901 ^ v794;
  LODWORD(STACK[0x480]) = v902 ^ v794;
  LODWORD(STACK[0x47C]) = v907 ^ v794;
  LODWORD(STACK[0x478]) = v909 ^ v794;
  v911 = STACK[0x77C];
  v912 = -1673081951 * LODWORD(STACK[0x778])
       - ((948803394 * LODWORD(STACK[0x778]) + 968328188) & 0x593A3F0C)
       - 914824828;
  LODWORD(STACK[0x474]) = v851 ^ 0xD597E4CD ^ (v900 - 914824828);
  LODWORD(STACK[0x470]) = v851 ^ 0xD597E4CD ^ (v903 - 914824828);
  LODWORD(STACK[0x688]) = v851 ^ 0xD597E4CD ^ v912;
  v913 = STACK[0x75C];
  LODWORD(STACK[0x648]) = -1673081951 * LODWORD(STACK[0x758])
                        - ((948803394 * LODWORD(STACK[0x758]) + 968328188) & 0xBD0C112E);
  v914 = -1673081951 * LODWORD(STACK[0x798]) - ((143497026 * LODWORD(STACK[0x798]) + 163021820) & 0xC349CAA);
  v915 = -1673081951 * v908 - ((948803394 * v908 + 968328188) & 0xDCA771BA);
  v916 = -1673081951 * LODWORD(STACK[0x79C]) - ((143497026 * LODWORD(STACK[0x79C]) + 163021820) & 0xC349CAA);
  LODWORD(STACK[0x644]) = -1673081951 * v913 - ((948803394 * v913 + 968328188) & 0xBD0C112E);
  LOBYTE(v862) = 95 * LODWORD(STACK[0x780]) + 1;
  v917 = -1673081951 * LODWORD(STACK[0x780])
       - ((948803394 * LODWORD(STACK[0x780]) + 968328188) & 0x4E6E6A28)
       - 1005390062;
  v918 = STACK[0x7A4];
  v919 = -1673081951 * LODWORD(STACK[0x7A0]) - ((143497026 * LODWORD(STACK[0x7A0]) + 163021820) & 0xC349CAA);
  v920 = -1673081951 * LODWORD(STACK[0x744])
       - ((948803394 * LODWORD(STACK[0x744]) + 968328188) & 0xDCA771BA)
       + 187661019;
  v921 = -1673081951 * LODWORD(STACK[0x740])
       - ((948803394 * LODWORD(STACK[0x740]) + 968328188) & 0xDCA771BA)
       + 187661019;
  v922 = STACK[0x6E0];
  v923 = LODWORD(STACK[0x6E0]) ^ 0xCC848533;
  LODWORD(STACK[0x46C]) = v923 ^ (v343 + 187661019);
  v924 = v923 ^ (v883 + 187661019);
  v925 = v923 ^ (v915 + 187661019);
  LODWORD(STACK[0x468]) = v923 ^ v920;
  LODWORD(STACK[0x464]) = v923 ^ v921;
  LODWORD(v883) = v910 ^ (v914 + 586551379);
  v926 = v910 ^ (v916 + 586551379);
  v927 = v910 ^ (v919 + 586551379);
  LODWORD(v343) = v910 ^ (-1673081951 * v918 - ((143497026 * v918 + 163021820) & 0xC349CAA) + 586551379);
  v928 = v917 ^ 0xDE3DCE5F;
  v929 = *((_DWORD *)&STACK[0x728]
         + ((STACK[0x6DC] & 0x1E ^ 2 | ((v917 & 0xAA) + (v862 & 0xAA)) | STACK[0x6DC] & 0x1E ^ 0x1C)
                           - 125));
  v930 = 948803394 * v929 + 968328188;
  v931 = -1673081951 * LODWORD(STACK[0x7E0]) - 1663319554;
  v932 = -1673081951 * LODWORD(STACK[0x7E4]) - 1663319554;
  v933 = -1673081951 * LODWORD(STACK[0x698]) - 1663319554;
  v934 = -1673081951 * v929;
  v935 = v922;
  v936 = ((2 * (v922 ^ (-1673081951 * LODWORD(STACK[0x828]) - 1663319554))) & 0x7DD67F7A ^ 0x45867B58)
       + (v922 ^ (-1673081951 * LODWORD(STACK[0x828]) - 1663319554) ^ 0x9C3C0253);
  v937 = v934 - (v930 & 0xBD0C112E) + 2070006421;
  v938 = v850 ^ 0xA8B3B2 ^ (LODWORD(STACK[0x648]) + 2070006421);
  v939 = v850 ^ 0xA8B3B2 ^ (LODWORD(STACK[0x644]) + 2070006421);
  v940 = v850 ^ 0xA8B3B2 ^ (-1673081951 * LODWORD(STACK[0x760])
                          - ((948803394 * LODWORD(STACK[0x760]) + 968328188) & 0xBD0C112E)
                          + 2070006421);
  v941 = v850 ^ 0xA8B3B2 ^ (-1673081951 * LODWORD(STACK[0x764])
                          - ((948803394 * LODWORD(STACK[0x764]) + 968328188) & 0xBD0C112E)
                          + 2070006421);
  v942 = v850 ^ 0xA8B3B2 ^ v937;
  v943 = STACK[0x6B8];
  LODWORD(STACK[0x460]) = LODWORD(STACK[0x650]) ^ LODWORD(STACK[0x6B8]);
  v944 = v943 ^ (-1673081951 * v911 - 1663319554);
  LODWORD(STACK[0x45C]) = v928 ^ v943;
  LODWORD(STACK[0x458]) = LODWORD(STACK[0x668]) ^ v935;
  v945 = v935 ^ v932;
  LODWORD(STACK[0x454]) = LODWORD(STACK[0x678]) ^ v850;
  LODWORD(STACK[0x450]) = LODWORD(STACK[0x670]) ^ v850;
  LODWORD(STACK[0x44C]) = LODWORD(STACK[0x658]) ^ v850;
  LODWORD(STACK[0x448]) = LODWORD(STACK[0x654]) ^ v850;
  v946 = v850 ^ v933;
  v947 = STACK[0x6A8];
  v797[1676] = v897 ^ 0x2A;
  v797[1412] = v896 ^ 0x5D;
  v797[1317] = (BYTE2(v947) ^ 0xFB) - ((2 * (BYTE2(v947) ^ 0xFB)) & 0xF0) + 120;
  v797[1843] = ((v947 ^ 0x19FB990B) >> ((v884 & 0x18 ^ 0x18) + (v884 & 0x18)))
             - ((2 * ((v947 ^ 0x19FB990B) >> ((v884 & 0x18 ^ 0x18) + (v884 & 0x18)))) & 0xF0)
             + 120;
  v797[2107] = ((v943 ^ v931) >> 24) ^ 0x3D;
  v797[1748] = (BYTE1(v947) ^ 0x19) + ((v947 >> 7) & 0xF0 ^ 0xCF) - 7;
  v797[1581] = ((v943 ^ v931) >> 16) ^ 0xCE;
  v797[2012] = ((unsigned __int16)(v943 ^ v931) >> 8) ^ 0x3F;
  v797[1222] = v947 ^ 0x73;
  v797[1917] = HIBYTE(v945) ^ 0x66;
  v797[1486] = v943 ^ v931 ^ 0x8F;
  v797[1391] = BYTE2(v945) ^ 0x13;
  v797[1653] = (HIBYTE(v946) ^ 0xDE) - ((2 * (HIBYTE(v946) ^ 0xDE)) & 0xF0) + 120;
  v797[2084] = (BYTE2(v946) ^ 0x2E) - ((2 * (BYTE2(v946) ^ 0x2E)) & 0xF0) + 120;
  v797[1822] = BYTE1(v945) ^ 0xF9;
  v797[1989] = v946 ^ 0x5D;
  v797[1296] = v945 ^ 0x2A;
  v797[1558] = (BYTE1(v946) ^ 0xBB) - ((2 * (BYTE1(v946) ^ 0xBB)) & 0xF0) + 120;
  LODWORD(STACK[0x444]) = (v944 & 0xDB746F5A ^ 0xD9006B4A) + (v944 & 0xDB746F5A ^ 0x2740410);
  LODWORD(STACK[0x440]) = (LODWORD(STACK[0x6D0]) ^ 0xF90AFB4B) - 2138519182;
  LODWORD(STACK[0x43C]) = v927 - 728328166;
  LODWORD(STACK[0x438]) = v926 + 1248174069;
  LODWORD(STACK[0x434]) = LODWORD(STACK[0x6C0]) ^ 0xF90AFB4B;
  LODWORD(STACK[0x430]) = (v944 ^ 0xF90AFB4B) - 1289950347;
  LODWORD(STACK[0x42C]) = LODWORD(STACK[0x688]) - 797553403;
  LODWORD(STACK[0x428]) = v343 - 1292310232;
  LODWORD(STACK[0x424]) = v936 - 14128;
  LODWORD(STACK[0x420]) = v936 - v942 + 514616532;
  LODWORD(STACK[0x41C]) = v924 + 1455973563;
  LODWORD(STACK[0x418]) = LODWORD(STACK[0x6B4]) ^ 0xA2D73DEE;
  LODWORD(STACK[0x414]) = LODWORD(STACK[0x6A0]) ^ 0xA2D73DEE;
  LODWORD(STACK[0x410]) = v925 - 1141486177;
  LODWORD(STACK[0x40C]) = v941 - 1781747346;
  LODWORD(STACK[0x4AC]) = -1916131156;
  LODWORD(STACK[0x408]) = v883 + 1;
  LODWORD(STACK[0x404]) = v940 + 1;
  LODWORD(STACK[0x400]) = v938 + 1;
  LODWORD(STACK[0x3F8]) = v939 + 1;
  LODWORD(STACK[0x3F0]) = -1107296274;
  LODWORD(STACK[0x4C4]) = 1073543550;
  LODWORD(STACK[0x4A8]) = 2143156583;
  LODWORD(STACK[0x4A4]) = -830470634;
  LODWORD(STACK[0x59C]) = -2059415442;
  LODWORD(STACK[0x598]) = 179429;
  LODWORD(STACK[0x594]) = 373131466;
  LODWORD(STACK[0x590]) = 2113915002;
  LODWORD(STACK[0x4CC]) = 120722;
  LODWORD(STACK[0x58C]) = -2098697;
  LODWORD(STACK[0x580]) = 1376708;
  LODWORD(STACK[0x578]) = 2080373615;
  LODWORD(STACK[0x4C8]) = -288233106;
  LODWORD(STACK[0x4C0]) = -8456258;
  LODWORD(STACK[0x4BC]) = 96256;
  LODWORD(STACK[0x4B8]) = 697854275;
  LODWORD(STACK[0x4B4]) = -804987896;
  LODWORD(STACK[0x4B0]) = 1277952;
  LODWORD(STACK[0x3EC]) = 1190533702;
  LODWORD(STACK[0x3E8]) = -1365916540;
  v948 = STACK[0x700];
  v949 = LODWORD(STACK[0x700]) - 1052;
  LODWORD(STACK[0x52C]) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * (v948 ^ 0x2B)) - (v949 ^ ((v948 - 3753) | 0xA8Du) ^ 8)))();
}

uint64_t sub_18CA01BE4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t (*v41)(void);

  v7 = v0 - 2088;
  v8 = v5 - v1 - ((2 * (v5 - v1) + 669419624) & 0x4BA24368) + ((v0 - 2088) ^ 0xB9C4667D);
  v9 = STACK[0x6F4];
  v10 = v9 - v2 - ((2 * (v9 - v2) + 1635801520) & 0xD14C6F7E) - 1721342825;
  v11 = (v8 ^ 0x5A2EDE4B)
      + (v4 ^ 0x4805B793)
      - v1
      - ((2 * ((v8 ^ 0x5A2EDE4B) + (v4 ^ 0x4805B793) - v1) + 1781268730) & 0x4E990C80)
      + 1549960893;
  v12 = ((v6 - 1473301486) ^ 0xA5D121B4 ^ v8) - 44429444 + (~(2 * ((v6 - 1473301486) ^ 0xA5D121B4 ^ v8)) | 0x54BE109);
  v13 = (v11 & 0x65163206 ^ 0x40123006) + (v11 & 0x65163206 ^ 0x25040200);
  v14 = STACK[0x6F8];
  v15 = v14 - v9 - v13 - 1183373575 - ((2 * (v14 - v9 - v13 + 1349355195)) & 0xD213407C);
  LODWORD(STACK[0x550]) = ((LODWORD(STACK[0x41C]) + (v10 ^ 0xF8FCCE09)) ^ 0x7FFDFD7E)
                        - 105911604
                        + ((2 * (LODWORD(STACK[0x41C]) + (v10 ^ 0xF8FCCE09))) & 0xFFFBFAFC);
  v16 = ((2 * (v1 - 1260451728 + (v8 ^ 0xB58BD802))) & 0xDAFD3FFE)
      + ((v1 - 1260451728 + (v8 ^ 0xB58BD802)) ^ 0xED7E9FFF);
  v17 = v16 - ((2 * v16 + 1360571946) & 0xC753DBA8) + 204883177;
  v18 = (((v11 ^ 0xA74C8640) + LODWORD(STACK[0x464])) ^ 0xFFFFFF47)
      + 799898368
      + ((2 * ((v11 ^ 0xA74C8640) + LODWORD(STACK[0x464]))) & 0xFFFFFE8E);
  v19 = (((v12 ^ 0xA92427F2) + LODWORD(STACK[0x468])) ^ 0x7FBEBBB7)
      - 1344832385
      + ((2 * ((v12 ^ 0xA92427F2) + LODWORD(STACK[0x468]))) & 0xFF7D776E);
  v20 = ((2 * (v2 - 2087870904 + (v10 ^ 0xF8FCCE09) + v13)) & 0xFFF7EDDE)
      + ((v2 - 2087870904 + (v10 ^ 0xF8FCCE09) + v13) ^ 0x7FFBF6EF);
  LODWORD(STACK[0x560]) = ((2 * (LODWORD(STACK[0x404]) + (v15 ^ 0x96F65FC1))) & 0xFE31FDE6)
                        + ((LODWORD(STACK[0x404]) + (v15 ^ 0x96F65FC1)) ^ 0x7F18FEF3)
                        - 536880336;
  v21 = LODWORD(STACK[0x410]) + v20;
  v22 = ((2 * (v10 ^ v3)) & 0x71F5CAFA ^ 0x40C08A8A) + (v10 ^ v3 ^ 0x5C9AB038);
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x40C]) - v22;
  v23 = (v11 ^ v8 ^ 0x12C75E42) - 2 * (((v11 ^ v8 ^ 0x12C75E42) + 304886032) & 0x2353E5ED ^ (v11 ^ v8) & 9) + 897586932;
  LODWORD(STACK[0x570]) = ((LODWORD(STACK[0x400]) + (v8 ^ 0x4A7427FD)) ^ 0x6FB8E58F)
                        - 1207976205
                        + ((2 * (LODWORD(STACK[0x400]) + (v8 ^ 0x4A7427FD))) & 0xDF71CB1E);
  LODWORD(STACK[0x54C]) = ((LODWORD(STACK[0x3F8]) + (v17 ^ 0x9C56122B)) ^ 0xFFE9FFBB)
                        + 1608432357
                        + ((2 * (LODWORD(STACK[0x3F8]) + (v17 ^ 0x9C56122B))) & 0xFFD3FF76);
  v24 = v11 ^ 0xC4E56B94 ^ v17;
  v25 = (v12 ^ 0xA92427F2) - v16 + (v12 & 0x4FFA1729 ^ 0xF6DFF8DF) + (v12 & 0x4FFA1729 ^ 0xB925EFF6) - 1485979626 + v24;
  LODWORD(STACK[0x6E0]) = ((2 * v25) & 0xF8B6FFBC) + (v25 ^ 0x7C5B7FDE) - 604522960;
  v26 = (((v20 - 2147219183) ^ v15 ^ 0x6909A03E)
       - 1718251116
       - 2 * (((v20 - 2147219183) ^ v15 ^ 0x6909A03E) & 0x19959195 ^ ((v20 - 2147219183) ^ v15) & 1)) ^ 0x99959194;
  v27 = (STACK[0x3F0] & (2 * (v22 - v20 + 1191252338 + v26))) + ((v22 - v20 + 1191252338 + v26) ^ 0x5EFFFFF7);
  LODWORD(STACK[0x6D0]) = v27 - 148431552;
  LODWORD(STACK[0x6C0]) = (((v23 ^ 0xCE802B14) + v24 + ((2 * v23) & 0xDBA79DE0 ^ 0x42A789C0)) ^ 0xFDACF7EB)
                        + 1666957176
                        + ((2 * ((v23 ^ 0xCE802B14) + v24 + ((2 * v23) & 0xDBA79DE0 ^ 0x42A789C0))) & 0xFB59EFD6);
  v28 = v10 ^ 0x91F56E37 ^ v15;
  LODWORD(STACK[0x700]) = v28 + 1593835511 - v27 - 1707963489 - ((2 * (v28 + 1593835511 - v27)) & 0x3465173E);
  LODWORD(STACK[0x708]) = ((v26 + v28) ^ 0x6FAFA5CE) - 604086600 + ((2 * (v26 + v28)) & 0xDF5F4B9C);
  LODWORD(STACK[0x6DC]) = v20 - v27 - 878654650;
  v29 = v3 ^ 0xD8B84A73;
  v30 = STACK[0x420];
  v31 = STACK[0x458];
  v32 = STACK[0x418];
  v33 = STACK[0x414];
  v34 = STACK[0x448];
  v35 = STACK[0x44C];
  v36 = STACK[0x450];
  v37 = STACK[0x454];
  v38 = STACK[0x424];
  v39 = STACK[0x46C];
  STACK[0x490] = STACK[0x488];
  v40 = STACK[0x4E0];
  LODWORD(STACK[0x568]) = (((v37 ^ 0x2174B4E2) - v9 - 877513504) ^ 0x9FFE7CBF)
                        + 1677711230
                        + ((((v37 ^ 0x2174B4E2) - v9 - 877513504) << (((v7 + 68) & 0x7F ^ 0xF1) + ((v7 - 54) & 0xF9))) & STACK[0x4C4]);
  LODWORD(STACK[0x538]) = (((v36 ^ 0xC93FD9C7) - v2 + 2087870904) ^ 0x6F9DD5FC)
                        - 34145284
                        + ((2 * ((v36 ^ 0xC93FD9C7) - v2 + 2087870904)) & 0xDF3BABF8);
  LODWORD(STACK[0x544]) = v14 + v39 + 1761545045;
  LODWORD(STACK[0x53C]) = v1 + v33 - 137527308;
  LODWORD(STACK[0x540]) = v5 + v32 + 369353634;
  LODWORD(STACK[0x564]) = v18 - 963292076;
  LODWORD(STACK[0x56C]) = (((v4 ^ 0xB7FA486C) + (v35 ^ 0x1BB9F92A) + 1) ^ 0x4D7DFFCF)
                        - 86525640
                        + ((2 * ((v4 ^ 0xB7FA486C) + (v35 ^ 0x1BB9F92A) + 1)) & 0x9AFBFF9E);
  LODWORD(STACK[0x558]) = (((v34 ^ 0xFF8AE01D) - v6 + 1473301486) ^ 0xFFEDFFE8)
                        + 1543224928
                        + ((2 * ((v34 ^ 0xFF8AE01D) - v6 + 1473301486)) & 0xFFDBFFD0);
  LODWORD(STACK[0x530]) = v19 - 699173835;
  LODWORD(STACK[0x534]) = v21 + 102659439;
  LODWORD(STACK[0x55C]) = v29 + 1864241666 + (v31 ^ 0x492EB944);
  LODWORD(STACK[0x528]) = v38;
  LODWORD(STACK[0x524]) = ((4 - (_BYTE)v38) & 0x3F) + v38;
  v41 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * (v7 ^ (1417 * (STACK[0x554] & 1)))) - 4);
  LODWORD(STACK[0x514]) = v30;
  LODWORD(STACK[0x510]) = v30;
  STACK[0x4E0] = v40;
  LODWORD(STACK[0x508]) = -v30;
  return v41();
}

uint64_t sub_18CA02A1C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  _BYTE *v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unint64_t v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;

  LODWORD(STACK[0x514]) = v2;
  v5 = STACK[0x6E0];
  v6 = STACK[0x6C0];
  v7 = STACK[0x6D0];
  v8 = v1;
  v9 = STACK[0x6DC];
  v10 = STACK[0x708];
  LODWORD(STACK[0x6F8]) = v8;
  LODWORD(STACK[0x518]) = 346047168;
  v11 = (v8 + 111949206) & 0xF953CBDC;
  v12 = v10 - v7;
  v13 = v6 - v5;
  v14 = v4 + v5 + 727711962;
  LODWORD(STACK[0x6F4]) = v11;
  v15 = v7 + v9 + 143419700;
  v16 = v0
      + (v11 ^ 0x8A96F413)
      + ((v5 - 1481848334) ^ 0xE50522EE)
      - ((2 * (v0 + (v11 ^ 0x8A96F413) + ((v5 - 1481848334) ^ 0xE50522EE)) - 1095962450) & 0xE2453080)
      + 1350111383;
  v17 = -295292490 - v0 - ((254436962 - 2 * v0) & 0xCDA1FD0A);
  v18 = ((v13 - ((2 * v13 - 292225706) & 0xCDA1FD0A) - 568623824) ^ v17) + (v14 ^ 0x7EB63DDC);
  v19 = ((2 * v18) & 0xBBF54C5C) + (v18 ^ 0xDDFAA62E);
  v20 = (v17 ^ 0xE6D0FE85)
      + (v16 ^ 0xEDD67BF)
      + 1
      - ((2 * ((v17 ^ 0xE6D0FE85) + (v16 ^ 0xEDD67BF) + 1)) & 0x52EB414A)
      + 695574693;
  v21 = ((v7 - 1445403959) ^ 0xE50522EE) + (LODWORD(STACK[0x700]) ^ 0x9A328B9F);
  v22 = v20 ^ v16;
  v23 = (LODWORD(STACK[0x700]) ^ 0x65CD7460)
      - 276067660
      - ((2 * (LODWORD(STACK[0x700]) ^ 0x65CD7460) + 2) & 0xDF171568)
      + 1;
  v24 = v21 - ((2 * v21 - 486190386) & 0xBE2B3E98) - 795326285;
  v25 = (v12 - ((2 * v12 + 351416674) & 0xDF171568) - 100359323) ^ v23;
  v26 = (v23 ^ 0xEF8B8AB4)
      + (v24 ^ 0x20EA60B3)
      + 1
      - ((2 * ((v23 ^ 0xEF8B8AB4) + (v24 ^ 0x20EA60B3) + 1)) & 0xBA6EEAA)
      + 97744725;
  v27 = (((v19 + 570776018) & 0x7EB63DDC ^ 0x7EB63DDC) + ((v19 + 570776018) & 0x7EB63DDC)) ^ v15;
  v28 = v26 ^ v24;
  v29 = ((2 * (v19 + 570776018 + (v22 ^ 0x27A8C71A) + 1)) & 0xE5E9FADE)
      + ((v19 + 570776018 + (v22 ^ 0x27A8C71A) + 1) ^ 0x72F4FD6F);
  v30 = v28 ^ 0xDAC6E819 ^ v27;
  v31 = ((2 * (v25 + v27 + (v28 ^ 0x253917E6) + 1)) & 0xD3FBEFFA) + ((v25 + v27 + (v28 ^ 0x253917E6) + 1) ^ 0xE9FDF7FD);
  v32 = (v14 ^ 0xA6E10539 ^ v22) - 1928658287 + v29;
  v33 = ((2 * ((v22 ^ 0xD85738E5) - v29 - 1581933697)) & 0xBAFEB9BE)
      + (((v22 ^ 0xD85738E5) - v29 - 1581933697) ^ 0x5D7F5CDF);
  v34 = (v20 ^ 0xAC59211F) + 1568627935 + (v32 ^ 0xF4B0E) - v33 + 1;
  v35 = v34 - 1146802190 - ((2 * v34) & 0x774A5FE4);
  v36 = v30 + 369231875 + v31;
  v37 = v31 - ((2 * v31 + 1317196774) & 0x6B9F4106) - 1659827594;
  v38 = (v33 - 1568627935) ^ (v29 + 1581933697);
  v39 = ((2 * ((v28 ^ 0xDAC6E819) + (v37 ^ 0x4A305F7C) + 1)) & 0xEEEBEBFE)
      + (((v28 ^ 0xDAC6E819) + (v37 ^ 0x4A305F7C) + 1) ^ 0x7775F5FF);
  v40 = v33 - ((2 * v33 + 2047760344) & 0x678045B6) - 255373625;
  v41 = v37 ^ 0xB5CFA083 ^ (v39 - 2004219391);
  v42 = ((2 * ((v40 ^ 0xB3C022DB) + v38)) & 0xBF3F3F36) + (((v40 ^ 0xB3C022DB) + v38) ^ 0x5F9F9F9B);
  v43 = v39 - ((2 * v39 + 102835608) & 0x53C6326) - 1515273121;
  v44 = (v32 ^ 0x4C30962A ^ v40) + (v35 & 0x4FFA1729 ^ 0xF45FF8DF) + (v35 & 0x4FFA1729 ^ 0xBBA5EFF6) - 1604296601 + v42;
  v45 = ((2 * (v44 + 1341789993 + (v32 ^ 0xFFF0B4F1))) & 0xF3E8B95A)
      + ((v44 + 1341789993 + (v32 ^ 0xFFF0B4F1)) ^ 0xF9F45CAD);
  v46 = v45 - ((2 * v45 + 812624070) & 0xAE98DF9A) - 276544464;
  v47 = (v26 ^ 0x80FFF6EF) + 2004219391 + (v36 ^ 0xF4B0E) - v39 + 1;
  v48 = ((2 * ((v43 ^ 0x829E3193) + v41)) & 0xDF7F57FE) + (((v43 ^ 0x829E3193) + v41) ^ 0x6FBFABFF);
  v49 = v48 + (v36 ^ 0x7D6E8562 ^ v43);
  v50 = v49 - 1874832383 + (v36 ^ 0xFFF0B4F1) + 946841568 - ((2 * (v49 - 1874832383 + (v36 ^ 0xFFF0B4F1))) & 0x70DF4FC0);
  v51 = (v50 ^ 0x386FA7E0) - ((2 * (v50 ^ 0x386FA7E0) + 73598954) & 0x2AF3C382) + 933979574;
  v52 = (v49 - 1874832383) ^ (v47 + 946841568 - ((2 * v47) & 0x70DF4FC0)) ^ v50;
  v53 = v52 - ((2 * v52) & 0xDC5591B0) + 1848297688;
  v54 = ((2 * v46) & 0xDBA79DE0 ^ 0x8A809D80) + (v46 ^ 0x3A9FA13D);
  v45 += 675096392;
  v55 = (v44 + 1341789993) ^ v35 ^ (v54 - 1146802190 - ((2 * v54) & 0x774A5FE4));
  v56 = v55 - ((2 * v55) & 0xC9C01244) - 455079646;
  v57 = v49 + v48;
  v58 = (v53 ^ 0x91D53727) + v48;
  v59 = v45 ^ (v42 + 1598411514 + v44);
  v60 = (v56 ^ 0x1B1FF6DD) + v42;
  v61 = ((2 * v53) & 0x37FFFBEE ^ 0x44D12C2) + (v53 ^ 0x19D9749E);
  v62 = ((2 * v56) & 0xF5FEF24 ^ 0x1588124) + (v56 ^ 0xF43BF01);
  v63 = v59 - v62 - 1686580692 - ((2 * (v59 - v62 + 128972690)) & 0x2791B534);
  v64 = (v51 ^ (v57 - ((2 * v57 + 517474012) & 0x2AF3C382) - 1528437457)) - 1677723714 - v61 + 1593;
  v65 = v64 - 2061128146 - ((2 * v64) & 0xA4B5C5C);
  v66 = (v58 + v61 - ((2 * (v58 + v61) + 106390254) & 0xA4B5C5C) - 397320283) ^ v65;
  v67 = (v63 ^ 0x93C8DA9A) - ((2 * (v63 ^ 0x93C8DA9A) + 1198319156) & 0x52F3902A) - 852477137;
  v68 = (v65 ^ 0x8525AE2E) - ((2 * (v65 ^ 0x8525AE2E) + 124577332) & 0xF983642) - 1417507269;
  v69 = v68 ^ v51;
  v70 = ((2 * (v67 ^ v45)) & 0xDE4FB7FE ^ 0x5243902A) + (v67 ^ v45 ^ 0xC65E13EA);
  v71 = (v60 + v62 - ((2 * (v60 + v62) + 255297664) & 0x2791B534) - 1687904550) ^ v63;
  v72 = v67 ^ 0x3500A879;
  v73 = (v67 ^ 0x3500A879) - v70 - 566755863;
  v74 = (v68 ^ 0x1BB57B4D) + (v68 ^ v51 ^ 0x6D4A051F) + 1;
  v75 = ((2 * v74) & 0x6FEF9FFC) + (v74 ^ 0x37F7CFFE);
  v76 = ((v62 - 1554344468) ^ 0xDC17DA72) + 155158290 + v73;
  v77 = v71 - 404789221 + v76;
  v78 = v76 + v73 - ((2 * (v76 + v73) + 20998708) & 0x7EC55E0) - 1667866614;
  v79 = v75 + ((v61 + 252350343) ^ 0xDC17DA72);
  v80 = v66 + v79 + 597737809 - 2 * ((v66 + v79 + 674709785) & 0x44B4DB73 ^ (v66 + v79 + 597737809) & 1) - 917808326;
  v81 = v72
      - 1375625316
      + ((701402915 * ((v80 & 0x4D76519F ^ 0x942008D) + (v80 & 0x4D76519F ^ 0x44345112))) ^ 0xBE65374D);
  v82 = v81 ^ v78;
  v83 = v70 - ((2 * v70 + 120322790) & 0x5708707C) + 1863988657;
  v84 = ((2 * (v81 ^ v78 ^ v83)) & 0xD7F34DEE ^ 0x50E0058C) + (v81 ^ v78 ^ v83 ^ 0x438BB439);
  v85 = v79 + v75 - ((2 * (v79 + v75) + 539017224) & 0x49125B36) - 1265005153;
  v86 = v81 ^ v77;
  v87 = (v68 ^ 0x1BB57B4D) - 2 * (((v68 ^ 0x1BB57B4D) + 198536844) & 0xD5B5507 ^ v68 & 2) + 691061649;
  v88 = v87 ^ 0xC9EF8E77 ^ v80;
  v89 = v85 ^ v87;
  v90 = (v69 ^ 0x92B5FAE0) - 2 * (((v69 ^ 0x92B5FAE0) + 314431858) & 0x1FEE5A9D ^ v69 & 1) - 760466418;
  v91 = v90 ^ 0x1FEE5A9C;
  v92 = v84 + v86 - ((2 * (v84 + v86) + 19358558) & 0x34BE624) + 238658753;
  v93 = ((2 * (v89 ^ v90)) & 0x3FF4FFE4 ^ 0x2C704404) + (v89 ^ v90 ^ 0x29C65DF0);
  v94 = 2 * v84 + 37451316;
  v95 = v84 - 960866187 + (~v94 | 0xF4C6C54B);
  v96 = ((2 * ((v82 ^ 0x83F62AF0) + (v92 ^ 0x7E5A0CED) + 1)) & 0xDA7EF7BC)
      + (((v82 ^ 0x83F62AF0) + (v92 ^ 0x7E5A0CED) + 1) ^ 0x6D3F7BDE);
  v97 = v95 ^ 0x84396E48 ^ v92;
  v98 = (v83 ^ 0x2B84383E) + (v78 ^ 0x83F62AF0) + v84 + 335960329 + (v95 ^ 0x59C9D5A);
  v99 = ((2 * v98) & 0xD6FCE15E) + (v98 ^ 0xEB7E70AF);
  v100 = v96 - ((2 * v96 + 921748708) & 0x2CF015EA) + 1374711143;
  v101 = v93 - ((2 * v93 + 439993406) & 0xF6BAECBA) + 142235772;
  v102 = v93 + v88 - ((2 * (v93 + v88) + 824553832) & 0x78A85D18) - 1796798656;
  v103 = ((2 * ((v89 ^ 0x29D2789E) - 1464345007 + (v102 ^ 0xC3ABD173))) & 0x6CFDDFD4)
       + (((v89 ^ 0x29D2789E) - 1464345007 + (v102 ^ 0xC3ABD173)) ^ 0xB67EEFEA);
  v104 = v100 ^ (v84 - (v94 & 0x2CF015EA) - 678050289);
  v105 = v101 ^ 0x7B5D765D;
  v106 = v101 ^ 0x470958D1 ^ v102;
  v107 = -1097205718 - v99 - ((164165654 - 2 * v99) & 0x736AF83E);
  v108 = ((2 * ((v103 + 1233195030) ^ v101)) & 0xBFDAFB7C ^ 0xB69AE838) + ((v103 + 1233195030) ^ v101 ^ 0x24B00BE3);
  v109 = v91 + (v85 ^ 0x24892D9B) + v93 + v105 - 2145910192 + v108;
  v110 = v97 + v96 - ((v100 ^ 0x100080 | (499085 - v96)) & 0x100180) + 997745266;
  v111 = v110 - ((2 * v110 + 14813112) & 0x8BBF6AE4) + 1179695438;
  v112 = v109 + v103;
  v113 = v106 - 907931022 + v103;
  v114 = v111 ^ v107;
  v115 = ((2 * ((v111 ^ 0xA3518FC0) + 2095818877)) & 0xD29EAFCE) + (((v111 ^ 0xA3518FC0) + 2095818877) ^ 0x694F57E7);
  v116 = (v108 - v109 - 1183281762) ^ v113;
  v117 = (2 * (v114 & 0x800000)) ^ 0x1000000 | v114 & 0x800000;
  v118 = v117 + 1184169304;
  v119 = (v113 ^ 0x668E3AB2) - ((2 * (v113 ^ 0x668E3AB2) + 2044154106) & 0x6B533CBC) - 1298839845;
  v120 = ((v107 ^ 0xB9B57C1F) & (1602032119 - v96)) + (v107 ^ 0xB9B57C1F | (1602032119 - v96)) + v115 - 1766807527;
  v121 = v120 - ((2 * v120) & 0x3649F0BC) - 1692075938;
  v122 = v117 - 0x800000;
  v123 = v117 ^ 0x4794FD58;
  if (((v115 - 1766807527) & v122) == 0)
    v123 = v118;
  v124 = v108
       + (v119 ^ 0x35A99E5E)
       - v112
       + 183300593
       - ((2 * (v108 + (v119 ^ 0x35A99E5E) - v112 + 183300593)) & 0x8432A6C6)
       - 1038527645;
  v125 = v112 + (v113 ^ 0x9971C54D) + (v124 ^ 0x3DE6AC9C);
  v126 = v96 + v99 + v104 + (v111 ^ 0x5CAE703F) + (v121 ^ 0x64DB07A1);
  v127 = (v126 - ((2 * v126 + 287077294) & 0x3649F0BC) + 62075445) ^ v121;
  v128 = v114 & 0xFF7FFFFF ^ 0x1A64F3DF ^ (v115 + 1335601857 + v123);
  v129 = ((2 * ((v114 ^ 0x1AE4F3DF) + 982816712 + v128)) & 0xFF7BF2CE)
       + (((v114 ^ 0x1AE4F3DF) + 982816712 + v128) ^ LODWORD(STACK[0x4A8]));
  v130 = v119 ^ 0x5327A4EC ^ v116;
  v131 = ((2 * v121) & 0xFEFBFDE6 ^ 0x2A594122) + (v121 ^ 0x6AD35F6A);
  v132 = v127 ^ 0x64703079;
  v133 = v130 + (v116 ^ 0x668E3AB2) - ((2 * (v130 + (v116 ^ 0x668E3AB2)) + 1843907412) & 0xDB1ECF2E) + 612584769;
  v134 = v127 ^ (v131 - 1471954133);
  v135 = (v125 - ((2 * v125 + 1143648340) & 0x6F2224C0) - 1717146998) ^ v124;
  v136 = v133 ^ 0x6D8F6797;
  v124 ^= 0xCC930AA4;
  v137 = v135 ^ 0xFB0218C4 ^ (v124 - 1480474082);
  v138 = ((2 * ((v134 ^ 0x9B8FCF86) + 1125757100)) & 0xCFFED778) + (((v134 ^ 0x9B8FCF86) + 1125757100) ^ 0x67FF6BBC);
  v139 = (v134 ^ 0x64703079) + (v127 ^ (v129 - ((2 * v129 - 113071882) & 0x9F861450) - 865837405) ^ 0x544CC5AE) + 1;
  v140 = v138 - v131;
  v141 = v138 - v131 + 969851607;
  v142 = (v133 ^ 0xF88AF1D6 ^ v135 ^ 0xFB0218C4) + (v137 ^ 0x6AFA69BE) + 1;
  v143 = ((2 * (v124 + 230013239)) & 0xBD7F5FAE) + ((v124 + 230013239) ^ 0xDEBFAFD7);
  v144 = ((v138 - v131 - 1983325696) ^ 0xB5A8BC6D)
       - 896675854
       - ((2 * ((v138 - v131 - 1983325696) ^ 0xB5A8BC6D)) & 0x951B9FE4);
  v145 = ((2 * ((v137 ^ 0x95059641) + 1125757100)) & 0x8FECD15E) + (((v137 ^ 0x95059641) + 1125757100) ^ 0xC7F668AF);
  v146 = v145 - v143 - ((2 * (v145 - v143) + 764579408) & 0x93743B0E) + 1619223727;
  v147 = v128 + v129 + v131 + v132 + v138 - 1356652062 + (v144 ^ 0xCA8DCFF2);
  v148 = v131 - (v138 - v131) - 460648158 + (v144 ^ 0xCA8DCFF2);
  v149 = v148 - 370870287 - ((2 * v148) & 0xD3C9EFE2);
  v150 = (v130 + v124 + v136 + (v135 ^ 0x91F8717A) + v145 + 1376309095 + (v146 ^ 0xFC12A1EA)) ^ v146;
  v151 = v143
       - 2124644296
       + (v146 ^ 0xB645E278)
       + (v146 ^ 0xFC12A1EA)
       - 75498434
       - ((2 * (v143 - 2124644296 + (v146 ^ 0xB645E278) + (v146 ^ 0xFC12A1EA) + 208)) & 0xF6FFF6DC);
  v152 = v149 & 0xC0329 ^ 0x40321;
  v153 = v144 ^ 0xCA8DCFF2 ^ v147;
  v154 = ((v139 - 370870287 - ((2 * v139) & 0xD3C9EFE2)) ^ 0xB5A8BC6D ^ v149) + v153;
  v155 = v149 & 0xC0329 ^ 0x80008;
  v156 = (v142 - 75498642 - ((2 * v142) & 0xF6FFF6DC)) ^ 0xB5A8BC6D ^ v151;
  v157 = ((2 * ((v149 ^ 0xE9E4F7F1) + 449420430)) & 0x9759BBDC) + (((v149 ^ 0xE9E4F7F1) + 449420430) ^ 0xCBACDDEE);
  v158 = v154 - 18168240 * ((v152 + v155) | (((103890216 - v140) & 0x20148135) + (v141 & 0x20148135)));
  v159 = ((2 * ((v151 ^ 0xFB7FFB6E) + 449420430)) & 0xFEBB79FE) + (((v151 ^ 0xFB7FFB6E) + 449420430) ^ 0x7F5DBCFF);
  v160 = v150 & 0xB005E8D7 ^ 0xB000A0C2 | v150 & 0xB005E8D7 ^ 0x54815;
  v150 ^= 0xFC12A1EA;
  v161 = ((2 * (v156 + v150)) & 0x7D74ABDE) + ((v156 + v150) ^ 0x3EBA55EF);
  v162 = (v144 ^ 0x7A1E235E ^ (v158 + 945921763 + (v3 ^ (2 * ((v158 + 1842597616) & 0x4A8DCFF6 ^ v154 & 4))))) + v160;
  v163 = (v162 + 1341789993) ^ (v153 - 361895129);
  v164 = v158 + v157;
  v165 = v157 + v162;
  v166 = (v161 - 1052399087) ^ v146;
  v167 = v166 ^ (v150 - 361895129);
  v168 = v161 + v159;
  v169 = (_BYTE *)STACK[0x710];
  v169[1370] = (v165 + 59) ^ 0xC4;
  v170 = (v163 ^ (v157 + 877863442)) + 1418146250 - ((2 * (v163 ^ (v157 + 877863442))) & 0xA90E6394);
  v159 -= 2136849663;
  v171 = ((2 * ((v166 ^ 0x860C82B4) + v159)) & 0x33FFF5BE) + (((v166 ^ 0x860C82B4) + v159) ^ 0x19FFFADF);
  v169[1632] = v168 - ((2 * v168 + 36) & 0xF0) - 118;
  v172 = v167 ^ 0x860C82B4;
  v173 = (v167 ^ 0x860C82B4 ^ v159) + 317488571 - ((2 * (v167 ^ 0x860C82B4 ^ v159)) & 0x25D8FB76);
  v169[1896] = (v164 + 2) ^ 0xC4;
  v174 = v164 - ((2 * v164 - 580390490) & 0xB67E86F6) + 1240677454;
  v175 = ((2 * ((v170 ^ 0x548731CA) + v163)) & 0x3FB7B7FA) + (((v170 ^ 0x548731CA) + v163) ^ 0x9FDBDBFD);
  v176 = STACK[0x718];
  *(_BYTE *)(v176
           + (((((((_BYTE)v165 + 59) & 0xD0 ^ 0x40) + (((_BYTE)v165 + 59) & 0xD0 ^ 0x90)) & 0xF0) - 208) & 0xFFFFFC90 | 0x36FLL)) = v171 - ((2 * v171 + 66) & 0xF0) - 103;
  v169[1968] = v173 ^ 0xC3;
  v177 = ((2 * v174) ^ 0x49817909) + v163 + 1 - ((2 * (((2 * v174) ^ 0x49817909) + v163 + 1)) & 0xE7D3855E) - 202784081;
  v169[1537] = v167 ^ 0xCC;
  v169[1801] = v163 ^ 0xC4;
  v178 = ((2 * v174) & 0xFBFA7FCA ^ 0x2358254A) + (v174 ^ 0x6E516D5A);
  v179 = ((2 * ((v173 ^ 0x12EC7DBB) + (v167 ^ 0x860C82B4))) & 0xF77DEB3E)
       + (((v173 ^ 0x12EC7DBB) + (v167 ^ 0x860C82B4)) ^ 0xFBBEF59F);
  LOBYTE(v167) = v170 ^ 0xE;
  v180 = v171 - 2 * v179;
  v169[1275] = v167;
  v181 = v168 - ((2 * v168 + 485091782) & 0xD0068F70) + 1987591323;
  v182 = ((2 * ((v181 ^ 0xE80347B8) + 71371361 + v179)) & 0x6F9CFD7E)
       + (((v181 ^ 0xE80347B8) + 71371361 + v179) ^ 0x37CE7EBF);
  v183 = ((2 * (v165 - 2 * v175 - 1006309067)) & 0xFA9FBB76) + ((v165 - 2 * v175 - 1006309067) ^ 0xFD4FDDBB);
  v184 = v172 + ((2 * v181) ^ 0x2FF9708F) - 11998031 - ((2 * (v172 + ((2 * v181) ^ 0x2FF9708F) + 1)) & 0xFE91D960);
  v185 = ((2 * ((v174 ^ 0x5B3F437B) + 1612981251 + v175)) & 0x61EEDF8E)
       + (((v174 ^ 0x5B3F437B) + 1612981251 + v175) ^ 0xB0F76FC7);
  v169[1706] = v174 ^ 0x7B;
  v169[1442] = v181 ^ 4;
  v169[1873] = v180 - ((2 * v180 - 66) & 0xF0) - 41;
  v169[1611] = v177 ^ 0x6B;
  v186 = v182 + v180;
  v169[2137] = (v183 + 69) ^ 0xC4;
  v169[1347] = v184 ^ 0xC8;
  v169[1778] = v182 - ((2 * v182 - 126) & 0xF0) - 71;
  v187 = v183 + v185;
  v169[2042] = (v185 + 57) ^ 0xC4;
  v188 = ((2 * ((v181 ^ 0xA090567C) - 1491885971)) & 0xFF6FEBFE) + (((v181 ^ 0xA090567C) - 1491885971) ^ 0x7FB7F5FF);
  v189 = v187 - 2 * ((v187 + 1802954716) & 0x52D50EEF ^ v187 & 1) + 1045165770;
  v190 = ((v178 - ((2 * v178 + 1378664720) & 0xE7D3855E) + 486548279) ^ v177) + (v189 ^ 0x2D2AF111) + 1;
  v191 = ((2 * v190) & 0xEFDE7BB4) + (v190 ^ 0xF7EF3DDA);
  v192 = v186 - ((2 * v186 + 2128301564) & 0xCAC98242) - 1529714657;
  v193 = v180 + v188;
  v194 = 1455163459 - v193 - ((1148455744 - 2 * v193) & 0x69040546);
  v195 = v191 + v178;
  v169[1588] = v194 ^ 0xDB;
  LOBYTE(v172) = (v187 - 36) ^ 0xC4;
  v196 = (v184 ^ 0xFF48ECB0 ^ (v188 - 2142762495)) + (v192 ^ 0x1A9B3EDE) + 1;
  v197 = ((2 * v196) & 0xFFDFFFD6) + (v196 ^ 0xFFEFFFEB);
  v198 = v197 + v188 - 2 * ((v197 + v188 + 5769750) & 0x3BE5BBC7 ^ (v197 + v188) & 1) + 1010681308;
  v199 = v185 - v178 - v187 - ((2 * (v185 - v178 - v187) - 1468859802) & 0x9B46A8F4) + 568119725;
  LOBYTE(v178) = (v191 + 38) ^ 0xC4;
  v169[1947] = v172;
  v200 = (v199 ^ 0x4DA3547A) + 135316006 + v191 - ((2 * ((v199 ^ 0x4DA3547A) + 135316006 + v191)) & 0x10BA7C) + 548158;
  v169[1421] = v178;
  v169[1252] = v198 ^ 0xBE;
  v201 = v199 ^ v189;
  v169[1683] = v192 ^ 0x59;
  v169[2114] = v197 - ((2 * v197 + 42) & 0xF0) - 115;
  v202 = v192 ^ v194;
  v203 = (v195 + 824648366) ^ v199 ^ v189;
  v169[1516] = (v195 - 82) ^ 0xC4;
  v204 = ((2 * v203) & 0x777ACDF6 ^ 0x32228924) + (v203 ^ 0x66ACBB6D);
  v205 = v197 - v193 - 1572207179;
  v206 = (v199 ^ 0x4DA3547A) - v204;
  v207 = ((2 * ((v201 ^ 0x9F765A94) - v206 - 1081433906)) & 0xEEDFDFE2)
       + (((v201 ^ 0x9F765A94) - v206 - 1081433906) ^ 0x776FEFF1);
  v169[1326] = v203 ^ 0x52;
  v169[1852] = v199 ^ 0xBE;
  v169[1924] = v205 ^ 0xCE;
  v208 = ((2 * (v198 ^ v202)) & 0xFF7EBFF6 ^ 0x5048BE84) + (v198 ^ v202 ^ 0x57DBA0BD);
  v209 = v208 + v193;
  v210 = ((2 * ((v202 ^ 0x51E6C382) - 649158098 + v209)) & 0xB4BD82D6)
       + (((v202 ^ 0x51E6C382) - 649158098 + v209) ^ 0x5A5EC16B);
  v169[1757] = (v207 + 15) ^ 0xC4;
  v211 = ((2 * ((v205 ^ 0x6DB147B6) + 1516159339 - v210)) & 0x2DBFB57E)
       + (((v205 ^ 0x6DB147B6) + 1516159339 - v210) ^ 0x96DFDABF);
  v169[1231] = v200 ^ 0x4C;
  v212 = (v200 ^ 0x6DB91A88) - v207;
  v169[2019] = v208 - ((2 * v208 + 10) & 0xF0) + 125;
  v169[1493] = v210 - ((2 * v210 + 42) & 0xF0) + 13;
  v169[1398] = 74 - v209 - ((-92 - 2 * v209) & 0xF0);
  v213 = v204 - v212;
  v214 = v212 - ((2 * v212 + 154219488) & 0x80C4F56) + 1755234715;
  v169[1662] = (v206 + 50) ^ 0xC4;
  v215 = v206 - v204 - (v204 - v212) - ((2 * (v206 - v204 - (v204 - v212)) + 1776769378) & 0x45F31922) + 401422658;
  v216 = v208 - v211;
  v217 = ((2 * (v207 + 1714403330 + (v215 ^ 0x22F98C91))) & 0xBFFAD9EC)
       + ((v207 + 1714403330 + (v215 ^ 0x22F98C91)) ^ 0x5FFD6CF6);
  v169[2093] = (v213 + 124) ^ 0xC4;
  v218 = 1672175649
       - (v208
        + v209
        - 775058639
        + v208
        - v211)
       - ((1298316196 - 2 * (v208 + v209 - 775058639 + v208 - v211)) & 0x79F4049E);
  v169[1208] = v218 ^ 0x37;
  v169[1567] = (v207 + 2) ^ 0xC4;
  v169[1303] = v210 - 2 * ((v210 + 8) & 0x7C ^ v210 & 4);
  v219 = v211 - 2 * ((v211 + 1447612224) & 0x4E16A21D ^ v211 & 0x11) + 610234700;
  LOBYTE(v207) = v213 + v217;
  v220 = v213 + v217 - 1454735667;
  v169[1734] = v219 ^ 0x74;
  v169[1472] = v215 ^ 0x55;
  v169[1998] = v214 ^ 0x6F;
  v221 = v210
       - 2092898680
       + (v218 ^ 0x3CFA024F)
       - 244953123
       - ((2 * (v210 - 2092898680 + (v218 ^ 0x3CFA024F))) & 0xE2CC9FBA);
  v169[1829] = v216 - 2 * ((v216 + 44) & 0xFB ^ v216 & 3) - 92;
  v222 = ((v218 & 0x6DD3CEF0 ^ 0x2CD20240 | v218 & 0x6DD3CEF0 ^ 0x4101CCB0) + 270753481 + v220) ^ v215;
  v223 = ((2 * (v216 + 1368189740 + (v221 ^ 0xF1664FDD))) & 0xFFBFFFAE)
       + ((v216 + 1368189740 + (v221 ^ 0xF1664FDD)) ^ 0xFFDFFFD7);
  v224 = ((v217 - 1610444022) ^ 0x22F98C91 ^ v222)
       - ((2 * ((v217 - 1610444022) ^ 0x22F98C91 ^ v222)) & 0x2953B0F4)
       - 1800808326;
  v225 = v224 ^ 0x7A6533C0;
  v226 = (v223 + 2097193) ^ v218;
  v169[1975] = v226 ^ 0x8D;
  v227 = v226 ^ v221;
  v169[2070] = v227 ^ 0x50;
  v228 = (v214 ^ 0x25D018FD) + 24345399 + (~(2 * (v214 ^ 0x25D018FD) + 376724148) | 0x938D6447);
  v169[1377] = v224 ^ 4;
  v229 = (v219 ^ 0xEFC09D5A) - ((2 * (v219 ^ 0xEFC09D5A) - 1770759500) & 0x99CFB934) - 1742599692;
  v169[1903] = (v207 + 102) ^ 0xC4;
  v169[1639] = v223 - ((2 * v223 + 18) & 0xF0) - 127;
  v169[1544] = v229 ^ 0xE2;
  v230 = v222 ^ 0xCC35672B;
  v169[1282] = v222 ^ 0xEF;
  v231 = v226 ^ 0xD236E9F5;
  v232 = (((v227 ^ 0x29674620) & 0x2BF75F24 ^ 0xA374000) + ((v227 ^ 0x29674620) & 0x2BF75F24 ^ 0x21C01F24) - 699841308) | 0x705CD6FA;
  v233 = v230 - ((2 * v230 - 940341970) & 0x857B4AE0) + 649553927;
  v234 = v232 - v220 + 699189281 + v225 + 1555775947 - ((2 * (v232 - v220 + 699189281 + v225)) & 0xB9768396);
  v169[1808] = v228 ^ 0x18;
  v235 = (v228 ^ 0x49FAFA8A)
       - 2040979274
       + v220
       - ((2 * ((v228 ^ 0x49FAFA8A) - 2040979274 + v220)) & 0x2BFCB66E)
       - 1778492617;
  v236 = ((2 * ((v234 ^ 0x5CBB41CB) - 1341789993)) & 0xFDF79C5E) + (((v234 ^ 0x5CBB41CB) - 1341789993) ^ 0x7EFBCE2F);
  v237 = (v227 ^ 0x2350A628) - v223 - ((2 * ((v227 ^ 0x2350A628) - v223) + 868342102) & 0xACBE283A) - 264240952;
  v169[1618] = v235 ^ 0xF3;
  v169[1449] = v223 - ((2 * v223 + 76) & 0xF0) - 98;
  v238 = v231 - ((2 * v231 - 940341970) & 0xD51FE0D0) + 1317647103;
  v239 = ((2 * (v234 ^ v233)) & 0xFF8DFDE8 ^ 0x3C0DC960) + (v234 ^ v233 ^ 0x61C01A4F);
  v169[1785] = v238 ^ 0x10;
  v240 = (v229 ^ 0xB3246BCC)
       + 142734118
       + v223
       - ((2 * ((v229 ^ 0xB3246BCC) + 142734118 + v223)) & 0x659B876E)
       - 1295137865;
  v169[1354] = v240 ^ 0xCF;
  v241 = v237 ^ v240;
  v242 = v239 - ((2 * v239 + 1125004974) & 0x536F40A0) + 188660647;
  v169[1187] = v234 ^ 0xF;
  v243 = v234 ^ v235;
  v169[1880] = v237 ^ 0x65;
  v169[1713] = (v207 - 125) ^ 0xC4;
  v244 = v223 - ((2 * v223 + 1254972000) & 0x71870F96);
  v245 = v237 ^ v238;
  v246 = ((2 * v245) & 0x6DDEFDC6 ^ 0x6980C8C2) + (v245 ^ 0xA3F9A96);
  v247 = (v237 ^ 0xD65F141D) + (v237 ^ v240 ^ 0x9B6D2855);
  v248 = ((511239336 - v239) & 0x39AB6EF9) + v236 - 2130431534 + (v242 & 0x39AB6EF9 ^ 0x29A32050);
  LOBYTE(v144) = ((2 * (v248 + (v243 ^ 3))) & 0x7C) + ((v248 + (v243 ^ 3)) ^ 0xBE);
  v249 = v242 ^ 0x29B7A050;
  v250 = -996515102 - (((v234 ^ 0x2344BE34) + 1341789993) & 0x56C693F2) - ((v236 + 17052113) & 0x56C693F2);
  v244 -= 1641401093;
  v251 = v246 - 2 * ((v246 + 39754600) & 0x6EABE99 ^ v245 & 1) + 826890752;
  v252 = (v215 & 0x2E ^ 2 | v215 & 0x2E ^ 0x2C) ^ 0x2E ^ v250;
  v169[2049] = v233 ^ 0xB4;
  v169[1259] = v244 ^ 0xB3;
  v253 = (v251 ^ 0x86EABE98)
       + (v241 ^ 0x6492D7AA)
       - 1932852163
       - ((2 * ((v251 ^ 0x86EABE98) + (v241 ^ 0x6492D7AA))) & 0x1996087A);
  v254 = v249 + (v243 ^ 0xC9451AFC) - ((2 * (v249 + (v243 ^ 0xC9451AFC))) & 0x21E518E0) - 1863152528;
  LOBYTE(v207) = ((((v246 - 2 * ((v246 + 104) & 0x99 ^ v245 & 1)) & 0xBC ^ 0x98) + ((-105 - v246) & 0xBC)) | 0x20) ^ (v207 - 115);
  v169[1428] = v254 ^ 0xB4;
  LOBYTE(v233) = v144 - ((2 * v144 + 4) & 0x78) - 2;
  v169[1954] = v233 - ((2 * v233) & 0xF0) + 120;
  v169[1523] = v207 - ((2 * v207) & 0xF0) + 120;
  v169[1595] = (v246 - 2 * ((v246 + 104) & 0x99 ^ v245 & 1)) ^ 0xE0;
  v169[2121] = ((v251 ^ 0x98) + (v241 ^ 0xAA) + 61 - ((2 * ((v251 ^ 0x98) + (v241 ^ 0xAA))) & 0x7A)) ^ 0x45;
  v255 = v251 ^ v244;
  v169[1690] = v247 + 1 - 2 * ((v247 + 81) & 0xF9 ^ (v247 + 1) & 1) + 72;
  v169[1859] = (v239 - ((2 * v239 - 82) & 0xA0) - 89) ^ 0x94;
  v256 = v253 ^ 0x8CCB043D;
  v257 = v255 ^ v253;
  v258 = ((2 * (v246 + 1481508116 + (v253 ^ 0xD2A3CF2E))) & 0xB64CF7DE)
       + ((v246 + 1481508116 + (v253 ^ 0xD2A3CF2E)) ^ 0xDB267BEF);
  v259 = (v220 + 1969884112 + v252 + 699899984 - ((2 * (v220 + 1969884112 + v252)) & 0x536F40A0)) ^ v242 ^ v254;
  v260 = (v254 ^ 0xCE9A4763) + v239;
  v261 = v246 - ((2 * v246 - 1510319094) & STACK[0x4A4]) + 977088784;
  v262 = v239 - ((2 * v239 + 340483048) & 0x898CC73A) - 823389807;
  v263 = ((2 * (v247 + 1 + (v261 ^ 0x18BFFCF4) - 374253615 + v256)) & 0xD8FF7F9E)
       + ((v247 + 1 + (v261 ^ 0x18BFFCF4) - 374253615 + v256) ^ 0x6C7FBFCF);
  v169[1333] = v259 ^ 0xA7;
  v169[2026] = v257 ^ 5;
  v264 = (v259 ^ 0xCE9A4763) - v260;
  v265 = ((2 * ((v257 ^ 0x6C8AF67D) - 618234897 - v258)) & 0x6FEF88FE)
       + (((v257 ^ 0x6C8AF67D) - 618234897 - v258) ^ 0x37F7C47F);
  v169[1764] = (2 * (v248 + (v262 ^ 0x62) + v249) + ~(v248 + (v262 ^ 0x62) + v249) + 1) ^ 0xC4;
  v169[1500] = v263 - ((2 * v263 + 98) & 0xF0) - 87;
  v169[1405] = v261 ^ 0x73;
  v169[1238] = (v260 + 3) ^ 0xC4;
  v266 = ((2 * (v260 - 1888058109)) & 0x7CD3EFFE ^ 0x5840885C) + ((v260 - 1888058109) ^ 0x53CDBBD1);
  v267 = (((339924229 - v246 - ((1510319092 - 2 * v246) & 0x4E800616)) ^ v261) & 0x4FFA1729)
       + ((2 * (v248 + (v262 ^ 0xBB399C62) + v249)) & 0x85FEE3FE)
       + ((v248 + (v262 ^ 0xBB399C62) + v249) ^ 0xC2FF71FF)
       + v260
       + v266;
  v268 = v264 + (v262 ^ 0x5DA6651A);
  v269 = v264 - v266;
  v270 = v269 + v268 + 1627552474;
  v271 = v266 - ((2 * v266 - 1923284692) & 0xFD6CB322) - 983246297;
  v169[1931] = v258 + (~(2 * v258 + 34) | 0xF) - 118;
  v169[1669] = v262 ^ 0x59;
  v272 = (((v258 + 618234897) ^ 0x6DA44C2E) - 966671604 - ((2 * ((v258 + 618234897) ^ 0x6DA44C2E)) & 0x8CC38618)) ^ 0xC661C30C;
  v273 = v258 + v263 - 1202076606 + v272;
  v274 = ((2 * (v272 - 2061993835)) & 0x8FBED57A) + ((v272 - 2061993835) ^ 0x47DF6ABD);
  v169[1741] = v274 - ((2 * v274 - 122) & 0xF0) - 69;
  v275 = v265 + (v261 ^ 0xFE20058C);
  v169[2100] = (v269 + 103) ^ 0xC4;
  v169[1574] = (v267 - 36) ^ 0xC4;
  v169[1310] = v273 - ((2 * v273) & 0xF0) + 120;
  v276 = ((2 * (v268 + 1888058109 + (v271 ^ 0x7EB65991))) & 0xCBBD7D4A)
       + ((v268 + 1888058109 + (v271 ^ 0x7EB65991)) ^ 0x65DEBEA5);
  v277 = v276 + (v271 ^ 0x51B0813E);
  v278 = v269 + v268 + v277 - 1299914267;
  v279 = v265 - v274;
  v169[1836] = v279 - ((2 * v279 + 124) & 0xF0) - 74;
  v169[1215] = v275 - ((2 * v275 + 2) & 0xF0) - 7;
  v280 = v275 + 742386862 + v279;
  v281 = v273 - 1414531823 + v280;
  v282 = v278 - 935350635;
  v169[1479] = (v268 - 3) ^ 0xC4;
  v169[2005] = v271 ^ 0x55;
  v283 = v275 - 990844408 + v274;
  v284 = v277 - 1299914267 + v270;
  v285 = ((v278 - 2113874726) ^ (v267 + 2004156006 + v270))
       - 1122988810
       - ((2 * ((v278 - 2113874726) ^ (v267 + 2004156006 + v270))) & 0x7A2119EC);
  v286 = v283 + ((v274 - 1205824189) ^ 0x2F06D8AF);
  v287 = v286 - 384505948;
  v288 = v286 - 384505948 + v280;
  v289 = v276 - ((2 * v276 + 32103786) & 0x8C5A646) - 447233576;
  v169[1910] = v284 ^ 0xC4;
  *(_BYTE *)(v176 + (((v285 & 0xC8 ^ 0x48) + (v285 & 0xC8) + 0x80) & 0xF8)) = v285 ^ 0x32;
  v169[1646] = v288 - ((2 * v288 + 82) & 0xF0) - 95;
  v169[1551] = v286 - 92 - 2 * ((v286 - 68) & 0x7C ^ (v286 - 92) & 4) - 112;
  v169[2077] = (((v288 + 41) ^ v281) + 110 - ((2 * ((v288 + 41) ^ v281)) & 0xDC)) ^ 0x16;
  v169[1982] = v283 - ((2 * v283 + 44) & 0xF0) - 114;
  LOBYTE(v286) = ((((v284 + 16) & 0x9F ^ 0x9F) + ((v284 + 16) & 0x9F)) ^ 0x3C) + ((v289 ^ 1 | (10 - v276)) & 0x19);
  v290 = (v285 ^ 0xBD108CF6) - v284 - ((2 * ((v285 ^ 0xBD108CF6) - v284) + 1833102732) & 0xBB8387A8) + 342047386;
  v291 = v282 + v277 - 2 * ((v282 + v277 + 333604768) & 0x141B2854 ^ (v282 + v277) & 4) + 1744670704;
  LOBYTE(v286) = (v286 - ((2 * v286) & 0x46) + 35) ^ v289;
  v169[1815] = (v277 + 91) ^ 0xC4;
  v169[1289] = v286 - ((2 * v286) & 0xF0) + 120;
  v292 = ((2 * v291) & 0xBAFF3EF6 ^ 0x22CC0A60) + (v291 ^ 0x6C19DA4B);
  v169[1194] = v290 ^ 0x10;
  v293 = v282 + (v289 ^ 0x462D323) + v292;
  LOBYTE(v276) = v293 + v284;
  v294 = ((2 * (v287 + 1341518657 + v288)) & 0xFF8FFFF6 ^ 0x4A8ADAC0) + ((v287 + 1341518657 + v288) ^ 0xDABA929B);
  v295 = v293 + v284 + v292;
  v296 = v283 + v288 + 1003953259 + v294;
  v297 = ((((v288 + 2110977065) ^ v281) - 379775378 - ((2 * ((v288 + 2110977065) ^ v281)) & 0xD2BA2CDC)) ^ 0xE95D166E)
       - v288;
  v298 = v288 + 1418559998 + v296;
  v169[1625] = v291 ^ 0xF4;
  v169[1361] = v294 + (~(2 * v294 + 10) | 0xF) + 126;
  v169[1456] = v288 - 2 + v296 - ((2 * (v288 - 2 + v296) + 94) & 0xF0) + 39;
  v299 = v297 - ((2 * v297 + 865712442) & 0x54B7C040) - 2077705027;
  v169[1792] = v296 - ((2 * v296 - 78) & 0xF0) + 81;
  v300 = 2049185520 - v284 - ((888614570 - 2 * v284) & 0xBF50FF36);
  v301 = ((2 * ((v300 ^ 0xA0578064) - 1936743408 + v292)) & 0xF417D7AA)
       + (((v300 ^ 0xA0578064) - 1936743408 + v292) ^ 0xFA0BEBD5);
  v169[1720] = (v276 + 117) ^ 0xC4;
  v302 = 908933772 - v288 - ((2068707928 - 2 * v288) & 0xF10C7AC0);
  v303 = v298 + v294;
  v169[1887] = v299 ^ 0x58;
  v169[2056] = (v293 - 54) ^ 0xC4;
  v304 = ((2 * (v294 + (v302 ^ 0x8779C29F) - 364428400)) & 0xFDF5EDFE)
       + ((v294 + (v302 ^ 0x8779C29F) - 364428400) ^ 0xFEFAF6FF);
  v169[1530] = (v295 - 59) ^ 0xC4;
  v169[2128] = 2 * (v294 + (v302 ^ 0x9F) - 112)
             + ~(v294 + (v302 ^ 0x9F) - 112)
             - ((2 * (2 * (v294 + (v302 ^ 0x9F) - 112) + ~(v294 + (v302 ^ 0x9F) - 112)) + 2) & 0xF0)
             + 121;
  v305 = v301 + (v290 ^ 0x4746311);
  v306 = ((2 * v300) & 0xF3BBFFCE ^ 0x30326CCA) + (v300 ^ 0xE1E4C99A);
  v307 = v295 - v306;
  v308 = v304 + 158022020 + (v299 ^ 0x73EE40E5);
  v169[1697] = v308 - ((2 * v308 - 6) & 0xF0) - 11;
  v309 = ((2 * v302) & 0x5E9B7F7E ^ 0x5E0A690C) + (v302 ^ 0x105ACB39);
  v310 = v308 - v309;
  v311 = v295 - v306 + 267803068;
  v169[1435] = (v301 + 43) ^ 0xC4;
  v169[1602] = v309 - ((2 * v309 - 126) & 0xF0) - 71;
  v169[1266] = v303 - ((2 * v303 - 2) & 0xF0) - 9;
  v169[1866] = v300 ^ 0xB9;
  v312 = v303 - v309 - ((2 * (v303 - v309) + 577571452) & 0xB75CEC10) - 320537786;
  v313 = v295 - v306 + LODWORD(STACK[0x4AC]);
  v314 = (v313 ^ (v306 - 1944710076 + v301)) + 1003150970 - ((2 * (v313 ^ (v306 - 1944710076 + v301))) & 0x7795BCF4);
  v315 = v305 - v306;
  v316 = v312 ^ (v309 + 1370966338 + v304);
  v317 = v314 ^ (v306 + 1189559110);
  v169[1961] = (v305 + 43) ^ 0xC4;
  v318 = v316 ^ (v309 + 293043054);
  v319 = ((2 * (v313 + (v317 ^ 0xC4352185) + 1)) & 0x75BFF5BE) + ((v313 + (v317 ^ 0xC4352185) + 1) ^ 0xBADFFADF);
  v320 = ((2 * ((v312 ^ 0xDBAE7608) + (v318 ^ 0x245189F7) + 1)) & 0xFFF9FFBA)
       + (((v312 ^ 0xDBAE7608) + (v318 ^ 0x245189F7) + 1) ^ 0x7FFCFFDD);
  *(_BYTE *)(v176 + ((-775285296 * ((v311 & 0xE0CBAF5) + ((632387 - v307) & 0xE0CBAF5))) | 0x8CLL)) = (v319 + 33) ^ 0xC4;
  v321 = v310 - ((2 * v310 - 374022194) & 0x827D30A2) + 907610168;
  v169[1938] = v316 ^ 0x70;
  v169[2033] = v320 - ((2 * v320 + 70) & 0xF0) - 101;
  v169[1245] = v314 ^ 0xBE;
  v169[1507] = v321 ^ 0x29;
  v169[1412] = v318 ^ 0x70;
  v322 = ((2 * (v317 ^ (v315 + 1304753341))) & 0x32D577BE ^ 0x329534B4) + (v317 ^ (v315 + 1304753341) ^ 0x22A065A5);
  v169[1771] = (v315 - 67) ^ 0xC4;
  v323 = v319 - v322;
  v169[1676] = v317 ^ 0xBE;
  v324 = ((2 * (v321 ^ v318)) & 0xFFFDF97A ^ 0x3521D832) + (v321 ^ v318 ^ 0xE56E12E4);
  v325 = v320 - v324;
  v326 = ((2 * ((v323 + 1586151680) ^ v314)) & 0xBDEBBF88 ^ 0x3581BC80) + ((v323 + 1586151680) ^ v314 ^ 0xE53F01BE);
  v327 = v323 - ((2 * v323 + 5206158) & 0x2DBED5A) - 308957452;
  v328 = ((2 * ((v325 - 2147353376) ^ v316)) & 0x7ABFC7E0 ^ 0x321CC400) + ((v325 - 2147353376) ^ v316 ^ 0xE6F195F8);
  v329 = v324 - v328 - ((2 * (v324 - v328) + 180473446) & 0xF96F210) - 986947525;
  v330 = v328 - v325;
  v331 = v322 - v326;
  v332 = v331 - ((2 * v331 - 1961474102) & 0xB618BF18) - 1600683151;
  v333 = v326 - v323;
  v169[2107] = (v323 + 71) ^ 0xC4;
  v334 = v325 - ((2 * v325 + 457041998) & 0xD285E8B0) + 1994516607;
  v169[1317] = v329 ^ 0x70;
  v335 = (v317 ^ 0x3BCADE7A) + (v327 ^ 0x7E920952) - v326 - 554311739;
  v336 = ((2 * v335) & 0x5EBFFFBA) + (v335 ^ 0xAF5FFFDD);
  v169[2012] = (v333 + 60) ^ 0xC4;
  v337 = (v318 ^ 0xDBAE7608) + (v334 ^ 0x16BD0BA7) - v328 + 1029694449;
  v338 = ((2 * v337) & 0x7FEBF71A) + (v337 ^ 0xBFF5FB8D);
  v169[1843] = v334 ^ 0x20;
  v339 = v332 ^ v327 ^ 0x5A61A921;
  v340 = v336 + v339;
  v341 = (v332 ^ 0xDB0C5F8C)
       + v333
       - 1012587130
       + 598476295
       - ((2 * ((v332 ^ 0xDB0C5F8C) + v333 - 1012587130)) & 0x47580C0E);
  v169[1748] = v330 - 2 * ((v330 + 48) & 0xFD ^ v330 & 5) - 88;
  v342 = (v339 ^ (v333 - 1012587130)) - ((2 * (v339 ^ (v333 - 1012587130))) & 0xBD7363E0) + 1589228016;
  v169[1222] = v338 - ((2 * v338 - 26) & 0xF0) - 21;
  v343 = ((2 * (v340 + 1352663075 + (v341 ^ 0x23AC0607))) & 0xD77CDFF2)
       + ((v340 + 1352663075 + (v341 ^ 0x23AC0607)) ^ 0xEBBE6FF9);
  v169[1581] = (v331 - 27) ^ 0xC4;
  v344 = v329 ^ v334;
  v345 = v342 ^ v341;
  v169[1486] = (v336 + 35) ^ 0xC4;
  v346 = v338 + (v344 ^ 0x6E898D50);
  v347 = (v329 ^ 0x87CB7908)
       + v330
       + 1136911738
       + 2085289860
       - ((2 * ((v329 ^ 0x87CB7908) + v330 + 1136911738)) & 0xF895FF08);
  v348 = (v344 ^ (v330 + 1136911738) ^ 0x6E898D50)
       + 1535234570
       - 2 * ((v344 ^ (v330 + 1136911738) ^ 0x6E898D50) & 0x5B81D20E ^ (v344 ^ (v330 + 1136911738)) & 4);
  v349 = ((2 * (v346 + 1074398323 + (v347 ^ 0x7C4AFF84))) & 0x9B76BFD6)
       + ((v346 + 1074398323 + (v347 ^ 0x7C4AFF84)) ^ 0x4DBB5FEB);
  v350 = v330 - v349 - ((2 * (v330 - v349) + 587107018) & 0x56776AC2) - 1128596794;
  v351 = v348 ^ v347;
  v169[2084] = v351 ^ 0xF6;
  v169[1917] = v342 ^ 0x34;
  v169[1558] = (v330 - v349 - ((2 * (v330 - v349) - 54) & 0xC2) - 58) ^ 0x19;
  v352 = v342 ^ 0x8FB7A6F8 ^ (v333 - v343 - ((2 * (v333 - v343) + 1590110974) & 0xA21C2E10) - 2140033913);
  v353 = ((2 * (v352 + (v345 ^ 0x7D15B7F7))) & 0xC7FB12AE) + ((v352 + (v345 ^ 0x7D15B7F7)) ^ 0x63FD8957);
  v169[1653] = v348 ^ 0x72;
  v354 = ((2 * (v350 ^ v348)) & 0xBE763FD6 ^ 0xA0740ED6) + (v350 ^ v348 ^ 0xAF817880);
  v355 = ((2 * ((v351 ^ 0x27CB2D8E) + 549773333 + v354)) & 0xDDBDE39E)
       + (((v351 ^ 0x27CB2D8E) + 549773333 + v354) ^ 0x6EDEF1CF);
  v169[1822] = (v333 - v343 - ((2 * (v333 - v343) - 2) & 0x10) - 121) ^ 0xCC;
  v169[1989] = v349 - ((2 * v349 + 42) & 0xF0) - 115;
  v169[1296] = (v343 + 7) ^ 0xC4;
  v356 = v353 + v343 - 2 * ((v353 + v343 + 4458160) & 0x5F3EDBD ^ (v353 + v343) & 0xC) - 1237846943;
  v169[1391] = v345 ^ 0x33;
  v357 = v355 + v349 - ((2 * (v355 + v349) + 113990796) & 0x7D881DAE) + 36289821;
  v358 = v348 ^ 0xE545DCDD ^ v357;
  v359 = (((v357 ^ 0xBEC40ED7) - 1113796401) ^ 0x57F71F3F)
       - 30409344
       + ((2 * ((v357 ^ 0xBEC40ED7) - 1113796401)) & 0xAFEE3E7E)
       + 120;
  v360 = ((2 * ((v356 ^ 0x5F3EDB1) - 1113796401)) & 0xB8F77EBE) + (((v356 ^ 0x5F3EDB1) - 1113796401) ^ 0x5C7BBF5F);
  LODWORD(STACK[0x6E0]) = v360 - 69765457;
  LODWORD(STACK[0x708]) = v354 + 374064996 + v359;
  LODWORD(STACK[0x6C0]) = ((v352 - 1551613791 + v360) ^ 0xE1CAB777)
                        + 2134769644
                        + ((2 * (v352 - 1551613791 + v360)) & 0xC3956EEE);
  LODWORD(STACK[0x6DC]) = v355 + 1619151543;
  LODWORD(STACK[0x700]) = v355 + 2111427473 + v358 - 1707963489 - ((2 * (v355 + 2111427473 + v358)) & 0x3465173E);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8]
                                        + 8 * (LODWORD(STACK[0x6F8]) ^ (1945 * ((STACK[0x52C] & 1) == 0))))
                            - 8))();
}

uint64_t sub_18CA02A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;

  v9 = 57 * (v5 ^ 0x875);
  v10 = (v6 - v7 + LODWORD(STACK[0x528])) * (v9 ^ 0x863);
  *(_BYTE *)(STACK[0x718] + (v10 + 1585067179) % (((852 - v10) | (v10 + 171)) & 0x3BDu)) = *(_BYTE *)(STACK[0x718] + (v10 + 1585067179) % 0x3BDu) ^ 0x80;
  v11 = (v9 - 1280);
  v12 = v8 - LODWORD(STACK[0x524]);
  LODWORD(STACK[0x518]) = v7;
  v13 = *(_QWORD *)(STACK[0x6E8] + 8 * (((v12 + v7 != 860677773) * (v9 - 2463)) ^ v9));
  STACK[0x6C8] = v11;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(v13 - (v11 ^ 0x4C4)))(153053306, 113, LODWORD(STACK[0x6C0]), LODWORD(STACK[0x708]), a5, LODWORD(STACK[0x6D0]), LODWORD(STACK[0x6E0]), LODWORD(STACK[0x6DC]));
}

uint64_t sub_18CA02B70(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  char v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unint64_t v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  int v478;
  unsigned int v479;
  char v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  unsigned int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  int v547;
  unsigned int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  int v554;
  unsigned int v555;
  unsigned int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  int v567;
  int v568;
  unsigned int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  int v593;
  int v594;
  int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  int v600;
  unsigned int v601;
  int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  int v629;
  int v630;
  unsigned int v631;
  unsigned int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  int v642;
  unsigned int v643;
  unsigned int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  int v657;
  int v658;
  unsigned int v659;
  int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  int v664;
  unsigned int v665;
  int v666;
  unsigned int v667;
  unsigned int v668;
  int v669;
  int v670;
  int v671;
  unsigned int v672;
  int v673;
  unsigned int v674;
  int v675;
  int v676;
  int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  unsigned int v683;
  int v684;
  unsigned int v685;
  int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  int v710;
  unsigned int v711;
  int v712;
  unsigned int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  unsigned int v723;
  int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  unsigned int v733;
  unsigned int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  int v744;
  unsigned int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  int v759;
  unsigned int v760;
  unsigned int v761;
  int v762;
  int v763;
  unsigned int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  unsigned int v770;
  int v771;
  int v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  unsigned int v776;
  int v777;
  unsigned int v778;
  unsigned int v779;
  unsigned int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  unsigned int v786;
  int v787;
  unsigned int v788;
  int v789;
  unsigned int v790;
  unsigned int v791;
  int v792;
  int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  unsigned int v797;
  unsigned int v798;
  unsigned int v799;
  unsigned int v800;
  unsigned int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  unsigned int v805;
  int v806;
  unsigned int v807;
  unsigned int v808;
  int v809;
  int v810;
  unsigned int v811;
  unsigned int v812;
  int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  int v818;
  int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  unsigned int v824;
  unsigned int v825;
  unsigned int v826;
  int v827;
  int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  unsigned int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  int v840;
  int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  unsigned int v847;
  unsigned int v848;
  int v849;
  unsigned int v850;
  int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  int v856;
  int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  unsigned int v862;
  int v863;
  unsigned int v864;
  unsigned int v865;
  int v866;
  unsigned int v867;
  unsigned int v868;
  unsigned int v869;
  unsigned int v870;
  unsigned int v871;
  unsigned int v872;
  unsigned int v873;
  int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  unsigned int v880;
  unsigned int v881;
  unsigned int v882;
  int v883;
  int v884;
  int v885;
  int v886;
  unsigned int v887;
  unsigned int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  int v893;
  unsigned int v894;
  int v895;
  int v896;
  int v897;
  unsigned int v898;
  int v899;
  unsigned int v900;
  int v901;
  int v902;
  BOOL v903;
  int v904;
  int v905;
  int v906;
  int v907;
  unsigned int v908;
  unsigned int v909;
  int v910;
  int v911;
  int v912;
  unsigned int v913;
  int v914;
  int v915;
  unsigned int v916;
  unsigned int v917;
  int v918;
  unsigned int v919;
  unsigned int v920;
  int v921;
  unsigned int v922;
  unsigned int v923;
  int v924;
  unsigned int v925;
  int v926;
  unint64_t v927;
  int v928;
  int v929;
  unsigned int v930;
  int v931;
  int v932;
  int v933;
  int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  unsigned int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  unsigned int v943;
  unsigned int v944;
  unsigned int v945;
  int v946;
  unsigned int v947;
  unsigned int v948;
  int v949;
  int v950;
  int v951;
  unsigned int v952;
  int v953;
  unsigned int v954;
  unsigned int v955;
  unsigned int v956;
  int v957;
  unsigned int v958;
  unsigned int v959;
  unsigned int v960;
  char *v961;
  unint64_t v962;
  unsigned int v963;
  int v964;
  unsigned int v965;
  int v966;
  unsigned int v967;
  unsigned int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  unsigned int v973;
  unsigned int v974;
  unsigned int v975;
  unsigned int v976;
  unsigned int v977;
  unsigned int v978;
  unsigned int v979;
  int v980;
  unsigned int v981;
  unsigned int v982;
  int v983;
  int v984;
  unsigned int v985;
  unsigned int v986;
  unsigned int v987;
  unsigned int v988;
  int v989;
  unsigned int v990;
  int v991;
  unsigned int v992;
  int v993;
  int v994;
  unsigned int v995;
  int v996;
  int v997;
  unsigned int v998;
  unsigned int v999;
  int v1000;
  unsigned int v1001;
  unsigned int v1002;
  int v1003;
  unsigned int v1004;
  unsigned int v1005;
  unsigned int v1006;
  unsigned int v1007;
  int v1008;
  unsigned int v1009;
  int v1010;
  unsigned int v1011;
  unint64_t v1012;
  unsigned int v1013;
  unsigned int v1014;
  int v1015;
  unsigned int v1016;
  int v1017;
  unsigned int v1018;
  unsigned int v1019;
  int v1020;
  unsigned int v1021;
  int v1022;
  unsigned int v1023;
  int v1024;
  int v1025;
  unsigned int v1026;
  unsigned int v1027;
  int v1028;
  int v1029;
  unsigned int v1030;
  int v1031;
  unsigned int v1032;
  unsigned int v1033;
  int v1034;
  int v1035;
  int v1036;
  int v1037;
  unsigned int v1038;
  unsigned int v1039;
  unsigned int v1040;
  int v1041;
  unsigned int v1042;
  int v1043;
  int v1044;
  unsigned int v1045;
  unsigned int v1046;
  unsigned int v1047;
  int v1048;
  unsigned int v1049;
  int v1050;
  unsigned int v1051;
  unsigned int v1052;
  int v1053;
  int v1054;
  unsigned int v1055;
  unsigned int v1056;
  unsigned int v1057;
  unsigned int v1058;
  unsigned int v1059;
  unsigned int v1060;
  unsigned int v1061;
  unsigned int v1062;
  unsigned int v1063;
  unsigned int v1064;
  unsigned int v1065;
  int v1066;
  unsigned int v1067;
  unsigned int v1068;
  unsigned int v1069;
  unsigned int v1070;
  unsigned int v1071;
  int v1072;
  unsigned int v1073;
  unsigned int v1074;
  int v1075;
  unsigned int v1076;
  int v1077;
  unsigned int v1078;
  int v1079;
  unsigned int v1080;
  unsigned int v1081;
  unsigned int v1082;
  unsigned int v1083;
  unsigned int v1084;
  int v1085;
  unsigned int v1086;
  unsigned int v1087;
  unsigned int v1088;
  int v1089;
  unsigned int v1090;
  int v1091;
  int v1092;
  int v1093;
  int v1094;
  int v1095;
  int v1096;
  int v1097;
  int v1098;
  int v1099;
  int v1100;
  unsigned int v1101;
  int v1102;
  unsigned int v1103;
  int v1104;
  unsigned int v1105;
  unsigned int v1106;
  int v1107;
  int v1108;
  int v1109;
  unsigned int v1110;
  unsigned int v1111;
  unsigned int v1112;
  unsigned int v1113;
  unsigned int v1114;
  int v1115;
  unsigned int v1116;
  int v1117;
  unsigned int v1118;
  unsigned int v1119;
  int v1120;
  unsigned int v1121;
  unsigned int v1122;
  unsigned int v1123;
  unsigned int v1124;
  int v1125;
  int v1126;
  unsigned int v1127;
  unsigned int v1128;
  int v1129;
  unsigned int v1130;
  unsigned int v1131;
  int v1132;
  unsigned int v1133;
  unsigned int v1134;
  int v1135;
  int v1136;
  int v1137;
  unsigned int v1138;
  unsigned int v1139;
  unsigned int v1140;
  unsigned int v1141;
  unsigned int v1142;
  unsigned int v1143;
  unsigned int v1144;
  int v1145;
  int v1146;
  unsigned int v1147;
  unsigned int v1148;
  int v1149;
  unsigned int v1150;
  unsigned int v1151;
  unsigned int v1152;
  int v1153;
  unsigned int v1154;
  unsigned int v1155;
  unsigned int v1156;
  unsigned int v1157;
  int v1158;
  int v1159;

  v15 = a7 + LODWORD(STACK[0x568]) - ((2 * (a7 + LODWORD(STACK[0x568])) + 1197271914) & 0xCD38E9A6) - 1974801784;
  v16 = (a8 + a6 - 623901080) ^ 0xAB5F0637;
  LODWORD(STACK[0x6F4]) = v16;
  v17 = *(unsigned __int8 *)(v12
                           + (((v15 >> 28) ^ 0xE) * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)(((v15 >> 28) ^ 0xE) * v14 + 279719)) >> 32)
                                          * v11));
  LODWORD(STACK[0x6B4]) = LODWORD(STACK[0x53C]) - v16;
  v18 = (HIBYTE(v15) & 0xF ^ 6) * v14 + 279719;
  v19 = ((v15 >> 20) & 0xF ^ 9) * v14 + 279719;
  v20 = *(unsigned __int8 *)(v12 + (v18 - ((4487950 * (unint64_t)v18) >> 32) * v11)) ^ 0x78;
  v21 = LODWORD(STACK[0x540]) - a6 + 971656007;
  LODWORD(STACK[0x6C0]) = a3;
  v22 = v21 - ((2 * v21) & 0xD2EFD418) + 1769466380;
  v23 = (v20 << 8) ^ ((v17 ^ 0x78) << 12);
  v24 = v19 - ((4487950 * (unint64_t)v19) >> 32) * v11;
  v25 = (HIWORD(v15) & 0xF ^ 0xC) * v14 + 279719;
  v26 = (v23 | *(unsigned __int8 *)(v12 + (v25 - ((4487950 * (unint64_t)v25) >> 32) * v11)) ^ 0x78) << 8;
  v27 = (((unsigned __int16)v15 >> 12) ^ 7) * v14 + 279719;
  v28 = ((v15 >> 8) & 0xF ^ 4) * v14 + 279719;
  v29 = v26 ^ ((*(unsigned __int8 *)(v12 + v24) ^ 0x78) << 12);
  v30 = *(unsigned __int8 *)(v12 + (v28 - ((4487950 * (unint64_t)v28) >> 32) * v11)) ^ 0x78;
  v31 = ((v15 >> 4) ^ 0xD) * v14 + 279719;
  v32 = *(unsigned __int8 *)(v12 + (v31 - ((4487950 * (unint64_t)v31) >> 32) * v11));
  v33 = ((v29 | v30) << 8) + 1237899909 - (((v29 | v30) << 9) & 0x9391B400);
  v34 = v33 ^ ((*(unsigned __int8 *)(v12 + (v27 - ((4487950 * (unint64_t)v27) >> 32) * v11)) ^ 0x78) << 12);
  v35 = *(unsigned __int8 *)(v12
                           + ((v15 & 0xF ^ 3) * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)((v15 & 0xF ^ 3) * v14 + 279719)) >> 32) * v11));
  LODWORD(STACK[0x6D0]) = a6;
  v36 = v35 ^ 0x78;
  LODWORD(STACK[0x6E0]) = a7;
  LODWORD(STACK[0x6DC]) = a8;
  v37 = v10;
  v38 = ((((((v22 >> 28) ^ 6) + 649) & 0x8E) + ((374 - ((v22 >> 28) ^ 6)) & 0x12E)) | 0xAB) * (((v22 >> 28) ^ 6) + 649);
  v39 = *(unsigned __int8 *)(v12 + (v38 - ((4487950 * (unint64_t)v38) >> 32) * v11)) ^ 0x78;
  v40 = v32 ^ 0x78;
  v41 = (HIBYTE(v22) & 0xF ^ 9) * v14 + 279719;
  v42 = (v34 ^ 0x49C8DA85 | v35 ^ 0x78) ^ (16 * v40);
  v43 = ((v22 >> 20) & 0xF ^ 7) * v14 + 279719;
  v44 = (HIWORD(v22) & 0xF ^ 7) * v14 + 279719;
  v45 = ((*(unsigned __int8 *)(v12 + (v41 - ((4487950 * (unint64_t)v41) >> 32) * v11)) ^ 0x78) << 8) ^ (v39 << 12) | *(unsigned __int8 *)(v12 + (v44 - ((4487950 * (unint64_t)v44) >> 32) * v11)) ^ 0x78;
  v46 = (((unsigned __int16)v22 >> 12) ^ 0xE) * v14 + 279719;
  v47 = ((((v22 >> 8) ^ 0x6977EA) & 0xF ^ 0x289) + ((2 * ((v22 >> 8) ^ 0x6977EA)) & 0x12)) * v14;
  v48 = (v22 ^ 0xCu) >> ((v35 & 4 ^ 4) + (v35 & 4));
  v49 = (v45 << 8) ^ ((*(unsigned __int8 *)(v12 + (v43 - ((4487950 * (unint64_t)v43) >> 32) * v11)) ^ 0x78) << 12);
  v50 = (((374 - v48) & v14) + ((v48 + 649) & v14)) * (v48 + 649);
  v51 = *(unsigned __int8 *)(v12 + (v50 - ((4487950 * (unint64_t)v50) >> 32) * v11));
  v52 = v49 | *(unsigned __int8 *)(v12 + (v47 - ((4487950 * (unint64_t)v47) >> 32) * v11)) ^ 0x78;
  v53 = (v52 << 8) - 1476918029 - ((v52 << 9) & 0x4FF00800);
  v54 = v53 ^ ((*(unsigned __int8 *)(v12 + (v46 - ((4487950 * (unint64_t)v46) >> 32) * v11)) ^ 0x78) << 12);
  v55 = v51 ^ 0x78;
  v56 = *(unsigned __int8 *)(v12
                           + ((v22 & 0xF ^ 0xC) * v14 + 279719)
                           % ((((v22 & 0xF ^ 0xC) * v14 + 279719) | (856 - (v22 & 0xF ^ 0xC) * v14)) & v11)) ^ 0x78;
  v57 = v54 ^ 0xA7F804F3 | v56;
  v58 = v36 & 0xF;
  v59 = v58 | (16 * (v56 & 0xF));
  v60 = *(unsigned __int8 *)(STACK[0x710] + 1459) ^ 0x78;
  LODWORD(STACK[0x688]) = 32 * v60;
  LODWORD(STACK[0x698]) = 16 * v60;
  v61 = v59 * v14;
  LODWORD(STACK[0x700]) = v37;
  v62 = v12;
  v63 = *(unsigned __int8 *)(v12
                           + (v61 + 290925 - ((4487950 * (unint64_t)(v61 + 290925)) >> 32) * v11));
  v64 = 16 * v60 - 1304816322 - ((32 * v60) & 0xA60);
  LODWORD(STACK[0x6C8]) = v64;
  v65 = (((v63 ^ 0x78) - 1304816322 - ((2 * (v63 ^ 0x78)) & 0x7C)) ^ v64) * v14;
  v66 = *(unsigned __int8 *)(v12 + v65 + 290925 - (v65 + 290925) / 0x3BD * v11);
  v67 = *(unsigned __int8 *)(v12 + v65 - v65 / 0x3BD * v11);
  v68 = v57 ^ (16 * v55);
  v69 = 431
      * ((((v67 >> 4) ^ 7) - ((v67 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v12
                                                                                              + (v61 - ((4487950 * (unint64_t)v61) >> 32) * v11)))
      + 290925;
  v70 = 431 * (v68 & 0xF0 | (v42 >> 4));
  v71 = 431
      * (*(unsigned __int8 *)(v62
                            + (v70 + 290925 - ((4487950 * (unint64_t)(v70 + 290925)) >> 32) * v11)) ^ (16 * (*(unsigned __int8 *)(v62 + (v69 - ((4487950 * (unint64_t)v69) >> 32) * v11)) ^ 0x78)) ^ 0x78);
  v72 = *(unsigned __int8 *)(v12
                           + (v71 + 290925 - ((4487950 * (unint64_t)(v71 + 290925)) >> 32) * v11)) ^ 0x78;
  v73 = *(unsigned __int8 *)(v12 + (v71 - ((4487950 * (unint64_t)v71) >> 32) * v11));
  v74 = 431
      * ((((v73 >> 4) ^ 7) - ((v73 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v12
                                                                                              + (v70 - ((4487950 * (unint64_t)v70) >> 32) * v11)))
      + 290925;
  v75 = 431 * ((v68 >> 4) & 0xF0 | (v42 >> 8) & 0xF);
  v76 = 431
      * (*(unsigned __int8 *)(v62
                            + (v75 + 290925 - ((4487950 * (unint64_t)(v75 + 290925)) >> 32) * v11)) ^ (16 * (*(unsigned __int8 *)(v62 + (v74 - ((4487950 * (unint64_t)v74) >> 32) * v11)) ^ 0x78)) ^ 0x78);
  v77 = *(unsigned __int8 *)(v12
                           + (v76 + 290925 - ((4487950 * (unint64_t)(v76 + 290925)) >> 32) * v11));
  v78 = v66 ^ 0x78;
  v79 = *(unsigned __int8 *)(v62 + (v76 - ((4487950 * (unint64_t)v76) >> 32) * v11));
  v80 = v78 ^ (16 * v72);
  v81 = (((v79 >> 4) ^ 7) - ((v79 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                             + (v75 - ((4487950 * (unint64_t)v75) >> 32) * v11));
  v82 = ((unsigned __int16)v34 >> 12) ^ 0xD;
  v83 = v77 ^ 0x78;
  v84 = 2 * ((v54 >> 8) & 0x70 | v82 & 0x7F) + (((v54 >> 8) & 0xF0 | v82) ^ 0xBEF7E97F);
  v85 = *(unsigned __int8 *)(v62
                           + (431 * v81
                                          + 290925
                                          - ((4487950 * (unint64_t)(431 * v81 + 290925)) >> 32)
                                          * v11)) ^ 0x78;
  v86 = 16 * v85 - 757054088 - ((32 * v85) & 0xAE0);
  v87 = ((v86 & 0x1A0 ^ 0x120 | v86 & 0x1A0 ^ 0x8F) & ((v84 + 1091049764) & 0x1BF | (1056433883 - v84) & 0x30D419BF))
      * (v84 + 1091049764);
  v88 = 431 * v84 + 2090722095;
  v89 = *(unsigned __int8 *)(v62 + v87 - v87 / 0x3BD * v11) ^ 0x78;
  v90 = 431 * ((v89 - 757054088 - ((2 * v89) & 0xF0)) ^ v86);
  v91 = *(unsigned __int8 *)(v62 + v90 + 290925 - (v90 + 290925) / 0x3BD * v11);
  v92 = HIWORD(v34) & 0xF;
  v93 = *(unsigned __int8 *)(v62 + v90 - v90 / 0x3BD * v11);
  v94 = 431
      * ((((v93 >> 4) ^ 7) - ((v93 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                              + v88
                                                                                              - v88 / 0x3BD * v11))
      + 290925;
  v95 = ((v91 ^ 0x78) << 12) ^ (v83 << 8);
  v96 = *(unsigned __int8 *)(v62 + (v94 - ((4487950 * (unint64_t)v94) >> 32) * v11)) ^ 0x78;
  v97 = 431 * (((v54 >> 12) & 0xF0 | v92) ^ 0x88);
  LODWORD(STACK[0x6B8]) = v97;
  v98 = 431
      * (*(unsigned __int8 *)(v62
                            + (v97 + 290925 - ((4487950 * (unint64_t)(v97 + 290925)) >> 32) * v11)) ^ (16 * v96) ^ 0x78);
  v99 = *(unsigned __int8 *)(v62
                           + (v98 + 290925 - ((4487950 * (unint64_t)(v98 + 290925)) >> 32) * v11)) ^ 0x78;
  v100 = *(unsigned __int8 *)(v62 + (v98 - ((4487950 * (unint64_t)v98) >> 32) * v11));
  v101 = 431
       * ((((v100 >> 4) ^ 7) + (~(v100 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v62 + (v97 - ((4487950 * (unint64_t)v97) >> 32) * v11)))
       + 290925;
  v102 = 431 * ((HIWORD(v53) & 0xF0 | (v33 >> 20) & 0xF) ^ 0xFC);
  v103 = 431
       * (*(unsigned __int8 *)(v62
                             + (v102 + 290925 - ((4487950 * (unint64_t)(v102 + 290925)) >> 32)
                                                            * v11)) ^ (16
                                                                     * (*(unsigned __int8 *)(v62
                                                                                           + (v101 - ((4487950 * (unint64_t)v101) >> 32) * v11)) ^ 0x78)) ^ 0x78);
  v104 = *(unsigned __int8 *)(v62
                            + (v103 + 290925 - ((4487950 * (unint64_t)(v103 + 290925)) >> 32) * v11));
  v105 = *(unsigned __int8 *)(v62 + (v103 - ((4487950 * (unint64_t)v103) >> 32) * v11));
  v106 = 431
       * ((((v105 >> 4) ^ 7) - ((v105 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v102 - ((4487950 * (unint64_t)v102) >> 32) * v11)))
       + 290925;
  v107 = ((v104 ^ 0x78) << 20) ^ (v99 << 16);
  v108 = 431 * (((v53 >> 20) & 0xF0 | HIBYTE(v33) & 0xF) ^ 0x79);
  v109 = 431
       * (*(unsigned __int8 *)(v62
                             + (v108 + 290925 - ((4487950 * (unint64_t)(v108 + 290925)) >> 32)
                                                            * v11)) ^ (16
                                                                     * (*(unsigned __int8 *)(v62
                                                                                           + (v106 - ((4487950 * (unint64_t)v106) >> 32) * v11)) ^ 0x78)) ^ 0x78);
  v110 = v109 + 290925 - ((4487950 * (unint64_t)(v109 + 290925)) >> 32) * v11;
  v111 = *(unsigned __int8 *)(v62 + (v109 - ((4487950 * (unint64_t)v109) >> 32) * v11));
  v112 = v107 ^ v95 ^ v80;
  v113 = (((v111 >> 4) ^ 7) - ((v111 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                + (v108 - ((4487950 * (unint64_t)v108) >> 32) * v11));
  v114 = 431 * ((HIBYTE(v53) & 0xF0 | (v33 >> 28)) ^ 0xA4) + 290925;
  v115 = 431
       * (*(unsigned __int8 *)(v62 + (v114 - ((4487950 * (unint64_t)v114) >> 32) * v11)) ^ (16 * (*(unsigned __int8 *)(v62 + (431 * v113 + 290925 - ((4487950 * (unint64_t)(431 * v113 + 290925)) >> 32) * v11)) ^ 0x78)) ^ 0x78)
       + 290925;
  v116 = v112 ^ ((*(unsigned __int8 *)(v62 + v110) ^ 0x78) << 24);
  v117 = v116 ^ ((*(unsigned __int8 *)(v62 + (v115 - ((4487950 * (unint64_t)v115) >> 32) * v11)) ^ 8) << 28);
  v118 = 431 * (v58 & 0xFFFFFF0F | (16 * (v78 & 0xF))) + 168952;
  v119 = *(unsigned __int8 *)(v62 + (v118 - ((4487950 * (unint64_t)v118) >> 32) * v11));
  v120 = 431 * (v80 & 0xF0 | (v42 >> 4)) + 168952;
  v121 = v119 ^ (16
               * (*(unsigned __int8 *)(v62 + (v120 - ((4487950 * (unint64_t)v120) >> 32) * v11)) ^ 0x78)) ^ 0x78;
  v122 = 431 * (((v95 ^ v80) >> 4) & 0xF0 | (v42 >> 8) & 0xF) + 168952;
  v123 = v82 & 0xFFFFFF0F | (16 * ((unsigned __int16)v95 >> 12));
  v124 = (((119 - v123) | (v123 + 392)) & 0x1AF) * (v123 + 392);
  v125 = v121 ^ ((*(unsigned __int8 *)(v62 + (v122 - ((4487950 * (unint64_t)v122) >> 32) * v11)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v124 - ((4487950 * (unint64_t)v124) >> 32) * v11)) ^ 0x78) << 12);
  v126 = 431
       * ((v92 | (16 * (((((unsigned __int16)v95 >> 12) ^ 0xF) + ((unsigned __int16)v95 >> 12)) & HIWORD(v112)))) ^ 8)
       + 168952;
  v127 = v125 ^ ((*(unsigned __int8 *)(v62 + v126 - v126 / 0x3BD * v11) ^ 0x78) << 16);
  v128 = 431 * ((HIWORD(v107) & 0xF0 | (v33 >> 20) & 0xF) ^ 0xC) + 168952;
  v129 = v127 ^ ((*(unsigned __int8 *)(v62 + (v128 - ((4487950 * (unint64_t)v128) >> 32) * v11)) ^ 0x78) << 20);
  v130 = 431 * (((v116 >> 20) & 0xF0 | HIBYTE(v33) & 0xF) ^ 9) + 168952;
  v131 = (HIBYTE(v117) & 0xF0 | (v33 >> 28)) ^ 4;
  v132 = 431 * ((v131 + 2124082879 - ((2 * v131) & 0xFFFFFF7F)) ^ 0x7E9AEEBF) + 168952;
  v133 = ((*(unsigned __int8 *)(v62 + v132 - v132 / 0x3BD * v11) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v62 + (v130 - ((4487950 * (unint64_t)v130) >> 32) * v11)) ^ 0x78) << 24) ^ v129;
  LOBYTE(v130) = BYTE2(v127) - ((v127 >> 15) & 0xA6) - 13;
  v134 = *(unsigned __int8 *)(v62
                            + (431 * ((v129 >> 20) & 0xF)
                                           + 404709
                                           - ((4487950 * (unint64_t)(431 * ((v129 >> 20) & 0xF) + 404709)) >> 32)
                                           * v11)) ^ 0x78;
  v135 = *(unsigned __int8 *)(v62
                            + (431 * (v130 & 0xF ^ 3)
                                           + 404709
                                           - ((4487950 * (unint64_t)(431 * (v130 & 0xF ^ 3) + 404709)) >> 32)
                                           * v11)) ^ 0x78;
  v136 = ((*(unsigned __int8 *)(v62
                              + (431 * (HIBYTE(v133) & 0xF)
                                             + 404709
                                             - ((4487950 * (unint64_t)(431 * (HIBYTE(v133) & 0xF) + 404709)) >> 32)
                                             * v11)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62
                                                                                          + (431 * (v133 >> 28) + 404709 - ((4487950 * (unint64_t)(431 * (v133 >> 28) + 404709)) >> 32) * v11)) ^ 0x78) << 12) | v135;
  v137 = 431 * (BYTE1(v125) >> (((v130 & 8) + (v130 & 8 ^ 0xB8) + 76) & 0xFC)) + 404709;
  v138 = v119 & 0xF ^ 8;
  v139 = *(unsigned __int8 *)(v62
                            + (431 * (v121 >> 4)
                                           + 404709
                                           - ((4487950
                                             * (unint64_t)(431 * (v121 >> 4)
                                                                + 404709)) >> 32)
                                           * v11)) ^ 0x78;
  v140 = 431 * v138 + 404709 - ((4487950 * (unint64_t)(431 * v138 + 404709)) >> 32) * v11;
  v141 = v140 + 771918163 - ((2 * v140) & 0x2A6);
  v142 = (((*(unsigned __int8 *)(v62
                               + (431 * ((v125 >> 8) & 0xF)
                                              + 404709
                                              - ((4487950 * (unint64_t)(431 * ((v125 >> 8) & 0xF) + 404709)) >> 32)
                                              * v11)) ^ 0x78) << 8) | (((v136 - 2 * (v136 & 0x3417 ^ v135 & 0x15) + 13314) ^ (16 * v134 - ((32 * v134) & 0x800) + 13314)) << 16)) ^ ((*(unsigned __int8 *)(v62 + (v137 - ((4487950 * (unint64_t)v137) >> 32) * v11)) ^ 0x78) << 12);
  v143 = *(unsigned __int8 *)(v62 + (v141 ^ 0x2E028953u));
  LODWORD(STACK[0x708]) = (v13 + 1113012567) ^ 0x4728E0D1 ^ v15;
  v144 = (v13 + LODWORD(STACK[0x6E0]) - 39608818) ^ 0xAB5F0637;
  LODWORD(STACK[0x6A8]) = v144;
  v145 = (v8 - 823912372) ^ (16 * v139) ^ (v142 | v143 ^ 0x78);
  LODWORD(STACK[0x690]) = v145 + 1772975288 - ((2 * v145) & 0xD35AE970);
  v146 = LODWORD(STACK[0x538])
       - 1838469624
       + v144
       + 990654101
       - ((2 * (LODWORD(STACK[0x538]) - 1838469624 + v144)) & 0x76185D2A);
  v147 = v141 & 0x373 ^ 0x3215AA20 | v141 & 0x373 ^ 0x153;
  v148 = 431 * (HIBYTE(v146) & 0xF ^ 0xB) + 279719;
  v149 = v148 - ((4487950 * (unint64_t)v148) >> 32) * v11;
  v150 = v149 - 947978287 - ((2 * v149) & 0x7A2);
  v151 = LODWORD(STACK[0x6B4]) - 301576822 - ((2 * (LODWORD(STACK[0x6B4]) - 301576822)) & 0xDF9FABEA) - 271591947;
  v152 = (BYTE2(v146) ^ 0xC) >> (((v150 + 8) & 4 ^ 4) + ((v150 + 8) & 4));
  v153 = ((*(unsigned __int8 *)(v62 + (v150 ^ 0xC77EFFD1)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62
                                                                                                + (431 * ((v146 >> 28) ^ 3) + 279719 - ((4487950 * (unint64_t)(431 * ((v146 >> 28) ^ 3) + 279719)) >> 32) * v11)) ^ 0x78) << 12);
  v154 = 431 * ((BYTE2(v146) ^ 0xC) & 0xF) + 279719;
  v155 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x538])
                            + 11784
                            + v144
                            + 11925
                            - ((2 * (LOWORD(STACK[0x538]) + 11784 + v144)) & 0x5D2A)) >> 12) ^ 2)
       + 279719;
  v156 = 431 * ((v146 >> 8) & 0xF ^ 0xE) + 279719;
  v157 = ((v153 | *(unsigned __int8 *)(v62 + (v154 - ((4487950 * (unint64_t)v154) >> 32) * v11)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * v152 + 279719 - ((4487950 * (unint64_t)(431 * v152 + 279719)) >> 32) * v11)) ^ 0x78) << 12);
  v158 = v156 - ((4487950 * (unint64_t)v156) >> 32) * v11;
  v159 = 431
       * (((LOBYTE(STACK[0x538]) + 8 + v144 - 107 - ((2 * (LOBYTE(STACK[0x538]) + 8 + v144)) & 0x2A)) >> 4) ^ 9)
       + 279719;
  v160 = v157 | *(unsigned __int8 *)(v62 + v158) ^ 0x78;
  v161 = (v160 << 8) + 561530568 - ((v160 << 9) & 0x42F08C00);
  v162 = v161 ^ ((*(unsigned __int8 *)(v62 + (v155 - ((4487950 * (unint64_t)v155) >> 32) * v11)) ^ 0x78) << 12);
  v163 = *(unsigned __int8 *)(v62
                            + (431 * (v146 & 0xF ^ 5)
                                           + 279719
                                           - ((4487950 * (unint64_t)(431 * (v146 & 0xF ^ 5) + 279719)) >> 32)
                                           * v11)) ^ 0x78;
  v164 = (v162 ^ 0x217846C8 | v163) ^ (16
                                     * (*(unsigned __int8 *)(v62
                                                           + (v159
                                                                          - ((4487950 * (unint64_t)v159) >> 32)
                                                                          * v11)) ^ 0x78));
  v165 = 431 * (~HIBYTE(v151) & 0xF) + 279719;
  v166 = 431 * ((v151 >> 20) & 0xF ^ 0xC) + 279719;
  v167 = 431 * (~HIWORD(v151) & 0xF) + 279719;
  v168 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x6B4]) + 19850 - ((2 * (LOWORD(STACK[0x6B4]) + 19850)) & 0xABEA) - 10763) >> 12) ^ 0xD)
       + 279719;
  v169 = ((*(unsigned __int8 *)(v62 + (v165 - ((4487950 * (unint64_t)v165) >> 32) * v11)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v151 >> 28) ^ 0xE) + 279719 - ((4487950 * (unint64_t)(431 * ((v151 >> 28) ^ 0xE) + 279719)) >> 32) * v11)) ^ 0x78) << 12);
  v170 = *(unsigned __int8 *)(v62 + (v168 - ((4487950 * (unint64_t)v168) >> 32) * v11));
  v171 = *(unsigned __int8 *)(v62 + (v167 - ((4487950 * (unint64_t)v167) >> 32) * v11)) ^ v169 ^ (16 * (*(unsigned __int8 *)(v62 + (v166 - ((4487950 * (unint64_t)v166) >> 32) * v11)) ^ 0x78)) ^ 0x78;
  v172 = 431 * ((v151 >> 8) & 0xF ^ 5) + 279719;
  v173 = v170 ^ 0x78;
  v174 = v172 - ((4487950 * (unint64_t)v172) >> 32) * v11;
  v175 = v174 - 1252608190 - ((2 * v174) & 0x684);
  v176 = ((v175 & 0xF ^ 2) + (v175 & 0xF ^ 0xD)) & (v151 ^ 0x15);
  v177 = 431 * (~(v151 >> 4) & 0xF) + 279719;
  v178 = v163 & 0xF;
  v179 = *(unsigned __int8 *)(v62 + (v177 - ((4487950 * (unint64_t)v177) >> 32) * v11));
  v180 = 431 * v176 + 279719;
  v181 = (v171 << 16) - 173062938 - ((v171 << 17) & 0xEB5E0000);
  v182 = ((v181 ^ 0xF5AF44E6) + ((*(unsigned __int8 *)(v62 + (v175 ^ 0xB556B742)) ^ 0x78) << 8)) ^ (v173 << 12);
  v183 = *(unsigned __int8 *)(v62 + (v180 - ((4487950 * (unint64_t)v180) >> 32) * v11)) ^ 0x78;
  v184 = (v182 | v183) ^ (16 * (v179 ^ 0x78));
  v185 = 431 * (v178 & 0xFFFFFF0F | (16 * (v183 & 0xF)));
  v186 = *(unsigned __int8 *)(v62
                            + (v185 + 290925 - ((4487950 * (unint64_t)(v185 + 290925)) >> 32) * v11));
  v187 = 431 * (((v186 ^ 0x78) - 1304816322 - ((2 * (v186 ^ 0x78)) & 0x7C)) ^ LODWORD(STACK[0x6C8]));
  v188 = v187 + 290925;
  v189 = (v187 + 290925) / 0x3BD;
  v190 = *(unsigned __int8 *)(v62 + v187 - v187 / 0x3BD * v11);
  v191 = 431
       * ((((v190 >> 4) ^ 7) - ((v190 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v185 - ((4487950 * (unint64_t)v185) >> 32) * v11)))
       + 290925;
  v192 = v184 & 0xF0 | (v164 >> 4);
  v193 = 431
       * (*(unsigned __int8 *)(v62
                             + (431 * v192
                                            + 290925
                                            - ((4487950 * (unint64_t)(431 * v192 + 290925)) >> 32)
                                            * v11)) ^ (16
                                                     * (*(unsigned __int8 *)(v62
                                                                           + (v191
                                                                                          - ((4487950
                                                                                            * (unint64_t)v191) >> 32)
                                                                                          * v11)) ^ 0x78)) ^ 0x78);
  v194 = v147 + LODWORD(STACK[0x6DC]);
  v195 = *(unsigned __int8 *)(v62
                            + (v193 + 290925 - ((4487950 * (unint64_t)(v193 + 290925)) >> 32) * v11)) ^ 0x78;
  v196 = *(unsigned __int8 *)(v62 + (v193 - 957 * ((4487950 * (unint64_t)v193) >> 32)));
  v197 = 431
       * ((((v196 >> 4) ^ 7) - ((v196 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + ((431 * v192 - 1618478592 - ((862 * v192) & 0x3F400)) ^ 0x9F87FA00)
                                                                                                 % ((431 * v192 - 1618478592) & 0x3BD ^ 0x1BD | (431 * v192 - 1618478592) & 0x3BD ^ 0x200u)))
       + 290925;
  v198 = 431 * ((v184 >> 4) & 0xF0 | (v164 >> 8) & 0xF);
  v199 = *(unsigned __int8 *)(v62
                            + (v198 + 290925 - 957 * ((4487950 * (unint64_t)(v198 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v197 - 957 * ((4487950 * (unint64_t)v197) >> 32))) ^ 0x78)) ^ 0x78;
  v200 = *(unsigned __int8 *)(v62 + v188 - v189 * v11) ^ (16 * v195) ^ ((*(unsigned __int8 *)(v62
                                                                                            + (431 * v199 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v199 + 290925)) >> 32))) ^ 0x78) << 8);
  v201 = 431 * v199 + 1566994988 - ((862 * v199) & 0xCE458);
  v202 = ((unsigned __int16)v162 >> 12) ^ 4;
  v203 = *(unsigned __int8 *)(v62 + (v201 ^ 0x5D66722Cu) % ((v201 & 0x3BD ^ 0x22C) + (v201 & 0x3BD ^ 0x191u)));
  v204 = (((v203 >> 4) ^ 7) - ((v203 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                + (v198 - 957 * ((4487950 * (unint64_t)v198) >> 32)));
  v205 = 431 * ((v182 >> 8) & 0xF0 | v202);
  v206 = 431
       * (*(unsigned __int8 *)(v62
                             + (v205 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v205 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (431 * v204 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v204 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v207 = v200 ^ ((*(unsigned __int8 *)(v62
                                     + (v206
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v206 + 290925)) >> 32))) ^ 0x78) << 12);
  v208 = *(unsigned __int8 *)(v62 + (v206 - 957 * ((4487950 * (unint64_t)v206) >> 32)));
  v209 = 431
       * ((((v208 >> 4) ^ 7) - ((v208 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v205 - 957 * ((4487950 * (unint64_t)v205) >> 32))))
       + 290925;
  v210 = 431 * (((v182 >> 12) & 0xF0 | HIWORD(v162) & 0xF) ^ 8);
  v211 = 431
       * (*(unsigned __int8 *)(v62 + (v210 + 290925) % (((v210 + 290925) | (914 - v210)) & 0x338 | 0x85)) ^ (16 * (*(unsigned __int8 *)(v62 + (v209 - 957 * ((4487950 * (unint64_t)v209) >> 32))) ^ 0x78)) ^ 0x78);
  v212 = *(unsigned __int8 *)(v62
                            + (v211 + 290925 - 957 * ((4487950 * (unint64_t)(v211 + 290925)) >> 32)));
  v213 = *(unsigned __int8 *)(v62 + (v211 - 957 * ((4487950 * (unint64_t)v211) >> 32)));
  v214 = 431
       * ((((v213 >> 4) ^ 7) - ((v213 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v210 - 957 * ((4487950 * (unint64_t)v210) >> 32))))
       + 290925;
  v215 = v214 - 957 * ((4487950 * (unint64_t)v214) >> 32);
  v216 = v215 + 1011830236 - ((2 * v215) & 0x3B8);
  v217 = v207 ^ ((unint64_t)(v212 ^ 0x78u) << ((~(_BYTE)v216 & 0x10 ^ 0x10) + (~(_BYTE)v216 & 0x10u)));
  v218 = (v161 >> 20) & 0xF ^ 7;
  v219 = 431 * (v171 & 0xF0 | v218);
  v220 = 431
       * (*(unsigned __int8 *)(v62
                             + (v219 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v219 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v216 ^ 0x3C4F4DDCu)) ^ 0x78)) ^ 0x78);
  v221 = *(unsigned __int8 *)(v62
                            + (v220 + 290925 - 957 * ((4487950 * (unint64_t)(v220 + 290925)) >> 32)));
  v222 = *(unsigned __int8 *)(v62 + (v220 - 957 * ((4487950 * (unint64_t)v220) >> 32)));
  v223 = HIBYTE(v161) & 0xF ^ 1;
  v224 = (((v222 >> 4) ^ 7) - ((v222 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                + (v219 - 957 * ((4487950 * (unint64_t)v219) >> 32)));
  v225 = 431 * (((v181 >> 20) & 0xF0 | v223) ^ 0x50);
  v226 = v225 - 957 * ((4487950 * (unint64_t)v225) >> 32);
  v227 = (((v221 ^ 0x78) << 20) + 1838632487 - (((v221 ^ 0x78) << 21) & 0x1B200000)) ^ v217 ^ 0x6D974E5F;
  v228 = 431
       * (*(unsigned __int8 *)(v62
                             + (v225 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v225 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (431 * v224 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v224 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v229 = v228 + 290925 - 957 * ((4487950 * (unint64_t)(v228 + 290925)) >> 32);
  v230 = *(unsigned __int8 *)(v62 + (v228 - 957 * ((4487950 * (unint64_t)v228) >> 32)));
  v231 = LODWORD(STACK[0x700]) ^ 0x9A328B9F;
  v232 = (((v230 >> 4) ^ 7) - ((v230 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v226);
  v233 = 431 * (((2 * v232) & 0x146) + (v232 ^ 0x2A3));
  v234 = 431 * ((HIBYTE(v181) & 0xF0 | (v161 >> 28)) ^ 0xF2) + 290925;
  v235 = 431
       * (*(unsigned __int8 *)(v62 + (v234 - 957 * ((4487950 * (unint64_t)v234) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v233 - 957 * ((4487950 * (unint64_t)v233) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v236 = ((*(unsigned __int8 *)(v62 + (v235 - 957 * ((4487950 * (unint64_t)v235) >> 32))) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v62 + v229) ^ 0x78) << 24);
  v237 = 431 * (v178 & 0xFFFFFF0F | (16 * ((v217 ^ 0x78) & 0xF))) + 168952;
  v238 = *(unsigned __int8 *)(v62 + (v237 - 957 * ((4487950 * (unint64_t)v237) >> 32)));
  v239 = 431 * ((v217 ^ 0x78) & 0xF0 | (v164 >> 4)) + 168952;
  v240 = v236 ^ v227;
  v241 = 431 * ((v217 >> 4) & 0xF0 | (v164 >> 8) & 0xF) + 168952;
  v242 = v238 ^ (16
               * (*(unsigned __int8 *)(v62 + (v239 - 957 * ((4487950 * (unint64_t)v239) >> 32))) ^ 0x78)) ^ ((*(unsigned __int8 *)(v62 + (v241 - 957 * ((4487950 * (unint64_t)v241) >> 32))) ^ 0x78) << 8);
  v243 = 431 * (((v217 >> 8) & 0xF0 | v202) + (v242 & 0x188 ^ 8 | v242 & 0x188 ^ 0x180));
  v244 = 431 * (((v217 >> 12) & 0xF0 | HIWORD(v162) & 0xF) ^ 8) + 168952;
  v245 = 431 * (HIWORD(v227) & 0xF0 | v218) + 168952;
  v246 = 431 * ((v240 >> 20) & 0xF0 | v223) + 168952;
  v247 = ((*(unsigned __int8 *)(v62 + (v244 - 957 * ((4487950 * (unint64_t)v244) >> 32))) ^ 0x78) << 16) ^ ((*(unsigned __int8 *)(v62 + (v243 - 957 * ((4487950 * (unint64_t)v243) >> 32))) ^ 0x78) << 12);
  v248 = v247 ^ ((*(unsigned __int8 *)(v62 + (v245 - 957 * ((4487950 * (unint64_t)v245) >> 32))) ^ 0x78) << 20);
  v249 = v248 ^ ((*(unsigned __int8 *)(v62 + (v246 - 957 * ((4487950 * (unint64_t)v246) >> 32))) ^ 0x78) << 24);
  v250 = 431 * ((HIBYTE(v240) & 0xF0 | (v161 >> 28)) ^ 2) + 168952;
  v251 = v249 ^ ((*(unsigned __int8 *)(v62 + (v250 - 957 * ((4487950 * (unint64_t)v250) >> 32))) ^ 8) << 28);
  v252 = *(unsigned __int8 *)(v62
                            + (431 * (HIBYTE(v249) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v249) & 0xF) + 404709)) >> 32))) ^ ((*(unsigned __int8 *)(v62 + (431 * (v251 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v251 >> 28) + 404709)) >> 32))) ^ 0x78) << (STACK[0x6B8] & 4) << (STACK[0x6B8] & 4 ^ 4)) ^ 0x78;
  v253 = *(unsigned __int8 *)(v62
                            + (431 * ((v248 >> 20) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v248 >> 20) & 0xF) + 404709)) >> 32)));
  v254 = 431 * ((unsigned __int16)(v251 ^ v242) >> 12) + 404709;
  v255 = *(unsigned __int8 *)(v62 + (v254 - 957 * ((4487950 * (unint64_t)v254) >> 32)));
  v256 = (((*(unsigned __int8 *)(v62
                               + (431 * (HIWORD(v247) & 0xF)
                                              + 404709
                                              - 957
                                              * ((4487950 * (unint64_t)(431 * (HIWORD(v247) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) | (v252 << 16)) ^ ((v253 ^ 0x78) << 12);
  v257 = 431 * (((v251 ^ v242) >> 8) & 0xF) + 404709;
  v258 = v256 | *(unsigned __int8 *)(v62 + (v257 - 957 * ((4487950 * (unint64_t)v257) >> 32))) ^ 0x78;
  v259 = 431 * (((v251 ^ v242) >> 4) ^ 7) + 404709;
  v260 = *(unsigned __int8 *)(v62 + (v259 - 957 * ((4487950 * (unint64_t)v259) >> 32)));
  v261 = 431 * ((v251 ^ v242) & 0xF ^ 8) + 404709;
  v262 = v261 - 957 * ((4487950 * (unint64_t)v261) >> 32);
  v263 = v262 - 545931147 - ((2 * v262) & 0xEA);
  v264 = *(unsigned __int8 *)(v62 + (v263 ^ 0xDF75C075));
  LODWORD(STACK[0x6B8]) = ((v13 - 2012446833) ^ 0x3B0C2E95 ^ v146)
                        + 1772975288
                        - ((2 * ((v13 - 2012446833) ^ 0x3B0C2E95 ^ v146)) & 0xD35AE970);
  v265 = LODWORD(STACK[0x6A8]) + v13 - 2012446833;
  v266 = v194 + 821502879 + LODWORD(STACK[0x6F4]);
  v267 = (v194 + 821502879) ^ (16 * (v260 ^ 0x78)) ^ (v264 ^ 0x78 | ((v258 ^ ((v255 ^ 0x78) << ((v255 & 4 ^ 4)
                                                                                              + (v255 & 4)))) << 8));
  LODWORD(STACK[0x6F4]) = v267 - 1582001150 - ((2 * v267) & 0x43692804);
  v268 = 2 * v194;
  v269 = v9 - v13 + 1910380690 + LODWORD(STACK[0x6E0]);
  v270 = (v269 - 1842597616 + (v263 & 0x2F0 ^ 0x70) + (v263 & 0x2F0 ^ 0x6DD3CE80)) ^ (v13 + 1521759628);
  v271 = ((2 * (v265 + v270)) & 0xE5EAFB7E) + ((v265 + v270) ^ 0x72F57DBF);
  v272 = v194 - ((2 * v194 + 121484088) & 0xAE143994) - 626461082;
  v273 = LODWORD(STACK[0x6C0]) + 2 * v13 - LODWORD(STACK[0x6E0]);
  LODWORD(STACK[0x6A8]) = v271;
  v274 = v273 - v271;
  LODWORD(STACK[0x700]) = v274;
  v275 = v271 + LODWORD(STACK[0x56C]) - ((2 * (v271 + LODWORD(STACK[0x56C])) + 157913716) & 0x37CB6A5C) - 526746008;
  LODWORD(STACK[0x6DC]) = (v274 + 2052651912) ^ v269;
  LODWORD(STACK[0x6B4]) = v272;
  v276 = LODWORD(STACK[0x6D0]) - 1445403959 + v231 + (v272 ^ 0x28F5E335);
  v277 = (v276 + 746239838) ^ v272;
  LODWORD(STACK[0x680]) = v277;
  v278 = ((2 * (v266 + (v277 ^ 0xD70A1CCA))) & 0xD3DDDFDC) + ((v266 + (v277 ^ 0xD70A1CCA)) ^ 0x69EEEFEE);
  v279 = v268 + a1 - v278 - ((2 * (v268 + a1 - v278) + 212639674) & 0x14F07D86);
  v280 = 431 * (HIBYTE(v275) & 0xF ^ 0xB) + 279719;
  v281 = LODWORD(STACK[0x544])
       - v278
       - 2052376972
       - ((2 * (LODWORD(STACK[0x544]) - v278 - 2052376972)) & 0x4C5D19BC)
       + 640584926;
  v282 = 431 * ((v275 >> 20) & 0xF ^ 0xE) + 279719;
  v283 = 431 * ((HIWORD(v275) & 0xF ^ 5) + (((808 - v270) | (v270 + 215)) & 0x289));
  v284 = 431 * (((unsigned __int16)v275 >> 12) ^ 0xB) + 279719;
  v285 = *(unsigned __int8 *)(v62 + (v282 - 957 * ((4487950 * (unint64_t)v282) >> 32))) ^ 0x78;
  v286 = 431 * ((v275 >> 8) & 0xF ^ 5) + 279719;
  v287 = ((((*(unsigned __int8 *)(v62 + (v280 - 957 * ((4487950 * (unint64_t)v280) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v275 >> 28) ^ 9) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v275 >> 28) ^ 9) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (v283 - 957 * ((4487950 * (unint64_t)v283) >> 32))) ^ 0x78) << 8) ^ (v285 << 12);
  v288 = v286 - 957 * ((4487950 * (unint64_t)v286) >> 32);
  v289 = 431 * ((v275 >> 4) ^ 2) + 279719;
  v290 = v287 | *(unsigned __int8 *)(v62 + v288) ^ 0x78;
  v291 = (v290 << 8) - 1631423972 - ((v290 << 9) & 0x3D84E400);
  v292 = v291 ^ ((*(unsigned __int8 *)(v62 + (v284 - 957 * ((4487950 * (unint64_t)v284) >> 32))) ^ 0x78) << 12);
  v293 = 431 * (HIBYTE(v281) & 0xF ^ 6) + 279719;
  v294 = *(unsigned __int8 *)(v62
                            + (431 * (v275 & 0xF ^ 0xE)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v275 & 0xF ^ 0xE) + 279719)) >> 32))) ^ 0x78;
  v295 = 431 * ((v281 >> 20) & 0xF ^ 2) + 279719;
  v296 = *(unsigned __int8 *)(v62 + (v293 - 957 * ((4487950 * (unint64_t)v293) >> 32))) ^ 0x78;
  v297 = (v292 ^ 0x9EC2721C | v294) ^ (16
                                     * (*(unsigned __int8 *)(v62
                                                           + (v289
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v289) >> 32))) ^ 0x78));
  v298 = 431 * (HIWORD(v281) & 0xF ^ 0xE) + 279719;
  v299 = (v296 << 8) ^ ((*(unsigned __int8 *)(v62
                                            + (431 * ((v281 >> 28) ^ 2)
                                                           + 279719
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v281 >> 28) ^ 2) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (v298 - 957 * ((4487950 * (unint64_t)v298) >> 32))) ^ 0x78;
  v300 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x544])
                            - v278
                            + 13940
                            - ((2 * (LOWORD(STACK[0x544]) - v278 + 13940)) & 0x19BC)
                            - 29474) >> 12) ^ 8)
       + 279719;
  v301 = 431 * ((v281 >> 8) & 0xF ^ 0xC) + 279719;
  v302 = (v299 << 8) ^ ((*(unsigned __int8 *)(v62
                                            + (v295 - 957 * ((4487950 * (unint64_t)v295) >> 32))) ^ 0x78) << 12);
  v303 = *(unsigned __int8 *)(v62 + (v301 - 957 * ((4487950 * (unint64_t)v301) >> 32))) ^ 0x78;
  v304 = (LOBYTE(STACK[0x544]) - (_BYTE)v278 + 116 - ((2 * (LOBYTE(STACK[0x544]) - (_BYTE)v278 + 116)) & 0xBC) - 34) & 0xF ^ 0xE;
  v305 = 431
       * (((LOBYTE(STACK[0x544]) - v278 + 116 - ((2 * (LOBYTE(STACK[0x544]) - v278 + 116)) & 0xBC) - 34) >> 4) ^ 0xD)
       + 279719;
  v306 = *(unsigned __int8 *)(v62 + (v305 - 957 * ((4487950 * (unint64_t)v305) >> 32))) ^ 0x78;
  v307 = ((v302 | v303) << 8) + 1697619554 + (~((v302 | v303) << 9) | 0x35A0C3FF) + 1;
  v308 = v307 ^ ((*(unsigned __int8 *)(v62 + (v300 - 957 * ((4487950 * (unint64_t)v300) >> 32))) ^ 0x78) << 12);
  v309 = *(unsigned __int8 *)(v62
                            + (431 * v304
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v304 + 279719)) >> 32))) ^ 0x78;
  v310 = v294 & 0xF;
  v311 = (v308 ^ 0x652F9E62 | v309) ^ (16 * v306);
  v312 = 431 * (v310 | (16 * (v309 & 0xF)));
  v313 = *(unsigned __int8 *)(v62 + (v312 + 290925) % (((914 - v312) | (v312 + 290925)) & 0x3BD));
  v314 = 431 * (((v313 ^ 0x78) - 1304816322 - ((2 * (v313 ^ 0x78)) & 0x7C)) ^ LODWORD(STACK[0x6C8]));
  v315 = *(unsigned __int8 *)(v62 + v314 % 0x3BD);
  v316 = 431
       * ((((v315 >> 4) ^ 7) - ((v315 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v312 - 957 * ((4487950 * (unint64_t)v312) >> 32))))
       + 290925;
  v317 = 431 * (v311 & 0xF0 | (v297 >> 4));
  v318 = *(unsigned __int8 *)(v62 + (v317 - 957 * ((4487950 * (unint64_t)v317) >> 32)));
  v319 = 431
       * (*(unsigned __int8 *)(v62
                             + (v317 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v317 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v316 - 957 * ((4487950 * (unint64_t)v316) >> 32))) ^ 0x78)) ^ 0x78);
  v320 = v319 + 290925;
  v321 = (4487950 * (unint64_t)(v319 + 290925)) >> 32;
  v322 = *(unsigned __int8 *)(v62 + (v319 - 957 * ((4487950 * (unint64_t)v319) >> 32)));
  v323 = v320 - 957 * v321;
  v324 = 431 * ((((v322 >> 4) ^ 7) - ((v322 >> 3) & 0x10) + 120) ^ v318) + 290925;
  v325 = 431 * ((v311 >> 4) & 0xF0 | (v297 >> 8) & 0xF);
  LOBYTE(v318) = *(_BYTE *)(v62 + (v325 - 957 * ((4487950 * (unint64_t)v325) >> 32)));
  v326 = 431
       * (*(unsigned __int8 *)(v62
                             + (v325 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v325 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v324 - 957 * ((4487950 * (unint64_t)v324) >> 32))) ^ 0x78)) ^ 0x78);
  v327 = *(unsigned __int8 *)(v62
                            + (v326 + 290925 - 957 * ((4487950 * (unint64_t)(v326 + 290925)) >> 32)));
  v328 = *(unsigned __int8 *)(v62 + (v326 - 957 * ((4487950 * (unint64_t)v326) >> 32)));
  v329 = 431 * ((((v328 >> 4) ^ 7) - ((v328 >> 3) & 0x10) + 120) ^ v318) + 290925;
  v330 = v297 >> 8 >> ((v318 & 4 ^ 4) + (v318 & 4));
  v331 = v330 - ((2 * v330) & 0x75C488) + 289071684;
  v332 = 431 * ((v331 & 0xF | (16 * ((unsigned __int16)v308 >> 12))) ^ 0x94);
  v333 = 431
       * (*(unsigned __int8 *)(v62
                             + (v332 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v332 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v329 - 957 * ((4487950 * (unint64_t)v329) >> 32))) ^ 0x78)) ^ 0x78);
  LODWORD(v321) = (*(unsigned __int8 *)(v62
                                      + (v333
                                                     + 290925
                                                     - 957 * ((4487950 * (unint64_t)(v333 + 290925)) >> 32))) ^ 0x78) << 12;
  v334 = *(unsigned __int8 *)(v62 + (v333 - 957 * ((4487950 * (unint64_t)v333) >> 32)));
  v335 = 431
       * ((((v334 >> 4) ^ 7) - ((v334 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v332 - 957 * ((4487950 * (unint64_t)v332) >> 32))))
       + 290925;
  v336 = v321 ^ ((v327 ^ 0x78) << 8);
  v337 = 431 * (((v308 >> 12) & 0xF0 | (v331 >> 4)) ^ 0xF4);
  v338 = *(unsigned __int8 *)(v62 + (v337 + 290925) % ((v331 >> 4) & 0x3BD ^ 0x224 | (v331 >> 4) & 0x3BD ^ 0x199)) ^ (16 * (*(unsigned __int8 *)(v62 + (v335 - 957 * ((4487950 * (unint64_t)v335) >> 32))) ^ 0x78));
  v339 = 431 * (v338 ^ 0x78);
  v340 = ((((v338 ^ 0x78) + 675) & 0x1AF) + (((v338 ^ 0xFFFFFF87) + 349) & 0x1AF)) * ((v338 ^ 0x78) + 675) % 0x3BD;
  v341 = (((*(_BYTE *)(v62 + (v339 - 957 * ((4487950 * (unint64_t)v339) >> 32))) >> 4) ^ 7)
                         - ((*(_BYTE *)(v62 + (v339 - 957 * ((4487950 * (unint64_t)v339) >> 32))) >> 3) & 0x10)
                         + 120) ^ *(unsigned __int8 *)(v62
                                                     + (v337
                                                                    - 957 * ((4487950 * (unint64_t)v337) >> 32)));
  LODWORD(v321) = ((HIWORD(v307) & 0xF0 | (v331 >> 8) & 0xF) ^ 0x22)
                + 1312594129
                - 2 * ((HIWORD(v307) & 0xD0 | (v331 >> 8) & 5) ^ (v331 >> 8) & 4);
  v342 = 431 * (v321 ^ 0x4E3C98D1);
  v343 = 431
       * (*(unsigned __int8 *)(v62 + (v342 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (431 * v341 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v341 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v344 = v343 + 290925 - 957 * ((4487950 * (unint64_t)(v343 + 290925)) >> 32);
  v345 = *(unsigned __int8 *)(v62 + (v343 - 957 * ((4487950 * (unint64_t)v343) >> 32)));
  v346 = 431
       * ((((v345 >> 4) ^ 7) - ((v345 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v342 % 0x3BD))
       + 290925;
  v347 = 431 * (((v307 >> 20) & 0xF0 | ((unsigned __int16)v331 >> 12)) ^ 0x5E);
  v348 = 431
       * (*(unsigned __int8 *)(v62
                             + (v347 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v347 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v346 - 957 * ((4487950 * (unint64_t)v346) >> 32))) ^ 0x78)) ^ 0x78);
  v349 = v348 - 957 * ((4487950 * (unint64_t)v348) >> 32);
  v350 = (((*(_BYTE *)(v62 + v349) >> 4) ^ 7) - ((*(_BYTE *)(v62 + v349) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + (v347 - 957 * ((4487950 * (unint64_t)v347) >> 32)));
  v351 = (((348 - v350) | (v350 + 675)) & 0x1AF) * (v350 + 675);
  v352 = v351 - 957 * ((4487950 * (unint64_t)v351) >> 32);
  v353 = v352 + 1034520001 - ((2 * v352) & 0x382);
  v354 = (431
        * (((((_BYTE)v352 - 63 - ((2 * (_BYTE)v352) & 0x82)) & 0xF ^ 1 | ((_BYTE)v352 - 63 - ((2 * (_BYTE)v352) & 0x82)) & 0xF ^ 0xE) & (HIWORD(v331) ^ 0x113A) | (16 * (v307 >> 28))) ^ 0x60)
        + 290925)
       % 0x3BD;
  v355 = LODWORD(STACK[0x55C]) - 1864241666;
  v356 = v279 + 1624149664;
  v357 = (v279 + 1624149664) ^ (v276 - ((2 * (v276 + 746239838)) & 0x14F07D86) - 1225591263);
  v358 = 16 * (*(unsigned __int8 *)(v62 + v323) ^ 0x78);
  LOBYTE(v279) = *(_BYTE *)(v62 + (v314 + 290925) % 0x3BD) ^ 0x78;
  v359 = 431
       * (*(unsigned __int8 *)(v62 + v354) ^ (16 * (*(unsigned __int8 *)(v62 + (v353 ^ 0x3DA985C1u)) ^ 0x78)) ^ 0x78)
       + 290925;
  LOBYTE(v353) = v358 ^ v279;
  v360 = v336 ^ v358;
  v361 = v360 ^ ((*(unsigned __int8 *)(v62 + v340) ^ 0x78) << 16);
  v362 = v361 ^ ((*(unsigned __int8 *)(v62 + v344) ^ 0x78) << 20);
  v363 = ((*(unsigned __int8 *)(v62 + (v359 - 957 * ((4487950 * (unint64_t)v359) >> 32))) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v62 + (v348 + 290925 - 957 * ((4487950 * (unint64_t)(v348 + 290925)) >> 32))) ^ 0x78) << 24);
  v364 = v362 ^ 0x7C7ED74B ^ (v363 + 2088687435 - (v363 >> 26 << 27));
  v365 = (v321 & 0xAF ^ 0x81 | v321 & 0xAF ^ 0x12E) * ((v310 & 0xFFFFFF0F | (16 * (v279 & 0xF))) + 392);
  v366 = *(unsigned __int8 *)(v62 + (v365 - 957 * ((4487950 * (unint64_t)v365) >> 32)));
  v367 = (v360 >> 4) & 0xF0;
  v368 = 431 * (v353 & 0xF0 | (v297 >> 4)) + 168952;
  v369 = 431 * (v367 & 0xFFFFFFF0 | (v297 >> 8) & 0xF) + 168952;
  v370 = v369 - 957 * ((4487950 * (unint64_t)v369) >> 32);
  v371 = v370 + 1140956775 - ((2 * v370) & 0x4CE);
  v372 = v366 ^ (16
               * (*(unsigned __int8 *)(v62 + (v368 - 957 * ((4487950 * (unint64_t)v368) >> 32))) ^ 0x78)) ^ 0x78;
  v373 = v372 ^ ((*(unsigned __int8 *)(v62 + (v371 ^ 0x44019E67u)) ^ 0x78) << 8);
  v374 = 431 * (((v336 >> 8) & 0xF0 | ((unsigned __int16)v292 >> 12)) ^ 7) + 168952;
  v375 = v373 ^ ((*(unsigned __int8 *)(v62 + (v374 - 957 * ((4487950 * (unint64_t)v374) >> 32))) ^ 0x78) << 12);
  v376 = ((v361 >> 12) & 0xF0 | HIWORD(v292) & 0xF) ^ 2;
  v377 = (HIWORD(v362) & 0xF0 | (v291 >> 20) & 0xF) ^ 0xC;
  v378 = v375 ^ ((*(unsigned __int8 *)(v62
                                     + (431 * v376
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * v376 + 168952)) >> 32))) ^ 0x78) << 16);
  v379 = v378 ^ ((*(unsigned __int8 *)(v62
                                     + (431 * v377
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * v377 + 168952)) >> 32))) ^ 0x78) << 20);
  v380 = 431 * (((v364 >> 20) & 0xF0 | HIBYTE(v291) & 0xF) ^ 0xE) + 168952;
  v381 = *(unsigned __int8 *)(v62 + (v380 - 957 * ((4487950 * (unint64_t)v380) >> 32))) ^ 0x78;
  v382 = v379 ^ 0x1ECC96B2 ^ ((v381 << 24) + 516724402 - ((v381 << 25) & 0x3C000000));
  v383 = 431 * ((HIBYTE(v364) & 0xF0 | (v291 >> 28)) ^ 9) + 168952;
  v384 = 431
       * ((v382 ^ ((*(unsigned __int8 *)(v62 + (v383 - 957 * ((4487950 * (unint64_t)v383) >> 32))) ^ 8) << 28)) >> 28)
       + 404709;
  v385 = ((*(unsigned __int8 *)(v62
                              + (431 * (HIBYTE(v382) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v382) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v384 - 957 * ((4487950 * (unint64_t)v384) >> 32))) ^ 0x78) << 12);
  v386 = *(unsigned __int8 *)(v62
                            + (431 * (HIWORD(v378) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIWORD(v378) & 0xF) + 404709)) >> 32)));
  v387 = (v386 ^ 0xF1F6E187) + 2 * (v386 ^ 0x78);
  v388 = (v387 + 235478529 - ((v387 + 235478529) | v385)) ^ -v385;
  v389 = (((((v387 + (v385 ^ 0x8C57 ^ (v388 - ((2 * v388) & 0x8F18AE) + 13077591))) << 8) + 1966336) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v379 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v379 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * ((v373 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v373 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((unsigned __int16)v375 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v375 >> 12) + 404709)) >> 32))) ^ 0x78) << 12);
  v390 = *(unsigned __int8 *)(v62
                            + (431 * (v372 >> 4)
                                           + 404709
                                           - 957
                                           * ((4487950
                                             * (unint64_t)(431 * (v372 >> 4)
                                                                + 404709)) >> 32))) ^ 0x78;
  v391 = *(unsigned __int8 *)(v62
                            + (431 * (v366 & 0xF ^ 8)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v366 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78;
  LOBYTE(v385) = v270 ^ 0x7B;
  v392 = ((2 * v270) & 0xD3FDD3E0 ^ 0xD084D100) + (v270 ^ 0x97BC977B);
  LODWORD(STACK[0x6A0]) = v392;
  LOBYTE(v388) = (v270 ^ 0x7B) + 7;
  v393 = STACK[0x680];
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x680]) ^ (16 * v390) ^ 0xBEA76872 ^ (v389 | v391);
  LODWORD(STACK[0x6C0]) = v270 ^ 0x3A51212C ^ v275;
  LOBYTE(v270) = v390 & 0x18;
  v394 = (LODWORD(STACK[0x6A8]) - 1928691135) ^ (v392 - 1778313712);
  LODWORD(STACK[0x6D0]) = v394;
  v395 = v393 ^ 0x29486241;
  v396 = v278 - 1777266670;
  LODWORD(STACK[0x6A8]) = (v394 & 0x6DD3CEF0 ^ 0xC8142E0) + (v394 & 0x6DD3CEF0 ^ 0x61528C10);
  v397 = (LODWORD(STACK[0x6B4]) ^ 0xA3305C82 ^ v356) + 2 * (v357 & (v393 ^ 0x29486241));
  v398 = v355 + (v394 ^ 0xE17EBC11) - 1839759852 - ((2 * (v355 + (v394 ^ 0xE17EBC11))) & 0x24AEFC28);
  v399 = (v398 ^ 0x92577E14) >> ((v270 ^ 0x18) + v270);
  v400 = v393 ^ 0xC836DE50 ^ v396;
  v401 = LODWORD(STACK[0x558]) - v400 - 90950985 - ((2 * (LODWORD(STACK[0x558]) - v400 - 1542045256)) & 0xACFBE1FE);
  v402 = 431 * (v399 >> 4) + 279719;
  v403 = v399 & 0xF;
  v404 = v357 + (v356 ^ 0x8A783EC3);
  v405 = 431 * ((v398 >> 20) & 0xF ^ 5) + 279719;
  v406 = ((*(unsigned __int8 *)(v62
                              + (431 * v403
                                             + 279719
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * v403 + 279719)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v402 - 957 * ((4487950 * (unint64_t)v402) >> 32))) ^ 0x78) << 12);
  v407 = 431 * (HIWORD(v398) & 0xF ^ 7) + 279719;
  v408 = 431
       * (((unsigned __int16)(v355 + (v394 ^ 0xBC11) + 32276 - ((2 * (v355 + (v394 ^ 0xBC11))) & 0xFC28)) >> 12) ^ 7)
       + 279719;
  v409 = 431 * ((v398 >> 8) & 0xF ^ 0xE);
  v410 = *(unsigned __int8 *)(v62 + (v409 + 279719) % (((856 - (_WORD)v409) & 0x3BD) + ((v409 + 279719) & 0x3BDu))) ^ (((v406 | *(unsigned __int8 *)(v62 + (v407 - 957 * ((4487950 * (unint64_t)v407) >> 32))) ^ 0x78) ^ (16 * (*(unsigned __int8 *)(v62 + (v405 - 957 * ((4487950 * (unint64_t)v405) >> 32))) ^ 0x78))) << ((BYTE1(v398) & 8 ^ 8) + (BYTE1(v398) & 8))) ^ 0x78;
  v411 = 431 * (((v355 + (v394 ^ 0x11) + 20 - ((2 * (v355 + (v394 ^ 0x11))) & 0x28)) >> 4) ^ 1)
       + 279719;
  v412 = 431 * (v398 & 0xF ^ 4) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v398 & 0xF ^ 4) + 279719)) >> 32);
  v413 = v412 + 1476009288 - ((2 * v412) & 0x290);
  v414 = *(unsigned __int8 *)(v62 + (v413 ^ 0x57FA1D48u));
  v415 = *(unsigned __int8 *)(v62 + (v411 - 957 * ((4487950 * (unint64_t)v411) >> 32))) ^ 0x78;
  v416 = (v410 << 8) + 1850168394 - ((v410 << 9) & 0xDC8EA800);
  v417 = v416 ^ ((*(unsigned __int8 *)(v62 + (v408 - 957 * ((4487950 * (unint64_t)v408) >> 32))) ^ 0x78) << 12);
  v418 = (v401 ^ 0x567DF0FF) >> (v413 & 0x18 ^ 0x10 | v413 & 0x18 ^ 8);
  LOBYTE(v413) = 2 * v418;
  v414 ^= 0x78u;
  v419 = 431 * (((v418 - ((2 * v418) & 0x20) - 112) >> 4) ^ 9) + 279719;
  v420 = v418 & 0xF ^ 0x289;
  v421 = (v417 ^ 0x6E47544A | v414) ^ (16 * v415);
  LOBYTE(v385) = v388 | (8 - v385);
  v422 = 431 * ((v401 >> 20) & 0xF ^ 7) + 279719;
  v423 = 431 * ((v385 & 9 | 6) & (HIWORD(v401) ^ 0xD)) + 279719;
  v424 = ((*(unsigned __int8 *)(v62
                              + (431 * (v420 + (v413 & 0x12))
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (v420 + (v413 & 0x12u)))) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v419 - 957 * ((4487950 * (unint64_t)v419) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (v423 - 957 * ((4487950 * (unint64_t)v423) >> 32))) ^ 0x78;
  v425 = 431 * (~(v401 >> 12) & 0xF) + 279719;
  v426 = 431 * ((v401 >> 8) & 0xF)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((v401 >> 8) & 0xF) + 279719)) >> 32);
  v427 = ~v401 & 0xF;
  v428 = 431 * (~(v401 >> 4) & 0xF) + 279719;
  v429 = *(unsigned __int8 *)(v62 + (v428 - 957 * ((4487950 * (unint64_t)v428) >> 32))) ^ 0x78;
  v430 = *(unsigned __int8 *)(v62
                            + (431 * v427
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v427 + 279719)) >> 32)));
  v431 = (*(unsigned __int8 *)(v62 + v426) | ((*(unsigned __int8 *)(v62
                                                                  + (v422
                                                                                 - 957
                                                                                 * ((4487950 * (unint64_t)v422) >> 32))) ^ 0x78) << 12)) ^ (v424 << 8) ^ (16 * (*(unsigned __int8 *)(v62 + (v425 - 957 * ((4487950 * (unint64_t)v425) >> 32))) ^ 0x78));
  LODWORD(STACK[0x678]) = v431;
  v432 = ((v431 << 8) ^ 0x7800) + 1005225423 - ((v431 << 9) & 0x77D50A00);
  v433 = (v432 ^ 0x3BEA85CF | v430 ^ 0x78) ^ (16 * v429);
  v434 = v414 & 0xF;
  v435 = 431 * (v434 & 0xFFFFFF0F | (16 * ((v430 ^ 0x78) & 0xF)));
  v436 = *(unsigned __int8 *)(v62
                            + (v435 + 290925 - 957 * ((4487950 * (unint64_t)(v435 + 290925)) >> 32)));
  v437 = 431 * (((v436 ^ 0x78) - 1304816322 - ((2 * (v436 ^ 0x78)) & 0x7C)) ^ LODWORD(STACK[0x6C8]));
  v438 = v437 + 290925;
  v439 = (v437 + 290925) / 0x3BD;
  v440 = *(unsigned __int8 *)(v62 + v437 % 0x3BD);
  v441 = 431
       * ((((v440 >> 4) ^ 7) - ((v440 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v435 - 957 * ((4487950 * (unint64_t)v435) >> 32))))
       + 290925;
  v442 = v438 - 957 * v439;
  v443 = 431 * (v433 & 0xF0 | (v421 >> 4));
  v444 = 431
       * (*(unsigned __int8 *)(v62
                             + (v443 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v443 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v441 - 957 * ((4487950 * (unint64_t)v441) >> 32))) ^ 0x78)) ^ 0x78);
  v445 = v444 + 290925 - 957 * ((4487950 * (unint64_t)(v444 + 290925)) >> 32);
  v446 = *(unsigned __int8 *)(v62 + (v444 - 957 * ((4487950 * (unint64_t)v444) >> 32))) >> 4;
  v447 = 431
       * (((v446 ^ 7) + 2 * ((v446 ^ 7 | 0x78) ^ v446) + 122) ^ *(unsigned __int8 *)(v62 + (v443 - 957 * ((4487950 * (unint64_t)v443) >> 32))))
       + 290925;
  v448 = 431 * ((v433 >> 4) & 0xF0 | (v421 >> 8) & 0xF);
  v449 = 431
       * (*(unsigned __int8 *)(v62
                             + (v448 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v448 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v447 - 957 * ((4487950 * (unint64_t)v447) >> 32))) ^ 0x78)) ^ 0x78);
  v450 = *(unsigned __int8 *)(v62 + v442) ^ (16 * (*(unsigned __int8 *)(v62 + v445) ^ 0x78)) ^ ((*(unsigned __int8 *)(v62 + (v449 + 290925 - 957 * ((4487950 * (unint64_t)(v449 + 290925)) >> 32))) ^ 0x78) << 8);
  v451 = *(unsigned __int8 *)(v62 + (v449 - 957 * ((4487950 * (unint64_t)v449) >> 32)));
  v452 = (((v451 >> 4) ^ 7) - ((v451 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                + (v448 - 957 * ((4487950 * (unint64_t)v448) >> 32)));
  v453 = v450 ^ 0x78;
  v454 = 431 * ((v431 & 0xF0 | ((unsigned __int16)v417 >> 12)) ^ 0x75);
  v455 = v454 - 957 * ((4487950 * (unint64_t)v454) >> 32);
  v456 = 431
       * (*(unsigned __int8 *)(v62
                             + (v454 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v454 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (431 * v452 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v452 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v457 = v456 + 290925 - 957 * ((4487950 * (unint64_t)(v456 + 290925)) >> 32);
  v458 = *(unsigned __int8 *)(v62 + (v456 - 957 * ((4487950 * (unint64_t)v456) >> 32)));
  v459 = HIWORD(v432) ^ 0xC41A;
  if (v450 == 0x78)
    v459 = 15;
  v460 = 431 * ((((v458 >> 4) ^ 7) - ((v458 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v455))
       + 290925;
  v461 = HIWORD(v417) & 0xF;
  v462 = 431 * ((v461 | (16 * (v459 & (HIWORD(v432) ^ 0x3BEA)))) ^ 7);
  v463 = 431
       * (*(unsigned __int8 *)(v62 + (v462 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v460 - 957 * ((4487950 * (unint64_t)v460) >> 32))) ^ 0x78)) ^ 0x78);
  v464 = v463 - 957 * ((4487950 * (unint64_t)v463) >> 32);
  v465 = 431
       * ((((*(_BYTE *)(v62 + v464) >> 4) ^ 7) - ((*(_BYTE *)(v62 + v464) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v462 % 0x3BD))
       + 290925;
  v466 = 431 * ((BYTE2(v432) & 0xF0 | (v416 >> 20) & 0xF) ^ 0xE4);
  v467 = ((*(unsigned __int8 *)(v62
                              + (v463
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v463 + 290925)) >> 32))) ^ 0x78) << 16) ^ ((*(unsigned __int8 *)(v62 + v457) ^ 0x78) << 12);
  v468 = 431
       * (*(unsigned __int8 *)(v62
                             + (v466 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v466 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v465 - 957 * ((4487950 * (unint64_t)v465) >> 32))) ^ 0x78)) ^ 0x78);
  v469 = v468 + 290925 - 957 * ((4487950 * (unint64_t)(v468 + 290925)) >> 32);
  v470 = *(unsigned __int8 *)(v62 + (v468 - 957 * ((4487950 * (unint64_t)v468) >> 32)));
  v471 = (((v470 >> 4) ^ 7) - ((v470 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                + (v466 - 957 * ((4487950 * (unint64_t)v466) >> 32)));
  v472 = v397;
  v473 = v397 + 1097772989;
  v474 = (v471 + 675) * (((v397 + 1097772989) & 0x1AF) + ((66 - v397) & 0x1AF));
  v475 = 431 * (((v432 >> 20) & 0xF0 | HIBYTE(v416) & 0xF) ^ 0xBE);
  v476 = v475 - 957 * ((4487950 * (unint64_t)v475) >> 32);
  v477 = 431
       * (*(unsigned __int8 *)(v62
                             + (v475 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v475 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v474 - 957 * ((4487950 * (unint64_t)v474) >> 32))) ^ 0x78)) ^ 0x78);
  v478 = v467 ^ ((*(unsigned __int8 *)(v62 + v469) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v62
                                                                                         + (v477 + 290925 - 957 * ((4487950 * (unint64_t)(v477 + 290925)) >> 32))) ^ 0x78) << 24);
  v479 = *(unsigned __int8 *)(v62 + (v477 - 957 * ((4487950 * (unint64_t)v477) >> 32)));
  v480 = ((v479 >> 4) ^ 7) + (~(v479 >> 3) | 0xEF);
  v481 = LODWORD(STACK[0x700]) + 1458433041 + LODWORD(STACK[0x6DC]);
  v482 = LODWORD(STACK[0x6DC]) + LODWORD(STACK[0x6A0]);
  v483 = LODWORD(STACK[0x6A0]) + v482;
  v484 = v397 + v395;
  v485 = v404 - 594218871;
  v486 = (HIBYTE(v432) & 0xF0 | (v416 >> 28)) ^ 0x36;
  v487 = 431 * ((v480 + 121) ^ *(unsigned __int8 *)(v62 + v476)) + 290925;
  v488 = *(unsigned __int8 *)(v62
                            + (431 * v486
                                           + 290925
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v486 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v487 - 957 * ((4487950 * (unint64_t)v487) >> 32))) ^ 0x78)) ^ 0x78;
  v489 = v478 ^ ((unint64_t)(*(unsigned __int8 *)(v62
                                                       + (431 * v488
                                                                      + 290925
                                                                      - 957
                                                                      * ((4487950
                                                                        * (unint64_t)(431 * v488 + 290925)) >> 32))) ^ 0x78u) << ((13 * (HIBYTE(v416) & 0x8C ^ 0x80 | HIBYTE(v416) & 0x8C ^ 0xC)) & 0xFC));
  v490 = 431 * (v434 & 0xFFFFFF0F | (16 * ((v489 ^ v453) & 0xF))) + 168952;
  v491 = *(unsigned __int8 *)(v62 + (v490 - 957 * ((4487950 * (unint64_t)v490) >> 32)));
  v492 = 431 * ((v489 ^ v453) & 0xF0 | (v421 >> 4)) + 168952;
  v493 = v491 ^ (16
               * (*(unsigned __int8 *)(v62 + (v492 - 957 * ((4487950 * (unint64_t)v492) >> 32))) ^ 0x78)) ^ 0x78;
  v494 = ((v489 ^ v453) >> 4) & 0xF0 | (v421 >> 8) & 0xF;
  v495 = *(unsigned __int8 *)(v62
                            + (431 * v494
                                           + 168952
                                           - 957 * ((4487950 * (unint64_t)(431 * v494 + 168952)) >> 32)));
  v496 = 431 * ((((v489 ^ v453) >> 8) & 0xF0 | ((unsigned __int16)v417 >> 12)) ^ 5) + 168952;
  v497 = v496 - 957 * ((4487950 * (unint64_t)v496) >> 32);
  v498 = v497 - 1101357462 - ((2 * v497) & 0x4D4);
  v499 = v461 ^ ((HIWORD(v489) & 0xF) << ((v498 & 4 ^ 4) + (v498 & 4))) ^ 7;
  v500 = (HIWORD(v489) & 0xF0 | (v416 >> 20) & 0xF) ^ 4;
  v501 = (v493 | ((*(unsigned __int8 *)(v62 + (v498 ^ 0xBE5A9E6A)) ^ 0x78) << 12)) ^ ((v495 ^ 0x78) << 8);
  v502 = v416 >> 28;
  v503 = (((119 - v500) & 0x1AF) + ((v500 + 392) & 0x1AF)) * (v500 + 392);
  v504 = 431 * (((v489 >> 20) & 0xF0 | HIBYTE(v416) & 0xF) ^ 0xE) + 168952;
  v505 = ((*(unsigned __int8 *)(v62 + (v503 - 957 * ((4487950 * (unint64_t)v503) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v62 + (431 * v499 + 168952) % 0x3BDu) ^ 0x78) << 16) ^ v501;
  v506 = v502 ^ (v489 >> 28 << ((v495 & 4 ^ 4) + (v495 & 4))) ^ 6;
  v507 = ((*(unsigned __int8 *)(v62 + (((v506 + 392) | (119 - v506)) & 0x1AFu) * (v506 + 392) % 0x3BD) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v62 + (v504 - 957 * ((4487950 * (unint64_t)v504) >> 32))) ^ 0x78) << 24);
  v508 = (((v507 - ((2 * v507) & 0x46000000) + 588933679) ^ v505) >> 24) ^ 0x23;
  v509 = v508 + 1690742713 - ((2 * v508) & 0x172);
  v510 = v509 & 0xF ^ 9;
  v511 = HIWORD(v505) & 0xF;
  v512 = 431 * ((v505 >> 20) & 0xF);
  v513 = (((*(unsigned __int8 *)(v62
                               + (431 * v511
                                              + 404709
                                              - 957
                                              * ((4487950 * (unint64_t)(431 * v511 + 404709)) >> 32))) ^ 0x78 | ((*(unsigned __int8 *)(v62 + (431 * v510 + 404709 - 957 * ((4487950 * (unint64_t)(431 * v510 + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v509 ^ 0x64C6AFB9u) >> ((v509 & 4 ^ 4) + (v509 & 4))) + 404709) % 0x3BD) ^ 8) << 12)) << 16) ^ ((*(unsigned __int8 *)(v62 + (v512 + 404709) % (((-404710 - v512) & 0x3779EA4C | (v512 + 404709) & 0x66A4C) ^ 0x377FE9F1 | ((v512 + 404709) & 0x412FC | (-404710 - v512) & 0xF5B992FC) ^ 0xF5BD92FC)) ^ 0x78) << 20) | ((*(unsigned __int8 *)(v62 + (431 * ((v501 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v501 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8)) ^ ((*(unsigned __int8 *)(v62 + (431 * ((unsigned __int16)v501 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v501 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * (v491 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v491 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78;
  v514 = v483
       - 1784798467
       + LODWORD(STACK[0x6A8])
       + v482
       - 586602734
       - ((2 * (v483 - 1784798467 + LODWORD(STACK[0x6A8]) + v482)) & 0xBA124E24);
  LODWORD(STACK[0x6DC]) = v484 ^ 0x69AD74B8 ^ (16
                                             * (*(unsigned __int8 *)(v62
                                                                   + (431 * (v493 >> 4)
                                                                                  + 404709
                                                                                  - 957
                                                                                  * ((4487950
                                                                                    * (unint64_t)(431 * (v493 >> 4) + 404709)) >> 32))) ^ 0x78)) ^ v513;
  LODWORD(STACK[0x6B4]) = (v483 + 738339872) ^ 0x33E3EA16 ^ v398;
  v515 = v473 + v484 + 1666320048 - ((2 * (v473 + v484)) & 0xC6A40D60);
  v516 = v515 ^ v485;
  v517 = v515;
  LODWORD(STACK[0x680]) = v515;
  v518 = v514 ^ v481 ^ 0xDD092712;
  v519 = (LODWORD(STACK[0x6D0]) ^ 0x3C779B03 ^ v514 ^ v481) + v518;
  v520 = v519 + 2025610395 - ((2 * v519) & 0xF178B936);
  LODWORD(STACK[0x6A0]) = v520;
  v521 = LODWORD(STACK[0x570])
       - 666412162
       + (v520 ^ 0x78BC5C9B)
       - 1028967858
       - ((2 * (LODWORD(STACK[0x570]) - 666412162 + (v520 ^ 0x78BC5C9B))) & 0x8556785E);
  v522 = v521 + 2561;
  v523 = v521 + 2529;
  v524 = ((2 * (v482 + 1297001173 + (v514 ^ 0x22F6D8ED))) & 0xCF7BFCAE)
       + ((v482 + 1297001173 + (v514 ^ 0x22F6D8ED)) ^ 0x67BDFE57);
  LODWORD(STACK[0x6A8]) = v516;
  LODWORD(STACK[0x700]) = v518 ^ (v524 - 1740504663);
  v525 = (v517 ^ 0x9CADF94F) + v472 - ((2 * ((v517 ^ 0x9CADF94F) + v472) + 1855662474) & 0xF65D8090);
  v526 = (v516 ^ 0x635206B0) + ((v400 - ((2 * v400) & 0x41348F1E) - 1600501873) ^ 0xC3C8413F ^ v516);
  v527 = v526 - ((2 * v526) & 0x89EF84CC) + 1157087846;
  v528 = ((((v523 >> 28) ^ 0xC) + 649) & 0x8F ^ (374 - ((v523 >> 28) ^ 0xC)) & 0x12F) * (((v523 >> 28) ^ 0xC) + 649);
  v529 = *(unsigned __int8 *)(v62 + (v528 - 957 * ((4487950 * (unint64_t)v528) >> 32)));
  v530 = 431 * (HIBYTE(v523) & 0xF ^ 2) + 279719;
  v531 = LODWORD(STACK[0x550])
       + 797553404
       + (v527 ^ 0xBB083D99)
       - ((2 * (LODWORD(STACK[0x550]) + 797553404 + (v527 ^ 0xBB083D99))) & 0xD4693614)
       + 1781832458;
  v532 = 431 * ((v523 >> 20) & 0xF ^ 0xA) + 279719;
  v533 = 431 * (HIWORD(v523) & 0xF ^ 0xB) + 279719;
  v534 = ((*(unsigned __int8 *)(v62 + (v530 - 957 * ((4487950 * (unint64_t)v530) >> 32))) ^ 0x78) << 8) ^ ((v529 ^ 0x78) << 12);
  v535 = *(unsigned __int8 *)(v62 + (v533 - 957 * ((4487950 * (unint64_t)v533) >> 32)));
  v536 = v534 ^ (16
               * (*(unsigned __int8 *)(v62 + (v532 - 957 * ((4487950 * (unint64_t)v532) >> 32))) ^ 0x78));
  v537 = (v535 ^ 0x78) - 1146142047 - ((2 * (v535 ^ 0x78)) & 0x142);
  v538 = (v536 - 1146142047 - ((2 * v536) & 0x1E8540)) ^ v537;
  v539 = ~v522 & 0xF;
  v540 = 431
       * ((BYTE1(v523) ^ 0x3Cu) >> ((v537 & 4)
                                  - (((BYTE1(v523) & 0x5D ^ 0x1C) + (BYTE1(v523) & 0x5D ^ 0x41)) & 0xA0)
                                  + (v537 & 4 ^ 4)))
       + 279719;
  v541 = ((STACK[0x678] & 0xA0 ^ 0x18F) + (STACK[0x678] & 0xA0 ^ 0x20))
       * (((v523 >> 7) & 0x12 ^ 0x10) + ((v523 >> 8) & 0xF ^ 0x285));
  v542 = *(unsigned __int8 *)(v62 + (v540 - 957 * ((4487950 * (unint64_t)v540) >> 32))) ^ 0x78;
  v543 = 16 * v542 + 1086794448 - ((32 * v542) & 0x15A0);
  v544 = *(unsigned __int8 *)(v62 + (v541 - 957 * ((4487950 * (unint64_t)v541) >> 32))) ^ 0x78;
  v545 = 431 * ((v523 >> 4) ^ 2) + 279719;
  v546 = ((v544 | (v538 << 8)) - 2 * ((v544 | (v538 << 8)) & 0x40C72ADD ^ v544 & 0xD) + 29829840) ^ v543;
  v547 = *(unsigned __int8 *)(v62 + (v545 - 957 * ((4487950 * (unint64_t)v545) >> 32)));
  v548 = (v546 << 8) + 1555003022 - ((v546 << 9) & 0xB95EEC00);
  v549 = (v543 & 0x1A0 ^ 0x12F) + (v543 & 0x1A0 ^ 0x80);
  v550 = *(unsigned __int8 *)(v62
                            + (431 * v539
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v539 + 279719)) >> 32))) ^ 0x78;
  v551 = 431 * (HIBYTE(v531) & 0xF ^ 0xA) + 279719;
  v552 = *(unsigned __int8 *)(v62
                            + (v549 * (((v531 >> 28) ^ 6) + 649)
                                           - 957
                                           * ((4487950 * (unint64_t)(v549 * (((v531 >> 28) ^ 6) + 649))) >> 32))) ^ 0x78;
  v553 = (v548 ^ 0x5CAF768E | v550) ^ (16 * (v547 ^ 0x78));
  v554 = *(unsigned __int8 *)(v62 + (v551 - 957 * ((4487950 * (unint64_t)v551) >> 32))) ^ 0x78;
  v555 = 431 * ((v531 >> 20) & 0xF ^ 3) + 279719;
  v556 = 431 * (HIWORD(v531) & 0xF ^ 4) + 279719;
  v557 = (v554 << 8) ^ (v552 << 12) | *(unsigned __int8 *)(v62
                                                         + (v556
                                                                        - 957
                                                                        * ((4487950 * (unint64_t)v556) >> 32))) ^ 0x78;
  v558 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x550])
                            - 19716
                            + ((v526 - ((2 * v526) & 0x84CC) - 15770) ^ 0x3D99)
                            - ((2 * (LOWORD(STACK[0x550]) - 19716 + ((v526 - ((2 * v526) & 0x84CC) - 15770) ^ 0x3D99))) & 0x3614)
                            - 25846) >> 12) ^ 9)
       + 279719;
  v559 = (v557 << 8) ^ ((*(unsigned __int8 *)(v62
                                            + (v555 - 957 * ((4487950 * (unint64_t)v555) >> 32))) ^ 0x78) << 12);
  v560 = 431 * ((v531 >> 8) & 0xF ^ 0xB) + 279719;
  v561 = (LOBYTE(STACK[0x550])
        - 4
        + (v527 ^ 0x99)
        - ((2 * (LOBYTE(STACK[0x550]) - 4 + (v527 ^ 0x99))) & 0x14)
        + 10) & 0xF ^ 0xA;
  v562 = *(unsigned __int8 *)(v62 + (v560 - 957 * ((4487950 * (unint64_t)v560) >> 32))) ^ 0x78;
  v563 = 431
       * ((LOBYTE(STACK[0x550])
                          - 4
                          + (v527 ^ 0x99)
                          - ((2 * (LOBYTE(STACK[0x550]) - 4 + (v527 ^ 0x99))) & 0x14)
                          + 10) >> 4)
       + 279719;
  v564 = v563 - 957 * ((4487950 * (unint64_t)v563) >> 32);
  v565 = ((v559 | v562) << 8) - 580273048 - (((v559 | v562) << 9) & 0xBAD37800);
  v566 = v565 ^ ((*(unsigned __int8 *)(v62 + (v558 - 957 * ((4487950 * (unint64_t)v558) >> 32))) ^ 0x78) << 12);
  v567 = *(unsigned __int8 *)(v62
                            + (431 * v561
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v561 + 279719)) >> 32))) ^ 0x78;
  v568 = v550 & 0xF;
  v569 = 431 * (v568 & 0xFFFFFF0F | (16 * (v567 & 0xF)));
  v570 = (v566 ^ 0xDD69BC68 | v567) ^ (16 * (*(unsigned __int8 *)(v62 + v564) ^ 0x78));
  v571 = *(unsigned __int8 *)(v62
                            + (v569 + 290925 - 957 * ((4487950 * (unint64_t)(v569 + 290925)) >> 32))) ^ 0x78;
  v572 = v569 - 957 * ((4487950 * (unint64_t)v569) >> 32);
  v573 = 431 * ((v571 - 1304816322 - ((2 * v571) & 0x7C)) ^ LODWORD(STACK[0x6C8]));
  v574 = *(unsigned __int8 *)(v62 + (v573 + 290925) % 0x3BD);
  v575 = *(unsigned __int8 *)(v62 + v573 % 0x3BD);
  v576 = 431 * ((((v575 >> 4) ^ 7) - ((v575 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v572))
       + 290925;
  v577 = 431 * (v570 & 0xF0 | (v553 >> 4));
  v578 = 431
       * (*(unsigned __int8 *)(v62
                             + (v577 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v577 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v576 - 957 * ((4487950 * (unint64_t)v576) >> 32))) ^ 0x78)) ^ 0x78);
  v579 = v578 - 957 * ((4487950 * (unint64_t)v578) >> 32);
  v580 = 431
       * ((((*(_BYTE *)(v62 + v579) >> 4) ^ 7) - ((*(_BYTE *)(v62 + v579) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + (v577 - 957 * ((4487950 * (unint64_t)v577) >> 32))))
       + 290925;
  v581 = 431 * ((v570 >> 4) & 0xF0 | (v553 >> 8) & 0xF);
  v582 = 431
       * (*(unsigned __int8 *)(v62
                             + (v581 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v581 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v580 - 957 * ((4487950 * (unint64_t)v580) >> 32))) ^ 0x78)) ^ 0x78);
  v583 = v574 ^ (16
               * (*(unsigned __int8 *)(v62
                                     + (v578
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v578 + 290925)) >> 32))) ^ 0x78)) ^ ((*(unsigned __int8 *)(v62 + (v582 + 290925 - 957 * ((4487950 * (unint64_t)(v582 + 290925)) >> 32))) ^ 0x78) << 8);
  v584 = v582 - 957 * ((4487950 * (unint64_t)v582) >> 32);
  v585 = *(unsigned __int8 *)(v62 + ((v584 + 951367751 - ((2 * v584) & 0x8E)) ^ 0x38B4B847u));
  v586 = (((v585 >> 4) ^ 7) + (~(v585 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v62 + (v581 - 957 * ((4487950 * (unint64_t)v581) >> 32)));
  v587 = 431 * (((v566 >> 8) & 0xF0 | ((unsigned __int16)v548 >> 12)) ^ 0xB7);
  v588 = 431
       * (*(unsigned __int8 *)(v62
                             + (v587 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v587 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (431 * v586 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v586 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v589 = v583 ^ ((*(unsigned __int8 *)(v62
                                     + (v588
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v588 + 290925)) >> 32))) ^ 0x78) << 12);
  v590 = *(unsigned __int8 *)(v62 + (v588 - 957 * ((4487950 * (unint64_t)v588) >> 32)));
  v591 = 431
       * ((((v590 >> 4) ^ 7) - ((v590 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v587 - 957 * ((4487950 * (unint64_t)v587) >> 32))))
       + 290925;
  v592 = 431 * (((v566 >> 12) & 0xF0 | HIWORD(v548) & 0xF) ^ 0x9F);
  v593 = *(unsigned __int8 *)(v62
                            + (v592 + 290925 - 957 * ((4487950 * (unint64_t)(v592 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v591 - 957 * ((4487950 * (unint64_t)v591) >> 32))) ^ 0x78)) ^ 0x78;
  LODWORD(STACK[0x678]) = v565 >> 20;
  v594 = *(unsigned __int8 *)(v62
                            + (431 * v593
                                           + 290925
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v593 + 290925)) >> 32)));
  v595 = 431 * v593 - 716214274 - ((862 * v593) & 0x1EDFFC);
  v596 = *(unsigned __int8 *)(v62 + (v595 ^ 0xD54F6FFE) % ((v595 & 0x3BD ^ 1) + (v595 & 0x3BD ^ 0x3BCu)));
  v597 = 431
       * ((((v596 >> 4) ^ 7) - ((v596 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v592 - 957 * ((4487950 * (unint64_t)v592) >> 32))))
       + 290925;
  v598 = 431 * ((HIWORD(v565) & 0xF0 | (v548 >> 20) & 0xF) ^ 0x6A);
  v599 = 431
       * (*(unsigned __int8 *)(v62
                             + (v598 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v598 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v597 - 957 * ((4487950 * (unint64_t)v597) >> 32))) ^ 0x78)) ^ 0x78);
  v600 = v589 ^ ((v594 ^ 0x78) << 16) ^ ((*(unsigned __int8 *)(v62
                                                             + (v599
                                                                            + 290925
                                                                            - 957
                                                                            * ((4487950
                                                                              * (unint64_t)(v599 + 290925)) >> 32))) ^ 0x78) << 20);
  v601 = *(unsigned __int8 *)(v62 + (v599 - 957 * ((4487950 * (unint64_t)v599) >> 32)));
  v602 = 431
       * ((((v601 >> 4) ^ 7) - ((v601 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v598 - 957 * ((4487950 * (unint64_t)v598) >> 32))));
  v603 = 431 * (((v565 >> 20) & 0xF0 | HIBYTE(v548) & 0xF) ^ 0xDC);
  v604 = 431
       * (*(unsigned __int8 *)(v62 + (v603 + 290925) % (((v603 + 290925) | (914 - v603)) & 0x3BD)) ^ (16 * (*(unsigned __int8 *)(v62 + (v602 + 290925) % (((914 - v602) ^ (v602 + 290925)) & 0x3BDu)) ^ 0x78)) ^ 0x78);
  v605 = *(unsigned __int8 *)(v62 + (v604 - 957 * ((4487950 * (unint64_t)v604) >> 32)));
  v606 = 431
       * ((((v605 >> 4) ^ 7) - ((v605 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62
                                                                                                 + (v603 - 957 * ((4487950 * (unint64_t)v603) >> 32))))
       + 290925;
  v607 = *(unsigned __int8 *)(v62 + (v606 - 957 * ((4487950 * (unint64_t)v606) >> 32))) ^ 0x78;
  v608 = 16 * v607 + 1172222702 - ((32 * v607) & 0x5C0);
  v609 = v600 ^ ((unint64_t)(*(unsigned __int8 *)(v62
                                                       + (v604
                                                                      + 290925
                                                                      - 957
                                                                      * ((4487950 * (unint64_t)(v604 + 290925)) >> 32))) ^ 0x78u) << (((v608 & 0xB0 ^ 0xA0) + (v608 & 0xB0 ^ 0x18)) & 0x1F));
  v610 = 431 * ((HIBYTE(v565) & 0xF0 | (v548 >> 28)) ^ 0xD5) + 290925;
  v611 = *(unsigned __int8 *)(v62 + (v610 - 957 * ((4487950 * (unint64_t)v610) >> 32))) ^ 0x78;
  v612 = *(unsigned __int8 *)(v62 + (431 * ((v611 + 1172222702 - ((2 * v611) & 0xDDDDDDDD)) ^ v608) + 290925) % 0x3BD);
  v613 = v609 ^ (((v612 ^ 8) << 28) - (v612 >> 1 << 30) - 416827352);
  v614 = 431 * (v568 & 0xFFFFFF0F | (16 * ((v609 ^ 0x78) & 0xF))) + 168952;
  v615 = v553 >> ((STACK[0x6F4] & 4 ^ 4) + (STACK[0x6F4] & 4));
  v616 = v615 - ((2 * v615) & 0x74A05682) - 1169151167;
  v617 = 431 * (((v609 ^ 0x78) & 0xF0 | ((_BYTE)v615 - ((2 * (_BYTE)v615) & 0x82) + 65) & 0xF) ^ 1)
       + 168952;
  v618 = *(unsigned __int8 *)(v62 + (v617 - 957 * ((4487950 * (unint64_t)v617) >> 32)));
  v619 = 431 * (((v609 >> 4) & 0xF0 | (v616 >> 4)) ^ 4) + 168952;
  v620 = v619 - 957 * ((4487950 * (unint64_t)v619) >> 32);
  v621 = 431 * (((v609 >> 8) & 0xF0 | (v616 >> 8) & 0xF) ^ 0xB) + 168952;
  v622 = v621 - 957 * ((4487950 * (unint64_t)v621) >> 32);
  v623 = 431 * (((v609 >> 12) & 0xF0 | ((unsigned __int16)v616 >> 12)) ^ 2) + 168952;
  v624 = v623 - 957 * ((4487950 * (unint64_t)v623) >> 32);
  v625 = 431 * (HIWORD(v609) & 0xF0 | HIWORD(v616) & 0xF) + 168952;
  v626 = v625 - 957 * ((4487950 * (unint64_t)v625) >> 32);
  v627 = 431 * (((v609 >> 20) & 0xF0 | (v616 >> 20) & 0xF) ^ 5) + 168952;
  v628 = v627 - 957 * ((4487950 * (unint64_t)v627) >> 32);
  v629 = v618 & 0xF ^ 8 | v618 & 0xF ^ 7;
  v630 = LODWORD(STACK[0x6A0]) ^ v514;
  v631 = v525 + 847009037;
  v632 = v527;
  v633 = v527 ^ LODWORD(STACK[0x680]);
  v634 = *(unsigned __int8 *)(v62 + (v614 - 957 * ((4487950 * (unint64_t)v614) >> 32)));
  v635 = v634 ^ (16 * (v618 ^ 0x78)) ^ 0x78;
  v636 = v635 ^ ((*(unsigned __int8 *)(v62 + v620) ^ 0x78) << 8);
  v637 = v636 ^ ((*(unsigned __int8 *)(v62 + v622) ^ 0x78) << 12);
  v638 = v637 ^ ((*(unsigned __int8 *)(v62 + v624) ^ 0x78) << 16);
  v639 = v638 ^ ((*(unsigned __int8 *)(v62 + v626) ^ 0x78) << 20);
  v640 = v613 >> 28;
  v641 = v639 ^ ((*(unsigned __int8 *)(v62 + v628) ^ 0x78) << 24);
  v642 = *(unsigned __int8 *)(v62 + (431 * ((HIBYTE(v616) & 0xF | (16 * ((v640 ^ 0xE) & v629))) ^ 0xA) + 168952) % 0x3BD);
  v643 = (((v642 ^ 8) << 28) - ((v642 << 29) & 0xA0000000) - 765927608) ^ v641;
  LOBYTE(v616) = ((v641 >> 23) & 0x9C) + (HIBYTE(v641) ^ 0xCE);
  v644 = (((((_BYTE)v616 + 2) & 0xF) + 427) & 0xFFFFFFEF ^ (2 - (_BYTE)v616) & 0xF) * ((((_BYTE)v616 + 2) & 0xF) + 939);
  v645 = (LODWORD(STACK[0x6A8]) ^ 0x187CC6F8 ^ v631)
       - ((2 * (LODWORD(STACK[0x6A8]) ^ 0x187CC6F8 ^ v631) + 959490938) & 0x71D536AE)
       + 360902932;
  v646 = LODWORD(STACK[0x700]) - ((2 * LODWORD(STACK[0x700]) + 959490938) & 0x5D49353C) - 1958940581;
  v647 = *(unsigned __int8 *)(v62
                            + (431 * ((v636 >> 8) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v636 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78;
  v648 = *(unsigned __int8 *)(v62
                            + (431 * (v635 >> 4)
                                           + 404709
                                           - 957
                                           * ((4487950
                                             * (unint64_t)(431 * (v635 >> 4)
                                                                + 404709)) >> 32))) ^ 0x78;
  v649 = v630 ^ 0x82E663B0 ^ v523;
  v650 = v646 ^ LODWORD(STACK[0x6A0]);
  v651 = v633 ^ 0xCD389FB4 ^ (16 * v648) ^ (((((((*(unsigned __int8 *)(v62
                                                                     + (v644
                                                                                    - 957
                                                                                    * ((4487950 * (unint64_t)v644) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v643 >> 28) ^ 0xD) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v643 >> 28) ^ 0xD) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * (HIWORD(v638) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v638) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v639 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v639 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12) | v647) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((unsigned __int16)v637 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v637 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * (v634 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v634 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78);
  v652 = v630 ^ 0xA5B57B89 ^ (((2 * (v524 + 711865017)) & 0xDBA79DE0) + ((v524 + 711865017) ^ 0x6DD3CEF0));
  v653 = (v646 ^ 0xD15B6561) + v524 + (v650 ^ 0xA9E739FA);
  LODWORD(STACK[0x6C8]) = (v650 ^ 0x5618C605) + v652 - 2111242338 - ((2 * ((v650 ^ 0x5618C605) + v652)) & 0x451FF3C);
  LODWORD(STACK[0x6D0]) = v645;
  v654 = ((2 * v650) & 0xFB3FDFF6 ^ 0xC821DAB6) + (v650 ^ 0x99EF12A0);
  LODWORD(STACK[0x700]) = v654;
  v655 = v654 + LODWORD(STACK[0x54C]) - ((2 * (v654 + LODWORD(STACK[0x54C])) + 1160686282) & 0xDF409666) - 1841848168;
  v656 = (v645 ^ v632 ^ 0xFC1D5931)
       + (((v633 ^ 0x27A5C4D6) + 2066661448 - ((2 * (v633 ^ 0x27A5C4D6)) & 0xF65D8090)) ^ v631);
  LODWORD(STACK[0x670]) = v656 - 2040243035 - ((2 * v656) & 0xCC8B94A);
  v657 = (v631 ^ 0x7B2EC048) + (v645 ^ 0x471564A8) + (v645 ^ v632 ^ 0x3E2A6CE) + 2;
  v658 = *(unsigned __int8 *)(v62
                            + (431 * ((v655 >> 28) ^ 6)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v655 >> 28) ^ 6) + 279719)) >> 32))) ^ 0x78;
  v659 = 431 * (~HIBYTE(v655) & 0xF) + 279719;
  v660 = *(unsigned __int8 *)(v62 + (v659 - 957 * ((4487950 * (unint64_t)v659) >> 32))) ^ 0x78;
  v661 = ((2 * (v645 ^ v632)) & 0xFFBFFD7E ^ 0x9CAAC45E) + (v645 ^ v632 ^ 0x31AA9CD0);
  LODWORD(STACK[0x65C]) = v661;
  v662 = LODWORD(STACK[0x534])
       - v661
       + 1036993730
       - ((2 * (LODWORD(STACK[0x534]) - v661 + 1036993730)) & 0x48947174)
       - 1538639686;
  v663 = ((v655 >> 7) & 0x1A ^ 0x12) + ((v655 >> 8) & 0xF ^ 0x3B75EBF6);
  v664 = v663 - ((2 * v663 + 152317208) & 0x7EFD6C8E) - 2079798061;
  v665 = 431 * (((unsigned __int16)v655 >> 12) ^ 4) + 279719;
  v666 = (((*(unsigned __int8 *)(v62
                               + (431 * (HIWORD(v655) & 0xF)
                                              + 279719
                                              - 957
                                              * ((4487950 * (unint64_t)(431 * (HIWORD(v655) & 0xF) + 279719)) >> 32))) ^ 0x78 | (v660 << 8) ^ (v658 << 12)) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v655 >> 20) & 0xF ^ 0xA) + 279719) % ((((431 * ((v655 >> 20) & 0xF ^ 0xA) + 167) & 0x238) + ((593 * ((v655 >> 20) & 0xF ^ 0xA) + 856) & 0x238)) | 0x3AD)) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (((STACK[0x678] & 0x9EF ^ 0x100B4029) + (STACK[0x678] & 0x9EF ^ 0x9C6)) & ((((997583219 - v663) & 0x6EF4913F) - 1082214841 - ((2 * (997583219 - v663)) & 0x5CE9200E)) ^ v664)) * (v664 ^ 0xBF7EB647) % 0x3BD) ^ 0x78) ^ (16 * (*(unsigned __int8 *)(v62 + (v665 - 957 * ((4487950 * (unint64_t)v665) >> 32))) ^ 0x78));
  v667 = (v666 << 8) - 1599845075 - ((v666 << 9) & 0x41489A00);
  v668 = 431 * ((v655 >> 4) ^ 3) + 279719;
  v669 = *(unsigned __int8 *)(v62 + (v668 - 957 * ((4487950 * (unint64_t)v668) >> 32))) ^ 0x78;
  v670 = *(unsigned __int8 *)(v62
                            + (431 * (v655 & 0xF ^ 3)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v655 & 0xF ^ 3) + 279719)) >> 32))) ^ 0x78;
  v671 = v670 - 656520605 - ((2 * v670) & 0xC6);
  v672 = 431 * (HIBYTE(v662) & 0xF ^ 4) + 279719;
  v673 = *(unsigned __int8 *)(v62
                            + (431 * ((v662 >> 28) ^ 0xA)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v662 >> 28) ^ 0xA) + 279719)) >> 32))) ^ 0x78;
  v674 = (v667 ^ 0xA0A44D2D | v671 ^ 0xD8DE4A63) ^ (16 * v669);
  v675 = *(unsigned __int8 *)(v62 + (v672 - 957 * ((4487950 * (unint64_t)v672) >> 32))) ^ 0x78;
  v676 = (v675 << 9) & 0x6000;
  v677 = (v675 << 8) - 2082525104;
  v678 = (v677 - v676) ^ ((v673 << 12) - 2082525104 - ((v673 << 13) & 0xFFFE7FFF));
  v679 = ((v677 & 0x100 ^ 0x1AF) + (v677 & 0x100)) * (((v662 >> 20) & 0xF ^ 4) + 649);
  v680 = 431 * (HIWORD(v662) & 0xF ^ 0xA) + 279719;
  v681 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x534])
                            - v661
                            + 17602
                            - ((2 * (LOWORD(STACK[0x534]) - v661 + 17602)) & 0x7174)
                            + 14522) >> 12) ^ 3)
       + 279719;
  v682 = v678
       + (*(unsigned __int8 *)(v62 + (v680 - 957 * ((4487950 * (unint64_t)v680) >> 32))) ^ 0x78);
  v683 = 431 * ((v662 >> 8) & 0xF ^ 8) + 279719;
  v684 = (v682 << 8) ^ ((*(unsigned __int8 *)(v62
                                            + (v679 - 957 * ((4487950 * (unint64_t)v679) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (v683 - 957 * ((4487950 * (unint64_t)v683) >> 32))) ^ 0x78;
  v685 = 431
       * (((LOBYTE(STACK[0x534]) - v661 - 62 - ((2 * (LOBYTE(STACK[0x534]) - v661 - 62)) & 0x74) - 70) >> 4) ^ 0xB)
       + 279719;
  v686 = (LOBYTE(STACK[0x534]) - (_BYTE)v661 - 62 - ((2 * (LOBYTE(STACK[0x534]) - (_BYTE)v661 - 62)) & 0x74) - 70) & 0xF ^ 0xA;
  v687 = (v684 << 8) + 1796825361 - ((v684 << 9) & 0xD632C200);
  v688 = v687 ^ ((*(unsigned __int8 *)(v62 + (v681 - 957 * ((4487950 * (unint64_t)v681) >> 32))) ^ 0x78) << 12);
  v689 = *(unsigned __int8 *)(v62
                            + (431 * v686
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v686 + 279719)) >> 32))) ^ 0x78;
  v690 = v689 - 1442494370 - ((2 * v689) & 0xBC);
  v691 = v688 ^ 0x6B196111 | v690 ^ 0xAA05485E;
  v692 = (((2 * (((v671 & 0xF ^ 0xFFFFFFF7) - 328960016) ^ 0xA66CE7EC)) & 0x4012012)
        - (((v671 & 0xF ^ 0xFFFFFFF7) - 328960016) ^ 0xA66CE7EC)
        - 637582650) ^ 0x93F7D2CE;
  v693 = 431
       * ((((16 * (v690 & 0xF)) ^ 0xE0 | v692) - 2123201694 - ((2 * ((16 * (v690 & 0xF)) ^ 0xE0 | v692)) & 0x2E506C4)) ^ 0x81728362);
  v694 = v691 ^ (16
               * (*(unsigned __int8 *)(v62 + (v685 - 957 * ((4487950 * (unint64_t)v685) >> 32))) ^ 0x78));
  v695 = *(unsigned __int8 *)(v62 + v693 % 0x3BD);
  v696 = 431 * (*(unsigned __int8 *)(v62 + (v693 + 290925) % 0x3BD) ^ LODWORD(STACK[0x698]) ^ 0x78);
  v697 = v696 + 290925 - 957 * ((4487950 * (unint64_t)(v696 + 290925)) >> 32);
  v698 = *(unsigned __int8 *)(v62 + (v696 - 957 * ((4487950 * (unint64_t)v696) >> 32)));
  v699 = 431 * ((((v698 >> 4) ^ 7) - ((v698 >> 3) & 0x10) + 120) ^ v695) + 290925;
  v700 = v699 - 957 * ((4487950 * (unint64_t)v699) >> 32);
  v701 = (((v674 >> 4) ^ 0x5C120075)
        + ((v674 >> 4) & 0xA ^ 0x81CD4E0A)
        - (((v674 >> 4) ^ 0x5C120075) & 0x5400006A)) ^ 0x89DF4E1F;
  v702 = 431 * (((v694 & 0xF0 | v701) + 1028531392 - ((2 * (v694 & 0xF0 | v701)) & 0x7A9C4980)) ^ 0x3D4E24C0);
  v703 = 431
       * (*(unsigned __int8 *)(v62 + (v702 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v62 + v700) ^ 0x78)) ^ 0x78);
  v704 = v703 + 290925 - 957 * ((4487950 * (unint64_t)(v703 + 290925)) >> 32);
  v705 = *(unsigned __int8 *)(v62 + (v703 - 957 * ((4487950 * (unint64_t)v703) >> 32))) >> 4;
  v706 = (v694 >> 4) & 0xF0 | (v674 >> 8) & 0xF;
  v707 = 431
       * (((v705 ^ 7) + 2 * ((v705 ^ 7 | 0x78) ^ v705) + 122) ^ *(unsigned __int8 *)(v62 + v702 % 0x3BD))
       + 290925;
  v708 = 431 * ((v706 + 655084069 - ((2 * v706) & 0x4A)) ^ 0x270BCA25);
  v709 = 431
       * (*(unsigned __int8 *)(v62 + (v708 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v707 - 957 * ((4487950 * (unint64_t)v707) >> 32))) ^ 0x78)) ^ 0x78);
  v710 = *(unsigned __int8 *)(v62 + v697) ^ (16 * (*(unsigned __int8 *)(v62 + v704) ^ 0x78)) ^ ((*(unsigned __int8 *)(v62 + (v709 + 290925 - 957 * ((4487950 * (unint64_t)(v709 + 290925)) >> 32))) ^ 0x78) << 8);
  v711 = *(unsigned __int8 *)(v62 + (v709 - 957 * ((4487950 * (unint64_t)v709) >> 32)));
  v712 = (((v711 >> 4) ^ 7) + (~(v711 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v62 + v708 % 0x3BD);
  v713 = 431 * ((((v667 >> 12) ^ 0xFFF5F5B4) + ((v667 >> 12) & 0xFFFF0 ^ 0xA0A4F) + 1) ^ (v688 >> 8) & 0xF0 ^ 0x60);
  v714 = 431
       * (*(unsigned __int8 *)(v62 + (v713 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (431 * v712 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v712 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v715 = v710 ^ ((*(unsigned __int8 *)(v62
                                     + (v714
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v714 + 290925)) >> 32))) ^ 0x78) << 12);
  v716 = *(unsigned __int8 *)(v62 + (v714 - 957 * ((4487950 * (unint64_t)v714) >> 32)));
  v717 = v713 % 0x3BD;
  LOBYTE(v713) = ((v716 >> 4) ^ 7) - ((v716 >> 3) & 0x10);
  v718 = v653 - ((2 * v653 + 813957974) & 0x9EF33A00);
  v719 = 431 * ((v713 + 120) ^ *(unsigned __int8 *)(v62 + v717)) + 290925;
  v720 = v719 - 957 * ((4487950 * (unint64_t)v719) >> 32);
  v721 = HIWORD(v667) & 0xF;
  v722 = 431
       * (v721 ^ ((unint64_t)(HIWORD(v688) & 0xF ^ 9) << (-124 * (((68 - v653) | (v653 - 69)) & 0xA1))) ^ 4);
  v723 = 431
       * (*(unsigned __int8 *)(v62 + (v722 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v62 + v720) ^ 0x78)) ^ 0x78);
  v724 = v715 ^ ((*(unsigned __int8 *)(v62
                                     + (v723
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v723 + 290925)) >> 32))) ^ 0x78) << 16);
  v725 = 431
       * ((((*(_BYTE *)(v62 + (v723 - 957 * ((4487950 * (unint64_t)v723) >> 32))) >> 4) ^ 7)
                          - ((*(_BYTE *)(v62 + (v723 - 957 * ((4487950 * (unint64_t)v723) >> 32))) >> 3) & 0x10)
                          + 120) ^ *(unsigned __int8 *)(v62 + v722 % 0x3BD))
       + 290925;
  v726 = (HIWORD(v687) & 0xF0 | (v667 >> 20) & 0xF) ^ 0x1A;
  v727 = 431 * ((v726 + 1721162523 - ((2 * v726) & 0x36)) ^ 0x6696DB1B);
  v728 = 431
       * (*(unsigned __int8 *)(v62 + (v727 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v725 - 957 * ((4487950 * (unint64_t)v725) >> 32))) ^ 0x78)) ^ 0x78);
  v729 = v728 + 290925 - 957 * ((4487950 * (unint64_t)(v728 + 290925)) >> 32);
  v730 = *(unsigned __int8 *)(v62 + (v728 - 957 * ((4487950 * (unint64_t)v728) >> 32)));
  v731 = 431
       * ((((v730 >> 4) ^ 7) + (~(v730 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v62 + v727 % 0x3BD))
       + 290925;
  v732 = ((v687 >> 20) & 0xF0 | HIBYTE(v667) & 0xF) ^ 0xB0;
  v733 = 431 * ((v732 - 1414707574 - 2 * (v732 & 0x8B ^ HIBYTE(v667) & 1)) ^ 0xABAD468A);
  v734 = 431
       * (*(unsigned __int8 *)(v62 + (v733 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v731 - 957 * ((4487950 * (unint64_t)v731) >> 32))) ^ 0x78)) ^ 0x78);
  v735 = v724 ^ ((*(unsigned __int8 *)(v62 + v729) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v62
                                                                                         + (v734 + 290925 - 957 * ((4487950 * (unint64_t)(v734 + 290925)) >> 32))) ^ 0x78) << 24);
  v736 = v718 - 407134549;
  v737 = v657 - ((2 * v657) & 0xD197E700) - 389287040;
  v738 = LODWORD(STACK[0x6D0]) ^ 0x502168D7 ^ v737;
  LODWORD(STACK[0x6D0]) = v738;
  v739 = v737;
  LODWORD(STACK[0x660]) = v737;
  v740 = v646 ^ 0x61DD079E ^ (v718 - 407134549);
  LODWORD(STACK[0x680]) = v718 - 407134549;
  v741 = 431
       * ((((*(_BYTE *)(v62 + (v734 - 957 * ((4487950 * (unint64_t)v734) >> 32))) >> 4) ^ 7)
                          + (~(*(_BYTE *)(v62 + (v734 - 957 * ((4487950 * (unint64_t)v734) >> 32))) >> 3) | 0xEF)
                          + 121) ^ *(unsigned __int8 *)(v62 + v733 % 0x3BD))
       + 290925;
  v742 = 431 * ((HIBYTE(v687) & 0xF0 | (v667 >> 28)) ^ 0x6A) + 290925;
  v743 = 431
       * (*(unsigned __int8 *)(v62 + (v742 - 957 * ((4487950 * (unint64_t)v742) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + (v741 - 957 * ((4487950 * (unint64_t)v741) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v744 = v743 - 957 * ((4487950 * (unint64_t)v743) >> 32);
  v745 = v735 ^ ((*(unsigned __int8 *)(v62 + ((v744 + 920413520 - ((2 * v744) & 0x2A0)) ^ 0x36DC6550u)) ^ 0x78) << ((v744 + 80) & 0x1C ^ 0x10) << ((v744 + 80) & 0x1C ^ 0xC));
  v746 = *(unsigned __int8 *)(v62 + (431 * ((16 * ((v745 ^ 0x78) & 0xF)) | v692) + 168952) % 0x3BD);
  v747 = v746 ^ (16
               * (*(unsigned __int8 *)(v62 + (431 * ((v745 ^ 0x78) & 0xF0 | v701) + 168952) % 0x3BD) ^ 0x78));
  v748 = v746 & 0xF;
  v749 = v748 ^ 8;
  v750 = 431 * ((v745 >> 4) & 0xF0 | (v674 >> 8) & 0xF) + 168952;
  v751 = 431 * (((v745 >> 8) & 0xF0 | ((unsigned __int16)v667 >> 12)) ^ 4) + 168952;
  v752 = v747 ^ ((*(unsigned __int8 *)(v62 + (v750 - 957 * ((4487950 * (unint64_t)v750) >> 32))) ^ 0x78) << 8);
  v753 = *(unsigned __int8 *)(v62 + (v751 - 957 * ((4487950 * (unint64_t)v751) >> 32))) ^ 0x78;
  LOWORD(v751) = v748 ^ 8 | v748 ^ 7;
  v754 = v752 ^ (v753 << 12);
  v755 = 431 * ((HIWORD(v745) & 0xF0 | (v667 >> 20) & 0xF) ^ 0xA) + 168952;
  v756 = v754 ^ ((*(unsigned __int8 *)(v62 + (431 * ((v721 | (16 * (HIWORD(v745) & v751))) ^ 4) + 168952) % 0x3BD) ^ 0x78) << 16);
  v757 = v756 ^ ((*(unsigned __int8 *)(v62 + (v755 - 957 * ((4487950 * (unint64_t)v755) >> 32))) ^ 0x78) << 20);
  v758 = 431 * ((v745 >> 20) & 0xF0 | HIBYTE(v667) & 0xF) + 168952;
  v759 = 431 * ((HIBYTE(v745) & 0xF0 | (v667 >> 28)) ^ 0xA);
  v760 = v757 ^ ((*(unsigned __int8 *)(v62 + (v758 - 957 * ((4487950 * (unint64_t)v758) >> 32))) ^ 0x78) << 24);
  v761 = (v760 ^ ((*(unsigned __int8 *)(v62 + (v759 + 168952) % (((v759 + 1016) & 0x3BD) + ((7 - v759) & 0x3BDu))) ^ 8) << 28)) >> 28;
  v762 = ((((*(unsigned __int8 *)(v62
                                + (431 * (HIBYTE(v760) & 0xF)
                                               + 404709
                                               - 957
                                               * ((4487950 * (unint64_t)(431 * (HIBYTE(v760) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * v761 + 404709 - 957 * ((4487950 * (unint64_t)(431 * v761 + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * (HIWORD(v756) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v756) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v757 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v757 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12);
  v763 = *(unsigned __int8 *)(v62
                            + (431 * ((v752 >> 8) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v752 >> 8) & 0xF) + 404709)) >> 32)));
  v764 = 431 * ((v747 >> 4) ^ 7) + 404709;
  v765 = ((v762 | v763 ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62
                                                            + (431 * ((unsigned __int16)v754 >> 12)
                                                                           + 404709
                                                                           - 957
                                                                           * ((4487950
                                                                             * (unint64_t)(431
                                                                                                * ((unsigned __int16)v754 >> 12)
                                                                                                + 404709)) >> 32))) ^ 0x78) << 12);
  v766 = *(unsigned __int8 *)(v62
                            + (431 * v749
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v749 + 404709)) >> 32)));
  v767 = *(unsigned __int8 *)(v62 + (v764 - 957 * ((4487950 * (unint64_t)v764) >> 32))) ^ 0x78;
  v768 = v765 | v766 ^ 0x78;
  v769 = STACK[0x6C8];
  LODWORD(STACK[0x6A8]) = LODWORD(STACK[0x6C8]) ^ 0x87090BB ^ v655;
  v770 = v769 ^ 0x8228FF9E;
  v771 = STACK[0x670];
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x670]) ^ (16 * v767) ^ 0x6CF907C7 ^ v768;
  v772 = STACK[0x700];
  v773 = LODWORD(STACK[0x700])
       - v740
       + (v736 ^ 0x310C335)
       + (((v747 & 0x18) + (v747 & 0x18 ^ 0x18) - 24) & 0xF8 ^ 0x922C310F);
  LODWORD(STACK[0x678]) = v773;
  v774 = v773 - 2131917391;
  v775 = v774 + LODWORD(STACK[0x564]) - ((2 * (v774 + LODWORD(STACK[0x564])) + 1957509792) & 0xC837768E) - 1636673385;
  LODWORD(STACK[0x668]) = v772
                        + v770
                        + 855210992
                        + v773
                        - 2131917391
                        + 31694673
                        - ((2 * (v772 + v770 + 855210992 + v773 - 2131917391)) & 0x3C73EA2);
  LODWORD(STACK[0x6C8]) = v740 - 1095963300 + (v736 ^ 0x310C335);
  v776 = v771 ^ 0x86645CA5;
  LODWORD(STACK[0x700]) = v739 ^ 0xA4A2ADB5;
  v777 = STACK[0x65C];
  v778 = LODWORD(STACK[0x65C]) - v738 + (v739 ^ 0xA4A2ADB5);
  LODWORD(STACK[0x670]) = v778;
  v779 = v778 + 363697342;
  LODWORD(STACK[0x65C]) = v777
                        + v776
                        + 736460906
                        + v778
                        + 363697342
                        + 279835835
                        - ((2 * (v777 + v776 + 736460906 + v778 + 363697342)) & 0x215BE976);
  v780 = 431 * (HIBYTE(v775) & 0xF ^ 4) + 279719;
  v781 = 431 * ((v775 >> 20) & 0xF ^ 1) + 279719;
  v782 = 431 * (HIWORD(v775) & 0xF ^ 0xB) + 279719;
  v783 = 431 * (((unsigned __int16)v775 >> 12) ^ 0xB) + 279719;
  v784 = v783 - 957 * ((4487950 * (unint64_t)v783) >> 32);
  v785 = ((*(unsigned __int8 *)(v62 + (v780 - 957 * ((4487950 * (unint64_t)v780) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v775 >> 28) ^ 0xE) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v775 >> 28) ^ 0xE) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (v782 - 957 * ((4487950 * (unint64_t)v782) >> 32))) ^ 0x78;
  v786 = 431 * ((v775 >> 8) & 0xF ^ 0xB) + 279719;
  v787 = (v785 << 8) ^ ((*(unsigned __int8 *)(v62
                                            + (v781 - 957 * ((4487950 * (unint64_t)v781) >> 32))) ^ 0x78) << 12);
  v788 = 431 * ((v775 >> 4) ^ 4) + 279719;
  v789 = v787 | *(unsigned __int8 *)(v62 + (v786 - 957 * ((4487950 * (unint64_t)v786) >> 32))) ^ 0x78;
  v790 = (v789 << 8) - 480304628 - ((v789 << 9) & 0xC6BE4400);
  v791 = LODWORD(STACK[0x560]) - v779 - ((2 * (LODWORD(STACK[0x560]) - v779) + 37965160) & 0x5E9789A) - 132750591;
  v792 = *(unsigned __int8 *)(v62
                            + (431 * (v775 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v775 & 0xF ^ 7) + 279719)) >> 32))) ^ 0x78;
  v793 = v792 + 1567428153 - ((2 * v792) & 0x72);
  v794 = v790 ^ ((*(unsigned __int8 *)(v62 + v784) ^ 0x78) << 12);
  v795 = 431 * ((HIBYTE(v791) ^ 2) >> ((HIBYTE(v791) & 4 ^ 4) + (HIBYTE(v791) & 4))) + 279719;
  v796 = v795 - 957 * ((4487950 * (unint64_t)v795) >> 32);
  v797 = 431 * (HIBYTE(v791) & 0xF ^ 2) + 279719;
  v798 = v797 - 957 * ((4487950 * (unint64_t)v797) >> 32);
  v799 = 431 * (~(v791 >> 20) & 0xF) + 279719;
  v800 = v799 - 957 * ((4487950 * (unint64_t)v799) >> 32);
  v801 = (v794 ^ 0xE35F220C | v793 ^ 0x5D6D0E39) ^ (16
                                                  * (*(unsigned __int8 *)(v62
                                                                        + (v788
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v788) >> 32))) ^ 0x78));
  v802 = 431 * (HIWORD(v791) & 0xF ^ 4) + 279719;
  v803 = ((*(unsigned __int8 *)(v62 + v798) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + v796) ^ 0x78) << 12);
  v804 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x560])
                            - (v778
                             - 27458)
                            - ((2 * (LOWORD(STACK[0x560]) - (v778 - 27458)) + 19816) & 0x789A)
                            + 25345) >> 12) ^ 0xB)
       + 279719;
  v805 = 431 * ((v791 >> 8) & 0xF ^ 0xC) + 279719;
  v806 = ((v803 | *(unsigned __int8 *)(v62 + (v802 - 957 * ((4487950 * (unint64_t)v802) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + v800) ^ 0x78) << 12);
  v807 = 431
       * (((LOBYTE(STACK[0x560])
                           - (v778
                            - 66)
                           - ((2 * (LOBYTE(STACK[0x560]) - (v778 - 66)) + 104) & 0x9A)
                           + 1) >> 4) ^ 4)
       + 279719;
  v808 = ((v806 | *(unsigned __int8 *)(v62 + (v805 - 957 * ((4487950 * (unint64_t)v805) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v804 - 957 * ((4487950 * (unint64_t)v804) >> 32))) ^ 0x78) << 12);
  v809 = *(unsigned __int8 *)(v62
                            + (431 * (v791 & 0xF ^ 0xD)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v791 & 0xF ^ 0xD) + 279719)) >> 32)));
  v810 = (v809 ^ 0x78) - 2107435517 - 2 * (v809 & 3);
  v811 = (v810 ^ 0x82631603 | v808) ^ (16
                                     * (*(unsigned __int8 *)(v62
                                                           + (v807
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v807) >> 32))) ^ 0x78));
  v812 = ((v793 & 5) + (v793 & 0xF ^ 7) - ((v793 & 0xF ^ 7) & 0x55555555) - 1215673840) ^ 0x952A4EF5;
  v813 = (((2 * v812) | 0x52677188) - v812 - 691255492) ^ 0xB93BC2A;
  v814 = 431
       * ((((16 * (v810 & 0xF)) ^ 0x30 | v813) + 77535146 - ((2 * ((16 * (v810 & 0xF)) ^ 0x30 | v813)) & 0x93E2F54)) ^ 0x49F17AA);
  v815 = 431 * (LODWORD(STACK[0x698]) ^ *(unsigned __int8 *)(v62 + (v814 + 290925) % 0x3BD) ^ 0x78);
  v816 = (v815 + 290925) % 0x3BD;
  v817 = ((v801 >> 4) ^ 0xF9F5E3AD) & 0x13E1FD06 ^ 0x45E1043 ^ (-2
                                                              - ((~(((v801 >> 4) ^ 0xF9F5E3AD) & 0x13E1FD09) | 0x15BFF14A)
                                                               + (((v801 >> 4) ^ 0xF9F5E3AD) & 0x11A1F108 | 0xEA400EB5)));
  v818 = ((2 * v817) & 0x2F71F666) - v817 + 1749484748;
  v819 = v818 ^ 0x79A6E5C8;
  v820 = *(unsigned __int8 *)(v62 + (v815 - 957 * ((4487950 * (unint64_t)v815) >> 32)));
  v821 = 431
       * ((((v820 >> 4) ^ 0x87) - ((v820 >> 3) & 0x10) - 8) ^ *(unsigned __int8 *)(v62 + v814 % 0x3BD))
       + 290925;
  v822 = 431
       * (((v818 ^ 0x79A6E5C8 | v811 & 0xF0)
         + 186101170
         - 2 * (((v818 ^ 0x79A6E5C8) & 0xB17ADB7 | v811 & 0xB0) ^ v818 & 5)) ^ 0xB17ADB2);
  v823 = 431
       * (*(unsigned __int8 *)(v62 + (v822 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v821 - 957 * ((4487950 * (unint64_t)v821) >> 32))) ^ 0x78)) ^ 0x78);
  v824 = v823 + 290925 - 957 * ((4487950 * (unint64_t)(v823 + 290925)) >> 32);
  v825 = *(unsigned __int8 *)(v62 + (v823 - 957 * ((4487950 * (unint64_t)v823) >> 32)));
  v826 = 431
       * ((((v825 >> 4) ^ 7) - ((v825 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v822 % 0x3BD))
       + 290925;
  v827 = v826 - 957 * ((4487950 * (unint64_t)v826) >> 32);
  v828 = *(unsigned __int8 *)(v62 + v824) ^ 0x78;
  v829 = 16 * v828 - ((32 * v828) & 0x1680);
  v830 = ((v801 >> 8) ^ 0x47098946) & 0x4170C3A1 ^ 0xB09FBC5F ^ (((2 * ((v801 >> 8) ^ 0x47098946)) & 0x4C1854C)
                                                               - (((v801 >> 8) ^ 0x47098946) & 0x4370C3AE)
                                                               - 241222311);
  v831 = (-583740585 - (v830 | 0xDD34D357) + (v830 | 0x22CB2CA8)) ^ 0x61CBADA8;
  v832 = (v831 | (v811 >> 4) & 0xF0) - 67153275 - ((2 * (v831 | (v811 >> 4) & 0xF0)) & 0x77FEA50A);
  v833 = (v832 & 0x14 ^ 0x110) + (v832 & 0x14 ^ 4);
  v834 = 431 * (v832 ^ 0xFBFF5285);
  v835 = v834 % (v833 | 0x3ADu);
  v836 = 431
       * (*(unsigned __int8 *)(v62 + (v834 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + ((v827
                                                                                       - 2128410767
                                                                                       - ((2 * v827) & 0x6E2)) ^ 0x81230771)) ^ 0x78)) ^ 0x78);
  v837 = v836 - 957 * ((4487950 * (unint64_t)v836) >> 32);
  v838 = v836 + 290925 - 957 * ((4487950 * (unint64_t)(v836 + 290925)) >> 32);
  v839 = ((v794 >> 12) ^ 0x7D2FCFE3) & 0x2C27FBEB ^ 0x929FC15A ^ (((2 * (((v794 >> 12) ^ 0x7D2FCFE3) & 0x6D27FBE4)) | 0x7D7C76B4)
                                                                - (((v794 >> 12) ^ 0x7D2FCFE3) & 0x6D27FBE4)
                                                                + 1094829222);
  v840 = *(unsigned __int8 *)(v62 + v837) >> 4;
  v841 = ((v840 ^ 7) + 2 * ((v840 ^ 7 | 0x78) ^ v840) + 122) ^ *(unsigned __int8 *)(v62 + v835);
  v842 = (-928546972 - (v839 | 0xC8A77F64) + (v839 | 0x3758809B)) ^ 0x5A797A9A;
  v843 = 431
       * (((v842 | (v808 >> 8) & 0xF0) - 306391201 - ((2 * (v842 | (v808 >> 8) & 0xF0)) & 0x5B79AEBE)) ^ 0xEDBCD75F);
  v844 = 431
       * (*(unsigned __int8 *)(v62 + (v843 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (431 * v841 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v841 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v845 = v844 + 290925 - 957 * ((4487950 * (unint64_t)(v844 + 290925)) >> 32);
  v846 = *(unsigned __int8 *)(v62 + (v844 - 957 * ((4487950 * (unint64_t)v844) >> 32))) >> 4;
  v847 = 431
       * (((v846 ^ 7) + 2 * ((v846 ^ 7 | 0x78) ^ v846) + 122) ^ *(unsigned __int8 *)(v62 + v843 % 0x3BD))
       + 290925;
  v848 = HIWORD(v808) - (STACK[0x4CC] & (2 * HIWORD(v808))) + 120843209;
  v849 = (HIWORD(v794) & 0xF | (16 * ((BYTE2(v808) - (STACK[0x4CC] & (2 * BYTE2(v808))) - 55) & 0xF))) ^ 0x9F;
  v850 = 431 * ((v849 + 1857497751 - ((2 * v849) & 0x12E)) ^ 0x6EB72A97);
  v851 = v829 + 691641165;
  LOBYTE(v829) = *(_BYTE *)(v62 + v816) ^ (v829 + 77);
  v852 = v851 ^ ((*(unsigned __int8 *)(v62 + v838) ^ 0x78) << 8);
  v853 = 431
       * (*(unsigned __int8 *)(v62 + (v850 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v847 - 957 * ((4487950 * (unint64_t)v847) >> 32))) ^ 0x78)) ^ 0x78);
  v854 = v853 - 957 * ((4487950 * (unint64_t)v853) >> 32);
  v855 = v853 + 290925 - 957 * ((4487950 * (unint64_t)(v853 + 290925)) >> 32);
  v856 = (((*(_BYTE *)(v62 + v854) >> 4) ^ 7) - ((*(_BYTE *)(v62 + v854) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v850 % 0x3BD);
  v857 = (v848 & 0xF0 | (v790 >> 20) & 0xF) ^ 0xC5;
  v858 = 431 * ((v857 - 829137746 - ((2 * v857) & 0x15C)) ^ 0xCE945CAE);
  v859 = 431
       * (*(unsigned __int8 *)(v62 + (v858 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (431 * v856 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v856 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v860 = v859 + 290925 - 957 * ((4487950 * (unint64_t)(v859 + 290925)) >> 32);
  v861 = *(unsigned __int8 *)(v62 + (v859 - 957 * ((4487950 * (unint64_t)v859) >> 32)));
  v862 = 431
       * ((((v861 >> 4) ^ 7) - ((v861 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v62 + v858 % 0x3BD))
       + 290925;
  v863 = ((v848 >> 4) & 0xF0 | HIBYTE(v790) & 0xF) ^ 0xB3;
  v864 = 431 * ((v863 - 1369096299 - 2 * (v863 & 0x9D ^ HIBYTE(v790) & 8)) ^ 0xAE653F95);
  v865 = 431
       * (*(unsigned __int8 *)(v62 + (v864 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v62
                                                                                     + (v862 - 957 * ((4487950 * (unint64_t)v862) >> 32))) ^ 0x78)) ^ 0x78);
  v866 = (((*(_BYTE *)(v62 + (v865 - 957 * ((4487950 * (unint64_t)v865) >> 32))) >> 4) ^ 7)
                         - ((*(_BYTE *)(v62 + (v865 - 957 * ((4487950 * (unint64_t)v865) >> 32))) >> 3) & 0x10)
                         + 120) ^ *(unsigned __int8 *)(v62 + v864 % 0x3BD);
  v867 = v865 + 290925 - 957 * ((4487950 * (unint64_t)(v865 + 290925)) >> 32);
  v868 = 431 * v866 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v866 + 290925)) >> 32);
  v869 = 431 * (((v848 >> 8) & 0xF0 | (v790 >> 28)) ^ 0xEE) + 290925;
  v870 = 431
       * (*(unsigned __int8 *)(v62 + (v869 - 957 * ((4487950 * (unint64_t)v869) >> 32))) ^ (16 * (*(unsigned __int8 *)(v62 + v868) ^ 0x78)) ^ 0x78)
       + 290925;
  v871 = (431 * ((v829 ^ 0x78) & 0xF0 ^ 0x40 | v819) + 168952) % 0x3BD;
  v872 = v852 ^ ((*(unsigned __int8 *)(v62 + v845) ^ 0x78) << 12);
  v873 = v872 ^ ((*(unsigned __int8 *)(v62 + v855) ^ 0x78) << 16);
  v874 = ((*(unsigned __int8 *)(v62 + (431 * ((v872 >> 8) & 0xF0 ^ 0x90 | v842) + 168952) % 0x3BD) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v852 >> 4) & 0xF0 ^ 0xB0 | v831) + 168952) % 0x3BD) ^ 0x78) << 8);
  v875 = v873 ^ ((*(unsigned __int8 *)(v62 + v860) ^ 0x78) << 20);
  v876 = 431 * (((v873 >> 12) & 0xF0 | HIWORD(v794) & 0xF) ^ 0x9F) + 168952;
  v877 = v875 ^ ((*(unsigned __int8 *)(v62 + v867) ^ 0x78) << 24);
  v878 = 431 * ((HIWORD(v875) & 0xF0 | (v790 >> 20) & 0xF) ^ 0x35) + 168952;
  v879 = v877 ^ ((*(unsigned __int8 *)(v62 + (v870 - 957 * ((4487950 * (unint64_t)v870) >> 32))) ^ 8) << 28);
  v880 = 431 * (((v877 >> 20) & 0xF0 | HIBYTE(v790) & 0xF) ^ 0x93) + 168952;
  v881 = ((*(unsigned __int8 *)(v62 + (v878 - 957 * ((4487950 * (unint64_t)v878) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v62 + (v876 - 957 * ((4487950 * (unint64_t)v876) >> 32))) ^ 0x78) << 16);
  v882 = 431 * ((HIBYTE(v879) & 0xF0 | (v790 >> 28)) ^ 0x2E) + 168952;
  v883 = *(unsigned __int8 *)(v62 + (v882 - 957 * ((4487950 * (unint64_t)v882) >> 32)));
  v884 = ((v883 ^ 8) << 28) - ((v883 << 29) & 0x40000000);
  v885 = *(unsigned __int8 *)(v62
                            + (431 * ((16 * ((v829 ^ 0x78) & 0xF)) ^ 0xD0 | v813) + 168952)
                            % 0x3BD);
  v886 = v885 ^ (16 * (*(unsigned __int8 *)(v62 + v871) ^ 0x78));
  v887 = v874 ^ v886 ^ 0x2EA4F950 ^ v881;
  v888 = v887 ^ ((*(unsigned __int8 *)(v62 + (v880 - 957 * ((4487950 * (unint64_t)v880) >> 32))) ^ 0x78) << 24);
  v889 = 431 * ((((v884 - 1393924762) ^ v888) >> 28) ^ 8) + 404709;
  v890 = 431 * (HIBYTE(v888) & 0xF ^ 0xE) + 404709;
  v891 = ((*(unsigned __int8 *)(v62 + (v890 - 957 * ((4487950 * (unint64_t)v890) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (v889 - 957 * ((4487950 * (unint64_t)v889) >> 32))) ^ 0x78) << 12);
  v892 = 431 * (HIWORD(v887) & 0xF ^ 4) + 404709;
  v893 = ((v891 | *(unsigned __int8 *)(v62 + (v892 - 957 * ((4487950 * (unint64_t)v892) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((v881 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v881 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12);
  v894 = 431 * ((v886 >> 4) ^ 7) + 404709;
  v895 = STACK[0x6A8];
  v896 = v775 ^ LODWORD(STACK[0x668]);
  v897 = (HIWORD(v794) & 0x1729 ^ 0x4FFA1420 | HIWORD(v794) & 0x1729 ^ 0x309) + (LODWORD(STACK[0x668]) ^ 0x1E39F51);
  v898 = LODWORD(STACK[0x65C]) ^ (16
                                * (*(unsigned __int8 *)(v62
                                                      + (v894
                                                                     - 957 * ((4487950 * (unint64_t)v894) >> 32))) ^ 0x78)) ^ 0xFA30AFD9 ^ (((v893 | *(unsigned __int8 *)(v62 + (431 * (((v874 ^ v886) >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (((v874 ^ v886) >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v62 + (431 * ((unsigned __int16)v874 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v874 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v62 + (431 * (v885 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v885 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78);
  v899 = LODWORD(STACK[0x678]) + 830927260;
  v900 = (LODWORD(STACK[0x680]) ^ 0xFD0CA39B ^ LODWORD(STACK[0x668])) + v899;
  v901 = v900 + 1042080885 - ((2 * v900) & 0x7C39C8EA);
  v902 = ((unsigned __int16)LODWORD(STACK[0x678]) - 28260) & 0x1000;
  v903 = ((v897 + 2263) & v902) == 0;
  v904 = v902 | 0x284A295F;
  v905 = LODWORD(STACK[0x670]) - 1049422873;
  v906 = v905 ^ 0x10ADF4BB ^ LODWORD(STACK[0x65C]);
  if (!v903)
    v904 = 1351897790 - v904;
  v907 = v897 - 2017738888 + v904;
  v908 = v774 - ((2 * v774 - 288280450) & 0x98B02B24) - 1010782767;
  v909 = (LODWORD(STACK[0x6C8]) ^ 0xF79FDDFF)
       + ((2 * LODWORD(STACK[0x6C8])) & 0xEF3FBBFE)
       + 140517889
       + (v908 ^ 0xCC581592);
  v910 = (LODWORD(STACK[0x660]) ^ 0x4BF0A6F1 ^ LODWORD(STACK[0x65C]))
       + v905
       + 869471913
       - ((2 * ((LODWORD(STACK[0x660]) ^ 0x4BF0A6F1 ^ LODWORD(STACK[0x65C])) + v905)) & 0x67A62D52);
  v911 = v901 ^ v908;
  v912 = v901 ^ 0x3E1CE475;
  v913 = (v901 ^ 0x3E1CE475) - 1341789993 + (v907 ^ v899 & 0xFFFFEFFF);
  v914 = v909 ^ 0x22E87346 ^ v901;
  v915 = v779 + 1871041635 + (~(2 * v779 - 450275590) | 0x61DAE35);
  v916 = (((v910 ^ 0x33D316A9) + v906) ^ 0x7E2B7AE7) - 1342767620 + ((2 * ((v910 ^ 0x33D316A9) + v906)) & 0xFC56F5CE);
  v917 = ((v912 + 207874371) ^ 0x7DD3C1AF) - 1896873985 + ((2 * (v912 + 207874371)) & 0xFBA7835E);
  v918 = LODWORD(STACK[0x6D0]) - 1095963300 + LODWORD(STACK[0x700]) + (v915 ^ 0x7CF128E5);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x530]) + 807975958;
  v919 = (v913 ^ 0xFF9EFBFF) + 1593800412 + ((2 * v913) & 0xFF3DF7FE) + 2340;
  v920 = v918 ^ 0xECA0E409 ^ v910;
  v921 = v910 ^ v915;
  v922 = (v910 ^ 0x33D316A9) - ((2 * (v910 ^ 0x33D316A9) - 194023322) & 0xC32C5A8E) - 607263366;
  LODWORD(STACK[0x5B4]) = LODWORD(STACK[0x698]) - 2100612092 - (STACK[0x688] & 0x800);
  LODWORD(STACK[0x700]) = 462689445;
  LODWORD(STACK[0x65C]) = STACK[0x548];
  v923 = v898;
  v924 = STACK[0x6A0];
  v925 = v649;
  HIDWORD(v927) = v649 ^ 0x1F82416;
  LODWORD(v927) = v649 ^ 0xE4000000;
  v926 = v927 >> 25;
  HIDWORD(v927) = v649 ^ 0x416;
  LODWORD(v927) = v649 ^ 0xE5F82000;
  v928 = v926 ^ (v927 >> 11) ^ (((v649 ^ 0xE5F82416) << (STACK[0x708] & 0x1A ^ 0x18 | STACK[0x708] & 0x1A ^ 2))
                              + ((v649 >> (LODWORD(STACK[0x6F8]) + 33)) ^ 0x397E090));
  v929 = STACK[0x6A0];
  LODWORD(STACK[0x698]) = STACK[0x6A0];
  v930 = (v924 ^ 0xEA9D5B62) & (v649 ^ 0xE5F82416);
  v931 = v917 - ((2 * v917 + 35658372) & 0x3A5820A6) + 2117868949;
  HIDWORD(v927) = v651 ^ 0x362;
  LODWORD(v927) = v651 ^ 0xEA9D5800;
  v932 = v927 >> 11;
  v933 = v919 - ((2 * v919 + 1656174164) & 0x5A906296) + 514051189;
  HIDWORD(v927) = v651 ^ 0x9D5B62;
  LODWORD(v927) = v651 ^ 0xEA000000;
  v934 = v927 >> 25;
  LODWORD(STACK[0x6A0]) = v651;
  HIDWORD(v927) = v651 ^ 0x22222222;
  LODWORD(v927) = v651 ^ 0xEA9D5B40;
  LODWORD(STACK[0x638]) = v896;
  LODWORD(STACK[0x668]) = v896 ^ 0xE5F82416;
  v935 = (v927 >> 6) ^ v932 ^ v934;
  LODWORD(STACK[0x670]) = v923 ^ 0xEA9D5B62;
  v936 = (v895 & (v651 ^ 0xEA9D5B62) | v896 & ~(v651 ^ 0xEA9D5B62)) ^ v930 ^ (v923 ^ 0xEA9D5B62) & (v649 ^ 0xE5F82416);
  LODWORD(STACK[0x678]) = v923;
  LODWORD(STACK[0x5B8]) = v651 ^ 0xEA9D5B62;
  LODWORD(STACK[0x6A8]) = v895;
  LODWORD(STACK[0x5B0]) = v649 ^ 0xE5F82416;
  LODWORD(STACK[0x5AC]) = v895 ^ 0xE5F82416;
  v937 = (v895 ^ 0xE5F82416) & (v649 ^ 0xE5F82416) ^ v923 ^ (v923 ^ v929) & (v651 ^ 0xEA9D5B62) ^ (((v896 ^ 0xE5F82416) & (v649 ^ 0xE5F82416))
                                                                                                 - 358786206
                                                                                                 + (~(2 * ((v896 ^ 0xE5F82416) & (v649 ^ 0xE5F82416))) | 0x2AC5493B)
                                                                                                 + 1);
  v938 = (774011107 - v916 + (v928 ^ (v916 - 774011107))) ^ ((v922 ^ 0x9E69D2B8) + (v922 ^ 0x61962D47 ^ v928) + 1) ^ ((v931 ^ v933 ^ v935 ^ 0xCF9BDEE7) + (v928 ^ 0x30642118 ^ v931 ^ v933 ^ v935) + 1);
  v939 = ((2 * ((v914 ^ 0xD621CDEF ^ v931) + (v931 ^ 0xCAD55ADC))) & 0xDAF46ECE)
       + (((v914 ^ 0xD621CDEF ^ v931) + (v931 ^ 0xCAD55ADC)) ^ 0xED7A3767);
  v940 = ((v921 ^ 0x4F223E4C) - ((2 * (v921 ^ 0x4F223E4C) - 241114350) & 0xA9408B00) + 1299232521) ^ v922 ^ 0xE2CF2248;
  v941 = (v931 ^ 0xCAD55ADC) - ((2 * (v931 ^ 0xCAD55ADC) + 1673243868) & 0x76E27CCA);
  v942 = ((v911 ^ 0xF244F1E7) - ((2 * (v911 ^ 0xF244F1E7) - 241114350) & 0xA0425100) + 1223793161) ^ v931 ^ 0x9AF4725C;
  v943 = (v914 ^ 0xE30B68CC) + (v931 ^ 0x352AA523) + (v933 ^ 0x2D48314B) + 237119892;
  v944 = v943 + 1860482032 - ((2 * v943) & 0xDDC967E0);
  v945 = v922 ^ 0xB66F67C8;
  v946 = ((2 * ((v920 ^ v922 ^ 0x691C9568) + v945)) & 0x67AEFDFC) + (((v920 ^ v922 ^ 0x691C9568) + v945) ^ 0x33D77EFE);
  v947 = ((2 * (v945 - 237119890)) & 0xBB7D989E) + ((v945 - 237119890) ^ 0xDDBECC4F);
  v948 = v941 + 760157395;
  v949 = v920 ^ 0x208C0D5F;
  v950 = v916 - 1348711686 + (v920 ^ 0x208C0D5F) - v947 + 2163;
  v951 = v950 + 114046558 - ((2 * v950) & 0xD986CBC);
  v952 = ((v944 ^ (v941 + 760157395) ^ v936 ^ 0x4F92567C) + (v937 ^ 0xB06DA983 ^ v944 ^ (v941 + 760157395) ^ v936) + 1) ^ (-574698417 - v947 + (v937 ^ (v947 + 574698417))) ^ ((v951 ^ 0xF933C9A1) + (v937 ^ 0x6CC365E ^ v951) + 1);
  v953 = ((2 * ((v951 ^ 0x6CC365E) + v940)) & 0x5EF9DB16) + (((v951 ^ 0x6CC365E) + v940) ^ 0x2F7CED8B);
  LODWORD(STACK[0x610]) = v953;
  v954 = ((2 * ((v948 ^ 0x3B713E65) + (v944 ^ 0x2E7B0464) + 1)) & 0xDFD9FFAE)
       + (((v948 ^ 0x3B713E65) + (v944 ^ 0x2E7B0464) + 1) ^ 0x6FECFFD7);
  LODWORD(STACK[0x5FC]) = v944;
  v955 = ((2 * ((v944 ^ 0x6EE4B3F0) + v942)) & 0x27BBECDE) + (((v944 ^ 0x6EE4B3F0) + v942) ^ 0x93DDF66F);
  LODWORD(STACK[0x614]) = v955;
  LODWORD(STACK[0x600]) = v951;
  v956 = ((2 * (v945 + 2061620318 + (v951 ^ 0x465381CA))) & 0xBEFFE7E4)
       + ((v945 + 2061620318 + (v951 ^ 0x465381CA)) ^ 0xDF7FF3F2);
  v957 = STACK[0x700];
  v958 = 71 * (LODWORD(STACK[0x700]) ^ 0x1B941487) + 4544;
  v959 = LODWORD(STACK[0x700]) ^ 0x1B9414A5;
  LODWORD(STACK[0x700]) = STACK[0x700];
  LODWORD(STACK[0x680]) = v959;
  v959 *= 113;
  v960 = LODWORD(STACK[0x6C8]) + (v914 ^ 0x1CF49733) + v935 + v939 + (v936 ^ 0xE5F82416);
  v961 = (char *)off_1E2538470[LODWORD(STACK[0x6F8]) - 734] - 4;
  v962 = STACK[0x710];
  v963 = v960
       + (*(_DWORD *)&v961[4 * (v958 % 0xC0)] ^ 0x92EA93B1)
       + (*(_DWORD *)(STACK[0x710] + 4 * ((v959 + 23391) % 0x112)) ^ 0x7A10636F)
       - 596418536;
  LODWORD(STACK[0x6C8]) = ((2 * v963) & 0x6F5D959C) + (v963 ^ 0x37AECACE);
  v964 = *(_DWORD *)&v961[4 * (71 * (v957 ^ 0x1B9414B5u) % 0xC0)] ^ 0x79982DA6;
  LODWORD(v961) = *(_DWORD *)(v962 + 4 * (v959 % 0x112)) ^ 0x7A10636F;
  LODWORD(v961) = (_DWORD)v961 + 130598471 + (~(2 * (_DWORD)v961 + 1970423994) | 0x65E0BC2D);
  v965 = LODWORD(STACK[0x65C])
       + v949
       - v946
       + v938
       + v952
       + ((-1920424855 * v964) ^ (1968843224 * v964) ^ v961 ^ 0x3FB7A00E)
       + 2 * ((v961 ^ 0x4D0FA1E9) & ((-1920424855 * v964) ^ (1968843224 * v964) ^ 0x72B801E7));
  v966 = v954 - ((2 * v954 + 36568112) & 0xB91CB84) + 517989338;
  LODWORD(STACK[0x5F0]) = v966;
  LODWORD(STACK[0x660]) = v956;
  v967 = ((2 * ((v951 ^ 0x8A2545BF) - 545262606 - v956)) & 0xFAF5DEF6)
       + (((v951 ^ 0x8A2545BF) - 545262606 - v956) ^ 0x7D7AEF7B);
  v968 = ((2 * ((v944 ^ 0xE20DC011) + (v966 ^ 0xFA371A3D) + 1)) & 0xFFBFF3EE)
       + (((v944 ^ 0xE20DC011) + (v966 ^ 0xFA371A3D) + 1) ^ LODWORD(STACK[0x58C]));
  v969 = v954 - v968 - ((2 * (v954 - v968) - 230157430) & 0x800FDF48);
  LODWORD(STACK[0x618]) = v946;
  v970 = v946 - ((2 * v946 + 1096008376) & 0xD207657A) - 1985113063;
  LODWORD(v961) = ((2 * ((v970 ^ 0x96FC4D42) + ((v967 - 2105208699) ^ (v953 - 833764682)) + 1)) & 0xAEFF3FFA)
                + (((v970 ^ 0x96FC4D42) + ((v967 - 2105208699) ^ (v953 - 833764682)) + 1) ^ 0x577F9FFD);
  LODWORD(STACK[0x634]) = v939;
  v971 = v939 - ((2 * v939 - 837922330) & 0x82077D06) - 1475680394;
  v972 = (v971 ^ 0xBEFC417C) + ((v968 + 2098697) ^ (v955 + 1777121746)) + 1;
  v973 = ((2 * v972) & 0xF79DFB6E) + (v972 ^ 0xFBCEFDB7);
  v974 = ((2 * v971) & 0xF5DEDFBE ^ 0xA4C840A6) + (v971 ^ 0x2C9BCFAC);
  v975 = ((2 * v970) & 0xEB6FDF4A ^ 0xE869580A) + (v970 ^ 0x8BC343E8);
  v976 = v967 - (_DWORD)v961;
  v977 = v968 - v973;
  LODWORD(STACK[0x5DC]) = v969 - 1188300439;
  LODWORD(STACK[0x648]) = v968 - v973 - 246358772;
  v978 = v973 - (v968 - v973) - ((2 * (v973 - (v968 - v973)) + 277085458) & 0xD34607D0) + 1910833777;
  v979 = ((v969 - 1188300439) ^ 0xC007EFA4) - v977 + ((v977 - 246358772) ^ 0x2EC7C450) + 68222017 + (v978 ^ 0x69A303E8);
  v980 = v979 - 1163425805 - ((2 * v979) & 0x754F0FE6);
  LODWORD(STACK[0x644]) = v980;
  v981 = v956 - v967;
  v982 = (_DWORD)v961
       - (v967
        - (_DWORD)v961)
       - ((2 * ((_DWORD)v961 - (v967 - (_DWORD)v961)) + 485973762) & 0x5B482AA2)
       + 2082456786;
  LODWORD(STACK[0x5D8]) = 2 * v976;
  v983 = v976 - ((2 * v976 + 516756380) & 0x282CBD2E) - 478353307;
  LODWORD(STACK[0x654]) = v983;
  v984 = (v983 ^ 0x3AD19AC7) + 1;
  LODWORD(STACK[0x650]) = v984;
  v985 = v984 + v981 - v976 + (v982 ^ 0xADA41551);
  LODWORD(STACK[0x640]) = v985;
  LODWORD(v961) = v974 - 2062512095 + (v980 ^ 0xBAA787F3);
  v986 = ((v977 - 246358772) ^ 0xD1383BAF)
       - ((2 * ((v977 - 246358772) ^ 0xD1383BAF) - 1599530246) & 0xC1DF87F4)
       + 826560887;
  v987 = ((2 * (v986 ^ v978)) & 0xF5AF1FFE ^ 0x10890024) + (v986 ^ v978 ^ 0xF39B4FED);
  v988 = (v976 - ((2 * v976 + 516756380) & 0x282CBD2E) - 478353307) ^ 0xC52E6538;
  LODWORD(STACK[0x60C]) = v974;
  v989 = v974 - ((2 * v974 + 352946066) & 0x4320B146) - 334160788;
  LODWORD(v962) = v961 ^ v989;
  LODWORD(STACK[0x630]) = v961 ^ v989;
  LODWORD(v961) = (v986 ^ 0x60EFC3FA) + (v961 ^ v989 ^ 0x5E6FA75C) + 1;
  v990 = ((2 * (_DWORD)v961) & 0xBEF7EB7C) + (v961 ^ 0xDF7BF5BE);
  v991 = STACK[0x6DC];
  LODWORD(v961) = LODWORD(STACK[0x6DC]) ^ v962 ^ 0xC83D2C1B;
  LODWORD(STACK[0x62C]) = v990;
  LODWORD(v961) = (v961 ^ (v990 + 545524290))
                + 197457396
                + (~(2 * (v961 ^ (v990 + 545524290))) | 0xE8761419);
  LODWORD(STACK[0x5F8]) = v975;
  v992 = v975 - 1368691432 + v985;
  v993 = v988 - ((2 * v988 + 547953402) & 0x2C2C13C0) - 429222051;
  v994 = v975 - ((2 * v975 + 527992838) & 0x69B726C6) - 2070423706;
  LODWORD(v962) = v992 ^ v994;
  v995 = v982 ^ 0xBBB21CB1 ^ v993;
  v996 = v993 ^ 0x161609E0;
  LODWORD(STACK[0x628]) = v962;
  v997 = (v962 ^ 0x4B246C9C) + 1;
  v998 = ((2 * (v997 + v996)) & 0xDEB13FCA) + ((v997 + v996) ^ 0xEF589FE5);
  LODWORD(STACK[0x624]) = v998;
  v999 = v998 + 279404571;
  v1000 = (-279404571 - v998 + (LODWORD(STACK[0x6B4]) ^ 0xA1B49402 ^ (v998 + 279404571))) ^ (v997
                                                                                           + (LODWORD(STACK[0x6B4]) ^ 0x156F0761 ^ v962)) ^ ((v961 ^ 0xF43B0A0C) + (LODWORD(STACK[0x6B4]) ^ 0xAA7061F1 ^ v961) + 1);
  v1001 = ((2 * v994) & 0xEEDFEFD2 ^ 0x8D46C10) + (v994 ^ 0xF315C1E3);
  LODWORD(v961) = (v989 ^ 0x9131FDCA) - ((2 * (v989 ^ 0x9131FDCA) + 19063712) & 0x3C7D43FE) - 556788785;
  LODWORD(STACK[0x65C]) = (_DWORD)v961;
  LODWORD(v962) = v990 + v987 - ((2 * (v990 + v987) + 190379142) & 0xF7E7406) + 762033222;
  LODWORD(STACK[0x658]) = v962;
  v1002 = v965 - 687492338;
  LODWORD(STACK[0x5EC]) = v965 - 687492338;
  v1003 = v987
        + (v961 ^ 0xE1C15E00)
        + (v962 ^ 0xF840C5FC)
        - ((2 * (v987 + (v961 ^ 0xE1C15E00) + (v962 ^ 0xF840C5FC)) + 173072390) & 0xF84A211E)
        + 21856402;
  LODWORD(STACK[0x6D0]) = v1003;
  v1004 = (v989 ^ 0x9131FDCA) + (v991 ^ 0x69AD74B8) + v1002 + (v1003 ^ 0xFC25108F);
  v1005 = v1001 - ((2 * v1001 - 1841105970) & 0x966D5D20) + 341321847;
  LODWORD(v961) = v999 + v995;
  v1006 = ((2 * (v999 + (v1005 ^ 0xCB36AE90))) & 0xBFF5ECF2) + ((v999 + (v1005 ^ 0xCB36AE90)) ^ 0xDFFAF679);
  LODWORD(STACK[0x5D0]) = v1006;
  LODWORD(v962) = v1004 - ((2 * v1004) & 0x34C30592) + 442598089;
  v1007 = (BYTE3(v962) & 0xE | 0xF97FFBE1) - (BYTE3(v962) & 0xF | 0xF84DBB40) + (BYTE3(v962) & 0xE | 0x18010B40);
  LODWORD(STACK[0x688]) = v925;
  v1008 = (v925 & 0x289 ^ 0x289)
        + (v925 & 0x289)
        - ((2 * ((v925 & 0x289 ^ 0x289) + (v925 & 0x289))) & 0xC12)
        + 1364848205;
  v1009 = 431 * ((v1008 ^ 0x486AA5A6 ^ v1007) + 2 * ((v1007 ^ 0x19334BEB) & (v1008 ^ 0x64D)));
  v1010 = LODWORD(STACK[0x6C8]) - v1001 + v1006 + 1487335463 + v1000;
  v1011 = v1010 + 756740260 + (~(2 * v1010) | 0xA5CA1EB9);
  v1012 = STACK[0x718];
  v1013 = 431 * ((((BYTE2(v962) ^ 0x61) - ((2 * (BYTE2(v962) ^ 0x61)) & 0x26) + 19) >> 4) ^ 1) + 279719;
  v1014 = 431 * (((WORD1(v962) ^ 0x1A61) - ((2 * (WORD1(v962) ^ 0x1A61)) & 0x1F626) + 1830091539) & 0xF ^ 3) + 279719;
  v1015 = ((*(unsigned __int8 *)(STACK[0x718] + v1009 % 0x3BD) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * ((v962 >> 28) ^ 1) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v962 >> 28) ^ 1) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v1014 - 957 * ((4487950 * (unint64_t)v1014) >> 32))) ^ 0x78;
  v1016 = 431 * (((unsigned __int16)(v1004 - ((2 * v1004) & 0x592) - 32055) >> 12) ^ 8) + 279719;
  v1017 = (v1015 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                              + (v1013 - 957 * ((4487950 * (unint64_t)v1013) >> 32))) ^ 0x78) << 12);
  v1018 = 431 * ((v962 >> 8) & 0xF ^ 2) + 279719;
  LODWORD(STACK[0x6DC]) = v962;
  v1019 = 431 * (((v1004 - ((2 * v1004) & 0x92) - 55) >> 4) ^ 0xC) + 279719;
  v1020 = v1017 | *(unsigned __int8 *)(v1012 + (v1018 - 957 * ((4487950 * (unint64_t)v1018) >> 32))) ^ 0x78;
  v1021 = (v1020 << 8) - 1169113704 - ((v1020 << 9) & 0x74A17A00);
  v1022 = *(unsigned __int8 *)(v1012 + (v1019 - 957 * ((4487950 * (unint64_t)v1019) >> 32))) ^ 0x78;
  v1023 = v1021 ^ ((*(unsigned __int8 *)(v1012
                                       + (v1016 - 957 * ((4487950 * (unint64_t)v1016) >> 32))) ^ 0x78) << 12);
  v1024 = *(unsigned __int8 *)(v1012
                             + (431 * (((_BYTE)v1004 - ((2 * (_BYTE)v1004) & 0x92) - 55) & 0xF ^ 9)
                                            + 279719
                                            - 957
                                            * ((4487950
                                              * (unint64_t)(431
                                                                 * (((_BYTE)v1004 - ((2 * (_BYTE)v1004) & 0x92) - 55) & 0xF ^ 9u)
                                                                 + 279719)) >> 32))) ^ 0x78;
  LOBYTE(v1016) = v1024 + 74;
  v1025 = v1024 + 1948946506 - ((2 * v1024) & 0x6C) - 20;
  v1026 = 431 * (HIBYTE(v1011) & 0xF ^ 0xD) + 279719;
  v1027 = (v1023 ^ 0xBA50BD98 | v1025 ^ 0x742A9036) ^ (16 * v1022 - ((32 * v1022) & 0x1800) - 251888625);
  v1028 = ((*(unsigned __int8 *)(v1012 + (v1026 - 957 * ((4487950 * (unint64_t)v1026) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v1012 + (431 * ((v1011 >> 28) ^ 2) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v1011 >> 28) ^ 2) + 279719)) >> 32))) ^ 0x78) << 12);
  v1029 = STACK[0x6C0];
  v1030 = 431 * (HIWORD(v1011) & 0xF ^ 0xA) + 279719;
  v1031 = v1028 | *(unsigned __int8 *)(v1012 + (v1030 - 957 * ((4487950 * (unint64_t)v1030) >> 32))) ^ 0x78;
  v1032 = 431 * (~(v1011 >> 12) & 0xF) + 279719;
  v1033 = 431 * ((v1011 >> 4) ^ 0xA) + 279719;
  v1034 = *(unsigned __int8 *)(v1012
                             + (431 * ((v1011 >> 8) & 0xF)
                                            + 279719
                                            - 957
                                            * ((4487950 * (unint64_t)(431 * ((v1011 >> 8) & 0xF) + 279719)) >> 32))) ^ (v1031 << 8) ^ ((*(unsigned __int8 *)(v1012 + 431 * (((v1011 >> 20) & 0xF ^ 1) + 888238593 * ((STACK[0x6C0] & 0xB6CA0089 ^ 0xA0800000) + (STACK[0x6C0] & 0xB6CA0089 ^ 0x164A0089))) % 0x3BD) ^ 0x78) << 12) ^ (16 * (*(unsigned __int8 *)(v1012 + (v1032 - 957 * ((4487950 * (unint64_t)v1032) >> 32))) ^ 0x78));
  v1035 = *(unsigned __int8 *)(v1012
                             + (431 * (v1011 & 0xF ^ 3)
                                            + 279719
                                            - 957
                                            * ((4487950 * (unint64_t)(431 * (v1011 & 0xF ^ 3) + 279719)) >> 32))) ^ 0x78;
  v1036 = *(unsigned __int8 *)(v1012 + (v1033 - 957 * ((4487950 * (unint64_t)v1033) >> 32)));
  v1037 = v1025 & 0xC | v1016 & 3;
  LODWORD(STACK[0x608]) = v1037;
  v1038 = ((v1035 - 560003259 - ((2 * v1035) & 0x8A)) ^ 0xDE9F0745 | ((v1034 ^ 0x78) << 8)) ^ (16 * (v1036 ^ 0x78));
  v1039 = (v1037 & 0xFFFFFF0F | (16 * (((_BYTE)v1035 + 69 - ((2 * (_BYTE)v1035) & 0x8A)) & 0xF))) ^ 0x56;
  v1040 = 431 * ((v1039 - 2057168382 - ((2 * v1039) & 4)) ^ 0x85621A02);
  v1041 = *(unsigned __int8 *)(v1012 + (v1040 + 290925) % 0x3BD);
  LODWORD(v962) = LODWORD(STACK[0x5B4]) ^ 0x82CB3404;
  LODWORD(STACK[0x5E0]) = v962;
  v1042 = 431 * (v1041 ^ v962 ^ 0x78);
  v1043 = *(unsigned __int8 *)(v1012 + v1042 % 0x3BD) >> 4;
  v1044 = ((v1043 ^ 7) + 2 * ((v1043 ^ 7 | 0x78) ^ v1043) + 122) ^ *(unsigned __int8 *)(v1012 + v1040 % 0x3BD);
  LODWORD(v962) = (((v1027 >> 4) ^ 0x28045446)
                 + ((v1027 >> 4) & 0xA ^ 0x97F08298)
                 - (((v1027 >> 4) ^ 0x28045446) & 0x2804444A)) ^ 0x97F0929C;
  LODWORD(STACK[0x5F4]) = v962;
  v1045 = 431 * (((v1038 & 0xF0 | v962) + 1017576927 - ((2 * (v1038 & 0xF0 | v962)) & 0x794DFBBE)) ^ 0x3CA6FDDF);
  v1046 = 431
        * (*(unsigned __int8 *)(v1012 + (v1045 + 290925) % 0x3BD) ^ (16
                                                                   * (*(unsigned __int8 *)(v1012
                                                                                         + (431 * v1044 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v1044 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v1047 = v1046 + 290925 - 957 * ((4487950 * (unint64_t)(v1046 + 290925)) >> 32);
  v1048 = *(unsigned __int8 *)(v1012 + (v1046 - 957 * ((4487950 * (unint64_t)v1046) >> 32))) >> 4;
  v1049 = 431
        * (((v1048 ^ 7) + 2 * ((v1048 ^ 7 | 0x78) ^ v1048) + 122) ^ *(unsigned __int8 *)(v1012 + v1045 % 0x3BD))
        + 290925;
  v1050 = *(unsigned __int8 *)(v1012 + (v1042 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v1012 + v1047) ^ 0x78));
  LODWORD(STACK[0x5CC]) = v1050;
  v1051 = v1038 >> 4 >> ((((v1038 >> 4) & 0x58) - 18 + ((v1038 >> 4) & 0x58 ^ 0x58)) & 0x3C);
  v1052 = v1051 - ((2 * v1051) & 0xFAE5F6C);
  v1053 = ((v1027 >> 8) ^ 0x10783E95) & 0x8B95EC ^ 0xA1371C ^ ((STACK[0x580] & (2 * ((v1027 >> 8) ^ 0x10783E95)))
                                                             - (((v1027 >> 8) ^ 0x10783E95) & 0x8B95E3)
                                                             + 10581781) & 0xBFBFFF;
  v1054 = (16 * (_BYTE)v1052 + 96) & 0xF0 ^ 0x60 | v1053;
  v1055 = 431 * ((v1054 - 1340156239 - 2 * (v1054 & 0x1E96B5 ^ v1053 & 4)) ^ 0xB01ED6B1);
  v1056 = 431
        * (*(unsigned __int8 *)(v1012 + (v1055 + 290925) % 0x3BD) ^ (16
                                                                   * (*(unsigned __int8 *)(v1012
                                                                                         + (v1049 - 957 * ((4487950 * (unint64_t)v1049) >> 32))) ^ 0x78)) ^ 0x78);
  v1057 = v1056 + 290925 - 957 * ((4487950 * (unint64_t)(v1056 + 290925)) >> 32);
  v1058 = *(unsigned __int8 *)(v1012 + (v1056 - 957 * ((4487950 * (unint64_t)v1056) >> 32)));
  v1059 = 431
        * ((((v1058 >> 4) ^ 7) - ((v1058 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v1012 + v1055 % 0x3BD))
        + 290925;
  v1060 = v1059 - 957 * ((4487950 * (unint64_t)v1059) >> 32);
  LODWORD(STACK[0x6C0]) = v961 ^ v1005;
  v1061 = v1052 - 942198858;
  LODWORD(v961) = 431
                * (((v1052 - 942198858) & 0xF0 | 0xBF0E7704) ^ 0xBF0E77B4 ^ ((v1023 >> 12) ^ 0x40B) & (((v961 ^ v1005) & 0x3A2F ^ 0x2A00) + ((v961 ^ v1005) & 0x3A2F ^ 0x102F)) & 0x466F & (((v1023 >> 12) & 0xD4D5F ^ 0x4854) + ((v1023 >> 12) & 0xD4D5F ^ 0x9050B)));
  v1062 = 431
        * (*(unsigned __int8 *)(v1012 + ((int)v961 + 290925) % 0x3BDu) ^ (16
                                                                        * (*(unsigned __int8 *)(v1012 + v1060) ^ 0x78)) ^ 0x78);
  v1063 = v1062 + 290925 - 957 * ((4487950 * (unint64_t)(v1062 + 290925)) >> 32);
  v1064 = *(unsigned __int8 *)(v1012 + (v1062 - 957 * ((4487950 * (unint64_t)v1062) >> 32)));
  v1065 = (431
         * ((((v1064 >> 4) ^ 7) - ((v1064 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v1012 + v961 % 0x3BD))
         + 289968)
        % 0x3BD;
  LODWORD(v961) = ((*(unsigned __int8 *)(v1012 + v1063) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(v1012 + v1057) ^ 0x78) << 8);
  LODWORD(STACK[0x5E8]) = v1023;
  v1066 = ((v1061 >> 4) & 0xF0 | HIWORD(v1023) & 0xF) ^ 0xF0;
  v1067 = 431 * ((v1066 - 2119393388 - 2 * (v1066 & 0x9E ^ HIWORD(v1023) & 0xA)) ^ 0x81AC9F94);
  v1068 = 431
        * (*(unsigned __int8 *)(v1012 + (v1067 + 290925) % 0x3BD) ^ ((*(unsigned __int8 *)(v1012 + v1065) ^ 0x78) << ((*(_BYTE *)(v1012 + v1065) & 4 ^ 4) + (*(_BYTE *)(v1012 + v1065) & 4))) ^ 0x78);
  v1069 = (v1068 + 290925) % 0x3BD;
  v1070 = *(unsigned __int8 *)(v1012 + v1068 % 0x3BD);
  v1071 = 431
        * ((((v1070 >> 4) ^ 7) - ((v1070 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v1012 + v1067 % 0x3BD))
        + 290925;
  v1072 = ((v1061 >> 8) & 0xF0 | (v1021 >> 20) & 0xF) ^ 0x25;
  v1073 = 431 * ((v1072 - 310903525 - ((2 * v1072) & 0x36)) ^ 0xED77FD1B);
  v1074 = 431
        * (*(unsigned __int8 *)(v1012 + (v1073 + 290925) % 0x3BD) ^ (16
                                                                   * (*(unsigned __int8 *)(v1012
                                                                                         + (v1071 - 957 * ((4487950 * (unint64_t)v1071) >> 32))) ^ 0x78)) ^ 0x78);
  v1075 = *(unsigned __int8 *)(v1012 + (v1074 - 957 * ((4487950 * (unint64_t)v1074) >> 32))) >> 4;
  v1076 = 431
        * (((v1075 ^ 7) + 2 * ((v1075 ^ 7 | 0x78) ^ v1075) + 122) ^ *(unsigned __int8 *)(v1012 + v1073 % 0x3BD))
        + 290925;
  v1077 = ((v1061 >> 12) & 0xF0 | HIBYTE(v1021) & 0xF) ^ 0x7A;
  v1078 = 431 * ((v1077 + 1709936932 - ((2 * v1077) & 0x48)) ^ 0x65EB9124);
  v1079 = *(unsigned __int8 *)(v1012 + (v1078 + 290925) % 0x3BD) ^ (16
                                                                  * (*(unsigned __int8 *)(v1012
                                                                                        + (v1076 - 957 * ((4487950 * (unint64_t)v1076) >> 32))) ^ 0x78));
  LODWORD(STACK[0x5D4]) = v1005;
  v1080 = 431 * (v1079 ^ 0x78);
  v1081 = v1080
        % (((((((2003827225 - v1001) ^ (v1001 - 2003826201))
             - ((2 * ((2003827225 - v1001) ^ (v1001 - 2003826201))) & 0x120)
             + 656) ^ v1005)
           - 1) | v1005 ^ 0x290) & 0x3BD);
  v1082 = 431
        * ((((*(_BYTE *)(v1012 + v1081) >> 4) ^ 7) - ((*(_BYTE *)(v1012 + v1081) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v1012 + v1078 % 0x3BD))
        + 290925;
  LODWORD(STACK[0x5C8]) = v1021;
  v1083 = 431 * ((HIWORD(v1061) & 0xF0 | (v1021 >> 28)) ^ 0xDB) + 290925;
  v1084 = 431
        * (*(unsigned __int8 *)(v1012 + (v1083 - 957 * ((4487950 * (unint64_t)v1083) >> 32))) ^ (16 * (*(unsigned __int8 *)(v1012 + (v1082 - 957 * ((4487950 * (unint64_t)v1082) >> 32))) ^ 0x78)) ^ 0x78)
        + 290925;
  v1085 = *(unsigned __int8 *)(v1012 + (v1084 - 957 * ((4487950 * (unint64_t)v1084) >> 32)));
  v1086 = v1050 ^ 0x4C346B20 ^ ((_DWORD)v961 + 1278503712 - ((2 * (_DWORD)v961) & 0x8D600) + 56) ^ ((*(unsigned __int8 *)(v1012 + v1069) ^ 0x78) << 16) ^ ((*(unsigned __int8 *)(v1012 + (v1074 + 290925 - 957 * ((4487950 * (unint64_t)(v1074 + 290925)) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v1012 + (v1080 + 290925 - 957 * ((4487950 * (unint64_t)(v1080 + 290925)) >> 32))) ^ 0x78) << 24) ^ ((v1085 ^ 8) << 28);
  LODWORD(STACK[0x5C4]) = HIBYTE(v1021);
  v1087 = v1086 >> (109 - (HIBYTE(v1021) & 0x69 ^ 0x28 | HIBYTE(v1021) & 0x69 ^ 0x41));
  v1088 = v1087 - ((2 * v1087) & 0x1C977FEA);
  LODWORD(STACK[0x5C0]) = (((10 - (_BYTE)v1088) & 0xF0 | v1053) + 392)
                        * ((v1005 & 0x1AF ^ 0x80) + ((24 - v1001) & 0x1AF))
                        % ((STACK[0x700] & 0x3BD ^ 0x309) + (STACK[0x700] & 0x3BD ^ 0xB4u));
  v1089 = STACK[0x6B8];
  v1090 = STACK[0x690];
  HIDWORD(v927) = LODWORD(STACK[0x690]) ^ 0x14B8;
  LODWORD(v927) = LODWORD(STACK[0x690]) ^ 0x69AD6000;
  v1091 = v927 >> 13;
  HIDWORD(v927) = LODWORD(STACK[0x690]) ^ 0x2D74B8;
  LODWORD(v927) = LODWORD(STACK[0x690]) ^ 0x69800000;
  v1092 = v927 >> 22;
  v1093 = LODWORD(STACK[0x690]) ^ 0x69AD74B8;
  LODWORD(STACK[0x6B8]) = STACK[0x690];
  HIDWORD(v927) = LODWORD(STACK[0x708]) ^ 2;
  LODWORD(v927) = LODWORD(STACK[0x708]) ^ 0xA1B49400;
  v1094 = v927 >> 2;
  v1095 = v1091 ^ (__PAIR64__(v1090, v1093) >> 2) ^ v1092;
  HIDWORD(v927) = LODWORD(STACK[0x708]) ^ 0x349402;
  LODWORD(v927) = LODWORD(STACK[0x708]) ^ 0xA1800000;
  v1096 = v927 >> 22;
  v1097 = STACK[0x708];
  HIDWORD(v927) = LODWORD(STACK[0x708]) ^ 0x1402;
  LODWORD(v927) = LODWORD(STACK[0x708]) ^ 0xA1B48000;
  v1098 = (v927 >> 13) ^ v1094 ^ v1096;
  v1099 = -545262606 - LODWORD(STACK[0x660]) + ((LODWORD(STACK[0x660]) + 545262606) ^ v1095);
  LODWORD(STACK[0x660]) = v1089;
  v1100 = STACK[0x6F4];
  v1101 = LODWORD(STACK[0x6F4]) ^ 0xA1B49402;
  LODWORD(STACK[0x6B4]) = v1029;
  LODWORD(v962) = LODWORD(STACK[0x6E0]) ^ 0x69AD74B8;
  v1102 = (v1089 ^ 0x69AD74B8 ^ v1093) & (v1029 ^ 0xA1B49402) ^ v1101 & v1093 ^ (v1097 ^ 0xA1B49402) & (v1089 ^ 0x69AD74B8) ^ v962 & (v1097 ^ v1100);
  v1103 = ((LODWORD(STACK[0x5FC]) ^ v1098 ^ LODWORD(STACK[0x5F0]) ^ 0x183ADA2C)
         + (v1095 ^ 0xE7C525D3 ^ LODWORD(STACK[0x5FC]) ^ v1098 ^ LODWORD(STACK[0x5F0]))
         + 1) ^ ((LODWORD(STACK[0x600]) ^ 0x75DABA40) + (v1095 ^ 0x8A2545BF ^ LODWORD(STACK[0x600])) + 1) ^ v1099;
  LODWORD(STACK[0x5A4]) = v1101;
  LODWORD(STACK[0x5FC]) = v1097 ^ 0xA1B49402;
  LODWORD(STACK[0x5A0]) = v1029 ^ 0xA1B49402;
  LODWORD(STACK[0x5F0]) = v962;
  LODWORD(STACK[0x5A8]) = v1089 ^ 0x69AD74B8;
  v1104 = v1101 & (v1029 ^ 0xA1B49402) ^ (v1089 ^ 0x69AD74B8) & v1093 ^ (v1097 ^ 0xA1B49402) & v1101 ^ (v1097 ^ 0xA1B49402) & (v1029 ^ 0xA1B49402) ^ v962 & (v1089 ^ 0x69AD74B8) ^ v962 & v1093;
  v1105 = (LODWORD(STACK[0x5DC]) ^ v1104 ^ (v977 - 68222016) ^ 0xC007EFA4)
        - 1629046779
        - 2
        * ((LODWORD(STACK[0x5DC]) ^ v1104 ^ (v977 - 68222016) ^ 0xC007EFA4) & 0x1EE6B80F ^ (LODWORD(STACK[0x5DC]) ^ v1104 ^ (v977 - 68222016)) & 0xA);
  v1106 = (v976 - LODWORD(STACK[0x5D8]) + ((v976 - 637226878) ^ v1102) + 637226878) ^ (((v981 + 2116554047) ^ v1102)
                                                                                     - v981
                                                                                     - 2116554047) ^ ((v1105 ^ 0x611947FA) + (v1102 ^ 0x9EE6B805 ^ v1105) + 1);
  v1107 = -2065314386 - LODWORD(STACK[0x5D0]) - ((1073081586 - 2 * LODWORD(STACK[0x5D0])) & 0x49D5AE6A);
  LODWORD(v961) = ((2 * ((LODWORD(STACK[0x6D0]) ^ 0xFF1E29D5) + 719903431)) & 0xFF936B5E)
                + (((LODWORD(STACK[0x6D0]) ^ 0xFF1E29D5) + 719903431) ^ 0x7FC9B5AF);
  LODWORD(STACK[0x600]) = (_DWORD)v961;
  v1108 = STACK[0x5F8];
  v1109 = STACK[0x6C8];
  v1110 = LODWORD(STACK[0x6C8])
        - (LODWORD(STACK[0x5F8])
         + LODWORD(STACK[0x618])
         + LODWORD(STACK[0x610]))
        + v1103
        + v1106
        + 1210614939
        + (_DWORD)v961;
  v1111 = ((2 * ((v1107 ^ 0xA7D1EE6F) + 719903431)) & 0xF7FFF6DE)
        + (((v1107 ^ 0xA7D1EE6F) + 719903431) ^ LODWORD(STACK[0x578]));
  LODWORD(STACK[0x690]) = v1111;
  v1112 = v1110 - ((2 * v1110) & 0xFAC8AAE4) + 2103727474;
  v1113 = 431 * (HIBYTE(v1112) & 0xF ^ 0xD) + 279719;
  v1114 = 431 * ((v1112 >> 20) & 0xF ^ 6) + 279719;
  LODWORD(v961) = STACK[0x60C];
  v1115 = v1098 + LODWORD(STACK[0x634]) + LODWORD(STACK[0x614]) + v1104 + LODWORD(STACK[0x60C]) + LODWORD(STACK[0x5EC]);
  v1116 = 431 * (HIWORD(v1112) & 0xF ^ 4) + 279719;
  v1117 = ((*(unsigned __int8 *)(v1012 + (v1113 - 957 * ((4487950 * (unint64_t)v1113) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v1012 + (431 * ((v1112 >> 28) ^ 7) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v1112 >> 28) ^ 7) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v1012 + (v1116 - 957 * ((4487950 * (unint64_t)v1116) >> 32))) ^ 0x78;
  v1118 = 431 * (((unsigned __int16)v1112 >> 12) ^ 5) + 279719;
  v1119 = 431 * ((v1112 >> 8) & 0xF ^ 5) + 279719;
  v1120 = (v1117 << 8) ^ ((*(unsigned __int8 *)(v1012
                                              + (v1114 - 957 * ((4487950 * (unint64_t)v1114) >> 32))) ^ 0x78) << 12);
  LODWORD(STACK[0x700]) = v1112;
  v1121 = 431 * ((v1112 >> 4) ^ 7) + 279719;
  v1122 = v1121 - 957 * ((4487950 * (unint64_t)v1121) >> 32);
  v1123 = 431 * (v1112 & 0xF ^ 2) + 279719;
  v1124 = v1123 - 957 * ((4487950 * (unint64_t)v1123) >> 32);
  v1125 = v1120 | *(unsigned __int8 *)(v1012 + (v1119 - 957 * ((4487950 * (unint64_t)v1119) >> 32))) ^ 0x78;
  v1126 = (v1125 << 8) + 568603278 - ((v1125 << 9) & 0x43C86400);
  v1127 = v1115 - v1111 - 771461547 - ((2 * (v1115 - v1111 - 771461547)) & 0x1A1EAD20) + 219109008;
  v1128 = ((HIBYTE(v1127) & 0xF ^ 0xD) + 649) * (((v1109 + 183) & 0x1AF) + ((328 - v1109) & 0x1AF));
  v1129 = *(unsigned __int8 *)(v1012 + v1124) ^ 0x78;
  v1130 = (v1126 ^ ((*(unsigned __int8 *)(v1012
                                        + (v1118 - 957 * ((4487950 * (unint64_t)v1118) >> 32))) ^ 0x78) << 12) ^ 0x21E4328E | (v1129 - 1780800560 - ((2 * v1129) & 0x1A0)) ^ 0x95DB23D0) ^ (16 * (*(unsigned __int8 *)(v1012 + v1122) ^ 0x78));
  v1131 = 431 * (~HIWORD(v1127) & 0xF) + 279719;
  v1132 = (((*(unsigned __int8 *)(v1012 + (v1128 - 957 * ((4487950 * (unint64_t)v1128) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v1012 + (431 * (v1127 >> 28) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v1127 >> 28) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v1012 + (v1131 - 957 * ((4487950 * (unint64_t)v1131) >> 32))) ^ 0x78) ^ ((unint64_t)(*(unsigned __int8 *)(v1012 + (431 * ((v1127 >> 20) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v1127 >> 20) & 0xF) + 279719)) >> 32))) ^ 0x78u) << (((STACK[0x6DC] & 0x21 ^ 1) + (STACK[0x6DC] & 0x21 ^ 0x20)) ^ 0x25u));
  LODWORD(STACK[0x634]) = (v1132 << 8) - ((v1132 << 9) & 0xB0D79C00) + 1483460318;
  v1133 = ((v1129 & 0xF ^ 0xE) - ((2 * (v1129 & 0xF ^ 0xE)) & 0x10) - 433199320) ^ 0xEA4D4F26;
  LODWORD(STACK[0x618]) = (1473418110 - (v1133 | 0x57D2937E) + (v1133 | 0xA82D6C81)) ^ 0xA44DC481;
  v1134 = (39716602
         - (((v1130 >> 4) ^ 0x4FDBF7EC) & 0xDA00905 | 0x25E06FA)
         + (((v1130 >> 4) ^ 0x4FDBF7EC) & 0x20400BA | 0xFDA1F905)) ^ ((v1130 >> 4) ^ 0x4FDBF7EC) & 0xFA409B0;
  LODWORD(STACK[0x614]) = ((v1134 & 0x62225FC1 ^ 0x120740) + (v1134 ^ 0xF221F8A9) - ((v1134 ^ 0xF221F8A9) & 0x62325FC1)) ^ 0x6DB25E61;
  v1135 = LODWORD(STACK[0x648]) ^ LODWORD(STACK[0x678]) ^ LODWORD(STACK[0x644]);
  v1136 = (v1135 ^ 0x7EFD18C1) + (LODWORD(STACK[0x638]) ^ 0x64FAC328 ^ v1135);
  v1137 = LODWORD(STACK[0x668])
        + (STACK[0x654] & 0x1291A705 ^ 0x2500)
        + (STACK[0x654] & 0x1291A705 ^ 0x12918205)
        - 311535365;
  v1138 = (LODWORD(STACK[0x650])
         + (LODWORD(STACK[0x654]) ^ 0xEB4F87AE ^ (v1137 - ((2 * v1137) & 0x5CC3C52C) + 778166934))) ^ ((LODWORD(STACK[0x668]) ^ (LODWORD(STACK[0x640]) - 1541186371)) - LODWORD(STACK[0x640]) + 1541186371);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x670]) - 1155336030 + (_DWORD)v961;
  LODWORD(STACK[0x678]) = (v1138 ^ (v1136 + 1)) - v1108;
  v1139 = (LODWORD(STACK[0x628]) ^ 0xB4DB9363) - 279404571 - LODWORD(STACK[0x624]);
  v1140 = v1088 + 776716277;
  v1141 = 431 * ((((v1088 + 776716277) >> 4) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5E8]) >> 12)) ^ 0xFB) + 168952;
  v1142 = 431 * ((((v1088 + 776716277) >> 8) & 0xF0 | HIWORD(LODWORD(STACK[0x5E8])) & 0xF) ^ 0xB0) + 168952;
  v1143 = 431 * ((((v1088 + 776716277) >> 12) & 0xF0 | (LODWORD(STACK[0x5C8]) >> 20) & 0xF) ^ 0xB5) + 168952;
  v1144 = 431 * ((((v1088 + 776716277) >> 16) & 0xF0 | HIBYTE(LODWORD(STACK[0x5C8])) & 0xF) ^ 0x4A) + 168952;
  v1145 = ((*(unsigned __int8 *)(v1012 + (v1144 - 957 * ((4487950 * (unint64_t)v1144) >> 32))) ^ 0x78) << 24) ^ ((*(unsigned __int8 *)(v1012 + (v1143 - 957 * ((4487950 * (unint64_t)v1143) >> 32))) ^ 0x78) << 20);
  LODWORD(v961) = *(unsigned __int8 *)(v1012
                                     + (((LODWORD(STACK[0x608]) | (16
                                                                 * (((v1085 & 0xF ^ 8) + (v1085 & 0xF ^ 7)) & (LODWORD(STACK[0x5CC]) ^ 0x18)))) ^ 6)
                                      + 392)
                                     * (STACK[0x5C4] & 0xAF ^ 0xAA | STACK[0x5C4] & 0xAF ^ 0x105u)
                                     % 0x3BD);
  v1146 = (*(unsigned __int8 *)(v1012 + LODWORD(STACK[0x5C0])) ^ 0x78) << 8;
  v1147 = v1146 ^ (16
                 * (*(unsigned __int8 *)(v1012
                                       + (431 * ((16 * ((v1088 + 776716277) & 0xF)) ^ 0x50 | LODWORD(STACK[0x5F4]))
                                        + 168952)
                                       % 0x3BD) ^ 0x78));
  v1148 = v961 ^ v1147 ^ 0x78;
  v1149 = (*(unsigned __int8 *)(v1012 + (v1141 - 957 * ((4487950 * (unint64_t)v1141) >> 32))) ^ 0x78) << 12;
  v1150 = v1149 ^ ((*(unsigned __int8 *)(v1012
                                       + (v1142 - 957 * ((4487950 * (unint64_t)v1142) >> 32))) ^ 0x78) << 16);
  v1151 = v1150 ^ 0xBB1769D2 ^ (v1145 | v1148);
  v1152 = 431 * (((v1140 >> 20) & 0xF0 | (LODWORD(STACK[0x5C8]) >> 28)) ^ 0xEB) + 168952;
  v1153 = *(unsigned __int8 *)(v1012 + (v1152 - 957 * ((4487950 * (unint64_t)v1152) >> 32)));
  v1154 = 431 * (((((v1153 << 29) & 0x80000000) - ((v1153 ^ 8) << 28) - 1146701457) ^ v1151) >> 28) + 404709;
  v1155 = 431 * (HIBYTE(v1151) & 0xF ^ 0xB) + 404709;
  v1156 = 431 * ((v1151 >> 20) & 0xF ^ 1) + 404709;
  v1157 = 431 * ((unsigned __int16)(v1149 ^ v1146) >> 12) + 404709;
  v1158 = (((*(unsigned __int8 *)(v1012
                                + (431 * ((v1147 >> 8) & 0xF)
                                               + 404709
                                               - 957
                                               * ((4487950 * (unint64_t)(431 * ((v1147 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) | ((*(unsigned __int8 *)(v1012 + (431 * (HIWORD(v1150) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v1150) & 0xF) + 404709)) >> 32))) ^ ((*(unsigned __int8 *)(v1012 + (v1155 - 957 * ((4487950 * (unint64_t)v1155) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v1012 + (v1154 - 957 * ((4487950 * (unint64_t)v1154) >> 32))) ^ 8) << 12) ^ (16 * (*(unsigned __int8 *)(v1012 + (v1156 - 957 * ((4487950 * (unint64_t)v1156) >> 32))) ^ 0x78)) ^ 0x78) << 16)) ^ ((*(unsigned __int8 *)(v1012 + (v1157 - 957 * ((4487950 * (unint64_t)v1157) >> 32))) ^ 0x78) << 12);
  LODWORD(v962) = STACK[0x6C0];
  v1159 = (LODWORD(STACK[0x6C0]) ^ 0x34C9516F) + (v1107 ^ (v1139 - ((2 * v1139) & 0x49D5AE6A) - 1528113355)) + 1;
  LODWORD(STACK[0x670]) = v1159 + 1599387212 - ((2 * v1159) & 0xBEA96C98);
  LODWORD(STACK[0x6D0]) = v962 ^ (16
                                * (*(unsigned __int8 *)(v1012
                                                      + (431 * (v1148 >> 4)
                                                                     + 404709
                                                                     - 957
                                                                     * ((4487950
                                                                       * (unint64_t)(431
                                                                                          * (v1148 >> 4)
                                                                                          + 404709)) >> 32))) ^ 0x78)) ^ (v1158 | *(unsigned __int8 *)(v1012 + (431 * (v961 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v961 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78);
  return (*(uint64_t (**)(void))(STACK[0x6E8]
                              + 8
                              * ((1435
                                * (((LODWORD(STACK[0x680])
                                   + 462689445
                                   - ((2 * LODWORD(STACK[0x680]) + 2) & 0x3728294A)
                                   + 1) ^ 0x1B941480u) > 0x3F)) ^ LODWORD(STACK[0x6F8]))))();
}

