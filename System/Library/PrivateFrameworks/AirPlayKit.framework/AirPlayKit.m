id AVDataDestinationForAPKDataDestination(__CFString *a1)
{
  id v1;

  if (a1 == CFSTR("APKOutputDeviceCommunicationChannelDataDestinationFitness"))
    v1 = (id)*MEMORY[0x24BDB1F28];
  else
    v1 = 0;
  return v1;
}

void sub_22A624B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id APKRemoteInspectorConnected()
{
  return (id)*MEMORY[0x24BEC2788];
}

id APKRemoteInspectorDisconnected()
{
  return (id)*MEMORY[0x24BEC2790];
}

id APKOutputDeviceDiscoverySessionAvailableOutputDevicesDidChange()
{
  return (id)*MEMORY[0x24BDB1F38];
}

uint64_t SpriteSheetAnimable.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(type metadata accessor for SpriteSheetAnimation() - 8);
  v2 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - v5;
  v7 = *v0;
  if (*((_BYTE *)v0 + 8))
  {
    if (*((_BYTE *)v0 + 8) == 1)
    {
      sub_22A6A6264();
      result = sub_22A6A6264();
      v9 = *(_QWORD *)(v7 + 16);
      if (v9)
      {
        v10 = v7 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
        v11 = *(_QWORD *)(v1 + 72);
        do
        {
          sub_22A62603C(v10, (uint64_t)v4);
          SpriteSheetAnimation.hash(into:)();
          result = sub_22A626080((uint64_t)v4);
          v10 += v11;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      return sub_22A6A6264();
    }
  }
  else
  {
    sub_22A6A6264();
    result = sub_22A6A6264();
    v12 = *(_QWORD *)(v7 + 16);
    if (v12)
    {
      v13 = v7 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v14 = *(_QWORD *)(v1 + 72);
      do
      {
        sub_22A62603C(v13, (uint64_t)v6);
        SpriteSheetAnimation.hash(into:)();
        result = sub_22A626080((uint64_t)v6);
        v13 += v14;
        --v12;
      }
      while (v12);
    }
  }
  return result;
}

uint64_t SpriteSheetAnimable.hashValue.getter()
{
  sub_22A6A6258();
  SpriteSheetAnimable.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A625F98()
{
  sub_22A6A6258();
  SpriteSheetAnimable.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A625FEC()
{
  sub_22A6A6258();
  SpriteSheetAnimable.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A62603C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpriteSheetAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A626080(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SpriteSheetAnimation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A6260BC(uint64_t a1, uint64_t a2)
{
  return sub_22A6262DC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_22A6260C8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_22A6A5D6C();
  *a2 = 0;
  return result;
}

uint64_t sub_22A62613C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_22A6A5D78();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_22A6261B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_22A6A5D84();
  v2 = sub_22A6A5D60();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22A6261F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22A6A5D60();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22A62623C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A6A5D84();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22A626264()
{
  sub_22A626768(&qword_255AFEAB0, (uint64_t)&unk_22A6A72BC);
  sub_22A626768(&qword_255AFEAB8, (uint64_t)&unk_22A6A725C);
  return sub_22A6A6174();
}

uint64_t sub_22A6262D0(uint64_t a1, uint64_t a2)
{
  return sub_22A6262DC(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_22A6262DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22A6A5D84();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22A626318()
{
  sub_22A6A5D84();
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A626358()
{
  uint64_t v0;

  sub_22A6A5D84();
  sub_22A6A6258();
  sub_22A6A5DE4();
  v0 = sub_22A6A62A0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22A6263C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_22A6A5D84();
  v2 = v1;
  if (v0 == sub_22A6A5D84() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _s10AirPlayKit19SpriteSheetAnimableO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
    {
      if (v3 != 2 || v2 != 0)
        goto LABEL_11;
      swift_bridgeObjectRelease();
      v5 = 1;
LABEL_13:
      swift_bridgeObjectRelease();
      return v5 & 1;
    }
    if (v3 != 1)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRetain();
    v4 = swift_bridgeObjectRetain();
    v5 = sub_22A640374(v4, v2);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(_BYTE *)(a2 + 8))
    goto LABEL_6;
LABEL_11:
  v5 = 0;
  return v5 & 1;
}

unint64_t sub_22A6264F4()
{
  unint64_t result;

  result = qword_255AFEA10;
  if (!qword_255AFEA10)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for SpriteSheetAnimable, &type metadata for SpriteSheetAnimable);
    atomic_store(result, (unint64_t *)&qword_255AFEA10);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SpriteSheetAnimable(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SpriteSheetAnimable()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SpriteSheetAnimable(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for SpriteSheetAnimable(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpriteSheetAnimable(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SpriteSheetAnimable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A62668C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_22A6266A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SpriteSheetAnimable()
{
  return &type metadata for SpriteSheetAnimable;
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEA18);
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEA20);
}

void type metadata accessor for AirPlayOutputDeviceCommunicationChannelDataDestination(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEA28);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEA30);
}

uint64_t sub_22A626720()
{
  return sub_22A626768(&qword_255AFEA38, (uint64_t)&unk_22A6A7220);
}

uint64_t sub_22A626744()
{
  return sub_22A626768(&qword_255AFEA40, (uint64_t)&unk_22A6A71F4);
}

uint64_t sub_22A626768(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for AirPlayOutputDeviceCommunicationChannelDataDestination(255);
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A6267A8()
{
  return sub_22A626768(&qword_255AFEA48, (uint64_t)&unk_22A6A7290);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SpringParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SpringParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEB20);
}

uint64_t initializeBufferWithCopyOfBuffer for RenderAsset.ImageType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_22A626884(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_22A6268E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for CFRunLoopSourceContext(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEB28);
}

void type metadata accessor for CFRunLoopMode(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEB90);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_22A626984(a1, &qword_255AFEB98);
}

void sub_22A626984(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t Material.rawValue.getter(char a1)
{
  return *(_QWORD *)&aMediumlimedium[8 * a1];
}

uint64_t sub_22A6269F0(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = Material.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == Material.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22A626A78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s10AirPlayKit8MaterialO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_22A626AA4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = Material.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22A626ACC()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  Material.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A626B2C()
{
  char *v0;

  Material.rawValue.getter(*v0);
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A626B6C()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  Material.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t _s10AirPlayKit8MaterialO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_22A6A618C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_22A626C14()
{
  unint64_t result;

  result = qword_255AFEC00;
  if (!qword_255AFEC00)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Material, &type metadata for Material);
    atomic_store(result, (unint64_t *)&qword_255AFEC00);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Material(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Material(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22A626D40 + 4 * byte_22A6A73C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22A626D74 + 4 * asc_22A6A73C0[v4]))();
}

uint64_t sub_22A626D74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A626D7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A626D84);
  return result;
}

uint64_t sub_22A626D90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A626D98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22A626D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A626DA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A626DB0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_22A626DB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Material()
{
  return &type metadata for Material;
}

uint64_t sub_22A626DD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t i;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  float v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  uint64_t *v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106[2];
  uint64_t v107[3];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110[3];
  __int128 v111;
  uint64_t v112[5];
  uint64_t v113[5];
  uint64_t v114[5];
  uint64_t v115[6];

  v6 = sub_22A6A6000();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v98 - v9;
  v11 = *((_QWORD *)a3 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  v14 = (*(uint64_t (**)(char *, uint64_t, int *))(v11 + 48))(v10, 1, a3);
  v102 = a2;
  if (v14 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v111 = xmmword_22A6A74C0;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
    v112[3] = v15;
    v112[4] = sub_22A628928((unint64_t *)&unk_255B010A0, &qword_255AFEC08);
    v100 = v112;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v112);
    v17 = sub_22A6A5C40();
    v18 = *(char **)(*(_QWORD *)(v17 - 8) + 16);
    v98 = v17;
    v99 = v18;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v18)(boxed_opaque_existential_1, a2, v17);
    v19 = a2;
    v20 = v101 + a3[16];
    v21 = *(_BYTE *)(v20 + 16);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v15 + 36)) = 5;
    v22 = (char *)boxed_opaque_existential_1 + *(int *)(v15 + 40);
    *(_OWORD *)v22 = *(_OWORD *)v20;
    v22[16] = v21;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC10);
    v113[3] = v23;
    v113[4] = sub_22A628928((unint64_t *)&unk_255B010B0, &qword_255AFEC10);
    v24 = __swift_allocate_boxed_opaque_existential_1(v113);
    v25 = a2;
    v26 = v99;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v99)(v24, v25, v17);
    v27 = v101;
    v28 = *(_BYTE *)(v101 + a3[10]);
    *((_BYTE *)v24 + *(int *)(v23 + 36)) = 6;
    *((_BYTE *)v24 + *(int *)(v23 + 40)) = v28;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
    v114[3] = v29;
    v114[4] = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
    v30 = __swift_allocate_boxed_opaque_existential_1(v114);
    v31 = v19;
    v32 = v98;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v26)(v30, v31, v98);
    v33 = *(_DWORD *)(v27 + a3[17]);
    *((_BYTE *)v30 + *(int *)(v29 + 36)) = 7;
    *(_DWORD *)((char *)v30 + *(int *)(v29 + 40)) = v33;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC20);
    v115[3] = v34;
    v115[4] = sub_22A628928((unint64_t *)&unk_255B010D0, &qword_255AFEC20);
    v35 = __swift_allocate_boxed_opaque_existential_1(v115);
    ((void (*)(uint64_t *, uint64_t, uint64_t))v26)(v35, v102, v32);
    v36 = a3[18];
    *((_BYTE *)v35 + *(int *)(v34 + 36)) = 9;
    *(_OWORD *)((char *)v35 + *(int *)(v34 + 40)) = *(_OWORD *)(v27 + v36);
    v110[0] = MEMORY[0x24BEE4AF8];
    for (i = 4; i != 24; i += 5)
    {
      sub_22A628968((uint64_t)&v110[i + 1], (uint64_t)v107);
      sub_22A6289B0((uint64_t)v107, (uint64_t)&v103);
      if (v104)
      {
        sub_22A628A38(&v103, (uint64_t)v106);
        sub_22A628A38(v106, (uint64_t)&v103);
        v38 = (_QWORD *)v110[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v38 = sub_22A62F0EC(0, v38[2] + 1, 1, v38);
          v110[0] = (uint64_t)v38;
        }
        v40 = v38[2];
        v39 = v38[3];
        if (v40 >= v39 >> 1)
          v110[0] = (uint64_t)sub_22A62F0EC((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
        v41 = v104;
        v42 = v105;
        v43 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v103, v104);
        MEMORY[0x24BDAC7A8](v43);
        v45 = (char *)&v98 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v46 + 16))(v45);
        sub_22A69874C(v40, (uint64_t)v45, v110, v41, v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
      }
      else
      {
        sub_22A6289F8((uint64_t)&v103);
      }
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayDestroy();
    return v110[0];
  }
  else
  {
    (*(void (**)(char *, char *, int *))(v11 + 32))(v13, v10, a3);
    v47 = a3[16];
    v48 = &v13[v47];
    v49 = *(_QWORD *)&v13[v47];
    v50 = *(_QWORD *)&v13[v47 + 8];
    v51 = v101;
    v52 = v101 + v47;
    v54 = *(_QWORD *)v52;
    v53 = *(_QWORD *)(v52 + 8);
    v55 = *(_BYTE *)(v52 + 16);
    v56 = _s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(v49, v50, v48[16], *(_QWORD *)v52, v53, v55);
    v57 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v99 = v13;
    v100 = (uint64_t *)a3;
    v98 = v11;
    if ((v56 & 1) == 0)
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
      v108 = v58;
      v109 = sub_22A628928((unint64_t *)&unk_255B010A0, &qword_255AFEC08);
      v59 = __swift_allocate_boxed_opaque_existential_1(v107);
      v60 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v59, v102, v60);
      *((_BYTE *)v59 + *(int *)(v58 + 36)) = 5;
      v61 = (char *)v59 + *(int *)(v58 + 40);
      *(_QWORD *)v61 = v54;
      *((_QWORD *)v61 + 1) = v53;
      v61[16] = v55;
      v57 = sub_22A62F20C(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v63 = v57[2];
      v62 = v57[3];
      if (v63 >= v62 >> 1)
        v57 = sub_22A62F20C((_QWORD *)(v62 > 1), v63 + 1, 1, v57);
      v57[2] = v63 + 1;
      sub_22A6289B0((uint64_t)v107, (uint64_t)&v57[5 * v63 + 4]);
      v13 = v99;
      a3 = (int *)v100;
    }
    v64 = a3[10];
    v65 = *(_BYTE *)(v51 + v64);
    sub_22A640C10(v13[v64]);
    if ((v66 & 1) == 0)
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC10);
      v108 = v67;
      v109 = sub_22A628928((unint64_t *)&unk_255B010B0, &qword_255AFEC10);
      v68 = __swift_allocate_boxed_opaque_existential_1(v107);
      v69 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v68, v102, v69);
      *((_BYTE *)v68 + *(int *)(v67 + 36)) = 6;
      *((_BYTE *)v68 + *(int *)(v67 + 40)) = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_22A62F20C(0, v57[2] + 1, 1, v57);
      v71 = v57[2];
      v70 = v57[3];
      if (v71 >= v70 >> 1)
        v57 = sub_22A62F20C((_QWORD *)(v70 > 1), v71 + 1, 1, v57);
      v57[2] = v71 + 1;
      sub_22A6289B0((uint64_t)v107, (uint64_t)&v57[5 * v71 + 4]);
      v13 = v99;
      a3 = (int *)v100;
    }
    v72 = a3[17];
    v73 = *(float *)(v51 + v72);
    if (*(float *)&v13[v72] != v73)
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
      v108 = v74;
      v109 = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
      v75 = __swift_allocate_boxed_opaque_existential_1(v107);
      v76 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v75, v102, v76);
      *((_BYTE *)v75 + *(int *)(v74 + 36)) = 7;
      *(float *)((char *)v75 + *(int *)(v74 + 40)) = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_22A62F20C(0, v57[2] + 1, 1, v57);
      v78 = v57[2];
      v77 = v57[3];
      if (v78 >= v77 >> 1)
        v57 = sub_22A62F20C((_QWORD *)(v77 > 1), v78 + 1, 1, v57);
      v57[2] = v78 + 1;
      sub_22A6289B0((uint64_t)v107, (uint64_t)&v57[5 * v78 + 4]);
      v13 = v99;
      a3 = (int *)v100;
    }
    v79 = a3[18];
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)&v13[v79], *(float32x4_t *)(v51 + v79))), 0xFuLL))) & 1) == 0)
    {
      v101 = *(_OWORD *)(v51 + v79);
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC20);
      v108 = v80;
      v109 = sub_22A628928((unint64_t *)&unk_255B010D0, &qword_255AFEC20);
      v81 = __swift_allocate_boxed_opaque_existential_1(v107);
      v82 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v81, v102, v82);
      *((_BYTE *)v81 + *(int *)(v80 + 36)) = 9;
      *(_OWORD *)((char *)v81 + *(int *)(v80 + 40)) = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_22A62F20C(0, v57[2] + 1, 1, v57);
      v84 = v57[2];
      v83 = v57[3];
      if (v84 >= v83 >> 1)
        v57 = sub_22A62F20C((_QWORD *)(v83 > 1), v84 + 1, 1, v57);
      v57[2] = v84 + 1;
      sub_22A6289B0((uint64_t)v107, (uint64_t)&v57[5 * v84 + 4]);
    }
    v110[0] = MEMORY[0x24BEE4AF8];
    v85 = v57[2];
    if (v85)
    {
      v86 = (uint64_t)(v57 + 4);
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628968(v86, (uint64_t)v107);
        sub_22A6289B0((uint64_t)v107, (uint64_t)&v103);
        if (v104)
        {
          sub_22A628A38(&v103, (uint64_t)v106);
          sub_22A628A38(v106, (uint64_t)&v103);
          v87 = (_QWORD *)v110[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v87 = sub_22A62F0EC(0, v87[2] + 1, 1, v87);
            v110[0] = (uint64_t)v87;
          }
          v89 = v87[2];
          v88 = v87[3];
          if (v89 >= v88 >> 1)
            v110[0] = (uint64_t)sub_22A62F0EC((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
          v90 = v104;
          v91 = v105;
          v92 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v103, v104);
          MEMORY[0x24BDAC7A8](v92);
          v94 = (char *)&v98 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v95 + 16))(v94);
          sub_22A69874C(v89, (uint64_t)v94, v110, v90, v91);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
        }
        else
        {
          sub_22A6289F8((uint64_t)&v103);
        }
        v86 += 40;
        --v85;
      }
      while (v85);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v96 = v110[0];
    (*(void (**)(char *, uint64_t *))(v98 + 8))(v99, v100);
  }
  return v96;
}

_QWORD *sub_22A6277D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  char *v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unsigned __int8 v66;
  int *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  char *v73;
  int *v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  uint64_t v81;
  char *v82;
  char *v83;
  _QWORD *v84;
  _QWORD *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t (*v94)(char *, uint64_t, int *);
  uint64_t v95;
  _QWORD *v96;

  v95 = a2;
  v6 = sub_22A6A6000();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v85 = (uint64_t *)((char *)&v81 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v83 = (char *)&v81 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)&v81 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v81 - v16;
  v18 = a3[11];
  v89 = v3;
  v19 = v3 + v18;
  v20 = *(_QWORD *)(v19 + 8);
  v87 = *(_QWORD **)v19;
  v21 = *(unsigned int *)(v19 + 16) | ((unint64_t)*(unsigned __int8 *)(v19 + 20) << 32);
  v22 = *(unsigned __int8 *)(v19 + 21);
  v93 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v93((char *)&v81 - v16, a1, v6);
  v23 = *((_QWORD *)a3 - 1);
  v94 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v24 = v94(v17, 1, a3);
  v90 = a1;
  v91 = v7;
  v92 = v6;
  v88 = v23;
  if (v24 == 1)
  {
    sub_22A628ADC((uint64_t)v87, v20, v21, v22);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    v25 = 0;
    v26 = 0;
    v27 = 0xFF0000000000;
  }
  else
  {
    v28 = &v17[a3[11]];
    v25 = *(_QWORD *)v28;
    v26 = *((_QWORD *)v28 + 1);
    v29 = *((unsigned int *)v28 + 4) | ((unint64_t)v28[20] << 32);
    v30 = v28[21];
    sub_22A628ADC((uint64_t)v87, v20, v21, v22);
    sub_22A628ADC(v25, v26, v29, v30);
    (*(void (**)(char *, int *))(v23 + 8))(v17, a3);
    v27 = v29 | (v30 << 40);
    a1 = v90;
    v6 = v92;
  }
  v31 = v87;
  v84 = sub_22A68E4CC(v25, v26, v27 & 0xFFFFFFFFFFFFLL, v95, 0, (uint64_t)v87, v20, v21 & 0xFFFFFFFFFFLL | (v22 << 40));
  sub_22A628AF4(v25, v26, v27);
  sub_22A628B08((uint64_t)v31, v20, v21, v22);
  v32 = v89;
  v33 = v89 + a3[12];
  v34 = *(_QWORD *)v33;
  v35 = *(unsigned int *)(v33 + 8) | ((unint64_t)*(unsigned __int8 *)(v33 + 12) << 32);
  v36 = *(unsigned __int8 *)(v33 + 13);
  v37 = v82;
  v38 = v93;
  v93(v82, a1, v6);
  if (v94(v37, 1, a3) == 1)
  {
    sub_22A628B20(v34, v35, v36);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v6);
    v39 = 0;
    v40 = 0xFF0000000000;
  }
  else
  {
    v41 = &v37[a3[12]];
    v42 = v32;
    v43 = v37;
    v39 = *(_QWORD *)v41;
    v44 = *((unsigned int *)v41 + 2) | ((unint64_t)v41[12] << 32);
    v45 = v41[13];
    sub_22A628B20(v34, v35, v36);
    sub_22A628B20(v39, v44, v45);
    v46 = v43;
    v32 = v42;
    v38 = v93;
    (*(void (**)(char *, int *))(v88 + 8))(v46, a3);
    v40 = v44 | (v45 << 40);
    a1 = v90;
  }
  v87 = sub_22A68E8B0(v39, v40 & 0xFFFFFFFFFFFFLL, v95, 1, v34, v35 & 0xFFFFFFFFFFLL | (v36 << 40));
  sub_22A628B38(v39, v40);
  sub_22A628B4C(v34, v35, v36);
  v47 = v32 + a3[13];
  v48 = *(_QWORD *)v47;
  v49 = *(_BYTE *)(v47 + 8);
  v50 = v83;
  v38(v83, a1, v6);
  if (v94(v50, 1, a3) == 1)
  {
    sub_22A628B64(v48, v49);
    v51 = 0;
    v52 = -1;
    v53 = v91;
    v54 = v6;
  }
  else
  {
    v55 = &v50[a3[13]];
    v51 = *(_QWORD *)v55;
    v52 = v55[8];
    sub_22A628B64(v48, v49);
    sub_22A628B64(v51, v52);
    v53 = v88;
    v54 = (uint64_t)a3;
  }
  (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v54);
  v83 = (char *)sub_22A68EC68(v51, v52, v95, 3, v48, v49);
  sub_22A628B7C(v51, v52);
  sub_22A628B90(v48, v49);
  v56 = v32 + a3[14];
  v57 = *(_QWORD *)v56;
  v58 = *(_QWORD *)(v56 + 8);
  v59 = *(_QWORD *)(v56 + 16);
  v60 = *(_BYTE *)(v56 + 24);
  v61 = v85;
  v38((char *)v85, a1, v6);
  if (v94((char *)v61, 1, a3) == 1)
  {
    sub_22A628ADC(v57, v58, v59, v60);
    v62 = 0;
    v63 = 0;
    v64 = v61;
    v65 = 0;
    v66 = -1;
    v68 = v91;
    v67 = (int *)v92;
  }
  else
  {
    v69 = (char *)v61 + a3[14];
    v62 = *(_QWORD *)v69;
    v63 = *((_QWORD *)v69 + 1);
    v64 = v61;
    v65 = *((_QWORD *)v69 + 2);
    v66 = v69[24];
    sub_22A628ADC(v57, v58, v59, v60);
    sub_22A628ADC(v62, v63, v65, v66);
    v68 = v88;
    v67 = a3;
  }
  (*(void (**)(_QWORD *, int *))(v68 + 8))(v64, v67);
  v85 = sub_22A68F098(v62, v63, v65, v66, v95, 2, v57, v58, v59, v60);
  sub_22A628BA8(v62, v63, v65, v66);
  sub_22A628B08(v57, v58, v59, v60);
  v70 = v89 + a3[15];
  v71 = *(_QWORD *)v70;
  v72 = *(_BYTE *)(v70 + 8);
  v73 = v86;
  v74 = (int *)v92;
  v93(v86, v90, v92);
  if (v94(v73, 1, a3) == 1)
  {
    sub_22A628B64(v71, v72);
    v75 = 0;
    v76 = -1;
    v77 = v91;
    a3 = v74;
  }
  else
  {
    v78 = &v73[a3[15]];
    v75 = *(_QWORD *)v78;
    v76 = v78[8];
    sub_22A628B64(v71, v72);
    sub_22A628B64(v75, v76);
    v77 = v88;
  }
  (*(void (**)(char *, int *))(v77 + 8))(v73, a3);
  v79 = sub_22A68F4D0(v75, v76, v95, 8, v71, v72);
  sub_22A628B7C(v75, v76);
  sub_22A628B90(v71, v72);
  v96 = v84;
  sub_22A693AF0((uint64_t)v87);
  sub_22A693AF0((uint64_t)v83);
  sub_22A693AF0((uint64_t)v85);
  sub_22A693AF0((uint64_t)v79);
  return v96;
}

uint64_t sub_22A627E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  void (*v32)(char *, uint64_t);
  int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  int *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112[2];
  _QWORD v113[5];
  _QWORD *v114;

  v5 = v4;
  v101 = a4;
  v105 = a2;
  v108 = (char *)a1;
  v7 = *(_QWORD *)(a3 + 16);
  v99 = sub_22A6A6000();
  v98 = *(_QWORD *)(v99 - 8);
  v8 = MEMORY[0x24BDAC7A8](v99);
  v97 = (char *)&v91 - v9;
  v102 = v7;
  v100 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v106 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v92 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22A6A6000();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v93 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v18 = (char *)&v91 - v17;
  v19 = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v91 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v91 - v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v104 = v5;
  v27((char *)&v91 - v25, v5, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, a3);
  v94 = TupleTypeMetadata2;
  v28 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
  v29 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v29(v18, v26, v14);
  v29(v28, v108, v14);
  v103 = v12;
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v31 = v30(v18, 1, a3);
  v96 = v29;
  if (v31 == 1)
  {
    v32 = *(void (**)(char *, uint64_t))(v19 + 8);
    v32(v26, v14);
    v33 = (int *)a3;
    if (v30(v28, 1, a3) == 1)
    {
      v32(v18, v14);
      return MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }
  v29(v24, v18, v14);
  if (v30(v28, 1, a3) == 1)
  {
    v32 = *(void (**)(char *, uint64_t))(v19 + 8);
    v32(v26, v14);
    v34 = v24;
    v33 = (int *)a3;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v34, a3);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v93 + 8))(v18, v94);
    v35 = v105;
    v36 = v102;
    v37 = v100;
    goto LABEL_7;
  }
  v47 = (uint64_t)v92;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v92, v28, a3);
  LODWORD(v94) = static RenderNode.== infix(_:_:)((uint64_t)v24, v47, v102, *(_QWORD *)(v101 + 16));
  v48 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v48(v47, a3);
  v32 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32(v26, v14);
  v49 = v24;
  v33 = (int *)a3;
  v50 = a3;
  v36 = v102;
  v48((uint64_t)v49, v50);
  v32(v18, v14);
  v35 = v105;
  v37 = v100;
  if ((v94 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v38(v106, v104 + v33[9], v36);
  v39 = v95;
  v96(v95, v108, v14);
  if (v30(v39, 1, (uint64_t)v33) == 1)
  {
    v32(v39, v14);
    v40 = 1;
    v41 = v33;
    v42 = v97;
  }
  else
  {
    v42 = v97;
    v38(v97, (uint64_t)&v39[v33[9]], v36);
    (*(void (**)(char *, int *))(v103 + 8))(v39, v33);
    v40 = 0;
    v41 = v33;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, v40, 1, v36);
  v43 = v106;
  v44 = v107;
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 + 8) + 8))(v42, v35, v36);
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v42, v99);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v43, v36);
  }
  else
  {
    v51 = v45;
    v107 = 0;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v42, v99);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v36);
    v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      v53 = v51 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628A98(v53, (uint64_t)v113);
        sub_22A628A98((uint64_t)v113, (uint64_t)&v109);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
        if (v110)
        {
          sub_22A628A38(&v109, (uint64_t)v112);
          sub_22A628A38(v112, (uint64_t)&v109);
          v54 = v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v54 = sub_22A62F0EC(0, v54[2] + 1, 1, v54);
            v114 = v54;
          }
          v56 = v54[2];
          v55 = v54[3];
          if (v56 >= v55 >> 1)
            v114 = sub_22A62F0EC((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
          v57 = v110;
          v58 = v111;
          v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v109, v110);
          MEMORY[0x24BDAC7A8](v59);
          v61 = (char *)&v91 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v62 + 16))(v61);
          sub_22A69874C(v56, (uint64_t)v61, (uint64_t *)&v114, v57, v58);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
        }
        else
        {
          sub_22A6289F8((uint64_t)&v109);
        }
        v53 += 40;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease_n();
      v63 = (char *)v114;
    }
    else
    {
      swift_bridgeObjectRelease();
      v63 = (char *)MEMORY[0x24BEE4AF8];
    }
    v106 = v63;
    v64 = sub_22A6277D4((uint64_t)v108, v105, v41);
    v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v65 = v64[2];
    if (v65)
    {
      v66 = (uint64_t)(v64 + 4);
      do
      {
        sub_22A628A98(v66, (uint64_t)v113);
        sub_22A628A98((uint64_t)v113, (uint64_t)&v109);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
        if (v110)
        {
          sub_22A628A38(&v109, (uint64_t)v112);
          sub_22A628A38(v112, (uint64_t)&v109);
          v67 = v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v67 = sub_22A62F0EC(0, v67[2] + 1, 1, v67);
            v114 = v67;
          }
          v69 = v67[2];
          v68 = v67[3];
          if (v69 >= v68 >> 1)
            v114 = sub_22A62F0EC((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
          v70 = v110;
          v71 = v111;
          v72 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v109, v110);
          MEMORY[0x24BDAC7A8](v72);
          v74 = (char *)&v91 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v75 + 16))(v74);
          sub_22A69874C(v69, (uint64_t)v74, (uint64_t *)&v114, v70, v71);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
        }
        else
        {
          sub_22A6289F8((uint64_t)&v109);
        }
        v66 += 40;
        --v65;
      }
      while (v65);
      swift_bridgeObjectRelease();
      v76 = (char *)v114;
    }
    else
    {
      swift_bridgeObjectRelease();
      v76 = (char *)MEMORY[0x24BEE4AF8];
    }
    v77 = v107;
    v78 = sub_22A626DD0((uint64_t)v108, v105, v41);
    if (v77)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v108 = v76;
      v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v79 = *(_QWORD *)(v78 + 16);
      if (v79)
      {
        v80 = v78 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v80, (uint64_t)v113);
          sub_22A628A98((uint64_t)v113, (uint64_t)&v109);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
          if (v110)
          {
            sub_22A628A38(&v109, (uint64_t)v112);
            sub_22A628A38(v112, (uint64_t)&v109);
            v81 = v114;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v81 = sub_22A62F0EC(0, v81[2] + 1, 1, v81);
              v114 = v81;
            }
            v83 = v81[2];
            v82 = v81[3];
            if (v83 >= v82 >> 1)
              v114 = sub_22A62F0EC((_QWORD *)(v82 > 1), v83 + 1, 1, v81);
            v84 = v110;
            v85 = v111;
            v86 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v109, v110);
            MEMORY[0x24BDAC7A8](v86);
            v88 = (char *)&v91 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v89 + 16))(v88);
            sub_22A69874C(v83, (uint64_t)v88, (uint64_t *)&v114, v84, v85);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
          }
          else
          {
            sub_22A6289F8((uint64_t)&v109);
          }
          v80 += 40;
          --v79;
        }
        while (v79);
        swift_bridgeObjectRelease_n();
        v90 = (uint64_t)v114;
      }
      else
      {
        swift_bridgeObjectRelease();
        v90 = MEMORY[0x24BEE4AF8];
      }
      v113[0] = v106;
      sub_22A693AF0(v90);
      sub_22A693AF0((uint64_t)v108);
      return v113[0];
    }
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2DF314]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2DF320](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_22A628928(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2DF32C](&unk_22A6A9F78, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A628968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6289B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6289F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A628A38(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22A628A98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22A628ADC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22A628AF4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE5(a3) != 255)
    return sub_22A628B08(result, a2, a3, BYTE5(a3));
  return result;
}

uint64_t sub_22A628B08(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A628B20(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22A628B38(uint64_t result, uint64_t a2)
{
  if (BYTE5(a2) != 255)
    return sub_22A628B4C(result, a2, BYTE5(a2));
  return result;
}

uint64_t sub_22A628B4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A628B64(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22A628B7C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_22A628B90(a1, a2);
  return a1;
}

uint64_t sub_22A628B90(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A628BA8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    return sub_22A628B08(a1, a2, a3, a4);
  return a1;
}

float Insets.left.getter(double a1, float a2)
{
  return a2;
}

float Insets.bottom.getter(double a1, double a2, float a3)
{
  return a3;
}

float Insets.right.getter(double a1, double a2, double a3, float a4)
{
  return a4;
}

float static Insets.zero.getter()
{
  return 0.0;
}

uint64_t Insets.hash(into:)()
{
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

BOOL static Insets.== infix(_:_:)(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8)
{
  _BOOL4 v8;

  v8 = a1 == a5;
  if (a2 != a6)
    v8 = 0;
  if (a3 != a7)
    v8 = 0;
  return a4 == a8 && v8;
}

uint64_t Insets.hashValue.getter()
{
  sub_22A6A6258();
  Insets.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A628CF8()
{
  sub_22A6A6258();
  Insets.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A628D5C()
{
  return Insets.hash(into:)();
}

uint64_t sub_22A628D68()
{
  sub_22A6A6258();
  Insets.hash(into:)();
  return sub_22A6A62A0();
}

unint64_t sub_22A628DCC()
{
  unint64_t result;

  result = qword_255AFEC28;
  if (!qword_255AFEC28)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Insets, &type metadata for Insets);
    atomic_store(result, (unint64_t *)&qword_255AFEC28);
  }
  return result;
}

BOOL _s10AirPlayKit16SpringParametersV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

unint64_t sub_22A628E4C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A628E70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A628E70()
{
  unint64_t result;

  result = qword_255AFEC30;
  if (!qword_255AFEC30)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Insets, &type metadata for Insets);
    atomic_store(result, (unint64_t *)&qword_255AFEC30);
  }
  return result;
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Insets()
{
  return &type metadata for Insets;
}

unint64_t sub_22A628ED4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255AFEC38;
  if (!qword_255AFEC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255AFEC40);
    v2 = MEMORY[0x24BEE23D8];
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE04C8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255AFEC38);
  }
  return result;
}

unint64_t sub_22A628F30()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7580;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_22A6A6084();
  strcpy((char *)(inited + 88), "controlPoint1");
  *(_WORD *)(inited + 102) = -4864;
  v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_22A6A7590;
  *(_QWORD *)(v1 + 32) = 120;
  *(_QWORD *)(v1 + 40) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(v1 + 88) = 121;
  *(_QWORD *)(v1 + 96) = 0xE100000000000000;
  sub_22A6A6084();
  sub_22A630814(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00CB0);
  sub_22A629258();
  sub_22A6A6084();
  strcpy((char *)(inited + 144), "controlPoint2");
  *(_WORD *)(inited + 158) = -4864;
  v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_22A6A7590;
  *(_QWORD *)(v2 + 32) = 120;
  *(_QWORD *)(v2 + 40) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(v2 + 88) = 121;
  *(_QWORD *)(v2 + 96) = 0xE100000000000000;
  sub_22A6A6084();
  sub_22A630814(v2);
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A629164@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A628F30();
  *a1 = result;
  return result;
}

unint64_t sub_22A629188(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6291AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6291AC()
{
  unint64_t result;

  result = qword_255AFEC70;
  if (!qword_255AFEC70)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for CubicParameters, &type metadata for CubicParameters);
    atomic_store(result, (unint64_t *)&qword_255AFEC70);
  }
  return result;
}

unint64_t sub_22A6291F0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A629214();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A629214()
{
  unint64_t result;

  result = qword_255AFEC78;
  if (!qword_255AFEC78)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for CubicParameters, &type metadata for CubicParameters);
    atomic_store(result, (unint64_t *)&qword_255AFEC78);
  }
  return result;
}

unint64_t sub_22A629258()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255AFEC88;
  if (!qword_255AFEC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B00CB0);
    v2 = sub_22A628ED4();
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255AFEC88);
  }
  return result;
}

AirPlayKit::CubicParameters __swiftcall CubicParameters.init(controlPoint1:controlPoint2:)(AirPlayKit::Anchor controlPoint1, AirPlayKit::Anchor controlPoint2)
{
  Swift::Float *v2;
  AirPlayKit::CubicParameters result;

  *v2 = controlPoint1.x;
  v2[1] = controlPoint1.y;
  v2[2] = controlPoint2.x;
  v2[3] = controlPoint2.y;
  result.controlPoint2.y = controlPoint2.y;
  result.controlPoint2.x = controlPoint2.x;
  result.controlPoint1.y = controlPoint1.y;
  result.controlPoint1.x = controlPoint1.x;
  return result;
}

uint64_t CubicParameters.hash(into:)()
{
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t CubicParameters.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A62A0();
}

uint64_t sub_22A6293C4()
{
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A62942C()
{
  sub_22A6A6258();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A62A0();
}

BOOL _s10AirPlayKit15CubicParametersV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[3] == a2[3])
    return a1[2] == a2[2];
  return 0;
}

unint64_t sub_22A6294F4()
{
  unint64_t result;

  result = qword_255AFEC90;
  if (!qword_255AFEC90)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for CubicParameters, &type metadata for CubicParameters);
    atomic_store(result, (unint64_t *)&qword_255AFEC90);
  }
  return result;
}

ValueMetadata *type metadata accessor for CubicParameters()
{
  return &type metadata for CubicParameters;
}

void ContainerContent.Child.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v5);
  sub_22A6297D8(v0, (uint64_t)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (char *)sub_22A6296B4 + 4 * byte_22A6A7658[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6296B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22A62981C(v2, v1, &qword_255AFEEE0);
  v3 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  return sub_22A629860(v1, &qword_255AFEEE0);
}

uint64_t sub_22A6297D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerContent.Child();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A62981C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22A629860(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_22A6298A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFEC98;
  if (!qword_255AFEC98)
  {
    v1 = sub_22A6A5C40();
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_255AFEC98);
  }
  return result;
}

uint64_t sub_22A6298EC(uint64_t a1)
{
  return sub_22A629970(a1, qword_255B08F00);
}

uint64_t sub_22A629908(uint64_t a1)
{
  return sub_22A629970(a1, qword_255B08F18);
}

uint64_t sub_22A62992C(uint64_t a1)
{
  return sub_22A629970(a1, qword_255B08F30);
}

uint64_t sub_22A62994C(uint64_t a1)
{
  return sub_22A629970(a1, qword_255B08F48);
}

uint64_t sub_22A629970(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_22A6A5CAC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_22A6A5D84();
  return sub_22A6A5CA0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_22A629A38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  _opaque_pthread_t *v35;
  uint64_t v36[2];

  v6 = a2;
  v7 = a1;
  v36[0] = a1;
  v36[1] = a2;
  sub_22A629DCC();
  v8 = sub_22A6A6030();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 16 * v9;
    v7 = *(_QWORD *)(v10 + 16);
    v6 = *(_QWORD *)(v10 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_22A66F5B8(46, 0xE100000000000000, v7, v6);
  v11 = sub_22A6A5E2C();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x22E2DE834](v11, v13, v15, v17);
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_22A66F5B8(40, 0xE100000000000000, a3, a4);
  swift_bridgeObjectRetain();
  v21 = sub_22A6A5E2C();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = MEMORY[0x22E2DE834](v21, v23, v25, v27);
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_22A6A5C94();
  v32 = sub_22A6A5F70();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)v33 = 67109634;
    v35 = pthread_self();
    pthread_mach_thread_np(v35);
    sub_22A6A6018();
    *(_WORD *)(v33 + 8) = 2082;
    swift_bridgeObjectRetain();
    sub_22A62D174(v18, v20, v36);
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 18) = 2082;
    swift_bridgeObjectRetain();
    sub_22A62D174(v28, v30, v36);
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22A61E000, v31, v32, "[%u] %{public}s::%{public}s", (uint8_t *)v33, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v34, -1, -1);
    MEMORY[0x22E2DF3F8](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

}

unint64_t sub_22A629DCC()
{
  unint64_t result;

  result = qword_255AFECA0;
  if (!qword_255AFECA0)
  {
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255AFECA0);
  }
  return result;
}

uint64_t AirPlayOverlayCoordinator.displayTreeBuilder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22A628A98(v1 + 16, a1);
}

uint64_t sub_22A629E2C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(_QWORD *)(v3 + 64);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22A62E58C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22A62A1BC(v4);
}

uint64_t sub_22A629EB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22A62E55C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 64) = v5;
  sub_22A62A1BC(v3);
  return sub_22A62EA00(v8);
}

uint64_t AirPlayOverlayCoordinator.onConnectionError.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t AirPlayOverlayCoordinator.onConnectionError.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*AirPlayOverlayCoordinator.onConnectionError.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22A62A03C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v3 + 80);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22A62E554;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22A62A1BC(v4);
}

uint64_t sub_22A62A0C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22A62E554;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 72) = v6;
  *(_QWORD *)(v7 + 80) = v5;
  sub_22A62A1BC(v3);
  return sub_22A62EA00(v8);
}

uint64_t AirPlayOverlayCoordinator.onReady.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 72);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t sub_22A62A1BC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t AirPlayOverlayCoordinator.onReady.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*AirPlayOverlayCoordinator.onReady.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t AirPlayOverlayCoordinator.__allocating_init(displayTreeBuilder:connectionProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSString *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];
  _BYTE v25[40];

  v23 = a2;
  v22 = a1;
  v2 = sub_22A6A5CD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22A6A5B8C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v13 = NSTemporaryDirectory();
  sub_22A6A5D84();

  sub_22A6A5B50();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_22A62A454();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5498], v2);
  v14 = (void *)sub_22A6A5F94();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for RenderActionsFileLogger();
  swift_allocObject();
  v15 = sub_22A68CB6C((uint64_t)v10, v14);

  v16 = v22;
  sub_22A628A98(v22, (uint64_t)v25);
  v17 = v23;
  sub_22A628A98(v23, (uint64_t)v24);
  v18 = swift_allocObject();
  v19 = sub_22A62DA5C((uint64_t)v25, (uint64_t)v24, v15, v18);
  __swift_destroy_boxed_opaque_existential_1(v17);
  __swift_destroy_boxed_opaque_existential_1(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v19;
}

unint64_t sub_22A62A454()
{
  unint64_t result;

  result = qword_255AFECB0;
  if (!qword_255AFECB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255AFECB0);
  }
  return result;
}

uint64_t AirPlayOverlayCoordinator.__allocating_init(displayTreeBuilder:connectionProvider:actionsLogger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  v10 = sub_22A62E110(a1, a2, v9, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

uint64_t AirPlayOverlayCoordinator.init(displayTreeBuilder:connectionProvider:actionsLogger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_22A62DDB0(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

uint64_t sub_22A62A5BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_22A62A5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_22A665F94(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = sub_22A66D79C(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22A62A664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  int v4;
  int v5;
  char v6;
  char v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_22A6A60FC();
    v3 = sub_22A62D7B4(v1);
    v5 = v4;
    v7 = v6 & 1;
    result = objc_opt_self();
    v15 = (id)result;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) == 0)
        goto LABEL_12;
      if (*(_DWORD *)(v1 + 36) != v5)
        goto LABEL_13;
      v17 = *(_QWORD *)(v16 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
      v9 = (void *)sub_22A6A5D60();
      v10 = (void *)sub_22A6A5D60();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v15, sel_resourceWithURL_type_MIMEType_, v9, 2, v10);

      swift_bridgeObjectRelease();
      swift_release();
      sub_22A6A60E4();
      sub_22A6A6108();
      sub_22A6A6114();
      sub_22A6A60F0();
      result = sub_22A62D854(v3, v5, v7 & 1, v17);
      v3 = result;
      v5 = v12;
      v7 = v13 & 1;
      if (!--v2)
      {
        v0 = v16;
        sub_22A62EB40(result, v12, v13 & 1);
        v14 = v18;
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
  return result;
}

uint64_t sub_22A62A8B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v2[10] = a1;
  v2[11] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[12] = v5;
  *v5 = v2;
  v5[1] = sub_22A62A924;
  return sub_22A66621C((uint64_t)(v2 + 2), a1, a2);
}

uint64_t sub_22A62A924()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A62A978()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  int *v3;
  _QWORD *v4;
  _BYTE *v6;
  int *v7;

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 16);
  v1 = *(_OWORD *)(v0 + 24);
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 112) = v1;
  *(_OWORD *)(v0 + 128) = v2;
  v3 = *(int **)(v0 + 64);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 152) = v3;
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 72);
  if ((_QWORD)v1)
  {
    v7 = (int *)((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v4;
    *v4 = v0;
    v4[1] = sub_22A62AA50;
    return ((uint64_t (*)(_QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  else
  {
    sub_22A62EACC();
    swift_allocError();
    *v6 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A62AA50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 176) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 184) = a2;
    *(_QWORD *)(v6 + 192) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_22A62AAC8()
{
  uint64_t v0;

  sub_22A62EB10(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184));
}

uint64_t sub_22A62AB0C()
{
  uint64_t v0;

  sub_22A62EB10(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A62AB4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62AB64()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v1 = *(os_unfair_lock_s **)(v0[5] + 216);
  v0[6] = v1;
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62AE9C(v2);
  os_unfair_lock_unlock(v3);
  v4 = (_QWORD *)v0[5];
  v0[7] = v10;
  v5 = v4[19];
  v6 = v4[20];
  __swift_project_boxed_opaque_existential_1(v4 + 16, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 48) + *(_QWORD *)(v6 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_22A62AC40;
  return v9(v5, v6);
}

uint64_t sub_22A62AC40()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A62AC94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD **)(v0 + 40);
  v3 = v1[24];
  v2 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_22A62AD10;
  return AirPlayOverlayDisplayTreeProtocol.activate(with:)((uint64_t)(v1 + 2), v3, v2);
}

uint64_t sub_22A62AD10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A62AD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  sub_22A65F1D0();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 36));
  v5 = *(_QWORD *)(v4 + 16);
  sub_22A62E31C(*(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32));
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 3;
  swift_unknownObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 36));
  swift_task_dealloc();
  swift_beginAccess();
  v6 = *(void (**)(uint64_t))(v3 + 72);
  if (v6)
  {
    v7 = swift_retain();
    v6(v7);
    swift_unknownObjectRelease();
    sub_22A62EA00((uint64_t)v6);
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A62AE68()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22A62AE9C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22A62AED4()
{
  _BYTE *v0;

  sub_22A62E854();
  swift_allocError();
  *v0 = 1;
  return swift_willThrow();
}

void sub_22A62AF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  _BYTE *v5;

  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_playerTimeControlStatus) == (id)2)
  {
    sub_22A62E31C(v1, v3, 1);
    *(_QWORD *)a1 = v1;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 2;
    *v2 = v1;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_22A62E854();
    swift_allocError();
    *v5 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  JUMPOUT(0x22A62AF2CLL);
}

uint64_t sub_22A62AFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22A6A5EF8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_22A629860((uint64_t)v4, &qword_255AFECC0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_22A6A5EEC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_22A6A5EBC();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_255AFEE90;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_22A62B1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v4;
  v6[1] = sub_22A62B204;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_22A62B204()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A62B270()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  v3 = v1;
  v4 = v1;
  v5 = sub_22A6A5C94();
  v6 = sub_22A6A5F64();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 40);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 16) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v12 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 24) = sub_22A62D174(v12, v13, &v15);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v5, v6, "Unable to handle time control status change: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v10, -1, -1);
    MEMORY[0x22E2DF3F8](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A62B460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22A6A5EF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22A6A5EEC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22A629860(a1, &qword_255AFECC0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22A6A5EBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t AirPlayOverlayCoordinator.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_22A62EA00(*(_QWORD *)(v0 + 56));
  sub_22A62EA00(*(_QWORD *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  swift_release();
  swift_release();
  sub_22A629860(v0 + 224, &qword_255AFECB8);
  return v0;
}

uint64_t AirPlayOverlayCoordinator.__deallocating_deinit()
{
  AirPlayOverlayCoordinator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22A62B630()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62B648()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62B7CC(v2);
  os_unfair_lock_unlock(v3);
  if (qword_255AFE868 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  __swift_project_value_buffer(v4, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000068, 0x800000022A6AC7B0, 0xD000000000000014, 0x800000022A6ACA80);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_22A62B784;
  v5[5] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_22A62B784()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_22A62B7CC(uint64_t a1)
{
  _BYTE *v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  if (*(unsigned __int8 *)(a1 + 16) - 2 >= 3)
  {
    v3 = *(void **)a1;
    if (*(_BYTE *)(a1 + 16))
    {
      v4 = *(void **)(a1 + 8);
      swift_unknownObjectRetain();
      v5 = v4;
      sub_22A62E31C((uint64_t)v3, v4, 1);

    }
    v6 = swift_allocObject();
    swift_weakInit();
    v9[4] = sub_22A62E8BC;
    v9[5] = v6;
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 1107296256;
    v9[2] = sub_22A6360EC;
    v9[3] = &block_descriptor;
    v7 = _Block_copy(v9);
    swift_release();
    v8 = objc_msgSend(v3, sel_beginObserveringTimeControlStatusWithChangeHandler_, v7);
    _Block_release(v7);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = 1;
  }
  else
  {
    sub_22A62E854();
    swift_allocError();
    *v1 = 0;
    swift_willThrow();
  }
}

uint64_t sub_22A62B920()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22A62AFD0();
    return swift_release();
  }
  return result;
}

uint64_t AirPlayOverlayCoordinator.didConnect(adaptor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22A6A5EF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_22A628A98(a1, (uint64_t)v10);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  sub_22A628A38(v10, (uint64_t)(v7 + 5));
  swift_retain();
  sub_22A62B460((uint64_t)v5, (uint64_t)&unk_255AFECD0, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_22A62BA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v4;
  v6[1] = sub_22A62BAB4;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_22A62BAB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A62BB20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  v3 = v1;
  v4 = v1;
  v5 = sub_22A6A5C94();
  v6 = sub_22A6A5F64();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 40);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 16) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v12 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 24) = sub_22A62D174(v12, v13, &v15);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v5, v6, "Unable to handle didConnect event: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v10, -1, -1);
    MEMORY[0x22E2DF3F8](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AirPlayOverlayCoordinator.adaptor(_:connectionDidFailWithError:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  void (*v19)(void *);
  uint64_t v20[5];
  uint64_t v21;
  _BYTE v22[40];

  v3 = v2;
  if (qword_255AFE868 != -1)
    swift_once();
  v6 = sub_22A6A5CAC();
  __swift_project_value_buffer(v6, (uint64_t)qword_255B08F18);
  sub_22A628A98(a1, (uint64_t)v22);
  v7 = a2;
  v8 = a2;
  v9 = sub_22A6A5C94();
  v10 = sub_22A6A5F64();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136446466;
    sub_22A628A98((uint64_t)v22, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECD8);
    v13 = sub_22A6A5DC0();
    v20[0] = sub_22A62D174(v13, v14, &v21);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    *(_WORD *)(v11 + 12) = 2082;
    v20[0] = (uint64_t)a2;
    v15 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v16 = sub_22A6A5DC0();
    v20[0] = sub_22A62D174(v16, v17, &v21);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v9, v10, "Unable to connect adaptor %{public}s: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v12, -1, -1);
    MEMORY[0x22E2DF3F8](v11, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);

  }
  result = swift_beginAccess();
  v19 = *(void (**)(void *))(v3 + 56);
  if (v19)
  {
    swift_retain();
    v19(a2);
    return sub_22A62EA00((uint64_t)v19);
  }
  return result;
}

void AirPlayOverlayCoordinator.didDisconnect(adaptor:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62BFE4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_22A62BFE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_22A62C060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(void **)(v2 + 8);
  swift_unknownObjectRetain();
  v5 = v4;
  sub_22A62E31C(v3, v4, 1);

  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 0;
  v6 = sub_22A6A5EF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  swift_retain();
  sub_22A62B460(v1, (uint64_t)&unk_255AFEE58, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_22A62C114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_22A62C12C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 16);
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000068, 0x800000022A6AC7B0, 0xD000000000000017, 0x800000022A6AC820);
  v3 = v1 + 16;
  v4 = v1[19];
  v5 = v1[20];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v5 + 32) + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v6;
  *v6 = v0;
  v6[1] = sub_22A62C220;
  return v8(v4, v5);
}

uint64_t sub_22A62C220(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A62C27C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_22A62C2F8;
  return v6(v2, v3);
}

uint64_t sub_22A62C2F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A62C34C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_22A62C3D0;
  return v6(v0[4], v2, v3);
}

uint64_t sub_22A62C3D0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22A62C430()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[24];
  v3 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A62C488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22A6A5EF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_22A628A98(a1, (uint64_t)v10);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  sub_22A628A38(v10, (uint64_t)(v7 + 5));
  swift_retain();
  sub_22A62B460((uint64_t)v5, (uint64_t)&unk_255AFEE48, (uint64_t)v7);
  return swift_release();
}

void sub_22A62C56C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62E5E0(v2);
  os_unfair_lock_unlock(v3);
}

BOOL AirPlayOverlayCoordinator.isActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  _BOOL8 v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = (os_unfair_lock_s *)(v1 + 36);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 36));
  v3 = *(unsigned __int8 *)(v1 + 32) == 3;
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_22A62C5F8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16) == 3;
  return result;
}

void AirPlayOverlayCoordinator.activate(with:)(uint64_t a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = (os_unfair_lock_s *)v1[27];
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 9;
  os_unfair_lock_lock(v3 + 9);
  sub_22A62C664(v4, a1, v1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_22A62C664(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  if (*(_BYTE *)(result + 16) == 4 && *(_OWORD *)result == 0)
  {
    *(_QWORD *)result = a2;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    v4 = a3[14];
    v5 = a3[15];
    __swift_project_boxed_opaque_existential_1(a3 + 11, v4);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
    v7 = swift_unknownObjectRetain();
    v6(v7, v4, v5);
    sub_22A62E6F8((uint64_t)(a3 + 28), (uint64_t)v10);
    v8 = v11;
    if (v11)
    {
      v9 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      return sub_22A629860((uint64_t)v10, &qword_255AFECB8);
    }
  }
  return result;
}

Swift::Void __swiftcall AirPlayOverlayCoordinator.deactivate()()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = (os_unfair_lock_s *)v0[27];
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62C798(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A62C798(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_22A62E31C(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 4;
  v4 = a2[14];
  v5 = a2[15];
  __swift_project_boxed_opaque_existential_1(a2 + 11, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
  v6 = a2[24];
  v7 = a2[25];
  __swift_project_boxed_opaque_existential_1(a2 + 21, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
  sub_22A62E6F8((uint64_t)(a2 + 28), (uint64_t)v11);
  v8 = v12;
  if (!v12)
    return sub_22A629860((uint64_t)v11, &qword_255AFECB8);
  v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t AirPlayOverlayCoordinator.connect()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62C8A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[14];
  v3 = v1[15];
  __swift_project_boxed_opaque_existential_1(v1 + 11, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62B784;
  return v6(v2, v3);
}

BOOL sub_22A62C924()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  BOOL v5;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62C5F8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_22A62C984()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62E5C8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_22A62C9DC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 216);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_22A62E5B0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A62CA2C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

Swift::Void __swiftcall AirPlayOverlayCoordinator.setNeedsUpdate()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 21;
  v2 = v0[24];
  v3 = v0[25];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

uint64_t sub_22A62CA84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

uint64_t AirPlayOverlayCoordinator.register(assets:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_22A62CADC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_22A62CB60;
  return v6(v0[2], v2, v3);
}

uint64_t sub_22A62CB60()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t AirPlayOverlayCoordinator.unregisterAsset(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22A62CBC4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_22A62CC48;
  return v6(v0[2], v0[3], v2, v3);
}

uint64_t sub_22A62CC48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t AirPlayOverlayCoordinator.filteredAssets(by:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_22A62CCAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62CD30;
  return v6(*(unsigned __int8 *)(v0 + 32), v2, v3);
}

uint64_t sub_22A62CD30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t AirPlayOverlayCoordinator.allAssets()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62CD98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 32) + *(_QWORD *)(v3 + 32));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62CD30;
  return v6(v2, v3);
}

uint64_t AirPlayOverlayCoordinator.queryAsset(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_22A62CE30()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[5];
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 40) + *(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_22A62CEB8;
  return v6(v0[2], v0[3], v0[4], v2, v3);
}

uint64_t sub_22A62CEB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t AirPlayOverlayCoordinator.updateRemoteStore()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62CF18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62B784;
  return v6(v2, v3);
}

uint64_t AirPlayOverlayCoordinator.reset()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A62CFAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62ED80;
  return v6(v2, v3);
}

uint64_t sub_22A62D028(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_22A62D044(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_22A62D064(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 16) = *v1;
  return swift_task_switch();
}

uint64_t sub_22A62D084()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_22A62D0A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 32) + *(_QWORD *)(v3 + 32));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_22A62ED78;
  return v6(v2, v3);
}

uint64_t sub_22A62D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t sub_22A62D13C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_22A62D158()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_22A62D174(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22A62D244(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22A62E7A4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22A62E7A4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22A62D244(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22A6A6024();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22A62D3FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22A6A60D8();
  if (!v8)
  {
    sub_22A6A6120();
    __break(1u);
LABEL_17:
    result = sub_22A6A615C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22A62D3FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22A62D490(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22A62D668(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22A62D668(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22A62D490(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22A62D604(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22A6A60C0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22A6A6120();
      __break(1u);
LABEL_10:
      v2 = sub_22A6A5E14();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22A6A615C();
    __break(1u);
LABEL_14:
    result = sub_22A6A6120();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_22A62D604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEE60);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22A62D668(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEE60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A62D7B4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_22A62D854(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22A62D938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _OWORD v11[3];
  char v12;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;
  __int128 v16;
  ValueMetadata *v17;
  _UNKNOWN **v18;

  v17 = &type metadata for DispatchSourceTimeProvider;
  v18 = &off_24F46D268;
  v14 = type metadata accessor for AirPlayOverlayAdaptor();
  v15 = &protocol witness table for AirPlayOverlayAdaptor;
  *(_QWORD *)&v13 = a1;
  memset(v11, 0, sizeof(v11));
  v12 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEED8);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 68) = 0;
  sub_22A62EB4C((uint64_t)v11, v6 + 16);
  sub_22A62EB88((uint64_t)v11);
  *(_QWORD *)(a3 + 136) = v6;
  *(_BYTE *)(a3 + 144) = 0;
  v7 = a3 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)(a3 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
  *v9 = 0;
  v9[1] = 0;
  sub_22A628A38(&v13, a3 + 16);
  sub_22A62EBBC(a2, a3 + 56);
  sub_22A628A38(&v16, a3 + 96);
  return a3;
}

uint64_t sub_22A62DA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v26[5];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;

  v31 = type metadata accessor for RenderActionsFileLogger();
  v32 = &protocol witness table for RenderActionsFileLogger;
  *(_QWORD *)&v30 = a3;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 72) = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFEEA0);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 36) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 32) = 4;
  *(_QWORD *)(a4 + 216) = v7;
  type metadata accessor for RemoteInspectorCoordinator();
  swift_allocObject();
  v8 = (_QWORD *)sub_22A65F478();
  sub_22A628A98(a2, (uint64_t)&v27);
  v9 = type metadata accessor for AirPlayOverlayAdaptor();
  v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B000F0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = 0xC000000000000000;
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 72) = 0;
  swift_unknownObjectWeakInit();
  sub_22A628A38(&v27, v10 + 16);
  sub_22A628A98((uint64_t)&v30, (uint64_t)&v27);
  v12 = type metadata accessor for AirPlayOverlayDisplayTree();
  v13 = swift_allocObject();
  v14 = swift_retain();
  v15 = sub_22A62D938(v14, (uint64_t)&v27, v13);
  sub_22A628A98((uint64_t)&v30, (uint64_t)&v27);
  v26[3] = v9;
  v26[4] = &protocol witness table for AirPlayOverlayAdaptor;
  v26[0] = v10;
  v16 = type metadata accessor for AirPlayOverlayAssetStore();
  v17 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  sub_22A628A98((uint64_t)v26, v17 + 112);
  sub_22A62E6F8((uint64_t)&v27, v17 + 152);
  v18 = sub_22A630CB4(MEMORY[0x24BEE4AF8]);
  sub_22A629860((uint64_t)&v27, &qword_255AFECB8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  *(_QWORD *)(v17 + 192) = v18;
  sub_22A628A98(a1, a4 + 16);
  *(_QWORD *)(a4 + 112) = v9;
  *(_QWORD *)(a4 + 120) = &protocol witness table for AirPlayOverlayAdaptor;
  *(_QWORD *)(a4 + 88) = v10;
  *(_QWORD *)(a4 + 152) = v16;
  *(_QWORD *)(a4 + 160) = &off_24F46F800;
  *(_QWORD *)(a4 + 128) = v17;
  v28 = v12;
  v29 = &off_24F471080;
  *(_QWORD *)&v27 = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_22A628A38(&v27, a4 + 168);
  *(_QWORD *)(a4 + 208) = v8;
  sub_22A628A38(&v30, a4 + 224);
  swift_beginAccess();
  *(_QWORD *)(v10 + 72) = &protocol witness table for AirPlayOverlayCoordinator;
  swift_unknownObjectWeakAssign();
  swift_retain();
  swift_release();
  v19 = (uint64_t *)(v15 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
  swift_beginAccess();
  v20 = *v19;
  *v19 = (uint64_t)sub_22A62ED70;
  v19[1] = (uint64_t)v8;
  swift_retain();
  sub_22A62EA00(v20);
  swift_release();
  v21 = v8[12];
  v8[12] = &unk_255AFEEE8;
  v8[13] = v17;
  swift_retain();
  sub_22A62EA00(v21);
  v22 = v8[14];
  v8[14] = &unk_255AFEEF0;
  v8[15] = v17;
  sub_22A62EA00(v22);
  swift_release();
  return a4;
}

uint64_t sub_22A62DDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  _UNKNOWN **v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 72) = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFEEA0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 36) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = 4;
  *(_QWORD *)(a4 + 216) = v11;
  type metadata accessor for RemoteInspectorCoordinator();
  swift_allocObject();
  v12 = (_QWORD *)sub_22A65F478();
  sub_22A628A98(a2, (uint64_t)&v31);
  v13 = type metadata accessor for AirPlayOverlayAdaptor();
  v14 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B000F0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 48) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 40) = 0xC000000000000000;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 72) = 0;
  swift_unknownObjectWeakInit();
  sub_22A628A38(&v31, v14 + 16);
  sub_22A628A98((uint64_t)&v34, (uint64_t)&v31);
  v16 = type metadata accessor for AirPlayOverlayDisplayTree();
  v17 = swift_allocObject();
  v18 = swift_retain();
  v19 = sub_22A62D938(v18, (uint64_t)&v31, v17);
  sub_22A628A98((uint64_t)&v34, (uint64_t)&v31);
  v30[3] = v13;
  v30[4] = &protocol witness table for AirPlayOverlayAdaptor;
  v30[0] = v14;
  v20 = type metadata accessor for AirPlayOverlayAssetStore();
  v21 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  sub_22A628A98((uint64_t)v30, v21 + 112);
  sub_22A62E6F8((uint64_t)&v31, v21 + 152);
  v22 = sub_22A630CB4(MEMORY[0x24BEE4AF8]);
  sub_22A629860((uint64_t)&v31, &qword_255AFECB8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  *(_QWORD *)(v21 + 192) = v22;
  sub_22A628A98(a1, a4 + 16);
  *(_QWORD *)(a4 + 112) = v13;
  *(_QWORD *)(a4 + 120) = &protocol witness table for AirPlayOverlayAdaptor;
  *(_QWORD *)(a4 + 88) = v14;
  *(_QWORD *)(a4 + 152) = v20;
  *(_QWORD *)(a4 + 160) = &off_24F46F800;
  *(_QWORD *)(a4 + 128) = v21;
  v32 = v16;
  v33 = &off_24F471080;
  *(_QWORD *)&v31 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_22A628A38(&v31, a4 + 168);
  *(_QWORD *)(a4 + 208) = v12;
  sub_22A628A38(&v34, a4 + 224);
  swift_beginAccess();
  *(_QWORD *)(v14 + 72) = &protocol witness table for AirPlayOverlayCoordinator;
  swift_unknownObjectWeakAssign();
  swift_retain();
  swift_release();
  v23 = (uint64_t *)(v19 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
  swift_beginAccess();
  v24 = *v23;
  *v23 = (uint64_t)sub_22A62E9FC;
  v23[1] = (uint64_t)v12;
  swift_retain();
  sub_22A62EA00(v24);
  swift_release();
  v25 = v12[12];
  v12[12] = &unk_255AFEEB8;
  v12[13] = v21;
  swift_retain();
  sub_22A62EA00(v25);
  v26 = v12[14];
  v12[14] = &unk_255AFEEC8;
  v12[15] = v21;
  sub_22A62EA00(v26);
  swift_release();
  return a4;
}

uint64_t sub_22A62E110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_22A62DDB0(a1, a2, (uint64_t)v13, v14, a5, a6);
}

uint64_t sub_22A62E1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62ED7C;
  v4 = (_QWORD *)swift_task_alloc();
  v3[4] = v4;
  *v4 = v3;
  v4[1] = sub_22A62BAB4;
  v4[2] = v2;
  return swift_task_switch();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for AirPlayOverlayCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AirPlayOverlayCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirPlayOverlayCoordinator.__allocating_init(displayTreeBuilder:connectionProvider:actionsLogger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

id sub_22A62E2B8(uint64_t a1, void *a2, char a3)
{
  id result;

  switch(a3)
  {
    case 0:
    case 2:
    case 3:
      result = (id)swift_unknownObjectRetain();
      break;
    case 1:
      swift_unknownObjectRetain();
      result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for AirPlayOverlayCoordinator.State(uint64_t a1)
{
  sub_22A62E31C(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_22A62E31C(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
      swift_unknownObjectRelease();
      break;
    case 1:
      swift_unknownObjectRelease();

      break;
    default:
      return;
  }
}

uint64_t _s10AirPlayKit25AirPlayOverlayCoordinatorC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22A62E2B8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AirPlayOverlayCoordinator.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22A62E2B8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22A62E31C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AirPlayOverlayCoordinator.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22A62E31C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPlayOverlayCoordinator.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayCoordinator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A62E4F0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_22A62E508(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayCoordinator.State()
{
  return &type metadata for AirPlayOverlayCoordinator.State;
}

uint64_t sub_22A62E530()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A62E554()
{
  uint64_t v0;

  return sub_22A69A3E4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_22A62E55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_22A62E58C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_22A62E5B0(uint64_t a1)
{
  _QWORD *v1;

  return sub_22A62C798(a1, v1);
}

uint64_t sub_22A62E5C8(uint64_t a1)
{
  uint64_t v1;

  return sub_22A62C664(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void sub_22A62E5E0(uint64_t a1)
{
  sub_22A62BFE4(a1);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_22A62E630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62E6B0;
  v4 = (_QWORD *)swift_task_alloc();
  v3[4] = v4;
  *v4 = v3;
  v4[1] = sub_22A62BAB4;
  v4[2] = v2;
  return swift_task_switch();
}

uint64_t sub_22A62E6B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A62E6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A62E744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62ED7C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_22A62E7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22A62E7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED7C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255AFF650 + dword_255AFF650))(a1, v4);
}

unint64_t sub_22A62E854()
{
  unint64_t result;

  result = qword_255AFEE80;
  if (!qword_255AFEE80)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayCoordinatorError, &type metadata for AirPlayOverlayCoordinatorError);
    atomic_store(result, &qword_255AFEE80);
  }
  return result;
}

uint64_t sub_22A62E898()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A62E8BC()
{
  return sub_22A62B920();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t objectdestroy_44Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A62E90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62ED7C;
  v4 = (_QWORD *)swift_task_alloc();
  v3[4] = v4;
  *v4 = v3;
  v4[1] = sub_22A62B204;
  v4[5] = v2;
  return swift_task_switch();
}

uint64_t sub_22A62E98C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255AFF650 + dword_255AFF650))(a1, v4);
}

uint64_t sub_22A62EA00(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_22A62EA10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_22A62ED9C;
  v2[6] = v0;
  return swift_task_switch();
}

uint64_t sub_22A62EA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED74;
  return sub_22A62A8B4(a1, a2);
}

unint64_t sub_22A62EACC()
{
  unint64_t result;

  result = qword_255AFEED0;
  if (!qword_255AFEED0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayAssetStoreError, &type metadata for AirPlayOverlayAssetStoreError);
    atomic_store(result, (unint64_t *)&qword_255AFEED0);
  }
  return result;
}

uint64_t sub_22A62EB10(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_22A62EB40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A62EB4C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AirPlayOverlayDisplayTree.State(a2, a1);
  return a2;
}

uint64_t sub_22A62EB88(uint64_t a1)
{
  destroy for AirPlayOverlayDisplayTree.State(a1);
  return a1;
}

uint64_t sub_22A62EBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A62EC04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_22A62EC60;
  v2[6] = v0;
  return swift_task_switch();
}

uint64_t sub_22A62EC60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_22A62ECB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED10;
  return sub_22A62A8B4(a1, a2);
}

uint64_t sub_22A62ED10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t static RenderNode<>.container(identifier:children:flow:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v7 = *a3;
  v8 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v10 = (_QWORD *)(a4 + v9[9]);
  *v10 = a2;
  v10[1] = v7;
  *(_BYTE *)(a4 + v9[10]) = 0;
  v11 = (_QWORD *)(a4 + v9[11]);
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)((char *)v11 + 14) = 0;
  v12 = a4 + v9[12];
  *(_QWORD *)v12 = 0;
  *(_WORD *)(v12 + 12) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  v13 = a4 + v9[13];
  *(_QWORD *)v13 = 0x3F0000003F000000;
  *(_BYTE *)(v13 + 8) = 0;
  v14 = a4 + v9[14];
  *(_OWORD *)v14 = xmmword_22A6A77B0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_BYTE *)(v14 + 24) = 0;
  v15 = a4 + v9[15];
  *(_QWORD *)v15 = 1065353216;
  *(_BYTE *)(v15 + 8) = 0;
  v16 = a4 + v9[16];
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = 2;
  *(_DWORD *)(a4 + v9[17]) = 0;
  v17 = (_QWORD *)(a4 + v9[18]);
  *v17 = 0;
  v17[1] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t RenderNode<>.withChildren(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v6 = *(_QWORD *)(v2 + *(int *)(v5 + 36) + 8);
  sub_22A62F9B8(v2, a2, &qword_255AFEEE0);
  v7 = (_QWORD *)(a2 + *(int *)(v5 + 36));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = a1;
  v7[1] = v6;
  return result;
}

uint64_t RenderNode<>.appending(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22A62EF54(a1, (uint64_t *)&unk_255B01540, a2);
}

{
  return sub_22A62EF54(a1, &qword_255AFEEE0, a2);
}

{
  return sub_22A62EF54(a1, (uint64_t *)&unk_255B01570, a2);
}

uint64_t sub_22A62EF54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v21 = a3;
  v6 = type metadata accessor for ContainerContent.Child();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v11 = (unint64_t *)(v3 + *(int *)(v10 + 36));
  v12 = *v11;
  sub_22A62F9B8(a1, (uint64_t)v9, a2);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_22A62F768(0, *(_QWORD *)(v12 + 16) + 1, 1, v12, &qword_255AFEF48, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
    v12 = sub_22A62F768(v13 > 1, v14 + 1, 1, v12, &qword_255AFEF48, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
  *(_QWORD *)(v12 + 16) = v14 + 1;
  sub_22A62F974((uint64_t)v9, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14);
  v15 = v11[1];
  v16 = v3;
  v17 = v21;
  sub_22A62F9B8(v16, v21, &qword_255AFEEE0);
  v18 = (unint64_t *)(v17 + *(int *)(v10 + 36));
  result = swift_bridgeObjectRelease();
  *v18 = v12;
  v18[1] = v15;
  return result;
}

_QWORD *sub_22A62F0EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22A62FE40(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22A62F20C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22A62FD34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22A62F32C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22A630144(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22A62F438(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22A62FF4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22A62F544(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_22A62F768(a1, a2, a3, a4, &qword_255AFEF08, (uint64_t (*)(_QWORD))type metadata accessor for RenderAssetAction);
}

uint64_t sub_22A62F558(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF10);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF18) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_22A6A6120();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF18) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22A63024C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_22A62F768(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_22A6A6120();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22A630368(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_22A62F974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerContent.Child();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A62F9B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_QWORD *sub_22A62F9FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF38);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22A630054(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_22A62FB08(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF40);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_22A630480(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22A62FC14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF30);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22A630568(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22A62FD34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A62FE40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A62FF4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A630054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A630144(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF58);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A63024C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF18) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A630368(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

char *sub_22A630480(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A630568(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

unint64_t sub_22A63065C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF010);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF008);
  v6 = sub_22A6A6150();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v12, (uint64_t)v5, &qword_255AFF010);
    result = sub_22A632F64((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22A6A5C40();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for ContainerContent.Child();
    result = sub_22A635524(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A630814(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFB8);
  v2 = (_QWORD *)sub_22A6A6150();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v4, (uint64_t)&v16, &qword_255AFEFD0);
    v5 = v16;
    v6 = v17;
    result = sub_22A632FD0(v16, v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 40 * result;
    v11 = v18;
    v12 = v19;
    *(_QWORD *)(v10 + 32) = v20;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A63095C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF048);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF018);
  v6 = sub_22A6A6150();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v12, (uint64_t)v5, &qword_255AFF048);
    result = sub_22A632F64((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22A6A5C40();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(_QWORD *)(v19 + 72) * v16;
    v21 = v17 + v20;
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
    v22(v21, v5, v18);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v7[7] + v20, v9, v18);
    v23 = v7[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v7[2] = v25;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A630B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF040);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFE8);
  v6 = sub_22A6A6150();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v12, (uint64_t)v5, &qword_255AFF040);
    result = sub_22A632F64((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22A6A5C40();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 56 * v16;
    v20 = *(_OWORD *)v9;
    v21 = *((_OWORD *)v9 + 1);
    v22 = *((_OWORD *)v9 + 2);
    *(_QWORD *)(v19 + 48) = *((_QWORD *)v9 + 6);
    *(_OWORD *)(v19 + 16) = v21;
    *(_OWORD *)(v19 + 32) = v22;
    *(_OWORD *)v19 = v20;
    v23 = v7[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v7[2] = v25;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A630CB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFF8);
  v2 = sub_22A6A6150();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (_BYTE *)(a1 + 112);
  while (1)
  {
    v22 = v4;
    v6 = *((_QWORD *)v5 - 10);
    v7 = *((_QWORD *)v5 - 9);
    v9 = *((_QWORD *)v5 - 8);
    v8 = *((_QWORD *)v5 - 7);
    v10 = *((_QWORD *)v5 - 6);
    v11 = *((_QWORD *)v5 - 5);
    v12 = *((_QWORD *)v5 - 4);
    v25 = *(v5 - 23);
    v26 = *(v5 - 24);
    v13 = *((_QWORD *)v5 - 1);
    v24 = *((_QWORD *)v5 - 2);
    v23 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_22A632FD0(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + 72 * result;
    *(_QWORD *)v17 = v9;
    *(_QWORD *)(v17 + 8) = v8;
    *(_QWORD *)(v17 + 16) = v10;
    *(_QWORD *)(v17 + 24) = v11;
    *(_QWORD *)(v17 + 32) = v12;
    *(_BYTE *)(v17 + 40) = v26;
    *(_BYTE *)(v17 + 41) = v25;
    *(_QWORD *)(v17 + 48) = v24;
    *(_QWORD *)(v17 + 56) = v13;
    *(_BYTE *)(v17 + 64) = v23;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 88;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A630E48(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFC0);
  v2 = sub_22A6A6150();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v6, (uint64_t)&v15, &qword_255AFEFC8);
    v7 = v15;
    v8 = v16;
    result = sub_22A632FD0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_22A633324((uint64_t)&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A630F88(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFD8);
  v2 = (_QWORD *)sub_22A6A6150();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_22A632FD0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A6310A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF000);
  v2 = (_QWORD *)sub_22A6A6150();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_22A632FD0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A6311C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF028);
  v2 = (_QWORD *)sub_22A6A6150();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_22A632FD0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22A6312E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF038);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF030);
  v6 = sub_22A6A6150();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22A62F9B8(v12, (uint64_t)v5, &qword_255AFF038);
    result = sub_22A632F64((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22A6A5C40();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_22A628A38(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_22A631480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v2);
  sub_22A6354E0(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_22A63154C + 4 * byte_22A6A77D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_22A63154C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = *v0;
  return sub_22A67D1D4();
}

void sub_22A631674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_22A6354E0(v0, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  v5 = (char *)sub_22A631748 + 4 * byte_22A6A77D6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X12 }
}

uint64_t sub_22A631748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 - 208) = 1735289202;
  *(_QWORD *)(v1 - 200) = 0xE400000000000000;
  sub_22A6A6084();
  *(_QWORD *)(v0 + 88) = 0x7241657461657263;
  *(_QWORD *)(v0 + 96) = 0xEF73746E656D7567;
  sub_22A631480();
  if (v2)
  {
    *(_QWORD *)(v1 - 208) = v2;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  v3 = sub_22A630E48(v0);
  v4 = sub_22A631888(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22A631888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int128 *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  _BYTE v40[40];
  __int128 v41;
  _OWORD v42[2];
  uint64_t v43;
  __int128 v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  int64_t v48;

  v2 = MEMORY[0x24BEE4B00];
  v47 = MEMORY[0x24BEE4B00];
  v32 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v48 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v48 << 6);
      goto LABEL_25;
    }
    v10 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v10 >= v31)
      goto LABEL_40;
    v11 = *(_QWORD *)(v32 + 8 * v10);
    v12 = v48 + 1;
    if (!v11)
    {
      v12 = v48 + 2;
      if (v48 + 2 >= v31)
        goto LABEL_40;
      v11 = *(_QWORD *)(v32 + 8 * v12);
      if (!v11)
      {
        v12 = v48 + 3;
        if (v48 + 3 >= v31)
          goto LABEL_40;
        v11 = *(_QWORD *)(v32 + 8 * v12);
        if (!v11)
        {
          v12 = v48 + 4;
          if (v48 + 4 >= v31)
            goto LABEL_40;
          v11 = *(_QWORD *)(v32 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v48 = v12;
LABEL_25:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v16 = *v14;
    v15 = v14[1];
    sub_22A62F9B8(*(_QWORD *)(a1 + 56) + 40 * v9, (uint64_t)v45, &qword_255AFEFA8);
    *(_QWORD *)&v44 = v16;
    *((_QWORD *)&v44 + 1) = v15;
    v41 = v44;
    v42[0] = v45[0];
    v42[1] = v45[1];
    v43 = v46;
    sub_22A62F9B8((uint64_t)v42, (uint64_t)&v33, &qword_255AFEFA8);
    if (*((_QWORD *)&v34 + 1))
    {
      v36 = v33;
      v37 = v34;
      v17 = v41;
      v38 = v35;
      v39 = v41;
      sub_22A633324((uint64_t)v42, (uint64_t)v40);
      v18 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v18)
      {
        v19 = v18 + 1;
        swift_bridgeObjectRetain();
        sub_22A633770(v19, 1);
        v2 = v47;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_22A6A6258();
      sub_22A6A5DE4();
      result = sub_22A6A62A0();
      v20 = v2 + 64;
      v21 = -1 << *(_BYTE *)(v2 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v2 + 64 + 8 * (v22 >> 6))) != 0)
      {
        v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v2 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v20 + 8 * v23);
        }
        while (v28 == -1);
        v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      }
      *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v24) = v17;
      v29 = *(_QWORD *)(v2 + 56) + 40 * v24;
      v30 = v37;
      *(_OWORD *)v29 = v36;
      *(_OWORD *)(v29 + 16) = v30;
      *(_QWORD *)(v29 + 32) = v38;
      ++*(_QWORD *)(v2 + 16);
      v7 = (__int128 *)v40;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_22A629860((uint64_t)&v41, &qword_255AFEFB0);
      v7 = &v33;
    }
    result = sub_22A629860((uint64_t)v7, &qword_255AFEFA8);
  }
  v13 = v48 + 5;
  if (v48 + 5 >= v31)
  {
LABEL_40:
    sub_22A633AA4();
    return v2;
  }
  v11 = *(_QWORD *)(v32 + 8 * v13);
  if (v11)
  {
    v12 = v48 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v31)
      goto LABEL_40;
    v11 = *(_QWORD *)(v32 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

void sub_22A631C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v2);
  sub_22A6354E0(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_22A631D20 + 4 * byte_22A6A77DC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A631D20()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22A6A6264();
  if (!(v1 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  if (v1 >> 30 != 1)
    return sub_22A6A6264();
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A627C();
}

void sub_22A631EAC()
{
  JUMPOUT(0x22A631D64);
}

void sub_22A631EC0()
{
  JUMPOUT(0x22A631D64);
}

void sub_22A631ED4()
{
  JUMPOUT(0x22A631D64);
}

void sub_22A631EF4()
{
  JUMPOUT(0x22A631D64);
}

void sub_22A631F14()
{
  JUMPOUT(0x22A631D64);
}

void sub_22A631F30(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_22A631674();
  *a1 = v2;
}

uint64_t sub_22A631F54()
{
  sub_22A6A6258();
  sub_22A631C5C();
  return sub_22A6A62A0();
}

uint64_t sub_22A631F94()
{
  sub_22A6A6258();
  sub_22A631C5C();
  return sub_22A6A62A0();
}

uint64_t sub_22A631FD0()
{
  return sub_22A6354A0(&qword_255AFEF60, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerType, (uint64_t)&unk_22A6A7800);
}

uint64_t type metadata accessor for RenderLayerType()
{
  uint64_t result;

  result = qword_255AFF0C8;
  if (!qword_255AFF0C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A632038(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(qword_255AFEF68, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerType, (uint64_t)&unk_22A6A7828);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A632074(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(&qword_255AFEF98, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerType, (uint64_t)&unk_22A6A7868);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A6320B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v18;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v6 = (unint64_t)(v3 + 63) >> 6;
    v18 = a2 + 56;
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
LABEL_23:
      v11 = *(_QWORD *)(a1 + 48) + 40 * v7;
      v12 = *(_QWORD *)v11;
      v13 = *(_QWORD *)(v11 + 8);
      v14 = *(unsigned int *)(v11 + 16);
      v15 = *(_BYTE *)(v11 + 20);
      sub_22A6A6258();
      sub_22A635434(v12, v13, v14, v15);
      TextAttribute.hash(into:)();
      sub_22A6A6264();
      sub_22A6A6264();
      v16 = sub_22A6A62A0() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
        __asm { BR              X8 }
      sub_22A63544C(v12, v13, v14, v15);
      return 0;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v8 = *(_QWORD *)(a1 + 64);
      v9 = 1;
      if (v8)
        goto LABEL_22;
      v9 = 2;
      if (v6 <= 2)
        return 1;
      v8 = *(_QWORD *)(a1 + 72);
      if (v8)
        goto LABEL_22;
      v9 = 3;
      if (v6 <= 3)
        return 1;
      v8 = *(_QWORD *)(a1 + 80);
      if (v8)
        goto LABEL_22;
      v9 = 4;
      if (v6 <= 4)
        return 1;
      v8 = *(_QWORD *)(a1 + 88);
      if (v8)
      {
LABEL_22:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
        goto LABEL_23;
      }
      v10 = 5;
      if (v6 > 5)
      {
        v8 = *(_QWORD *)(a1 + 96);
        if (v8)
        {
          v9 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v9 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            JUMPOUT(0x22A632F48);
          }
          if (v9 >= v6)
            break;
          v8 = *(_QWORD *)(a1 + 56 + 8 * v9);
          ++v10;
          if (v8)
            goto LABEL_22;
        }
      }
    }
    return 1;
  }
  return 0;
}

unint64_t sub_22A632F64(uint64_t a1)
{
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_22A6A5D30();
  return sub_22A633068(a1, v2);
}

unint64_t sub_22A632FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22A6A6258();
  sub_22A6A5DE4();
  v4 = sub_22A6A62A0();
  return sub_22A6331A8(a1, a2, v4);
}

unint64_t sub_22A633034(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x22E2DECA8](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_22A633288(a1, v3);
}

unint64_t sub_22A633068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_22A6A5C40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_22A6354A0(&qword_255AFEFF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_22A6A5D54();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_22A6331A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22A6A61D4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22A6A61D4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_22A633288(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_22A633324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A63336C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for ContainerContent.Child();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22A6A5C40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF008);
  v48 = a2;
  v12 = sub_22A6A6144();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_40;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v20++, 1))
      goto LABEL_42;
    if (v20 >= v44)
      break;
    v26 = v45;
    v27 = v45[v20];
    if (!v27)
    {
      v28 = v20 + 1;
      if (v20 + 1 >= v44)
      {
LABEL_32:
        swift_release();
        v3 = v43;
        if ((v48 & 1) == 0)
          goto LABEL_40;
        goto LABEL_33;
      }
      v27 = v45[v28];
      if (!v27)
      {
        while (1)
        {
          v20 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v20 >= v44)
            goto LABEL_32;
          v27 = v45[v20];
          ++v28;
          if (v27)
            goto LABEL_19;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      ++v20;
    }
LABEL_19:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_20:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_22A635524(v31 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_22A6354E0(v33 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    }
    sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22A6A5D30();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_22A635524(v49, *(_QWORD *)(v13 + 56) + v32 * v22, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_40;
LABEL_33:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_22A633770(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFB8);
  v42 = a2;
  v6 = sub_22A6A6144();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_34;
      v23 = *(_QWORD *)(v41 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v13 >= v40)
              goto LABEL_34;
            v23 = *(_QWORD *)(v41 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v13 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 40 * v20;
    if ((v42 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 16);
      v45 = *(_QWORD *)(v28 + 32);
      v43 = v29;
      v44 = v30;
    }
    else
    {
      sub_22A633AAC(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_22A6A6258();
    sub_22A6A5DE4();
    result = sub_22A6A62A0();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = *(_QWORD *)(v7 + 56) + 40 * v14;
    v17 = v43;
    v18 = v44;
    *(_QWORD *)(v16 + 32) = v45;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v22 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22A633AA4()
{
  return swift_release();
}

uint64_t sub_22A633AAC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_22A633AE8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22A633B24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  __int128 v48;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFF8);
  v42 = a2;
  v6 = sub_22A6A6144();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 72 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v48 = *(_OWORD *)(v33 + 16);
    v47 = *(_QWORD *)(v33 + 32);
    v45 = *(_BYTE *)(v33 + 41);
    v46 = *(_BYTE *)(v33 + 40);
    v36 = *(_QWORD *)(v33 + 56);
    v44 = *(_QWORD *)(v33 + 48);
    v43 = *(_BYTE *)(v33 + 64);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_22A6A6258();
    sub_22A6A5DE4();
    result = sub_22A6A62A0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 72 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_OWORD *)(v19 + 16) = v48;
    *(_QWORD *)(v19 + 32) = v47;
    *(_BYTE *)(v19 + 40) = v46;
    *(_BYTE *)(v19 + 41) = v45;
    *(_QWORD *)(v19 + 48) = v44;
    *(_QWORD *)(v19 + 56) = v36;
    *(_BYTE *)(v19 + 64) = v43;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22A633EB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFD8);
  v42 = a2;
  v6 = sub_22A6A6144();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22A6A6258();
    sub_22A6A5DE4();
    result = sub_22A6A62A0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_22A6341D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v3 = v2;
  v5 = sub_22A6A5C40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFE8);
  v47 = a2;
  v10 = sub_22A6A6144();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = v2;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v24 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v25 = v24 | (v18 << 6);
      goto LABEL_22;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45)
      break;
    v27 = v46;
    v28 = v46[v26];
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v45)
        goto LABEL_34;
      v28 = v46[v18];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v18 >= v45)
              goto LABEL_34;
            v28 = v46[v18];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v18 = v29;
      }
    }
LABEL_21:
    v15 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v6 + 72);
    v31 = *(_QWORD *)(v9 + 48) + v30 * v25;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v31, v5);
      v32 = *(_QWORD *)(v9 + 56) + 56 * v25;
      v34 = *(_OWORD *)(v32 + 16);
      v33 = *(_OWORD *)(v32 + 32);
      v35 = *(_OWORD *)v32;
      v51 = *(_QWORD *)(v32 + 48);
      v49 = v34;
      v50 = v33;
      v48 = v35;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v31, v5);
      sub_22A635464(*(_QWORD *)(v9 + 56) + 56 * v25, (uint64_t)&v48);
    }
    sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22A6A5D30();
    v36 = -1 << *(_BYTE *)(v11 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v30 * v19, v8, v5);
    v20 = *(_QWORD *)(v11 + 56) + 56 * v19;
    v21 = v51;
    v23 = v49;
    v22 = v50;
    *(_OWORD *)v20 = v48;
    *(_OWORD *)(v20 + 16) = v23;
    *(_OWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 48) = v21;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v44;
  v27 = v46;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v9 + 32);
  if (v43 >= 64)
    bzero(v27, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v43;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_22A6345A0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_22A6A5C40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF030);
  v40 = a2;
  v10 = sub_22A6A6144();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_22A628A38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_22A628A98(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22A6A5D30();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_22A628A38(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_22A634948(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_22A6A5C40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF020);
  result = sub_22A6A6144();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(unsigned int *)(*(_QWORD *)(v9 + 48) + 4 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = MEMORY[0x22E2DECA8](*(_QWORD *)(v11 + 40), v25, 4);
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_DWORD *)(*(_QWORD *)(v11 + 48) + 4 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_22A634C7C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  unint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_22A6A5C40();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v47[-v9];
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF018);
  v12 = sub_22A6A6144();
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v49 = v2;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11;
  v18 = v12 + 64;
  v54 = v17;
  result = swift_retain();
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v53 = v8;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_24;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v50)
      break;
    v29 = v51;
    v30 = v51[v28];
    ++v20;
    if (!v30)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v50)
        goto LABEL_34;
      v30 = v51[v20];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v50)
        {
LABEL_34:
          v45 = v54;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v51[v31];
        if (!v30)
        {
          while (1)
          {
            v20 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v20 >= v50)
              goto LABEL_34;
            v30 = v51[v20];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v20 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v20 << 6);
LABEL_24:
    v32 = v54;
    v33 = *(_QWORD *)(v55 + 72);
    v34 = v33 * v27;
    v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v55 + v52);
    v35(v10, *(_QWORD *)(v54 + 48) + v33 * v27, v5);
    v36 = *(_QWORD *)(v32 + 56) + v34;
    v37 = v53;
    v35(v53, v36, v5);
    sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22A6A5D30();
    v38 = -1 << *(_BYTE *)(v12 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v18 + 8 * v40);
      }
      while (v44 == -1);
      v22 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v33 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v33 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32);
    v25(v24, v10, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v37, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v45 = v54;
  swift_release();
  v3 = v49;
  v29 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v29, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

void sub_22A635054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[4];

  v4 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v4);
  v15[1] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RenderLayerType();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFE0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A6354E0(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  sub_22A6354E0(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  v14 = (char *)sub_22A6351D0 + 4 * aDl[swift_getEnumCaseMultiPayload() + 2];
  __asm { BR              X10 }
}

BOOL sub_22A6351D0()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  sub_22A6354E0(v0, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A629860(v0, &qword_255AFEFE0);
    return 0;
  }
  else
  {
    v4 = *v1;
    *(_QWORD *)(v3 - 96) = *v2;
    *(_QWORD *)(v3 - 88) = v4;
    v5 = _s10AirPlayKit16ContainerContentV4FlowO2eeoiySbAE_AEtFZ_0((uint64_t *)(v3 - 88), (uint64_t *)(v3 - 96));
    sub_22A633AE8(v0, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  }
  return v5;
}

uint64_t sub_22A635434(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22A63544C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A635464(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RemoteInspectorNodeRegistryEntry(a2, a1);
  return a2;
}

uint64_t sub_22A6354A0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E2DF32C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A6354E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22A635524(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_22A635568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF050);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF020);
    v7 = (_QWORD *)sub_22A6A6150();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_22A62F9B8(v9, (uint64_t)v5, &qword_255AFF050);
      v11 = *v5;
      result = sub_22A633034(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v7[6] + 4 * result) = v11;
      v15 = v7[7];
      v16 = sub_22A6A5C40();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t *sub_22A6356D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload == 2)
      {
        type metadata accessor for ImageContent.ContentType(0);
        v8 = (char *)&loc_22A63574C + 4 * byte_22A6A77EF[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_22A6358C0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if ((_DWORD)result == 2)
  {
    type metadata accessor for ImageContent.ContentType(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        result = swift_release();
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      case 2:
        return swift_bridgeObjectRelease();
      case 3:
        v3 = sub_22A6A5B8C();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
        break;
      default:
        return result;
    }
  }
  return result;
}

_QWORD *sub_22A63599C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for ImageContent.ContentType(0);
      v7 = (char *)&loc_22A635A0C + 4 * byte_22A6A77F7[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_22A635B64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  char *v7;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload == 2)
      {
        type metadata accessor for ImageContent.ContentType(0);
        v7 = (char *)&loc_22A635BEC + 4 * byte_22A6A77FB[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_22A635D64(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = type metadata accessor for ImageContent.ContentType(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v7 = sub_22A6A5B8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_22A635E38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = type metadata accessor for ImageContent.ContentType(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v7 = sub_22A6A5B8C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageContent.ContentType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ImageContent.ContentType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_22A635F40()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22A635F50()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ImageContent.ContentType(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *Color.init(_:)(void *result)
{
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8[2];

  v8[1] = *(double *)MEMORY[0x24BDAC8D0];
  if (result)
  {
    v1 = result;
    v7 = 0.0;
    v8[0] = 0.0;
    v5 = 0x3FF0000000000000;
    v6 = 0;
    v2 = objc_msgSend(result, sel_getRed_green_blue_alpha_, v8, &v7, &v6, &v5);

    if (v2)
    {
      *(float *)&v3 = v8[0];
      *(float *)&v4 = v7;
      return (void *)(v3 | ((unint64_t)v4 << 32));
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t static Color.white(alpha:)()
{
  return 0x3F8000003F800000;
}

uint64_t static Color.black(alpha:)()
{
  return 0;
}

uint64_t static Color.white.getter()
{
  return 0x3F8000003F800000;
}

uint64_t static Color.black.getter()
{
  return 0;
}

uint64_t sub_22A6360EC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t DispatchSourceTimerProviding.makeTimer(fireInterval:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  void *v10;
  uint64_t v11;

  sub_22A636C0C(0, (unint64_t *)&qword_255AFECB0);
  v10 = (void *)sub_22A6A5F7C();
  v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, double))(a4 + 8))(v10, a1, a2, a3, a4, a5);

  return v11;
}

uint64_t DispatchSourceTimerProviding.makeRepeatingTimer(fireInterval:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v10 = sub_22A6A5CB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v13 = 100;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5408], v10);
  v14 = DispatchSourceTimerProviding.makeRepeatingTimer(fireInterval:leewayInterval:handler:)((uint64_t)v13, a1, a2, a3, a4, a5);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  return v14;
}

uint64_t DispatchSourceTimerProviding.makeRepeatingTimer(fireInterval:leewayInterval:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  void *v12;
  uint64_t v13;

  sub_22A636C0C(0, (unint64_t *)&qword_255AFECB0);
  v12 = (void *)sub_22A6A5F7C();
  v13 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, double))(a5 + 16))(a1, v12, a2, a3, a4, a5, a6);

  return v13;
}

uint64_t dispatch thunk of DispatchSourceTimerProviding.makeTimer(fireInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of DispatchSourceTimerProviding.makeRepeatingTimer(fireInterval:leewayInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

ValueMetadata *type metadata accessor for DispatchSourceTimeProvider()
{
  return &type metadata for DispatchSourceTimeProvider;
}

uint64_t sub_22A636364()
{
  sub_22A6A5CC4();
  sub_22A6354A0((unint64_t *)&qword_255AFF128, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF130);
  sub_22A636CA0((unint64_t *)&qword_255AFF138, &qword_255AFF130);
  return sub_22A6A6048();
}

uint64_t sub_22A636410(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x22E2DF4AC](v3);
  if (!result || (swift_getObjectType(), v5 = sub_22A6A5FB8(), result = swift_unknownObjectRelease(), (v5 & 1) == 0))
  {
    if (a2)
      return a2();
  }
  return result;
}

uint64_t sub_22A636494(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[7];

  v49 = a2;
  v50 = a3;
  v47 = a1;
  v5 = sub_22A6A5CC4();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22A6A5CE8();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22A6A5CB8();
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v44 = (char *)&v41 - v13;
  v43 = sub_22A6A5D00();
  v42 = *(_QWORD *)(v43 - 8);
  v14 = MEMORY[0x24BDAC7A8](v43);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - v17;
  v19 = sub_22A6A5FA0();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0];
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A636C0C(0, &qword_255AFF108);
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22A6354A0(&qword_255AFF110, v20, MEMORY[0x24BEE57D0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF118);
  sub_22A636CA0(&qword_255AFF120, &qword_255AFF118);
  sub_22A6A6048();
  v24 = sub_22A6A5FAC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
  ObjectType = swift_getObjectType();
  sub_22A6A5CF4();
  MEMORY[0x22E2DE768](v16, a4);
  v26 = *(void (**)(char *, uint64_t))(v42 + 8);
  v27 = v43;
  v26(v16, v43);
  v29 = v44;
  v28 = v45;
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v45 + 104);
  v31 = v46;
  v30(v44, *MEMORY[0x24BEE5418], v46);
  *(_QWORD *)v12 = 0;
  v30(v12, *MEMORY[0x24BEE5400], v31);
  MEMORY[0x22E2DEA38](v18, v29, v12, ObjectType);
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v12, v31);
  v32(v29, v31);
  v26(v18, v27);
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = (_QWORD *)swift_allocObject();
  v36 = v49;
  v35 = v50;
  v34[2] = v33;
  v34[3] = v36;
  v34[4] = v35;
  aBlock[4] = sub_22A636D20;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22A6360EC;
  aBlock[3] = &block_descriptor_10;
  v37 = _Block_copy(aBlock);
  swift_retain();
  sub_22A62A1BC(v36);
  v38 = v48;
  sub_22A6A5CDC();
  v39 = v51;
  sub_22A636364();
  sub_22A6A5FC4();
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v53);
  swift_release();
  swift_release();
  sub_22A6A5FD0();
  return v24;
}

uint64_t sub_22A6368D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v32 = a3;
  v33 = a4;
  v29 = a2;
  v30 = a1;
  v6 = sub_22A6A5CC4();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22A6A5CE8();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22A6A5D00();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22A6A5FA0();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0];
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A636C0C(0, &qword_255AFF108);
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22A6354A0(&qword_255AFF110, v15, MEMORY[0x24BEE57D0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF118);
  sub_22A636CA0(&qword_255AFF120, &qword_255AFF118);
  sub_22A6A6048();
  v19 = sub_22A6A5FAC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
  ObjectType = swift_getObjectType();
  sub_22A6A5CF4();
  MEMORY[0x22E2DEA44](v13, v30, ObjectType, a5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = (_QWORD *)swift_allocObject();
  v24 = v32;
  v23 = v33;
  v22[2] = v21;
  v22[3] = v24;
  v22[4] = v23;
  aBlock[4] = sub_22A636C6C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22A6360EC;
  aBlock[3] = &block_descriptor_0;
  v25 = _Block_copy(aBlock);
  swift_retain();
  sub_22A62A1BC(v24);
  v26 = v31;
  sub_22A6A5CDC();
  v27 = v34;
  sub_22A636364();
  sub_22A6A5FC4();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
  swift_release();
  swift_release();
  sub_22A6A5FD0();
  return v19;
}

uint64_t sub_22A636C0C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_22A636C44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A636C6C()
{
  uint64_t v0;

  return sub_22A636410(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_22A636CA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

unint64_t sub_22A636D24(uint64_t a1)
{
  unint64_t result;

  result = sub_22A636D48();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A636D48()
{
  unint64_t result;

  result = qword_255AFF140;
  if (!qword_255AFF140)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255AFF140);
  }
  return result;
}

uint64_t sub_22A636D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  void (*v24)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[20];
  int v39;
  _BYTE v40[64];

  v37 = a2;
  v4 = type metadata accessor for RenderLayerType();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (_DWORD *)((char *)&v35 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (_DWORD *)((char *)&v35 - v17);
  sub_22A62981C(a1, (uint64_t)v40, &qword_255AFF1B8);
  if ((unint64_t)v40[61] << 40 != 0x20000000000)
  {
    v23 = *(_DWORD *)(v2 + 20);
    *v18 = v23;
    swift_storeEnumTagMultiPayload();
    v24 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56);
    v24(v18, 0, 1, v4);
    sub_22A62981C(a1, (uint64_t)v38, &qword_255AFF1B8);
    *v16 = v39;
    swift_storeEnumTagMultiPayload();
    v24(v16, 0, 1, v4);
    v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_22A62F9B8((uint64_t)v18, (uint64_t)v9, &qword_255AFF1A8);
    sub_22A62F9B8((uint64_t)v16, v25, &qword_255AFF1A8);
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v26((uint64_t)v9, 1, v4) == 1)
    {
      sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
      sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
      if (v26(v25, 1, v4) == 1)
      {
        sub_22A629860((uint64_t)v9, &qword_255AFF1A8);
        return MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      sub_22A62F9B8((uint64_t)v9, (uint64_t)v13, &qword_255AFF1A8);
      if (v26(v25, 1, v4) != 1)
      {
        v28 = v36;
        sub_22A638950(v25, v36);
        sub_22A635054((uint64_t)v13, v28);
        v30 = v29;
        sub_22A633AE8(v28, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
        sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
        sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
        sub_22A633AE8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
        sub_22A629860((uint64_t)v9, &qword_255AFF1A8);
        v27 = v37;
        if ((v30 & 1) != 0)
          return MEMORY[0x24BEE4AF8];
LABEL_11:
        __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_22A6A77C0;
        v31 = type metadata accessor for RenderLayerAction();
        *(_QWORD *)(v19 + 56) = v31;
        *(_QWORD *)(v19 + 64) = sub_22A6388A4();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
        *(_DWORD *)((char *)boxed_opaque_existential_1 + *(int *)(v31 + 20)) = v23;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for RenderLayerActionType();
        swift_storeEnumTagMultiPayload();
        v33 = sub_22A6A5C40();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_1, v27, v33);
        return v19;
      }
      sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
      sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
      sub_22A633AE8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    }
    sub_22A629860((uint64_t)v9, &qword_255AFF1A0);
    v27 = v37;
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22A6A77C0;
  v20 = type metadata accessor for RenderLayerAction();
  *(_QWORD *)(v19 + 56) = v20;
  *(_QWORD *)(v19 + 64) = sub_22A6388A4();
  v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
  *(_DWORD *)((char *)v21 + *(int *)(v20 + 20)) = *(_DWORD *)(v2 + 20);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RenderLayerActionType();
  swift_storeEnumTagMultiPayload();
  v22 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v37, v22);
  return v19;
}

uint64_t sub_22A637230(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];
  __int128 v54;
  uint64_t v55;
  _BYTE v56[16];
  uint64_t v57;

  v52 = a2;
  v4 = type metadata accessor for RenderLayerType();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A0);
  MEMORY[0x24BDAC7A8](v51);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v45 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v45 - v17;
  sub_22A62981C((uint64_t)a1, (uint64_t)v56, &qword_255AFF148);
  if (!v57)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_22A6A77C0;
    v27 = type metadata accessor for RenderLayerAction();
    *(_QWORD *)(v26 + 56) = v27;
    *(_QWORD *)(v26 + 64) = sub_22A6388A4();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v26 + 32));
    v29 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v27 + 20));
    v30 = v2[1];
    v31 = v2[2];
    v32 = v2[5];
    *v29 = v30;
    v29[1] = v31;
    v29[2] = v32;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for RenderLayerActionType();
    swift_storeEnumTagMultiPayload();
    v33 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_1, v52, v33);
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRetain();
    return v26;
  }
  v46 = v7;
  v47 = v13;
  v19 = (uint64_t)v9;
  v20 = v2[2];
  v21 = v2[5];
  v48 = v2[1];
  *(_QWORD *)v18 = v48;
  *((_QWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 2) = v21;
  swift_storeEnumTagMultiPayload();
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v22(v18, 0, 1, v4);
  sub_22A62981C((uint64_t)a1, (uint64_t)v53, &qword_255AFF148);
  v23 = v55;
  *(_OWORD *)v16 = v54;
  *((_QWORD *)v16 + 2) = v23;
  swift_storeEnumTagMultiPayload();
  v49 = v20;
  swift_bridgeObjectRetain();
  v50 = v21;
  swift_bridgeObjectRetain();
  sub_22A6388EC(a1);
  v22(v16, 0, 1, v4);
  v24 = v19 + *(int *)(v51 + 48);
  sub_22A62F9B8((uint64_t)v18, v19, &qword_255AFF1A8);
  sub_22A62F9B8((uint64_t)v16, v24, &qword_255AFF1A8);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25(v19, 1, v4) != 1)
  {
    v34 = (uint64_t)v47;
    sub_22A62F9B8(v19, (uint64_t)v47, &qword_255AFF1A8);
    if (v25(v24, 1, v4) != 1)
    {
      v36 = (uint64_t)v46;
      sub_22A638950(v24, (uint64_t)v46);
      sub_22A635054(v34, v36);
      v38 = v37;
      sub_22A633AE8(v36, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
      sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
      sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
      sub_22A633AE8(v34, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
      sub_22A629860(v19, &qword_255AFF1A8);
      v35 = v52;
      if ((v38 & 1) != 0)
        return MEMORY[0x24BEE4AF8];
      goto LABEL_11;
    }
    sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
    sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
    sub_22A633AE8(v34, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
LABEL_8:
    sub_22A629860(v19, &qword_255AFF1A0);
    v35 = v52;
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_22A6A77C0;
    v39 = type metadata accessor for RenderLayerAction();
    *(_QWORD *)(v26 + 56) = v39;
    *(_QWORD *)(v26 + 64) = sub_22A6388A4();
    v40 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v26 + 32));
    v41 = (uint64_t *)((char *)v40 + *(int *)(v39 + 20));
    v42 = v49;
    *v41 = v48;
    v41[1] = v42;
    v41[2] = v50;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for RenderLayerActionType();
    swift_storeEnumTagMultiPayload();
    v43 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v35, v43);
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  sub_22A629860((uint64_t)v16, &qword_255AFF1A8);
  sub_22A629860((uint64_t)v18, &qword_255AFF1A8);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_8;
  sub_22A629860(v19, &qword_255AFF1A8);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_22A637740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v3 = v2;
  v48 = a2;
  v5 = type metadata accessor for RenderLayerType();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A0);
  MEMORY[0x24BDAC7A8](v46);
  v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B011E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v45 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  v20 = type metadata accessor for ImageContent(0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  if (v21((char *)a1, 1, v20) != 1)
  {
    v42 = v3;
    sub_22A638994(v3, (uint64_t)v19);
    swift_storeEnumTagMultiPayload();
    v43 = v6;
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v26(v19, 0, 1, v5);
    sub_22A62F9B8(a1, (uint64_t)v11, (uint64_t *)&unk_255B011E0);
    if (v21(v11, 1, v20) == 1)
    {
      sub_22A629860((uint64_t)v11, (uint64_t *)&unk_255B011E0);
      v27 = 1;
    }
    else
    {
      sub_22A638994((uint64_t)v11, (uint64_t)v17);
      swift_storeEnumTagMultiPayload();
      sub_22A633AE8((uint64_t)v11, type metadata accessor for ImageContent);
      v27 = 0;
    }
    v28 = (uint64_t)v47;
    v29 = v48;
    v26(v17, v27, 1, v5);
    v30 = v28 + *(int *)(v46 + 48);
    sub_22A62F9B8((uint64_t)v19, v28, &qword_255AFF1A8);
    sub_22A62F9B8((uint64_t)v17, v30, &qword_255AFF1A8);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v31(v28, 1, v5) == 1)
    {
      sub_22A629860((uint64_t)v17, &qword_255AFF1A8);
      sub_22A629860((uint64_t)v19, &qword_255AFF1A8);
      if (v31(v30, 1, v5) == 1)
      {
        sub_22A629860(v28, &qword_255AFF1A8);
        return MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      v32 = v45;
      sub_22A62F9B8(v28, v45, &qword_255AFF1A8);
      if (v31(v30, 1, v5) != 1)
      {
        v34 = v44;
        sub_22A638950(v30, v44);
        sub_22A635054(v32, v34);
        v36 = v35;
        sub_22A633AE8(v34, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
        sub_22A629860((uint64_t)v17, &qword_255AFF1A8);
        sub_22A629860((uint64_t)v19, &qword_255AFF1A8);
        sub_22A633AE8(v32, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
        sub_22A629860(v28, &qword_255AFF1A8);
        v33 = v42;
        if ((v36 & 1) != 0)
          return MEMORY[0x24BEE4AF8];
LABEL_14:
        __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_22A6A77C0;
        v37 = type metadata accessor for RenderLayerAction();
        *(_QWORD *)(v22 + 56) = v37;
        *(_QWORD *)(v22 + 64) = sub_22A6388A4();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
        sub_22A638994(v33, (uint64_t)boxed_opaque_existential_1 + *(int *)(v37 + 20));
        swift_storeEnumTagMultiPayload();
        type metadata accessor for RenderLayerActionType();
        swift_storeEnumTagMultiPayload();
        v39 = sub_22A6A5C40();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(boxed_opaque_existential_1, v29, v39);
        return v22;
      }
      sub_22A629860((uint64_t)v17, &qword_255AFF1A8);
      sub_22A629860((uint64_t)v19, &qword_255AFF1A8);
      sub_22A633AE8(v32, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    }
    sub_22A629860(v28, &qword_255AFF1A0);
    v33 = v42;
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_22A6A77C0;
  v23 = type metadata accessor for RenderLayerAction();
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = sub_22A6388A4();
  v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
  sub_22A638994(v3, (uint64_t)v24 + *(int *)(v23 + 20));
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RenderLayerActionType();
  swift_storeEnumTagMultiPayload();
  v25 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v48, v25);
  return v22;
}

uint64_t sub_22A637CAC(_QWORD *a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  uint64_t result;
  char v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  float v45;
  __int128 v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void (*v52)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  float v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  __int128 v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  float v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116[6];
  __int128 v117;
  __int128 v118;
  __int128 v119;
  char v120[16];
  uint64_t v121;
  _QWORD v122[6];
  _QWORD v123[4];
  char v124;
  char v125[16];
  uint64_t v126;
  char v127;
  char v128[8];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  _QWORD *v138;

  sub_22A62981C((uint64_t)a1, (uint64_t)v116, &qword_255AFF148);
  v6 = a1[1];
  v104 = (_QWORD *)*a1;
  v8 = a1[2];
  v7 = a1[3];
  v10 = a1[4];
  v9 = a1[5];
  v11 = v2[1];
  v117 = *v2;
  v118 = v11;
  v119 = v2[2];
  result = sub_22A637230(v116, a2);
  if (v3)
    return result;
  v98 = v8;
  v99 = v7;
  v100 = v6;
  v101 = v10;
  v13 = (char)v104;
  v102 = 0;
  v103 = a2;
  v14 = (_QWORD *)sub_22A66658C(result);
  swift_bridgeObjectRelease();
  sub_22A62981C((uint64_t)v116, (uint64_t)v120, &qword_255AFF148);
  if (v121)
  {
    v15 = v117;
    if ((sub_22A640DA4(v120[0], v117) & 1) != 0)
    {
      v17 = v100;
      v16 = v101;
      v18 = v101 >> 8;
      v20 = v98;
      v19 = v99;
      goto LABEL_12;
    }
  }
  else
  {
    v15 = v117;
  }
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF150);
  *((_QWORD *)&v114 + 1) = v21;
  *(_QWORD *)&v115 = sub_22A628928(&qword_255AFF158, &qword_255AFF150);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v113);
  v23 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(boxed_opaque_existential_1, v103, v23);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v21 + 36)) = 20;
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v21 + 40)) = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
  v25 = v14[2];
  v24 = v14[3];
  if (v25 >= v24 >> 1)
    v14 = sub_22A62F20C((_QWORD *)(v24 > 1), v25 + 1, 1, v14);
  v14[2] = v25 + 1;
  sub_22A62981C((uint64_t)&v113, (uint64_t)&v14[5 * v25 + 4], (uint64_t *)&unk_255B01090);
  sub_22A62981C((uint64_t)v116, (uint64_t)v128, &qword_255AFF148);
  v20 = v130;
  if (!v130)
  {
    v26 = 0;
    v28 = 0;
    v30 = -1;
    goto LABEL_14;
  }
  v13 = v128[0];
  v17 = v129;
  v19 = v131;
  v16 = v132;
  LOBYTE(v18) = v133;
  v9 = v134;
LABEL_12:
  LOBYTE(v113) = v13;
  *((_QWORD *)&v113 + 1) = v17;
  *(_QWORD *)&v114 = v20;
  *((_QWORD *)&v114 + 1) = v19;
  LOBYTE(v115) = v16;
  BYTE1(v115) = v18;
  *((_QWORD *)&v115 + 1) = v9;
  v26 = TextContent.color.getter();
  v28 = v27;
  v30 = v29;
LABEL_14:
  v113 = v117;
  v114 = v118;
  v115 = v119;
  v31 = TextContent.color.getter();
  if (v30 == -1 || (_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(v26, v28, v30, v31, v32, v33) & 1) == 0)
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
    v111 = v34;
    v112 = sub_22A628928((unint64_t *)&unk_255B010A0, &qword_255AFEC08);
    v35 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
    v36 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v35, v103, v36);
    v113 = v117;
    v114 = v118;
    v115 = v119;
    v37 = TextContent.color.getter();
    *((_BYTE *)v35 + *(int *)(v34 + 36)) = 4;
    v38 = (char *)v35 + *(int *)(v34 + 40);
    *(_QWORD *)v38 = v37;
    *((_QWORD *)v38 + 1) = v39;
    v38[16] = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
    v42 = v14[2];
    v41 = v14[3];
    if (v42 >= v41 >> 1)
      v14 = sub_22A62F20C((_QWORD *)(v41 > 1), v42 + 1, 1, v14);
    v14[2] = v42 + 1;
    sub_22A62981C((uint64_t)&v109, (uint64_t)&v14[5 * v42 + 4], (uint64_t *)&unk_255B01090);
  }
  sub_22A62981C((uint64_t)v116, (uint64_t)&v135, &qword_255AFF148);
  if ((_QWORD)v136)
  {
    v113 = v135;
    v114 = v136;
    v115 = v137;
    TextContent.font.getter((uint64_t)&v109);
    v43 = *((_QWORD *)&v109 + 1);
    v44 = v109;
    v45 = v110;
  }
  else
  {
    v44 = 0;
    v45 = 0.0;
    v43 = 1;
  }
  v113 = v117;
  v114 = v118;
  v115 = v119;
  TextContent.font.getter((uint64_t)&v109);
  v46 = v109;
  v47 = v110;
  if (v43 != 1)
  {
    v72 = v45;
    if (v43)
    {
      v48 = v103;
      if (!*((_QWORD *)&v109 + 1))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      if (__PAIR128__(v43, v44) != v109)
      {
        v96 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v96 & 1) == 0)
          goto LABEL_26;
LABEL_83:
        if (v47 == v72)
          goto LABEL_33;
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v48 = v103;
      if (*((_QWORD *)&v46 + 1))
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
  sub_22A638890(v44, 1);
  sub_22A638890(v46, *((uint64_t *)&v46 + 1));
  v48 = v103;
LABEL_26:
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF160);
  v111 = v49;
  v112 = sub_22A628928(&qword_255AFF168, &qword_255AFF160);
  v50 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
  v51 = sub_22A6A5C40();
  v52 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
  v52(v50, v48, v51);
  v113 = v117;
  v114 = v118;
  v115 = v119;
  TextContent.font.getter((uint64_t)&v105);
  *((_BYTE *)v50 + *(int *)(v49 + 36)) = 23;
  *(_OWORD *)((char *)v50 + *(int *)(v49 + 40)) = v105;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
  v53 = v14;
  v54 = v14[2];
  v55 = v53;
  v56 = v53[3];
  if (v54 >= v56 >> 1)
    v55 = sub_22A62F20C((_QWORD *)(v56 > 1), v54 + 1, 1, v53);
  v55[2] = v54 + 1;
  v57 = &v55[5 * v54];
  v14 = v55;
  sub_22A62981C((uint64_t)&v109, (uint64_t)(v57 + 4), (uint64_t *)&unk_255B01090);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
  v111 = v58;
  v112 = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
  v59 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
  v52(v59, v48, v51);
  v113 = v117;
  v114 = v118;
  v115 = v119;
  TextContent.font.getter((uint64_t)&v105);
  v60 = v106;
  swift_bridgeObjectRelease();
  *((_BYTE *)v59 + *(int *)(v58 + 36)) = 24;
  *(_DWORD *)((char *)v59 + *(int *)(v58 + 40)) = v60;
  v62 = v14[2];
  v61 = v14[3];
  if (v62 >= v61 >> 1)
    v14 = sub_22A62F20C((_QWORD *)(v61 > 1), v62 + 1, 1, v14);
  v14[2] = v62 + 1;
  sub_22A62981C((uint64_t)&v109, (uint64_t)&v14[5 * v62 + 4], (uint64_t *)&unk_255B01090);
LABEL_33:
  sub_22A62981C((uint64_t)v116, (uint64_t)v122, &qword_255AFF148);
  if (v122[2] && v122[3] == *((_QWORD *)&v118 + 1))
  {
    v63 = v101;
    goto LABEL_42;
  }
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF170);
  *((_QWORD *)&v114 + 1) = v64;
  *(_QWORD *)&v115 = sub_22A628928(&qword_255AFF178, &qword_255AFF170);
  v65 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v113);
  v66 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v65, v48, v66);
  v67 = *((_QWORD *)&v118 + 1);
  *((_BYTE *)v65 + *(int *)(v64 + 36)) = 10;
  *(uint64_t *)((char *)v65 + *(int *)(v64 + 40)) = v67;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
  v69 = v14[2];
  v68 = v14[3];
  if (v69 >= v68 >> 1)
    v14 = sub_22A62F20C((_QWORD *)(v68 > 1), v69 + 1, 1, v14);
  v14[2] = v69 + 1;
  sub_22A62981C((uint64_t)&v113, (uint64_t)&v14[5 * v69 + 4], (uint64_t *)&unk_255B01090);
  sub_22A62981C((uint64_t)v116, (uint64_t)v123, &qword_255AFF148);
  if (v123[2])
  {
    v63 = v124;
LABEL_42:
    v70 = v119;
    sub_22A640E28(v63);
    if ((v71 & 1) != 0)
      goto LABEL_54;
    goto LABEL_49;
  }
  v70 = v119;
LABEL_49:
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF180);
  *((_QWORD *)&v114 + 1) = v73;
  *(_QWORD *)&v115 = sub_22A628928(&qword_255AFF188, &qword_255AFF180);
  v74 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v113);
  v75 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v74, v48, v75);
  *((_BYTE *)v74 + *(int *)(v73 + 36)) = 21;
  *((_BYTE *)v74 + *(int *)(v73 + 40)) = v70;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
  v77 = v14[2];
  v76 = v14[3];
  if (v77 >= v76 >> 1)
    v14 = sub_22A62F20C((_QWORD *)(v76 > 1), v77 + 1, 1, v14);
  v14[2] = v77 + 1;
  sub_22A62981C((uint64_t)&v113, (uint64_t)&v14[5 * v77 + 4], (uint64_t *)&unk_255B01090);
LABEL_54:
  sub_22A62981C((uint64_t)v116, (uint64_t)v125, &qword_255AFF148);
  if (!v126)
  {
    v78 = BYTE1(v119);
    goto LABEL_58;
  }
  v78 = BYTE1(v119);
  sub_22A640FDC(v127);
  if ((v79 & 1) == 0)
  {
LABEL_58:
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF190);
    *((_QWORD *)&v114 + 1) = v80;
    *(_QWORD *)&v115 = sub_22A628928(&qword_255AFF198, &qword_255AFF190);
    v81 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v113);
    v82 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v81, v48, v82);
    *((_BYTE *)v81 + *(int *)(v80 + 36)) = 22;
    *((_BYTE *)v81 + *(int *)(v80 + 40)) = v78;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_22A62F20C(0, v14[2] + 1, 1, v14);
    v84 = v14[2];
    v83 = v14[3];
    if (v84 >= v83 >> 1)
      v14 = sub_22A62F20C((_QWORD *)(v83 > 1), v84 + 1, 1, v14);
    v14[2] = v84 + 1;
    sub_22A62981C((uint64_t)&v113, (uint64_t)&v14[5 * v84 + 4], (uint64_t *)&unk_255B01090);
  }
  v138 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v85 = v14[2];
  if (v85)
  {
    v86 = (uint64_t)(v14 + 4);
    v104 = v14;
    swift_bridgeObjectRetain();
    do
    {
      sub_22A62F9B8(v86, (uint64_t)&v113, (uint64_t *)&unk_255B01090);
      sub_22A62981C((uint64_t)&v113, (uint64_t)&v105, (uint64_t *)&unk_255B01090);
      if (v107)
      {
        sub_22A628A38(&v105, (uint64_t)&v109);
        sub_22A628A38(&v109, (uint64_t)&v105);
        v87 = v138;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v87 = sub_22A62F0EC(0, v87[2] + 1, 1, v87);
          v138 = v87;
        }
        v89 = v87[2];
        v88 = v87[3];
        if (v89 >= v88 >> 1)
          v138 = sub_22A62F0EC((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
        v90 = v107;
        v91 = v108;
        v92 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v105, v107);
        MEMORY[0x24BDAC7A8](v92);
        v94 = (char *)&v97 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v95 + 16))(v94);
        sub_22A69874C(v89, (uint64_t)v94, (uint64_t *)&v138, v90, v91);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        sub_22A629860((uint64_t)&v105, (uint64_t *)&unk_255B01090);
      }
      v86 += 40;
      --v85;
    }
    while (v85);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v138;
}

uint64_t sub_22A63887C(_QWORD *a1, uint64_t a2)
{
  return sub_22A637CAC(a1, a2);
}

uint64_t sub_22A638890(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_22A6388A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFF1B0;
  if (!qword_255AFF1B0)
  {
    v1 = type metadata accessor for RenderLayerAction();
    result = MEMORY[0x22E2DF32C](&unk_22A6A7D70, v1);
    atomic_store(result, (unint64_t *)&qword_255AFF1B0);
  }
  return result;
}

uint64_t *sub_22A6388EC(uint64_t *a1)
{
  sub_22A638920(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_22A638920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22A638950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenderLayerType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A638994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageContent.ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static RenderNode<>.text(identifier:content:font:color:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;

  v16 = *a4;
  v15 = a4[1];
  v32 = *((_DWORD *)a4 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_22A6A5DF0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v18 = result;
    v31 = v16;
    result = sub_22A6A5DF0();
    if ((result & 0x8000000000000000) == 0)
    {
      v19 = result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
      *(_QWORD *)(inited + 32) = v31;
      *(_QWORD *)(inited + 40) = v15;
      *(_DWORD *)(inited + 48) = v32;
      *(_BYTE *)(inited + 52) = 4;
      *(_QWORD *)(inited + 56) = 0;
      *(_QWORD *)(inited + 64) = v18;
      *(_QWORD *)(inited + 72) = a5;
      *(_QWORD *)(inited + 80) = a6;
      *(_DWORD *)(inited + 88) = a7;
      *(_BYTE *)(inited + 92) = 5;
      *(_QWORD *)(inited + 96) = 0;
      *(_QWORD *)(inited + 104) = v19;
      v21 = sub_22A63977C(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v22 = sub_22A6A5C40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a8, a1, v22);
      result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
      v23 = a8 + *(int *)(result + 36);
      *(_BYTE *)v23 = 0;
      *(_QWORD *)(v23 + 8) = a2;
      *(_QWORD *)(v23 + 16) = a3;
      *(_QWORD *)(v23 + 24) = 1;
      *(_WORD *)(v23 + 32) = 0;
      *(_QWORD *)(v23 + 40) = v21;
      *(_BYTE *)(a8 + *(int *)(result + 40)) = 0;
      v24 = (_QWORD *)(a8 + *(int *)(result + 44));
      *v24 = 0;
      v24[1] = 0;
      *(_QWORD *)((char *)v24 + 14) = 0;
      v25 = a8 + *(int *)(result + 48);
      *(_QWORD *)v25 = 0;
      *(_WORD *)(v25 + 12) = 0;
      *(_DWORD *)(v25 + 8) = 0;
      v26 = a8 + *(int *)(result + 52);
      *(_QWORD *)v26 = 0x3F0000003F000000;
      *(_BYTE *)(v26 + 8) = 0;
      v27 = a8 + *(int *)(result + 56);
      *(_OWORD *)v27 = xmmword_22A6A77B0;
      *(_QWORD *)(v27 + 16) = 0;
      *(_BYTE *)(v27 + 24) = 0;
      v28 = a8 + *(int *)(result + 60);
      *(_QWORD *)v28 = 1065353216;
      *(_BYTE *)(v28 + 8) = 0;
      v29 = a8 + *(int *)(result + 64);
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      *(_BYTE *)(v29 + 16) = 2;
      *(_DWORD *)(a8 + *(int *)(result + 68)) = 0;
      v30 = (_QWORD *)(a8 + *(int *)(result + 72));
      *v30 = 0;
      v30[1] = 0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t RenderNode<>.withAttributedString(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int16 v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v7 = v3 + *(int *)(v6 + 36);
  v8 = *(_QWORD *)(v7 + 24);
  v9 = *(_BYTE *)v7;
  v10 = *(_WORD *)(v7 + 32);
  v11 = a1;
  v12 = objc_msgSend(v11, sel_string);
  v13 = sub_22A6A5D84();
  v15 = v14;

  v16 = sub_22A63A9F8();
  sub_22A63A310(v3, a2);
  v17 = a2 + *(int *)(v6 + 36);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v17 = v9;
  *(_QWORD *)(v17 + 8) = v13;
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v8;
  *(_WORD *)(v17 + 32) = v10;
  *(_QWORD *)(v17 + 40) = v16;
  return result;
}

uint64_t RenderNode<>.withTextContent(_:attributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int16 v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A63A310(v5, (uint64_t)v12);
  if (a3)
  {
    v13 = a3;
  }
  else
  {
    v13 = *(_QWORD *)&v12[*(int *)(v10 + 36) + 40];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_22A63A358((uint64_t)v12);
  v14 = v5 + *(int *)(v10 + 36);
  v15 = *(_QWORD *)(v14 + 24);
  v16 = *(_BYTE *)v14;
  v17 = *(_WORD *)(v14 + 32);
  sub_22A63A310(v5, a4);
  v18 = a4 + *(int *)(v10 + 36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v18 = v16;
  *(_QWORD *)(v18 + 8) = a1;
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v15;
  *(_WORD *)(v18 + 32) = v17;
  *(_QWORD *)(v18 + 40) = v13;
  return result;
}

uint64_t RenderNode<>.withFont(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_DWORD *)a1 + 4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v8 = v2 + *(int *)(v7 + 36);
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(_QWORD *)(v8 + 16);
  result = sub_22A6A5DF0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v12 = result;
    v13 = swift_bridgeObjectRetain();
    v23 = v9;
    v14 = sub_22A63931C(v13, (uint64_t (*)(char *, unint64_t, uint64_t))sub_22A639484);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
    v22 = v7;
    v15 = a2;
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v5;
    *(_DWORD *)(inited + 48) = v6;
    *(_BYTE *)(inited + 52) = 4;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_22A63A398(inited, v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    v18 = *(_QWORD *)(v8 + 24);
    v19 = *(_BYTE *)v8;
    v20 = *(_WORD *)(v8 + 32);
    sub_22A63A310(v2, v15);
    v21 = v15 + *(int *)(v22 + 36);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)v21 = v19;
    *(_QWORD *)(v21 + 8) = v23;
    *(_QWORD *)(v21 + 16) = v10;
    *(_QWORD *)(v21 + 24) = v18;
    *(_WORD *)(v21 + 32) = v20;
    *(_QWORD *)(v21 + 40) = v17;
  }
  return result;
}

uint64_t RenderNode<>.withColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v10 = v4 + *(int *)(v9 + 36);
  v11 = *(_QWORD *)(v10 + 8);
  v12 = *(_QWORD *)(v10 + 16);
  result = sub_22A6A5DF0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v14 = result;
    v15 = swift_bridgeObjectRetain();
    v26 = v11;
    v16 = a2;
    v17 = sub_22A63931C(v15, (uint64_t (*)(char *, unint64_t, uint64_t))sub_22A639600);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
    inited = swift_initStackObject();
    v19 = a1;
    v20 = inited;
    *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(inited + 40) = v16;
    *(_DWORD *)(inited + 48) = a3;
    *(_BYTE *)(inited + 52) = 5;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = v14;
    swift_bridgeObjectRetain();
    v21 = sub_22A63A398(v20, v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    v22 = *(_QWORD *)(v10 + 24);
    v23 = *(_BYTE *)v10;
    v24 = *(_WORD *)(v10 + 32);
    sub_22A63A310(v4, a4);
    v25 = a4 + *(int *)(v9 + 36);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)v25 = v23;
    *(_QWORD *)(v25 + 8) = v26;
    *(_QWORD *)(v25 + 16) = v12;
    *(_QWORD *)(v25 + 24) = v22;
    *(_WORD *)(v25 + 32) = v24;
    *(_QWORD *)(v25 + 40) = v21;
  }
  return result;
}

uint64_t RenderNode<>.withTruncationMode(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t result;

  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v6 = v2 + *(int *)(v5 + 36);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 40);
  v10 = *(_QWORD *)(v6 + 24);
  v11 = *(_BYTE *)v6;
  v12 = *(_BYTE *)(v6 + 32);
  sub_22A63A310(v2, a2);
  v13 = a2 + *(int *)(v5 + 36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v13 = v11;
  *(_QWORD *)(v13 + 8) = v8;
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v10;
  *(_BYTE *)(v13 + 32) = v12;
  *(_BYTE *)(v13 + 33) = v4;
  *(_QWORD *)(v13 + 40) = v9;
  return result;
}

uint64_t RenderNode<>.withAlignment(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t result;

  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v6 = v2 + *(int *)(v5 + 36);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 40);
  v10 = *(_QWORD *)(v6 + 24);
  v11 = *(_WORD *)(v6 + 32);
  sub_22A63A310(v2, a2);
  v12 = a2 + *(int *)(v5 + 36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v12 = v4;
  *(_QWORD *)(v12 + 8) = v8;
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v10;
  *(_WORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = v9;
  return result;
}

uint64_t RenderNode<>.withTextLayout(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t result;

  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v6 = v2 + *(int *)(v5 + 36);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v6 + 16);
  v9 = *(_QWORD *)(v6 + 40);
  v10 = *(_QWORD *)(v6 + 24);
  v11 = *(_BYTE *)v6;
  v12 = *(_BYTE *)(v6 + 33);
  sub_22A63A310(v2, a2);
  v13 = a2 + *(int *)(v5 + 36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)v13 = v11;
  *(_QWORD *)(v13 + 8) = v8;
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v10;
  *(_BYTE *)(v13 + 32) = v4;
  *(_BYTE *)(v13 + 33) = v12;
  *(_QWORD *)(v13 + 40) = v9;
  return result;
}

uint64_t sub_22A63931C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x22E2DF3F8](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_22A639484(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 48) + 40 * v14 + 20) != 4)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_22A66B848(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22A639600(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 48) + 40 * v14 + 20) != 5)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_22A66B848(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22A63977C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B08];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C8);
  v3 = sub_22A6A60A8();
  v4 = 0;
  v21 = v3 + 56;
  v19 = a1 + 32;
  do
  {
    v5 = v19 + 40 * v4;
    v6 = *(_QWORD *)v5;
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(unsigned int *)(v5 + 16);
    v9 = *(_BYTE *)(v5 + 20);
    v10 = *(_QWORD *)(v5 + 24);
    v11 = *(_QWORD *)(v5 + 32);
    sub_22A6A6258();
    sub_22A635434(v6, v7, v8, v9);
    TextAttribute.hash(into:)();
    sub_22A6A6264();
    v20 = v11;
    sub_22A6A6264();
    v12 = sub_22A6A62A0() & ~(-1 << *(_BYTE *)(v3 + 32));
    v13 = *(_QWORD *)(v21 + 8 * (v12 >> 6));
    if (((1 << v12) & v13) != 0)
      __asm { BR              X8 }
    *(_QWORD *)(v21 + 8 * (v12 >> 6)) = (1 << v12) | v13;
    v14 = *(_QWORD *)(v3 + 48) + 40 * v12;
    *(_QWORD *)v14 = v6;
    *(_QWORD *)(v14 + 8) = v7;
    *(_DWORD *)(v14 + 16) = v8;
    *(_BYTE *)(v14 + 20) = v9;
    *(_QWORD *)(v14 + 24) = v10;
    *(_QWORD *)(v14 + 32) = v20;
    v15 = *(_QWORD *)(v3 + 16);
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
    {
      __break(1u);
      JUMPOUT(0x22A63A2F4);
    }
    *(_QWORD *)(v3 + 16) = v17;
    ++v4;
  }
  while (v4 != v1);
  return v3;
}

uint64_t sub_22A63A310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A63A358(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A63A398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v6[2];
  unsigned int v7;
  char v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v9 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 32;
    do
    {
      v4 = *(_OWORD *)(v3 + 16);
      v10[0] = *(_OWORD *)v3;
      v10[1] = v4;
      v11 = *(_QWORD *)(v3 + 32);
      sub_22A63A41C((uint64_t)v10);
      sub_22A669F90((uint64_t)v6, (uint64_t)v10);
      sub_22A63544C(v6[0], v6[1], v7, v8);
      v3 += 40;
      --v2;
    }
    while (v2);
    return v9;
  }
  return a2;
}

uint64_t sub_22A63A41C(uint64_t a1)
{
  sub_22A635434(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  return a1;
}

uint64_t AnimationCurve.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) && *(_BYTE *)(v0 + 16) != 1)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t AnimationCurve.hashValue.getter()
{
  sub_22A6A6258();
  AnimationCurve.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A63A594()
{
  sub_22A6A6258();
  AnimationCurve.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A63A5E8()
{
  sub_22A6A6258();
  AnimationCurve.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t _s10AirPlayKit14AnimationCurveO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) != 1)
      return ((uint64_t (*)(void))((char *)&loc_22A63A6D0 + 4 * byte_22A6A7A3C[*(_QWORD *)a1]))();
    if (*(_BYTE *)(a2 + 16) != 1)
      return 0;
  }
  else if (*(_BYTE *)(a2 + 16))
  {
    return 0;
  }
  v2 = *(_QWORD *)(a2 + 8);
  if (COERCE_FLOAT(HIDWORD(*(_QWORD *)(a1 + 8))) == *((float *)&v2 + 1))
    return v2;
  else
    return 0;
}

void sub_22A63A714(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  if (v2 != 2 || v1 != 1 || a1 != 0)
    JUMPOUT(0x22A63A70CLL);
  JUMPOUT(0x22A63A6E0);
}

unint64_t sub_22A63A72C()
{
  unint64_t result;

  result = qword_255AFF1D0;
  if (!qword_255AFF1D0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AnimationCurve, &type metadata for AnimationCurve);
    atomic_store(result, (unint64_t *)&qword_255AFF1D0);
  }
  return result;
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AnimationCurve(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationCurve(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A63A810(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_22A63A828(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnimationCurve()
{
  return &type metadata for AnimationCurve;
}

uint64_t sub_22A63A850()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_22A63A85C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A63A890 + 4 * byte_22A6A7AD8[*v0]))(0xD000000000000010, 0x800000022A6AC6D0);
}

uint64_t sub_22A63A890()
{
  return 0x725764726F577962;
}

uint64_t sub_22A63A8C4()
{
  return 0x697070696C437962;
}

uint64_t sub_22A63A904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A63A85C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A63A928(uint64_t a1)
{
  unint64_t result;

  result = sub_22A63A94C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A63A94C()
{
  unint64_t result;

  result = qword_255AFF200;
  if (!qword_255AFF200)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.TruncationMode, &type metadata for TextContent.TruncationMode);
    atomic_store(result, (unint64_t *)&qword_255AFF200);
  }
  return result;
}

unint64_t sub_22A63A990(uint64_t a1)
{
  unint64_t result;

  result = sub_22A63A9B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A63A9B4()
{
  unint64_t result;

  result = qword_255AFF208;
  if (!qword_255AFF208)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.TruncationMode, &type metadata for TextContent.TruncationMode);
    atomic_store(result, (unint64_t *)&qword_255AFF208);
  }
  return result;
}

uint64_t sub_22A63A9F8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char isEscapingClosureAtFileLocation;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;

  v1 = objc_msgSend(v0, sel_string);
  sub_22A6A5D84();

  v2 = sub_22A6A5DF0();
  result = swift_bridgeObjectRelease();
  if (v2 < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v37 = MEMORY[0x24BEE4B08];
  v4 = *MEMORY[0x24BEBD248];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = &v37;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_22A63B514;
  *(_QWORD *)(v6 + 24) = v5;
  v35 = sub_22A63B540;
  v36 = v6;
  v7 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_1;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v4, 0, v2, 0, v8);
  _Block_release(v8);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = *MEMORY[0x24BEBD268];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = &v37;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_22A63B588;
  *(_QWORD *)(v11 + 24) = v10;
  v35 = sub_22A63B6FC;
  v36 = v11;
  aBlock = v7;
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_13;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v9, 0, v2, 0, v12);
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v9 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = *MEMORY[0x24BEBD280];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = &v37;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_22A63B5C4;
  *(_QWORD *)(v15 + 24) = v14;
  v35 = sub_22A63B6FC;
  v36 = v15;
  aBlock = v7;
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_23;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v13, 0, v2, 0, v16);
  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v17 = *MEMORY[0x24BEBD270];
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = &v37;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_22A63B600;
  *(_QWORD *)(v19 + 24) = v18;
  v35 = sub_22A63B6FC;
  v36 = v19;
  aBlock = MEMORY[0x24BDAC760];
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_33;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v17, 0, v2, 0, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = *MEMORY[0x24BEBD278];
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = &v37;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_22A63B628;
  *(_QWORD *)(v23 + 24) = v22;
  v35 = sub_22A63B6FC;
  v36 = v23;
  aBlock = MEMORY[0x24BDAC760];
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_43;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v21, 0, v2, 0, v24);
  _Block_release(v24);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v26 = *MEMORY[0x24BEBD290];
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = &v37;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_22A63B700;
  *(_QWORD *)(v28 + 24) = v27;
  v35 = sub_22A63B6FC;
  v36 = v28;
  aBlock = MEMORY[0x24BDAC760];
  v32 = 1107296256;
  v33 = sub_22A63B0C4;
  v34 = &block_descriptor_53;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_enumerateAttribute_inRange_options_usingBlock_, v26, 0, v2, 0, v29);
  _Block_release(v29);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v26 & 1) == 0)
  {
    v30 = v37;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v30;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_22A63B0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_22A63B6BC((uint64_t)&v11);
}

uint64_t sub_22A63B14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;
  id v10;
  unsigned int v11;
  id v12[2];
  unsigned int v13;
  char v14;
  _QWORD v15[2];
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A63B674(a1, (uint64_t)v15);
  if (!v18)
    return sub_22A63B6BC((uint64_t)v15);
  sub_22A636C0C(0, (unint64_t *)&qword_255B00020);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v10 = v12[0];
    result = (uint64_t)objc_msgSend(v12[0], sel_floatValue);
    if (__OFADD__(a2, a3))
    {
      __break(1u);
    }
    else if (a2 + a3 >= a2)
    {
      v15[0] = v11;
      v15[1] = 0;
      v16 = 0;
      v17 = a6;
      v18 = a2;
      v19 = a2 + a3;
      sub_22A669F90((uint64_t)v12, (uint64_t)v15);

      return sub_22A63544C((uint64_t)v12[0], (uint64_t)v12[1], v13, v14);
    }
    __break(1u);
  }
  return result;
}

void sub_22A63B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  float v12;
  id v13[2];
  unsigned int v14;
  char v15;
  _QWORD v16[2];
  float v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  sub_22A63B674(a1, (uint64_t)v16);
  if (v19)
  {
    sub_22A636C0C(0, &qword_255AFF218);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v13[0];
      v6 = objc_msgSend(v5, sel_fontName);
      v7 = sub_22A6A5D84();
      v9 = v8;

      objc_msgSend(v5, sel_pointSize);
      v11 = v10;

      if (__OFADD__(a2, a3))
      {
        __break(1u);
      }
      else if (a2 + a3 >= a2)
      {
        v12 = v11;
        v16[0] = v7;
        v16[1] = v9;
        v17 = v12;
        v18 = 4;
        v19 = a2;
        v20 = a2 + a3;
        sub_22A669F90((uint64_t)v13, (uint64_t)v16);

        sub_22A63544C((uint64_t)v13[0], (uint64_t)v13[1], v14, v15);
        return;
      }
      __break(1u);
    }
  }
  else
  {
    sub_22A63B6BC((uint64_t)v16);
  }
}

void sub_22A63B384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  id v9;
  float64x2_t v10;
  float64x2_t v11;
  int8x16_t v12;
  float64_t v13;
  float64_t v14;
  id v15[2];
  unsigned int v16;
  char v17;
  int8x16_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  sub_22A63B674(a1, (uint64_t)&v18);
  if (v21)
  {
    sub_22A636C0C(0, &qword_255AFF210);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = v15[0];
      v18.i64[0] = 0;
      v14 = 0.0;
      v15[0] = 0;
      v13 = 1.0;
      if ((objc_msgSend(v9, sel_getRed_green_blue_alpha_, &v18, v15, &v14, &v13) & 1) != 0)
      {
        if (__OFADD__(a2, a3))
        {
          __break(1u);
        }
        else if (a2 + a3 >= a2)
        {
          *(_QWORD *)&v10.f64[0] = v18.i64[0];
          *(id *)&v11.f64[0] = v15[0];
          v10.f64[1] = v14;
          *(float32x2_t *)&v10.f64[0] = vcvt_f32_f64(v10);
          v11.f64[1] = v13;
          v12.i64[0] = LODWORD(v10.f64[0]);
          v12.i64[1] = HIDWORD(v10.f64[0]);
          v18 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v11), 0x20uLL), v12);
          v19 = 0;
          v20 = a6;
          v21 = a2;
          v22 = a2 + a3;
          sub_22A669F90((uint64_t)v15, (uint64_t)&v18);

          sub_22A63544C((uint64_t)v15[0], (uint64_t)v15[1], v16, v17);
          return;
        }
        __break(1u);
      }

    }
  }
  else
  {
    sub_22A63B6BC((uint64_t)&v18);
  }
}

uint64_t sub_22A63B504()
{
  return swift_deallocObject();
}

void sub_22A63B514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_22A63B384(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), 0);
}

uint64_t sub_22A63B530()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B540()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_22A63B578()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22A63B14C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), 2);
}

uint64_t sub_22A63B5A4()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B5B4()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22A63B14C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), 3);
}

uint64_t sub_22A63B5E0()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B5F0()
{
  return swift_deallocObject();
}

void sub_22A63B600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22A63B244(a1, a2, a3);
}

uint64_t sub_22A63B608()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B618()
{
  return swift_deallocObject();
}

void sub_22A63B628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_22A63B384(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), 5);
}

uint64_t sub_22A63B644()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B654()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B664()
{
  return swift_deallocObject();
}

uint64_t sub_22A63B674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A63B6BC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

float Font.init(_:)@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  float result;

  v4 = objc_msgSend(a1, sel_fontName);
  v5 = sub_22A6A5D84();
  v7 = v6;

  objc_msgSend(a1, sel_pointSize);
  v9 = v8;

  result = v9;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(float *)(a2 + 16) = result;
  return result;
}

void Font.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  float v10;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, sel_fontName);
    v5 = sub_22A6A5D84();
    v7 = v6;

    objc_msgSend(v3, sel_pointSize);
    v9 = v8;

    v10 = v9;
  }
  else
  {
    v5 = 0;
    v10 = 0.0;
    v7 = 1;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(float *)(a2 + 16) = v10;
}

float static SpringParameters.Default.mass.getter()
{
  return 1.0;
}

float static SpringParameters.Default.stiffness.getter()
{
  return 100.0;
}

float static SpringParameters.Default.damping.getter()
{
  return 10.0;
}

float static SpringParameters.Default.initialVelocity.getter()
{
  return 0.0;
}

AirPlayKit::SpringParameters __swiftcall SpringParameters.init(mass:stiffness:damping:initialVelocity:)(Swift::Float mass, Swift::Float stiffness, Swift::Float damping, Swift::Float initialVelocity)
{
  Swift::Float *v4;
  AirPlayKit::SpringParameters result;

  *v4 = mass;
  v4[1] = stiffness;
  v4[2] = damping;
  v4[3] = initialVelocity;
  result.initialVelocity = initialVelocity;
  result.damping = damping;
  result.stiffness = stiffness;
  result.mass = mass;
  return result;
}

AirPlayKit::SpringParameters __swiftcall SpringParameters.init(mass:stiffness:dampingRatio:initialVelocity:)(Swift::Float mass, Swift::Float stiffness, Swift::Float dampingRatio, Swift::Float initialVelocity)
{
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  AirPlayKit::SpringParameters result;

  v5 = sqrtf(mass * stiffness);
  v6 = 1.0;
  *(_QWORD *)v4 = 0x42C800003F800000;
  v7 = (float)(v5 + v5) * dampingRatio;
  *(float *)(v4 + 8) = v7;
  *(Swift::Float *)(v4 + 12) = initialVelocity;
  result.initialVelocity = initialVelocity;
  result.damping = dampingRatio;
  result.stiffness = v6;
  result.mass = v7;
  return result;
}

uint64_t SpringParameters.hash(into:)()
{
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t SpringParameters.hashValue.getter()
{
  sub_22A6A6258();
  SpringParameters.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A63B958()
{
  sub_22A6A6258();
  SpringParameters.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A63B9A4()
{
  sub_22A6A6258();
  SpringParameters.hash(into:)();
  return sub_22A6A62A0();
}

unint64_t sub_22A63B9F0()
{
  unint64_t result;

  result = qword_255AFF220;
  if (!qword_255AFF220)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for SpringParameters, &type metadata for SpringParameters);
    atomic_store(result, (unint64_t *)&qword_255AFF220);
  }
  return result;
}

ValueMetadata *type metadata accessor for SpringParameters()
{
  return &type metadata for SpringParameters;
}

ValueMetadata *type metadata accessor for SpringParameters.Default()
{
  return &type metadata for SpringParameters.Default;
}

unint64_t sub_22A63BA54()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7BB0;
  *(_QWORD *)(inited + 32) = 97;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 98;
  *(_QWORD *)(inited + 96) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 99;
  *(_QWORD *)(inited + 152) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 100;
  *(_QWORD *)(inited + 208) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 256) = 30836;
  *(_QWORD *)(inited + 264) = 0xE200000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 312) = 31092;
  *(_QWORD *)(inited + 320) = 0xE200000000000000;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A63BBA0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A63BA54();
  *a1 = result;
  return result;
}

unint64_t sub_22A63BBC4(uint64_t a1)
{
  unint64_t result;

  result = sub_22A63BBE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A63BBE8()
{
  unint64_t result;

  result = qword_255AFF250;
  if (!qword_255AFF250)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Transform, &type metadata for Transform);
    atomic_store(result, (unint64_t *)&qword_255AFF250);
  }
  return result;
}

_OWORD *Font.init(identifier:pointSize:)@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  *(_OWORD *)a2 = *result;
  *(float *)(a2 + 16) = a3;
  return result;
}

uint64_t Font.Identifier.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_22A6A6264();
  sub_22A6A6264();
  return sub_22A6A5DE4();
}

uint64_t Font.Identifier.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22A6A6258();
  sub_22A6A6264();
  if (v1)
    sub_22A6A5DE4();
  return sub_22A6A62A0();
}

uint64_t sub_22A63BD10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22A6A6258();
  sub_22A6A6264();
  if (v1)
    sub_22A6A5DE4();
  return sub_22A6A62A0();
}

uint64_t sub_22A63BD7C()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_22A6A6264();
  sub_22A6A6264();
  return sub_22A6A5DE4();
}

uint64_t sub_22A63BDE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22A6A6258();
  sub_22A6A6264();
  if (v1)
    sub_22A6A5DE4();
  return sub_22A6A62A0();
}

uint64_t Font.identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

float Font.pointSize.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

uint64_t Font.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_22A6A6264();
    swift_bridgeObjectRetain();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22A6A6264();
  }
  return sub_22A6A627C();
}

uint64_t Font.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22A6A6258();
  sub_22A6A6264();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
  }
  sub_22A6A627C();
  return sub_22A6A62A0();
}

uint64_t sub_22A63BF74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22A6A6258();
  sub_22A6A6264();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
  }
  sub_22A6A627C();
  return sub_22A6A62A0();
}

uint64_t _s10AirPlayKit4FontV10IdentifierO2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_22A6A61D4();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

BOOL _s10AirPlayKit4FontV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  float v4;
  uint64_t v5;
  float v6;
  char v8;
  _BOOL8 result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(float *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(float *)(a2 + 16);
  if (!v3)
  {
    if (!v5)
    {
      swift_bridgeObjectRelease_n();
      return v4 == v6;
    }
    return 0;
  }
  if (!v5)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v5)
    return v4 == v6;
  v8 = sub_22A6A61D4();
  result = 0;
  if ((v8 & 1) != 0)
    return v4 == v6;
  return result;
}

unint64_t sub_22A63C0EC()
{
  unint64_t result;

  result = qword_255AFF258;
  if (!qword_255AFF258)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font.Identifier, &type metadata for Font.Identifier);
    atomic_store(result, (unint64_t *)&qword_255AFF258);
  }
  return result;
}

unint64_t sub_22A63C134()
{
  unint64_t result;

  result = qword_255AFF260;
  if (!qword_255AFF260)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font, &type metadata for Font);
    atomic_store(result, (unint64_t *)&qword_255AFF260);
  }
  return result;
}

uint64_t sub_22A63C17C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Font(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Font(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Font(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Font(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 20) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Font()
{
  return &type metadata for Font;
}

_QWORD *initializeBufferWithCopyOfBuffer for Font.Identifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Font.Identifier()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for Font.Identifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Font.Identifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Font.Identifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Font.Identifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_22A63C45C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_22A63C474(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Font.Identifier()
{
  return &type metadata for Font.Identifier;
}

void sub_22A63C4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RenderLayerActionType();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RenderLayerAction();
  sub_22A63CCEC(v0 + *(int *)(v5 + 20), (uint64_t)v4);
  v6 = (char *)sub_22A63C588 + 4 * byte_22A6A7CE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A63C588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v1, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v0, 0, 1, v4);
  sub_22A674768();
  if (v6)
  {
    *(_QWORD *)(v3 - 104) = v6;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(v3 - 64) = 0;
    *(_OWORD *)(v3 - 96) = 0u;
    *(_OWORD *)(v3 - 80) = 0u;
  }
  v7 = sub_22A63C6E4(0x614C657461657263, 0xEB00000000726579, v0, v3 - 96);
  swift_bridgeObjectRelease();
  sub_22A629860(v3 - 96, &qword_255AFEFA8);
  sub_22A629860(v0, (uint64_t *)&unk_255B01510);
  return v7;
}

uint64_t sub_22A63C6E4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v20 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A74C0;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v21 = 0x6E6F6974636E7566;
  v22 = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x6E6F69746361;
  *(_QWORD *)(inited + 96) = 0xE600000000000000;
  v21 = a1;
  v22 = a2;
  swift_bridgeObjectRetain();
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x55557463656A626FLL;
  *(_QWORD *)(inited + 152) = 0xEA00000000004449;
  sub_22A62F9B8(a3, (uint64_t)v9, (uint64_t *)&unk_255B01510);
  v11 = sub_22A6A5C40();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B01510);
    *(_OWORD *)(inited + 160) = 0u;
    *(_OWORD *)(inited + 176) = 0u;
    *(_QWORD *)(inited + 192) = 0;
  }
  else
  {
    v13 = sub_22A6A5C1C();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    v21 = v13;
    v22 = v15;
    sub_22A6A6084();
  }
  *(_QWORD *)(inited + 200) = 0x746E656D75677261;
  *(_QWORD *)(inited + 208) = 0xE900000000000073;
  sub_22A62F9B8(v20, inited + 216, &qword_255AFEFA8);
  v16 = sub_22A630E48(inited);
  v17 = sub_22A631888(v16);
  swift_bridgeObjectRelease();
  return v17;
}

void sub_22A63C928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = sub_22A6A5C40();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for RenderLayerActionType();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, v2, MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v7 = type metadata accessor for RenderLayerAction();
  sub_22A63CCEC(v0 + *(int *)(v7 + 20), (uint64_t)v6);
  v8 = (char *)sub_22A63CA60 + 4 * byte_22A6A7CE4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A63CA60()
{
  uint64_t v0;
  uint64_t v1;

  sub_22A638950(v1, v0);
  sub_22A6A6264();
  sub_22A631C5C();
  return sub_22A633AE8(v0, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
}

uint64_t sub_22A63CB40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22A6A5C40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_22A63CB7C()
{
  sub_22A6A6258();
  sub_22A63C928();
  return sub_22A6A62A0();
}

uint64_t sub_22A63CBBC()
{
  sub_22A6A6258();
  sub_22A63C928();
  return sub_22A6A62A0();
}

void sub_22A63CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_22A6A5C28() & 1) != 0)
    sub_22A674D20(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
}

uint64_t sub_22A63CC48()
{
  return sub_22A6354A0(&qword_255AFF268, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (uint64_t)&unk_22A6A7D08);
}

uint64_t type metadata accessor for RenderLayerAction()
{
  uint64_t result;

  result = qword_255AFF2D8;
  if (!qword_255AFF2D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A63CCB0(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(&qword_255AFF270, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (uint64_t)&unk_22A6A7D30);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A63CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenderLayerActionType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_22A63CD30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  int v15;
  char *v16;
  uint64_t v17;
  int v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22A6A5C40();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for RenderLayerActionType();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v8(v10, v11, v7);
        v20 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(uint64_t *)((char *)v10 + *(int *)(v20 + 48)) = *(uint64_t *)((char *)v11 + *(int *)(v20 + 48));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v14 = type metadata accessor for RenderLayerType();
        v18 = swift_getEnumCaseMultiPayload();
        if (v18 != 3)
        {
          if (v18 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v19 = (char *)&loc_22A63CED8 + 4 * byte_22A6A7CE8[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          goto LABEL_16;
        }
        goto LABEL_14;
      case 0:
        v14 = type metadata accessor for RenderLayerType();
        v15 = swift_getEnumCaseMultiPayload();
        if (v15 != 3)
        {
          if (v15 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v16 = (char *)&loc_22A63CE18 + 4 * byte_22A6A7CEC[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
LABEL_16:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          goto LABEL_17;
        }
LABEL_14:
        v21 = v11[1];
        *v10 = *v11;
        v10[1] = v21;
        v10[2] = v11[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
    }
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22A63D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_22A6A5C40();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for RenderLayerActionType();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v7 = v5;
    v8 = v4;
    v9 = (uint64_t (*)(uint64_t, uint64_t))v10;
    return v9(v7, v8);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    type metadata accessor for RenderLayerType();
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result != 3)
    {
      if ((_DWORD)result == 2)
      {
        type metadata accessor for ImageContent.ContentType(0);
        result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_12;
          case 1:
            goto LABEL_17;
          case 2:
            return swift_bridgeObjectRelease();
          case 3:
            goto LABEL_16;
          default:
            return result;
        }
      }
      return result;
    }
    goto LABEL_14;
  }
  type metadata accessor for RenderLayerType();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if ((_DWORD)result == 2)
  {
    type metadata accessor for ImageContent.ContentType(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
LABEL_12:
        swift_bridgeObjectRelease();
        result = swift_release();
        break;
      case 1:
LABEL_17:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      case 2:
        return swift_bridgeObjectRelease();
      case 3:
LABEL_16:
        v8 = sub_22A6A5B8C();
        v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v7 = v5;
        return v9(v7, v8);
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_22A63D378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  int v14;
  char *v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_22A6A5C40();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for RenderLayerActionType();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
      *(_QWORD *)((char *)v9 + *(int *)(v18 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v18 + 48));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v13 = type metadata accessor for RenderLayerType();
      v16 = swift_getEnumCaseMultiPayload();
      if (v16 != 3)
      {
        if (v16 == 2)
        {
          type metadata accessor for ImageContent.ContentType(0);
          v17 = (char *)&loc_22A63D4F4 + 4 * byte_22A6A7CF8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    case 0:
      v13 = type metadata accessor for RenderLayerType();
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 != 3)
      {
        if (v14 == 2)
        {
          type metadata accessor for ImageContent.ContentType(0);
          v15 = (char *)&loc_22A63D454 + 4 * byte_22A6A7CFC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
LABEL_14:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_15;
      }
LABEL_12:
      v19 = v10[1];
      *v9 = *v10;
      v9[1] = v19;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_15;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t sub_22A63D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  int v14;
  char *v15;
  int v16;
  char *v17;
  uint64_t v18;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_22A633AE8(a1 + v8, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
    v11 = type metadata accessor for RenderLayerActionType();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v9, v10, v6);
        v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(_QWORD *)((char *)v9 + *(int *)(v18 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v18 + 48));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v13 = type metadata accessor for RenderLayerType();
        v16 = swift_getEnumCaseMultiPayload();
        if (v16 != 3)
        {
          if (v16 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v17 = (char *)&loc_22A63D958 + 4 * byte_22A6A7D00[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          goto LABEL_15;
        }
        goto LABEL_13;
      case 0:
        v13 = type metadata accessor for RenderLayerType();
        v14 = swift_getEnumCaseMultiPayload();
        if (v14 != 3)
        {
          if (v14 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v15 = (char *)&loc_22A63D8B0 + 4 * byte_22A6A7D04[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
LABEL_15:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          goto LABEL_16;
        }
LABEL_13:
        *v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_16;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22A63DC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_22A6A5C40();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for RenderLayerActionType();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
      *(_QWORD *)&v9[*(int *)(v16 + 48)] = *(_QWORD *)&v10[*(int *)(v16 + 48)];
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v13 = type metadata accessor for RenderLayerType();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v14 = type metadata accessor for ImageContent.ContentType(0);
        if (swift_getEnumCaseMultiPayload() == 3)
          goto LABEL_6;
        goto LABEL_13;
      }
      goto LABEL_12;
    case 0:
      v13 = type metadata accessor for RenderLayerType();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v14 = type metadata accessor for ImageContent.ContentType(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
LABEL_6:
          v15 = sub_22A6A5B8C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
          swift_storeEnumTagMultiPayload();
LABEL_14:
          swift_storeEnumTagMultiPayload();
          goto LABEL_15;
        }
LABEL_13:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        goto LABEL_14;
      }
LABEL_12:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_15;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t sub_22A63DEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_22A633AE8(a1 + v8, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
    v11 = type metadata accessor for RenderLayerActionType();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
        v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(_QWORD *)&v9[*(int *)(v15 + 48)] = *(_QWORD *)&v10[*(int *)(v15 + 48)];
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v13 = type metadata accessor for RenderLayerType();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v14 = type metadata accessor for ImageContent.ContentType(0);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
LABEL_11:
            v16 = sub_22A6A5B8C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
            swift_storeEnumTagMultiPayload();
LABEL_16:
            swift_storeEnumTagMultiPayload();
            goto LABEL_17;
          }
LABEL_15:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          goto LABEL_16;
        }
        goto LABEL_13;
      case 0:
        v13 = type metadata accessor for RenderLayerType();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v14 = type metadata accessor for ImageContent.ContentType(0);
          if (swift_getEnumCaseMultiPayload() == 3)
            goto LABEL_11;
          goto LABEL_15;
        }
LABEL_13:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_17;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22A63E140()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A63E14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for RenderLayerActionType();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22A63E1C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A63E1CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for RenderLayerActionType();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_22A63E248()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RenderLayerActionType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22A63E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
      result = swift_unknownObjectRetain();
      break;
    case 3:
      swift_bridgeObjectRetain();
      goto LABEL_2;
    case 4:
    case 5:
    case 6:
LABEL_2:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for RemoteInspectorNodeChange(uint64_t a1)
{
  return sub_22A63E344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_22A63E344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
      result = swift_unknownObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 4:
    case 5:
    case 6:
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for RemoteInspectorNodeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_22A63E2CC(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for RemoteInspectorNodeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_22A63E2CC(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_22A63E344(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RemoteInspectorNodeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_22A63E344(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInspectorNodeChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInspectorNodeChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A63E59C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_22A63E5A4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemoteInspectorNodeChange()
{
  return &type metadata for RemoteInspectorNodeChange;
}

BOOL sub_22A63E5BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22A63E5D4()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

uint64_t sub_22A63E618()
{
  return sub_22A6A6264();
}

uint64_t sub_22A63E640()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

uint64_t sub_22A63E680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 217) = a5;
  *(_QWORD *)(v5 + 112) = a1;
  *(_QWORD *)(v5 + 120) = a4;
  v6 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(v5 + 128) = *(_QWORD *)a4;
  *(_QWORD *)(v5 + 136) = v6;
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(a4 + 16);
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(a4 + 32);
  *(_WORD *)(v5 + 218) = *(_WORD *)(a4 + 40);
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(a4 + 48);
  return swift_task_switch();
}

uint64_t sub_22A63E6C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD, _QWORD);

  if ((*(_BYTE *)(v0 + 217) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
    v6 = type metadata accessor for RenderAssetAction();
    v7 = v5 + *(int *)(v6 + 20);
    *(_QWORD *)v7 = v4;
    *(_QWORD *)(v7 + 8) = v3;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(*(_QWORD *)(v0 + 112), 0, 1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 168) + *(_QWORD *)(v0 + 168));
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v1;
    *v1 = v0;
    v1[1] = sub_22A63E7A4;
    return v8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_22A63E7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 192) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 200) = a2;
    *(_QWORD *)(v6 + 208) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_22A63E81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 160);
  v10 = *(_OWORD *)(v0 + 144);
  v11 = *(_OWORD *)(v0 + 168);
  v9 = *(_OWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_BYTE *)(v0 + 218) & 1 | ((unint64_t)(*(_BYTE *)(v0 + 219) & 1) << 8);
  v5 = *(_QWORD *)(v0 + 200) | 0x2000000000000000;
  sub_22A63EBF4(*(_QWORD *)(v0 + 120));
  _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
  v6 = type metadata accessor for RenderAssetAction();
  v7 = v3 + *(int *)(v6 + 20);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v4;
  *(_OWORD *)(v7 + 48) = v11;
  *(_QWORD *)(v7 + 64) = v1;
  *(_QWORD *)(v7 + 72) = v5;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(*(_QWORD *)(v0 + 112), 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A63E8E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  if (qword_255AFE860 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F00);
  sub_22A63EBF4(v2);
  v4 = v1;
  sub_22A63EBF4(v2);
  v5 = v1;
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F64();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 192);
  v10 = *(__int128 **)(v0 + 120);
  if (v8)
  {
    v11 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v11 = 136446722;
    *(_BYTE *)(v0 + 216) = 0;
    v12 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 80) = sub_22A62D174(v12, v13, &v26);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v14 = *v10;
    v15 = v10[1];
    v16 = v10[3];
    *(_OWORD *)(v0 + 48) = v10[2];
    *(_OWORD *)(v0 + 64) = v16;
    *(_OWORD *)(v0 + 16) = v14;
    *(_OWORD *)(v0 + 32) = v15;
    sub_22A63EBF4((uint64_t)v10);
    v17 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 88) = sub_22A62D174(v17, v18, &v26);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    sub_22A63EC28((uint64_t)v10);
    sub_22A63EC28((uint64_t)v10);
    *(_WORD *)(v11 + 22) = 2082;
    *(_QWORD *)(v0 + 96) = v9;
    v19 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v20 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 104) = sub_22A62D174(v20, v21, &v26);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v6, v7, "Failed making a %{public}s action for %{public}s: %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v25, -1, -1);
    MEMORY[0x22E2DF3F8](v11, -1, -1);

  }
  else
  {

    sub_22A63EC28((uint64_t)v10);
    sub_22A63EC28((uint64_t)v10);

  }
  v22 = *(_QWORD *)(v0 + 112);
  v23 = type metadata accessor for RenderAssetAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A63EBF4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22A63EC28(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderAsset.MIMEType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderAssetMakeActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A63ED38 + 4 * byte_22A6A7E25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A63ED6C + 4 * byte_22A6A7E20[v4]))();
}

uint64_t sub_22A63ED6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A63ED74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A63ED7CLL);
  return result;
}

uint64_t sub_22A63ED88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A63ED90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A63ED94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A63ED9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22A63EDA8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RenderAssetMakeActionType()
{
  return &type metadata for RenderAssetMakeActionType;
}

unint64_t sub_22A63EDC8()
{
  unint64_t result;

  result = qword_255AFF318[0];
  if (!qword_255AFF318[0])
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A7E8C, &type metadata for RenderAssetMakeActionType);
    atomic_store(result, qword_255AFF318);
  }
  return result;
}

uint64_t sub_22A63EE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_22A6A5C40();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_22A644894(&qword_255AFEFF0, MEMORY[0x24BDCEA98]);
        v17 = sub_22A6A5D54();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_22A63EF88(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  float v15;
  unint64_t v16;
  float v17;
  unint64_t v18;
  uint64_t v22;
  float *v23;
  char v24;
  float *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v35 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_22A62F9B8(a1 + v12, (uint64_t)v10, &qword_255AFF3A0);
      sub_22A62F9B8(a2 + v12, (uint64_t)v7, &qword_255AFF3A0);
      if ((sub_22A6A5C28() & 1) == 0
        || *(double *)&v10[v4[9]] != *(double *)&v7[v4[9]]
        || *(double *)&v10[v4[10]] != *(double *)&v7[v4[10]])
      {
        break;
      }
      v22 = v4[11];
      v23 = (float *)&v10[v22];
      v24 = v10[v22 + 4];
      v25 = (float *)&v7[v22];
      v26 = v7[v22 + 4];
      if ((v24 & 1) != 0)
      {
        if (!v26)
          break;
      }
      else
      {
        if (*v23 != *v25)
          LOBYTE(v26) = 1;
        if ((v26 & 1) != 0)
          break;
      }
      if (*(float *)&v10[v4[12]] != *(float *)&v7[v4[12]])
        break;
      v27 = v4[13];
      v28 = *(_QWORD *)&v10[v27];
      v29 = *(_QWORD *)&v10[v27 + 8];
      v30 = v10[v27 + 16];
      v31 = &v7[v27];
      v33 = *(_QWORD *)&v7[v27];
      v32 = *(_QWORD *)&v7[v27 + 8];
      v34 = v31[16];
      if (v30)
      {
        if (v30 != 1)
          __asm { BR              X11 }
        if (v34 != 1)
          break;
      }
      else if (v34)
      {
        break;
      }
      v15 = *(float *)&v33;
      v16 = HIDWORD(v33);
      v17 = *(float *)&v32;
      v18 = HIDWORD(v32);
      if (*(float *)&v28 != v15
        || *((float *)&v28 + 1) != *(float *)&v16
        || *(float *)&v29 != v17
        || *((float *)&v29 + 1) != *(float *)&v18)
      {
        break;
      }
      sub_22A629860((uint64_t)v7, &qword_255AFF3A0);
      sub_22A629860((uint64_t)v10, &qword_255AFF3A0);
      v12 += v13;
      result = 1;
      if (!--v11)
        return result;
    }
    sub_22A629860((uint64_t)v7, &qword_255AFF3A0);
    sub_22A629860((uint64_t)v10, &qword_255AFF3A0);
  }
  return 0;
}

uint64_t sub_22A63F234(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  uint64_t v28;
  float32x4_t *v29;
  float32x4_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t result;
  uint64_t v40;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v40 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_22A62F9B8(a1 + v12, (uint64_t)v10, &qword_255AFF3A8);
      sub_22A62F9B8(a2 + v12, (uint64_t)v7, &qword_255AFF3A8);
      if ((sub_22A6A5C28() & 1) == 0
        || *(double *)&v10[v4[9]] != *(double *)&v7[v4[9]]
        || *(double *)&v10[v4[10]] != *(double *)&v7[v4[10]])
      {
        break;
      }
      v14 = v4[11];
      v15 = &v10[v14];
      v16 = v10[v14 + 24];
      v17 = &v7[v14];
      if ((v16 & 1) != 0)
      {
        if ((v17[24] & 1) == 0)
          break;
      }
      else
      {
        if ((v17[24] & 1) != 0)
          break;
        v18 = *(_QWORD *)v15;
        v19 = *((_QWORD *)v15 + 1);
        v20 = *((_QWORD *)v15 + 2);
        v21 = *((_QWORD *)v17 + 1);
        v22 = *((_QWORD *)v17 + 2);
        v23 = *(float *)&v18 == COERCE_FLOAT(*(_QWORD *)v17)
           && *((float *)&v18 + 1) == COERCE_FLOAT(HIDWORD(*(_QWORD *)v17));
        v24 = v23 && *(float *)&v19 == *(float *)&v21;
        v25 = v24 && *((float *)&v19 + 1) == *((float *)&v21 + 1);
        v26 = v25 && *(float *)&v20 == *(float *)&v22;
        if (!v26 || *((float *)&v20 + 1) != *((float *)&v22 + 1))
          break;
      }
      v28 = v4[12];
      v29 = (float32x4_t *)&v10[v28];
      v30 = (float32x4_t *)&v7[v28];
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*v29, *v30)), 0xFuLL))) & 1) == 0
        || v29[1].f32[0] != v30[1].f32[0]
        || v29[1].f32[1] != v30[1].f32[1])
      {
        break;
      }
      v31 = v4[13];
      v33 = *(_QWORD *)&v10[v31];
      v32 = *(_QWORD *)&v10[v31 + 8];
      v34 = v10[v31 + 16];
      v35 = &v7[v31];
      v37 = *(_QWORD *)&v7[v31];
      v36 = *(_QWORD *)&v7[v31 + 8];
      v38 = v35[16];
      if (v34)
      {
        if (v34 != 1)
          __asm { BR              X9 }
        if (v38 != 1)
          break;
      }
      else if (v38)
      {
        break;
      }
      if (*(float *)&v33 != *(float *)&v37
        || *((float *)&v33 + 1) != *((float *)&v37 + 1)
        || *(float *)&v32 != *(float *)&v36
        || *((float *)&v32 + 1) != *((float *)&v36 + 1))
      {
        break;
      }
      sub_22A629860((uint64_t)v7, &qword_255AFF3A8);
      sub_22A629860((uint64_t)v10, &qword_255AFF3A8);
      v12 += v13;
      result = 1;
      if (!--v11)
        return result;
    }
    sub_22A629860((uint64_t)v7, &qword_255AFF3A8);
    sub_22A629860((uint64_t)v10, &qword_255AFF3A8);
  }
  return 0;
}

uint64_t sub_22A63F594(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  float *v21;
  float *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  float v32;
  unint64_t v33;
  float v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v40;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v40 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_22A62F9B8(a1 + v12, (uint64_t)v10, &qword_255AFF3B0);
      sub_22A62F9B8(a2 + v12, (uint64_t)v7, &qword_255AFF3B0);
      if ((sub_22A6A5C28() & 1) == 0
        || *(double *)&v10[v4[9]] != *(double *)&v7[v4[9]]
        || *(double *)&v10[v4[10]] != *(double *)&v7[v4[10]])
      {
        break;
      }
      v14 = v4[11];
      v15 = &v10[v14];
      v16 = v10[v14 + 8];
      v17 = &v7[v14];
      if ((v16 & 1) != 0)
      {
        if ((v17[8] & 1) == 0)
          break;
      }
      else
      {
        if ((v17[8] & 1) != 0)
          break;
        v18 = *(_QWORD *)v15;
        if (*(float *)&v18 != COERCE_FLOAT(*(_QWORD *)v17)
          || *((float *)&v18 + 1) != COERCE_FLOAT(HIDWORD(*(_QWORD *)v17)))
        {
          break;
        }
      }
      v20 = v4[12];
      v21 = (float *)&v10[v20];
      v22 = (float *)&v7[v20];
      if (*v21 != *v22 || v21[1] != v22[1])
        break;
      v24 = v4[13];
      v25 = *(_QWORD *)&v10[v24];
      v26 = *(_QWORD *)&v10[v24 + 8];
      v27 = v10[v24 + 16];
      v28 = &v7[v24];
      v30 = *(_QWORD *)&v7[v24];
      v29 = *(_QWORD *)&v7[v24 + 8];
      v31 = v28[16];
      if (v27)
      {
        if (v27 != 1)
          __asm { BR              X11 }
        if (v31 != 1)
          break;
      }
      else if (v31)
      {
        break;
      }
      v32 = *(float *)&v30;
      v33 = HIDWORD(v30);
      v34 = *(float *)&v29;
      v35 = HIDWORD(v29);
      if (*(float *)&v25 != v32
        || *((float *)&v25 + 1) != *(float *)&v33
        || *(float *)&v26 != v34
        || *((float *)&v26 + 1) != *(float *)&v35)
      {
        break;
      }
      sub_22A629860((uint64_t)v7, &qword_255AFF3B0);
      sub_22A629860((uint64_t)v10, &qword_255AFF3B0);
      v12 += v13;
      result = 1;
      if (!--v11)
        return result;
    }
    sub_22A629860((uint64_t)v7, &qword_255AFF3B0);
    sub_22A629860((uint64_t)v10, &qword_255AFF3B0);
  }
  return 0;
}

uint64_t sub_22A63F86C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    sub_22A62F9B8(a1 + v12, (uint64_t)&v17 - v9, &qword_255AFF3B8);
    sub_22A62F9B8(a2 + v12, (uint64_t)v7, &qword_255AFF3B8);
    if ((sub_22A6A5C28() & 1) != 0
      && *(double *)&v10[v4[9]] == *(double *)&v7[v4[9]]
      && *(double *)&v10[v4[10]] == *(double *)&v7[v4[10]])
    {
      v13 = v4[11];
      v14 = *(_QWORD *)&v10[v13];
      v15 = *(_QWORD *)&v7[v13] & 0xFF00000000;
      if ((~v14 & 0xFF00000000) != 0)
      {
        if (v15 != 0xFF00000000)
          __asm { BR              X16 }
      }
      else if (v15 == 0xFF00000000)
      {
        __asm { BR              X16 }
      }
    }
    sub_22A629860((uint64_t)v7, &qword_255AFF3B8);
    sub_22A629860((uint64_t)v10, &qword_255AFF3B8);
  }
  return 0;
}

uint64_t sub_22A63FCC4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  int v30;
  uint64_t v31;
  float v32;
  float v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  float v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  char v66;
  uint64_t result;
  _BYTE v68[12];
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v68[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v10 = &v68[-v9];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v72 = *(_QWORD *)(v8 + 72);
    v73 = a1;
    v74 = a2;
    while (1)
    {
      sub_22A62F9B8(a1 + v12, (uint64_t)v10, &qword_255AFF3C0);
      v75 = v12;
      sub_22A62F9B8(a2 + v12, (uint64_t)v7, &qword_255AFF3C0);
      if ((sub_22A6A5C28() & 1) == 0
        || *(double *)&v10[v4[9]] != *(double *)&v7[v4[9]]
        || *(double *)&v10[v4[10]] != *(double *)&v7[v4[10]])
      {
LABEL_108:
        sub_22A629860((uint64_t)v7, &qword_255AFF3C0);
        sub_22A629860((uint64_t)v10, &qword_255AFF3C0);
        return 0;
      }
      v13 = v4[11];
      v14 = &v10[v13];
      v15 = *(_QWORD *)&v10[v13 + 8];
      v16 = &v7[v13];
      v17 = *(_QWORD *)&v7[v13 + 8];
      if (v10[v13 + 8] == 0xFF)
      {
        if (v17 != 255)
          goto LABEL_108;
        goto LABEL_46;
      }
      if (v17 == 255)
        goto LABEL_108;
      v18 = *(_QWORD *)v14;
      v19 = v14[20];
      v20 = *((unsigned int *)v14 + 4);
      v21 = *(_QWORD *)v16;
      v22 = v16[20];
      v23 = *((unsigned int *)v16 + 4);
      if (!(_BYTE)v15)
        break;
      if (v15 != 1)
      {
        if (v17 != 2)
          goto LABEL_108;
LABEL_22:
        if (*(float *)&v18 != *(float *)&v21)
          goto LABEL_108;
        goto LABEL_23;
      }
      if (v17 != 1)
        goto LABEL_108;
      v70 = v20;
      v71 = v19;
      v24 = *((float *)&v18 + 1);
      v25 = *((float *)&v21 + 1);
      v26 = 8 * (char)v18;
      v27 = 8 * (char)v21;
      if (*(_QWORD *)&aLeading_1[v26] == *(_QWORD *)&aLeading_1[v27]
        && *(_QWORD *)((char *)&unk_22A6A8140 + v26) == *(_QWORD *)((char *)&unk_22A6A8140 + v27))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        v20 = v70;
        v19 = v71;
        if (v24 != v25)
          goto LABEL_108;
      }
      else
      {
        v69 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        v20 = v70;
        v19 = v71;
        if ((v69 & 1) == 0 || v24 != v25)
          goto LABEL_108;
      }
LABEL_23:
      *((_QWORD *)&v29 + 1) = v23 | (v22 << 32);
      *(_QWORD *)&v29 = v17;
      v28 = v29 >> 32;
      v30 = BYTE12(v29);
      *((_QWORD *)&v29 + 1) = v20 | (v19 << 32);
      *(_QWORD *)&v29 = v15;
      v31 = v29 >> 32;
      if (!BYTE12(v29))
      {
        if (v30)
          goto LABEL_108;
        goto LABEL_45;
      }
      if (((v20 | (unint64_t)(v19 << 32)) >> 32) != 1)
      {
        if (v30 != 2)
          goto LABEL_108;
LABEL_45:
        if (*(float *)&v31 != *(float *)&v28)
          goto LABEL_108;
        goto LABEL_46;
      }
      if (v30 != 1)
        goto LABEL_108;
      v32 = *((float *)&v31 + 1);
      v33 = *((float *)&v28 + 1);
      if ((v31 & 1) != 0)
        v34 = 0x6D6F74746F62;
      else
        v34 = 7368564;
      if ((v31 & 1) != 0)
        v35 = 0xE600000000000000;
      else
        v35 = 0xE300000000000000;
      if ((v28 & 1) != 0)
        v36 = 0x6D6F74746F62;
      else
        v36 = 7368564;
      if ((v28 & 1) != 0)
        v37 = 0xE600000000000000;
      else
        v37 = 0xE300000000000000;
      if (v34 == v36 && v35 == v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if (v32 != v33)
          goto LABEL_108;
      }
      else
      {
        v66 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if ((v66 & 1) == 0 || v32 != v33)
          goto LABEL_108;
      }
LABEL_46:
      v38 = v4[12];
      v39 = &v7[v38];
      v40 = *(_QWORD *)&v10[v38];
      v41 = v10[v38 + 8];
      v42 = *(_QWORD *)&v10[v38 + 12];
      v43 = v10[v38 + 20];
      v44 = *(_QWORD *)&v7[v38];
      v45 = v39[8];
      v46 = *(_QWORD *)(v39 + 12);
      v47 = v39[20];
      if (!v41)
      {
        if (v39[8])
          goto LABEL_108;
        goto LABEL_59;
      }
      if (v41 != 1)
      {
        if (v45 != 2)
          goto LABEL_108;
LABEL_59:
        if (*(float *)&v40 != *(float *)&v44)
          goto LABEL_108;
        goto LABEL_60;
      }
      if (v45 != 1)
        goto LABEL_108;
      v48 = *((float *)&v40 + 1);
      v49 = *((float *)&v44 + 1);
      v50 = 8 * (char)v40;
      v51 = 8 * (char)v44;
      if (*(_QWORD *)&aLeading_1[v50] == *(_QWORD *)&aLeading_1[v51]
        && *(_QWORD *)((char *)&unk_22A6A8140 + v50) == *(_QWORD *)((char *)&unk_22A6A8140 + v51))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if (v48 != v49)
          goto LABEL_108;
      }
      else
      {
        LODWORD(v71) = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if ((v71 & 1) == 0 || v48 != v49)
          goto LABEL_108;
      }
LABEL_60:
      if (!v43)
      {
        if (v47)
          goto LABEL_108;
        goto LABEL_82;
      }
      if (v43 != 1)
      {
        if (v47 != 2)
          goto LABEL_108;
LABEL_82:
        if (*(float *)&v42 != *(float *)&v46)
          goto LABEL_108;
        goto LABEL_83;
      }
      if (v47 != 1)
        goto LABEL_108;
      if ((v42 & 1) != 0)
        v53 = 0x6D6F74746F62;
      else
        v53 = 7368564;
      if ((v42 & 1) != 0)
        v54 = 0xE600000000000000;
      else
        v54 = 0xE300000000000000;
      if ((v46 & 1) != 0)
        v55 = 0x6D6F74746F62;
      else
        v55 = 7368564;
      if ((v46 & 1) != 0)
        v56 = 0xE600000000000000;
      else
        v56 = 0xE300000000000000;
      if (v53 == v55 && v54 == v56)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if (*((float *)&v42 + 1) != *((float *)&v46 + 1))
          goto LABEL_108;
      }
      else
      {
        v65 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v73;
        a2 = v74;
        if ((v65 & 1) == 0 || *((float *)&v42 + 1) != *((float *)&v46 + 1))
          goto LABEL_108;
      }
LABEL_83:
      v57 = v4[13];
      v59 = *(_QWORD *)&v10[v57];
      v58 = *(_QWORD *)&v10[v57 + 8];
      v60 = v10[v57 + 16];
      v61 = &v7[v57];
      v63 = *(_QWORD *)&v7[v57];
      v62 = *(_QWORD *)&v7[v57 + 8];
      v64 = v61[16];
      if (v60)
      {
        if (v60 != 1)
          __asm { BR              X9 }
        if (v64 != 1)
          goto LABEL_108;
      }
      else if (v64)
      {
        goto LABEL_108;
      }
      if (*(float *)&v59 != *(float *)&v63
        || *((float *)&v59 + 1) != *((float *)&v63 + 1)
        || *(float *)&v58 != *(float *)&v62
        || *((float *)&v58 + 1) != *((float *)&v62 + 1))
      {
        goto LABEL_108;
      }
      sub_22A629860((uint64_t)v7, &qword_255AFF3C0);
      sub_22A629860((uint64_t)v10, &qword_255AFF3C0);
      v12 = v75 + v72;
      result = 1;
      if (!--v11)
        return result;
    }
    if ((_BYTE)v17)
      goto LABEL_108;
    goto LABEL_22;
  }
  return 1;
}

uint64_t sub_22A640374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t result;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = type metadata accessor for SpriteSheetAnimation();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v11 = (char *)&v58 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
      return 1;
    v65 = a2;
    v66 = v8;
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v63 = *(_QWORD *)(v9 + 72);
    v64 = a1;
    v59 = v7;
    v60 = (char *)&v58 - v10;
    while (1)
    {
      v68 = v12;
      sub_22A62603C(a1 + v13, (uint64_t)v11);
      v67 = v13;
      sub_22A62603C(a2 + v13, (uint64_t)v7);
      v14 = *(_QWORD *)v11;
      v15 = *((_QWORD *)v11 + 1);
      v16 = *((_QWORD *)v11 + 2);
      v17 = *((_QWORD *)v11 + 3);
      v18 = *((_QWORD *)v11 + 4);
      v19 = v11[40];
      v20 = v11[41];
      v69 = *((_QWORD *)v11 + 7);
      v21 = *((_QWORD *)v7 + 1);
      v23 = *((_QWORD *)v7 + 2);
      v22 = *((_QWORD *)v7 + 3);
      v24 = *((_QWORD *)v7 + 4);
      v25 = v7[40];
      v26 = v7[41];
      if (v14 != *(_QWORD *)v7 || v15 != v21)
      {
        v61 = v15;
        v62 = v21;
        v27 = v20;
        v28 = v26;
        v29 = v16;
        v30 = v19;
        v31 = v25;
        v32 = sub_22A6A61D4();
        v25 = v31;
        v19 = v30;
        v16 = v29;
        v7 = v59;
        v11 = v60;
        v26 = v28;
        v20 = v27;
        if ((v32 & 1) == 0)
          break;
      }
      if ((v19 & 1) != 0)
      {
        if ((v25 & 1) == 0)
          break;
      }
      else
      {
        if ((v25 & 1) != 0)
          break;
        v33 = *(float *)&v16 == *(float *)&v23 && *((float *)&v16 + 1) == *((float *)&v23 + 1);
        v34 = v33 && *(float *)&v17 == *(float *)&v22;
        v35 = v34 && *((float *)&v17 + 1) == *((float *)&v22 + 1);
        if (!v35 || v18 != v24)
          break;
      }
      v37 = v20 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
      v38 = v20 ? 0xEA00000000004745 : 0xE900000000000067;
      v39 = v26 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
      v40 = v26 ? 0xEA00000000004745 : 0xE900000000000067;
      if (v37 == v39 && v38 == v40)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = sub_22A6A61D4();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
          break;
      }
      v42 = *(int *)(v66 + 20);
      v43 = &v11[v42];
      v44 = &v7[v42];
      if ((sub_22A6A5C28() & 1) == 0)
        break;
      v45 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
      if (*(double *)&v43[v45[9]] != *(double *)&v44[v45[9]] || *(double *)&v43[v45[10]] != *(double *)&v44[v45[10]])
        break;
      v46 = v45[11];
      v47 = v43[v46];
      v48 = v44[v46];
      if ((v47 & 1) != 0)
      {
        if (!v48)
          break;
      }
      else if ((v48 & 1) != 0)
      {
        break;
      }
      v49 = v45[13];
      v51 = *(_QWORD *)&v43[v49];
      v50 = *(_QWORD *)&v43[v49 + 8];
      v52 = v43[v49 + 16];
      v53 = &v44[v49];
      v55 = *(_QWORD *)&v44[v49];
      v54 = *(_QWORD *)&v44[v49 + 8];
      v56 = v53[16];
      if (v52)
      {
        if (v52 != 1)
          __asm { BR              X9 }
        if (v56 != 1)
          break;
      }
      else if (v56)
      {
        break;
      }
      if (*(float *)&v51 != *(float *)&v55
        || *((float *)&v51 + 1) != *((float *)&v55 + 1)
        || *(float *)&v50 != *(float *)&v54
        || *((float *)&v50 + 1) != *((float *)&v54 + 1))
      {
        break;
      }
      sub_22A626080((uint64_t)v7);
      sub_22A626080((uint64_t)v11);
      a1 = v64;
      v13 = v67 + v63;
      result = 1;
      v12 = v68 - 1;
      a2 = v65;
      if (v68 == 1)
        return result;
    }
    sub_22A626080((uint64_t)v7);
    sub_22A626080((uint64_t)v11);
  }
  return 0;
}

uint64_t sub_22A6407F0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aLeading_1[8 * a1] == *(_QWORD *)&aLeading_1[8 * a2] && qword_22A6A8140[a1] == qword_22A6A8140[a2])
    v3 = 1;
  else
    v3 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_22A640874(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aNonanimaonce[8 * a1] == *(_QWORD *)&aNonanimaonce[8 * a2]
    && *(_QWORD *)&aRepeatinted[8 * a1 + 8] == *(_QWORD *)&aRepeatinted[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_22A6A61D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_22A6408F8(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(_QWORD *)&aLeft_5[8 * (char)a1] == *(_QWORD *)&aLeft_5[8 * (char)a2] && a1 << 56 == a2 << 56)
    v3 = 1;
  else
    v3 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_22A640984(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_22A6409D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22A640A84 + 4 * byte_22A6A7F0F[a2]))(7368564);
}

uint64_t sub_22A640A84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7368564 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_22A640B8C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aMediumlimedium_0[8 * a1] == *(_QWORD *)&aMediumlimedium_0[8 * a2]
    && *(_QWORD *)&aMediumlimedium_0[8 * a1 + 32] == *(_QWORD *)&aMediumlimedium_0[8 * a2 + 32])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_22A6A61D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_22A640C10(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22A640C5C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22A640CDC + 4 * byte_22A6A7F1B[a2]))(0x6669636570736E75);
}

uint64_t sub_22A640CDC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6669636570736E75 && v1 == 0xEB00000000646569)
    v2 = 1;
  else
    v2 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_22A640DA4(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aLeft_6[8 * a1] == *(_QWORD *)&aLeft_6[8 * a2] && qword_22A6A8210[a1] == qword_22A6A8210[a2])
    v3 = 1;
  else
    v3 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_22A640E28(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_22A640E74(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22A640F08 + 4 * byte_22A6A7F25[a2]))(0x746C7561666564);
}

uint64_t sub_22A640F08(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746C7561666564 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_22A640FDC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22A641028(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22A6410B8 + 4 * byte_22A6A7F30[a2]))(0x725764726F577962);
}

uint64_t sub_22A6410B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x725764726F577962 && v1 == 0xEE00676E69707061)
    v2 = 1;
  else
    v2 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_22A64117C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x646E756F72;
  else
    v3 = 1701736302;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x646E756F72;
  else
    v5 = 1701736302;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_22A641210(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x504A2F6F65646976;
  else
    v3 = 0x6E702F6567616D69;
  if (v2)
    v4 = 0xE900000000000067;
  else
    v4 = 0xEA00000000004745;
  if ((a2 & 1) != 0)
    v5 = 0x504A2F6F65646976;
  else
    v5 = 0x6E702F6567616D69;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000004745;
  else
    v6 = 0xE900000000000067;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_22A6412B8()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A6412F8()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A641358()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

void sub_22A641398(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22A6413E0()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

void sub_22A641488(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22A6414CC()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

void sub_22A641544(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22A641588()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

void sub_22A641610(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22A641658()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A6416E0()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A641720()
{
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

__n128 RenderNode.init(identifier:content:contentSemantic:position:size:centerAnchor:transform:opacity:backgroundColor:cornerRadius:insets:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, float a12@<S2>, float a13@<S3>, float a14@<S4>, uint64_t a15, char a16, __n128 a17, unint64_t a18, unsigned __int8 a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26)
{
  unint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  __n128 result;
  uint64_t v47;
  uint64_t v48;
  float *v49;

  v36 = a6 >> 40;
  v37 = a8 >> 40;
  v38 = *a3;
  v39 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a9, a1, v39);
  v41 = (int *)type metadata accessor for RenderNode(0, a25, a26, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a25 - 8) + 32))(a9 + v41[9], a2, a25);
  *(_BYTE *)(a9 + v41[10]) = v38;
  v42 = a9 + v41[11];
  *(_QWORD *)v42 = a4;
  *(_QWORD *)(v42 + 8) = a5;
  *(_BYTE *)(v42 + 20) = BYTE4(a6);
  *(_DWORD *)(v42 + 16) = a6;
  *(_BYTE *)(v42 + 21) = v36;
  v43 = a9 + v41[12];
  *(_QWORD *)v43 = a7;
  *(_DWORD *)(v43 + 8) = a8;
  *(_BYTE *)(v43 + 12) = BYTE4(a8);
  *(_BYTE *)(v43 + 13) = v37;
  v44 = a9 + v41[13];
  *(_QWORD *)v44 = a15;
  *(_BYTE *)(v44 + 8) = a16;
  v45 = (__n128 *)(a9 + v41[14]);
  result = a17;
  *v45 = a17;
  v45[1].n128_u64[0] = a18;
  v45[1].n128_u8[8] = a19;
  v47 = a9 + v41[15];
  *(_QWORD *)v47 = a20;
  *(_BYTE *)(v47 + 8) = a21;
  v48 = a9 + v41[16];
  *(_QWORD *)v48 = a22;
  *(_QWORD *)(v48 + 8) = a23;
  *(_BYTE *)(v48 + 16) = a24;
  *(float *)(a9 + v41[17]) = a10;
  v49 = (float *)(a9 + v41[18]);
  *v49 = a11;
  v49[1] = a12;
  v49[2] = a13;
  v49[3] = a14;
  return result;
}

uint64_t type metadata accessor for RenderNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenderNode);
}

uint64_t RenderNode.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22A6A5C40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RenderNode.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t RenderNode.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*RenderNode.content.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.contentSemantic.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 40));
  return result;
}

_BYTE *RenderNode.contentSemantic.setter(_BYTE *result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 40)) = *result;
  return result;
}

uint64_t (*RenderNode.contentSemantic.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.position.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 44);
  v3 = *(_QWORD *)v2;
  sub_22A628ADC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned int *)(v2 + 16) | ((unint64_t)*(unsigned __int8 *)(v2 + 20) << 32), *(_BYTE *)(v2 + 21));
  return v3;
}

uint64_t RenderNode.position.setter(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = a3 >> 40;
  v9 = v4 + *(int *)(a4 + 44);
  result = sub_22A628B08(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(unsigned int *)(v9 + 16) | ((unint64_t)*(unsigned __int8 *)(v9 + 20) << 32), *(_BYTE *)(v9 + 21));
  *(_QWORD *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_BYTE *)(v9 + 20) = BYTE4(a3);
  *(_DWORD *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 21) = v8;
  return result;
}

uint64_t (*RenderNode.position.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.size.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 48);
  v3 = *(_QWORD *)v2;
  sub_22A628B20(*(_QWORD *)v2, *(unsigned int *)(v2 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + 12) << 32), *(_BYTE *)(v2 + 13));
  return v3;
}

uint64_t RenderNode.size.setter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = a2 >> 40;
  v7 = v3 + *(int *)(a3 + 48);
  result = sub_22A628B4C(*(_QWORD *)v7, *(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned __int8 *)(v7 + 12) << 32), *(_BYTE *)(v7 + 13));
  *(_QWORD *)v7 = a1;
  *(_BYTE *)(v7 + 12) = BYTE4(a2);
  *(_DWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 13) = v6;
  return result;
}

uint64_t (*RenderNode.size.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.centerAnchor.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 52);
  v3 = *(_QWORD *)v2;
  sub_22A628B64(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  return v3;
}

uint64_t RenderNode.centerAnchor.setter(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = v3 + *(int *)(a3 + 52);
  result = sub_22A628B90(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2;
  return result;
}

uint64_t (*RenderNode.centerAnchor.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.transform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 56);
  v3 = *(_QWORD *)v2;
  sub_22A628ADC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return v3;
}

uint64_t RenderNode.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t result;

  v10 = v5 + *(int *)(a5 + 56);
  result = sub_22A628B08(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_BYTE *)(v10 + 24));
  *(_QWORD *)v10 = a1;
  *(_QWORD *)(v10 + 8) = a2;
  *(_QWORD *)(v10 + 16) = a3;
  *(_BYTE *)(v10 + 24) = a4;
  return result;
}

uint64_t (*RenderNode.transform.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.opacity.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 60);
  v3 = *(_QWORD *)v2;
  sub_22A628B64(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  return v3;
}

uint64_t RenderNode.opacity.setter(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = v3 + *(int *)(a3 + 60);
  result = sub_22A628B90(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2;
  return result;
}

uint64_t (*RenderNode.opacity.modify())()
{
  return nullsub_1;
}

uint64_t RenderNode.backgroundColor.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 64));
}

uint64_t RenderNode.backgroundColor.setter(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4 + *(int *)(a4 + 64);
  *(_QWORD *)v5 = result;
  *(_QWORD *)(v5 + 8) = a2;
  *(_BYTE *)(v5 + 16) = a3;
  return result;
}

uint64_t (*RenderNode.backgroundColor.modify())()
{
  return nullsub_1;
}

float RenderNode.cornerRadius.getter(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(v1 + *(int *)(a1 + 68));
}

uint64_t RenderNode.cornerRadius.setter(uint64_t result, float a2)
{
  uint64_t v2;

  *(float *)(v2 + *(int *)(result + 68)) = a2;
  return result;
}

uint64_t (*RenderNode.cornerRadius.modify())()
{
  return nullsub_1;
}

float RenderNode.insets.getter(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(v1 + *(int *)(a1 + 72));
}

uint64_t RenderNode.insets.setter(uint64_t result, float a2, float a3, float a4, float a5)
{
  uint64_t v5;
  float *v6;

  v6 = (float *)(v5 + *(int *)(result + 72));
  *v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  v6[3] = a5;
  return result;
}

uint64_t (*RenderNode.insets.modify())()
{
  return nullsub_1;
}

void RenderNode.hash(into:)(uint64_t a1, uint64_t a2)
{
  sub_22A6A5C40();
  sub_22A644894((unint64_t *)&qword_255AFEC98, MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  sub_22A6A5D3C();
  __asm { BR              X10 }
}

uint64_t sub_22A641F2C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v3 = v1 + v2[11];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32);
  v7 = *(unsigned __int8 *)(v3 + 21);
  sub_22A628ADC(*(_QWORD *)v3, v5, v6, *(_BYTE *)(v3 + 21));
  sub_22A6432B0(v0, v4, v5, v6 | (v7 << 40));
  sub_22A628B08(v4, v5, v6, v7);
  v8 = v1 + v2[12];
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
  v11 = *(unsigned __int8 *)(v8 + 13);
  sub_22A628B20(*(_QWORD *)v8, v10, *(_BYTE *)(v8 + 13));
  sub_22A643150(v0, v9, v10 | (v11 << 40));
  sub_22A628B4C(v9, v10, v11);
  v12 = v1 + v2[13];
  v13 = *(_QWORD *)v12;
  LOBYTE(v10) = *(_BYTE *)(v12 + 8);
  sub_22A628B64(*(_QWORD *)v12, v10);
  sub_22A642FF4(v0, v13, v10);
  sub_22A628B90(v13, v10);
  v14 = v1 + v2[14];
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  LOBYTE(v7) = *(_BYTE *)(v14 + 24);
  sub_22A628ADC(*(_QWORD *)v14, v16, v17, v7);
  sub_22A642E70(v0, v15, v16, v17, v7);
  sub_22A628B08(v15, v16, v17, v7);
  v18 = v1 + v2[15];
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  sub_22A628B64(*(_QWORD *)v18, v16);
  sub_22A642D2C(v0, v19, v16);
  sub_22A628B90(v19, v16);
  Color.hash(into:)(v0, *(_QWORD *)(v1 + v2[16]), *(_QWORD *)(v1 + v2[16] + 8), *(_BYTE *)(v1 + v2[16] + 16));
  sub_22A6A627C();
  return Insets.hash(into:)();
}

uint64_t static RenderNode.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  int *v58;
  char v59;
  BOOL v60;

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_31;
  v9 = type metadata accessor for RenderNode(0, a3, a4, v8);
  if ((sub_22A6A5D54() & 1) == 0)
    goto LABEL_31;
  sub_22A640C10(*(_BYTE *)(a1 + *(int *)(v9 + 40)));
  if ((v10 & 1) == 0)
    goto LABEL_31;
  v11 = *(int *)(v9 + 44);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = *(unsigned int *)(a1 + v11 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + v11 + 20) << 32);
  v15 = *(unsigned __int8 *)(a1 + v11 + 21);
  v16 = a2 + v11;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v58 = (int *)v9;
  v19 = *(unsigned int *)(v16 + 16) | ((unint64_t)*(unsigned __int8 *)(v16 + 20) << 32);
  v20 = *(unsigned __int8 *)(v16 + 21);
  sub_22A628ADC(v12, v13, v14, v15);
  sub_22A628ADC(v17, v18, v19, v20);
  v59 = sub_22A64262C(v12, v13, v14 | (v15 << 40), v17, v18, v19 | (v20 << 40));
  sub_22A628B08(v17, v18, v19, v20);
  sub_22A628B08(v12, v13, v14, v15);
  if ((v59 & 1) == 0)
    goto LABEL_31;
  v21 = v58[12];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(unsigned int *)(a1 + v21 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v21 + 12) << 32);
  v24 = *(unsigned __int8 *)(a1 + v21 + 13);
  v25 = a2 + v21;
  v26 = *(_QWORD *)v25;
  v27 = *(unsigned int *)(v25 + 8) | ((unint64_t)*(unsigned __int8 *)(v25 + 12) << 32);
  v28 = *(unsigned __int8 *)(v25 + 13);
  sub_22A628B20(v22, v23, v24);
  sub_22A628B20(v26, v27, v28);
  v29 = sub_22A6428BC(v22, v23 | (v24 << 40), v26, v27 | (v28 << 40));
  sub_22A628B4C(v26, v27, v28);
  sub_22A628B4C(v22, v23, v24);
  if ((v29 & 1) == 0)
    goto LABEL_31;
  v30 = v58[13];
  v31 = *(_QWORD *)(a1 + v30);
  v32 = *(unsigned __int8 *)(a1 + v30 + 8);
  v33 = a2 + v30;
  v34 = *(_QWORD *)v33;
  v35 = *(unsigned __int8 *)(v33 + 8);
  if (v32)
  {
    if (v32 == 1)
    {
      if (v35 != 1)
        goto LABEL_31;
      sub_22A628B64(v34, 1u);
      sub_22A628B64(v31, 1u);
      v36 = sub_22A63F594(v31, v34);
      sub_22A628B90(v34, 1u);
      sub_22A628B90(v31, 1u);
      if ((v36 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v35 != 2)
        goto LABEL_31;
      sub_22A628B64(v34, 2u);
      sub_22A628B64(v31, 2u);
      v37 = sub_22A63F594(v31, v34);
      sub_22A628B90(v34, 2u);
      sub_22A628B90(v31, 2u);
      if ((v37 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v35)
      goto LABEL_31;
    if (*(float *)&v31 != *(float *)&v34 || *((float *)&v31 + 1) != *((float *)&v34 + 1))
      return v35 & 1;
  }
  v38 = v58[14];
  v39 = a1 + v38;
  v40 = *(_QWORD *)(a1 + v38);
  v41 = *(_QWORD *)(a1 + v38 + 8);
  v42 = *(_QWORD *)(a1 + v38 + 16);
  v43 = a2 + v38;
  v44 = *(_QWORD *)v43;
  v45 = *(_QWORD *)(v43 + 8);
  v46 = *(_QWORD *)(v43 + 16);
  v47 = *(_BYTE *)(v39 + 24);
  v48 = *(_BYTE *)(v43 + 24);
  sub_22A628ADC(v40, v41, v42, v47);
  sub_22A628ADC(v44, v45, v46, v48);
  v60 = sub_22A642A84(v40, v41, v42, v47, v44, v45, v46, v48);
  sub_22A628B08(v44, v45, v46, v48);
  sub_22A628B08(v40, v41, v42, v47);
  if (!v60)
    goto LABEL_31;
  v49 = v58[15];
  v50 = *(_QWORD *)(a1 + v49);
  v35 = *(unsigned __int8 *)(a1 + v49 + 8);
  v51 = a2 + v49;
  v52 = *(_QWORD *)v51;
  v53 = *(unsigned __int8 *)(v51 + 8);
  if (v35)
  {
    if (v35 == 1)
    {
      if (v53 != 1)
        goto LABEL_31;
      sub_22A628B64(v52, 1u);
      sub_22A628B64(v50, 1u);
      v54 = sub_22A63EF88(v50, v52);
      sub_22A628B90(v52, 1u);
      sub_22A628B90(v50, 1u);
      if ((v54 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v53 != 2)
        goto LABEL_31;
      sub_22A628B64(v52, 2u);
      sub_22A628B64(v50, 2u);
      v55 = sub_22A63EF88(v50, v52);
      sub_22A628B90(v52, 2u);
      sub_22A628B90(v50, 2u);
      if ((v55 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (!v53 && *(float *)&v50 == *(float *)&v52)
  {
LABEL_28:
    v56 = v58[16];
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + v56), *(_QWORD *)(a1 + v56 + 8), *(_BYTE *)(a1 + v56 + 16), *(_QWORD *)(a2 + v56), *(_QWORD *)(a2 + v56 + 8), *(_BYTE *)(a2 + v56 + 16)) & 1) != 0&& *(float *)(a1 + v58[17]) == *(float *)(a2 + v58[17]))
    {
      LOBYTE(v35) = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + v58[18]), *(float32x4_t *)(a2 + v58[18]))), 0xFuLL)));
      return v35 & 1;
    }
LABEL_31:
    LOBYTE(v35) = 0;
  }
  return v35 & 1;
}

uint64_t sub_22A64262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  float v17;
  float v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  if (BYTE5(a3))
  {
    if (BYTE5(a3) == 1)
    {
      if (BYTE5(a6) == 1)
      {
        sub_22A628ADC(a4, a5, a6, 1u);
        sub_22A628ADC(a1, a2, a3, 1u);
        v12 = sub_22A63FCC4(a1, a4);
        sub_22A628B08(a4, a5, a6, 1u);
        v13 = a1;
        v14 = a2;
        v15 = a3;
        v16 = 1;
LABEL_13:
        sub_22A628B08(v13, v14, v15, v16);
        return v12 & 1;
      }
    }
    else if (BYTE5(a6) == 2)
    {
      sub_22A628ADC(a4, a5, a6, 2u);
      sub_22A628ADC(a1, a2, a3, 2u);
      v12 = sub_22A63FCC4(a1, a4);
      sub_22A628B08(a4, a5, a6, 2u);
      v13 = a1;
      v14 = a2;
      v15 = a3;
      v16 = 2;
      goto LABEL_13;
    }
    return 0;
  }
  if (BYTE5(a6))
    return 0;
  if (!(_BYTE)a2)
  {
    if ((_BYTE)a5)
      return 0;
LABEL_17:
    v17 = *(float *)&a1;
    v18 = *(float *)&a4;
    goto LABEL_18;
  }
  if (a2 != 1)
  {
    if (a5 != 2)
      return 0;
    goto LABEL_17;
  }
  if (a5 != 1 || (sub_22A6407F0(a1, a4) & 1) == 0)
    return 0;
  v17 = *((float *)&a1 + 1);
  v18 = *((float *)&a4 + 1);
LABEL_18:
  if (v17 != v18)
    return 0;
  *((_QWORD *)&v21 + 1) = a6;
  *(_QWORD *)&v21 = a5;
  v20 = v21 >> 32;
  *((_QWORD *)&v21 + 1) = a3;
  *(_QWORD *)&v21 = a2;
  v22 = v21 >> 32;
  if (!BYTE4(a3))
  {
    if (BYTE4(a6))
      return 0;
    return *(float *)&v22 == *(float *)&v20;
  }
  if (BYTE4(a3) != 1)
  {
    if (BYTE4(a6) != 2)
      return 0;
    return *(float *)&v22 == *(float *)&v20;
  }
  if (BYTE4(a6) == 1)
  {
    v23 = *((float *)&v22 + 1);
    v24 = *((float *)&v20 + 1);
    if ((v22 & 1) != 0)
      v25 = 0x6D6F74746F62;
    else
      v25 = 7368564;
    if ((v22 & 1) != 0)
      v26 = 0xE600000000000000;
    else
      v26 = 0xE300000000000000;
    if ((v20 & 1) != 0)
      v27 = 0x6D6F74746F62;
    else
      v27 = 7368564;
    if ((v20 & 1) != 0)
      v28 = 0xE600000000000000;
    else
      v28 = 0xE300000000000000;
    if (v25 == v27 && v26 == v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = sub_22A6A61D4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
        return 0;
    }
    if (v23 == v24)
      return 1;
  }
  return 0;
}

uint64_t sub_22A6428BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  if (BYTE5(a2))
  {
    if (BYTE5(a2) == 1)
    {
      if (BYTE5(a4) == 1)
      {
        sub_22A628B20(a3, a4, 1u);
        sub_22A628B20(a1, a2, 1u);
        v8 = sub_22A63F86C(a1, a3);
        sub_22A628B4C(a3, a4, 1u);
        v9 = a1;
        v10 = a2;
        v11 = 1;
LABEL_9:
        sub_22A628B4C(v9, v10, v11);
        return v8 & 1;
      }
    }
    else if (BYTE5(a4) == 2)
    {
      sub_22A628B20(a3, a4, 2u);
      sub_22A628B20(a1, a2, 2u);
      v8 = sub_22A63F86C(a1, a3);
      sub_22A628B4C(a3, a4, 2u);
      v9 = a1;
      v10 = a2;
      v11 = 2;
      goto LABEL_9;
    }
  }
  else if (!BYTE5(a4))
  {
    __asm { BR              X13 }
  }
  return 0;
}

BOOL sub_22A642A84(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  _BOOL4 v21;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 == 1)
      {
        sub_22A628ADC(a5, a6, a7, 1u);
        sub_22A628ADC(a1, a2, a3, 1u);
        v16 = sub_22A63F234(a1, a5);
        sub_22A628B08(a5, a6, a7, 1u);
        v17 = a1;
        v18 = a2;
        v19 = a3;
        v20 = 1;
LABEL_19:
        sub_22A628B08(v17, v18, v19, v20);
        return v16 & 1;
      }
    }
    else if (a8 == 2)
    {
      sub_22A628ADC(a5, a6, a7, 2u);
      sub_22A628ADC(a1, a2, a3, 2u);
      v16 = sub_22A63F234(a1, a5);
      sub_22A628B08(a5, a6, a7, 2u);
      v17 = a1;
      v18 = a2;
      v19 = a3;
      v20 = 2;
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  if (a8)
  {
LABEL_21:
    sub_22A628ADC(a5, a6, a7, a8);
    sub_22A628B08(a1, a2, a3, a4);
    sub_22A628B08(a5, a6, a7, a8);
    return 0;
  }
  v21 = *(float *)&a1 == *(float *)&a5;
  if (*((float *)&a1 + 1) != *((float *)&a5 + 1))
    v21 = 0;
  if (*(float *)&a2 != *(float *)&a6)
    v21 = 0;
  if (*((float *)&a2 + 1) != *((float *)&a6 + 1))
    v21 = 0;
  if (*(float *)&a3 != *(float *)&a7)
    v21 = 0;
  return *((float *)&a3 + 1) == *((float *)&a7 + 1) && v21;
}

uint64_t RenderNode.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_22A6A6258();
  RenderNode.hash(into:)((uint64_t)v3, a1);
  return sub_22A6A62A0();
}

uint64_t sub_22A642CDC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22A6A6258();
  RenderNode.hash(into:)((uint64_t)v4, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A642D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static RenderNode.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_22A642D2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a3)
  {
    if (a3 == 1)
    {
      sub_22A6A6264();
      v4 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v4)
      {
        v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0) - 8);
        v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v8 = *(_QWORD *)(v6 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C21C();
          v7 += v8;
          --v4;
        }
        while (v4);
        return sub_22A628B90(a2, 1u);
      }
    }
    else
    {
      sub_22A6A6264();
      v9 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v9)
      {
        v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0) - 8);
        v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        v12 = *(_QWORD *)(v10 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C21C();
          v11 += v12;
          --v9;
        }
        while (v9);
        return sub_22A628B90(a2, 2u);
      }
    }
  }
  else
  {
    sub_22A6A6264();
    return sub_22A6A627C();
  }
  return result;
}

uint64_t sub_22A642E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (a5)
  {
    if (a5 == 1)
    {
      sub_22A6A6264();
      v8 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v8)
      {
        v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8) - 8);
        v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        v12 = *(_QWORD *)(v10 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C3E8();
          v11 += v12;
          --v8;
        }
        while (v8);
        return sub_22A628B08(a2, a3, a4, 1u);
      }
    }
    else
    {
      sub_22A6A6264();
      v13 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v13)
      {
        v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8) - 8);
        v15 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
        v16 = *(_QWORD *)(v14 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C3E8();
          v15 += v16;
          --v13;
        }
        while (v13);
        return sub_22A628B08(a2, a3, a4, 2u);
      }
    }
  }
  else
  {
    sub_22A6A6264();
    return Transform.hash(into:)();
  }
  return result;
}

uint64_t sub_22A642FF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a3)
  {
    if (a3 == 1)
    {
      sub_22A6A6264();
      v4 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v4)
      {
        v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0) - 8);
        v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v8 = *(_QWORD *)(v6 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C5E4();
          v7 += v8;
          --v4;
        }
        while (v4);
        return sub_22A628B90(a2, 1u);
      }
    }
    else
    {
      sub_22A6A6264();
      v9 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v9)
      {
        v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0) - 8);
        v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        v12 = *(_QWORD *)(v10 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C5E4();
          v11 += v12;
          --v9;
        }
        while (v9);
        return sub_22A628B90(a2, 2u);
      }
    }
  }
  else
  {
    sub_22A6A6264();
    sub_22A6A627C();
    return sub_22A6A627C();
  }
  return result;
}

uint64_t sub_22A643150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (BYTE5(a3))
  {
    if (BYTE5(a3) == 1)
    {
      sub_22A6A6264();
      v5 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v5)
      {
        v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8) - 8);
        v8 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        v9 = *(_QWORD *)(v7 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C7B8();
          v8 += v9;
          --v5;
        }
        while (v5);
        return sub_22A628B4C(a2, a3, 1u);
      }
    }
    else
    {
      sub_22A6A6264();
      v10 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v10)
      {
        v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8) - 8);
        v12 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        v13 = *(_QWORD *)(v11 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C7B8();
          v12 += v13;
          --v10;
        }
        while (v10);
        return sub_22A628B4C(a2, a3, 2u);
      }
    }
  }
  else
  {
    sub_22A6A6264();
    Dimension.hash(into:)();
    return Dimension.hash(into:)();
  }
  return result;
}

uint64_t sub_22A6432B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  if (BYTE5(a4))
  {
    if (BYTE5(a4) == 1)
    {
      sub_22A6A6264();
      v8 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v8)
      {
        v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0) - 8);
        v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        v12 = *(_QWORD *)(v10 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C9B4(a1);
          v11 += v12;
          --v8;
        }
        while (v8);
        return sub_22A628B08(a2, a3, a4, 1u);
      }
    }
    else
    {
      sub_22A6A6264();
      v14 = *(_QWORD *)(a2 + 16);
      result = sub_22A6A6264();
      if (v14)
      {
        v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0) - 8);
        v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v17 = *(_QWORD *)(v15 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_22A65C9B4(a1);
          v16 += v17;
          --v14;
        }
        while (v14);
        return sub_22A628B08(a2, a3, a4, 2u);
      }
    }
  }
  else
  {
    *((_QWORD *)&v13 + 1) = a4;
    *(_QWORD *)&v13 = a3;
    sub_22A6A6264();
    HorizontalPosition.hash(into:)(a1, a2, a3);
    return VerticalPosition.hash(into:)(a1, v13 >> 32, SBYTE4(a4));
  }
  return result;
}

void sub_22A64343C()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t sub_22A64344C()
{
  return sub_22A644894((unint64_t *)&qword_255AFEC98, MEMORY[0x24BDCEA88]);
}

uint64_t sub_22A643470()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A643478()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22A643554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  _QWORD *v25;
  char v26;
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  char v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int v43;
  __int128 v44;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (((((((((v11 & ~v10) + v12) & 0xFFFFFFFFFFFFFFF8) + 37) & 0xFFFFFFFFFFFFFFF8) + 69) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFFCLL)
     + 16 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
    return a1;
  }
  v17 = ~v10;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
  v18 = ((unint64_t)a1 + v11) & v17;
  v19 = ((unint64_t)a2 + v11) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v18, v19, v8);
  v20 = v19 + v12;
  *(_BYTE *)(v18 + v12) = *(_BYTE *)(v19 + v12);
  v21 = (v18 + v12) & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
  v24 = *(unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFF8) + 29);
  if (v24 >= 3)
    v24 = *(_DWORD *)v23 + 3;
  v25 = (_QWORD *)(v21 + 8);
  if (v24 == 2)
  {
    *v25 = *(_QWORD *)v23;
    v26 = 2;
    goto LABEL_16;
  }
  if (v24 == 1)
  {
    *v25 = *(_QWORD *)v23;
    v26 = 1;
LABEL_16:
    *(_BYTE *)(v21 + 29) = v26;
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  v27 = *(_OWORD *)v23;
  *(_QWORD *)(v21 + 21) = *(_QWORD *)(v23 + 13);
  *(_OWORD *)v25 = v27;
  *(_BYTE *)(v21 + 29) = 0;
LABEL_18:
  v28 = (v21 + 37) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v22 + 37) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(unsigned __int8 *)(v29 + 13);
  if (v30 >= 3)
    v30 = *(_DWORD *)v29 + 3;
  if (v30 == 2 || v30 == 1)
  {
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 13) = v30;
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 5) = *(_QWORD *)(v29 + 5);
    *(_QWORD *)v28 = v31;
    *(_BYTE *)(v28 + 13) = 0;
  }
  v32 = (v29 + 21) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(unsigned __int8 *)(v32 + 8);
  if (v33 >= 3)
    v33 = *(_DWORD *)v32 + 3;
  v34 = (v28 + 21) & 0xFFFFFFFFFFFFFFF8;
  if (v33 == 2)
  {
    *(_QWORD *)v34 = *(_QWORD *)v32;
    v35 = 2;
    goto LABEL_30;
  }
  if (v33 == 1)
  {
    *(_QWORD *)v34 = *(_QWORD *)v32;
    v35 = 1;
LABEL_30:
    *(_BYTE *)(v34 + 8) = v35;
    swift_bridgeObjectRetain();
    goto LABEL_32;
  }
  *(_QWORD *)v34 = *(_QWORD *)v32;
  *(_BYTE *)(v34 + 8) = 0;
LABEL_32:
  v36 = (v29 + 37) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(unsigned __int8 *)(v36 + 24);
  if (v37 >= 3)
    v37 = *(_DWORD *)v36 + 3;
  v38 = (v28 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v37 == 2)
  {
    *(_QWORD *)v38 = *(_QWORD *)v36;
    v39 = 2;
  }
  else
  {
    if (v37 != 1)
    {
      v40 = *(_OWORD *)v36;
      *(_QWORD *)(v38 + 16) = *(_QWORD *)(v36 + 16);
      *(_OWORD *)v38 = v40;
      *(_BYTE *)(v38 + 24) = 0;
      goto LABEL_40;
    }
    *(_QWORD *)v38 = *(_QWORD *)v36;
    v39 = 1;
  }
  *(_BYTE *)(v38 + 24) = v39;
  swift_bridgeObjectRetain();
LABEL_40:
  v41 = (v28 + 69) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v29 + 69) & 0xFFFFFFFFFFFFFFF8;
  v43 = *(unsigned __int8 *)(v42 + 8);
  if (v43 >= 3)
    v43 = *(_DWORD *)v42 + 3;
  if (v43 == 2 || v43 == 1)
  {
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_BYTE *)(v41 + 8) = v43;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_DWORD *)v41 = *(_DWORD *)v42;
    *(_BYTE *)(v41 + 8) = 0;
  }
  v44 = *(_OWORD *)(v42 + 12);
  *(_BYTE *)(v41 + 28) = *(_BYTE *)(v42 + 28);
  *(_OWORD *)(v41 + 12) = v44;
  *(_DWORD *)(v41 + 32) = *(_DWORD *)(v42 + 32);
  *(_OWORD *)((v41 + 39) & 0xFFFFFFFFFFFFFCLL) = *(_OWORD *)((v42 + 39) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22A64389C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unsigned int v19;

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  result = (*(uint64_t (**)(unint64_t))(v7 + 8))(v8);
  v10 = (v8 + *(_QWORD *)(v7 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(unsigned __int8 *)(v10 + 29);
  if (v11 >= 3)
    v11 = *(_DWORD *)(v10 + 8) + 3;
  if (v11)
    result = swift_bridgeObjectRelease();
  v12 = (v10 + 37) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(unsigned __int8 *)(v12 + 13);
  if (v13 >= 3)
    v13 = *(_DWORD *)v12 + 3;
  if (v13)
    result = swift_bridgeObjectRelease();
  v14 = (v12 + 21) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(unsigned __int8 *)(v14 + 8);
  if (v15 >= 3)
    v15 = *(_DWORD *)v14 + 3;
  if (v15)
    result = swift_bridgeObjectRelease();
  v16 = (v12 + 37) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(unsigned __int8 *)(v16 + 24);
  if (v17 >= 3)
    v17 = *(_DWORD *)v16 + 3;
  if (v17)
    result = swift_bridgeObjectRelease();
  v18 = (v12 + 69) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 >= 3)
    v19 = *(_DWORD *)v18 + 3;
  if (v19)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22A6439E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  _QWORD *v21;
  char v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  char v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  unsigned int v39;
  __int128 v40;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
  v20 = *(unsigned __int8 *)(v18 + 29);
  if (v20 >= 3)
    v20 = *(_DWORD *)v19 + 3;
  v21 = (_QWORD *)(v17 + 8);
  if (v20 == 2)
  {
    *v21 = *(_QWORD *)v19;
    v22 = 2;
    goto LABEL_7;
  }
  if (v20 == 1)
  {
    *v21 = *(_QWORD *)v19;
    v22 = 1;
LABEL_7:
    *(_BYTE *)(v17 + 29) = v22;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  v23 = *(_OWORD *)v19;
  *(_QWORD *)(v17 + 21) = *(_QWORD *)(v19 + 13);
  *(_OWORD *)v21 = v23;
  *(_BYTE *)(v17 + 29) = 0;
LABEL_9:
  v24 = (v17 + 37) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v18 + 37) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(unsigned __int8 *)(v25 + 13);
  if (v26 >= 3)
    v26 = *(_DWORD *)v25 + 3;
  if (v26 == 2 || v26 == 1)
  {
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_BYTE *)(v24 + 13) = v26;
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 5) = *(_QWORD *)(v25 + 5);
    *(_QWORD *)v24 = v27;
    *(_BYTE *)(v24 + 13) = 0;
  }
  v28 = (v25 + 21) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(unsigned __int8 *)(v28 + 8);
  if (v29 >= 3)
    v29 = *(_DWORD *)v28 + 3;
  v30 = (v24 + 21) & 0xFFFFFFFFFFFFFFF8;
  if (v29 == 2)
  {
    *(_QWORD *)v30 = *(_QWORD *)v28;
    v31 = 2;
    goto LABEL_21;
  }
  if (v29 == 1)
  {
    *(_QWORD *)v30 = *(_QWORD *)v28;
    v31 = 1;
LABEL_21:
    *(_BYTE *)(v30 + 8) = v31;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  *(_QWORD *)v30 = *(_QWORD *)v28;
  *(_BYTE *)(v30 + 8) = 0;
LABEL_23:
  v32 = (v25 + 37) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(unsigned __int8 *)(v32 + 24);
  if (v33 >= 3)
    v33 = *(_DWORD *)v32 + 3;
  v34 = (v24 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v33 == 2)
  {
    *(_QWORD *)v34 = *(_QWORD *)v32;
    v35 = 2;
    goto LABEL_29;
  }
  if (v33 == 1)
  {
    *(_QWORD *)v34 = *(_QWORD *)v32;
    v35 = 1;
LABEL_29:
    *(_BYTE *)(v34 + 24) = v35;
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  v36 = *(_OWORD *)v32;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v32 + 16);
  *(_OWORD *)v34 = v36;
  *(_BYTE *)(v34 + 24) = 0;
LABEL_31:
  v37 = (v24 + 69) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v25 + 69) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(unsigned __int8 *)(v38 + 8);
  if (v39 >= 3)
    v39 = *(_DWORD *)v38 + 3;
  if (v39 == 2 || v39 == 1)
  {
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_BYTE *)(v37 + 8) = v39;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_DWORD *)v37 = *(_DWORD *)v38;
    *(_BYTE *)(v37 + 8) = 0;
  }
  v40 = *(_OWORD *)(v38 + 12);
  *(_BYTE *)(v37 + 28) = *(_BYTE *)(v38 + 28);
  *(_OWORD *)(v37 + 12) = v40;
  *(_DWORD *)(v37 + 32) = *(_DWORD *)(v38 + 32);
  *(_OWORD *)((v37 + 39) & 0xFFFFFFFFFFFFFCLL) = *(_OWORD *)((v38 + 39) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22A643CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  unsigned int v20;
  _DWORD *v21;
  unsigned int v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unsigned int v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  __int128 v42;
  _DWORD *v43;
  _DWORD *v44;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  if ((v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8))
  {
    v19 = (_DWORD *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 29);
    if (v20 >= 3)
      v20 = *v19 + 3;
    v21 = (_DWORD *)(v18 + 8);
    if (v20)
      swift_bridgeObjectRelease();
    v22 = *(unsigned __int8 *)(v18 + 29);
    if (v22 >= 3)
      v22 = *v21 + 3;
    if (v22 == 2 || v22 == 1)
    {
      *(_QWORD *)v19 = *(_QWORD *)v21;
      *(_BYTE *)(v17 + 29) = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *(_OWORD *)v21;
      *(_QWORD *)(v17 + 21) = *(_QWORD *)(v18 + 21);
      *(_OWORD *)v19 = v23;
      *(_BYTE *)(v17 + 29) = 0;
    }
  }
  v24 = (v17 + 37) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v18 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v24 != v25)
  {
    v26 = *(unsigned __int8 *)(v24 + 13);
    if (v26 >= 3)
      v26 = *(_DWORD *)v24 + 3;
    if (v26)
      swift_bridgeObjectRelease();
    v27 = *(unsigned __int8 *)(v25 + 13);
    if (v27 >= 3)
      v27 = *(_DWORD *)v25 + 3;
    if (v27 == 2 || v27 == 1)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *(_BYTE *)(v24 + 13) = v27;
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *(_QWORD *)v25;
      *(_QWORD *)(v24 + 5) = *(_QWORD *)(v25 + 5);
      *(_QWORD *)v24 = v28;
      *(_BYTE *)(v24 + 13) = 0;
    }
  }
  v29 = (v24 + 21) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v25 + 21) & 0xFFFFFFFFFFFFFFF8;
  if (v29 != v30)
  {
    v31 = *(unsigned __int8 *)(v29 + 8);
    if (v31 >= 3)
      v31 = *(_DWORD *)v29 + 3;
    if (v31)
      swift_bridgeObjectRelease();
    v32 = *(unsigned __int8 *)(v30 + 8);
    if (v32 >= 3)
      v32 = *(_DWORD *)v30 + 3;
    if (v32 == 2 || v32 == 1)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_BYTE *)(v29 + 8) = v32;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_BYTE *)(v29 + 8) = 0;
    }
  }
  v33 = (v24 + 37) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v25 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v33 != v34)
  {
    v35 = *(unsigned __int8 *)(v33 + 24);
    if (v35 >= 3)
      v35 = *(_DWORD *)v33 + 3;
    if (v35)
      swift_bridgeObjectRelease();
    v36 = *(unsigned __int8 *)(v34 + 24);
    if (v36 >= 3)
      v36 = *(_DWORD *)v34 + 3;
    if (v36 == 2 || v36 == 1)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_BYTE *)(v33 + 24) = v36;
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = *(_OWORD *)v34;
      *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
      *(_OWORD *)v33 = v37;
      *(_BYTE *)(v33 + 24) = 0;
    }
  }
  v38 = (v24 + 69) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v25 + 69) & 0xFFFFFFFFFFFFFFF8;
  if (v38 != v39)
  {
    v40 = *(unsigned __int8 *)(v38 + 8);
    if (v40 >= 3)
      v40 = *(_DWORD *)v38 + 3;
    if (v40)
      swift_bridgeObjectRelease();
    v41 = *(unsigned __int8 *)(v39 + 8);
    if (v41 >= 3)
      v41 = *(_DWORD *)v39 + 3;
    if (v41 == 2 || v41 == 1)
    {
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *(_BYTE *)(v38 + 8) = v41;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_DWORD *)v38 = *(_DWORD *)v39;
      *(_BYTE *)(v38 + 8) = 0;
    }
  }
  v42 = *(_OWORD *)(v39 + 12);
  *(_BYTE *)(v38 + 28) = *(_BYTE *)(v39 + 28);
  *(_OWORD *)(v38 + 12) = v42;
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  v43 = (_DWORD *)((v38 + 39) & 0xFFFFFFFFFFFFFFFCLL);
  v44 = (_DWORD *)((v39 + 39) & 0xFFFFFFFFFFFFFFFCLL);
  *v43 = *v44;
  v43[1] = v44[1];
  v43[2] = v44[2];
  v43[3] = v44[3];
  return a1;
}

uint64_t sub_22A64400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  _QWORD *v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  unsigned int v29;
  unint64_t v30;
  unsigned int v31;
  unint64_t v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  unsigned int v36;
  char v37;
  __int128 v38;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v13 + v14;
  *(_BYTE *)(v12 + v14) = *(_BYTE *)(v13 + v14);
  v16 = (v12 + v14) & 0xFFFFFFFFFFFFFFF8;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
  v19 = *(unsigned __int8 *)(v17 + 29);
  if (v19 >= 3)
    v19 = *(_DWORD *)v18 + 3;
  v20 = (_QWORD *)(v16 + 8);
  if (v19 == 2 || v19 == 1)
  {
    *v20 = *(_QWORD *)v18;
  }
  else
  {
    LOBYTE(v19) = 0;
    v21 = *(_OWORD *)v18;
    *(_QWORD *)(v16 + 21) = *(_QWORD *)(v18 + 13);
    *(_OWORD *)v20 = v21;
  }
  *(_BYTE *)(v16 + 29) = v19;
  v22 = (v16 + 37) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v17 + 37) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(unsigned __int8 *)(v23 + 13);
  if (v24 >= 3)
    v24 = *(_DWORD *)v23 + 3;
  if (v24 == 2)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v25 = 2;
  }
  else if (v24 == 1)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v25 = 1;
  }
  else
  {
    v25 = 0;
    v26 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 5) = *(_QWORD *)(v23 + 5);
    *(_QWORD *)v22 = v26;
  }
  *(_BYTE *)(v22 + 13) = v25;
  v27 = (v22 + 21) & 0xFFFFFFFFFFFFFFF8;
  v28 = (_BYTE *)((v23 + 21) & 0xFFFFFFFFFFFFFFF8);
  v29 = v28[8];
  if (v29 >= 3)
    LOBYTE(v29) = *v28 + 3;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = v29;
  v30 = (v23 + 37) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v30 + 24);
  if (v31 >= 3)
    v31 = *(_DWORD *)v30 + 3;
  v32 = (v22 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v31 == 2 || v31 == 1)
  {
    *(_QWORD *)v32 = *(_QWORD *)v30;
  }
  else
  {
    LOBYTE(v31) = 0;
    v33 = *(_OWORD *)v30;
    *(_QWORD *)(v32 + 16) = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v32 = v33;
  }
  *(_BYTE *)(v32 + 24) = v31;
  v34 = (v22 + 69) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v23 + 69) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(unsigned __int8 *)(v35 + 8);
  if (v36 >= 3)
    v36 = *(_DWORD *)v35 + 3;
  if (v36 == 2)
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v37 = 2;
  }
  else if (v36 == 1)
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v37 = 1;
  }
  else
  {
    v37 = 0;
    *(_DWORD *)v34 = *(_DWORD *)v35;
  }
  *(_BYTE *)(v34 + 8) = v37;
  v38 = *(_OWORD *)(v35 + 12);
  *(_BYTE *)(v34 + 28) = *(_BYTE *)(v35 + 28);
  *(_OWORD *)(v34 + 12) = v38;
  *(_DWORD *)(v34 + 32) = *(_DWORD *)(v35 + 32);
  *(_OWORD *)((v34 + 39) & 0xFFFFFFFFFFFFFCLL) = *(_OWORD *)((v35 + 39) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22A644284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  unsigned int v20;
  _DWORD *v21;
  unsigned int v22;
  char v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  unsigned int v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  char v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int v43;
  unsigned int v44;
  char v45;
  __int128 v46;
  _DWORD *v47;
  _DWORD *v48;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  if ((v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8))
  {
    v19 = (_DWORD *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 29);
    if (v20 >= 3)
      v20 = *v19 + 3;
    v21 = (_DWORD *)(v18 + 8);
    if (v20)
      swift_bridgeObjectRelease();
    v22 = *(unsigned __int8 *)(v18 + 29);
    if (v22 >= 3)
      v22 = *v21 + 3;
    if (v22 == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v21;
      v23 = 2;
    }
    else if (v22 == 1)
    {
      *(_QWORD *)v19 = *(_QWORD *)v21;
      v23 = 1;
    }
    else
    {
      v23 = 0;
      v24 = *(_OWORD *)v21;
      *(_QWORD *)(v17 + 21) = *(_QWORD *)(v18 + 21);
      *(_OWORD *)v19 = v24;
    }
    *(_BYTE *)(v17 + 29) = v23;
  }
  v25 = (v17 + 37) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v18 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v25 != v26)
  {
    v27 = *(unsigned __int8 *)(v25 + 13);
    if (v27 >= 3)
      v27 = *(_DWORD *)v25 + 3;
    if (v27)
      swift_bridgeObjectRelease();
    v28 = *(unsigned __int8 *)(v26 + 13);
    if (v28 >= 3)
      v28 = *(_DWORD *)v26 + 3;
    if (v28 == 2)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v29 = 2;
    }
    else if (v28 == 1)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v29 = 1;
    }
    else
    {
      v29 = 0;
      v30 = *(_QWORD *)v26;
      *(_QWORD *)(v25 + 5) = *(_QWORD *)(v26 + 5);
      *(_QWORD *)v25 = v30;
    }
    *(_BYTE *)(v25 + 13) = v29;
  }
  v31 = (v25 + 21) & 0xFFFFFFFFFFFFFFF8;
  v32 = (_BYTE *)((v26 + 21) & 0xFFFFFFFFFFFFFFF8);
  if ((_BYTE *)v31 != v32)
  {
    v33 = *(unsigned __int8 *)(v31 + 8);
    if (v33 >= 3)
      v33 = *(_DWORD *)v31 + 3;
    if (v33)
      swift_bridgeObjectRelease();
    v34 = v32[8];
    if (v34 >= 3)
      LOBYTE(v34) = *v32 + 3;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_BYTE *)(v31 + 8) = v34;
  }
  v35 = (v25 + 37) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v26 + 37) & 0xFFFFFFFFFFFFFFF8;
  if (v35 != v36)
  {
    v37 = *(unsigned __int8 *)(v35 + 24);
    if (v37 >= 3)
      v37 = *(_DWORD *)v35 + 3;
    if (v37)
      swift_bridgeObjectRelease();
    v38 = *(unsigned __int8 *)(v36 + 24);
    if (v38 >= 3)
      v38 = *(_DWORD *)v36 + 3;
    if (v38 == 2)
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v39 = 2;
    }
    else if (v38 == 1)
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v39 = 1;
    }
    else
    {
      v39 = 0;
      v40 = *(_OWORD *)v36;
      *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
      *(_OWORD *)v35 = v40;
    }
    *(_BYTE *)(v35 + 24) = v39;
  }
  v41 = (v25 + 69) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v26 + 69) & 0xFFFFFFFFFFFFFFF8;
  if (v41 != v42)
  {
    v43 = *(unsigned __int8 *)(v41 + 8);
    if (v43 >= 3)
      v43 = *(_DWORD *)v41 + 3;
    if (v43)
      swift_bridgeObjectRelease();
    v44 = *(unsigned __int8 *)(v42 + 8);
    if (v44 >= 3)
      v44 = *(_DWORD *)v42 + 3;
    if (v44 == 2)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v45 = 2;
    }
    else if (v44 == 1)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v45 = 1;
    }
    else
    {
      v45 = 0;
      *(_DWORD *)v41 = *(_DWORD *)v42;
    }
    *(_BYTE *)(v41 + 8) = v45;
  }
  v46 = *(_OWORD *)(v42 + 12);
  *(_BYTE *)(v41 + 28) = *(_BYTE *)(v42 + 28);
  *(_OWORD *)(v41 + 12) = v46;
  *(_DWORD *)(v41 + 32) = *(_DWORD *)(v42 + 32);
  v47 = (_DWORD *)((v41 + 39) & 0xFFFFFFFFFFFFFFFCLL);
  v48 = (_DWORD *)((v42 + 39) & 0xFFFFFFFFFFFFFFFCLL);
  *v47 = *v48;
  v47[1] = v48[1];
  v47[2] = v48[2];
  v47[3] = v48[3];
  return a1;
}

uint64_t sub_22A64460C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v18)(_DWORD *, uint64_t, uint64_t);
  _DWORD *v19;
  unsigned int v20;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0xFD)
    v12 = 253;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64);
  if (v12 < a2
    && *((_BYTE *)a1
       + (((((((((v15 & ~v14) + v16) & 0xFFFFFFFFFFFFFFF8) + 37) & 0xFFFFFFFFFFFFFFF8) + 69) & 0xFFFFFFFFFFFFFFF8)
         + 39) & 0xFFFFFFFFFFFFFFFCLL)
       + 16))
  {
    return v12 + *a1 + 1;
  }
  if (v8 == v12)
  {
    v18 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
    v19 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v18(v19, v11, v9);
  }
  v19 = (_DWORD *)(((unint64_t)a1 + v15) & ~v14);
  if ((_DWORD)v11 == v12)
  {
    v18 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
    return v18(v19, v11, v9);
  }
  v20 = *(unsigned __int8 *)((((unint64_t)v19 + v16) & 0xFFFFFFFFFFFFF8) + 0x1D);
  if (v20 >= 3)
    return (v20 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_22A64472C(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_DWORD *, uint64_t, uint64_t, uint64_t);
  _DWORD *v22;
  uint64_t v23;
  _QWORD *v24;

  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v11 = *(_QWORD *)(a4 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v10)
    v14 = *(_DWORD *)(v9 + 84);
  else
    v14 = *(_DWORD *)(v12 + 84);
  if (v14 <= 0xFD)
    v15 = 253;
  else
    v15 = v14;
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = *(_QWORD *)(v9 + 64) + v16;
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (((((((((v17 & ~v16) + v18) & 0xFFFFFFFFFFFFFFF8) + 37) & 0xFFFFFFFFFFFFFFF8) + 69) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFFCLL)
      + 16;
  if (v15 < a2)
  {
    bzero(a1, (((((((((v17 & ~v16) + v18) & 0xFFFFFFFFFFFFFFF8) + 37) & 0xFFFFFFFFFFFFFFF8) + 69) & 0xFFFFFFFFFFFFFFF8)+ 39) & 0xFFFFFFFFFFFFFFFCLL)+ 16);
    *a1 = ~v15 + a2;
    if (v15 < a3)
      *((_BYTE *)a1 + v19) = 1;
    return;
  }
  v20 = v8;
  if (v15 < a3)
    *((_BYTE *)a1 + v19) = 0;
  if ((_DWORD)a2)
  {
    if ((_DWORD)v10 == v15)
    {
      v21 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v22 = a1;
      v23 = a2;
      v13 = v10;
      v11 = v20;
LABEL_17:
      v21(v22, v23, v13, v11);
      return;
    }
    v22 = (_DWORD *)(((unint64_t)a1 + v17) & ~v16);
    if ((_DWORD)v13 == v15)
    {
      v21 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v23 = a2;
      goto LABEL_17;
    }
    v24 = (_QWORD *)((((unint64_t)v22 + v18) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (a2 > 0xFD)
    {
      *v24 = 0;
      *(_QWORD *)((((unint64_t)v22 + v18) & 0xFFFFFFFFFFFFFFF8) + 16) = 0;
      *(_QWORD *)((((unint64_t)v22 + v18) & 0xFFFFFFFFFFFFFFF8) + 22) = 0;
      *(_DWORD *)v24 = a2 - 254;
    }
    else
    {
      *(_BYTE *)((((unint64_t)v22 + v18) & 0xFFFFFFFFFFFFFFF8) + 29) = -(char)a2;
    }
  }
}

uint64_t sub_22A644894(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_22A6A5C40();
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E2DF2B4](a1, v6, a5);
}

uint64_t dispatch thunk of RenderActionsLogging.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RenderActionsLogging.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RenderActionsLogging.log(action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_22A644918(char a1)
{
  return *(_QWORD *)&aOrigin_1[8 * a1];
}

uint64_t sub_22A644938(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_22A644918(*a1);
  v5 = v4;
  if (v3 == sub_22A644918(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22A6449C0()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  sub_22A644918(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A644A20()
{
  char *v0;

  sub_22A644918(*v0);
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A644A60()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  sub_22A644918(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A644ABC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A644CB4();
  *a1 = result;
  return result;
}

uint64_t sub_22A644AE8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22A644918(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for RenderStyleKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderStyleKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_22A644BEC + 4 * byte_22A6A82CD[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_22A644C20 + 4 * asc_22A6A82C8[v4]))();
}

uint64_t sub_22A644C20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A644C28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A644C30);
  return result;
}

uint64_t sub_22A644C3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A644C44);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_22A644C48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A644C50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RenderStyleKey()
{
  return &type metadata for RenderStyleKey;
}

unint64_t sub_22A644C70()
{
  unint64_t result;

  result = qword_255AFF3D0;
  if (!qword_255AFF3D0)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A835C, &type metadata for RenderStyleKey);
    atomic_store(result, (unint64_t *)&qword_255AFF3D0);
  }
  return result;
}

uint64_t sub_22A644CB4()
{
  unint64_t v0;

  v0 = sub_22A6A61E0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

BOOL static AssetStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t AssetStatus.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AssetStatus.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

BOOL sub_22A644D7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_22A644D94()
{
  unint64_t result;

  result = qword_255AFF3D8;
  if (!qword_255AFF3D8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AssetStatus, &type metadata for AssetStatus);
    atomic_store(result, (unint64_t *)&qword_255AFF3D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContainerContent.HorizontalAlignment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A644EB4 + 4 * byte_22A6A8525[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A644EE8 + 4 * byte_22A6A8520[v4]))();
}

uint64_t sub_22A644EE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A644EF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A644EF8);
  return result;
}

uint64_t sub_22A644F04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A644F0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A644F10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A644F18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetStatus()
{
  return &type metadata for AssetStatus;
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.register(assets:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A62ED7C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.unregisterAsset(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_22A62E6B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.filteredAssets(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A6450A8;
  return v9(a1, a2, a3);
}

uint64_t sub_22A6450A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.allAssets()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A6452D0;
  return v7(a1, a2);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.queryAsset(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 40) + *(_QWORD *)(a5 + 40));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A62ED7C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.updateRemoteStore()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED7C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of AirPlayOverlayAssetStoring.reset()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 56) + *(_QWORD *)(a2 + 56));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED7C;
  return v7(a1, a2);
}

uint64_t sub_22A6452D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  _OWORD v36[2];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;

  v1 = MEMORY[0x24BEE4B00];
  v2 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  v49 = MEMORY[0x24BEE4B00];
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & v2;
  v33 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_40;
LABEL_7:
  v8 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v8 < v33)
    {
      v9 = *(_QWORD *)(v34 + 8 * v8);
      v10 = i + 1;
      if (v9)
        goto LABEL_22;
      v10 = i + 2;
      if (i + 2 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v34 + 8 * v10);
      if (v9)
        goto LABEL_22;
      v10 = i + 3;
      if (i + 3 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v34 + 8 * v10);
      if (v9)
        goto LABEL_22;
      v10 = i + 4;
      if (i + 4 >= v33)
        goto LABEL_41;
      v9 = *(_QWORD *)(v34 + 8 * v10);
      if (v9)
      {
LABEL_22:
        v5 = (v9 - 1) & v9;
        v12 = __clz(__rbit64(v9)) + (v10 << 6);
        for (i = v10; ; v12 = v32 | (i << 6))
        {
          v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
          v15 = *v13;
          v14 = v13[1];
          sub_22A62F9B8(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v47, &qword_255AFEFA8);
          *(_QWORD *)&v46 = v15;
          *((_QWORD *)&v46 + 1) = v14;
          v43 = v46;
          v44[0] = v47[0];
          v44[1] = v47[1];
          v45 = v48;
          sub_22A62F9B8((uint64_t)v44, (uint64_t)&v38, &qword_255AFEFA8);
          if (*((_QWORD *)&v39 + 1))
          {
            v36[0] = v38;
            v36[1] = v39;
            v37 = v40;
            sub_22A633AAC((uint64_t)v36, (uint64_t)&v38);
            swift_bridgeObjectRetain();
            if ((swift_dynamicCast() & 1) != 0)
            {
              v17 = v41;
              v16 = v42;
            }
            else
            {
              v17 = sub_22A6A606C();
              v16 = v18;
            }
            sub_22A649524((uint64_t)v36);
            v19 = v43;
            v38 = v43;
            sub_22A62981C((uint64_t)v44, (uint64_t)&v39, &qword_255AFEFA8);
            v20 = *(_QWORD *)(v1 + 16);
            if (*(_QWORD *)(v1 + 24) <= v20)
            {
              sub_22A633EB4(v20 + 1, 1);
              v1 = v49;
            }
            sub_22A6A6258();
            sub_22A6A5DE4();
            result = sub_22A6A62A0();
            v21 = v1 + 64;
            v22 = -1 << *(_BYTE *)(v1 + 32);
            v23 = result & ~v22;
            v24 = v23 >> 6;
            if (((-1 << v23) & ~*(_QWORD *)(v1 + 64 + 8 * (v23 >> 6))) != 0)
            {
              v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v1 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v26 = 0;
              v27 = (unint64_t)(63 - v22) >> 6;
              do
              {
                if (++v24 == v27 && (v26 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_42;
                }
                v28 = v24 == v27;
                if (v24 == v27)
                  v24 = 0;
                v26 |= v28;
                v29 = *(_QWORD *)(v21 + 8 * v24);
              }
              while (v29 == -1);
              v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            }
            *(_QWORD *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
            v30 = 16 * v25;
            *(_OWORD *)(*(_QWORD *)(v1 + 48) + v30) = v19;
            v31 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v30);
            *v31 = v17;
            v31[1] = v16;
            ++*(_QWORD *)(v1 + 16);
            result = sub_22A629860((uint64_t)&v39, &qword_255AFEFA8);
            if (!v5)
              goto LABEL_7;
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_22A629860((uint64_t)&v38, &qword_255AFEFA8);
            result = sub_22A629860((uint64_t)&v43, &qword_255AFEFB0);
            if (!v5)
              goto LABEL_7;
          }
LABEL_40:
          v32 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v11 = i + 5;
      if (i + 5 < v33)
      {
        v9 = *(_QWORD *)(v34 + 8 * v11);
        if (v9)
        {
          v10 = i + 5;
          goto LABEL_22;
        }
        while (1)
        {
          v10 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_43;
          if (v10 >= v33)
            break;
          v9 = *(_QWORD *)(v34 + 8 * v10);
          ++v11;
          if (v9)
            goto LABEL_22;
        }
      }
    }
LABEL_41:
    sub_22A633AA4();
    return v1;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_22A6456E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22A64570C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 40))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22A645738(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 48))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22A645764(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 56))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22A645790(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 64))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22A6457BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(uint64_t (**)(_QWORD, uint64_t))(a2 + 72))(*(_QWORD *)(a1 + 16), a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 32) = 0x444965646F6ELL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  sub_22A6298A0();
  sub_22A6A6084();
  v12 = sub_22A630814(inited);
  return sub_22A6458E0(v12, v10, (uint64_t)sub_22A679F68, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_22A648E84);
}

uint64_t sub_22A6458E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease();
  if (v4)
    swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22A645968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  int *v49;
  uint64_t v50;

  v3 = (int *)a1;
  v48 = (*(uint64_t (**)(_QWORD))(a2 + 80))(*(_QWORD *)(a1 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A85D0;
  *(_QWORD *)(inited + 32) = 0x756F72676B636162;
  *(_QWORD *)(inited + 40) = 0xEF726F6C6F43646ELL;
  sub_22A69C250(*(_QWORD *)(v2 + v3[16]), *(_QWORD *)(v2 + v3[16] + 8), *(_BYTE *)(v2 + v3[16] + 16));
  sub_22A6A6084();
  strcpy((char *)(inited + 88), "cornerRadius");
  *(_BYTE *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 120;
  *(_QWORD *)(inited + 152) = 0xE100000000000000;
  v49 = v3;
  v50 = v2;
  v5 = v2 + v3[11];
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(unsigned int *)(v5 + 16) | ((unint64_t)*(unsigned __int8 *)(v5 + 20) << 32);
  v9 = *(unsigned __int8 *)(v5 + 21);
  sub_22A628ADC(*(_QWORD *)v5, v7, v8, *(_BYTE *)(v5 + 21));
  v10 = sub_22A645FD8(v6, v7, v8 | (v9 << 40));
  v12 = v11;
  LOBYTE(v3) = ~v11;
  sub_22A628B08(v6, v7, v8, v9);
  if ((_BYTE)v3)
  {
    sub_22A69C57C(v10, v12);
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 192) = 0;
    *(_OWORD *)(inited + 160) = 0u;
    *(_OWORD *)(inited + 176) = 0u;
  }
  *(_QWORD *)(inited + 200) = 121;
  *(_QWORD *)(inited + 208) = 0xE100000000000000;
  sub_22A628ADC(v6, v7, v8, v9);
  sub_22A645FD8(v6, v7, v8 | (v9 << 40));
  v14 = v13;
  v16 = v15;
  v17 = ~(_BYTE)v13;
  sub_22A628B08(v6, v7, v8, v9);
  if (v17)
  {
    *((_QWORD *)&v18 + 1) = v16;
    *(_QWORD *)&v18 = v14;
    sub_22A69C6E0(v18 >> 32, SBYTE4(v16));
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 248) = 0;
    *(_OWORD *)(inited + 216) = 0u;
    *(_OWORD *)(inited + 232) = 0u;
  }
  *(_QWORD *)(inited + 256) = 0x6874646977;
  *(_QWORD *)(inited + 264) = 0xE500000000000000;
  v19 = v50 + v49[12];
  v20 = *(_QWORD *)v19;
  v21 = *(unsigned int *)(v19 + 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 12) << 32);
  v22 = *(unsigned __int8 *)(v19 + 13);
  sub_22A628B20(*(_QWORD *)v19, v21, *(_BYTE *)(v19 + 13));
  v23 = sub_22A6461E4(v20, v21 | (v22 << 40));
  sub_22A628B4C(v20, v21, v22);
  if ((~v23 & 0xFF00000000) != 0)
  {
    sub_22A69C850(v23 & 0xFFFFFFFFFFLL);
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 304) = 0;
    *(_OWORD *)(inited + 272) = 0u;
    *(_OWORD *)(inited + 288) = 0u;
  }
  *(_QWORD *)(inited + 312) = 0x746867696568;
  *(_QWORD *)(inited + 320) = 0xE600000000000000;
  sub_22A628B20(v20, v21, v22);
  v24 = sub_22A6461E4(v20, v21 | (v22 << 40));
  v26 = v25;
  sub_22A628B4C(v20, v21, v22);
  if ((~v24 & 0xFF00000000) != 0)
  {
    sub_22A69C850(v26 & 0xFFFFFFFFFFLL);
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 360) = 0;
    *(_OWORD *)(inited + 328) = 0u;
    *(_OWORD *)(inited + 344) = 0u;
  }
  *(_QWORD *)(inited + 368) = 0x726F66736E617274;
  *(_QWORD *)(inited + 376) = 0xE90000000000006DLL;
  v27 = v50 + v49[14];
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  v30 = *(_QWORD *)(v27 + 16);
  v31 = *(_BYTE *)(v27 + 24);
  sub_22A628ADC(*(_QWORD *)v27, v29, v30, v31);
  sub_22A6463DC(v28, v29, v30, v31);
  v33 = v32;
  sub_22A628B08(v28, v29, v30, v31);
  if ((v33 & 1) != 0)
  {
    *(_QWORD *)(inited + 416) = 0;
    *(_OWORD *)(inited + 384) = 0u;
    *(_OWORD *)(inited + 400) = 0u;
  }
  else
  {
    sub_22A69C96C();
    sub_22A6A6084();
  }
  strcpy((char *)(inited + 424), "centerAnchorX");
  *(_WORD *)(inited + 438) = -4864;
  v34 = v50 + v49[13];
  v35 = *(_QWORD *)v34;
  v36 = *(_BYTE *)(v34 + 8);
  sub_22A628B64(*(_QWORD *)v34, v36);
  sub_22A6465D8(v35, v36);
  v38 = v37;
  sub_22A628B90(v35, v36);
  if ((v38 & 1) != 0)
  {
    *(_QWORD *)(inited + 472) = 0;
    *(_OWORD *)(inited + 440) = 0u;
    *(_OWORD *)(inited + 456) = 0u;
  }
  else
  {
    sub_22A6A6084();
  }
  strcpy((char *)(inited + 480), "centerAnchorY");
  *(_WORD *)(inited + 494) = -4864;
  sub_22A628B64(v35, v36);
  sub_22A6465D8(v35, v36);
  v40 = v39;
  sub_22A628B90(v35, v36);
  if ((v40 & 1) != 0)
  {
    *(_QWORD *)(inited + 528) = 0;
    *(_OWORD *)(inited + 496) = 0u;
    *(_OWORD *)(inited + 512) = 0u;
  }
  else
  {
    sub_22A6A6084();
  }
  *(_QWORD *)(inited + 536) = 0x7974696361706FLL;
  *(_QWORD *)(inited + 544) = 0xE700000000000000;
  v41 = v50 + v49[15];
  v42 = *(_QWORD *)v41;
  v43 = *(_BYTE *)(v41 + 8);
  sub_22A628B64(*(_QWORD *)v41, v43);
  v44 = sub_22A6467A4(v42, v43);
  sub_22A628B90(v42, v43);
  if ((v44 & 0x100000000) != 0)
  {
    *(_QWORD *)(inited + 584) = 0;
    *(_OWORD *)(inited + 552) = 0u;
    *(_OWORD *)(inited + 568) = 0u;
  }
  else
  {
    sub_22A6A6084();
  }
  v45 = sub_22A630E48(inited);
  v46 = sub_22A6452D4(v45);
  swift_bridgeObjectRelease();
  return sub_22A6458E0(v48, v46, (uint64_t)sub_22A6494F0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_22A6491E8);
}

uint64_t sub_22A645FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = BYTE5(a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF438);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    v19 = a1;
    sub_22A628ADC(a1, a2, a3, BYTE5(a3));
    swift_bridgeObjectRetain();
    sub_22A6476EC(&v19, &qword_255AFF3C0, (uint64_t (*)(uint64_t))sub_22A698710, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_22A69841C);
    sub_22A628B08(a1, a2, a3, BYTE5(a3));
    v10 = v19;
    v11 = *(_QWORD *)(v19 + 16);
    if (v11)
    {
      v12 = v11 - 1;
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
      v14 = *(_QWORD *)(v13 - 8);
      sub_22A62F9B8(v10+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, (uint64_t)v9, &qword_255AFF3C0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
    }
    swift_release();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16) == 1)
    {
      sub_22A629860((uint64_t)v9, &qword_255AFF438);
      return 0;
    }
    else
    {
      a1 = *(_QWORD *)&v9[*(int *)(v16 + 48)];
      sub_22A629860((uint64_t)v9, &qword_255AFF3C0);
    }
  }
  return a1;
}

uint64_t sub_22A6461E4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = BYTE5(a2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF430);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v4)
    return a1 & 0xFFFFFFFFFFLL;
  v20 = a1;
  sub_22A628B20(a1, a2, BYTE5(a2));
  swift_bridgeObjectRetain();
  sub_22A6476EC(&v20, &qword_255AFF3B8, (uint64_t (*)(uint64_t))sub_22A6986FC, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_22A698410);
  sub_22A628B4C(a1, a2, BYTE5(a2));
  v8 = v20;
  v9 = *(_QWORD *)(v20 + 16);
  if (v9)
  {
    v10 = v9 - 1;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
    v12 = *(_QWORD *)(v11 - 8);
    sub_22A62F9B8(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, (uint64_t)v7, &qword_255AFF3B8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  swift_release();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
  {
    sub_22A629860((uint64_t)v7, &qword_255AFF430);
    return 0xFF00000000;
  }
  else
  {
    v16 = &v7[*(int *)(v15 + 48)];
    v17 = *(unsigned int *)v16;
    v18 = v16[4];
    sub_22A629860((uint64_t)v7, &qword_255AFF3B8);
    return v17 | (v18 << 32);
  }
}

uint64_t sub_22A6463DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;

  v8 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF428);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v8)
  {
    v22 = a1;
    sub_22A628ADC(a1, a2, a3, a4);
    swift_bridgeObjectRetain();
    sub_22A6476EC(&v22, &qword_255AFF3A8, (uint64_t (*)(uint64_t))sub_22A6986D4, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_22A6983F8);
    sub_22A628B08(a1, a2, a3, a4);
    v12 = v22;
    v13 = *(_QWORD *)(v22 + 16);
    if (v13)
    {
      v14 = v13 - 1;
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
      v16 = *(_QWORD *)(v15 - 8);
      sub_22A62F9B8(v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v14, (uint64_t)v11, &qword_255AFF3A8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    }
    swift_release();
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v11, 1, v18) == 1)
    {
      a1 = 0;
      v19 = &qword_255AFF428;
    }
    else
    {
      a1 = *(_QWORD *)&v11[*(int *)(v18 + 48)];
      v19 = &qword_255AFF3A8;
    }
    sub_22A629860((uint64_t)v11, v19);
  }
  return a1;
}

uint64_t sub_22A6465D8(uint64_t a1, unsigned __int8 a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v17;
  uint64_t v18;

  v4 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF420);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    v18 = a1;
    sub_22A628B64(a1, a2);
    swift_bridgeObjectRetain();
    sub_22A6476EC(&v18, &qword_255AFF3B0, (uint64_t (*)(uint64_t))sub_22A6986E8, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_22A698404);
    sub_22A628B90(a1, a2);
    v8 = v18;
    v9 = *(_QWORD *)(v18 + 16);
    if (v9)
    {
      v10 = v9 - 1;
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
      v12 = *(_QWORD *)(v11 - 8);
      sub_22A62F9B8(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, (uint64_t)v7, &qword_255AFF3B0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
    }
    swift_release();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14) == 1)
    {
      a1 = 0;
      v15 = &qword_255AFF420;
    }
    else
    {
      a1 = *(_QWORD *)&v7[*(int *)(v14 + 48)];
      v15 = &qword_255AFF3B0;
    }
    sub_22A629860((uint64_t)v7, v15);
  }
  return a1;
}

unint64_t sub_22A6467A4(uint64_t a1, unsigned __int8 a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v16;
  uint64_t v17;

  v4 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF418);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v4)
    goto LABEL_8;
  v17 = a1;
  sub_22A628B64(a1, a2);
  swift_bridgeObjectRetain();
  sub_22A6476EC(&v17, &qword_255AFF3A0, (uint64_t (*)(uint64_t))sub_22A6986C0, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_22A6983EC);
  sub_22A628B90(a1, a2);
  v8 = v17;
  v9 = *(_QWORD *)(v17 + 16);
  if (v9)
  {
    v10 = v9 - 1;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
    v12 = *(_QWORD *)(v11 - 8);
    sub_22A62F9B8(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, (uint64_t)v7, &qword_255AFF3A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  }
  swift_release();
  a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v7, 1, a1) != 1)
  {
    LODWORD(a1) = *(_DWORD *)&v7[*(int *)(a1 + 48)];
    sub_22A629860((uint64_t)v7, &qword_255AFF3A0);
LABEL_8:
    v14 = 0;
    return a1 | ((unint64_t)v14 << 32);
  }
  sub_22A629860((uint64_t)v7, &qword_255AFF418);
  LODWORD(a1) = 0;
  v14 = 1;
  return a1 | ((unint64_t)v14 << 32);
}

uint64_t sub_22A646980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  v6 = sub_22A6A6000();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))((char *)v12 - v8, 1, 1, a1);
  v10 = sub_22A627E60((uint64_t)v9, v3, a1, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_22A646A4C(uint64_t a1, uint64_t a2)
{
  return sub_22A6456E0(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A54(uint64_t a1, uint64_t a2)
{
  return sub_22A64570C(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A5C(uint64_t a1, uint64_t a2)
{
  return sub_22A645738(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A64(uint64_t a1, uint64_t a2)
{
  return sub_22A645764(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A6C(uint64_t a1, uint64_t a2)
{
  return sub_22A645790(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A74(uint64_t a1, uint64_t a2)
{
  return sub_22A6457BC(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A7C(uint64_t a1, uint64_t a2)
{
  return sub_22A645968(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22A646A84(uint64_t a1, uint64_t a2)
{
  return sub_22A646980(a1, a2, *(_QWORD *)(a2 - 16));
}

uint64_t sub_22A646A9C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderNode<A>);
  result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderNode<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22A646AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = (char *)a1;
  v34 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF440);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v29 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (_QWORD *)((char *)v29 - v13);
  v15 = type metadata accessor for ContainerContent.Child();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a3;
  sub_22A62F9B8(a3, (uint64_t)v18, &qword_255AFEEE0);
  swift_storeEnumTagMultiPayload();
  v19 = v32;
  sub_22A661D34(a2, (uint64_t)v31, (uint64_t)v18);
  result = sub_22A649594((uint64_t)v18);
  if (!v19)
  {
    v31 = v12;
    v32 = a2;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
    v22 = *(_QWORD *)(*(_QWORD *)(v33 + *(int *)(v21 + 36)) + 16);
    v23 = swift_bridgeObjectRetain();
    v29[1] = v23;
    v30 = v22;
    if (v22)
    {
      v24 = 0;
      v25 = v23 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      v26 = *(_QWORD *)(v16 + 72);
      do
      {
        v27 = (uint64_t)&v31[*(int *)(v6 + 48)];
        sub_22A6297D8(v25, v27);
        v28 = (uint64_t)v14 + *(int *)(v6 + 48);
        *v14 = v24;
        sub_22A62F974(v27, v28);
        sub_22A62981C((uint64_t)v14, (uint64_t)v9, (uint64_t *)&unk_255AFF440);
        sub_22A647220(*v9, (uint64_t)v9 + *(int *)(v6 + 48), v33, v32, v34);
        sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255AFF440);
        ++v24;
        v25 += v26;
      }
      while (v30 != v24);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22A646D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v58 = a4;
  v67 = a5;
  v56 = a3;
  v57 = a1;
  v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF440);
  v6 = MEMORY[0x24BDAC7A8](v64);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v65 = (char *)&v53 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char **)((char *)&v53 - v11);
  v12 = sub_22A6A5C88();
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)&v53 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v53 - v20;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v22 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v66 = (uint64_t)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContainerContent.Child();
  v25 = *(char **)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v53 - v29;
  sub_22A6297D8(a2, (uint64_t)&v53 - v29);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A649594((uint64_t)v30);
    v31 = (uint64_t)v55;
    sub_22A6A5C7C();
    sub_22A62F9B8(v56, (uint64_t)v19, &qword_255AFEEE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v62);
    sub_22A69E464(v31, (uint64_t)v19, a2);
    sub_22A629860((uint64_t)v19, (uint64_t *)&unk_255B00CE0);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v31, v61);
  }
  else
  {
    v55 = v25;
    v32 = v66;
    sub_22A62981C((uint64_t)v30, v66, &qword_255AFEEE0);
    sub_22A62F9B8(v56, (uint64_t)v21, &qword_255AFEEE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v62);
    swift_retain();
    v33 = (uint64_t)v54;
    sub_22A6A5C7C();
    sub_22A62F9B8(v32, (uint64_t)v28, &qword_255AFEEE0);
    swift_storeEnumTagMultiPayload();
    v34 = v59;
    sub_22A69E464(v33, (uint64_t)v21, (uint64_t)v28);
    if (v34)
    {
      sub_22A649594((uint64_t)v28);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v33, v61);
      sub_22A629860((uint64_t)v21, (uint64_t *)&unk_255B00CE0);
      sub_22A629860(v32, &qword_255AFEEE0);
    }
    else
    {
      sub_22A649594((uint64_t)v28);
      v35 = *(_QWORD *)(*(_QWORD *)(v32 + *(int *)(v62 + 36)) + 16);
      v36 = swift_bridgeObjectRetain();
      v62 = v35;
      v53 = v21;
      v58 = v36;
      if (v35)
      {
        v37 = 0;
        v38 = v36 + ((v55[80] + 32) & ~(unint64_t)v55[80]);
        v59 = *((_QWORD *)v55 + 9);
        v39 = (uint64_t *)&unk_255AFF440;
        do
        {
          v40 = v64;
          v41 = v33;
          v42 = (uint64_t)&v65[*(int *)(v64 + 48)];
          sub_22A6297D8(v38, v42);
          v43 = v8;
          v44 = v39;
          v45 = v63;
          v46 = (uint64_t)v63 + *(int *)(v40 + 48);
          *v63 = v37;
          sub_22A62F974(v42, v46);
          v47 = (uint64_t)v45;
          v39 = v44;
          v8 = v43;
          sub_22A62981C(v47, (uint64_t)v43, v39);
          v48 = *(_QWORD *)v43;
          v49 = &v43[*(int *)(v40 + 48)];
          v50 = v67;
          swift_retain();
          v51 = v49;
          v33 = v41;
          v32 = v66;
          sub_22A646D08(v48, v51, v66, v33, v50);
          ++v37;
          sub_22A629860((uint64_t)v43, v39);
          v38 += v59;
        }
        while (v62 != v37);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v33, v61);
      sub_22A629860((uint64_t)v53, (uint64_t *)&unk_255B00CE0);
      sub_22A629860(v32, &qword_255AFEEE0);
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22A647220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;

  v57 = a5;
  v54 = a1;
  v55 = a4;
  v53 = a3;
  v62 = a2;
  v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF440);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v48 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v48 - v10;
  v11 = sub_22A6A5C88();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v51 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v63 = (char *)&v48 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v48 - v19;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v21 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContainerContent.Child();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v48 - v29;
  sub_22A6297D8(v62, (uint64_t)&v48 - v29);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A649594((uint64_t)v30);
    v31 = (uint64_t)v51;
    sub_22A6A5C7C();
    sub_22A62F9B8(v53, (uint64_t)v18, &qword_255AFEEE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v60);
    sub_22A661D34(v31, (uint64_t)v18, v62);
    sub_22A629860((uint64_t)v18, (uint64_t *)&unk_255B00CE0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v31, v59);
  }
  else
  {
    v62 = v25;
    sub_22A62981C((uint64_t)v30, (uint64_t)v23, &qword_255AFEEE0);
    sub_22A62F9B8(v53, (uint64_t)v20, &qword_255AFEEE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v60);
    v33 = (uint64_t)v63;
    sub_22A6A5C7C();
    sub_22A62F9B8((uint64_t)v23, (uint64_t)v28, &qword_255AFEEE0);
    swift_storeEnumTagMultiPayload();
    v34 = v56;
    v35 = v57;
    sub_22A661D34(v33, (uint64_t)v20, (uint64_t)v28);
    if (v34)
    {
      sub_22A649594((uint64_t)v28);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v33, v59);
      sub_22A629860((uint64_t)v20, (uint64_t *)&unk_255B00CE0);
      v36 = (uint64_t)v23;
    }
    else
    {
      sub_22A649594((uint64_t)v28);
      v37 = *(_QWORD *)(*(_QWORD *)&v23[*(int *)(v60 + 36)] + 16);
      v38 = swift_bridgeObjectRetain();
      v52 = v23;
      v60 = v38;
      v49 = v20;
      if (v37)
      {
        v39 = 0;
        v40 = v38 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        v62 = *(_QWORD *)(v62 + 72);
        v41 = v64;
        v42 = v50;
        do
        {
          v43 = *(int *)(v41 + 48);
          v44 = v35;
          v45 = &v61[v43];
          sub_22A6297D8(v40, (uint64_t)&v61[v43]);
          v46 = (uint64_t)v42 + *(int *)(v64 + 48);
          *v42 = v39;
          v47 = (uint64_t)v45;
          v35 = v44;
          v41 = v64;
          sub_22A62F974(v47, v46);
          sub_22A62981C((uint64_t)v42, (uint64_t)v7, (uint64_t *)&unk_255AFF440);
          sub_22A647220(*v7, (char *)v7 + *(int *)(v41 + 48), v52, v63, v35);
          ++v39;
          sub_22A629860((uint64_t)v7, (uint64_t *)&unk_255AFF440);
          v40 += v62;
        }
        while (v37 != v39);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v63, v59);
      sub_22A629860((uint64_t)v49, (uint64_t *)&unk_255B00CE0);
      v36 = (uint64_t)v52;
    }
    return sub_22A629860(v36, &qword_255AFEEE0);
  }
}

uint64_t sub_22A6476EC(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12[2];

  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a3(v9);
  v10 = *(_QWORD *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  result = sub_22A647790(v12, a2, a4);
  *a1 = v9;
  return result;
}

uint64_t sub_22A647790(uint64_t *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  double v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  void (*v184)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;

  v184 = a3;
  v193 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v185 = *(_QWORD *)(v193 - 8);
  v5 = MEMORY[0x24BDAC7A8](v193);
  v177 = (uint64_t)&v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v194 = (uint64_t)&v168 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v168 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v168 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v168 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v175 = (char *)&v168 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v168 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v168 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v182 = (uint64_t)&v168 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v181 = (uint64_t)&v168 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v168 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v172 = (uint64_t)&v168 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v174 = (uint64_t)&v168 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v173 = (uint64_t)&v168 - v37;
  v197 = a1;
  v38 = a1[1];
  result = sub_22A6A61A4();
  if (result >= v38)
  {
    if (v38 < 0)
      goto LABEL_146;
    if (v38)
      return sub_22A6484D4(0, v38, 1, v197, a2);
    return result;
  }
  v169 = result;
  if (v38 >= 0)
    v40 = v38;
  else
    v40 = v38 + 1;
  if (v38 < -1)
    goto LABEL_154;
  v188 = v17;
  v189 = v11;
  v170 = v32;
  if (v38 < 2)
  {
    v46 = (char *)MEMORY[0x24BEE4AF8];
    v183 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80));
    v45 = a2;
    v168 = MEMORY[0x24BEE4AF8];
    if (v38 != 1)
    {
      v50 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_113:
      v160 = v46;
      v161 = v186;
      if (v50 >= 2)
      {
        v162 = *v197;
        do
        {
          v163 = v50 - 2;
          if (v50 < 2)
            goto LABEL_141;
          if (!v162)
            goto LABEL_153;
          v164 = *(_QWORD *)&v160[16 * v163 + 32];
          v165 = *(_QWORD *)&v160[16 * v50 + 24];
          sub_22A6487FC(v162 + *(_QWORD *)(v185 + 72) * v164, v162 + *(_QWORD *)(v185 + 72) * *(_QWORD *)&v160[16 * v50 + 16], v162 + *(_QWORD *)(v185 + 72) * v165, v183, v45, v184);
          if (v161)
            break;
          if (v165 < v164)
            goto LABEL_142;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v160 = sub_22A6986AC((uint64_t)v160);
          if (v163 >= *((_QWORD *)v160 + 2))
            goto LABEL_143;
          v166 = &v160[16 * v163 + 32];
          *(_QWORD *)v166 = v164;
          *((_QWORD *)v166 + 1) = v165;
          v167 = *((_QWORD *)v160 + 2);
          if (v50 > v167)
            goto LABEL_144;
          memmove(&v160[16 * v50 + 16], &v160[16 * v50 + 32], 16 * (v167 - v50));
          *((_QWORD *)v160 + 2) = v167 - 1;
          v50 = v167 - 1;
        }
        while (v167 > 2);
      }
LABEL_124:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v168 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v41 = 1;
  }
  else
  {
    v41 = v38;
    v42 = v40 >> 1;
    v43 = sub_22A6A5E8C();
    *(_QWORD *)(v43 + 16) = v42;
    v44 = *(unsigned __int8 *)(v185 + 80);
    v168 = v43;
    v183 = v43 + ((v44 + 32) & ~v44);
    v45 = a2;
  }
  v47 = 0;
  v46 = (char *)MEMORY[0x24BEE4AF8];
  v187 = v14;
  v48 = (uint64_t)v175;
  v179 = v25;
  v180 = v22;
  v49 = v41;
  while (1)
  {
    v51 = v47;
    v52 = v47 + 1;
    v178 = v47;
    v195 = v49;
    if (v47 + 1 >= v49)
      goto LABEL_44;
    v53 = *v197;
    v54 = *(_QWORD *)(v185 + 72);
    v191 = v47 + 1;
    v55 = v53 + v54 * v52;
    v56 = v173;
    sub_22A62F9B8(v55, v173, v45);
    v190 = v53;
    v196 = v54;
    v57 = v53 + v54 * v51;
    v58 = v174;
    sub_22A62F9B8(v57, v174, v45);
    v59 = v193;
    v60 = *(int *)(v193 + 40);
    v61 = *(double *)(v56 + v60);
    v62 = *(double *)(v58 + v60);
    v63 = v56;
    v64 = v172;
    sub_22A62F9B8(v63, v172, v45);
    v65 = v58;
    v66 = (uint64_t)v170;
    sub_22A62F9B8(v65, (uint64_t)v170, v45);
    if (v61 >= v62)
    {
      sub_22A629860(v66, v45);
      sub_22A629860(v64, v45);
      LODWORD(v192) = 0;
    }
    else
    {
      v67 = *(double *)(v64 + *(int *)(v59 + 36));
      sub_22A629860(v64, v45);
      v68 = *(double *)(v66 + *(int *)(v59 + 36));
      sub_22A629860(v66, v45);
      LODWORD(v192) = v67 < v68;
    }
    sub_22A629860(v174, v45);
    sub_22A629860(v173, v45);
    v51 = v178;
    v52 = v178 + 2;
    v49 = v195;
    if (v178 + 2 >= v195)
    {
LABEL_28:
      if (!(_DWORD)v192)
        goto LABEL_44;
LABEL_31:
      if (v52 < v51)
        goto LABEL_147;
      if (v51 < v52)
      {
        v171 = v46;
        v81 = 0;
        v82 = v196 * (v52 - 1);
        v83 = v52 * v196;
        v84 = v51 * v196;
        do
        {
          if (v51 != v52 + v81 - 1)
          {
            v86 = v190;
            if (!v190)
              goto LABEL_152;
            v87 = v190 + v84;
            v192 = v190 + v82;
            sub_22A62981C(v190 + v84, v177, v45);
            if (v84 < v82 || v87 >= v86 + v83)
            {
              v85 = v192;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v85 = v192;
              if (v84 != v82)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_22A62981C(v177, v85, v45);
          }
          ++v51;
          --v81;
          v82 -= v196;
          v83 -= v196;
          v84 += v196;
        }
        while (v51 < v52 + v81);
        v46 = v171;
        v48 = (uint64_t)v175;
        v25 = v179;
        v22 = v180;
        v51 = v178;
        v49 = v195;
      }
      goto LABEL_44;
    }
    v171 = v46;
    v69 = v190;
    v191 *= v196;
    v70 = v196 * v52;
    while (1)
    {
      v71 = v52;
      v72 = v181;
      sub_22A62F9B8(v69 + v70, v181, v45);
      v73 = v182;
      sub_22A62F9B8(v69 + v191, v182, v45);
      v74 = v193;
      v75 = *(int *)(v193 + 40);
      v76 = *(double *)(v72 + v75);
      v77 = *(double *)(v73 + v75);
      sub_22A62F9B8(v72, (uint64_t)v25, v45);
      sub_22A62F9B8(v73, (uint64_t)v22, v45);
      if (v76 >= v77)
      {
        sub_22A629860((uint64_t)v22, v45);
        sub_22A629860((uint64_t)v25, v45);
        v80 = 0;
      }
      else
      {
        v78 = *(double *)&v25[*(int *)(v74 + 36)];
        sub_22A629860((uint64_t)v25, v45);
        v79 = *(double *)&v22[*(int *)(v74 + 36)];
        sub_22A629860((uint64_t)v22, v45);
        v80 = v78 < v79;
      }
      sub_22A629860(v182, v45);
      sub_22A629860(v181, v45);
      v52 = v71;
      if ((_DWORD)v192 != v80)
        break;
      v52 = v71 + 1;
      v49 = v195;
      v69 += v196;
      if (v195 == v71 + 1)
      {
        v52 = v195;
        v46 = v171;
        v48 = (uint64_t)v175;
        v51 = v178;
        goto LABEL_28;
      }
    }
    v46 = v171;
    v48 = (uint64_t)v175;
    v51 = v178;
    v49 = v195;
    if ((_DWORD)v192)
      goto LABEL_31;
LABEL_44:
    if (v52 >= v49)
      goto LABEL_63;
    if (__OFSUB__(v52, v51))
      goto LABEL_145;
    if (v52 - v51 >= v169)
      goto LABEL_63;
    if (__OFADD__(v51, v169))
      goto LABEL_148;
    v88 = v195;
    if (v51 + v169 < v195)
      v88 = v51 + v169;
    if (v88 < v51)
      break;
    if (v52 != v88)
    {
      v171 = v46;
      v89 = *(_QWORD *)(v185 + 72);
      v90 = v89 * (v52 - 1);
      v190 = v89;
      v196 = v52 * v89;
      v91 = v193;
      v176 = v88;
      do
      {
        v93 = 0;
        v191 = v90;
        v192 = v52;
        while (1)
        {
          v195 = v51;
          v94 = *v197;
          sub_22A62F9B8(v196 + v93 + *v197, v48, v45);
          v95 = v90 + v93 + v94;
          v96 = v48;
          v97 = (uint64_t)v188;
          sub_22A62F9B8(v95, (uint64_t)v188, v45);
          v98 = *(int *)(v91 + 40);
          v99 = *(double *)(v96 + v98);
          v100 = *(double *)(v97 + v98);
          v101 = (uint64_t)v187;
          sub_22A62F9B8(v96, (uint64_t)v187, v45);
          v102 = (uint64_t)v189;
          sub_22A62F9B8(v97, (uint64_t)v189, v45);
          if (v99 >= v100)
            break;
          v103 = *(double *)(v101 + *(int *)(v91 + 36));
          sub_22A629860(v101, v45);
          v104 = *(double *)(v102 + *(int *)(v91 + 36));
          sub_22A629860(v102, v45);
          sub_22A629860(v97, v45);
          sub_22A629860(v96, v45);
          v48 = v96;
          if (v103 >= v104)
            goto LABEL_54;
          v105 = *v197;
          v90 = v191;
          if (!*v197)
            goto LABEL_150;
          v106 = v105 + v191 + v93;
          sub_22A62981C(v105 + v196 + v93, v194, v45);
          swift_arrayInitWithTakeFrontToBack();
          sub_22A62981C(v194, v106, v45);
          v93 -= v190;
          v51 = v195 + 1;
          v92 = v192;
          v91 = v193;
          if (v192 == v195 + 1)
            goto LABEL_55;
        }
        sub_22A629860(v102, v45);
        sub_22A629860(v101, v45);
        sub_22A629860(v97, v45);
        sub_22A629860(v96, v45);
        v48 = v96;
LABEL_54:
        v90 = v191;
        v92 = v192;
LABEL_55:
        v52 = v92 + 1;
        v90 += v190;
        v196 += v190;
        v51 = v178;
      }
      while (v52 != v176);
      v52 = v176;
      v46 = v171;
      v25 = v179;
      v22 = v180;
    }
LABEL_63:
    if (v52 < v51)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v192 = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v46 = sub_22A6982F4(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
    v109 = *((_QWORD *)v46 + 2);
    v108 = *((_QWORD *)v46 + 3);
    v50 = v109 + 1;
    if (v109 >= v108 >> 1)
      v46 = sub_22A6982F4((char *)(v108 > 1), v109 + 1, 1, v46);
    *((_QWORD *)v46 + 2) = v50;
    v110 = v46 + 32;
    v111 = &v46[16 * v109 + 32];
    v112 = v192;
    *(_QWORD *)v111 = v51;
    *((_QWORD *)v111 + 1) = v112;
    if (v109)
    {
      while (1)
      {
        v113 = v50 - 1;
        if (v50 >= 4)
        {
          v118 = &v110[16 * v50];
          v119 = *((_QWORD *)v118 - 8);
          v120 = *((_QWORD *)v118 - 7);
          v124 = __OFSUB__(v120, v119);
          v121 = v120 - v119;
          if (v124)
            goto LABEL_129;
          v123 = *((_QWORD *)v118 - 6);
          v122 = *((_QWORD *)v118 - 5);
          v124 = __OFSUB__(v122, v123);
          v116 = v122 - v123;
          v117 = v124;
          if (v124)
            goto LABEL_130;
          v125 = v50 - 2;
          v126 = &v110[16 * v50 - 32];
          v128 = *(_QWORD *)v126;
          v127 = *((_QWORD *)v126 + 1);
          v124 = __OFSUB__(v127, v128);
          v129 = v127 - v128;
          if (v124)
            goto LABEL_132;
          v124 = __OFADD__(v116, v129);
          v130 = v116 + v129;
          if (v124)
            goto LABEL_135;
          if (v130 >= v121)
          {
            v148 = &v110[16 * v113];
            v150 = *(_QWORD *)v148;
            v149 = *((_QWORD *)v148 + 1);
            v124 = __OFSUB__(v149, v150);
            v151 = v149 - v150;
            if (v124)
              goto LABEL_139;
            v141 = v116 < v151;
            goto LABEL_100;
          }
        }
        else
        {
          if (v50 != 3)
          {
            v142 = *((_QWORD *)v46 + 4);
            v143 = *((_QWORD *)v46 + 5);
            v124 = __OFSUB__(v143, v142);
            v135 = v143 - v142;
            v136 = v124;
            goto LABEL_94;
          }
          v115 = *((_QWORD *)v46 + 4);
          v114 = *((_QWORD *)v46 + 5);
          v124 = __OFSUB__(v114, v115);
          v116 = v114 - v115;
          v117 = v124;
        }
        if ((v117 & 1) != 0)
          goto LABEL_131;
        v125 = v50 - 2;
        v131 = &v110[16 * v50 - 32];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v134 = __OFSUB__(v132, v133);
        v135 = v132 - v133;
        v136 = v134;
        if (v134)
          goto LABEL_134;
        v137 = &v110[16 * v113];
        v139 = *(_QWORD *)v137;
        v138 = *((_QWORD *)v137 + 1);
        v124 = __OFSUB__(v138, v139);
        v140 = v138 - v139;
        if (v124)
          goto LABEL_137;
        if (__OFADD__(v135, v140))
          goto LABEL_138;
        if (v135 + v140 >= v116)
        {
          v141 = v116 < v140;
LABEL_100:
          if (v141)
            v113 = v125;
          goto LABEL_102;
        }
LABEL_94:
        if ((v136 & 1) != 0)
          goto LABEL_133;
        v144 = &v110[16 * v113];
        v146 = *(_QWORD *)v144;
        v145 = *((_QWORD *)v144 + 1);
        v124 = __OFSUB__(v145, v146);
        v147 = v145 - v146;
        if (v124)
          goto LABEL_136;
        if (v147 < v135)
          goto LABEL_15;
LABEL_102:
        v152 = v113 - 1;
        if (v113 - 1 >= v50)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!*v197)
          goto LABEL_151;
        v153 = v46;
        v154 = &v110[16 * v152];
        v155 = *(_QWORD *)v154;
        v156 = &v110[16 * v113];
        v157 = *((_QWORD *)v156 + 1);
        v158 = v186;
        sub_22A6487FC(*v197 + *(_QWORD *)(v185 + 72) * *(_QWORD *)v154, *v197 + *(_QWORD *)(v185 + 72) * *(_QWORD *)v156, *v197 + *(_QWORD *)(v185 + 72) * v157, v183, v45, v184);
        v186 = v158;
        if (v158)
          goto LABEL_124;
        if (v157 < v155)
          goto LABEL_126;
        if (v113 > *((_QWORD *)v153 + 2))
          goto LABEL_127;
        *(_QWORD *)v154 = v155;
        *(_QWORD *)&v110[16 * v152 + 8] = v157;
        v159 = *((_QWORD *)v153 + 2);
        if (v113 >= v159)
          goto LABEL_128;
        v46 = v153;
        v50 = v159 - 1;
        memmove(&v110[16 * v113], v156 + 16, 16 * (v159 - 1 - v113));
        *((_QWORD *)v153 + 2) = v159 - 1;
        v25 = v179;
        v22 = v180;
        if (v159 <= 2)
          goto LABEL_15;
      }
    }
    v50 = 1;
LABEL_15:
    v49 = v197[1];
    v47 = v192;
    v48 = (uint64_t)v175;
    if (v192 >= v49)
      goto LABEL_113;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  result = sub_22A6A6120();
  __break(1u);
  return result;
}

uint64_t sub_22A6484D4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v38 = a1;
  v45 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v36 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v42 = (uint64_t)&v36 - v17;
  result = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v36 - v20;
  v46 = a3;
  v37 = a2;
  if (a3 != a2)
  {
    v22 = *(_QWORD *)(v19 + 72);
    v50 = v22 * (v46 - 1);
    v44 = v22;
    v49 = v22 * v46;
    v39 = (char *)&v36 - v20;
    v40 = v13;
    v41 = a4;
LABEL_6:
    v23 = 0;
    v48 = v38;
    v24 = v45;
    while (1)
    {
      v25 = *a4;
      sub_22A62F9B8(v49 + v23 + *a4, (uint64_t)v21, v24);
      v26 = v42;
      sub_22A62F9B8(v50 + v23 + v25, v42, v24);
      v27 = *(int *)(v8 + 40);
      v28 = *(double *)&v21[v27];
      v29 = *(double *)(v26 + v27);
      v30 = v43;
      sub_22A62F9B8((uint64_t)v21, v43, v24);
      sub_22A62F9B8(v26, (uint64_t)v13, v24);
      if (v28 >= v29)
      {
        sub_22A629860((uint64_t)v13, v24);
        sub_22A629860(v30, v24);
        sub_22A629860(v26, v24);
        result = sub_22A629860((uint64_t)v21, v24);
        a4 = v41;
LABEL_5:
        v50 += v44;
        v49 += v44;
        if (++v46 == v37)
          return result;
        goto LABEL_6;
      }
      v31 = *(double *)(v30 + *(int *)(v8 + 36));
      sub_22A629860(v30, v24);
      v32 = *(double *)&v13[*(int *)(v8 + 36)];
      sub_22A629860((uint64_t)v13, v24);
      sub_22A629860(v26, v24);
      result = sub_22A629860((uint64_t)v21, v24);
      a4 = v41;
      if (v31 >= v32)
        goto LABEL_5;
      v33 = *v41;
      if (!*v41)
        break;
      v34 = v41;
      v35 = v33 + v50 + v23;
      v24 = v45;
      sub_22A62981C(v33 + v49 + v23, v47, v45);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_22A62981C(v47, v35, v24);
      v23 -= v44;
      ++v48;
      a4 = v34;
      v21 = v39;
      v13 = v40;
      if (v46 == v48)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22A6487FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  _BOOL4 v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t result;
  uint64_t v66;
  void (*v67)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;

  v67 = a6;
  v74 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v71 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t)&v66 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v72 = (uint64_t)&v66 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v66 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v69 = (unint64_t)&v66 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v68 = (uint64_t)&v66 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v66 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v66 - v27;
  v73 = *(_QWORD *)(v29 + 72);
  if (!v73)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v30 = a1;
  if (a2 - a1 == 0x8000000000000000 && v73 == -1)
    goto LABEL_66;
  v31 = v74 - a2;
  if (v74 - a2 == 0x8000000000000000 && v73 == -1)
    goto LABEL_67;
  v32 = (uint64_t)(a2 - a1) / v73;
  v77 = a1;
  v76 = a4;
  v33 = v31 / v73;
  if (v32 >= v31 / v73)
  {
    if ((v33 & 0x8000000000000000) == 0)
    {
      v69 = a1;
      v35 = v33 * v73;
      if (a4 < a2 || a2 + v35 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v48 = a4 + v35;
      v75 = a4 + v35;
      v77 = a2;
      if (v35 >= 1 && v69 < a2)
      {
        v50 = -v73;
        v73 = v10;
        do
        {
          sub_22A62F9B8(v48 + v50, (uint64_t)v19, a5);
          v51 = a2 + v50;
          v52 = v72;
          sub_22A62F9B8(a2 + v50, v72, a5);
          v53 = *(int *)(v10 + 40);
          v54 = *(double *)&v19[v53];
          v55 = *(double *)(v52 + v53);
          v56 = v70;
          sub_22A62F9B8((uint64_t)v19, v70, a5);
          v57 = v52;
          v58 = v71;
          sub_22A62F9B8(v57, v71, a5);
          if (v54 >= v55)
          {
            sub_22A629860(v58, a5);
            sub_22A629860(v56, a5);
            v61 = 0;
          }
          else
          {
            v59 = *(double *)(v56 + *(int *)(v10 + 36));
            sub_22A629860(v56, a5);
            v60 = *(double *)(v58 + *(int *)(v10 + 36));
            sub_22A629860(v58, a5);
            v61 = v59 < v60;
          }
          v62 = v74;
          v63 = v74 + v50;
          sub_22A629860(v72, a5);
          sub_22A629860((uint64_t)v19, a5);
          if (v61)
          {
            if (v62 < a2 || v63 >= a2)
            {
              v10 = v73;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v10 = v73;
              if (v62 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v77 += v50;
          }
          else
          {
            v64 = v75;
            v75 += v50;
            if (v62 < v64 || v63 >= v64)
            {
              v10 = v73;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v10 = v73;
              if (v62 != v64)
                swift_arrayInitWithTakeBackToFront();
            }
            v51 = a2;
          }
          v48 = v75;
          if (v75 <= a4)
            break;
          a2 = v51;
          v74 = v63;
        }
        while (v51 > v69);
      }
LABEL_64:
      v67(&v77, &v76, &v75);
      return 1;
    }
  }
  else if ((v32 & 0x8000000000000000) == 0)
  {
    v34 = v32 * v73;
    if (a4 < v30 || v30 + v34 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v30)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v36 = a4 + v34;
    v75 = a4 + v34;
    if (v34 >= 1 && a2 < v74)
    {
      while (1)
      {
        sub_22A62F9B8(a2, (uint64_t)v28, a5);
        sub_22A62F9B8(a4, (uint64_t)v26, a5);
        v38 = *(int *)(v10 + 40);
        v39 = *(double *)&v28[v38];
        v40 = *(double *)&v26[v38];
        v41 = v68;
        sub_22A62F9B8((uint64_t)v28, v68, a5);
        v42 = v69;
        sub_22A62F9B8((uint64_t)v26, v69, a5);
        if (v39 >= v40)
          break;
        v43 = *(double *)(v41 + *(int *)(v10 + 36));
        sub_22A629860(v41, a5);
        v44 = *(double *)(v42 + *(int *)(v10 + 36));
        sub_22A629860(v42, a5);
        sub_22A629860((uint64_t)v26, a5);
        sub_22A629860((uint64_t)v28, a5);
        if (v43 >= v44)
          goto LABEL_29;
        v45 = v77;
        v46 = a2 + v73;
        if (v77 < a2 || v77 >= v46)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v77 == a2)
        {
          v45 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_35:
        v77 = v45 + v73;
        a4 = v76;
        if (v76 < v36)
        {
          a2 = v46;
          if (v46 < v74)
            continue;
        }
        goto LABEL_64;
      }
      sub_22A629860(v42, a5);
      sub_22A629860(v41, a5);
      sub_22A629860((uint64_t)v26, a5);
      sub_22A629860((uint64_t)v28, a5);
LABEL_29:
      v45 = v77;
      v47 = v76 + v73;
      if (v77 < v76 || v77 >= v47)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v77 != v76)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v76 = v47;
      v46 = a2;
      goto LABEL_35;
    }
    goto LABEL_64;
  }
LABEL_68:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A648E84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  _BYTE v50[40];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v59 = a1;
  v60 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v61 = v8;
  v62 = 0;
  v63 = v11 & v9;
  v64 = a2;
  v65 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22A67B0CC((uint64_t)&v54);
  v12 = v55;
  if (!v55)
    goto LABEL_27;
  v13 = v54;
  v51 = v56;
  v52 = v57;
  v53 = v58;
  v14 = *(_QWORD **)a5;
  v16 = sub_22A632FD0(v54, v55);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_22A67A228();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = (uint64_t *)(v23[6] + 16 * v16);
    *v24 = v13;
    v24[1] = v12;
    v25 = v23[7] + 40 * v16;
    v26 = v51;
    v27 = v52;
    *(_QWORD *)(v25 + 32) = v53;
    *(_OWORD *)v25 = v26;
    *(_OWORD *)(v25 + 16) = v27;
    v28 = v23[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v30;
LABEL_16:
    sub_22A67B0CC((uint64_t)&v54);
    for (i = v55; v55; i = v55)
    {
      v32 = v54;
      v51 = v56;
      v52 = v57;
      v53 = v58;
      v33 = *(_QWORD **)a5;
      v35 = sub_22A632FD0(v54, i);
      v36 = v33[2];
      v37 = (v34 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
        goto LABEL_28;
      v39 = v34;
      if (v33[3] < v38)
      {
        sub_22A633770(v38, 1);
        v40 = sub_22A632FD0(v32, i);
        if ((v39 & 1) != (v41 & 1))
          goto LABEL_30;
        v35 = v40;
      }
      if ((v39 & 1) != 0)
      {
        sub_22A633AAC((uint64_t)&v51, (uint64_t)v50);
        sub_22A649524((uint64_t)&v51);
        swift_bridgeObjectRelease();
        sub_22A649558((uint64_t)v50, *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v35);
      }
      else
      {
        v42 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v35 >> 6) + 64) |= 1 << v35;
        v43 = (uint64_t *)(v42[6] + 16 * v35);
        *v43 = v32;
        v43[1] = i;
        v44 = v42[7] + 40 * v35;
        v45 = v51;
        v46 = v52;
        *(_QWORD *)(v44 + 32) = v53;
        *(_OWORD *)v44 = v45;
        *(_OWORD *)(v44 + 16) = v46;
        v47 = v42[2];
        v29 = __OFADD__(v47, 1);
        v48 = v47 + 1;
        if (v29)
          goto LABEL_29;
        v42[2] = v48;
      }
      sub_22A67B0CC((uint64_t)&v54);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_22A633AA4();
    return swift_release();
  }
  sub_22A633770(v19, a4 & 1);
  v21 = sub_22A632FD0(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_22A633AAC((uint64_t)&v51, (uint64_t)v50);
    sub_22A649524((uint64_t)&v51);
    swift_bridgeObjectRelease();
    sub_22A649558((uint64_t)v50, *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v16);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6491E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_22A67B2C8();
  if (!v8)
    goto LABEL_24;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_22A632FD0(v7, v8);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_22A67A604();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v26 = (uint64_t *)(v24[6] + 16 * v17);
    *v26 = v11;
    v26[1] = v12;
    v27 = (_QWORD *)(v24[7] + 16 * v17);
    *v27 = v13;
    v27[1] = v14;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    v31 = sub_22A67B2C8();
    if (v32)
    {
      v35 = v31;
      v36 = v32;
      v37 = v33;
      v38 = v34;
      do
      {
        v43 = (_QWORD *)*a5;
        v45 = sub_22A632FD0(v35, v36);
        v46 = v43[2];
        v47 = (v44 & 1) == 0;
        v48 = v46 + v47;
        if (__OFADD__(v46, v47))
          goto LABEL_25;
        v49 = v44;
        if (v43[3] < v48)
        {
          sub_22A633EB4(v48, 1);
          v50 = sub_22A632FD0(v35, v36);
          if ((v49 & 1) != (v51 & 1))
            goto LABEL_27;
          v45 = v50;
        }
        v52 = (_QWORD *)*a5;
        if ((v49 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v39 = (_QWORD *)(v52[7] + 16 * v45);
          swift_bridgeObjectRelease();
          *v39 = v37;
          v39[1] = v38;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          v53 = (uint64_t *)(v52[6] + 16 * v45);
          *v53 = v35;
          v53[1] = v36;
          v54 = (_QWORD *)(v52[7] + 16 * v45);
          *v54 = v37;
          v54[1] = v38;
          v55 = v52[2];
          v29 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v29)
            goto LABEL_26;
          v52[2] = v56;
        }
        v35 = sub_22A67B2C8();
        v36 = v40;
        v37 = v41;
        v38 = v42;
      }
      while (v40);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_22A633AA4();
    return swift_release();
  }
  sub_22A633EB4(v20, a4 & 1);
  v22 = sub_22A632FD0(v11, v12);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v25 = (_QWORD *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *v25 = v13;
    v25[1] = v14;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6494F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22A649524(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_22A649558(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 40))(a2, a1);
  return a2;
}

uint64_t sub_22A649594(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContainerContent.Child();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A6495D0()
{
  return 1;
}

uint64_t sub_22A6495D8()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

uint64_t sub_22A649618()
{
  return sub_22A6A6264();
}

uint64_t sub_22A64963C()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

_QWORD *sub_22A649688()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255AFE868 != -1)
    swift_once();
  v5 = sub_22A6A5CAC();
  __swift_project_value_buffer(v5, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000073, 0x800000022A6ACC80, 0x74696E696564, 0xE600000000000000);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 2, v6);
  v7 = (uint64_t)v0 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64BEC8((uint64_t)v4, v7);
  swift_endAccess();
  v8 = v0[17];
  v9 = v0[18];
  __swift_project_boxed_opaque_existential_1(v0 + 14, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v10, sel_removeObserver_, v1);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 14));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 20));
  sub_22A64C23C(v7);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_22A64983C()
{
  sub_22A649688();
  return swift_defaultActor_deallocate();
}

uint64_t sub_22A649854()
{
  return type metadata accessor for AVOuputDeviceCommunicationsChannelBroker(0);
}

uint64_t type metadata accessor for AVOuputDeviceCommunicationsChannelBroker(uint64_t a1)
{
  return sub_22A64AC50(a1, (uint64_t *)&unk_255AFF478);
}

void sub_22A649870(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19[2];

  v5 = v2[17];
  v6 = v2[18];
  __swift_project_boxed_opaque_existential_1(v2 + 14, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  swift_bridgeObjectRetain();
  v8 = sub_22A64C278(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_255AFE868 != -1)
    swift_once();
  v9 = sub_22A6A5CAC();
  __swift_project_value_buffer(v9, (uint64_t)qword_255B08F18);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v10 = sub_22A6A5C94();
  v11 = sub_22A6A5F70();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19[0] = v13;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_22A62D174(a1, a2, v19);
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
    v15 = MEMORY[0x22E2DE8C4](v8, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_22A62D174(v15, v17, v19);
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v10, v11, "Found devices matching %s -> %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v13, -1, -1);
    MEMORY[0x22E2DF3F8](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_22A6A612C();
    swift_bridgeObjectRelease();
    if (!v18)
      goto LABEL_11;
  }
  else if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    MEMORY[0x22E2DEB28](0, v8);
    goto LABEL_11;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_22A649B80(uint64_t a1, uint64_t a2, unint64_t a3, double *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36[3];

  v34 = a5;
  v9 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v31 - v13);
  if (qword_255AFE868 != -1)
    swift_once();
  v15 = sub_22A6A5CAC();
  __swift_project_value_buffer(v15, (uint64_t)qword_255B08F18);
  swift_bridgeObjectRetain_n();
  v16 = sub_22A6A5C94();
  v17 = sub_22A6A5F70();
  if (os_log_type_enabled(v16, v17))
  {
    v33 = v12;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v36[0] = v19;
    v32 = a1;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    v35 = sub_22A62D174(a2, a3, v36);
    a1 = v32;
    v12 = v33;
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22A61E000, v16, v17, "No matching device found for %s. Waiting for disovery of other devices...", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v19, -1, -1);
    MEMORY[0x22E2DF3F8](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v20 = *((_QWORD *)a4 + 23);
  v21 = *((_QWORD *)a4 + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a4 + 20, v20);
  v22 = a4[19];
  swift_retain();
  v23 = DispatchSourceTimerProviding.makeTimer(fireInterval:handler:)((uint64_t)sub_22A64CBB4, (uint64_t)a4, v20, v21, v22);
  swift_release();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v25 = (char *)v14 + *(int *)(v24 + 80);
  *v14 = a2;
  v14[1] = a3;
  v26 = v34;
  v14[2] = (uint64_t)v34;
  v14[3] = v23;
  v27 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, a1, v27);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 0, 2, v24);
  sub_22A64CBBC((uint64_t)v14, (uint64_t)v12);
  v28 = (uint64_t)a4 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v29 = v26;
  sub_22A64BEC8((uint64_t)v12, v28);
  return swift_endAccess();
}

uint64_t sub_22A649E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD v22[3];

  v2 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (id *)((char *)v22 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64C1F8(v12, (uint64_t)v7);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v14 + 48))(v7, 2, v13))
    return sub_22A64C23C((uint64_t)v7);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, (char *)v7 + *(int *)(v13 + 80), v8);
  if (qword_255AFE868 != -1)
    swift_once();
  v16 = sub_22A6A5CAC();
  __swift_project_value_buffer(v16, (uint64_t)qword_255B08F18);
  v17 = sub_22A6A5C94();
  v18 = sub_22A6A5F70();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_22A61E000, v17, v18, "AVOuputDeviceCommunicationsChannelBroker discovery timed out", v19, 2u);
    MEMORY[0x22E2DF3F8](v19, -1, -1);
  }

  sub_22A64C0FC();
  v20 = swift_allocError();
  *v21 = 0;
  v22[0] = v20;
  sub_22A6A5EC8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v5, 1, 2, v13);
  swift_beginAccess();
  sub_22A64BEC8((uint64_t)v5, v12);
  return swift_endAccess();
}

uint64_t sub_22A64A124()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  v1[10] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A64A1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64C1F8(v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 2, v3))
  {
    sub_22A64C23C(*(_QWORD *)(v0 + 80));
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(uint64_t **)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v9 = *v8;
  v10 = v8[1];
  v21 = (void *)v8[2];
  *(_QWORD *)(v0 + 112) = v21;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v6, (char *)v8 + *(int *)(v3 + 80), v7);
  sub_22A649870(v9, v10);
  v12 = v11;
  *(_QWORD *)(v0 + 120) = v11;
  swift_bridgeObjectRelease();
  if (!v12)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));

    goto LABEL_3;
  }
  if (qword_255AFE868 != -1)
    swift_once();
  v13 = sub_22A6A5CAC();
  __swift_project_value_buffer(v13, (uint64_t)qword_255B08F18);
  swift_unknownObjectRetain_n();
  v14 = sub_22A6A5C94();
  v15 = sub_22A6A5F70();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v22 = v17;
    *(_DWORD *)v16 = 136446210;
    *(_QWORD *)(v0 + 56) = v12;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
    v18 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 64) = sub_22A62D174(v18, v19, &v22);
    sub_22A6A6018();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v14, v15, "Discovery found matching device. Connecting now. -> %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v17, -1, -1);
    MEMORY[0x22E2DF3F8](v16, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v20;
  *v20 = v0;
  v20[1] = sub_22A64A4BC;
  return sub_22A64A94C(v12, (uint64_t)v21);
}

uint64_t sub_22A64A4BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_22A64A530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 144);
  swift_unknownObjectRetain();
  sub_22A6A5ED4();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A64A5D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 40) = v1;
  v6 = v1;
  sub_22A6A5EC8();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A64A678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22A6A5EF8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_22A629860((uint64_t)v4, &qword_255AFECC0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_22A6A5EEC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_22A6A5EBC();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_255AFF648;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_22A64A84C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A62ED7C;
  return sub_22A64A124();
}

uint64_t sub_22A64A8BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22A64A94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A64A9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = sub_22A6A5CAC();
  v9 = *(_OWORD *)(v0 + 48);
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000073, 0x800000022A6ACC80, 0xD000000000000029, 0x800000022A6ACD00);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 2, 2, v4);
  v5 = v1 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64BEC8(v2, v5);
  swift_endAccess();
  sub_22A64BF0C();
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 32) = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF608);
  *v7 = v0;
  v7[1] = sub_22A64AB50;
  return sub_22A6A61EC();
}

uint64_t sub_22A64AB50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A64ABC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_22A64AC00()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(uint64_t a1)
{
  return sub_22A64AC50(a1, (uint64_t *)&unk_255AFF5F0);
}

uint64_t sub_22A64AC50(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_22A64AC84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v12 = (void *)a2[2];
      v11 = a2[3];
      a1[2] = (uint64_t)v12;
      a1[3] = v11;
      v13 = *(int *)(v7 + 80);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      swift_bridgeObjectRetain();
      v16 = v12;
      swift_unknownObjectRetain();
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_22A64AD94(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    v4 = a1 + *(int *)(v2 + 80);
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_22A64AE24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v10 = (void *)a2[2];
    v9 = a2[3];
    a1[2] = v10;
    a1[3] = v9;
    v11 = *(int *)(v6 + 80);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    swift_bridgeObjectRetain();
    v14 = v10;
    swift_unknownObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *sub_22A64AF10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18 = (void *)a2[2];
      v19 = (void *)a1[2];
      a1[2] = v18;
      v20 = v18;

      a1[3] = a2[3];
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v21 = *(int *)(v6 + 80);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
      return a1;
    }
    sub_22A629860((uint64_t)a1, &qword_255AFF570);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  v11 = (void *)a2[2];
  a1[2] = v11;
  a1[3] = a2[3];
  v12 = *(int *)(v6 + 80);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  v15 = v11;
  swift_unknownObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

_QWORD *sub_22A64B0B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(v6 + 80);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *sub_22A64B18C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      swift_bridgeObjectRelease();
      v18 = (void *)a1[2];
      a1[2] = a2[2];

      a1[3] = a2[3];
      swift_unknownObjectRelease();
      v19 = *(int *)(v6 + 80);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
      return a1;
    }
    sub_22A629860((uint64_t)a1, &qword_255AFF570);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = a2[3];
  a1[2] = a2[2];
  a1[3] = v11;
  v12 = *(int *)(v6 + 80);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_22A64B2F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A64B304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_22A64B354()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A64B360(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_22A64B3B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_22A64B3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

void sub_22A64B438()
{
  unint64_t v0;

  sub_22A64B4C8();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_22A64B4C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255AFF600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255AFF608);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255AFECE0);
    v0 = sub_22A6A5EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255AFF600);
  }
}

void sub_22A64B53C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  if (qword_255AFE868 != -1)
    swift_once();
  v11 = sub_22A6A5CAC();
  __swift_project_value_buffer(v11, (uint64_t)qword_255B08F18);
  swift_unknownObjectRetain_n();
  v12 = sub_22A6A5C94();
  v13 = sub_22A6A5F70();
  if (os_log_type_enabled(v12, v13))
  {
    v27 = a3;
    v26 = a4;
    v14 = (uint8_t *)swift_slowAlloc();
    v24 = a1;
    v15 = swift_slowAlloc();
    aBlock[0] = v15;
    v25 = v8;
    *(_DWORD *)v14 = 136315138;
    v23 = v14 + 4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
    v16 = sub_22A6A5DC0();
    v28 = sub_22A62D174(v16, v17, aBlock);
    v8 = v25;
    sub_22A6A6018();
    a3 = v27;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_22A61E000, v12, v13, "Attempting to connect to %s...", v14, 0xCu);
    swift_arrayDestroy();
    v18 = v15;
    a1 = v24;
    MEMORY[0x22E2DF3F8](v18, -1, -1);
    v19 = v14;
    a4 = v26;
    MEMORY[0x22E2DF3F8](v19, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a4;
  *(_QWORD *)(v21 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = (uint64_t)sub_22A64BFE0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22A64BE54;
  aBlock[3] = (uint64_t)&block_descriptor_2;
  v22 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_openCommunicationChannelToDestination_completionHandler_, a3, v22);
  _Block_release(v22);
}

uint64_t sub_22A64B830(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  id v27;
  uint64_t v30;

  if (a1)
  {
    v4 = qword_255AFE868;
    swift_unknownObjectRetain();
    if (v4 != -1)
      swift_once();
    v5 = sub_22A6A5CAC();
    __swift_project_value_buffer(v5, (uint64_t)qword_255B08F18);
    swift_unknownObjectRetain_n();
    v6 = sub_22A6A5C94();
    v7 = sub_22A6A5F70();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v30 = v9;
      *(_DWORD *)v8 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF608);
      v10 = sub_22A6A5DC0();
      sub_22A62D174(v10, v11, &v30);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_22A61E000, v6, v7, "Channel opened! %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v9, -1, -1);
      MEMORY[0x22E2DF3F8](v8, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    v30 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
    sub_22A6A5ED4();
  }
  else
  {
    if (qword_255AFE868 != -1)
      swift_once();
    v13 = sub_22A6A5CAC();
    __swift_project_value_buffer(v13, (uint64_t)qword_255B08F18);
    swift_unknownObjectRetain();
    v14 = a2;
    swift_unknownObjectRetain();
    v15 = a2;
    v16 = sub_22A6A5C94();
    v17 = sub_22A6A5F64();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v30 = v19;
      *(_DWORD *)v18 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
      v20 = sub_22A6A5DC0();
      sub_22A62D174(v20, v21, &v30);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      v22 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF630);
      v23 = sub_22A6A5DC0();
      sub_22A62D174(v23, v24, &v30);
      sub_22A6A6018();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22A61E000, v16, v17, "Failed to open a communications channel to %{public}s -> %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v19, -1, -1);
      MEMORY[0x22E2DF3F8](v18, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();

    }
    v25 = (uint64_t)a2;
    if (!a2)
    {
      sub_22A64C0FC();
      v25 = swift_allocError();
      *v26 = 5;
    }
    v30 = v25;
    v27 = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
    sub_22A6A5EC8();
  }
  return sub_22A64BC88(a3);
}

uint64_t sub_22A64BC88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255AFE868 != -1)
    swift_once();
  v5 = sub_22A6A5CAC();
  __swift_project_value_buffer(v5, (uint64_t)qword_255B08F18);
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F70();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_22A61E000, v6, v7, "Disabling discovery now that we are done with trying to open a comms channel.", v8, 2u);
    MEMORY[0x22E2DF3F8](v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v9, sel_removeObserver_, a1);

  v10 = a1[17];
  v11 = a1[18];
  __swift_project_boxed_opaque_existential_1(a1 + 14, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 2, v12);
  v13 = (uint64_t)a1 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64BEC8((uint64_t)v4, v13);
  return swift_endAccess();
}

uint64_t sub_22A64BE54(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_22A64BEBC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_22A64BEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A64BF0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFF618;
  if (!qword_255AFF618)
  {
    v1 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker(255);
    result = MEMORY[0x22E2DF32C](&unk_22A6A8708, v1);
    atomic_store(result, (unint64_t *)&qword_255AFF618);
  }
  return result;
}

void sub_22A64BF54(uint64_t a1)
{
  uint64_t v1;

  sub_22A64B53C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_22A64BF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22A64BFE0(uint64_t a1, void *a2)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_255AFF578);
  return sub_22A64B830(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_22A64C04C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22A64C0B0;
  return v6(a1);
}

uint64_t sub_22A64C0B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_22A64C0FC()
{
  unint64_t result;

  result = qword_255AFFA60;
  if (!qword_255AFFA60)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayConnectionError, &type metadata for AirPlayConnectionError);
    atomic_store(result, (unint64_t *)&qword_255AFFA60);
  }
  return result;
}

uint64_t sub_22A64C140()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A64C16C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A62E6B0;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_22A62ED7C;
  return sub_22A64A124();
}

uint64_t sub_22A64C1D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A64C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A64C23C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A64C278(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t i;
  void *v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v20;

  v4 = v3;
  v20 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_23:
    v7 = sub_22A6A612C();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_3:
      v18 = v4;
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v9 = (void *)MEMORY[0x22E2DEB28](i, a1);
          v10 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_20:
            __break(1u);
            return v20;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_23;
          }
          v9 = *(void **)(a1 + 8 * i + 32);
          swift_unknownObjectRetain();
          v10 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_20;
        }
        v11 = objc_msgSend(v9, sel_deviceID, v18);
        if (v11)
        {
          v12 = v11;
          v13 = sub_22A6A5D84();
          v15 = v14;

          if (v13 == a2 && v15 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_17:
            sub_22A6A60E4();
            v4 = *(_QWORD *)(v20 + 16);
            sub_22A6A6108();
            sub_22A6A6114();
            sub_22A6A60F0();
            goto LABEL_5;
          }
          v4 = sub_22A6A61D4();
          swift_bridgeObjectRelease();
          if ((v4 & 1) != 0)
            goto LABEL_17;
        }
        swift_unknownObjectRelease();
LABEL_5:
        if (v10 == v7)
          return v20;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_22A64C43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A64C498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  swift_beginAccess();
  sub_22A64C1F8(v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 2, v3);
  sub_22A64C23C(v1);
  if ((_DWORD)v2 == 1)
  {
    if (qword_255AFE868 != -1)
      swift_once();
    v4 = sub_22A6A5CAC();
    __swift_project_value_buffer(v4, (uint64_t)qword_255B08F18);
    v5 = sub_22A6A5C94();
    v6 = sub_22A6A5F70();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_22A61E000, v5, v6, "Activating Communications Channel Discovery...", v7, 2u);
      MEMORY[0x22E2DF3F8](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD **)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 80);

    v11 = v9[17];
    v12 = v9[18];
    __swift_project_boxed_opaque_existential_1(v9 + 14, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    sub_22A649870(v8, v10);
    *(_QWORD *)(v0 + 112) = v13;
    if (v13)
    {
      v14 = v13;
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v15 = sub_22A6A5C94();
      v16 = sub_22A6A5F70();
      v17 = os_log_type_enabled(v15, v16);
      v18 = *(_QWORD *)(v0 + 80);
      if (v17)
      {
        v32 = *(_QWORD *)(v0 + 72);
        v19 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v34[0] = v33;
        *(_DWORD *)v19 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 48) = sub_22A62D174(v32, v18, v34);
        sub_22A6A6018();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2082;
        *(_QWORD *)(v0 + 56) = v14;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
        v20 = sub_22A6A5DC0();
        *(_QWORD *)(v0 + 64) = sub_22A62D174(v20, v21, v34);
        sub_22A6A6018();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_22A61E000, v15, v16, "Found a device matching %{public}s -> %{public}s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2DF3F8](v33, -1, -1);
        MEMORY[0x22E2DF3F8](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
      }

      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v31;
      *v31 = v0;
      v31[1] = sub_22A64C984;
      return sub_22A64A94C(v14, *(_QWORD *)(v0 + 88));
    }
    else
    {
      v24 = *(_QWORD *)(v0 + 88);
      v23 = *(_QWORD *)(v0 + 96);
      v26 = *(_QWORD *)(v0 + 72);
      v25 = *(_QWORD *)(v0 + 80);
      v27 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v28 = APKOutputDeviceDiscoverySessionAvailableOutputDevicesDidChange();
      objc_msgSend(v27, sel_addObserver_selector_name_object_, v23, sel_availableDevicesDidChange, v28, 0);

      sub_22A64BF0C();
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v29;
      v29[2] = v26;
      v29[3] = v25;
      v29[4] = v23;
      v29[5] = v24;
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v30;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF608);
      *v30 = v0;
      v30[1] = sub_22A64CA3C;
      return sub_22A6A61EC();
    }
  }
  else
  {
    sub_22A64CB64();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A64C984(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_22A64C9F8()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_22A64CA3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A64CAB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_22A64CAEC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A64CB28()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_22A64CB64()
{
  unint64_t result;

  result = qword_255AFF668;
  if (!qword_255AFF668)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A87AC, &type metadata for AVOuputDeviceCommunicationsChannelBroker.BrokerError);
    atomic_store(result, (unint64_t *)&qword_255AFF668);
  }
  return result;
}

uint64_t sub_22A64CBA8(uint64_t a1)
{
  uint64_t v1;

  return sub_22A649B80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_22A64CBB4()
{
  uint64_t v0;

  return sub_22A649E90(v0);
}

uint64_t sub_22A64CBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for AVOuputDeviceCommunicationsChannelBroker.BrokerError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AVOuputDeviceCommunicationsChannelBroker.BrokerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22A64CC94 + 4 * byte_22A6A8630[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22A64CCB4 + 4 * byte_22A6A8635[v4]))();
}

_BYTE *sub_22A64CC94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22A64CCB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A64CCBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A64CCC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A64CCCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A64CCD4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_22A64CCE0()
{
  return 0;
}

ValueMetadata *type metadata accessor for AVOuputDeviceCommunicationsChannelBroker.BrokerError()
{
  return &type metadata for AVOuputDeviceCommunicationsChannelBroker.BrokerError;
}

unint64_t sub_22A64CCFC()
{
  unint64_t result;

  result = qword_255AFF670;
  if (!qword_255AFF670)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A8784, &type metadata for AVOuputDeviceCommunicationsChannelBroker.BrokerError);
    atomic_store(result, (unint64_t *)&qword_255AFF670);
  }
  return result;
}

uint64_t sub_22A64CD44()
{
  return 0x656E6961746E6F63;
}

uint64_t sub_22A64CD64()
{
  return 0;
}

uint64_t sub_22A64CD70()
{
  return sub_22A64CD44();
}

unint64_t sub_22A64CD84()
{
  uint64_t v0;
  unint64_t result;

  result = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (result >> 31)
    __break(1u);
  return result;
}

uint64_t sub_22A64CD9C()
{
  uint64_t *v0;

  return sub_22A666854(*v0);
}

unint64_t sub_22A64CDA4()
{
  unint64_t result;

  result = sub_22A67D1D4();
  if (!result)
    return sub_22A630814(MEMORY[0x24BEE4AF8]);
  return result;
}

unint64_t sub_22A64CDF0()
{
  return sub_22A630F88(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_22A64CDFC()
{
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_22A64CE08(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22A64CE34();
  result = sub_22A64CE78();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A64CE34()
{
  unint64_t result;

  result = qword_255AFF680;
  if (!qword_255AFF680)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent, &type metadata for ContainerContent);
    atomic_store(result, (unint64_t *)&qword_255AFF680);
  }
  return result;
}

unint64_t sub_22A64CE78()
{
  unint64_t result;

  result = qword_255AFF688;
  if (!qword_255AFF688)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent, &type metadata for ContainerContent);
    atomic_store(result, (unint64_t *)&qword_255AFF688);
  }
  return result;
}

uint64_t sub_22A64CEBC()
{
  return MEMORY[0x24BEE1338];
}

void sub_22A64CEC8(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_22A64CED4()
{
  return MEMORY[0x24BEE13E8];
}

void sub_22A64CEE0(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_22A64CEF0()
{
  return MEMORY[0x24BEE1508];
}

void sub_22A64CEFC(uint64_t a1@<X8>)
{
  _DWORD *v1;

  *(_DWORD *)a1 = *v1;
  *(_BYTE *)(a1 + 4) = 0;
}

uint64_t sub_22A64CF0C()
{
  return MEMORY[0x24BEE1778];
}

uint64_t sub_22A64CF1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A64CF50 + 4 * byte_22A6A8884[*v0]))(0xD000000000000010, 0x800000022A6AC5B0);
}

uint64_t sub_22A64CF50()
{
  return 0x6669636570736E75;
}

uint64_t sub_22A64CF70()
{
  return 0x6B63616279616C70;
}

uint64_t sub_22A64CF88()
{
  return 0x6C616974617073;
}

uint64_t sub_22A64CFB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A64CF1C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A64CFD8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64CFFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64CFFC()
{
  unint64_t result;

  result = qword_255AFF758;
  if (!qword_255AFF758)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContentSemantic, &type metadata for ContentSemantic);
    atomic_store(result, (unint64_t *)&qword_255AFF758);
  }
  return result;
}

BOOL static AirPlayOverlayAdaptorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AirPlayOverlayAdaptorError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AirPlayOverlayAdaptorError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A64D0C4()
{
  unint64_t result;

  result = qword_255AFF760;
  if (!qword_255AFF760)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayAdaptorError, &type metadata for AirPlayOverlayAdaptorError);
    atomic_store(result, (unint64_t *)&qword_255AFF760);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContainerContent.VerticalAlignment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayAdaptorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22A64D1E4 + 4 * byte_22A6A88B5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22A64D218 + 4 * byte_22A6A88B0[v4]))();
}

uint64_t sub_22A64D218(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A64D220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A64D228);
  return result;
}

uint64_t sub_22A64D234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A64D23CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22A64D240(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A64D248(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayAdaptorError()
{
  return &type metadata for AirPlayOverlayAdaptorError;
}

unint64_t sub_22A64D264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  unint64_t result;
  uint64_t inited;
  uint64_t v6;

  v3 = BYTE4(a3);
  v6 = __PAIR64__(a3, HIDWORD(a2));
  result = sub_22A67B464(a1, a2);
  if (result)
  {
    if (sub_22A67B714(v6, v3))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
      *(_QWORD *)(inited + 32) = 120;
      *(_QWORD *)(inited + 40) = 0xE100000000000000;
      __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
      sub_22A628ED4();
      sub_22A6A6084();
      *(_QWORD *)(inited + 88) = 121;
      *(_QWORD *)(inited + 96) = 0xE100000000000000;
      sub_22A6A6084();
      return sub_22A630814(inited);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

unint64_t sub_22A64D35C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  __int128 v4;

  LOBYTE(v4) = *(_BYTE *)(v1 + 8);
  *(_QWORD *)((char *)&v4 + 4) = *(_QWORD *)(v1 + 12);
  BYTE12(v4) = *(_BYTE *)(v1 + 20);
  result = sub_22A64D264(*(_QWORD *)v1, v4, *((uint64_t *)&v4 + 1));
  *a1 = result;
  return result;
}

unint64_t sub_22A64D3A8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64D3CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64D3CC()
{
  unint64_t result;

  result = qword_255AFF790;
  if (!qword_255AFF790)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Point, &type metadata for Point);
    atomic_store(result, (unint64_t *)&qword_255AFF790);
  }
  return result;
}

uint64_t Color.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_22A6A6264();
      sub_22A6A5DE4();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_22A6A6264();
    }
  }
  else
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    return sub_22A6A627C();
  }
}

uint64_t Color.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v7[72];

  sub_22A6A6258();
  Color.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_22A6A62A0();
}

uint64_t sub_22A64D568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_22A6A6258();
  Color.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_22A6A62A0();
}

uint64_t sub_22A64D5C0(uint64_t a1)
{
  uint64_t v1;

  return Color.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_22A64D5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_22A6A6258();
  Color.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_22A6A62A0();
}

uint64_t sub_22A64D620(uint64_t a1, uint64_t a2)
{
  return _s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t _s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v7;

  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
        return sub_22A640B8C(a1, a4);
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
  }
  else if (!a6)
  {
    v7 = *(float *)&a1 == *(float *)&a4 && *((float *)&a1 + 1) == *((float *)&a4 + 1);
    if (v7 && *(float *)&a2 == *(float *)&a5)
      return *((float *)&a2 + 1) == *((float *)&a5 + 1);
  }
  return 0;
}

unint64_t sub_22A64D6DC()
{
  unint64_t result;

  result = qword_255AFF798;
  if (!qword_255AFF798)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_255AFF798);
  }
  return result;
}

ValueMetadata *type metadata accessor for Color()
{
  return &type metadata for Color;
}

uint64_t dispatch thunk of RenderActionLoggable.actionLogOutput.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22A64D738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_22A6A5DC0();
}

uint64_t sub_22A64D7A8()
{
  return sub_22A64D7C0();
}

uint64_t sub_22A64D7B4()
{
  return sub_22A64D7C0();
}

uint64_t sub_22A64D7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](v0);
  sub_22A6354E0(v1, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  return sub_22A6A5DC0();
}

uint64_t sub_22A64D824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  _QWORD v9[16];

  v9[15] = *MEMORY[0x24BDAC8D0];
  v0 = sub_22A6A5DB4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A6A5DA8();
  v4 = sub_22A6A5D90();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 != 15)
  {
    v9[2] = 0;
    v9[13] = v4;
    v9[14] = v6;
    __asm { BR              X10 }
  }
  sub_22A64E1E0();
  swift_allocError();
  *v7 = 0;
  swift_willThrow();
  return v0;
}

unint64_t sub_22A64E1E0()
{
  unint64_t result;

  result = qword_255AFF7A0;
  if (!qword_255AFF7A0)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AB36C, &type metadata for LoggingError);
    atomic_store(result, (unint64_t *)&qword_255AFF7A0);
  }
  return result;
}

uint64_t sub_22A64E224(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22A64E268(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t (*static NoAnimationValue.none.modify())()
{
  return nullsub_1;
}

Swift::OpaquePointer_optional __swiftcall NoAnimationValue.serialize()()
{
  void *v0;
  Swift::OpaquePointer_optional result;

  v0 = 0;
  result.value._rawValue = v0;
  return result;
}

void sub_22A64E2CC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static NoAnimationValue.== infix(_:_:)()
{
  return 1;
}

uint64_t NoAnimationValue.hashValue.getter()
{
  sub_22A6A6258();
  return sub_22A6A62A0();
}

uint64_t sub_22A64E314()
{
  sub_22A6A6258();
  return sub_22A6A62A0();
}

uint64_t sub_22A64E348()
{
  sub_22A6A6258();
  return sub_22A6A62A0();
}

unint64_t sub_22A64E378(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64E39C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64E39C()
{
  unint64_t result;

  result = qword_255AFF7D0;
  if (!qword_255AFF7D0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for NoAnimationValue, &type metadata for NoAnimationValue);
    atomic_store(result, (unint64_t *)&qword_255AFF7D0);
  }
  return result;
}

unint64_t sub_22A64E3E0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64E404();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64E404()
{
  unint64_t result;

  result = qword_255AFF7D8;
  if (!qword_255AFF7D8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for NoAnimationValue, &type metadata for NoAnimationValue);
    atomic_store(result, (unint64_t *)&qword_255AFF7D8);
  }
  return result;
}

unint64_t sub_22A64E44C()
{
  unint64_t result;

  result = qword_255AFF7E0;
  if (!qword_255AFF7E0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for NoAnimationValue, &type metadata for NoAnimationValue);
    atomic_store(result, (unint64_t *)&qword_255AFF7E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoAnimationValue()
{
  return &type metadata for NoAnimationValue;
}

uint64_t sub_22A64E4A4()
{
  return 1954047348;
}

unint64_t sub_22A64E4B4()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t inited;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  _BYTE v15[8];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  __int128 v24;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v4 = *((_QWORD *)v0 + 3);
  v5 = v0[32];
  v6 = v0[33];
  v7 = *((_QWORD *)v0 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7BB0;
  *(_QWORD *)(inited + 32) = 0x6E656D6E67696C61;
  *(_QWORD *)(inited + 40) = 0xE900000000000074;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 1953394534;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  TextContent.font.getter((uint64_t)&v24);
  v17 = v24;
  sub_22A64E84C();
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x657A6953746E6F66;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  LOBYTE(v17) = v1;
  v18 = v2;
  v19 = v3;
  v20 = v4;
  v21 = v5;
  v22 = v6;
  v23 = v7;
  TextContent.font.getter((uint64_t)v15);
  v9 = v16;
  swift_bridgeObjectRelease();
  LODWORD(v17) = v9;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x726F6C6F63;
  *(_QWORD *)(inited + 208) = 0xE500000000000000;
  LOBYTE(v17) = v1;
  v18 = v2;
  v19 = v3;
  v20 = v4;
  v21 = v5;
  v22 = v6;
  v23 = v7;
  v10 = TextContent.color.getter();
  v17 = sub_22A69C250(v10, v11, v12);
  v18 = v13;
  sub_22A6A6084();
  *(_QWORD *)(inited + 256) = 0x6F79614C74786574;
  *(_QWORD *)(inited + 264) = 0xEA00000000007475;
  LOBYTE(v17) = v5;
  sub_22A64E890();
  sub_22A6A6084();
  strcpy((char *)(inited + 312), "truncationMode");
  *(_BYTE *)(inited + 327) = -18;
  LOBYTE(v17) = v6;
  sub_22A63A9B4();
  sub_22A6A6084();
  return sub_22A630814(inited);
}

uint64_t sub_22A64E744()
{
  return 3;
}

uint64_t sub_22A64E74C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22A64E778()
{
  return sub_22A64E4A4();
}

uint64_t sub_22A64E78C()
{
  return 0;
}

unint64_t sub_22A64E798(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22A64E7C4();
  result = sub_22A64E808();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A64E7C4()
{
  unint64_t result;

  result = qword_255AFF7E8;
  if (!qword_255AFF7E8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255AFF7E8);
  }
  return result;
}

unint64_t sub_22A64E808()
{
  unint64_t result;

  result = qword_255AFF7F0;
  if (!qword_255AFF7F0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255AFF7F0);
  }
  return result;
}

unint64_t sub_22A64E84C()
{
  unint64_t result;

  result = qword_255AFF7F8;
  if (!qword_255AFF7F8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font.Identifier, &type metadata for Font.Identifier);
    atomic_store(result, (unint64_t *)&qword_255AFF7F8);
  }
  return result;
}

unint64_t sub_22A64E890()
{
  unint64_t result;

  result = qword_255AFF800;
  if (!qword_255AFF800)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Layout, &type metadata for TextContent.Layout);
    atomic_store(result, (unint64_t *)&qword_255AFF800);
  }
  return result;
}

uint64_t static Size.zero.getter()
{
  return 0;
}

uint64_t Size.width.getter(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFLL;
}

uint64_t Size.height.getter(uint64_t a1, uint64_t a2)
{
  return a2 & 0xFFFFFFFFFFLL;
}

uint64_t Size.init(width:height:)(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFLL;
}

uint64_t static Size.fill.getter()
{
  return 0x23F800000;
}

uint64_t Size.hash(into:)()
{
  Dimension.hash(into:)();
  return Dimension.hash(into:)();
}

uint64_t static Size.== infix(_:_:)(uint64_t a1)
{
  return sub_22A64EAE4(a1 & 0xFFFFFFFFFFLL);
}

uint64_t Size.hashValue.getter()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A64E9A8()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A64EA0C()
{
  Dimension.hash(into:)();
  return Dimension.hash(into:)();
}

uint64_t sub_22A64EA50()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A64EAB0(unsigned int *a1)
{
  return sub_22A64EAE4(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

uint64_t sub_22A64EAE4(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_22A64EB10 + 4 * byte_22A6A8C70[BYTE4(a1)]))();
}

uint64_t sub_22A64EB10@<X0>(float a1@<W2>, float a2@<W8>)
{
  unsigned __int8 v2;
  int v3;
  uint64_t result;

  result = 0;
  if (!v3 && a2 == a1)
    return ((uint64_t (*)(_QWORD, float))((char *)sub_22A64EB74 + 4 * byte_22A6A8C74[v2]))(0, a2);
  return result;
}

BOOL sub_22A64EB74(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;

  return !v4 && *(float *)&a2 == *(float *)&a4;
}

unint64_t sub_22A64EBFC()
{
  unint64_t result;

  result = qword_255AFF808;
  if (!qword_255AFF808)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Size, &type metadata for Size);
    atomic_store(result, (unint64_t *)&qword_255AFF808);
  }
  return result;
}

unint64_t sub_22A64EC40(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64EC64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64EC64()
{
  unint64_t result;

  result = qword_255AFF810;
  if (!qword_255AFF810)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Size, &type metadata for Size);
    atomic_store(result, (unint64_t *)&qword_255AFF810);
  }
  return result;
}

_QWORD *__swift_memcpy13_4(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Size(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 13))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 13) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Size()
{
  return &type metadata for Size;
}

void sub_22A64ED5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  v12 = a1 + 64;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (v3)
  {
    v3 &= v3 - 1;
LABEL_22:
    v8 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = (void *)sub_22A6A5D60();
    v10 = (void *)sub_22A6A5D60();
    v11 = objc_msgSend(v8, sel_computedStyleWithName_value_, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v11)
    {
      MEMORY[0x22E2DE8A0]();
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_22A6A5E80();
      sub_22A6A5E98();
      sub_22A6A5E74();
    }
  }
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v5 >= v13)
    goto LABEL_26;
  v6 = *(_QWORD *)(v12 + 8 * v5);
  ++v4;
  if (v6)
    goto LABEL_21;
  v4 = v5 + 1;
  if (v5 + 1 >= v13)
    goto LABEL_26;
  v6 = *(_QWORD *)(v12 + 8 * v4);
  if (v6)
    goto LABEL_21;
  v4 = v5 + 2;
  if (v5 + 2 >= v13)
    goto LABEL_26;
  v6 = *(_QWORD *)(v12 + 8 * v4);
  if (v6)
    goto LABEL_21;
  v4 = v5 + 3;
  if (v5 + 3 >= v13)
    goto LABEL_26;
  v6 = *(_QWORD *)(v12 + 8 * v4);
  if (v6)
  {
LABEL_21:
    v3 = (v6 - 1) & v6;
    goto LABEL_22;
  }
  v7 = v5 + 4;
  if (v7 >= v13)
  {
LABEL_26:
    swift_release();
    return;
  }
  v6 = *(_QWORD *)(v12 + 8 * v7);
  if (v6)
  {
    v4 = v7;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v4 >= v13)
      goto LABEL_26;
    v6 = *(_QWORD *)(v12 + 8 * v4);
    ++v7;
    if (v6)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_22A64EFE0(unsigned int a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _OWORD v10[2];
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  sub_22A69EDF0(a1, (uint64_t)v10);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  if (*((_QWORD *)&v11 + 1))
  {
    v13 = v10[0];
    v14[0] = v10[1];
    v14[1] = v11;
    v6 = v12;
    v15 = v12;
    v7 = *((_QWORD *)&v11 + 1);
    __swift_project_boxed_opaque_existential_1(v14, *((uint64_t *)&v11 + 1));
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v7, v6);
    sub_22A64F8C4((uint64_t)&v13);
  }
  else
  {
    sub_22A64F840((uint64_t)v10);
    sub_22A64F880();
    swift_allocError();
    *v8 = 3;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_22A64F224(void *a1, int a2, void *aBlock, uint64_t a4)
{
  uint64_t v4;
  id v6;

  *(_DWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  *(_QWORD *)(v4 + 32) = _Block_copy(aBlock);
  v6 = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_22A64F280()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;
  void *v5;
  void *v6;
  id v7;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_DWORD *)(v0 + 40);
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6ACE80, 0xD000000000000028, 0x800000022A6ACF20);
  sub_22A64EFE0(v1);
  v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
  v4 = *(void **)(v0 + 16);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_22A6A5D18();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_styleWithProperties_, v6);

  swift_release();
  ((void (**)(_QWORD, id, _QWORD))v3)[2](v3, v7, 0);
  _Block_release(v3);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A64F56C(void *a1, int a2, void *aBlock, uint64_t a4)
{
  uint64_t v4;
  id v6;

  *(_DWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  *(_QWORD *)(v4 + 32) = _Block_copy(aBlock);
  v6 = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_22A64F5C8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_DWORD *)(v0 + 40);
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6ACE80, 0xD00000000000002ALL, 0x800000022A6ACEF0);
  v3 = sub_22A64EFE0(v1);
  v4 = *(void **)(v0 + 16);
  sub_22A64ED5C(v3);
  swift_bridgeObjectRelease();

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF8A8);
  v5 = (void *)sub_22A6A5E50();
  swift_bridgeObjectRelease();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
  ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, v5, 0);

  _Block_release(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A64F738()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_22A62ED7C;
  return ((uint64_t (*)(void *, int, void *, uint64_t))((char *)&dword_255AFF888 + dword_255AFF888))(v2, v3, v5, v4);
}

uint64_t sub_22A64F7BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22A62ED7C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_255B00C28 + dword_255B00C28))(a1, v4, v5, v6);
}

uint64_t sub_22A64F840(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF8B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22A64F880()
{
  unint64_t result;

  result = qword_255B00A40;
  if (!qword_255B00A40)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6ABBF0, &type metadata for RemoteInspectorError);
    atomic_store(result, (unint64_t *)&qword_255B00A40);
  }
  return result;
}

uint64_t sub_22A64F8C4(uint64_t a1)
{
  destroy for RemoteInspectorNodeRegistryEntry(a1);
  return a1;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A64F930()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_22A62E6B0;
  return ((uint64_t (*)(void *, int, void *, uint64_t))((char *)&dword_255AFF8C0 + dword_255AFF8C0))(v2, v3, v5, v4);
}

uint64_t sub_22A64F9B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_22A62ED7C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_255B00C18 + dword_255B00C18))(v2, v3, v4);
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A64FA58()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_availableOutputDevices);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
  v2 = sub_22A6A5E5C();

  return v2;
}

id sub_22A64FAB0()
{
  id *v0;

  return objc_msgSend(*v0, sel_activate);
}

id sub_22A64FAC0()
{
  id *v0;

  return objc_msgSend(*v0, sel_deactivate);
}

uint64_t ContentSemantic.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A64FB04 + 4 * byte_22A6A8D70[*v0]))(0xD000000000000010, 0x800000022A6AC5B0);
}

uint64_t sub_22A64FB04()
{
  return 0x6669636570736E75;
}

uint64_t sub_22A64FB24()
{
  return 0x6B63616279616C70;
}

uint64_t sub_22A64FB3C()
{
  return 0x6C616974617073;
}

AirPlayKit::ContentSemantic_optional __swiftcall ContentSemantic.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AirPlayKit::ContentSemantic_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_22A64FBC0(char *a1)
{
  sub_22A640C10(*a1);
}

AirPlayKit::ContentSemantic_optional sub_22A64FBCC(Swift::String *a1)
{
  return ContentSemantic.init(rawValue:)(*a1);
}

uint64_t sub_22A64FBD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContentSemantic.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A64FC00()
{
  unint64_t result;

  result = qword_255AFF8E0;
  if (!qword_255AFF8E0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContentSemantic, &type metadata for ContentSemantic);
    atomic_store(result, (unint64_t *)&qword_255AFF8E0);
  }
  return result;
}

void sub_22A64FC44()
{
  char *v0;

  sub_22A687890(*v0);
}

void sub_22A64FC4C(uint64_t a1)
{
  char *v1;

  sub_22A641488(a1, *v1);
}

void sub_22A64FC54(uint64_t a1)
{
  char *v1;

  sub_22A6880DC(a1, *v1);
}

unint64_t sub_22A64FC5C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64FC80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A64FC80()
{
  unint64_t result;

  result = qword_255AFF8E8;
  if (!qword_255AFF8E8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContentSemantic, &type metadata for ContentSemantic);
    atomic_store(result, (unint64_t *)&qword_255AFF8E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentSemantic(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentSemantic(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22A64FDA0 + 4 * byte_22A6A8D7A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22A64FDD4 + 4 * byte_22A6A8D75[v4]))();
}

uint64_t sub_22A64FDD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A64FDDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A64FDE4);
  return result;
}

uint64_t sub_22A64FDF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A64FDF8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22A64FDFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A64FE04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentSemantic()
{
  return &type metadata for ContentSemantic;
}

uint64_t HorizontalPosition.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    sub_22A6A6264();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22A6A6264();
  }
  return sub_22A6A627C();
}

uint64_t HorizontalPosition.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_22A64FFD8(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))HorizontalPosition.hash(into:));
}

uint64_t sub_22A64FED8(uint64_t a1, uint64_t a2)
{
  return sub_22A65003C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))HorizontalPosition.hash(into:));
}

uint64_t sub_22A64FEE4(uint64_t a1)
{
  uint64_t v1;

  return HorizontalPosition.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_22A64FEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A6500AC(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))HorizontalPosition.hash(into:));
}

BOOL sub_22A64FEFC(uint64_t a1, uint64_t a2)
{
  return _s10AirPlayKit18HorizontalPositionO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t VerticalPosition.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    sub_22A6A6264();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22A6A6264();
  }
  return sub_22A6A627C();
}

uint64_t VerticalPosition.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_22A64FFD8(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))VerticalPosition.hash(into:));
}

uint64_t sub_22A64FFD8(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t))
{
  _BYTE v7[72];

  sub_22A6A6258();
  a3(v7, a1, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A650030(uint64_t a1, uint64_t a2)
{
  return sub_22A65003C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))VerticalPosition.hash(into:));
}

uint64_t sub_22A65003C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];

  v5 = *v3;
  v6 = *((unsigned __int8 *)v3 + 8);
  sub_22A6A6258();
  a3(v8, v5, v6);
  return sub_22A6A62A0();
}

uint64_t sub_22A650094(uint64_t a1)
{
  uint64_t v1;

  return VerticalPosition.hash(into:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_22A6500A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A6500AC(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))VerticalPosition.hash(into:));
}

uint64_t sub_22A6500AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  v6 = *v4;
  v7 = *((unsigned __int8 *)v4 + 8);
  sub_22A6A6258();
  a4(v9, v6, v7);
  return sub_22A6A62A0();
}

BOOL sub_22A650100(uint64_t a1, uint64_t a2)
{
  return _s10AirPlayKit16VerticalPositionO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

BOOL _s10AirPlayKit16VerticalPositionO2eeoiySbAC_ACtFZ_0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BOOL8 result;
  char v11;

  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1)
        return 0;
      if ((a1 & 1) != 0)
        v6 = 0x6D6F74746F62;
      else
        v6 = 7368564;
      if ((a1 & 1) != 0)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE300000000000000;
      if ((a3 & 1) != 0)
        v8 = 0x6D6F74746F62;
      else
        v8 = 7368564;
      if ((a3 & 1) != 0)
        v9 = 0xE600000000000000;
      else
        v9 = 0xE300000000000000;
      if (v6 == v8 && v7 == v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
      return *((float *)&a1 + 1) == *((float *)&a3 + 1);
    }
    else
    {
      return a4 == 2 && *(float *)&a1 == *(float *)&a3;
    }
  }
  else
  {
    return !a4 && *(float *)&a1 == *(float *)&a3;
  }
}

BOOL _s10AirPlayKit18HorizontalPositionO2eeoiySbAC_ACtFZ_0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  float v4;
  float v5;

  v4 = *((float *)&a3 + 1);
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
      {
        v5 = *((float *)&a1 + 1);
        return (sub_22A6407F0(a1, a3) & 1) != 0 && v5 == v4;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return a4 == 2 && *(float *)&a1 == *(float *)&a3;
    }
  }
  else
  {
    return !a4 && *(float *)&a1 == *(float *)&a3;
  }
}

unint64_t sub_22A650304()
{
  unint64_t result;

  result = qword_255AFF8F0;
  if (!qword_255AFF8F0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for HorizontalPosition, &type metadata for HorizontalPosition);
    atomic_store(result, (unint64_t *)&qword_255AFF8F0);
  }
  return result;
}

unint64_t sub_22A650348(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65036C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65036C()
{
  unint64_t result;

  result = qword_255AFF8F8;
  if (!qword_255AFF8F8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for HorizontalPosition, &type metadata for HorizontalPosition);
    atomic_store(result, (unint64_t *)&qword_255AFF8F8);
  }
  return result;
}

unint64_t sub_22A6503B4()
{
  unint64_t result;

  result = qword_255AFF900;
  if (!qword_255AFF900)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for VerticalPosition, &type metadata for VerticalPosition);
    atomic_store(result, (unint64_t *)&qword_255AFF900);
  }
  return result;
}

unint64_t sub_22A6503F8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65041C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65041C()
{
  unint64_t result;

  result = qword_255AFF908;
  if (!qword_255AFF908)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for VerticalPosition, &type metadata for VerticalPosition);
    atomic_store(result, (unint64_t *)&qword_255AFF908);
  }
  return result;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalPosition()
{
  return &type metadata for HorizontalPosition;
}

uint64_t sub_22A65048C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_22A650494(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VerticalPosition()
{
  return &type metadata for VerticalPosition;
}

uint64_t ContainerContent.init(children:flow:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *a3 = result;
  a3[1] = v3;
  return result;
}

void sub_22A6504C0()
{
  uint64_t v1;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  TextContent.hash(into:)();
  __asm { BR              X10 }
}

uint64_t sub_22A6505A0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v3 = v1 + v2[11];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32);
  v7 = *(unsigned __int8 *)(v3 + 21);
  sub_22A628ADC(*(_QWORD *)v3, v5, v6, *(_BYTE *)(v3 + 21));
  sub_22A6432B0(v0, v4, v5, v6 | (v7 << 40));
  sub_22A628B08(v4, v5, v6, v7);
  v8 = v1 + v2[12];
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
  v11 = *(unsigned __int8 *)(v8 + 13);
  sub_22A628B20(*(_QWORD *)v8, v10, *(_BYTE *)(v8 + 13));
  sub_22A643150(v0, v9, v10 | (v11 << 40));
  sub_22A628B4C(v9, v10, v11);
  v12 = v1 + v2[13];
  v13 = *(_QWORD *)v12;
  LOBYTE(v10) = *(_BYTE *)(v12 + 8);
  sub_22A628B64(*(_QWORD *)v12, v10);
  sub_22A642FF4(v0, v13, v10);
  sub_22A628B90(v13, v10);
  v14 = v1 + v2[14];
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  LOBYTE(v7) = *(_BYTE *)(v14 + 24);
  sub_22A628ADC(*(_QWORD *)v14, v16, v17, v7);
  sub_22A642E70(v0, v15, v16, v17, v7);
  sub_22A628B08(v15, v16, v17, v7);
  v18 = v1 + v2[15];
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  sub_22A628B64(*(_QWORD *)v18, v16);
  sub_22A642D2C(v0, v19, v16);
  sub_22A628B90(v19, v16);
  Color.hash(into:)(v0, *(_QWORD *)(v1 + v2[16]), *(_QWORD *)(v1 + v2[16] + 8), *(_BYTE *)(v1 + v2[16] + 16));
  sub_22A6A627C();
  return Insets.hash(into:)();
}

void sub_22A6507E0(uint64_t a1)
{
  uint64_t v3;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  RingContent.hash(into:)(a1);
  __asm { BR              X10 }
}

uint64_t sub_22A6508D0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v3 = v1 + v2[11];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32);
  v7 = *(unsigned __int8 *)(v3 + 21);
  sub_22A628ADC(*(_QWORD *)v3, v5, v6, *(_BYTE *)(v3 + 21));
  sub_22A6432B0(v0, v4, v5, v6 | (v7 << 40));
  sub_22A628B08(v4, v5, v6, v7);
  v8 = v1 + v2[12];
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
  v11 = *(unsigned __int8 *)(v8 + 13);
  sub_22A628B20(*(_QWORD *)v8, v10, *(_BYTE *)(v8 + 13));
  sub_22A643150(v0, v9, v10 | (v11 << 40));
  sub_22A628B4C(v9, v10, v11);
  v12 = v1 + v2[13];
  v13 = *(_QWORD *)v12;
  LOBYTE(v10) = *(_BYTE *)(v12 + 8);
  sub_22A628B64(*(_QWORD *)v12, v10);
  sub_22A642FF4(v0, v13, v10);
  sub_22A628B90(v13, v10);
  v14 = v1 + v2[14];
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  LOBYTE(v7) = *(_BYTE *)(v14 + 24);
  sub_22A628ADC(*(_QWORD *)v14, v16, v17, v7);
  sub_22A642E70(v0, v15, v16, v17, v7);
  sub_22A628B08(v15, v16, v17, v7);
  v18 = v1 + v2[15];
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  sub_22A628B64(*(_QWORD *)v18, v16);
  sub_22A642D2C(v0, v19, v16);
  sub_22A628B90(v19, v16);
  Color.hash(into:)(v0, *(_QWORD *)(v1 + v2[16]), *(_QWORD *)(v1 + v2[16] + 8), *(_BYTE *)(v1 + v2[16] + 16));
  sub_22A6A627C();
  return Insets.hash(into:)();
}

void sub_22A650B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  v5 = v1 + *(int *)(v4 + 36);
  ImageContent.ContentType.hash(into:)();
  v6 = v5 + *(int *)(type metadata accessor for ImageContent(0) + 20);
  v7 = *(unsigned __int8 *)(v6 + 16);
  if (v7 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v9 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
    sub_22A6A6270();
    Color.hash(into:)(a1, v9, v8, v7);
  }
  __asm { BR              X10 }
}

uint64_t sub_22A650C10()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v3 = v1 + v2[11];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32);
  v7 = *(unsigned __int8 *)(v3 + 21);
  sub_22A628ADC(*(_QWORD *)v3, v5, v6, *(_BYTE *)(v3 + 21));
  sub_22A6432B0(v0, v4, v5, v6 | (v7 << 40));
  sub_22A628B08(v4, v5, v6, v7);
  v8 = v1 + v2[12];
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
  v11 = *(unsigned __int8 *)(v8 + 13);
  sub_22A628B20(*(_QWORD *)v8, v10, *(_BYTE *)(v8 + 13));
  sub_22A643150(v0, v9, v10 | (v11 << 40));
  sub_22A628B4C(v9, v10, v11);
  v12 = v1 + v2[13];
  v13 = *(_QWORD *)v12;
  LOBYTE(v10) = *(_BYTE *)(v12 + 8);
  sub_22A628B64(*(_QWORD *)v12, v10);
  sub_22A642FF4(v0, v13, v10);
  sub_22A628B90(v13, v10);
  v14 = v1 + v2[14];
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  LOBYTE(v7) = *(_BYTE *)(v14 + 24);
  sub_22A628ADC(*(_QWORD *)v14, v16, v17, v7);
  sub_22A642E70(v0, v15, v16, v17, v7);
  sub_22A628B08(v15, v16, v17, v7);
  v18 = v1 + v2[15];
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  sub_22A628B64(*(_QWORD *)v18, v16);
  sub_22A642D2C(v0, v19, v16);
  sub_22A628B90(v19, v16);
  Color.hash(into:)(v0, *(_QWORD *)(v1 + v2[16]), *(_QWORD *)(v1 + v2[16] + 8), *(_BYTE *)(v1 + v2[16] + 16));
  sub_22A6A627C();
  return Insets.hash(into:)();
}

void sub_22A650E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v4 = (uint64_t *)(v1 + *(int *)(v3 + 36));
  v5 = v4[1];
  sub_22A652388(a1, *v4);
  if (v5 >> 30)
  {
    sub_22A6A6264();
    if (v5 >> 30 == 1)
    {
      sub_22A6A5DE4();
      swift_bridgeObjectRelease();
      sub_22A6A627C();
    }
    __asm { BR              X10 }
  }
  sub_22A6A6264();
  __asm { BR              X10 }
}

uint64_t sub_22A650FC4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v3 = v1 + v2[11];
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32);
  v7 = *(unsigned __int8 *)(v3 + 21);
  sub_22A628ADC(*(_QWORD *)v3, v5, v6, *(_BYTE *)(v3 + 21));
  sub_22A6432B0(v0, v4, v5, v6 | (v7 << 40));
  sub_22A628B08(v4, v5, v6, v7);
  v8 = v1 + v2[12];
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned __int8 *)(v8 + 12) << 32);
  v11 = *(unsigned __int8 *)(v8 + 13);
  sub_22A628B20(*(_QWORD *)v8, v10, *(_BYTE *)(v8 + 13));
  sub_22A643150(v0, v9, v10 | (v11 << 40));
  sub_22A628B4C(v9, v10, v11);
  v12 = v1 + v2[13];
  v13 = *(_QWORD *)v12;
  LOBYTE(v10) = *(_BYTE *)(v12 + 8);
  sub_22A628B64(*(_QWORD *)v12, v10);
  sub_22A642FF4(v0, v13, v10);
  sub_22A628B90(v13, v10);
  v14 = v1 + v2[14];
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  LOBYTE(v7) = *(_BYTE *)(v14 + 24);
  sub_22A628ADC(*(_QWORD *)v14, v16, v17, v7);
  sub_22A642E70(v0, v15, v16, v17, v7);
  sub_22A628B08(v15, v16, v17, v7);
  v18 = v1 + v2[15];
  v19 = *(_QWORD *)v18;
  LOBYTE(v16) = *(_BYTE *)(v18 + 8);
  sub_22A628B64(*(_QWORD *)v18, v16);
  sub_22A642D2C(v0, v19, v16);
  sub_22A628B90(v19, v16);
  Color.hash(into:)(v0, *(_QWORD *)(v1 + v2[16]), *(_QWORD *)(v1 + v2[16] + 8), *(_BYTE *)(v1 + v2[16] + 16));
  sub_22A6A627C();
  return Insets.hash(into:)();
}

void sub_22A651200()
{
  JUMPOUT(0x22A650F08);
}

void sub_22A651214()
{
  JUMPOUT(0x22A650F08);
}

void sub_22A651228()
{
  JUMPOUT(0x22A650F08);
}

void sub_22A651248()
{
  JUMPOUT(0x22A650F08);
}

void sub_22A651268()
{
  JUMPOUT(0x22A650F08);
}

AirPlayKit::ContainerContent::VerticalAlignment_optional __swiftcall ContainerContent.VerticalAlignment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AirPlayKit::ContainerContent::VerticalAlignment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ContainerContent.VerticalAlignment.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A651314 + 4 * byte_22A6A901B[*v0]))(0xD000000000000011, 0x800000022A6AC600);
}

uint64_t sub_22A651314()
{
  return 7368564;
}

uint64_t sub_22A651324()
{
  return 0x6D6F74746F62;
}

uint64_t sub_22A651338()
{
  return 0x7265746E6563;
}

uint64_t sub_22A65134C()
{
  return 0x7865547473726966;
}

uint64_t sub_22A65136C()
{
  return 0x747865547473616CLL;
}

unint64_t sub_22A65138C()
{
  return 0xD000000000000010;
}

void sub_22A6513A8(char *a1)
{
  sub_22A640984(*a1);
}

void sub_22A6513B4()
{
  char *v0;

  sub_22A6881C4(0, *v0);
}

void sub_22A6513C0(uint64_t a1)
{
  char *v1;

  sub_22A641398(a1, *v1);
}

void sub_22A6513C8(uint64_t a1)
{
  char *v1;

  sub_22A6881C4(a1, *v1);
}

AirPlayKit::ContainerContent::VerticalAlignment_optional sub_22A6513D0(Swift::String *a1)
{
  return ContainerContent.VerticalAlignment.init(rawValue:)(*a1);
}

uint64_t sub_22A6513DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContainerContent.VerticalAlignment.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

AirPlayKit::ContainerContent::HorizontalAlignment_optional __swiftcall ContainerContent.HorizontalAlignment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AirPlayKit::ContainerContent::HorizontalAlignment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ContainerContent.HorizontalAlignment.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aLeft_8[8 * *v0];
}

uint64_t sub_22A651474(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A6408F8(*a1, *a2);
}

uint64_t sub_22A651480()
{
  return sub_22A68797C();
}

uint64_t sub_22A651488()
{
  return sub_22A641358();
}

uint64_t sub_22A651490()
{
  return sub_22A6882D4();
}

AirPlayKit::ContainerContent::HorizontalAlignment_optional sub_22A651498(Swift::String *a1)
{
  return ContainerContent.HorizontalAlignment.init(rawValue:)(*a1);
}

uint64_t sub_22A6514A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContainerContent.HorizontalAlignment.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ContainerContent.Flow.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned int v2;

  v1 = *v0;
  v2 = *v0 >> 30;
  if (!v2)
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  if (v2 != 1)
    return sub_22A6A6264();
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A627C();
}

uint64_t ContainerContent.Flow.hashValue.getter()
{
  sub_22A6A6258();
  ContainerContent.Flow.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A6516BC()
{
  sub_22A6A6258();
  ContainerContent.Flow.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A651708()
{
  sub_22A6A6258();
  ContainerContent.Flow.hash(into:)();
  return sub_22A6A62A0();
}

void ContainerContent.Child.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v5);
  sub_22A6297D8(v0, (uint64_t)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (char *)sub_22A6518BC + 4 * byte_22A6A9029[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6518BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A62981C(v2, v1, &qword_255AFEEE0);
  sub_22A6A6264();
  sub_22A650E48(v0);
  return sub_22A629860(v1, &qword_255AFEEE0);
}

uint64_t ContainerContent.Child.hashValue.getter()
{
  sub_22A6A6258();
  ContainerContent.Child.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A6519EC()
{
  sub_22A6A6258();
  ContainerContent.Child.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A651A2C()
{
  sub_22A6A6258();
  ContainerContent.Child.hash(into:)();
  return sub_22A6A62A0();
}

BOOL sub_22A651A64()
{
  uint64_t v0;

  sub_22A6A62AC();
  ContainerContent.Child.hash(into:)();
  sub_22A6A62AC();
  ContainerContent.Child.hash(into:)();
  v0 = sub_22A6A6294();
  return v0 == sub_22A6A6294();
}

uint64_t ContainerContent.children.getter()
{
  return swift_bridgeObjectRetain();
}

void ContainerContent.flow.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

uint64_t ContainerContent.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain();
  sub_22A652388(a1, v3);
  swift_bridgeObjectRelease();
  if (!(v4 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  if (v4 >> 30 != 1)
    return sub_22A6A6264();
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A627C();
}

uint64_t ContainerContent.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_22A6A6258();
  sub_22A652388((uint64_t)v4, v1);
  if (!(v2 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  sub_22A6A6264();
  if (v2 >> 30 == 1)
  {
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A627C();
  }
  return sub_22A6A62A0();
}

void sub_22A651E00()
{
  JUMPOUT(0x22A651D50);
}

void sub_22A651E14()
{
  JUMPOUT(0x22A651D50);
}

void sub_22A651E28()
{
  JUMPOUT(0x22A651D50);
}

void sub_22A651E48()
{
  JUMPOUT(0x22A651D50);
}

void sub_22A651E68()
{
  JUMPOUT(0x22A651D50);
}

uint64_t sub_22A651E88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = v1[1];
  sub_22A652388(a1, *v1);
  if (!(v2 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  if (v2 >> 30 != 1)
    return sub_22A6A6264();
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A627C();
}

uint64_t sub_22A652034()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_22A6A6258();
  sub_22A652388((uint64_t)v4, v1);
  if (!(v2 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  sub_22A6A6264();
  if (v2 >> 30 == 1)
  {
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A627C();
  }
  return sub_22A6A62A0();
}

void sub_22A65214C()
{
  JUMPOUT(0x22A65209CLL);
}

void sub_22A652160()
{
  JUMPOUT(0x22A65209CLL);
}

void sub_22A652174()
{
  JUMPOUT(0x22A65209CLL);
}

void sub_22A652194()
{
  JUMPOUT(0x22A65209CLL);
}

void sub_22A6521B4()
{
  JUMPOUT(0x22A65209CLL);
}

BOOL sub_22A6521D0(uint64_t *a1, uint64_t *a2)
{
  return sub_22A693400(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_22A6521E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_22A6A6264();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_22A6A5D3C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

uint64_t sub_22A652388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  _QWORD v21[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v3);
  v21[2] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  MEMORY[0x24BDAC7A8](v5);
  v21[3] = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  MEMORY[0x24BDAC7A8](v7);
  v21[1] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  MEMORY[0x24BDAC7A8](v9);
  v21[0] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContainerContent.Child();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v21 - v16;
  v18 = *(_QWORD *)(a2 + 16);
  result = sub_22A6A6264();
  if (v18)
  {
    sub_22A6297D8(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v17);
    sub_22A6297D8((uint64_t)v17, (uint64_t)v15);
    v20 = (char *)&loc_22A652520 + 4 * byte_22A6A9049[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

BOOL _s10AirPlayKit16ContainerContentV4FlowO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  char v6;
  _BOOL8 result;
  char v8;

  v2 = *a1;
  v3 = *a2;
  v4 = *a1 >> 30;
  if (!v4)
  {
    if ((v3 & 0xC0000000) == 0)
    {
      sub_22A640984(*a1);
      if ((v8 & 1) != 0)
        return *((float *)&v2 + 1) == *((float *)&v3 + 1);
    }
    return 0;
  }
  if (v4 != 1)
    return v3 == 0x80000000;
  if ((*a2 & 0xC0000000) != 0x40000000)
    return 0;
  if (*(_QWORD *)&aLeft_8[8 * (char)v2] == *(_QWORD *)&aLeft_8[8 * (char)v3] && v2 << 56 == v3 << 56)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return *((float *)&v2 + 1) == *((float *)&v3 + 1);
  }
  v6 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v6 & 1) != 0)
    return *((float *)&v2 + 1) == *((float *)&v3 + 1);
  return result;
}

uint64_t type metadata accessor for ContainerContent.Child()
{
  uint64_t result;

  result = qword_255AFF9A8;
  if (!qword_255AFF9A8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22A6527DC()
{
  unint64_t result;

  result = qword_255AFF910;
  if (!qword_255AFF910)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent.VerticalAlignment, &type metadata for ContainerContent.VerticalAlignment);
    atomic_store(result, (unint64_t *)&qword_255AFF910);
  }
  return result;
}

unint64_t sub_22A652824()
{
  unint64_t result;

  result = qword_255AFF918;
  if (!qword_255AFF918)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent.HorizontalAlignment, &type metadata for ContainerContent.HorizontalAlignment);
    atomic_store(result, (unint64_t *)&qword_255AFF918);
  }
  return result;
}

unint64_t sub_22A65286C()
{
  unint64_t result;

  result = qword_255AFF920;
  if (!qword_255AFF920)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent.Flow, &type metadata for ContainerContent.Flow);
    atomic_store(result, (unint64_t *)&qword_255AFF920);
  }
  return result;
}

uint64_t sub_22A6528B0()
{
  return sub_22A6354A0(&qword_255AFF928, (uint64_t (*)(uint64_t))type metadata accessor for ContainerContent.Child, (uint64_t)&protocol conformance descriptor for ContainerContent.Child);
}

unint64_t sub_22A6528E0()
{
  unint64_t result;

  result = qword_255AFF930;
  if (!qword_255AFF930)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent, &type metadata for ContainerContent);
    atomic_store(result, (unint64_t *)&qword_255AFF930);
  }
  return result;
}

unint64_t sub_22A652924(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64CE34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContainerContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContainerContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for ContainerContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerContent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerContent()
{
  return &type metadata for ContainerContent;
}

uint64_t storeEnumTagSinglePayload for ContainerContent.VerticalAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22A652ADC + 4 * byte_22A6A9052[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22A652B10 + 4 * byte_22A6A904D[v4]))();
}

uint64_t sub_22A652B10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A652B18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A652B20);
  return result;
}

uint64_t sub_22A652B2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A652B34);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22A652B38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A652B40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerContent.VerticalAlignment()
{
  return &type metadata for ContainerContent.VerticalAlignment;
}

uint64_t storeEnumTagSinglePayload for ContainerContent.HorizontalAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A652BA8 + 4 * byte_22A6A905C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A652BDC + 4 * byte_22A6A9057[v4]))();
}

uint64_t sub_22A652BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A652BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A652BECLL);
  return result;
}

uint64_t sub_22A652BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A652C00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A652C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A652C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerContent.HorizontalAlignment()
{
  return &type metadata for ContainerContent.HorizontalAlignment;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ContainerContent.Flow(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x1FFFFFFD && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 536870910);
  if ((((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFFu) >= 0x1FFFFFFD)
    v3 = -1;
  else
    v3 = ((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerContent.Flow(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFFFFFD)
  {
    *(_QWORD *)result = a2 - 536870910;
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 8 * ((-a2 >> 2) & 0x7FFFFFF) - (a2 << 30);
  }
  return result;
}

uint64_t sub_22A652CF4(_QWORD *a1)
{
  if ((int)*a1 >= 0)
    return *a1 >> 30;
  else
    return ((*a1 >> 29) & 0xFFFFFFF8 | *a1 & 7) + 2;
}

_QWORD *sub_22A652D14(_QWORD *result)
{
  *result &= 0xFFFFFFFF3FFFFFFFLL;
  return result;
}

unint64_t *sub_22A652D24(unint64_t *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0xFFFFFFFF00000007 | (a2 << 30);
  else
    *result = ((a2 - 2) | ((unint64_t)(a2 - 2) << 29)) & 0xFFFFFFFF00000007 | 0x80000000;
  return result;
}

ValueMetadata *type metadata accessor for ContainerContent.Flow()
{
  return &type metadata for ContainerContent.Flow;
}

uint64_t initializeBufferWithCopyOfBuffer for ContainerContent.Child(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22A652DC8 + 4 * word_22A6A9062[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ContainerContent.Child(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_22A6A5C40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
      goto LABEL_7;
    case 1:
      v5 = sub_22A6A5C40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
      v6 = a1 + v4[9];
      type metadata accessor for ImageContent.ContentType(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_release();
          break;
        case 1u:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_7;
        case 2u:
          goto LABEL_7;
        case 3u:
          v10 = sub_22A6A5B8C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
          break;
        default:
          goto LABEL_8;
      }
      goto LABEL_8;
    case 2:
      v7 = sub_22A6A5C40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
      goto LABEL_8;
    case 3:
      v8 = sub_22A6A5C40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      v9 = a1 + v4[11];
      sub_22A628B08(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(unsigned int *)(v9 + 16) | ((unint64_t)*(unsigned __int8 *)(v9 + 20) << 32), *(_BYTE *)(v9 + 21));
      sub_22A628B4C(*(_QWORD *)(a1 + v4[12]), *(unsigned int *)(a1 + v4[12] + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v4[12] + 12) << 32), *(_BYTE *)(a1 + v4[12] + 13));
      sub_22A628B90(*(_QWORD *)(a1 + v4[13]), *(_BYTE *)(a1 + v4[13] + 8));
      sub_22A628B08(*(_QWORD *)(a1 + v4[14]), *(_QWORD *)(a1 + v4[14] + 8), *(_QWORD *)(a1 + v4[14] + 16), *(_BYTE *)(a1 + v4[14] + 24));
      result = sub_22A628B90(*(_QWORD *)(a1 + v4[15]), *(_BYTE *)(a1 + v4[15] + 8));
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ContainerContent.Child()
{
  char *v0;

  v0 = (char *)sub_22A653898 + 4 * byte_22A6A907A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A653898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v4 = v3[9];
  v5 = (_QWORD *)(v0 + v4);
  v6 = (uint64_t *)(v1 + v4);
  v7 = *v6;
  v8 = v6[1];
  *v5 = v7;
  v5[1] = v8;
  *(_BYTE *)(v0 + v3[10]) = *(_BYTE *)(v1 + v3[10]);
  v9 = v3[11];
  v10 = v0 + v9;
  v11 = v1 + v9;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(unsigned __int8 *)(v11 + 20);
  v15 = *(unsigned int *)(v11 + 16);
  v16 = *(_BYTE *)(v11 + 21);
  swift_bridgeObjectRetain();
  sub_22A628ADC(v12, v13, v15 | (v14 << 32), v16);
  *(_QWORD *)v10 = v12;
  *(_QWORD *)(v10 + 8) = v13;
  *(_BYTE *)(v10 + 20) = v14;
  *(_DWORD *)(v10 + 16) = v15;
  *(_BYTE *)(v10 + 21) = v16;
  v17 = v3[12];
  v18 = v0 + v17;
  v19 = v1 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(unsigned __int8 *)(v19 + 12);
  v22 = *(unsigned int *)(v19 + 8);
  LOBYTE(v13) = *(_BYTE *)(v19 + 13);
  sub_22A628B20(*(_QWORD *)v19, v22 | (v21 << 32), v13);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 12) = v21;
  *(_DWORD *)(v18 + 8) = v22;
  *(_BYTE *)(v18 + 13) = v13;
  v23 = v3[13];
  v24 = v0 + v23;
  v25 = v1 + v23;
  v26 = *(_QWORD *)v25;
  LOBYTE(v13) = *(_BYTE *)(v25 + 8);
  sub_22A628B64(*(_QWORD *)v25, v13);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v13;
  v27 = v3[14];
  v28 = v0 + v27;
  v29 = v1 + v27;
  v30 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = *(_BYTE *)(v29 + 24);
  sub_22A628ADC(*(_QWORD *)v29, v31, v32, v33);
  *(_QWORD *)v28 = v30;
  *(_QWORD *)(v28 + 8) = v31;
  *(_QWORD *)(v28 + 16) = v32;
  *(_BYTE *)(v28 + 24) = v33;
  v34 = v3[15];
  v35 = v0 + v34;
  v36 = v1 + v34;
  v37 = *(_QWORD *)v36;
  LOBYTE(v30) = *(_BYTE *)(v36 + 8);
  sub_22A628B64(*(_QWORD *)v36, v30);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v30;
  v38 = v3[16];
  v39 = v0 + v38;
  v40 = v1 + v38;
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_DWORD *)(v0 + v3[17]) = *(_DWORD *)(v1 + v3[17]);
  *(_OWORD *)(v0 + v3[18]) = *(_OWORD *)(v1 + v3[18]);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ContainerContent.Child(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22A649594(result);
    v2 = (char *)&loc_22A653DD4 + 4 * byte_22A6A9082[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ContainerContent.Child()
{
  char *v0;

  v0 = (char *)sub_22A654328 + 4 * byte_22A6A908A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A654328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_OWORD *)(v0 + v3[9]) = *(_OWORD *)(v1 + v3[9]);
  *(_BYTE *)(v0 + v3[10]) = *(_BYTE *)(v1 + v3[10]);
  v4 = v3[11];
  v5 = v0 + v4;
  v6 = v1 + v4;
  *(_OWORD *)v5 = *(_OWORD *)v6;
  *(_QWORD *)(v5 + 14) = *(_QWORD *)(v6 + 14);
  v7 = v3[12];
  v8 = (_QWORD *)(v0 + v7);
  v9 = (_QWORD *)(v1 + v7);
  *v8 = *v9;
  *(_QWORD *)((char *)v8 + 6) = *(_QWORD *)((char *)v9 + 6);
  v10 = v3[13];
  v11 = v0 + v10;
  v12 = v1 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = v3[14];
  v14 = (_OWORD *)(v0 + v13);
  v15 = (_OWORD *)(v1 + v13);
  *v14 = *v15;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v15 + 9);
  v16 = v3[15];
  v17 = v0 + v16;
  v18 = v1 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = v3[16];
  v20 = v0 + v19;
  v21 = v1 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_DWORD *)(v0 + v3[17]) = *(_DWORD *)(v1 + v3[17]);
  *(_OWORD *)(v0 + v3[18]) = *(_OWORD *)(v1 + v3[18]);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ContainerContent.Child(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22A649594(result);
    v2 = (char *)&loc_22A654630 + 4 * byte_22A6A908E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_22A6548D8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_22A654AD8(319, &qword_255AFF9B8, (uint64_t (*)(void))sub_22A6549D8, (uint64_t)&type metadata for ContainerContent);
  if (v0 <= 0x3F)
  {
    sub_22A654A1C(319);
    if (v1 <= 0x3F)
    {
      sub_22A654AD8(319, &qword_255AFF9D8, (uint64_t (*)(void))sub_22A654A94, (uint64_t)&type metadata for RingContent);
      if (v2 <= 0x3F)
      {
        sub_22A654AD8(319, qword_255AFF9E8, (uint64_t (*)(void))sub_22A636D48, (uint64_t)&type metadata for TextContent);
        if (v3 <= 0x3F)
          swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

unint64_t sub_22A6549D8()
{
  unint64_t result;

  result = qword_255AFF9C0;
  if (!qword_255AFF9C0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent, &type metadata for ContainerContent);
    atomic_store(result, (unint64_t *)&qword_255AFF9C0);
  }
  return result;
}

void sub_22A654A1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_255AFF9C8)
  {
    v2 = type metadata accessor for ImageContent(255);
    v3 = sub_22A6354A0((unint64_t *)&qword_255AFF9D0, type metadata accessor for ImageContent, (uint64_t)&protocol conformance descriptor for ImageContent);
    v5 = type metadata accessor for RenderNode(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255AFF9C8);
  }
}

unint64_t sub_22A654A94()
{
  unint64_t result;

  result = qword_255AFF9E0;
  if (!qword_255AFF9E0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255AFF9E0);
  }
  return result;
}

void sub_22A654AD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for RenderNode(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t AirPlayOverlayDisplayTreeProtocol.activate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A62E6B0;
  return v9(a1, 3, a2, a3);
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeUpdating.setNeedsUpdate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.onRootNodeUpdated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.onRootNodeUpdated.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.onRootNodeUpdated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.activate(with:framesPerSecond:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_22A62E6B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeProtocol.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22A654C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = MEMORY[0x24BEE4B00];
  v3 = a1 + 64;
  v37 = MEMORY[0x24BEE4B00];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    v13 = v12[1];
    if (v13)
    {
      v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v19 = v18[1];
      v20 = *v12;
      v21 = *(_QWORD *)(v2 + 16);
      v35 = v20;
      v36 = *v18;
      if (*(_QWORD *)(v2 + 24) <= v21)
      {
        v22 = v21 + 1;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_22A633EB4(v22, 1);
        v2 = v37;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
      }
      sub_22A6A6258();
      sub_22A6A5DE4();
      result = sub_22A6A62A0();
      v23 = v2 + 64;
      v24 = -1 << *(_BYTE *)(v2 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v2 + 64 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v23 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v2 + 64 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(_QWORD *)(v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = 16 * v27;
      v33 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v32);
      *v33 = v36;
      v33[1] = v19;
      v34 = (_QWORD *)(*(_QWORD *)(v2 + 56) + v32);
      *v34 = v35;
      v34[1] = v13;
      ++*(_QWORD *)(v2 + 16);
      result = swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_5;
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v15 = *(_QWORD *)(v3 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v15 = *(_QWORD *)(v3 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v15 = *(_QWORD *)(v3 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_22A633AA4();
    return v2;
  }
  v15 = *(_QWORD *)(v3 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22A654F80()
{
  return 0x6567616D69;
}

unint64_t sub_22A654F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[3];

  v1 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_QWORD *)((char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22A638994(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = *v3;
    v4 = v3[1];
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(inited + 32) = 0x6853657469727073;
    *(_QWORD *)(inited + 40) = 0xEB00000000746565;
    v10[1] = v5;
    v10[2] = v4;
    swift_bridgeObjectRetain();
    sub_22A6A6084();
    v7 = sub_22A630814(inited);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22A655240((uint64_t)v3);
    sub_22A6788BC();
    if (!v8)
      return sub_22A630814(MEMORY[0x24BEE4AF8]);
    return v8;
  }
  return v7;
}

uint64_t sub_22A6550DC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 32) = 0x6F6C6F43746E6974;
  *(_QWORD *)(inited + 40) = 0xE900000000000072;
  v2 = v0 + *(int *)(type metadata accessor for ImageContent(0) + 20);
  v3 = *(unsigned __int8 *)(v2 + 16);
  if (v3 == 255)
  {
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v4 = sub_22A69C250(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), v3);
  }
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  v6 = sub_22A6311C0(inited);
  v7 = sub_22A654C6C(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_22A65519C()
{
  return sub_22A654F80();
}

uint64_t sub_22A6551B8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22A6354A0(&qword_255AFFA28, type metadata accessor for ImageContent, (uint64_t)&protocol conformance descriptor for ImageContent);
  result = sub_22A6354A0(&qword_255AFFA30, type metadata accessor for ImageContent, (uint64_t)&protocol conformance descriptor for ImageContent);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22A655214()
{
  return sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_22A655240(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImageContent.ContentType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22A655280(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  id v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = sub_22A6A61C8();
  if (v8)
  {
    v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)sub_22A6A5B20();

  v12 = objc_msgSend(v11, sel_domain);
  v13 = sub_22A6A5D84();
  v15 = v14;

  if (v13 == sub_22A6A5D84() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = sub_22A6A61D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {

      v19 = 7;
      goto LABEL_16;
    }
  }
  v20 = objc_msgSend(v11, sel_code);

  if (v20 == (id)1)
    v19 = 5;
  else
    v19 = 7;
  if (!v20)
    v19 = 6;
LABEL_16:
  *a2 = v19;
}

uint64_t AirPlayConnectionProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AirPlayConnectionProvider.init()();
  return v0;
}

uint64_t AirPlayConnectionProvider.init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _UNKNOWN **v13;
  __int128 v14;
  unint64_t v15;
  _UNKNOWN **v16;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_22A6A5D60();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_22A6A603C();
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  sub_22A65563C((uint64_t)&v11, (uint64_t)&v14);
  if (!v15)
  {
    sub_22A63B6BC((uint64_t)&v14);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v4 = 0x404E000000000000;
    goto LABEL_9;
  }
  v4 = v10;
LABEL_9:
  v5 = objc_msgSend(objc_allocWithZone((Class)APKOutputDeviceDiscoverySession), sel_init);
  v15 = sub_22A655684();
  v16 = &off_24F46E580;
  *(_QWORD *)&v14 = v5;
  *((_QWORD *)&v12 + 1) = &type metadata for DispatchSourceTimeProvider;
  v13 = &off_24F46D268;
  type metadata accessor for AVOuputDeviceCommunicationsChannelBroker(0);
  v6 = swift_allocObject();
  swift_defaultActor_initialize();
  v7 = v6 + OBJC_IVAR____TtC10AirPlayKit40AVOuputDeviceCommunicationsChannelBroker_state;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 2, v8);
  *(_QWORD *)(v6 + 152) = v4;
  sub_22A628A38(&v14, v6 + 112);
  sub_22A628A38(&v11, v6 + 160);
  *(_QWORD *)(v0 + 16) = v6;
  return v0;
}

uint64_t sub_22A65563C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A655684()
{
  unint64_t result;

  result = qword_255AFFA48;
  if (!qword_255AFFA48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255AFFA48);
  }
  return result;
}

uint64_t AirPlayConnectionProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AirPlayConnectionProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t AirPlayConnectionProvider.makeAirPlayConnection(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_22A655718()
{
  uint64_t v0;
  id *v1;
  id v2;
  unint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __CFString *v10;
  _QWORD *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  id v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  v1 = (id *)(v0 + 32);
  if (!objc_msgSend(*(id *)(v0 + 32), sel_isExternalPlaybackActive))
  {
    if (qword_255AFE868 != -1)
      swift_once();
    v13 = sub_22A6A5CAC();
    __swift_project_value_buffer(v13, (uint64_t)qword_255B08F18);
    v14 = sub_22A6A5C94();
    v15 = sub_22A6A5F70();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_22A61E000, v14, v15, "isExternalPlayback = false", v16, 2u);
      MEMORY[0x22E2DF3F8](v16, -1, -1);
    }

    sub_22A64C0FC();
    swift_allocError();
    v18 = 3;
    goto LABEL_28;
  }
  v2 = objc_msgSend(*v1, sel_outputDevices);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF620);
  v3 = sub_22A6A5E5C();

  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_255AFE868 == -1)
    {
LABEL_24:
      v25 = sub_22A6A5CAC();
      __swift_project_value_buffer(v25, (uint64_t)qword_255B08F18);
      swift_unknownObjectRetain_n();
      v26 = sub_22A6A5C94();
      v27 = sub_22A6A5F70();
      v28 = os_log_type_enabled(v26, v27);
      v29 = *v1;
      if (v28)
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        *(_DWORD *)v30 = 136315138;
        v35 = v31;
        *(_QWORD *)(v0 + 16) = v29;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA70);
        v32 = sub_22A6A5DC0();
        *(_QWORD *)(v0 + 24) = sub_22A62D174(v32, v33, &v35);
        sub_22A6A6018();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_22A61E000, v26, v27, "No output device on player -> %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2DF3F8](v31, -1, -1);
        MEMORY[0x22E2DF3F8](v30, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease_n();
      }

      sub_22A64C0FC();
      swift_allocError();
      v18 = 4;
LABEL_28:
      *v17 = v18;
      swift_willThrow();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
LABEL_32:
    swift_once();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v24 = sub_22A6A612C();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_22;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (void *)MEMORY[0x22E2DEB28](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v4 = *(void **)(v3 + 32);
    swift_unknownObjectRetain();
  }
  *(_QWORD *)(v0 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v4, sel_deviceID);
  if (!v5)
  {
    swift_unknownObjectRelease();
    goto LABEL_23;
  }
  v6 = v5;
  v7 = sub_22A6A5D84();
  v9 = v8;

  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = CFSTR("APKOutputDeviceCommunicationChannelDataDestinationFitness");
  if ((objc_msgSend(v4, sel_supportsCommunicationChannelToDestination_, CFSTR("APKOutputDeviceCommunicationChannelDataDestinationFitness")) & 1) != 0)
  {
    v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255AFF660 + dword_255AFF660);
    v10 = CFSTR("APKOutputDeviceCommunicationChannelDataDestinationFitness");
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v11;
    *v11 = v0;
    v11[1] = sub_22A655C94;
    return v34(v7, v9, (uint64_t)v10);
  }
  swift_bridgeObjectRelease();
  if (qword_255AFE868 != -1)
    swift_once();
  v19 = sub_22A6A5CAC();
  __swift_project_value_buffer(v19, (uint64_t)qword_255B08F18);
  v20 = sub_22A6A5C94();
  v21 = sub_22A6A5F70();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_22A61E000, v20, v21, "Output device does not support fitness data channel", v22, 2u);
    MEMORY[0x22E2DF3F8](v22, -1, -1);
  }

  sub_22A64C0FC();
  swift_allocError();
  *v23 = 6;
  swift_willThrow();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A655C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 64);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_22A655D2C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char *v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = objc_allocWithZone((Class)type metadata accessor for AirPlayConnection());
  v3 = sub_22A659948(v1);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, _UNKNOWN **))(v0 + 8))(v3, &off_24F46EEB8);
}

uint64_t sub_22A655D94()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A655DC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A655E2C;
  v5[4] = a1;
  v5[5] = v4;
  return swift_task_switch();
}

uint64_t sub_22A655E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t type metadata accessor for AirPlayConnectionProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AirPlayConnectionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirPlayConnectionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

AirPlayKit::RingContent::CapType_optional __swiftcall RingContent.CapType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  AirPlayKit::RingContent::CapType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t RingContent.CapType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E756F72;
  else
    return 1701736302;
}

uint64_t sub_22A655F54(char *a1, char *a2)
{
  return sub_22A64117C(*a1, *a2);
}

uint64_t sub_22A655F60()
{
  return sub_22A6879E0();
}

uint64_t sub_22A655F68()
{
  return sub_22A641720();
}

uint64_t sub_22A655F70()
{
  return sub_22A687E20();
}

AirPlayKit::RingContent::CapType_optional sub_22A655F78(Swift::String *a1)
{
  return RingContent.CapType.init(rawValue:)(*a1);
}

uint64_t sub_22A655F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RingContent.CapType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t RingContent.init(valueRange:definedRange:width:radius:color:baseColor:cap:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>, float a12@<S3>, float a13@<S4>, float a14@<S5>)
{
  char v14;

  v14 = *a7;
  *(float *)a8 = a9;
  *(float *)(a8 + 4) = a10;
  *(float *)(a8 + 8) = a11;
  *(float *)(a8 + 12) = a12;
  *(float *)(a8 + 16) = a13;
  *(float *)(a8 + 20) = a14;
  *(_QWORD *)(a8 + 24) = result;
  *(_QWORD *)(a8 + 32) = a2;
  *(_BYTE *)(a8 + 40) = a3;
  *(_QWORD *)(a8 + 44) = a4;
  *(_QWORD *)(a8 + 52) = a5;
  *(_BYTE *)(a8 + 60) = a6;
  *(_BYTE *)(a8 + 61) = v14;
  return result;
}

uint64_t RingContent.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 52);
  v10 = *(_QWORD *)(v2 + 44);
  v6 = *(_BYTE *)(v2 + 40);
  v7 = *(_BYTE *)(v2 + 60);
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  Color.hash(into:)(a1, v4, v5, v6);
  Color.hash(into:)(a1, v10, v9, v7);
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t RingContent.hashValue.getter()
{
  __int128 *v0;
  char v1;
  char v2;
  char v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  __int128 v10;
  char v11;
  char v12;

  v1 = *((_BYTE *)v0 + 40);
  v2 = *((_BYTE *)v0 + 60);
  v3 = *((_BYTE *)v0 + 61);
  v6 = *v0;
  v7 = *((_QWORD *)v0 + 2);
  v8 = *(__int128 *)((char *)v0 + 24);
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 44);
  v11 = v2;
  v12 = v3;
  sub_22A6A6258();
  RingContent.hash(into:)((uint64_t)v5);
  return sub_22A6A62A0();
}

uint64_t sub_22A656168()
{
  __int128 *v0;
  char v1;
  char v2;
  char v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  __int128 v10;
  char v11;
  char v12;

  v1 = *((_BYTE *)v0 + 40);
  v2 = *((_BYTE *)v0 + 60);
  v3 = *((_BYTE *)v0 + 61);
  v6 = *v0;
  v7 = *((_QWORD *)v0 + 2);
  v8 = *(__int128 *)((char *)v0 + 24);
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 44);
  v11 = v2;
  v12 = v3;
  sub_22A6A6258();
  RingContent.hash(into:)((uint64_t)v5);
  return sub_22A6A62A0();
}

uint64_t sub_22A6561E4()
{
  __int128 *v0;
  char v1;
  char v2;
  char v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  __int128 v10;
  char v11;
  char v12;

  v1 = *((_BYTE *)v0 + 40);
  v2 = *((_BYTE *)v0 + 60);
  v3 = *((_BYTE *)v0 + 61);
  v6 = *v0;
  v7 = *((_QWORD *)v0 + 2);
  v8 = *(__int128 *)((char *)v0 + 24);
  v9 = v1;
  v10 = *(__int128 *)((char *)v0 + 44);
  v11 = v2;
  v12 = v3;
  sub_22A6A6258();
  RingContent.hash(into:)((uint64_t)v5);
  return sub_22A6A62A0();
}

BOOL sub_22A656258(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];
  __int128 v7[2];
  _OWORD v8[2];

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 14) = *(_OWORD *)((char *)a1 + 46);
  v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 14) = *(__int128 *)((char *)a2 + 46);
  return sub_22A693110(v5, v7);
}

unint64_t sub_22A6562B4()
{
  unint64_t result;

  result = qword_255AFFB20;
  if (!qword_255AFFB20)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent.CapType, &type metadata for RingContent.CapType);
    atomic_store(result, (unint64_t *)&qword_255AFFB20);
  }
  return result;
}

unint64_t sub_22A6562FC()
{
  unint64_t result;

  result = qword_255AFFB28;
  if (!qword_255AFFB28)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255AFFB28);
  }
  return result;
}

unint64_t sub_22A656340(uint64_t a1)
{
  unint64_t result;

  result = sub_22A656364();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A656364()
{
  unint64_t result;

  result = qword_255AFFB30;
  if (!qword_255AFFB30)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255AFFB30);
  }
  return result;
}

__n128 __swift_memcpy62_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RingContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 62))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 61);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RingContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 62) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 62) = 0;
    if (a2)
      *(_BYTE *)(result + 61) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RingContent()
{
  return &type metadata for RingContent;
}

uint64_t storeEnumTagSinglePayload for RingContent.CapType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A6564BC + 4 * byte_22A6A9505[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A6564F0 + 4 * byte_22A6A9500[v4]))();
}

uint64_t sub_22A6564F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A6564F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A656500);
  return result;
}

uint64_t sub_22A65650C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A656514);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A656518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A656520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RingContent.CapType()
{
  return &type metadata for RingContent.CapType;
}

uint64_t static Dimension.== infix(_:_:)(uint64_t a1)
{
  return sub_22A656680(a1 & 0xFFFFFFFFFFLL);
}

uint64_t Dimension.hash(into:)()
{
  sub_22A6A6264();
  return sub_22A6A627C();
}

uint64_t Dimension.hashValue.getter()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A6565C8()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A656610()
{
  return Dimension.hash(into:)();
}

uint64_t sub_22A656620()
{
  sub_22A6A6258();
  Dimension.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A656664(unsigned int *a1)
{
  return sub_22A656680(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

uint64_t sub_22A656680(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_22A6566A0 + 4 * byte_22A6A9654[BYTE4(a1)]))();
}

BOOL sub_22A6566A0@<W0>(float a1@<W0>, float a2@<W1>, int a3@<W8>)
{
  return !a3 && a1 == a2;
}

BOOL sub_22A6566C0@<W0>(float a1@<W0>, float a2@<W1>, int a3@<W8>)
{
  return a3 == 2 && a1 == a2;
}

BOOL sub_22A6566E0@<W0>(float a1@<W0>, float a2@<W1>, int a3@<W8>)
{
  return a3 == 3 && a1 == a2;
}

BOOL sub_22A656700@<W0>(float a1@<W0>, float a2@<W1>, int a3@<W8>)
{
  return a3 == 1 && a1 == a2;
}

unint64_t sub_22A656724()
{
  unint64_t result;

  result = qword_255AFFB38;
  if (!qword_255AFFB38)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Dimension, &type metadata for Dimension);
    atomic_store(result, (unint64_t *)&qword_255AFFB38);
  }
  return result;
}

unint64_t sub_22A656768(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65678C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65678C()
{
  unint64_t result;

  result = qword_255AFFB40;
  if (!qword_255AFFB40)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Dimension, &type metadata for Dimension);
    atomic_store(result, (unint64_t *)&qword_255AFFB40);
  }
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Dimension(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Dimension(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A656870(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_22A656878(uint64_t result, char a2)
{
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Dimension()
{
  return &type metadata for Dimension;
}

uint64_t sub_22A656890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  char v22;
  uint64_t inited;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v64 = sub_22A6A5C40();
  v65 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v4 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v5);
  v63 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v10 = type metadata accessor for Animation(0, v7, *(_QWORD *)(v8 + 8), v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v56 - v12;
  v15 = type metadata accessor for RenderAnimationActionType(0, v7, v8, v14);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v56 - v16;
  v18 = *(int *)(a1 + 36);
  v62 = v1;
  v20 = *(void (**)(char *))(v19 + 16);
  v61 = v1 + v18;
  v20((char *)v56 - v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59 = v15;
    v21 = v17[1];
    v60 = *((_QWORD *)v17 + 1);
    v22 = *v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7580;
    *(_QWORD *)(inited + 32) = 7955819;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    v67 = 0x2E656C797473;
    v68 = 0xE600000000000000;
    sub_22A644918(v22);
    sub_22A6A5E08();
    swift_bridgeObjectRelease();
    v24 = v68;
    swift_bridgeObjectRetain();
    sub_22A6A6084();
    strcpy((char *)(inited + 88), "animationType");
    *(_WORD *)(inited + 102) = -4864;
    v25 = *(_QWORD *)&aRepeatinted_0[8 * v21 + 8];
    v67 = *(_QWORD *)&aNonanimaonce_0[8 * v21];
    v68 = v25;
    swift_bridgeObjectRetain();
    v26 = v60;
    sub_22A6A6084();
    *(_QWORD *)(inited + 144) = 0x6F6974616D696E61;
    *(_QWORD *)(inited + 152) = 0xEA0000000000736ELL;
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v56[1] = v25;
      v56[2] = v24;
      v57 = inited;
      v58 = a1;
      v67 = MEMORY[0x24BEE4AF8];
      sub_22A6572DC(0, v27, 0);
      v28 = v26 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
      v29 = *(_QWORD *)(v65 + 72);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      do
      {
        v31 = v64;
        v30(v4, v28, v64);
        v32 = sub_22A6A5C1C();
        v34 = v33;
        (*(void (**)(char *, uint64_t))(v65 + 8))(v4, v31);
        v35 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22A6572DC(0, *(_QWORD *)(v35 + 16) + 1, 1);
          v35 = v67;
        }
        v37 = *(_QWORD *)(v35 + 16);
        v36 = *(_QWORD *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_22A6572DC(v36 > 1, v37 + 1, 1);
          v35 = v67;
        }
        *(_QWORD *)(v35 + 16) = v37 + 1;
        v38 = v35 + 16 * v37;
        *(_QWORD *)(v38 + 32) = v32;
        *(_QWORD *)(v38 + 40) = v34;
        v28 += v29;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v58;
      inited = v57;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = MEMORY[0x24BEE4AF8];
    }
    v67 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFB48);
    sub_22A6572F8(&qword_255AFFB50, &qword_255AFFB48, MEMORY[0x24BEE0D10], MEMORY[0x24BEE12A8]);
    sub_22A6A6084();
    v48 = sub_22A630814(inited);
    v49 = sub_22A685268(v59);
    v51 = v50;
    v52 = v65;
    v53 = (uint64_t)v63;
    v54 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v63, v62, v64);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v54);
    v66 = v48;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A6572F8((unint64_t *)&qword_255AFEC38, qword_255AFEC40, MEMORY[0x24BEE23D8], MEMORY[0x24BEE04C8]);
    sub_22A6A6084();
    MEMORY[0x22E2DF32C](&unk_22A6A976C, a1);
    v47 = sub_22A6A2880(v49, v51, v53, (uint64_t)&v67);
    swift_bridgeObjectRelease();
    sub_22A629860((uint64_t)&v67, &qword_255AFEFA8);
    sub_22A629860(v53, (uint64_t *)&unk_255B01510);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    v39 = sub_22A67BC38(v10, v8);
    if (v39)
    {
      v40 = v39;
      v41 = sub_22A685268(v15);
      v43 = v42;
      v44 = v65;
      v45 = (uint64_t)v63;
      v46 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v63, v62, v64);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v46);
      v66 = v40;
      __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
      sub_22A6572F8((unint64_t *)&qword_255AFEC38, qword_255AFEC40, MEMORY[0x24BEE23D8], MEMORY[0x24BEE04C8]);
      sub_22A6A6084();
      MEMORY[0x22E2DF32C](&unk_22A6A976C, a1);
      v47 = sub_22A6A2880(v41, v43, v45, (uint64_t)&v67);
      swift_bridgeObjectRelease();
      sub_22A629860((uint64_t)&v67, &qword_255AFEFA8);
      sub_22A629860(v45, (uint64_t *)&unk_255B01510);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return 0;
    }
  }
  return v47;
}

uint64_t sub_22A656FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22A6A5C40();
  sub_22A6298A0();
  sub_22A6A5D3C();
  v5 = type metadata accessor for RenderAnimationActionType(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v4);
  return sub_22A685330(a1, v5, v6, v7);
}

uint64_t sub_22A657038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_22A6A5C28() & 1) == 0)
    return 0;
  v9 = *(int *)(type metadata accessor for RenderAnimationAction(0, a3, a4, v8) + 36);
  return sub_22A6854C4(a1 + v9, a2 + v9, a3, a4);
}

uint64_t sub_22A6570A8(uint64_t a1)
{
  _BYTE v3[72];

  sub_22A6A6258();
  sub_22A656FD0((uint64_t)v3, a1);
  return sub_22A6A62A0();
}

uint64_t sub_22A6570F8(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22A6A6258();
  sub_22A656FD0((uint64_t)v4, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A657138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A657038(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A657144()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t sub_22A657154(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2DF32C](&unk_22A6A972C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A657180(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A657DA0(a1, a2, a3, (_QWORD *)*v3, &qword_255AFEF20, &qword_255B01080);
  *v3 = result;
  return result;
}

uint64_t sub_22A6571AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A657380(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22A6571C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6575C4(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFB70, &qword_255AFFB78);
  *v3 = result;
  return result;
}

uint64_t sub_22A6571F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6575C4(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFB88, &qword_255B01120);
  *v3 = result;
  return result;
}

uint64_t sub_22A657220(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6575C4(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFB98, &qword_255B01150);
  *v3 = result;
  return result;
}

uint64_t sub_22A65724C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6575C4(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFBA8, &qword_255B01180);
  *v3 = result;
  return result;
}

uint64_t sub_22A657278(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6575C4(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFBB8, &qword_255B011B0);
  *v3 = result;
  return result;
}

uint64_t sub_22A6572A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A6577A4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22A6572C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22A657AC4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22A6572DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22A657C2C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22A6572F8(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x22E2DF32C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A657354(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22A657DA0(a1, a2, a3, (_QWORD *)*v3, &qword_255AFFBD0, qword_255AFFBD8);
  *v3 = result;
  return result;
}

uint64_t sub_22A657380(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFB68);
  v10 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A657560(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22A6575C4(a1, a2, a3, a4, &qword_255AFFB60, &qword_255AFF3A0);
}

uint64_t sub_22A657574(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22A6575C4(a1, a2, a3, a4, &qword_255AFFB80, &qword_255AFF3A8);
}

uint64_t sub_22A657588(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22A6575C4(a1, a2, a3, a4, &qword_255AFFB90, &qword_255AFF3B0);
}

uint64_t sub_22A65759C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22A6575C4(a1, a2, a3, a4, &qword_255AFFBA0, &qword_255AFF3B8);
}

uint64_t sub_22A6575B0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22A6575C4(a1, a2, a3, a4, &qword_255AFFBB0, &qword_255AFF3C0);
}

uint64_t sub_22A6575C4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A6577A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF28);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A657944(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A657AC4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFB58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A657C2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RenderAnimationAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenderAnimationAction);
}

uint64_t sub_22A657DA0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A657F44(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8)
      memmove(v10 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A6580EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A6580F4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_22A6A5C40();
  if (v4 <= 0x3F)
  {
    result = type metadata accessor for RenderAnimationActionType(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
    if (v5 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22A65817C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  const void *v42;
  void (*v43)(void *, const void *, uint64_t);
  unint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  size_t __n;
  void (*v50)(uint64_t *, uint64_t *, uint64_t);
  size_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v53 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v53 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_DWORD *)(v7 + 80) & 0xF8 | v10;
  v12 = v11 | 7;
  v13 = ~v12;
  v14 = v8 + v12;
  v15 = (v8 + v12) & ~v12;
  v16 = v8 + 7;
  v17 = v10 + 8;
  v18 = (v10 + 8 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  v19 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84))
    v20 = *(_QWORD *)(v9 + 64);
  else
    v20 = v19 + 1;
  v21 = v19 + 3;
  v22 = ((v21 + ((v20 + v10 + v18) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL) + 17;
  if (v22 <= 0x10)
    v23 = 16;
  else
    v23 = v22;
  if (v11 > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (unint64_t)(v23 + v15 + 1) > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v12 + 16) & v13));
    swift_retain();
  }
  else
  {
    __n = v20;
    v51 = v20 + v10;
    v52 = v21;
    v50 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v50(a1, a2, v6);
    v27 = (_BYTE *)(((unint64_t)a1 + v14) & v13);
    v28 = (unsigned __int8 *)(((unint64_t)a2 + v14) & v13);
    v29 = v28[v23];
    v30 = v29 - 2;
    if (v29 >= 2)
    {
      v31 = v23 <= 3 ? v23 : 4;
      if (v31)
      {
        v32 = v31 == 4 ? *(_DWORD *)v28 : *v28;
        v33 = (v32 | (v30 << (8 * v23))) + 2;
        v29 = v32 + 2;
        if (v23 < 4)
          v29 = v33;
      }
    }
    if (v29 == 1)
    {
      *v27 = *v28;
      *(_BYTE *)((((unint64_t)a1 + v14) & v13) + 1) = v28[1];
      *(_QWORD *)((((unint64_t)a1 + v14) & v13) + 8) = *((_QWORD *)v28 + 1);
      v27[v23] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = ~v10;
      v35 = ((unint64_t)a1 + v14) & v13;
      v50((uint64_t *)v35, (uint64_t *)v28, v6);
      v36 = v35;
      v37 = (_QWORD *)((unint64_t)&v28[v16] & 0xFFFFFFFFFFFFF8);
      v38 = (_QWORD *)((v16 + v35) & 0xFFFFFFFFFFFFF8);
      *v38 = *v37;
      v39 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
      v40 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v39 = *v40;
      v41 = (void *)(((unint64_t)v39 + v17) & v34);
      v42 = (const void *)(((unint64_t)v40 + v17) & v34);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v42, 1, v53))
      {
        memcpy(v41, v42, __n);
        v43 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
      }
      else
      {
        v43 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
        v43(v41, v42, v53);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v41, 0, 1, v53);
      }
      v44 = ((unint64_t)v41 + v51) & v34;
      v43((void *)v44, (const void *)(((unint64_t)v42 + v51) & v34), v53);
      v45 = (v52 + (((unint64_t)v42 + v51) & v34)) & 0xFFFFFFFFFFFFFFFCLL;
      v46 = *(_BYTE *)(v45 + 16);
      v47 = (v52 + v44) & 0xFFFFFFFFFFFFFFFCLL;
      *(_OWORD *)v47 = *(_OWORD *)v45;
      *(_BYTE *)(v47 + 16) = v46;
      *(_BYTE *)(v36 + v23) = 0;
    }
  }
  return a1;
}

uint64_t sub_22A65844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v26;
  int v27;
  void (*v28)(unint64_t, uint64_t);
  void (*v29)(unint64_t, uint64_t);

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (_DWORD *)((v7 + a1 + (v8 | v11 | 7)) & ~(unint64_t)(v8 | v11 | 7));
  v13 = v7 + 7;
  v14 = v11 + 8;
  v15 = (v11 + 8 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v16 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = v16 + 1;
  v18 = v17 + v11;
  v19 = ((v16 + ((v17 + v11 + v15) & ~v11) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 17;
  if (v19 <= 0x10)
    v19 = 16;
  v20 = *((unsigned __int8 *)v12 + v19);
  v21 = v20 - 2;
  if (v20 >= 2)
  {
    v22 = v19 <= 3 ? v19 : 4;
    if (v22)
    {
      v23 = v22 == 4 ? *v12 : *(unsigned __int8 *)v12;
      v24 = (v23 | (v21 << (8 * v19))) + 2;
      v20 = v23 + 2;
      if (v19 < 4)
        v20 = v24;
    }
  }
  if (v20 == 1)
    return swift_bridgeObjectRelease();
  v26 = ~v11;
  v6((uint64_t)v12, v4);
  v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v14 + (((((unint64_t)v12 + v13) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26, 1, v9);
  v28 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  if (!v27)
  {
    v29 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
    v28((v14 + (((((unint64_t)v12 + v13) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26, v9);
    v28 = v29;
  }
  return ((uint64_t (*)(unint64_t, uint64_t))v28)((v18 + ((v14 + (((((unint64_t)v12 + v13) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & v26, v9);
}

uint64_t sub_22A658610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  void *v34;
  const void *v35;
  void (*v36)(void *, const void *, uint64_t);
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  size_t __n;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v46 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v46 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | v11 | 7;
  v13 = (v9 + v12 + a1) & ~v12;
  v14 = (unsigned __int8 *)((v9 + v12 + a2) & ~v12);
  v15 = v9 + 7;
  v16 = v11 + 8;
  v17 = (v11 + 8 + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v18 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v19 = *(_QWORD *)(v10 + 64);
  else
    v19 = v18 + 1;
  v20 = v19 + v11;
  v21 = v18 + 3;
  v22 = ((v18 + 3 + ((v19 + v11 + v17) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 17;
  if (v22 <= 0x10)
    v23 = 16;
  else
    v23 = v22;
  v24 = v14[v23];
  v25 = v24 - 2;
  if (v24 >= 2)
  {
    v26 = v23 <= 3 ? v23 : 4;
    if (v26)
    {
      v27 = v26 == 4 ? *(_DWORD *)v14 : *v14;
      v28 = (v27 | (v25 << (8 * v23))) + 2;
      v24 = v27 + 2;
      if (v23 < 4)
        v24 = v28;
    }
  }
  if (v24 == 1)
  {
    *(_BYTE *)v13 = *v14;
    *(_BYTE *)(v13 + 1) = v14[1];
    *(_QWORD *)(v13 + 8) = *((_QWORD *)v14 + 1);
    *(_BYTE *)(v13 + v23) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    __n = v19;
    v44 = v21;
    v45 = a1;
    v29 = ~v11;
    v8(v13, (uint64_t)v14, v6);
    v30 = (_QWORD *)((unint64_t)&v14[v15] & 0xFFFFFFFFFFFFF8);
    v31 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFF8);
    *v31 = *v30;
    v32 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    v33 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v32 = *v33;
    v34 = (void *)(((unint64_t)v32 + v16) & v29);
    v35 = (const void *)(((unint64_t)v33 + v16) & v29);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v35, 1, v46))
    {
      memcpy(v34, v35, __n);
      v36 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
    }
    else
    {
      v36 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      v36(v34, v35, v46);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v46);
    }
    v37 = ((unint64_t)v34 + v20) & v29;
    v38 = ((unint64_t)v35 + v20) & v29;
    v36((void *)v37, (const void *)v38, v46);
    a1 = v45;
    v39 = (v44 + v38) & 0xFFFFFFFFFFFFFFFCLL;
    v40 = *(_BYTE *)(v39 + 16);
    v41 = (v44 + v37) & 0xFFFFFFFFFFFFFFFCLL;
    *(_OWORD *)v41 = *(_OWORD *)v39;
    *(_BYTE *)(v41 + 16) = v40;
    *(_BYTE *)(v13 + v23) = 0;
  }
  return a1;
}

uint64_t sub_22A658888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  void (*v29)(unint64_t, uint64_t);
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  size_t v43;
  void (*v44)(void *, unint64_t, uint64_t);
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  size_t __n;
  uint64_t v55;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | v11 | 7;
  v13 = (unsigned __int8 *)((v8 + v12 + a1) & ~v12);
  v14 = (unsigned __int8 *)((v8 + v12 + a2) & ~v12);
  if (v13 != v14)
  {
    v15 = v8 + 7;
    v16 = (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
    v17 = *(_QWORD *)(v10 + 64);
    if (*(_DWORD *)(v10 + 84))
      v18 = *(_QWORD *)(v10 + 64);
    else
      v18 = v17 + 1;
    __n = v18;
    v51 = v17 + 3;
    v19 = ((v17 + 3 + ((v18 + v11 + v16) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 17;
    if (v19 <= 0x10)
      v20 = 16;
    else
      v20 = v19;
    v21 = v13[v20];
    v22 = v21 - 2;
    if (v21 >= 2)
    {
      v23 = v20 <= 3 ? v20 : 4;
      if (v23)
      {
        v24 = v23 == 4 ? *(_DWORD *)v13 : *v13;
        v25 = (v24 | (v22 << (8 * v20))) + 2;
        v21 = v24 + 2;
        if (v20 < 4)
          v21 = v25;
      }
    }
    v26 = ~v11;
    v52 = v20;
    v53 = ~v11;
    v55 = a1;
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(v13, v6);
      v50 = v15;
      v27 = v11 + ((((unint64_t)&v13[v15] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      v28 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v27 & v26, 1, v9);
      v29 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      if (!v28)
        v29(v27 & v26, v9);
      v29(((v27 | v11) + __n) & v26, v9);
      a1 = v55;
      v15 = v50;
    }
    v30 = v14[v52];
    v31 = v30 - 2;
    if (v30 >= 2)
    {
      v32 = v52 <= 3 ? v52 : 4;
      if (v32)
      {
        v33 = v32 == 4 ? *(_DWORD *)v14 : *v14;
        v34 = (v33 | (v31 << (8 * v52))) + 2;
        v30 = v33 + 2;
        if (v52 < 4)
          v30 = v34;
      }
    }
    if (v30 == 1)
    {
      *v13 = *v14;
      v13[1] = v14[1];
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      v13[v52] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(v13, v14, v6);
      v35 = (_QWORD *)((unint64_t)&v13[v15] & 0xFFFFFFFFFFFFF8);
      v36 = (_QWORD *)((unint64_t)&v14[v15] & 0xFFFFFFFFFFFFF8);
      *v35 = *v36;
      v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
      v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v37 = *v38;
      v39 = (unint64_t)v37 + v11 + 8;
      v40 = (void *)(v39 & v53);
      v41 = v9;
      v42 = (unint64_t)v38 + v11 + 8;
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v42 & v53, 1, v41))
      {
        v43 = __n;
        memcpy(v40, (const void *)(v42 & v53), __n);
        v44 = *(void (**)(void *, unint64_t, uint64_t))(v10 + 16);
      }
      else
      {
        v44 = *(void (**)(void *, unint64_t, uint64_t))(v10 + 16);
        v44(v40, v42 & v53, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v41);
        v43 = __n;
      }
      v45 = ((v39 | v11) + v43) & v53;
      v44((void *)v45, ((v42 | v11) + v43) & v53, v41);
      v46 = (v51 + (((v42 | v11) + v43) & v53)) & 0xFFFFFFFFFFFFFFFCLL;
      v47 = *(_BYTE *)(v46 + 16);
      v48 = (v51 + v45) & 0xFFFFFFFFFFFFFFFCLL;
      *(_OWORD *)v48 = *(_OWORD *)v46;
      *(_BYTE *)(v48 + 16) = v47;
      v13[v52] = 0;
      return v55;
    }
  }
  return a1;
}

uint64_t sub_22A658C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  const void *v36;
  void (*v37)(void *, const void *, uint64_t);
  unint64_t v38;
  char v39;
  unint64_t v40;
  size_t __n;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v44 = *(_QWORD *)(a3 + 16);
  v45 = a1;
  v10 = *(_QWORD *)(v44 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | v11 | 7;
  v13 = (_OWORD *)((v9 + v12 + a1) & ~v12);
  v14 = (_DWORD *)((v9 + v12 + a2) & ~v12);
  v15 = v9 + 7;
  v16 = v11 + 8;
  v17 = (v11 + 8 + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v18 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v19 = *(_QWORD *)(v10 + 64);
  else
    v19 = v18 + 1;
  v20 = v19 + v11;
  v21 = v18 + 3;
  v22 = ((v18 + 3 + ((v19 + v11 + v17) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 17;
  if (v22 <= 0x10)
    v23 = 16;
  else
    v23 = v22;
  v24 = *((unsigned __int8 *)v14 + v23);
  v25 = v24 - 2;
  if (v24 >= 2)
  {
    v26 = v23 <= 3 ? v23 : 4;
    if (v26)
    {
      v27 = v26 == 4 ? *v14 : *(unsigned __int8 *)v14;
      v28 = (v27 | (v25 << (8 * v23))) + 2;
      v24 = v27 + 2;
      if (v23 < 4)
        v24 = v28;
    }
  }
  if (v24 == 1)
  {
    *v13 = *(_OWORD *)v14;
    v29 = 1;
  }
  else
  {
    __n = v19;
    v43 = v21;
    v30 = ~v11;
    v8((uint64_t)v13, (uint64_t)v14, v6);
    v31 = (_QWORD *)(((unint64_t)v14 + v15) & 0xFFFFFFFFFFFFF8);
    v32 = (_QWORD *)(((unint64_t)v13 + v15) & 0xFFFFFFFFFFFFF8);
    *v32 = *v31;
    v33 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v35 = (void *)(((unint64_t)v33 + v16) & v30);
    v36 = (const void *)(((unint64_t)v34 + v16) & v30);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v36, 1, v44))
    {
      memcpy(v35, v36, __n);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)v35 + v20) & v30, ((unint64_t)v36 + v20) & v30, v44);
    }
    else
    {
      v37 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
      v37(v35, v36, v44);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v44);
      v37((void *)(((unint64_t)v35 + v20) & v30), (const void *)(((unint64_t)v36 + v20) & v30), v44);
    }
    v29 = 0;
    v38 = (v43 + (((unint64_t)v36 + v20) & v30)) & 0xFFFFFFFFFFFFFFFCLL;
    v39 = *(_BYTE *)(v38 + 16);
    v40 = (v43 + (((unint64_t)v35 + v20) & v30)) & 0xFFFFFFFFFFFFFFFCLL;
    *(_OWORD *)v40 = *(_OWORD *)v38;
    *(_BYTE *)(v40 + 16) = v39;
  }
  *((_BYTE *)v13 + v23) = v29;
  return v45;
}

uint64_t sub_22A658E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  void (*v29)(unint64_t, uint64_t);
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  size_t v44;
  void (*v45)(void *, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  size_t __n;
  uint64_t v56;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8 | v11 | 7;
  v13 = (_DWORD *)((v8 + v12 + a1) & ~v12);
  v14 = (_DWORD *)((v8 + v12 + a2) & ~v12);
  if (v13 != v14)
  {
    v15 = v8 + 7;
    v16 = (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
    v17 = *(_QWORD *)(v10 + 64);
    if (*(_DWORD *)(v10 + 84))
      v18 = *(_QWORD *)(v10 + 64);
    else
      v18 = v17 + 1;
    __n = v18;
    v52 = v17 + 3;
    v19 = ((v17 + 3 + ((v18 + v11 + v16) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL) + 17;
    if (v19 <= 0x10)
      v20 = 16;
    else
      v20 = v19;
    v21 = *((unsigned __int8 *)v13 + v20);
    v22 = v21 - 2;
    if (v21 >= 2)
    {
      v23 = v20 <= 3 ? v20 : 4;
      if (v23)
      {
        v24 = v23 == 4 ? *v13 : *(unsigned __int8 *)v13;
        v25 = (v24 | (v22 << (8 * v20))) + 2;
        v21 = v24 + 2;
        if (v20 < 4)
          v21 = v25;
      }
    }
    v26 = ~v11;
    v53 = v20;
    v54 = ~v11;
    v56 = a1;
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v13, v6);
      v51 = v15;
      v27 = v11 + (((((unint64_t)v13 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      v28 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v27 & v26, 1, v9);
      v29 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      if (!v28)
        v29(v27 & v26, v9);
      v29(((v27 | v11) + __n) & v26, v9);
      a1 = v56;
      v15 = v51;
    }
    v30 = *((unsigned __int8 *)v14 + v53);
    v31 = v30 - 2;
    if (v30 >= 2)
    {
      v32 = v53 <= 3 ? v53 : 4;
      if (v32)
      {
        v33 = v32 == 4 ? *v14 : *(unsigned __int8 *)v14;
        v34 = (v33 | (v31 << (8 * v53))) + 2;
        v30 = v33 + 2;
        if (v53 < 4)
          v30 = v34;
      }
    }
    if (v30 == 1)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v35 = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v7 + 32))(v13, v14, v6);
      v36 = (_QWORD *)(((unint64_t)v13 + v15) & 0xFFFFFFFFFFFFF8);
      v37 = (_QWORD *)(((unint64_t)v14 + v15) & 0xFFFFFFFFFFFFF8);
      *v36 = *v37;
      v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v38 = *v39;
      v40 = (unint64_t)v38 + v11 + 8;
      v41 = (void *)(v40 & v54);
      v42 = v9;
      v43 = (unint64_t)v39 + v11 + 8;
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v43 & v54, 1, v42))
      {
        v44 = __n;
        memcpy(v41, (const void *)(v43 & v54), __n);
        v45 = *(void (**)(void *, unint64_t, uint64_t))(v10 + 32);
      }
      else
      {
        v45 = *(void (**)(void *, unint64_t, uint64_t))(v10 + 32);
        v45(v41, v43 & v54, v42);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v42);
        v44 = __n;
      }
      v46 = ((v40 | v11) + v44) & v54;
      v45((void *)v46, ((v43 | v11) + v44) & v54, v42);
      v35 = 0;
      v47 = (v52 + (((v43 | v11) + v44) & v54)) & 0xFFFFFFFFFFFFFFFCLL;
      v48 = *(_BYTE *)(v47 + 16);
      v49 = (v52 + v46) & 0xFFFFFFFFFFFFFFFCLL;
      *(_OWORD *)v49 = *(_OWORD *)v47;
      *(_BYTE *)(v49 + 16) = v48;
      a1 = v56;
    }
    *((_BYTE *)v13 + v53) = v35;
  }
  return a1;
}

uint64_t sub_22A6591F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;

  v6 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(v9 + 64);
  if (v7 <= 0xFE)
    v13 = 254;
  else
    v13 = *(_DWORD *)(v6 + 84);
  v14 = v11 == 0;
  v15 = v12 + v10;
  if (v14)
    ++v15;
  v16 = ((v12
        + ((v15 + ((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10)) & ~v10)
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  if (v16 <= 0x10)
    v16 = 16;
  if (!a2)
    return 0;
  v17 = v10 | *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v18 = v8 + v17;
  if (a2 <= v13)
    goto LABEL_28;
  v19 = v16 + (v18 & ~v17) + 1;
  v20 = 8 * v19;
  if (v19 <= 3)
  {
    v23 = ((a2 - v13 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (!v21)
        goto LABEL_28;
      goto LABEL_19;
    }
    if (v23 > 0xFF)
    {
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (!*(_WORD *)(a1 + v19))
        goto LABEL_28;
      goto LABEL_19;
    }
    if (v23 < 2)
    {
LABEL_28:
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(uint64_t))(v6 + 48))(a1);
      v26 = *(unsigned __int8 *)(((v18 + a1) & ~v17) + v16);
      if (v26 >= 2)
        return (v26 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_28;
LABEL_19:
  v24 = (v21 - 1) << v20;
  if (v19 > 3)
    v24 = 0;
  if ((_DWORD)v16 + (v18 & ~(_DWORD)v17) != -1)
  {
    if (v19 <= 3)
      v25 = v16 + (v18 & ~(_DWORD)v17) + 1;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return v13 + v24 + 1;
}

void sub_22A6593EC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;

  v8 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v8 + 84) <= 0xFEu)
    v14 = 254;
  else
    v14 = *(_DWORD *)(v8 + 84);
  v15 = (v9 + (v11 | *(_DWORD *)(v8 + 80) & 0xF8 | 7)) & ~(unint64_t)(v11 | *(_DWORD *)(v8 + 80) & 0xF8 | 7);
  v16 = v13 + v11;
  if (!*(_DWORD *)(v10 + 84))
    ++v16;
  v17 = ((v13 + ((v16 + v12) & ~v11) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 17;
  if (v17 <= 0x10)
    v17 = 16;
  v18 = v17 + v15 + 1;
  if (a3 <= v14)
  {
    v19 = 0;
  }
  else if (v18 <= 3)
  {
    v21 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v21))
    {
      v19 = 4u;
    }
    else if (v21 >= 0x100)
    {
      v19 = 2;
    }
    else
    {
      v19 = v21 > 1;
    }
  }
  else
  {
    v19 = 1u;
  }
  if (v14 < a2)
  {
    v20 = ~v14 + a2;
    if (v18 < 4)
    {
      if ((_DWORD)v17 + (_DWORD)v15 != -1)
      {
        v22 = v20 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if ((_DWORD)v18 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if ((_DWORD)v18 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17 + v15 + 1);
      *(_DWORD *)a1 = v20;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22A6596B0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x22A65969CLL);
}

void sub_22A6596B8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x22A65969CLL);
}

void sub_22A6596C8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x22A65969CLL);
}

unint64_t sub_22A6596D4()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A97F0;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 1936941421;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x73656E6666697473;
  *(_QWORD *)(inited + 152) = 0xE900000000000073;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x676E69706D6164;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 256) = 0x566C616974696E69;
  *(_QWORD *)(inited + 264) = 0xEF797469636F6C65;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A659854@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A6596D4();
  *a1 = result;
  return result;
}

unint64_t sub_22A659878(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65989C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65989C()
{
  unint64_t result;

  result = qword_255AFFC88;
  if (!qword_255AFFC88)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for SpringParameters, &type metadata for SpringParameters);
    atomic_store(result, (unint64_t *)&qword_255AFFC88);
  }
  return result;
}

unint64_t sub_22A6598E0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A659904();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A659904()
{
  unint64_t result;

  result = qword_255AFFC90;
  if (!qword_255AFFC90)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for SpringParameters, &type metadata for SpringParameters);
    atomic_store(result, (unint64_t *)&qword_255AFFC90);
  }
  return result;
}

char *sub_22A659948(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  objc_super v28;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onDataReceived];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onClose];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection] = a1;
  v7 = objc_allocWithZone(MEMORY[0x24BDD1490]);
  v8 = v2;
  swift_unknownObjectRetain();
  v9 = objc_msgSend(v7, sel_init);
  *(_QWORD *)&v8[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_formatter] = v9;
  objc_msgSend(v9, sel_setAllowedUnits_, 0xFFFFLL);
  v10 = v9;
  objc_msgSend(v10, sel_setCountStyle_, 0);

  v28.receiver = v8;
  v28.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v28, sel_init);
  v12 = OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection;
  v13 = *(void **)&v11[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection];
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = sub_22A65AFD8;
  v27 = v14;
  v15 = MEMORY[0x24BDAC760];
  v22 = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_22A659C68;
  v25 = &block_descriptor_6;
  v16 = _Block_copy(&v22);
  v17 = v11;
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_setOnData_, v16);
  _Block_release(v16);
  swift_unknownObjectRelease();
  v18 = *(void **)&v11[v12];
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = sub_22A65AFF8;
  v27 = v19;
  v22 = v15;
  v23 = 1107296256;
  v24 = sub_22A6360EC;
  v25 = &block_descriptor_10_0;
  v20 = _Block_copy(&v22);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v18, sel_setOnClose_, v20);

  swift_unknownObjectRelease();
  _Block_release(v20);
  swift_unknownObjectRelease();
  return v17;
}

void sub_22A659BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x22E2DF4AC](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void (**)(uint64_t, uint64_t))(v6 + OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onDataReceived);
    swift_beginAccess();
    v9 = *v8;
    if (*v8)
    {
      sub_22A62A1BC((uint64_t)v9);

      v9(a1, a2);
      sub_22A62EA00((uint64_t)v9);
    }
    else
    {

    }
  }
}

uint64_t sub_22A659C68(uint64_t a1, void *a2)
{
  void (*v3)(uint64_t, unint64_t);
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = sub_22A6A5BC8();
  v7 = v6;

  v3(v5, v7);
  sub_22A64E268(v5, v7);
  return swift_release();
}

void sub_22A659CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (**v4)(void);
  void (*v5)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E2DF4AC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void (**)(void))(v2 + OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onClose);
    swift_beginAccess();
    v5 = *v4;
    if (*v4)
    {
      sub_22A62A1BC((uint64_t)v5);

      v5();
      sub_22A62EA00((uint64_t)v5);
    }
    else
    {

    }
  }
}

id sub_22A659D7C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_255AFE868 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000060, 0x800000022A6AD010, 0x292865736F6C63, 0xE700000000000000);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection], sel_close);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_22A659E50()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = sub_22A6A5CAC();
  __swift_project_value_buffer(v1, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000060, 0x800000022A6AD010, 0x292865736F6C63, 0xE700000000000000);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection), sel_close);
}

uint64_t type metadata accessor for AirPlayConnection()
{
  return objc_opt_self();
}

uint64_t sub_22A65A074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_22A65A090()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = v0[17];
  v2 = sub_22A6A5CAC();
  v0[18] = __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000060, 0x800000022A6AD010, 0x293A5F28646E6573, 0xE800000000000000);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_connection);
  v0[19] = v3;
  v4 = sub_22A6A5BB0();
  v0[20] = v4;
  v0[2] = v0;
  v0[3] = sub_22A65A1CC;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_22A65A558;
  v6[3] = &block_descriptor_3;
  v6[4] = v5;
  objc_msgSend(v3, sel_sendData_completionHandler_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_22A65A1CC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_22A65A22C()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  _DWORD *v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);

  v4 = v1;
  sub_22A64E224(v3, v2);
  v5 = v4;
  sub_22A64E224(v3, v2);
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F70();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(void **)(v0 + 136);
  if (v8)
  {
    v11 = v9 >> 62;
    v12 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v12 = 136315394;
    __asm { BR              X9 }
  }
  v13 = *(_QWORD *)(v0 + 120);

  sub_22A64E268(v13, v9);
  sub_22A64E268(v13, v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A65A518()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A65A558(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_22A65A5CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_22A6A5C10();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A65A674()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  _BYTE *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  void (*v36)(_QWORD, _QWORD);
  _QWORD *v37;
  uint64_t v38;

  v1 = *(_QWORD **)(v0 + 40);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3))
  {
    sub_22A64C0FC();
    swift_allocError();
    *v30 = 2;
    swift_willThrow();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_255AFE868 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  __swift_project_value_buffer(v4, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000060, 0x800000022A6AD010, 0x293A5F28646E6573, 0xE800000000000000);
  sub_22A6A5C04();
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_22A6A5D18();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = 0;
  v7 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, v6, 200, 0, v0 + 16);

  v8 = *(id *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 88);
  if (!v7)
  {
    v31 = v8;
    v32 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 64);
    sub_22A6A5B2C();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v32);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(void **)(v0 + 48);
  v14 = sub_22A6A5BC8();
  v16 = v15;

  *(_QWORD *)(v0 + 96) = v14;
  *(_QWORD *)(v0 + 104) = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
  v17 = v13;
  sub_22A64E224(v14, v16);
  v18 = v17;
  sub_22A64E224(v14, v16);
  v19 = sub_22A6A5C94();
  v20 = sub_22A6A5F70();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 80);
  if (v21)
  {
    v24 = *(_QWORD *)(v0 + 64);
    v23 = *(_QWORD *)(v0 + 72);
    v25 = *(_QWORD *)(v0 + 56);
    v26 = swift_slowAlloc();
    swift_slowAlloc();
    *(_DWORD *)v26 = 134218242;
    sub_22A6A5C04();
    sub_22A6A5BE0();
    v28 = v27;
    v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v29(v23, v25);
    *(_QWORD *)(v0 + 24) = v28;
    sub_22A6A6018();
    v29(v22, v25);
    *(_WORD *)(v26 + 12) = 2080;
    __asm { BR              X9 }
  }
  v35 = *(void **)(v0 + 48);
  v36 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8);
  v36(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));

  sub_22A64E268(v14, v16);
  sub_22A64E268(v14, v16);

  *(_QWORD *)(v0 + 112) = v36;
  v37 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v37;
  *v37 = v0;
  v37[1] = sub_22A65ABF0;
  v38 = *(_QWORD *)(v0 + 48);
  v37[16] = v16;
  v37[17] = v38;
  v37[15] = v14;
  return swift_task_switch();
}

uint64_t sub_22A65ABF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A65AC98()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  sub_22A64E268(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A65AD38()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  sub_22A64E268(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A65ADD0(uint64_t a1, uint64_t a2)
{
  return sub_22A65AE50(a1, a2, &OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onDataReceived, (void (*)(_QWORD, _QWORD))sub_22A62A1BC);
}

uint64_t sub_22A65ADE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22A65AEC4(a1, a2, a3, a4, &OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onDataReceived, (uint64_t (*)(uint64_t, uint64_t))sub_22A62EA00);
}

uint64_t (*sub_22A65ADF8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22A65AE3C(uint64_t a1, uint64_t a2)
{
  return sub_22A65AE50(a1, a2, &OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onClose, (void (*)(_QWORD, _QWORD))sub_22A62A1BC);
}

uint64_t sub_22A65AE50(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(v4 + *a3);
  swift_beginAccess();
  v7 = *v6;
  a4(*v6, v6[1]);
  return v7;
}

uint64_t sub_22A65AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22A65AEC4(a1, a2, a3, a4, &OBJC_IVAR____TtC10AirPlayKit17AirPlayConnection_onClose, (uint64_t (*)(uint64_t, uint64_t))sub_22A65B000);
}

uint64_t sub_22A65AEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (uint64_t *)(v6 + *a5);
  swift_beginAccess();
  v11 = *v10;
  v12 = v10[1];
  *v10 = a1;
  v10[1] = a2;
  return a6(v11, v12);
}

uint64_t (*sub_22A65AF20())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22A65AF68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62E6B0;
  return sub_22A65A5CC(a1);
}

uint64_t sub_22A65AFB4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22A65AFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22A659BA8(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_22A65AFF8()
{
  uint64_t v0;

  sub_22A659CD8(v0);
}

uint64_t dispatch thunk of AirPlayOverlayDisplayTreeBuilding.makeRootNode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22A65B014(_QWORD *a1, uint64_t a2, uint64_t a3, uint8_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50;

  v37 = a4;
  v39 = a3;
  v50 = a5;
  v38 = *(_QWORD *)(a5 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)&v34 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_22A6A5C40();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, v5, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  sub_22A69EB34((uint64_t)v14, (uint64_t)v41);
  sub_22A629860((uint64_t)v14, (uint64_t *)&unk_255B01510);
  if (!*((_QWORD *)&v42 + 1))
    return sub_22A629860((uint64_t)v41, (uint64_t *)&unk_255AFF8B0);
  v44[0] = v41[0];
  v44[1] = v41[1];
  v44[2] = v42;
  v45 = v43;
  if (!*(_QWORD *)(a2 + 16) || (v17 = sub_22A632F64(v5), (v18 & 1) == 0))
  {
    v19 = v6;
LABEL_7:
    v20 = v50;
    v21 = (void (*)(uint64_t *))v39;
    if (v39)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF40);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_22A6A77C0;
      *(_DWORD *)(v22 + 32) = v44[0];
      v46 = v22;
      v47 = 0u;
      v48 = 0u;
      v49 = 6;
      v21(&v46);
      if (v19)
      {
        sub_22A64F8C4((uint64_t)v44);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v24 = v38;
    v25 = v36;
    if (qword_255AFE878 != -1)
      swift_once();
    v26 = sub_22A6A5CAC();
    __swift_project_value_buffer(v26, (uint64_t)qword_255B08F48);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v27(v25, v5, v20);
    v28 = sub_22A6A5C94();
    v29 = sub_22A6A5F70();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      *(_QWORD *)&v41[0] = v39;
      *(_DWORD *)v30 = 136315138;
      v37 = v30 + 4;
      v27(v35, (uint64_t)v25, v20);
      v31 = sub_22A6A5DC0();
      v40[0] = sub_22A62D174(v31, v32, (uint64_t *)v41);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v20);
      _os_log_impl(&dword_22A61E000, v28, v29, "Action: %s", v30, 0xCu);
      v33 = v39;
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v33, -1, -1);
      MEMORY[0x22E2DF3F8](v30, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v20);
    }
    return sub_22A64F8C4((uint64_t)v44);
  }
  sub_22A628A98(*(_QWORD *)(a2 + 56) + 40 * v17, (uint64_t)v41);
  sub_22A628A38(v41, (uint64_t)v40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A69F414(v40, (uint64_t)v41);
  v19 = v6;
  if (!v6)
  {
    sub_22A64F8C4((uint64_t)v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_22A64F8C4((uint64_t)v44);
}

uint64_t sub_22A65B4A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint8_t *a4, uint64_t a5)
{
  return sub_22A65B014(a1, a2, a3, a4, a5);
}

void ImageContent.ContentType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_22A6A5B8C();
  MEMORY[0x24BDAC7A8](v1);
  v8 = type metadata accessor for SpriteSheetAnimation();
  v2 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_22A6354E0(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_22A65B5DC + 4 * byte_22A6A98A8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A65B5DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 40);
  sub_22A6A6264();
  sub_22A6A5DE4();
  if ((v2 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ImageContent.ContentType.hashValue.getter()
{
  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A65BCB0()
{
  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A65BCF0()
{
  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t ImageContent.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22A6354E0(v1, a1, type metadata accessor for ImageContent.ContentType);
}

uint64_t ImageContent.tintColor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ImageContent(0) + 20));
}

uint64_t ImageContent.init(content:tintColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t result;
  uint64_t v10;

  sub_22A65D0F0(a1, a5);
  result = type metadata accessor for ImageContent(0);
  v10 = a5 + *(int *)(result + 20);
  *(_QWORD *)v10 = a2;
  *(_QWORD *)(v10 + 8) = a3;
  *(_BYTE *)(v10 + 16) = a4;
  return result;
}

uint64_t ImageContent.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  ImageContent.ContentType.hash(into:)();
  v3 = v1 + *(int *)(type metadata accessor for ImageContent(0) + 20);
  v4 = *(unsigned __int8 *)(v3 + 16);
  if (v4 == 255)
    return sub_22A6A6270();
  v6 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  sub_22A6A6270();
  return Color.hash(into:)(a1, v6, v5, v4);
}

uint64_t ImageContent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  v1 = v0 + *(int *)(type metadata accessor for ImageContent(0) + 20);
  v2 = *(unsigned __int8 *)(v1 + 16);
  if (v2 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v4 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    sub_22A6A6270();
    Color.hash(into:)((uint64_t)v6, v4, v3, v2);
  }
  return sub_22A6A62A0();
}

uint64_t sub_22A65BEE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];

  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  v3 = v1 + *(int *)(a1 + 20);
  v4 = *(unsigned __int8 *)(v3 + 16);
  if (v4 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v6 = *(_QWORD *)v3;
    v5 = *(_QWORD *)(v3 + 8);
    sub_22A6A6270();
    Color.hash(into:)((uint64_t)v8, v6, v5, v4);
  }
  return sub_22A6A62A0();
}

uint64_t sub_22A65BF78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  ImageContent.ContentType.hash(into:)();
  v5 = v2 + *(int *)(a2 + 20);
  v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 255)
    return sub_22A6A6270();
  v8 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  sub_22A6A6270();
  return Color.hash(into:)(a1, v8, v7, v6);
}

uint64_t sub_22A65C000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  sub_22A6A6258();
  ImageContent.ContentType.hash(into:)();
  v4 = v2 + *(int *)(a2 + 20);
  v5 = *(unsigned __int8 *)(v4 + 16);
  if (v5 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v7 = *(_QWORD *)v4;
    v6 = *(_QWORD *)(v4 + 8);
    sub_22A6A6270();
    Color.hash(into:)((uint64_t)v9, v7, v6, v5);
  }
  return sub_22A6A62A0();
}

uint64_t sub_22A65C090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  sub_22A6A6288();
  sub_22A6A6288();
  sub_22A6A6270();
  v2 = v0 + *(int *)(v1 + 52);
  if (*(unsigned __int8 *)(v2 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A65C21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
  sub_22A6A6288();
  sub_22A6A6288();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 44) + 4) == 1)
  {
    sub_22A6A6270();
  }
  else
  {
    sub_22A6A6270();
    sub_22A6A627C();
  }
  sub_22A6A627C();
  v2 = v0 + *(int *)(v1 + 52);
  if (*(unsigned __int8 *)(v2 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A65C3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
  sub_22A6A6288();
  sub_22A6A6288();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 44) + 24) == 1)
  {
    sub_22A6A6270();
  }
  else
  {
    sub_22A6A6270();
    Transform.hash(into:)();
  }
  Transform.hash(into:)();
  v2 = v0 + *(int *)(v1 + 52);
  if (*(unsigned __int8 *)(v2 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A65C5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
  sub_22A6A6288();
  sub_22A6A6288();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 44) + 8) == 1)
  {
    sub_22A6A6270();
  }
  else
  {
    sub_22A6A6270();
    Anchor.hash(into:)();
  }
  Anchor.hash(into:)();
  v2 = v0 + *(int *)(v1 + 52);
  if (*(unsigned __int8 *)(v2 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A65C7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
  sub_22A6A6288();
  sub_22A6A6288();
  if ((~*(_QWORD *)(v0 + *(int *)(v1 + 44)) & 0xFF00000000) != 0)
  {
    sub_22A6A6270();
    Dimension.hash(into:)();
    Dimension.hash(into:)();
  }
  else
  {
    sub_22A6A6270();
  }
  Dimension.hash(into:)();
  Dimension.hash(into:)();
  v2 = v0 + *(int *)(v1 + 52);
  if (*(unsigned __int8 *)(v2 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t sub_22A65C9B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = v1;
  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
  sub_22A6A6288();
  sub_22A6A6288();
  v5 = v1 + v4[11];
  v6 = *(_QWORD *)(v5 + 8);
  if (*(_BYTE *)(v5 + 8) == 0xFF)
  {
    sub_22A6A6270();
  }
  else
  {
    v7 = *(_BYTE *)(v5 + 20);
    v8 = *(_QWORD *)v5;
    *((_QWORD *)&v9 + 1) = *(unsigned int *)(v5 + 16);
    *(_QWORD *)&v9 = *(_QWORD *)(v5 + 8);
    sub_22A6A6270();
    HorizontalPosition.hash(into:)(a1, v8, v6);
    VerticalPosition.hash(into:)(a1, v9 >> 32, v7);
  }
  v10 = v1 + v4[12];
  v11 = *(_QWORD *)(v10 + 12);
  v12 = *(_BYTE *)(v10 + 20);
  HorizontalPosition.hash(into:)(a1, *(_QWORD *)v10, *(_BYTE *)(v10 + 8));
  VerticalPosition.hash(into:)(a1, v11, v12);
  v13 = v2 + v4[13];
  if (*(unsigned __int8 *)(v13 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t type metadata accessor for ImageContent.ContentType(uint64_t a1)
{
  return sub_22A64AC50(a1, qword_255AFFE20);
}

void _s10AirPlayKit12ImageContentV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[20];

  v4 = sub_22A6A5B8C();
  v15[1] = *(_QWORD *)(v4 - 8);
  v15[2] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v15[0] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ImageContent.ContentType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFFE58);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A6354E0(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ImageContent.ContentType);
  sub_22A6354E0(a2, (uint64_t)v13, type metadata accessor for ImageContent.ContentType);
  v14 = (char *)sub_22A65CD58 + 4 * byte_22A6A98C4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A65CD58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_22A6354E0(v0, v2, type metadata accessor for ImageContent.ContentType);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 56);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_22A65E0D4(v0);
    v6 = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 48);
    v8 = *(_BYTE *)(v2 + 41);
    v9 = *(_BYTE *)(v2 + 40);
    v10 = *(_QWORD *)(v2 + 32);
    v11 = *v1;
    v12 = v1[1];
    v13 = v1[4];
    v14 = *((_BYTE *)v1 + 40);
    v15 = *((_BYTE *)v1 + 41);
    v16 = v1[6];
    v17 = v1[7];
    *(_QWORD *)(v3 - 152) = *(_QWORD *)v2;
    *(_QWORD *)(v3 - 144) = v4;
    *(_OWORD *)(v3 - 136) = *(_OWORD *)(v2 + 16);
    *(_QWORD *)(v3 - 120) = v10;
    *(_BYTE *)(v3 - 112) = v9;
    *(_BYTE *)(v3 - 111) = v8;
    *(_QWORD *)(v3 - 104) = v7;
    *(_QWORD *)(v3 - 96) = v5;
    *(_QWORD *)(v3 - 216) = v11;
    *(_QWORD *)(v3 - 208) = v12;
    *(_OWORD *)(v3 - 200) = *((_OWORD *)v1 + 1);
    *(_QWORD *)(v3 - 184) = v13;
    *(_BYTE *)(v3 - 176) = v14;
    *(_BYTE *)(v3 - 175) = v15;
    *(_QWORD *)(v3 - 168) = v16;
    *(_QWORD *)(v3 - 160) = v17;
    v6 = _s10AirPlayKit11RenderAssetV2eeoiySbAC_ACtFZ_0(v3 - 152, v3 - 216);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22A633AE8(v0, type metadata accessor for ImageContent.ContentType);
  }
  return v6 & 1;
}

uint64_t type metadata accessor for ImageContent(uint64_t a1)
{
  return sub_22A64AC50(a1, qword_255AFFD78);
}

uint64_t sub_22A65D0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageContent.ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A65D134()
{
  return sub_22A6354A0(&qword_255AFFD10, type metadata accessor for ImageContent.ContentType, (uint64_t)&protocol conformance descriptor for ImageContent.ContentType);
}

uint64_t sub_22A65D160()
{
  return sub_22A6354A0(&qword_255AFFD18, type metadata accessor for ImageContent, (uint64_t)&protocol conformance descriptor for ImageContent);
}

uint64_t sub_22A65D18C(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(&qword_255AFFA28, type metadata accessor for ImageContent, (uint64_t)&protocol conformance descriptor for ImageContent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ImageContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for ImageContent.ContentType(0);
    v5 = (char *)&loc_22A65D228 + 4 * byte_22A6A98C8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ImageContent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for ImageContent.ContentType(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      result = swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_4;
    case 2:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      v3 = sub_22A6A5B8C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ImageContent()
{
  char *v0;

  type metadata accessor for ImageContent.ContentType(0);
  v0 = (char *)sub_22A65D474 + 4 * byte_22A6A98D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A65D474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v3;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 25) = *(_OWORD *)(v1 + 25);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v1 + 41);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v5 = *(int *)(v2 + 20);
  v6 = v0 + v5;
  v7 = v1 + v5;
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  return v0;
}

__n128 assignWithCopy for ImageContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  __n128 *v5;
  __n128 *v6;
  __n128 result;

  if (a1 != a2)
  {
    sub_22A633AE8(a1, type metadata accessor for ImageContent.ContentType);
    type metadata accessor for ImageContent.ContentType(0);
    v3 = (char *)&loc_22A65D600 + 4 * byte_22A6A98D4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = *(int *)(a3 + 20);
  v5 = (__n128 *)(a1 + v4);
  v6 = (__n128 *)(a2 + v4);
  result = *v6;
  v5[1].n128_u8[0] = v6[1].n128_u8[0];
  *v5 = result;
  return result;
}

char *initializeWithTake for ImageContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = type metadata accessor for ImageContent.ContentType(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v7 = sub_22A6A5B8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  return a1;
}

char *assignWithTake for ImageContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, type metadata accessor for ImageContent.ContentType);
    v6 = type metadata accessor for ImageContent.ContentType(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v7 = sub_22A6A5B8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A65D8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for ImageContent.ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 <= 2)
    return 0;
  else
    return v9 ^ 0xFF;
}

uint64_t storeEnumTagSinglePayload for ImageContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A65D94C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ImageContent.ContentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = ~(_BYTE)a2;
  return result;
}

uint64_t sub_22A65D9C8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ImageContent.ContentType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ImageContent.ContentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22A65DA8C + 4 * byte_22A6A98D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ImageContent.ContentType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      result = swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_4;
    case 2:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      v3 = sub_22A6A5B8C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ImageContent.ContentType()
{
  char *v0;

  v0 = (char *)sub_22A65DCA0 + 4 * byte_22A6A98E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A65DCA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 25) = *(_OWORD *)(v1 + 25);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v1 + 41);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ImageContent.ContentType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22A633AE8(result, type metadata accessor for ImageContent.ContentType);
    v2 = (char *)&loc_22A65DE04 + 4 * byte_22A6A98E4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for ImageContent.ContentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = sub_22A6A5B8C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ImageContent.ContentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, type metadata accessor for ImageContent.ContentType);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = sub_22A6A5B8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22A65E050()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22A6A5B8C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22A65E0D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFFE58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22A65E114()
{
  uint64_t v0;
  uint64_t inited;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A97F0;
  *(_QWORD *)(inited + 32) = 0x6874646977;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x746867696568;
  *(_QWORD *)(inited + 96) = 0xE600000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x586C616974696E69;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x596C616974696E69;
  *(_QWORD *)(inited + 208) = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 256) = 0x6172466C61746F74;
  *(_QWORD *)(inited + 264) = 0xEB0000000073656DLL;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A65E29C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A65E114();
  *a1 = result;
  return result;
}

unint64_t sub_22A65E2C0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65E2E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65E2E4()
{
  unint64_t result;

  result = qword_255AFFE88;
  if (!qword_255AFFE88)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset.ImageType, &type metadata for RenderAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_255AFFE88);
  }
  return result;
}

unint64_t sub_22A65E328(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65E34C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65E34C()
{
  unint64_t result;

  result = qword_255AFFE90;
  if (!qword_255AFFE90)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset.ImageType, &type metadata for RenderAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_255AFFE90);
  }
  return result;
}

double static RenderNode<>.ring(identifier:valueRange:definedRange:width:radius:color:baseColor:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>, float a12@<S3>, float a13@<S4>, float a14@<S5>)
{
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v28 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a8, a1, v28);
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v30 = a8 + v29[9];
  *(float *)v30 = a9;
  *(float *)(v30 + 4) = a10;
  *(float *)(v30 + 8) = a11;
  *(float *)(v30 + 12) = a12;
  *(float *)(v30 + 16) = a13;
  *(float *)(v30 + 20) = a14;
  *(_QWORD *)(v30 + 24) = a2;
  *(_QWORD *)(v30 + 32) = a3;
  *(_BYTE *)(v30 + 40) = a4;
  *(_QWORD *)(v30 + 44) = a5;
  *(_QWORD *)(v30 + 52) = a6;
  *(_BYTE *)(v30 + 60) = a7;
  *(_BYTE *)(v30 + 61) = 0;
  *(_BYTE *)(a8 + v29[10]) = 0;
  v31 = (_QWORD *)(a8 + v29[11]);
  *v31 = 0;
  v31[1] = 0;
  *(_QWORD *)((char *)v31 + 14) = 0;
  v32 = a8 + v29[12];
  *(_QWORD *)v32 = 0;
  *(_WORD *)(v32 + 12) = 0;
  *(_DWORD *)(v32 + 8) = 0;
  v33 = a8 + v29[13];
  *(_QWORD *)v33 = 0x3F0000003F000000;
  *(_BYTE *)(v33 + 8) = 0;
  v34 = a8 + v29[14];
  *(_QWORD *)&result = 1065353216;
  *(_OWORD *)v34 = xmmword_22A6A77B0;
  *(_QWORD *)(v34 + 16) = 0;
  *(_BYTE *)(v34 + 24) = 0;
  v36 = a8 + v29[15];
  *(_QWORD *)v36 = 1065353216;
  *(_BYTE *)(v36 + 8) = 0;
  v37 = a8 + v29[16];
  *(_QWORD *)v37 = 0;
  *(_QWORD *)(v37 + 8) = 0;
  *(_BYTE *)(v37 + 16) = 2;
  *(_DWORD *)(a8 + v29[17]) = 0;
  v38 = (_QWORD *)(a8 + v29[18]);
  *v38 = 0;
  v38[1] = 0;
  return result;
}

__n128 RenderNode<>.withValueRange(_:)@<Q0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v8 = v3 + *(int *)(v7 + 36);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v8 + 32);
  v11 = *(_BYTE *)(v8 + 40);
  v12 = *(_QWORD *)(v8 + 44);
  v13 = *(_QWORD *)(v8 + 52);
  v14 = *(_BYTE *)(v8 + 60);
  v15 = *(_BYTE *)(v8 + 61);
  v18 = *(__n128 *)(v8 + 8);
  sub_22A65EA54(v3, a1);
  v16 = a1 + *(int *)(v7 + 36);
  *(float *)v16 = a2;
  *(float *)(v16 + 4) = a3;
  result = v18;
  *(__n128 *)(v16 + 8) = v18;
  *(_QWORD *)(v16 + 24) = v9;
  *(_QWORD *)(v16 + 32) = v10;
  *(_BYTE *)(v16 + 40) = v11;
  *(_QWORD *)(v16 + 44) = v12;
  *(_QWORD *)(v16 + 52) = v13;
  *(_BYTE *)(v16 + 60) = v14;
  *(_BYTE *)(v16 + 61) = v15;
  return result;
}

uint64_t RenderNode<>.withDefinedRange(_:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v8 = v3 + *(int *)(v7 + 36);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v8 + 32);
  v11 = *(_BYTE *)(v8 + 40);
  v12 = *(_QWORD *)(v8 + 44);
  v13 = *(_QWORD *)(v8 + 52);
  v14 = *(_BYTE *)(v8 + 60);
  v15 = *(_BYTE *)(v8 + 61);
  v16 = *(_QWORD *)v8;
  v17 = *(_QWORD *)(v8 + 16);
  result = sub_22A65EA54(v3, a1);
  v19 = a1 + *(int *)(v7 + 36);
  *(_QWORD *)v19 = v16;
  *(float *)(v19 + 8) = a2;
  *(float *)(v19 + 12) = a3;
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v9;
  *(_QWORD *)(v19 + 32) = v10;
  *(_BYTE *)(v19 + 40) = v11;
  *(_QWORD *)(v19 + 44) = v12;
  *(_QWORD *)(v19 + 52) = v13;
  *(_BYTE *)(v19 + 60) = v14;
  *(_BYTE *)(v19 + 61) = v15;
  return result;
}

__n128 RenderNode<>.withWidth(_:)@<Q0>(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __n128 result;
  __n128 v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v6 = v2 + *(int *)(v5 + 36);
  v7 = *(_DWORD *)(v6 + 20);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v6 + 32);
  v10 = *(_BYTE *)(v6 + 40);
  v11 = *(_QWORD *)(v6 + 44);
  v12 = *(_QWORD *)(v6 + 52);
  v13 = *(_BYTE *)(v6 + 60);
  v14 = *(_BYTE *)(v6 + 61);
  v17 = *(__n128 *)v6;
  sub_22A65EA54(v2, a1);
  v15 = a1 + *(int *)(v5 + 36);
  result = v17;
  *(__n128 *)v15 = v17;
  *(float *)(v15 + 16) = a2;
  *(_DWORD *)(v15 + 20) = v7;
  *(_QWORD *)(v15 + 24) = v8;
  *(_QWORD *)(v15 + 32) = v9;
  *(_BYTE *)(v15 + 40) = v10;
  *(_QWORD *)(v15 + 44) = v11;
  *(_QWORD *)(v15 + 52) = v12;
  *(_BYTE *)(v15 + 60) = v13;
  *(_BYTE *)(v15 + 61) = v14;
  return result;
}

__n128 RenderNode<>.withRadius(_:)@<Q0>(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __n128 result;
  __n128 v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v6 = v2 + *(int *)(v5 + 36);
  v7 = *(_DWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v6 + 32);
  v10 = *(_BYTE *)(v6 + 40);
  v11 = *(_QWORD *)(v6 + 44);
  v12 = *(_QWORD *)(v6 + 52);
  v13 = *(_BYTE *)(v6 + 60);
  v14 = *(_BYTE *)(v6 + 61);
  v17 = *(__n128 *)v6;
  sub_22A65EA54(v2, a1);
  v15 = a1 + *(int *)(v5 + 36);
  result = v17;
  *(__n128 *)v15 = v17;
  *(_DWORD *)(v15 + 16) = v7;
  *(float *)(v15 + 20) = a2;
  *(_QWORD *)(v15 + 24) = v8;
  *(_QWORD *)(v15 + 32) = v9;
  *(_BYTE *)(v15 + 40) = v10;
  *(_QWORD *)(v15 + 44) = v11;
  *(_QWORD *)(v15 + 52) = v12;
  *(_BYTE *)(v15 + 60) = v13;
  *(_BYTE *)(v15 + 61) = v14;
  return result;
}

__n128 RenderNode<>.withColor(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v10 = v4 + *(int *)(v9 + 36);
  v11 = *(_QWORD *)(v10 + 44);
  v12 = *(_QWORD *)(v10 + 52);
  v13 = *(_BYTE *)(v10 + 60);
  v14 = *(_BYTE *)(v10 + 61);
  v18 = *(__n128 *)v10;
  v15 = *(_QWORD *)(v10 + 16);
  sub_22A65EA54(v4, a4);
  v16 = a4 + *(int *)(v9 + 36);
  result = v18;
  *(__n128 *)v16 = v18;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a1;
  *(_QWORD *)(v16 + 32) = a2;
  *(_BYTE *)(v16 + 40) = a3;
  *(_QWORD *)(v16 + 44) = v11;
  *(_QWORD *)(v16 + 52) = v12;
  *(_BYTE *)(v16 + 60) = v13;
  *(_BYTE *)(v16 + 61) = v14;
  return result;
}

__n128 RenderNode<>.withBaseColor(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  __n128 *v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v10 = (__n128 *)(v4 + *(int *)(v9 + 36));
  v11 = v10[1].n128_u64[1];
  v12 = v10[2].n128_u64[0];
  v13 = v10[2].n128_u8[8];
  v14 = v10[3].n128_u8[13];
  v18 = *v10;
  v15 = v10[1].n128_u64[0];
  sub_22A65EA54(v4, a4);
  v16 = a4 + *(int *)(v9 + 36);
  result = v18;
  *(__n128 *)v16 = v18;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v11;
  *(_QWORD *)(v16 + 32) = v12;
  *(_BYTE *)(v16 + 40) = v13;
  *(_QWORD *)(v16 + 44) = a1;
  *(_QWORD *)(v16 + 52) = a2;
  *(_BYTE *)(v16 + 60) = a3;
  *(_BYTE *)(v16 + 61) = v14;
  return result;
}

__n128 RenderNode<>.withCap(_:)@<Q0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  __n128 result;
  __n128 v16;

  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v6 = v2 + *(int *)(v5 + 36);
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  v9 = *(_BYTE *)(v6 + 40);
  v10 = *(_QWORD *)(v6 + 44);
  v11 = *(_QWORD *)(v6 + 52);
  v12 = *(_BYTE *)(v6 + 60);
  v16 = *(__n128 *)v6;
  v13 = *(_QWORD *)(v6 + 16);
  sub_22A65EA54(v2, a2);
  v14 = a2 + *(int *)(v5 + 36);
  result = v16;
  *(__n128 *)v14 = v16;
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v7;
  *(_QWORD *)(v14 + 32) = v8;
  *(_BYTE *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 44) = v10;
  *(_QWORD *)(v14 + 52) = v11;
  *(_BYTE *)(v14 + 60) = v12;
  *(_BYTE *)(v14 + 61) = v4;
  return result;
}

uint64_t sub_22A65EA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static AirPlayConnectionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AirPlayConnectionError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AirPlayConnectionError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A65EB20()
{
  unint64_t result;

  result = qword_255AFFE98;
  if (!qword_255AFFE98)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayConnectionError, &type metadata for AirPlayConnectionError);
    atomic_store(result, (unint64_t *)&qword_255AFFE98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirPlayConnectionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22A65EBB0 + 4 * byte_22A6A9AB5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22A65EBE4 + 4 * byte_22A6A9AB0[v4]))();
}

uint64_t sub_22A65EBE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A65EBEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A65EBF4);
  return result;
}

uint64_t sub_22A65EC00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A65EC08);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22A65EC0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A65EC14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayConnectionError()
{
  return &type metadata for AirPlayConnectionError;
}

unint64_t sub_22A65EC30()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A74C0;
  *(_QWORD *)(inited + 32) = 7368564;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x7468676972;
  *(_QWORD *)(inited + 96) = 0xE500000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x6D6F74746F62;
  *(_QWORD *)(inited + 152) = 0xE600000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 1952867692;
  *(_QWORD *)(inited + 208) = 0xE400000000000000;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A65ED5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A65EC30();
  *a1 = result;
  return result;
}

unint64_t sub_22A65ED88(uint64_t a1)
{
  unint64_t result;

  result = sub_22A65EDAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A65EDAC()
{
  unint64_t result;

  result = qword_255AFFEC8;
  if (!qword_255AFFEC8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Insets, &type metadata for Insets);
    atomic_store(result, (unint64_t *)&qword_255AFFEC8);
  }
  return result;
}

BOOL static AirPlayOverlayDisplayTreeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AirPlayOverlayDisplayTreeError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AirPlayOverlayDisplayTreeError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A65EE74()
{
  unint64_t result;

  result = qword_255AFFED0;
  if (!qword_255AFFED0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayDisplayTreeError, &type metadata for AirPlayOverlayDisplayTreeError);
    atomic_store(result, (unint64_t *)&qword_255AFFED0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayDisplayTreeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22A65EF04 + 4 * byte_22A6A9BC5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22A65EF38 + 4 * byte_22A6A9BC0[v4]))();
}

uint64_t sub_22A65EF38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A65EF40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A65EF48);
  return result;
}

uint64_t sub_22A65EF54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A65EF5CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22A65EF60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A65EF68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayDisplayTreeError()
{
  return &type metadata for AirPlayOverlayDisplayTreeError;
}

void sub_22A65EF84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v7 = (void *)sub_22A6A5D60();
  v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);

  if (v8)
  {
    v9 = v1[11];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 16));
    v10 = v1[2];
    v11 = (void *)v1[3];
    v12 = *(os_unfair_lock_s **)(v9 + 16);
    sub_22A65F700(v10, v11);
    os_unfair_lock_unlock(v12);
    if (v10 >> 62 == 1)
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v13 = swift_allocObject();
      swift_weakInit();
      sub_22A661518(a1, (uint64_t)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
      v14 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v13;
      sub_22A661674((uint64_t)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14);
      swift_retain();
      sub_22A681118((uint64_t)sub_22A6616BC, v15);
      swift_release();
      swift_release();

    }
    else
    {
      sub_22A65F774(v10, v11);
      v16 = __swift_project_boxed_opaque_existential_1(v1 + 6, v1[9]);
      v17 = *v16;
      v18 = *(_QWORD *)(*v16 + 40);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
      sub_22A6A01F0(a1, v17, 0, 0);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
    }
  }
}

void sub_22A65F1D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = (void *)sub_22A6A5D60();
  v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  if (v6)
  {
    v7 = v0[11];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
    v8 = v0[3];
    v9 = v0[2];
    v10 = v0[4];
    v11 = v0[5];
    v12 = *(os_unfair_lock_s **)(v7 + 16);
    sub_22A65F700(v9, (void *)v8);
    os_unfair_lock_unlock(v12);
    if (v9 >> 62 == 2 && v9 == 0x8000000000000000 && !(v10 | v8 | v11))
    {
      v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v14 = objc_msgSend(v13, sel_bundleIdentifier);

      if (v14)
      {
        sub_22A6A5D84();

        v15 = sub_22A6A5DCC();
        swift_bridgeObjectRelease();
        v16 = v15 + 32;
      }
      else
      {
        v16 = 0;
      }
      v17 = objc_msgSend((id)objc_opt_self(), sel_isInternal_, v16);
      swift_unknownObjectRelease();
      if (v17)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
        v18 = v0[2];
        v19 = (void *)v0[3];
        v0[2] = 0x8000000000000008;
        v0[3] = 0;
        v0[4] = 0;
        v0[5] = 0;
        sub_22A65F774(v18, v19);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
        v20 = sub_22A6A5EF8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
        v21 = (_QWORD *)swift_allocObject();
        v21[2] = 0;
        v21[3] = 0;
        v21[4] = v0;
        swift_retain();
        sub_22A6939BC((uint64_t)v3, (uint64_t)&unk_255B00010, (uint64_t)v21);
        swift_release();
      }
    }
    else
    {
      sub_22A65F774(v9, (void *)v8);
    }
  }
}

uint64_t sub_22A65F478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  *(_QWORD *)(v1 + 88) = v5;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = type metadata accessor for RemoteInspectorNodeRegistry();
  swift_allocObject();
  v9 = sub_22A69DED8((uint64_t)v4);
  *(_QWORD *)(v1 + 72) = v8;
  *(_QWORD *)(v1 + 80) = &off_24F471470;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 16) = 0x8000000000000000;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  return v1;
}

_QWORD *sub_22A65F580()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;

  v1 = v0;
  if (qword_255AFE878 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD170, 0x74696E696564, 0xE600000000000000);
  v3 = v0[2];
  if (v3 >> 62 == 2)
  {
    v8 = v0[3];
    if (v0[4] | v8 | v0[5])
      v9 = 0;
    else
      v9 = v3 == 0x8000000000000000;
    if (v9)
      v7 = 0x8000000000000000;
    else
      v7 = 0x8000000000000008;
  }
  else
  {
    if (v3 >> 62 == 1)
      v3 &= 0x3FFFFFFFFFFFFFFFuLL;
    v4 = (id)v3;
    objc_msgSend(v4, sel_cancel);

    v5 = v1[2];
    v6 = (void *)v1[3];
    v1[2] = 0x8000000000000000;
    v1[3] = 0;
    v1[4] = 0;
    v1[5] = 0;
    sub_22A65F774(v5, v6);
    v7 = v1[2];
    v8 = v1[3];
  }
  sub_22A65F774(v7, (void *)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 6));
  swift_release();
  sub_22A62EA00(v1[12]);
  sub_22A62EA00(v1[14]);
  return v1;
}

uint64_t sub_22A65F6C0()
{
  sub_22A65F580();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteInspectorCoordinator()
{
  return objc_opt_self();
}

unint64_t sub_22A65F700(unint64_t result, void *a2)
{
  id v3;
  id v4;

  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  v3 = (id)result;
  v4 = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRetain();
}

unint64_t destroy for RemoteInspectorCoordinator.State(uint64_t a1)
{
  return sub_22A65F774(*(_QWORD *)a1, *(void **)(a1 + 8));
}

unint64_t sub_22A65F774(unint64_t result, void *a2)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

unint64_t *initializeWithCopy for RemoteInspectorCoordinator.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_22A65F700(*a2, v4);
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

unint64_t *assignWithCopy for RemoteInspectorCoordinator.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_22A65F700(*a2, v4);
  v7 = *a1;
  v8 = (void *)a1[1];
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_22A65F774(v7, v8);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for RemoteInspectorCoordinator.State(uint64_t a1, _OWORD *a2)
{
  unint64_t v3;
  void *v4;
  __int128 v5;

  v3 = *(_QWORD *)a1;
  v4 = *(void **)(a1 + 8);
  v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_22A65F774(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInspectorCoordinator.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RemoteInspectorCoordinator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_22A65F988(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_22A65F9A4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_22A65F9B4(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    *result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInspectorCoordinator.State()
{
  return &type metadata for RemoteInspectorCoordinator.State;
}

unint64_t sub_22A65F9F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  id v17;
  _QWORD v19[3];
  id v20;
  char *v21;
  _QWORD v22[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = v1[11];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  v8 = v1[2];
  v7 = (void *)v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = *(os_unfair_lock_s **)(v6 + 16);
  sub_22A65F700(v8, v7);
  os_unfair_lock_unlock(v11);
  if (v8 >> 62 != 1)
    return sub_22A65F774(v8, v7);
  v19[2] = v3;
  v20 = (id)(v8 & 0x3FFFFFFFFFFFFFFFLL);
  sub_22A628A98((uint64_t)(v1 + 6), (uint64_t)v22);
  v12 = __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v7;
  v13[3] = v9;
  v13[4] = v10;
  v14 = *v12;
  v15 = *(_QWORD *)(v14 + 40);
  v16 = *(os_unfair_lock_s **)(v15 + 16);
  v17 = v7;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v16);
  sub_22A6A01F0(a1, v14, (uint64_t)sub_22A661728, (uint64_t)v13);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_22A65FE30(uint64_t a1)
{
  _QWORD v2[6];
  _BYTE v3[48];

  sub_22A661784(a1, (uint64_t)v2);
  sub_22A661784(a1, (uint64_t)v3);
  __asm { BR              X10 }
}

uint64_t sub_22A65FE90()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  swift_unknownObjectRetain();
  v2 = objc_msgSend(v1, sel_DOMAgent);
  v3 = objc_msgSend(v2, sel_dispatcher);

  objc_msgSend(v3, sel_childNodeInsertedWithParentNodeId_previousNodeId_node_, v6, v7, v5);
  swift_unknownObjectRelease();
  return sub_22A6617FC(v0);
}

uint64_t sub_22A660258(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;

  if (qword_255AFE878 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD170, 0xD000000000000016, 0x800000022A6AD250);
  v3 = objc_msgSend(a1, sel_DOMAgent);
  v4 = objc_msgSend(v3, sel_dispatcher);

  objc_msgSend(v4, sel_documentUpdated);
  return swift_unknownObjectRelease();
}

id sub_22A660338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t aBlock;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;

  v1 = v0;
  if (qword_255AFE878 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD170, 0xD000000000000023, 0x800000022A6AD200);
  v3 = objc_allocWithZone((Class)APKRemoteInspector);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithName_, v4);

  v6 = objc_msgSend(v5, sel_DOMAgent);
  objc_msgSend(v6, sel_setDelegate_, v1);

  v7 = objc_msgSend(v5, sel_CSSAgent);
  objc_msgSend(v7, sel_setDelegate_, v1);

  v8 = objc_msgSend(v5, sel_pageAgent);
  objc_msgSend(v8, sel_setDelegate_, v1);

  v9 = objc_msgSend(v5, sel_networkAgent);
  objc_msgSend(v9, sel_setDelegate_, v1);

  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_defaultCenter);
  v12 = APKRemoteInspectorConnected();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_mainQueue);
  v15 = swift_allocObject();
  swift_weakInit();
  v27 = sub_22A6614E0;
  v28 = v15;
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_22A66083C;
  v26 = &block_descriptor_4;
  v16 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v11, sel_addObserverForName_object_queue_usingBlock_, v12, 0, v14, v16);
  _Block_release(v16);

  v17 = objc_msgSend(v10, sel_defaultCenter);
  v18 = APKRemoteInspectorDisconnected();
  v19 = objc_msgSend(v13, sel_mainQueue);
  v20 = swift_allocObject();
  swift_weakInit();
  v27 = sub_22A661500;
  v28 = v20;
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_22A66083C;
  v26 = &block_descriptor_18;
  v21 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_addObserverForName_object_queue_usingBlock_, v18, 0, v19, v21);
  _Block_release(v21);

  return v5;
}

uint64_t sub_22A66071C()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  id v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = (_QWORD *)result;
    v2 = *(_QWORD *)(result + 88);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
    v3 = v1[2];
    v4 = (void *)v1[3];
    v5 = v1[4];
    v6 = v1[5];
    v7 = *(os_unfair_lock_s **)(v2 + 16);
    sub_22A65F700(v3, v4);
    os_unfair_lock_unlock(v7);
    if (v3 >> 62)
    {
      sub_22A65F774(v3, v4);
    }
    else
    {
      v8 = (_QWORD *)swift_allocObject();
      v8[2] = v4;
      v8[3] = v5;
      v8[4] = v6;
      v9 = v4;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      sub_22A681118((uint64_t)sub_22A66150C, (uint64_t)v8);
      swift_release();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22A66083C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_22A6A5AF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_22A6A5AE4();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22A6608E0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_22A660928(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22A65F9F8(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_22A660984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  return swift_task_switch();
}

uint64_t sub_22A66099C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v5[2];

  v1 = v0[7];
  strcpy((char *)v5, "AirPlayKit (");
  BYTE5(v5[1]) = 0;
  HIWORD(v5[1]) = -5120;
  v0[5] = v1;
  sub_22A6A5DC0();
  sub_22A6A5E08();
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  v2 = v5[1];
  v0[8] = v5[0];
  v0[9] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  type metadata accessor for RunLoopWorkerThread();
  *v3 = v0;
  v3[1] = sub_22A660A90;
  return sub_22A6A61BC();
}

uint64_t sub_22A660A90()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A660AE4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = (void *)v0[6];
  v0[11] = v1;
  objc_msgSend(v1, sel_setQualityOfService_, 25);
  v2 = v1;
  v3 = (void *)sub_22A6A5D60();
  objc_msgSend(v2, sel_setName_, v3);

  if (qword_255AFE878 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  __swift_project_value_buffer(v4, (uint64_t)qword_255B08F48);
  v5 = sub_22A6A5C94();
  v6 = sub_22A6A5F70();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_22A61E000, v5, v6, "Configuring RunLoopWorkerThread...", v7, 2u);
    MEMORY[0x22E2DF3F8](v7, -1, -1);
  }
  v9 = v0[8];
  v8 = v0[9];
  v10 = v0[7];

  v11 = (_QWORD *)swift_allocObject();
  v0[12] = v11;
  v11[2] = v10;
  v11[3] = v9;
  v11[4] = v8;
  swift_retain();
  v12 = (_QWORD *)swift_task_alloc();
  v0[13] = v12;
  v12[2] = v2;
  v12[3] = sub_22A661240;
  v12[4] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[14] = v13;
  *v13 = v0;
  v13[1] = sub_22A660CD4;
  return sub_22A6A61EC();
}

uint64_t sub_22A660CD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    *(_OWORD *)(v2 + 128) = *(_OWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 144) = *(_QWORD *)(v2 + 32);
  }
  return swift_task_switch();
}

void sub_22A660D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(void **)(v0 + 128);
  v5 = *(void **)(v0 + 88);
  v6 = *(_QWORD **)(v0 + 56);
  v7 = v6[11];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  sub_22A660ED8(v5, v4, v1, v2, v6);
  if (v3)
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  }
  else
  {
    v8 = *(void **)(v0 + 128);
    v9 = *(void **)(v0 + 88);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A660E20()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  swift_task_dealloc();

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A660E64()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_22A660E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62E6B0;
  v3[7] = v2;
  return swift_task_switch();
}

unint64_t sub_22A660ED8(void *a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  id v29;
  os_log_type_t type;
  NSObject *log;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  if (qword_255AFE878 != -1)
    swift_once();
  v10 = sub_22A6A5CAC();
  __swift_project_value_buffer(v10, (uint64_t)qword_255B08F48);
  v11 = a1;
  v12 = a2;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v13 = v11;
  v14 = v12;
  v15 = sub_22A6A5C94();
  v16 = sub_22A6A5F70();
  v34 = v13;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v35 = v33;
    *(_DWORD *)v17 = 136315394;
    v18 = v13;
    log = v15;
    v19 = objc_msgSend(v18, sel_description);
    type = v16;
    v20 = sub_22A6A5D84();
    v22 = v21;

    sub_22A62D174(v20, v22, &v35);
    sub_22A6A6018();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v23 = v14;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v24 = sub_22A6A5DC0();
    sub_22A62D174(v24, v25, &v35);
    sub_22A6A6018();
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, log, type, "Activated on %s with %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v33, -1, -1);
    MEMORY[0x22E2DF3F8](v17, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

  }
  v26 = a5[2];
  v27 = (void *)a5[3];
  a5[2] = v34;
  a5[3] = v14;
  a5[4] = a3;
  a5[5] = a4;
  v28 = v34;
  v29 = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return sub_22A65F774(v26, v27);
}

uint64_t sub_22A6611F0()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroyTm_1(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

id sub_22A661240@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;
  uint64_t v4;
  uint64_t v5;

  result = sub_22A660338();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

uint64_t sub_22A661278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00018);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  sub_22A681118((uint64_t)sub_22A661488, v11);
  return swift_release();
}

uint64_t sub_22A661374(uint64_t a1)
{
  uint64_t *v1;

  return sub_22A661278(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_22A661380(void (*a1)(__int128 *__return_ptr))
{
  __int128 v2;

  a1(&v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00018);
  return sub_22A6A5ED4();
}

uint64_t sub_22A661410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00018);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22A661488()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00018);
  return sub_22A661380(*(void (**)(__int128 *__return_ptr))(v0 + 16));
}

uint64_t sub_22A6614BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A6614E0()
{
  return sub_22A66071C();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_22A661500()
{
  return sub_22A6608E0();
}

uint64_t sub_22A66150C()
{
  uint64_t v0;

  return sub_22A660258(*(void **)(v0 + 16));
}

uint64_t sub_22A661518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A661560()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = v4 + v1[11];
  sub_22A628B08(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 20) << 32), *(_BYTE *)(v6 + 21));
  sub_22A628B4C(*(_QWORD *)(v4 + v1[12]), *(unsigned int *)(v4 + v1[12] + 8) | ((unint64_t)*(unsigned __int8 *)(v4 + v1[12] + 12) << 32), *(_BYTE *)(v4 + v1[12] + 13));
  sub_22A628B90(*(_QWORD *)(v4 + v1[13]), *(_BYTE *)(v4 + v1[13] + 8));
  sub_22A628B08(*(_QWORD *)(v4 + v1[14]), *(_QWORD *)(v4 + v1[14] + 8), *(_QWORD *)(v4 + v1[14] + 16), *(_BYTE *)(v4 + v1[14] + 24));
  sub_22A628B90(*(_QWORD *)(v4 + v1[15]), *(_BYTE *)(v4 + v1[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_22A661674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6616BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0) - 8) + 80);
  return sub_22A660928(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_22A661728(uint64_t a1)
{
  sub_22A65FE30(a1);
}

uint64_t sub_22A661744(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A661784(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

unint64_t sub_22A6617C0()
{
  unint64_t result;

  result = qword_255B00020;
  if (!qword_255B00020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B00020);
  }
  return result;
}

uint64_t sub_22A6617FC(uint64_t a1)
{
  sub_22A63E344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t destroy for RemoteInspectorCoordinator.ActivationContext(id *a1)
{

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *_s10AirPlayKit26RemoteInspectorCoordinatorC17ActivationContextVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteInspectorCoordinator.ActivationContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RemoteInspectorCoordinator.ActivationContext(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInspectorCoordinator.ActivationContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInspectorCoordinator.ActivationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInspectorCoordinator.ActivationContext()
{
  return &type metadata for RemoteInspectorCoordinator.ActivationContext;
}

uint64_t sub_22A661A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  _QWORD v7[6];
  uint64_t v8;
  uint64_t v9;

  sub_22A6A60B4();
  swift_bridgeObjectRelease();
  strcpy((char *)v7, "Transaction (");
  HIWORD(v7[1]) = -4864;
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RenderTransactionAction() + 20));
  sub_22A6A61B0();
  sub_22A6A5E08();
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  v8 = v7[0];
  v9 = v7[1];
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = 0;
    v4 = v1 + 32;
    do
    {
      sub_22A628A98(v4, (uint64_t)v6);
      v7[0] = v3;
      sub_22A628A38(v6, (uint64_t)&v7[1]);
      sub_22A661B94(v3, (uint64_t)&v7[1]);
      sub_22A629860((uint64_t)v7, &qword_255B01070);
      v4 += 40;
      ++v3;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  return v8;
}

uint64_t sub_22A661B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_22A628A98(a2, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00028);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *((_QWORD *)&v11 + 1);
    v5 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    sub_22A629860((uint64_t)&v10, &qword_255B00030);
    v7 = 0;
  }
  *(_QWORD *)&v10 = a1;
  sub_22A6A61B0();
  sub_22A6A5E08();
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  sub_22A628A98(a2, (uint64_t)&v10);
  if (!v7)
  {
    sub_22A628A98((uint64_t)&v10, (uint64_t)v9);
    sub_22A6A5DC0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  sub_22A6A5E08();
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  return swift_bridgeObjectRelease();
}

void sub_22A661D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22A6A5C40();
  MEMORY[0x24BDAC7A8](v7);
  ContainerContent.Child.id.getter();
  sub_22A6297D8(a3, (uint64_t)v6);
  v8 = (char *)sub_22A661E00 + 4 * byte_22A6A9D80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A661E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(v2 - 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v2 - 56) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 88));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  return sub_22A69D9B0(v2 - 88, v1);
}

unint64_t sub_22A661EF8()
{
  unint64_t result;

  result = qword_255B01550;
  if (!qword_255B01550)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A8BC8, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255B01550);
  }
  return result;
}

unint64_t sub_22A661F3C()
{
  unint64_t result;

  result = qword_255B00040;
  if (!qword_255B00040)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A7998, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255B00040);
  }
  return result;
}

uint64_t sub_22A661F80(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22E2DF32C](&unk_22A6A85E0, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22A661FF0()
{
  unint64_t result;

  result = qword_255B01560;
  if (!qword_255B01560)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AB7C0, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255B01560);
  }
  return result;
}

unint64_t sub_22A662034()
{
  unint64_t result;

  result = qword_255B00050;
  if (!qword_255B00050)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AAB70, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255B00050);
  }
  return result;
}

unint64_t sub_22A662078()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255B00058;
  if (!qword_255B00058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255B01570);
    v2[0] = sub_22A662104((unint64_t *)&unk_255B01580, (uint64_t)&unk_22A6A9454);
    v2[1] = sub_22A662104(qword_255B00060, (uint64_t)&unk_22A6ABE68);
    result = MEMORY[0x22E2DF32C](&unk_22A6A85E0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255B00058);
  }
  return result;
}

uint64_t sub_22A662104(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ImageContent(255);
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22A662144()
{
  unint64_t result;

  result = qword_255B00D00[0];
  if (!qword_255B00D00[0])
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6A87EC, &type metadata for ContainerContent);
    atomic_store(result, qword_255B00D00);
  }
  return result;
}

unint64_t sub_22A662188()
{
  unint64_t result;

  result = qword_255B015A0;
  if (!qword_255B015A0)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AA32C, &type metadata for ContainerContent);
    atomic_store(result, (unint64_t *)&qword_255B015A0);
  }
  return result;
}

uint64_t RenderNode.withContentSemantic(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  _QWORD *KeyPath;
  char v6;

  v3 = *a1;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v6 = v3;
  sub_22A6777E8(KeyPath, (uint64_t)&v6, a2);
  return swift_release();
}

uint64_t RenderNode.withPosition(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  _QWORD *KeyPath;
  _QWORD v11[2];
  int v12;
  char v13;
  char v14;

  v8 = a3 >> 40;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v11[0] = a1;
  v11[1] = a2;
  v13 = BYTE4(a3);
  v12 = a3;
  v14 = v8;
  sub_22A6777E8(KeyPath, (uint64_t)v11, a4);
  return swift_release();
}

uint64_t RenderNode.withSize(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  _QWORD *KeyPath;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v6 = a2 >> 40;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v9 = a1;
  v11 = BYTE4(a2);
  v10 = a2;
  v12 = v6;
  sub_22A6777E8(KeyPath, (uint64_t)&v9, a3);
  return swift_release();
}

uint64_t RenderNode.withCenterAnchor(_:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_22A662404(a1, a2, a3);
}

uint64_t RenderNode.withTransform(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *KeyPath;
  _QWORD v12[3];
  char v13;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v12[0] = a1;
  v12[1] = a2;
  v12[2] = a3;
  v13 = a4;
  sub_22A6777E8(KeyPath, (uint64_t)v12, a5);
  return swift_release();
}

uint64_t RenderNode.withOpacity(_:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_22A662404(a1, a2, a3);
}

uint64_t sub_22A662404@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  _QWORD *KeyPath;
  uint64_t v8;
  char v9;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = a1;
  v9 = a2;
  sub_22A6777E8(KeyPath, (uint64_t)&v8, a3);
  return swift_release();
}

uint64_t RenderNode.withBackgroundColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *KeyPath;
  _QWORD v10[2];
  char v11;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  v11 = a3;
  sub_22A6777E8(KeyPath, (uint64_t)v10, a4);
  return swift_release();
}

uint64_t RenderNode.withCornerRadius(_:)@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  _QWORD *KeyPath;
  float v6;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v6 = a2;
  sub_22A6777E8(KeyPath, (uint64_t)&v6, a1);
  return swift_release();
}

uint64_t RenderNode.withInsets(_:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>, float a4@<S2>, float a5@<S3>)
{
  _QWORD *KeyPath;
  _DWORD v12[4];

  KeyPath = (_QWORD *)swift_getKeyPath();
  *(float *)v12 = a2;
  *(float *)&v12[1] = a3;
  *(float *)&v12[2] = a4;
  *(float *)&v12[3] = a5;
  sub_22A6777E8(KeyPath, (uint64_t)v12, a1);
  return swift_release();
}

uint64_t sub_22A6625FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  _QWORD v29[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_22A6A6000();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v25 - v14;
  v26 = v1;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v6, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
    *(_QWORD *)(inited + 32) = 7955819;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    v18 = v26;
    v29[0] = sub_22A644918(*(_BYTE *)(v26 + *(int *)(a1 + 36)));
    v29[1] = v19;
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 0x65756C6176;
    *(_QWORD *)(inited + 96) = 0xE500000000000000;
    swift_getAssociatedConformanceWitness();
    sub_22A6A6180();
    v20 = sub_22A630814(inited);
    v21 = sub_22A6A5C40();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, v18, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
    v28 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
    sub_22A6A6084();
    MEMORY[0x22E2DF32C](&unk_22A6A9F78, a1);
    v16 = sub_22A6A2880(0x656C797473, 0xE500000000000000, v23, (uint64_t)v29);
    sub_22A629860((uint64_t)v29, &qword_255AFEFA8);
    sub_22A629860(v23, (uint64_t *)&unk_255B01510);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  }
  return v16;
}

uint64_t sub_22A66292C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22A6A5C40();
  sub_22A6298A0();
  sub_22A6A5D3C();
  sub_22A644918(*(_BYTE *)(v2 + *(int *)(a2 + 36)));
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A5D3C();
}

uint64_t sub_22A6629BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if ((sub_22A6A5C28() & 1) == 0)
    return 0;
  v9 = *(int *)(type metadata accessor for RenderStyleAction(0, a3, a4, v8) + 36);
  v10 = *(_BYTE *)(a2 + v9);
  v11 = sub_22A644918(*(_BYTE *)(a1 + v9));
  v13 = v12;
  if (v11 == sub_22A644918(v10) && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_22A6A61D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
  }
  return sub_22A6A5D54() & 1;
}

uint64_t sub_22A662AB0(uint64_t a1)
{
  _BYTE v3[72];

  sub_22A6A6258();
  sub_22A66292C((uint64_t)v3, a1);
  return sub_22A6A62A0();
}

uint64_t sub_22A662B00(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22A6A6258();
  sub_22A66292C((uint64_t)v4, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A662B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A6629BC(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A662B4C()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t sub_22A662B5C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2DF32C](&unk_22A6A9F38);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for RenderStyleAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenderStyleAction);
}

uint64_t sub_22A662B94()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A662B9C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_22A662C2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v10 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v11 + v8 + 1) & (unint64_t)~v11) + *(_QWORD *)(v10 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v8 + v11 + 1) & ~v11, ((unint64_t)a2 + v8 + v11 + 1) & ~v11, v9);
  }
  return a1;
}

uint64_t sub_22A662D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_22A662D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (_BYTE *)(v8 + a1);
  v10 = (_BYTE *)(v8 + a2);
  *v9 = *v10;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 16))((unint64_t)&v9[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (unint64_t)&v10[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_22A662E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (_BYTE *)(v8 + a1);
  v10 = (_BYTE *)(v8 + a2);
  *v9 = *v10;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((unint64_t)&v9[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (unint64_t)&v10[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_22A662EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (_BYTE *)(v8 + a1);
  v10 = (_BYTE *)(v8 + a2);
  *v9 = *v10;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((unint64_t)&v9[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (unint64_t)&v10[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_22A662F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = (_BYTE *)(v8 + a1);
  v10 = (_BYTE *)(v8 + a2);
  *v9 = *v10;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((unint64_t)&v9[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (unint64_t)&v10[*(unsigned __int8 *)(v11 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_22A662FC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unsigned __int8 *v24;
  unsigned int v25;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0xE7)
    v13 = 231;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v13)
    goto LABEL_27;
  v17 = ((v16 + v15 + 1) & ~v16) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if (v8 == v13)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v14);
      v24 = (unsigned __int8 *)(v15 + a1);
      if (v12 > 0xE7)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((unint64_t)&v24[v16 + 1] & ~v16, v11, v9);
      v25 = *v24;
      if (v25 >= 0x19)
        return v25 - 24;
      else
        return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v16 + v15 + 1) & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v13 + v22 + 1;
}

void sub_22A663180(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0xE7)
    v11 = 231;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v12 + *(_QWORD *)(v8 + 64) + 1) & ~v12) + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, ((v12 + *(_QWORD *)(v8 + 64) + 1) & ~v12) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, ((v12 + *(_QWORD *)(v8 + 64) + 1) & ~v12) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

uint64_t AirPlayOverlayAdaptor.__allocating_init(connectionProvider:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B000F0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0xC000000000000000;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 72) = 0;
  swift_unknownObjectWeakInit();
  sub_22A628A38(a1, v2 + 16);
  return v2;
}

uint64_t AirPlayOverlayAdaptor.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x22E2DF4AC](v0 + 64);
}

uint64_t AirPlayOverlayAdaptor.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*AirPlayOverlayAdaptor.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x22E2DF4AC](v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = v4;
  v3[4] = v5;
  return sub_22A66354C;
}

uint64_t AirPlayOverlayAdaptor.init(connectionProvider:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B000F0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0xC000000000000000;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 72) = 0;
  swift_unknownObjectWeakInit();
  sub_22A628A38(a1, v1 + 16);
  return v1;
}

uint64_t sub_22A6635B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 144) = a4;
  return swift_task_switch();
}

uint64_t sub_22A6635D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;

  if (qword_255AFE868 != -1)
    swift_once();
  v1 = sub_22A6A5CAC();
  *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v1, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000061, 0x800000022A6AD270, 0xD00000000000001FLL, 0x800000022A6AD340);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 160) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = Strong;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v4;
  *v4 = v0;
  v4[1] = sub_22A6636FC;
  v4[6] = v3;
  return swift_task_switch();
}

uint64_t sub_22A6636FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A663770()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(uint64_t, void *, uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void **)(v0 + 176);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_22A6A5C94();
  v5 = sub_22A6A5F64();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 176);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v22 = v8;
    *(_QWORD *)(v0 + 128) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v10 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 136) = sub_22A62D174(v10, v11, &v22);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v4, v5, "Failed to connect: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v8, -1, -1);
    MEMORY[0x22E2DF3F8](v7, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 176);

  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 64;
    swift_beginAccess();
    v16 = MEMORY[0x22E2DF4AC](v15);
    v17 = *(void **)(v0 + 176);
    if (v16)
    {
      v18 = *(_QWORD *)(v14 + 72);
      ObjectType = swift_getObjectType();
      *(_QWORD *)(v0 + 40) = type metadata accessor for AirPlayOverlayAdaptor();
      *(_QWORD *)(v0 + 48) = &protocol witness table for AirPlayOverlayAdaptor;
      *(_QWORD *)(v0 + 16) = v14;
      v20 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v18 + 16);
      swift_retain();
      v20(v0 + 16, v17, ObjectType, v18);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    }

    swift_release();
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AirPlayOverlayAdaptor.connect()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch();
}

uint64_t sub_22A6639F8()
{
  _QWORD *v0;
  uint64_t *v1;
  os_unfair_lock_s *v2;
  uint64_t *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v1 = (uint64_t *)v0[6];
  v2 = (os_unfair_lock_s *)v1[7];
  v0[7] = v2;
  v3 = (uint64_t *)&v2[4];
  v4 = v2 + 12;
  os_unfair_lock_lock(v2 + 12);
  sub_22A663F64(v3, v1, &v14);
  os_unfair_lock_unlock(v4);
  v5 = v14;
  v0[8] = v14;
  if (qword_255AFE868 != -1)
    swift_once();
  v6 = (_QWORD *)v0[6];
  v7 = sub_22A6A5CAC();
  __swift_project_value_buffer(v7, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000061, 0x800000022A6AD270, 0x287463656E6E6F63, 0xE900000000000029);
  v8 = v6 + 2;
  v9 = v6[5];
  v10 = v6[6];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v10 + 8) + *(_QWORD *)(v10 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  v0[9] = v11;
  *v11 = v0;
  v11[1] = sub_22A663C34;
  return v13(v5, v9, v10);
}

uint64_t sub_22A663C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v3;
  v5[10] = a1;
  v5[11] = v2;
  swift_task_dealloc();
  if (!v2)
    v5[12] = a2;
  return swift_task_switch();
}

void sub_22A663CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  uint64_t ObjectType;
  uint64_t v8;
  void (*v9)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = (os_unfair_lock_s *)(v3 + 48);
  v6 = (_QWORD *)(v3 + 16);
  ObjectType = swift_getObjectType();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v1 + 16);
  swift_retain();
  v9(sub_22A664FD0, v8, ObjectType, v1);
  swift_release();
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v1 + 40);
  swift_retain();
  v11(sub_22A664FD8, v10, ObjectType, v1);
  swift_release();
  v12 = swift_task_alloc();
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v1;
  *(_QWORD *)(v12 + 32) = v4;
  os_unfair_lock_lock(v5);
  sub_22A6649F4(v6, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(uint64_t **)(v12 + 32));
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v0 + 56) + 48));
  if (!v13)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A663E44()
{
  uint64_t v0;
  void *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char *v7;
  char v9[9];

  swift_unknownObjectRelease();
  v1 = *(void **)(v0 + 88);
  v2 = *(os_unfair_lock_s **)(v0 + 56);
  v3 = v2 + 12;
  v4 = (uint64_t)&v2[4];
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v1;
  os_unfair_lock_lock(v3);
  sub_22A664D2C(v4, *(void **)(v5 + 16));
  os_unfair_lock_unlock(v3);
  swift_task_dealloc();
  swift_getErrorValue();
  sub_22A655280(*(_QWORD *)(v0 + 24), v9);
  v6 = v9[0];
  if (v9[0] == 7)
  {
    swift_willThrow();
  }
  else
  {
    sub_22A664F68();
    swift_allocError();
    *v7 = v6;
    swift_willThrow();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22A663F64(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(_QWORD *, uint64_t, uint64_t);
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _QWORD v29[5];
  uint64_t v30;

  v5 = (void *)*a1;
  v6 = (void *)a1[1];
  v7 = a1 + 2;
  v8 = a1[2];
  v9 = a1[3];
  v10 = v9 >> 62;
  if ((v9 >> 62) - 1 >= 2)
  {
    if ((_DWORD)v10)
    {
      sub_22A664F68();
      swift_allocError();
      *v26 = 2;
      swift_willThrow();
      return;
    }
    v17 = a1[2];
    v18 = (void *)a1[1];
    v19 = a1[3];
    sub_22A665774(*a1, v18, v17, v9);
    swift_unknownObjectRetain();
    v20 = v18;
    if ((objc_msgSend(v5, sel_isExternalPlaybackActive) & 1) != 0)
    {
      sub_22A665800((uint64_t)v5, v18, v17, v19);
      swift_unknownObjectRelease();

      *a1 = (uint64_t)v5;
      a1[1] = (uint64_t)v18;
      *((_OWORD *)a1 + 1) = xmmword_22A6A9FE0;
      *a3 = v5;
      swift_unknownObjectRetain();
      return;
    }
    sub_22A664F68();
    swift_allocError();
    *v27 = 4;
    swift_willThrow();

    swift_unknownObjectRelease();
    v13 = (uint64_t)v5;
    v14 = v18;
    v15 = v17;
    v16 = v19;
  }
  else
  {
    v30 = *a2;
    sub_22A665774((uint64_t)v5, v6, v8, v9);
    swift_unknownObjectRetain();
    v11 = v6;
    if (objc_msgSend(v5, sel_isExternalPlaybackActive))
    {

      swift_unknownObjectRelease();
      sub_22A664F68();
      swift_allocError();
      *v12 = 1;
      swift_willThrow();
      v13 = (uint64_t)v5;
      v14 = v6;
      v15 = v8;
      v16 = v9;
    }
    else
    {
      v21 = v30;
      sub_22A665800((uint64_t)v5, v6, v8, v9);
      *a1 = (uint64_t)v5;
      a1[1] = (uint64_t)v6;
      *v7 = 0;
      v7[1] = 0;
      if ((_DWORD)v10 == 2)
      {
        swift_beginAccess();
        if (MEMORY[0x22E2DF4AC](a2 + 8))
        {
          v22 = a2[9];
          ObjectType = swift_getObjectType();
          v29[3] = v21;
          v29[4] = &protocol witness table for AirPlayOverlayAdaptor;
          v29[0] = a2;
          v24 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v22 + 24);
          swift_retain();
          v24(v29, ObjectType, v22);
          swift_unknownObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        }
      }
      sub_22A664F68();
      swift_allocError();
      *v25 = 3;
      swift_willThrow();
      v13 = (uint64_t)v5;
      v14 = v6;
      v15 = v8;
      v16 = v9;
    }
  }
  sub_22A665800(v13, v14, v15, v16);
}

void sub_22A664268(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22A6642BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  _QWORD v11[18];

  swift_unknownObjectRelease();
  if (qword_255AFE868 != -1)
    swift_once();
  v6 = sub_22A6A5CAC();
  __swift_project_value_buffer(v6, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000061, 0x800000022A6AD270, 0x2865736F6C436E6FLL, 0xE900000000000029);
  *v1 = v3;
  v1[1] = v5;
  *v4 = 0;
  v4[1] = 0;
  swift_beginAccess();
  result = MEMORY[0x22E2DF4AC](v0 + 64);
  if (result)
  {
    v8 = *(_QWORD *)(v0 + 72);
    ObjectType = swift_getObjectType();
    v11[3] = v2;
    v11[4] = &protocol witness table for AirPlayOverlayAdaptor;
    v11[0] = v0;
    v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 24);
    swift_retain();
    v10(v11, ObjectType, v8);
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return result;
}

uint64_t AirPlayOverlayAdaptor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_22A664FE0(v0 + 64);
  return v0;
}

uint64_t AirPlayOverlayAdaptor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_22A664FE0(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t AirPlayOverlayAdaptor.activate(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(os_unfair_lock_s **)(v1 + 56);
  v7 = v6 + 4;
  v8 = v6 + 12;
  os_unfair_lock_lock(v6 + 12);
  sub_22A664548(v7, a1);
  os_unfair_lock_unlock(v8);
  v9 = sub_22A6A5EF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  sub_22A62B460((uint64_t)v5, (uint64_t)&unk_255B00118, (uint64_t)v11);
  return swift_release();
}

_QWORD *sub_22A664548(_QWORD *result, void *a2)
{
  unint64_t v2;
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v2 = result[3];
  if (v2 >> 62 == 3)
  {
    v3 = result;
    if (v2 == 0xC000000000000000 && (result[1] | result[2] | *result) == 0)
    {
      v6 = result + 2;
      if (qword_255AFE868 != -1)
        swift_once();
      v7 = sub_22A6A5CAC();
      __swift_project_value_buffer(v7, (uint64_t)qword_255B08F18);
      sub_22A629A38(0xD000000000000061, 0x800000022A6AD270, 0x6574617669746361, 0xEF293A6874697728);
      v8 = swift_allocObject();
      swift_weakInit();
      v11[4] = sub_22A665A88;
      v11[5] = v8;
      v11[0] = MEMORY[0x24BDAC760];
      v11[1] = 1107296256;
      v11[2] = sub_22A6360EC;
      v11[3] = &block_descriptor_5;
      v9 = _Block_copy(v11);
      swift_release();
      v10 = objc_msgSend(a2, sel_beginObserveringExternalPlaybackChangeWithChangeHandler_, v9);
      _Block_release(v9);
      *v3 = a2;
      v3[1] = v10;
      *v6 = 0;
      v3[3] = 0;
      return (_QWORD *)swift_unknownObjectRetain();
    }
  }
  return result;
}

uint64_t sub_22A6646E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = sub_22A6A5EF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
    v5 = swift_allocObject();
    swift_weakInit();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v5;
    sub_22A62B460((uint64_t)v2, (uint64_t)&unk_255B001F0, (uint64_t)v6);
    swift_release();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall AirPlayOverlayAdaptor.deactivate()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 56);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 12;
  os_unfair_lock_lock(v1 + 12);
  sub_22A664844(v2);
  os_unfair_lock_unlock(v3);
}

void sub_22A664844(uint64_t a1)
{
  uint64_t v2;

  sub_22A665800(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  if (qword_255AFE868 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F18);
  sub_22A629A38(0xD000000000000061, 0x800000022A6AD270, 0x6176697463616564, 0xEC00000029286574);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xC000000000000000;
}

uint64_t sub_22A664904()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22A665B0C();
    return swift_release();
  }
  return result;
}

uint64_t sub_22A664970()
{
  uint64_t result;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(os_unfair_lock_s **)(result + 56);
    v2 = (uint64_t)&v1[4];
    v3 = v1 + 12;
    os_unfair_lock_lock(v1 + 12);
    sub_22A664268(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

_QWORD *sub_22A6649F4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(_QWORD *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25[3];
  void *v26;

  if (result[3] >> 62 == 1)
  {
    v7 = result;
    v8 = *a4;
    v9 = *result;
    v26 = (void *)result[1];
    if (qword_255AFE868 != -1)
      swift_once();
    v10 = sub_22A6A5CAC();
    __swift_project_value_buffer(v10, (uint64_t)qword_255B08F18);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v11 = sub_22A6A5C94();
    v12 = sub_22A6A5F70();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)v13 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFA70);
      v14 = sub_22A6A5DC0();
      sub_22A62D174(v14, v15, v25);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2082;
      v24[1] = a3;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00200);
      v16 = sub_22A6A5DC0();
      v24[0] = sub_22A62D174(v16, v17, v25);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_22A61E000, v11, v12, "Updating state to connected to player %{public}s with %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v23, -1, -1);
      MEMORY[0x22E2DF3F8](v13, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }

    v18 = v26;
    *v7 = v9;
    v7[1] = v18;
    v7[2] = a2;
    v7[3] = a3 | 0x8000000000000000;
    swift_beginAccess();
    if (MEMORY[0x22E2DF4AC](a4 + 8))
    {
      v19 = a4[9];
      ObjectType = swift_getObjectType();
      v24[3] = v8;
      v24[4] = &protocol witness table for AirPlayOverlayAdaptor;
      v24[0] = a4;
      v21 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 8);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v22 = v18;
      swift_retain();
      v21(v24, ObjectType, v19);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    else
    {
      return (_QWORD *)swift_unknownObjectRetain();
    }
  }
  return result;
}

void sub_22A664D2C(uint64_t a1, void *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;

  if (*(_QWORD *)(a1 + 24) >> 62 == 1)
  {
    v5 = *(void **)a1;
    v4 = *(void **)(a1 + 8);
    if (qword_255AFE868 != -1)
      swift_once();
    v6 = sub_22A6A5CAC();
    __swift_project_value_buffer(v6, (uint64_t)qword_255B08F18);
    v7 = a2;
    v8 = a2;
    v9 = sub_22A6A5C94();
    v10 = sub_22A6A5F64();
    if (os_log_type_enabled(v9, v10))
    {
      v17 = v5;
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18 = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
      v14 = sub_22A6A5DC0();
      sub_22A62D174(v14, v15, &v18);
      sub_22A6A6018();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22A61E000, v9, v10, "Unable to broker a connection on external playback changed: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v12, -1, -1);
      v16 = v11;
      v5 = v17;
      MEMORY[0x22E2DF3F8](v16, -1, -1);
    }
    else
    {

    }
    if (objc_msgSend(v5, sel_isExternalPlaybackActive))
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)(a1 + 24) = 0;
    }
    else
    {
      swift_unknownObjectRelease();

      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)(a1 + 24) = 0xC000000000000000;
    }
  }
}

unint64_t sub_22A664F68()
{
  unint64_t result;

  result = qword_255B00100;
  if (!qword_255B00100)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayAdaptorError, &type metadata for AirPlayOverlayAdaptorError);
    atomic_store(result, (unint64_t *)&qword_255B00100);
  }
  return result;
}

uint64_t sub_22A664FAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A664FD0()
{
  return sub_22A664904();
}

uint64_t sub_22A664FD8()
{
  return sub_22A664970();
}

uint64_t sub_22A664FE0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_22A665008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62ED7C;
  v3[18] = v2;
  return swift_task_switch();
}

uint64_t sub_22A665068()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x22E2DF4AC](v1 + 64);
}

uint64_t sub_22A6650B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_22A665114(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x22E2DF4AC](v4 + 64);
  v6 = *(_QWORD *)(v4 + 72);
  v3[3] = v5;
  v3[4] = v6;
  return sub_22A66354C;
}

void sub_22A665184(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_22A6651F4(void *a1)
{
  return AirPlayOverlayAdaptor.activate(with:)(a1);
}

void sub_22A665214()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 56);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 12;
  os_unfair_lock_lock(v1 + 12);
  sub_22A664844(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A665268()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62ED7C;
  v3[6] = v2;
  return swift_task_switch();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AirPlayOverlayAdaptor.assertConnected()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 56);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 12;
  os_unfair_lock_lock(v1 + 12);
  sub_22A665320(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A665320(uint64_t result)
{
  _BYTE *v1;

  if (*(_QWORD *)(result + 24) >> 62 != 2)
  {
    sub_22A664F68();
    swift_allocError();
    *v1 = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t AirPlayOverlayAdaptor.sendAction(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_22A665398()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, uint64_t, uint64_t);
  _QWORD v9[3];

  v1 = *(os_unfair_lock_s **)(v0[3] + 56);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 12;
  os_unfair_lock_lock(v1 + 12);
  sub_22A665538(v2, v9);
  os_unfair_lock_unlock(v3);
  v4 = v9[1];
  v0[4] = v9[0];
  ObjectType = swift_getObjectType();
  v8 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v4 + 64) + *(_QWORD *)(v4 + 64));
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_22A66546C;
  return v8(v0[2], ObjectType, v4);
}

uint64_t sub_22A66546C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A6654D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A665504()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A665538@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE *v7;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >> 62 == 2)
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = v3 & 0x3FFFFFFFFFFFFFFFLL;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    result = swift_unknownObjectRelease();
    *a2 = v4;
    a2[1] = v5;
  }
  else
  {
    sub_22A664F68();
    swift_allocError();
    *v7 = 3;
    return swift_willThrow();
  }
  return result;
}

void sub_22A6655D0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 56);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 12;
  os_unfair_lock_lock(v1 + 12);
  sub_22A665320(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A66562C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_22A665690@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 64;
  swift_beginAccess();
  result = MEMORY[0x22E2DF4AC](v4);
  v6 = *(_QWORD *)(v3 + 72);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_22A6656E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 72) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for AirPlayOverlayAdaptor()
{
  return objc_opt_self();
}

uint64_t method lookup function for AirPlayOverlayAdaptor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirPlayOverlayAdaptor.__allocating_init(connectionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_22A665774(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  id result;
  id v5;

  if (a4 >> 62 == 2)
  {
    swift_unknownObjectRetain();
    v5 = a2;
    return (id)swift_unknownObjectRetain();
  }
  else if ((a4 >> 62) <= 1)
  {
    swift_unknownObjectRetain();
    return a2;
  }
  return result;
}

void destroy for AirPlayOverlayAdaptor.State(uint64_t a1)
{
  sub_22A665800(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void sub_22A665800(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 62 == 2)
  {
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  else if ((a4 >> 62) <= 1)
  {
    swift_unknownObjectRelease();

  }
}

uint64_t *initializeWithCopy for AirPlayOverlayAdaptor.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_22A665774(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for AirPlayOverlayAdaptor.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_22A665774(*a2, v4, v5, v6);
  v7 = *a1;
  v8 = (void *)a1[1];
  v9 = a1[2];
  v10 = a1[3];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_22A665800(v7, v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for AirPlayOverlayAdaptor.State(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  __int128 v7;

  v3 = *a1;
  v5 = (void *)a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_22A665800(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPlayOverlayAdaptor.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)(a1 + 24) >> 57) >> 5) | (4
                                                           * ((*(_QWORD *)(a1 + 24) >> 57) & 0x18 | *(_QWORD *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayAdaptor.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_22A665A20(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_22A665A3C(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_22A665A4C(_QWORD *result, uint64_t a2)
{
  if (a2 < 3)
  {
    result[3] = result[3] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *result = (a2 - 3);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayAdaptor.State()
{
  return &type metadata for AirPlayOverlayAdaptor.State;
}

uint64_t sub_22A665A88()
{
  return sub_22A6646E4();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_22A665AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A62E6B0;
  v3[18] = v2;
  return swift_task_switch();
}

void sub_22A665B0C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23[4];
  uint64_t v24;
  id v25[4];
  uint64_t v26[5];

  v26[4] = *MEMORY[0x24BDAC8D0];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_22A6A5BB0();
  v25[0] = 0;
  v2 = objc_msgSend(v0, sel_propertyListWithData_options_format_error_, v1, 0, 0, v25);

  v3 = v25[0];
  if (v2)
  {
    sub_22A6A603C();
    swift_unknownObjectRelease();
    if (qword_255AFE868 != -1)
      swift_once();
    v4 = sub_22A6A5CAC();
    __swift_project_value_buffer(v4, (uint64_t)qword_255B08F18);
    sub_22A62E7A4((uint64_t)v26, (uint64_t)v25);
    v5 = sub_22A6A5C94();
    v6 = sub_22A6A5F70();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v24 = v8;
      *(_DWORD *)v7 = 136446210;
      sub_22A62E7A4((uint64_t)v25, (uint64_t)v23);
      v9 = sub_22A6A5DC0();
      v23[0] = sub_22A62D174(v9, v10, &v24);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      _os_log_impl(&dword_22A61E000, v5, v6, "Incoming message: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v8, -1, -1);
      MEMORY[0x22E2DF3F8](v7, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    v11 = v3;
    v12 = (void *)sub_22A6A5B2C();

    swift_willThrow();
    if (qword_255AFE868 != -1)
      swift_once();
    v13 = sub_22A6A5CAC();
    __swift_project_value_buffer(v13, (uint64_t)qword_255B08F18);
    v14 = v12;
    v15 = v12;
    v16 = sub_22A6A5C94();
    v17 = sub_22A6A5F64();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v26[0] = v19;
      *(_DWORD *)v18 = 136446210;
      v25[0] = v12;
      v20 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
      v21 = sub_22A6A5DC0();
      v25[0] = (id)sub_22A62D174(v21, v22, v26);
      sub_22A6A6018();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22A61E000, v16, v17, "Unable to deserialize incoming property list message: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v19, -1, -1);
      MEMORY[0x22E2DF3F8](v18, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t dispatch thunk of AirPlayConnectionProviding.makeAirPlayConnection(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A62ED10;
  return v9(a1, a2, a3);
}

uint64_t sub_22A665F94(uint64_t a1)
{
  return sub_22A665FA8(a1);
}

uint64_t sub_22A665FA8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v36 = MEMORY[0x24BEE4AF8];
  sub_22A6572C0(0, v1, 0);
  v2 = v36;
  result = sub_22A66D650(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v24 = v3 + 80;
  v25 = v1;
  v26 = v5;
  v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    v12 = *(_QWORD *)(v3 + 56) + 72 * v6;
    v13 = *(_QWORD *)(v12 + 8);
    v34 = *(_QWORD *)(v12 + 16);
    v35 = *(_QWORD *)v12;
    v32 = *(_QWORD *)(v12 + 32);
    v33 = *(_QWORD *)(v12 + 24);
    v30 = *(_BYTE *)(v12 + 41);
    v31 = *(_BYTE *)(v12 + 40);
    v14 = *(_QWORD *)(v12 + 56);
    v29 = *(_QWORD *)(v12 + 48);
    v15 = v3;
    v17 = *(_QWORD *)(v36 + 16);
    v16 = *(_QWORD *)(v36 + 24);
    swift_bridgeObjectRetain();
    result = swift_retain();
    if (v17 >= v16 >> 1)
      result = sub_22A6572C0(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v36 + 16) = v17 + 1;
    v18 = v36 + (v17 << 6);
    *(_QWORD *)(v18 + 32) = v35;
    *(_QWORD *)(v18 + 40) = v13;
    *(_QWORD *)(v18 + 48) = v34;
    *(_QWORD *)(v18 + 56) = v33;
    *(_QWORD *)(v18 + 64) = v32;
    *(_BYTE *)(v18 + 72) = v31;
    *(_BYTE *)(v18 + 73) = v30;
    *(_QWORD *)(v18 + 80) = v29;
    *(_QWORD *)(v18 + 88) = v14;
    v9 = 1 << *(_BYTE *)(v15 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v15;
    v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(v24 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22A66621C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_22A666238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 192);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_9;
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_22A632FD0(v3, v4);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(v2 + 56) + 72 * v5;
  v9 = *(_QWORD *)v7;
  v8 = *(_QWORD *)(v7 + 8);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  v12 = *(_QWORD *)(v7 + 32);
  v13 = *(unsigned __int8 *)(v7 + 41);
  v14 = *(_QWORD *)(v7 + 56);
  v19 = *(unsigned __int8 *)(v7 + 40);
  v20 = *(_QWORD *)(v7 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_9:
    v17 = *(_OWORD **)(v0 + 40);
    v17[2] = 0u;
    v17[3] = 0u;
    *v17 = 0u;
    v17[1] = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(uint64_t **)(v0 + 40);
  if (v13)
    v16 = 256;
  else
    v16 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22A62EB10(v9, v8);
  *v15 = v9;
  v15[1] = v8;
  v15[2] = v10;
  v15[3] = v11;
  v15[4] = v12;
  v15[5] = v16 | v19;
  v15[6] = v20;
  v15[7] = v14;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A6663BC(uint64_t a1)
{
  return sub_22A6663E4(a1, &qword_255AFFB78, &qword_255B01100);
}

uint64_t sub_22A6663D0(uint64_t a1)
{
  return sub_22A6663E4(a1, &qword_255B01120, &qword_255B01130);
}

uint64_t sub_22A6663E4(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_22A657180(0, v10, 0);
    v11 = v21;
    v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_22A62F9B8(v12, (uint64_t)v9, a2);
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_22A657180(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v19 = v6;
      v20 = sub_22A66E37C(a3, a2);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
      sub_22A62F9B8((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_22A628A38(&v18, v11 + 40 * v15 + 32);
      sub_22A629860((uint64_t)v9, a2);
      v12 += v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_22A666550(uint64_t a1)
{
  return sub_22A6663E4(a1, &qword_255B01150, &qword_255B01160);
}

uint64_t sub_22A666564(uint64_t a1)
{
  return sub_22A6663E4(a1, &qword_255B01180, &qword_255B01190);
}

uint64_t sub_22A666578(uint64_t a1)
{
  return sub_22A6663E4(a1, &qword_255B011B0, (unint64_t *)&unk_255B011C0);
}

uint64_t sub_22A66658C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  _BYTE v9[40];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_22A6572A4(0, v1, 0);
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_22A628A98(v4, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A6572A4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_22A6572A4(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_22A62981C((uint64_t)v9, v2 + 40 * v6 + 32, (uint64_t *)&unk_255B01090);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22A6666C8(uint64_t a1)
{
  return sub_22A6666E4(a1, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (unint64_t *)&qword_255AFF1B0, (uint64_t)&unk_22A6A7D70);
}

uint64_t sub_22A6666E4(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a4;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_22A657180(0, v11, 0);
    v12 = v24;
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_22A6354E0(v13, (uint64_t)v10, a2);
      v24 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22A657180(v15 > 1, v16 + 1, 1);
        v12 = v24;
      }
      v22 = v7;
      v23 = sub_22A6354A0(a3, a2, v20);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_22A6354E0((uint64_t)v10, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v12 + 16) = v16 + 1;
      sub_22A628A38(&v21, v12 + 40 * v16 + 32);
      sub_22A633AE8((uint64_t)v10, a2);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_22A666854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for ContainerContent.Child();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_22A657354(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_22A6354E0(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_22A657354(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_22A6354A0(&qword_255B00390, (uint64_t (*)(uint64_t))type metadata accessor for ContainerContent.Child, (uint64_t)&unk_22A6AC138);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_22A6354E0((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_22A628A38(&v14, v7 + 40 * v11 + 32);
      sub_22A633AE8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_22A6669CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_22A6A60FC();
    v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_22A6A6240();
      sub_22A6A60E4();
      sub_22A6A6108();
      sub_22A6A6114();
      sub_22A6A60F0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_22A666A70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 320) = a3;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = a2;
  v4 = type metadata accessor for RenderAssetAction();
  *(_QWORD *)(v3 + 160) = v4;
  *(_QWORD *)(v3 + 168) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 176) = swift_task_alloc();
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF18);
  *(_QWORD *)(v3 + 192) = v5;
  *(_QWORD *)(v3 + 200) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc();
  *(_QWORD *)(v3 + 216) = swift_task_alloc();
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00350);
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00358);
  *(_QWORD *)(v3 + 240) = v6;
  *(_QWORD *)(v3 + 248) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  *(_QWORD *)(v3 + 264) = swift_task_alloc();
  *(_QWORD *)(v3 + 272) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A666BB0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 280) = sub_22A62F558(0, *(_QWORD *)(v2 + 16), 0, MEMORY[0x24BEE4AF8]);
  v35 = v2 + 56;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v2 + 56);
  v36 = (unint64_t)(63 - v4) >> 6;
  v37 = v2;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v38)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v38 = i;
      v10 = v9 | (i << 6);
      goto LABEL_23;
    }
    v11 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v36)
      goto LABEL_30;
    v12 = *(_QWORD *)(v35 + 8 * v11);
    v13 = i + 1;
    if (!v12)
    {
      v13 = i + 2;
      if (i + 2 >= v36)
        goto LABEL_30;
      v12 = *(_QWORD *)(v35 + 8 * v13);
      if (!v12)
      {
        v13 = i + 3;
        if (i + 3 >= v36)
          goto LABEL_30;
        v12 = *(_QWORD *)(v35 + 8 * v13);
        if (!v12)
        {
          v13 = i + 4;
          if (i + 4 >= v36)
            goto LABEL_30;
          v12 = *(_QWORD *)(v35 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v12 - 1) & v12;
    v38 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
    v16 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 272);
    v17 = *(_BYTE *)(v0 + 320) & 1;
    v18 = (__int128 *)(*(_QWORD *)(v37 + 48) + (v10 << 6));
    v19 = v18[3];
    v21 = *v18;
    v20 = v18[1];
    *(_OWORD *)(v0 + 48) = v18[2];
    *(_OWORD *)(v0 + 64) = v19;
    *v1 = v21;
    *(_OWORD *)(v0 + 32) = v20;
    v22 = sub_22A6A5EF8();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v15, 1, 1, v22);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = 0;
    v25 = (_QWORD *)(v24 + 16);
    *(_QWORD *)(v24 + 24) = 0;
    v26 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v24 + 32) = *v1;
    *(_OWORD *)(v24 + 48) = v26;
    v27 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v24 + 64) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v24 + 80) = v27;
    *(_BYTE *)(v24 + 96) = v17;
    sub_22A62F9B8(v15, v16, &qword_255AFECC0);
    LODWORD(v16) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22);
    sub_22A63EBF4(v0 + 16);
    sub_22A63EBF4(v0 + 16);
    v28 = *(_QWORD *)(v0 + 264);
    if ((_DWORD)v16 == 1)
    {
      sub_22A629860(*(_QWORD *)(v0 + 264), &qword_255AFECC0);
      if (*v25)
        goto LABEL_25;
    }
    else
    {
      sub_22A6A5EEC();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
      if (*v25)
      {
LABEL_25:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v29 = sub_22A6A5EBC();
        v31 = v30;
        swift_unknownObjectRelease();
        goto LABEL_28;
      }
    }
    v29 = 0;
    v31 = 0;
LABEL_28:
    v32 = **(_QWORD **)(v0 + 144);
    v33 = v31 | v29;
    if (v31 | v29)
    {
      v33 = v0 + 80;
      *(_QWORD *)(v0 + 80) = 0;
      *(_QWORD *)(v0 + 88) = 0;
      *(_QWORD *)(v0 + 96) = v29;
      *(_QWORD *)(v0 + 104) = v31;
    }
    v8 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 112) = 1;
    *(_QWORD *)(v0 + 120) = v33;
    *(_QWORD *)(v0 + 128) = v32;
    swift_task_create();
    swift_release();
    sub_22A629860(v8, &qword_255AFECC0);
    result = sub_22A63EC28(v0 + 16);
  }
  v14 = i + 5;
  if (i + 5 >= v36)
  {
LABEL_30:
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    sub_22A6A5F04();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v34;
    *v34 = v0;
    v34[1] = sub_22A666FAC;
    return sub_22A6A5F10();
  }
  v12 = *(_QWORD *)(v35 + 8 * v14);
  if (v12)
  {
    v13 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v36)
      goto LABEL_30;
    v12 = *(_QWORD *)(v35 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_22A666FAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 296) = *(_QWORD *)(v2 + 280);
  return swift_task_switch();
}

uint64_t sub_22A66701C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 48))(v1, 1, *(_QWORD *)(v0 + 192));
  v3 = *(_QWORD *)(v0 + 296);
  if (v2 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 200);
      v6 = *(_QWORD *)(v0 + 168);
      v7 = *(_QWORD *)(v0 + 296)
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v8 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x24BEE4AF8];
      do
      {
        v11 = *(_QWORD *)(v0 + 208);
        v10 = *(_QWORD *)(v0 + 216);
        v12 = *(_QWORD *)(v0 + 160);
        sub_22A62F9B8(v7, v10, &qword_255AFEF18);
        sub_22A62981C(v10, v11, &qword_255AFEF18);
        v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v12);
        v14 = *(_QWORD *)(v0 + 208);
        if (v13 == 1)
        {
          sub_22A629860(v14, &qword_255AFEF18);
        }
        else
        {
          v16 = *(_QWORD *)(v0 + 176);
          v15 = *(_QWORD *)(v0 + 184);
          sub_22A66DB5C(v14, v15);
          sub_22A66DB5C(v15, v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_22A62F544(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
          v18 = *(_QWORD *)(v9 + 16);
          v17 = *(_QWORD *)(v9 + 24);
          if (v18 >= v17 >> 1)
            v9 = sub_22A62F544(v17 > 1, v18 + 1, 1, v9);
          v19 = *(_QWORD *)(v0 + 176);
          *(_QWORD *)(v9 + 16) = v18 + 1;
          sub_22A66DB5C(v19, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18);
        }
        v7 += v8;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v9 = MEMORY[0x24BEE4AF8];
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
  }
  else
  {
    sub_22A62981C(v1, *(_QWORD *)(v0 + 224), &qword_255AFEF18);
    v21 = *(_QWORD *)(v3 + 16);
    v20 = *(_QWORD *)(v3 + 24);
    v22 = *(_QWORD *)(v0 + 296);
    if (v21 >= v20 >> 1)
      v22 = sub_22A62F558(v20 > 1, v21 + 1, 1, v22);
    *(_QWORD *)(v0 + 304) = v22;
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v22 + 16) = v21 + 1;
    sub_22A62981C(v23, v22+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v21, &qword_255AFEF18);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v25;
    *v25 = v0;
    v25[1] = sub_22A6673E8;
    return sub_22A6A5F10();
  }
}

uint64_t sub_22A667328()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A6673E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 296) = *(_QWORD *)(v2 + 304);
  return swift_task_switch();
}

uint64_t sub_22A667458()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  sub_22A629860(v0 + 152, &qword_255AFECB8);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AirPlayOverlayAssetStore()
{
  return objc_opt_self();
}

uint64_t destroy for RenderAsset()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AirPlayOverlayAssetStore.Asset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AirPlayOverlayAssetStore.Asset(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AirPlayOverlayAssetStore.Asset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPlayOverlayAssetStore.Asset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayAssetStore.Asset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayAssetStore.Asset()
{
  return &type metadata for AirPlayOverlayAssetStore.Asset;
}

uint64_t sub_22A6676F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1[27] = v0;
  v1[28] = type metadata accessor for RenderTransactionAction();
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A66774C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)v0[27];
  v2 = v1[17];
  v3 = v1[18];
  __swift_project_boxed_opaque_existential_1(v1 + 14, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v4 = v0[27];
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_22A66BB48(v5, 0);
  swift_bridgeObjectRelease();
  v7 = sub_22A665FA8((uint64_t)v6);
  swift_release();
  v8 = sub_22A66D79C(v7);
  v0[30] = v8;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_22A66DFAC(v8, v4, 1);
  swift_release();
  v0[20] = v8;
  return swift_task_switch();
}

uint64_t sub_22A667A40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF18);
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v1;
  *(_QWORD *)(v1 + 16) = v0 + 160;
  *(_BYTE *)(v1 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00338);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v2;
  *v2 = v0;
  v2[1] = sub_22A667AFC;
  return sub_22A6A6198();
}

uint64_t sub_22A667AFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A667B68()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 168);
  return swift_task_switch();
}

uint64_t sub_22A667B84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);

  v2 = v0[28];
  v1 = v0[29];
  v3 = sub_22A6666E4(v0[34], (uint64_t (*)(uint64_t))type metadata accessor for RenderAssetAction, &qword_255B00340, (uint64_t)&unk_22A6AA4E8);
  _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v3;
  if (qword_255AFE860 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  v0[35] = __swift_project_value_buffer(v4, (uint64_t)qword_255B08F00);
  swift_bridgeObjectRetain();
  v5 = sub_22A6A5C94();
  v6 = sub_22A6A5F70();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[34];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    v0[26] = *(_QWORD *)(v8 + 16);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v5, v6, "Attemping to send %ld asset actions", v9, 0xCu);
    MEMORY[0x22E2DF3F8](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v11 = v0[28];
  v10 = v0[29];
  v12 = (_QWORD *)v0[27];
  v13 = v12[17];
  v14 = v12[18];
  __swift_project_boxed_opaque_existential_1(v12 + 14, v13);
  v0[15] = v11;
  v0[16] = sub_22A6354A0((unint64_t *)&unk_255B01060, (uint64_t (*)(uint64_t))type metadata accessor for RenderTransactionAction, (uint64_t)&unk_22A6AA6C0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 12);
  sub_22A6354E0(v10, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  v18 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(**(int **)(v14 + 16) + *(_QWORD *)(v14 + 16));
  v16 = (_QWORD *)swift_task_alloc();
  v0[36] = (uint64_t)v16;
  *v16 = v0;
  v16[1] = sub_22A667FE8;
  return v18(v0 + 12, v13, v14);
}

uint64_t sub_22A667D98()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A667DD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 264);
  v2 = v1;
  if (qword_255AFE860 != -1)
    swift_once();
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F00);
  v4 = v1;
  v5 = v1;
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F64();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446210;
    v14 = v9;
    *(_QWORD *)(v0 + 192) = v1;
    v10 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v11 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 184) = sub_22A62D174(v11, v12, &v14);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v6, v7, "Unable to update remote store: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v9, -1, -1);
    MEMORY[0x22E2DF3F8](v8, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A667FE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  return swift_task_switch();
}

uint64_t sub_22A668064()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v1 = sub_22A6A5C94();
  v2 = sub_22A6A5F70();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 272);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    v5 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 200) = v5;
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v1, v2, "Successfully sent %ld asset actions", v4, 0xCu);
    MEMORY[0x22E2DF3F8](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_22A62F9B8(*(_QWORD *)(v0 + 216) + 152, v0 + 56, &qword_255AFECB8);
  v6 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = &off_24F46F4D8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
    sub_22A6354E0(v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v0 + 16, v6, v9);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  else
  {
    sub_22A629860(v0 + 56, &qword_255AFECB8);
  }
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 216);
  swift_retain();
  sub_22A66D8C0(v12, v13);
  swift_release();
  sub_22A633AE8(v11, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A668260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_retain();
  sub_22A66DFAC(v1, v3, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  v4 = *(void **)(v0 + 296);
  v5 = v4;
  if (qword_255AFE860 != -1)
    swift_once();
  v6 = sub_22A6A5CAC();
  __swift_project_value_buffer(v6, (uint64_t)qword_255B08F00);
  v7 = v4;
  v8 = v4;
  v9 = sub_22A6A5C94();
  v10 = sub_22A6A5F64();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446210;
    v17 = v12;
    *(_QWORD *)(v0 + 192) = v4;
    v13 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v14 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 184) = sub_22A62D174(v14, v15, &v17);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v9, v10, "Unable to update remote store: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v12, -1, -1);
    MEMORY[0x22E2DF3F8](v11, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22A6684C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  id v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 41);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v23[0] = *(_QWORD *)a1;
  v4 = v23[0];
  v23[1] = v3;
  v23[2] = v5;
  v23[3] = v6;
  v23[4] = v7;
  v24 = v8;
  v25 = v9;
  v28 = 2;
  v26 = v10;
  v27 = v11;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a2 + 192) = 0x8000000000000000;
  sub_22A6A1B2C((uint64_t)v23, v4, v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 192) = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v14 = (void *)sub_22A6A5D60();
  v15 = objc_msgSend(v13, sel_BOOLForKey_, v14);

  if (v15)
  {
    if (qword_255AFE860 != -1)
      swift_once();
    v16 = sub_22A6A5CAC();
    __swift_project_value_buffer(v16, (uint64_t)qword_255B08F00);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v17 = sub_22A6A5C94();
    v18 = sub_22A6A5F70();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v19 = 136315138;
      v29 = v22;
      swift_bridgeObjectRetain();
      swift_retain();
      v20 = sub_22A6A5DC0();
      sub_22A62D174(v20, v21, &v29);
      sub_22A6A6018();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22A61E000, v17, v18, "Sent %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v22, -1, -1);
      MEMORY[0x22E2DF3F8](v19, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_22A668808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_22A668820()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_22A665FA8(v1);
  swift_bridgeObjectRelease();
  v3 = sub_22A66D79C(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_22A66DDE8(v4, v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16) <= *(_QWORD *)(v3 + 16) >> 3)
  {
    v17 = v3;
    sub_22A66C140(v5);
    if (*(_QWORD *)(v3 + 16))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!*(_QWORD *)(sub_22A66C2D4(v5, v3) + 16))
    goto LABEL_8;
LABEL_3:
  if (qword_255AFE860 != -1)
    swift_once();
  v6 = sub_22A6A5CAC();
  __swift_project_value_buffer(v6, (uint64_t)qword_255B08F00);
  swift_bridgeObjectRetain();
  v7 = sub_22A6A5C94();
  v8 = sub_22A6A5F64();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17 = v16;
    *(_DWORD *)v9 = 136446210;
    sub_22A66DBA0();
    swift_bridgeObjectRetain();
    v10 = sub_22A6A5F28();
    v12 = v11;
    swift_bridgeObjectRelease();
    v0[6] = sub_22A62D174(v10, v12, &v17);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22A61E000, v7, v8, "There are already registered asset(s): %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v16, -1, -1);
    MEMORY[0x22E2DF3F8](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

LABEL_11:
  v13 = v0[8];
  swift_retain();
  sub_22A66DFAC(v5, v13, 0);
  swift_release();
  swift_release();
  v14 = (_QWORD *)swift_task_alloc();
  v0[9] = v14;
  *v14 = v0;
  v14[1] = sub_22A668B1C;
  return sub_22A6676F0();
}

uint64_t sub_22A668B1C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A668B64(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  BOOL v21;
  float32x4_t v22;
  uint64_t v23;
  unint64_t v24;
  char v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[72];
  _BYTE v33[32];
  float32x4_t v34;
  uint64_t v35;
  char v36;
  int v37;
  char v38;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v2 = a2;
  sub_22A6A6258();
  v4 = *a1;
  v5 = a1[1];
  sub_22A66DBE4((uint64_t)(a1 + 2), (uint64_t)v33);
  v30 = v5;
  v31 = v4;
  sub_22A6A5DE4();
  sub_22A66DBE4((uint64_t)v33, (uint64_t)&v37);
  if ((v38 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  v6 = *((unsigned __int8 *)a1 + 41);
  v7 = *((_BYTE *)a1 + 41) ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v8 = sub_22A6A62A0();
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = v8 & ~v9;
  v11 = v2 + 56;
  if (((*(_QWORD *)(v2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return 0;
  v29 = v7;
  v12 = ~v9;
  if (v6)
    v13 = 0xEA00000000004745;
  else
    v13 = 0xE900000000000067;
  v28 = v13;
  while (1)
  {
    v14 = v2;
    v15 = *(_QWORD *)(v2 + 48) + (v10 << 6);
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    v18 = *(_QWORD *)(v15 + 32);
    v19 = *(_BYTE *)(v15 + 40);
    v20 = *(unsigned __int8 *)(v15 + 41);
    v21 = *(_QWORD *)v15 == v31 && *(_QWORD *)(v15 + 8) == v30;
    if (!v21 && (sub_22A6A61D4() & 1) == 0)
      goto LABEL_12;
    if ((v19 & 1) != 0)
    {
      sub_22A66DBE4((uint64_t)v33, (uint64_t)v32);
      if (v32[24] != 1)
        goto LABEL_12;
    }
    else
    {
      sub_22A66DBE4((uint64_t)v33, (uint64_t)&v34);
      if ((v36 & 1) != 0)
        goto LABEL_12;
      v22.i64[0] = v17;
      v22.i64[1] = v16;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v34, v22)), 0xFuLL))) & 1) == 0 || v18 != v35)
        goto LABEL_12;
    }
    v23 = v20 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
    v24 = v20 ? 0xEA00000000004745 : 0xE900000000000067;
    if (v23 == v29 && v24 == v28)
      break;
    v26 = sub_22A6A61D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      return 1;
LABEL_12:
    v10 = (v10 + 1) & v12;
    v2 = v14;
    if (((*(_QWORD *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_22A668E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = type metadata accessor for RenderAssetAction();
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A668EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27[2];

  v1 = *(_QWORD *)(v0 + 168) + 192;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_7;
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_22A632FD0(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    sub_22A62EACC();
    v9 = (void *)swift_allocError();
    *v10 = 1;
    swift_willThrow();
    if (qword_255AFE860 != -1)
      swift_once();
    v11 = sub_22A6A5CAC();
    __swift_project_value_buffer(v11, (uint64_t)qword_255B08F00);
    swift_bridgeObjectRetain();
    v12 = v9;
    swift_bridgeObjectRetain();
    v13 = v9;
    v14 = sub_22A6A5C94();
    v15 = sub_22A6A5F64();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 160);
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 152);
      v19 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v27[0] = v26;
      *(_DWORD *)v19 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 136) = sub_22A62D174(v18, v17, v27);
      sub_22A6A6018();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2082;
      *(_QWORD *)(v0 + 128) = v9;
      v20 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
      v21 = sub_22A6A5DC0();
      *(_QWORD *)(v0 + 144) = sub_22A62D174(v21, v22, v27);
      sub_22A6A6018();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22A61E000, v14, v15, "Unable to unregister %{public}s: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v26, -1, -1);
      MEMORY[0x22E2DF3F8](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v2 + 56) + 72 * v5;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)v7;
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v7 + 8);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v7 + 56);
  v8 = *(unsigned __int8 *)(v7 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8)
  {
    v24 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    swift_beginAccess();
    sub_22A6A07F8(v24, v23, (uint64_t)v27);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22A62EB10(v27[0], v27[1]);
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_13:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_22A6692F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[22];
  swift_bridgeObjectRetain();
  _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = v2 + *(int *)(v4 + 20);
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = v1;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  return swift_task_switch();
}

uint64_t sub_22A669380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t *, uint64_t, uint64_t);

  v2 = v0[22];
  v1 = v0[23];
  v3 = (_QWORD *)v0[21];
  v4 = v3[17];
  v5 = v3[18];
  __swift_project_boxed_opaque_existential_1(v3 + 14, v4);
  v0[5] = v2;
  v0[6] = sub_22A6354A0(&qword_255B00340, (uint64_t (*)(uint64_t))type metadata accessor for RenderAssetAction, (uint64_t)&unk_22A6AA4E8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_22A6354E0(v1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderAssetAction);
  v9 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(**(int **)(v5 + 16) + *(_QWORD *)(v5 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[27] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_22A669458;
  return v9(v0 + 2, v4, v5);
}

uint64_t sub_22A669458()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_22A6694CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 152);
  swift_beginAccess();
  sub_22A6A07F8(v3, v2, (uint64_t)v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  sub_22A62EB10(v5[0], v5[1]);
  sub_22A633AE8(v1, (uint64_t (*)(_QWORD))type metadata accessor for RenderAssetAction);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A669598()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease();
  swift_release();
  sub_22A633AE8(v1, (uint64_t (*)(_QWORD))type metadata accessor for RenderAssetAction);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v2 = *(void **)(v0 + 224);
  if (qword_255AFE860 != -1)
    swift_once();
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F00);
  swift_bridgeObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F64();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 160);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 152);
    v11 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17 = v16;
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 136) = sub_22A62D174(v10, v9, &v17);
    sub_22A6A6018();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v2;
    v12 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v13 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 144) = sub_22A62D174(v13, v14, &v17);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v6, v7, "Unable to unregister %{public}s: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v16, -1, -1);
    MEMORY[0x22E2DF3F8](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A669830(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED7C;
  v5[7] = a1;
  v5[8] = v4;
  return swift_task_switch();
}

uint64_t sub_22A669894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  return sub_22A668E98(a1, a2);
}

uint64_t sub_22A6698F4(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 48) = *v1;
  return swift_task_switch();
}

uint64_t sub_22A669910()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (unint64_t *)*(unsigned __int8 *)(v0 + 56);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_22A66BB48(v2, v1);
  swift_bridgeObjectRelease();
  v4 = sub_22A665FA8((uint64_t)v3);
  swift_release();
  v5 = sub_22A66D79C(v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_22A6699BC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = *v0;
  return swift_task_switch();
}

uint64_t sub_22A6699D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_22A665FA8(v1);
  swift_bridgeObjectRelease();
  v3 = sub_22A66D79C(v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_22A669A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_22A62ED7C;
  v9[7] = a3;
  v9[8] = v8;
  v9[5] = a1;
  v9[6] = a2;
  return swift_task_switch();
}

uint64_t sub_22A669AD4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A62ED7C;
  return sub_22A6676F0();
}

uint64_t sub_22A669B1C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = *v0;
  return swift_task_switch();
}

uint64_t sub_22A669B34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 192) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A669B88(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  BOOL v22;
  float32x4_t v23;
  uint64_t v24;
  unint64_t v25;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  __int128 v29;
  __int128 v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[72];
  _BYTE v47[32];
  float32x4_t v48;
  uint64_t v49;
  char v50;
  int v51;
  char v52;

  v5 = *v2;
  sub_22A6A6258();
  v6 = *a2;
  v7 = a2[1];
  sub_22A66DBE4((uint64_t)(a2 + 2), (uint64_t)v47);
  swift_bridgeObjectRetain();
  v44 = v6;
  v8 = v7;
  sub_22A6A5DE4();
  sub_22A66DBE4((uint64_t)v47, (uint64_t)&v51);
  v41 = a1;
  v39 = v2;
  if ((v52 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  v40 = a2;
  v9 = *((unsigned __int8 *)a2 + 41);
  if (*((_BYTE *)a2 + 41))
    v10 = 0x504A2F6F65646976;
  else
    v10 = 0x6E702F6567616D69;
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v11 = sub_22A6A62A0();
  v12 = -1 << *(_BYTE *)(v5 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v5 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = *v39;
    *v39 = 0x8000000000000000;
    sub_22A63EBF4((uint64_t)v40);
    sub_22A66A870((uint64_t)v40, v13, isUniquelyReferenced_nonNull_native);
    *v39 = v45;
    swift_bridgeObjectRelease();
    v29 = v40[1];
    *(_OWORD *)v41 = *v40;
    *(_OWORD *)(v41 + 16) = v29;
    v30 = v40[3];
    *(_OWORD *)(v41 + 32) = v40[2];
    *(_OWORD *)(v41 + 48) = v30;
    return 1;
  }
  v14 = ~v12;
  if (v9)
    v15 = 0xEA00000000004745;
  else
    v15 = 0xE900000000000067;
  v42 = v15;
  v43 = v10;
  while (1)
  {
    v16 = *(_QWORD *)(v5 + 48) + (v13 << 6);
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    v19 = *(_QWORD *)(v16 + 32);
    v20 = *(_BYTE *)(v16 + 40);
    v21 = *(unsigned __int8 *)(v16 + 41);
    v22 = *(_QWORD *)v16 == v44 && *(_QWORD *)(v16 + 8) == v8;
    if (!v22 && (sub_22A6A61D4() & 1) == 0)
      goto LABEL_11;
    if ((v20 & 1) != 0)
    {
      sub_22A66DBE4((uint64_t)v47, (uint64_t)v46);
      if (v46[24] != 1)
        goto LABEL_11;
    }
    else
    {
      sub_22A66DBE4((uint64_t)v47, (uint64_t)&v48);
      if ((v50 & 1) != 0)
        goto LABEL_11;
      v23.i64[0] = v17;
      v23.i64[1] = v18;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v48, v23)), 0xFuLL))) & 1) == 0 || v19 != v49)
        goto LABEL_11;
    }
    v24 = v21 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
    v25 = v21 ? 0xEA00000000004745 : 0xE900000000000067;
    if (v24 == v43 && v25 == v42)
      break;
    v27 = sub_22A6A61D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
      goto LABEL_37;
LABEL_11:
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v5 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_37:
  swift_bridgeObjectRelease();
  sub_22A63EC28((uint64_t)v40);
  v32 = *(_QWORD *)(*v39 + 48) + (v13 << 6);
  v33 = *(_QWORD *)(v32 + 8);
  v34 = *(_QWORD *)(v32 + 32);
  v35 = *(_BYTE *)(v32 + 40);
  v36 = *(_BYTE *)(v32 + 41);
  v37 = *(_QWORD *)(v32 + 48);
  v38 = *(_QWORD *)(v32 + 56);
  *(_QWORD *)v41 = *(_QWORD *)v32;
  *(_QWORD *)(v41 + 8) = v33;
  *(_OWORD *)(v41 + 16) = *(_OWORD *)(v32 + 16);
  *(_QWORD *)(v41 + 32) = v34;
  *(_BYTE *)(v41 + 40) = v35;
  *(_BYTE *)(v41 + 41) = v36;
  *(_QWORD *)(v41 + 48) = v37;
  *(_QWORD *)(v41 + 56) = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  return 0;
}

uint64_t sub_22A669F90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  __int128 v26;
  uint64_t v27;
  _BYTE v28[24];
  __int128 v29;
  int v30;
  char v31;
  _BYTE v32[24];

  v5 = *v2;
  sub_22A6A6258();
  sub_22A66E3BC(a2, (uint64_t)v32);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  sub_22A66E3BC((uint64_t)v32, (uint64_t)v28);
  swift_bridgeObjectRetain();
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  sub_22A6A6264();
  v8 = sub_22A6A62A0();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  v27 = a1;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_QWORD *)(v5 + 48) + 40 * v10;
      v13 = *(_DWORD *)(v12 + 16);
      v14 = *(_BYTE *)(v12 + 20);
      v15 = *(_QWORD *)(v12 + 24);
      v16 = *(_QWORD *)(v12 + 32);
      v29 = *(_OWORD *)v12;
      v30 = v13;
      v31 = v14;
      sub_22A66E3BC((uint64_t)v32, (uint64_t)v28);
      _s10AirPlayKit13TextAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)&v29);
      if ((v17 & 1) != 0 && v15 == v6 && v16 == v7)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_22A66E3F8(a2);
    v19 = *(_QWORD *)(*v2 + 48) + 40 * v10;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(unsigned int *)(v19 + 16);
    *(_QWORD *)v27 = *(_QWORD *)v19;
    *(_QWORD *)(v27 + 8) = v21;
    *(_DWORD *)(v27 + 16) = v22;
    v23 = *(_BYTE *)(v19 + 20);
    *(_BYTE *)(v27 + 20) = v23;
    *(_OWORD *)(v27 + 24) = *(_OWORD *)(v19 + 24);
    sub_22A635434(v20, v21, v22, v23);
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v29 = *v2;
    *v2 = 0x8000000000000000;
    sub_22A63A41C(a2);
    sub_22A66AC30(a2, v10, isUniquelyReferenced_nonNull_native);
    *v2 = v29;
    swift_bridgeObjectRelease();
    v26 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v27 = *(_OWORD *)a2;
    *(_OWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(a2 + 32);
    return 1;
  }
}

void sub_22A66A19C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD v19[4];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00370);
  v3 = sub_22A6A609C();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v15 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v15 >= v8)
          goto LABEL_22;
        v16 = v5[v15];
        ++v9;
        if (!v16)
        {
          v9 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_22;
          v16 = v5[v9];
          if (!v16)
          {
            v9 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_22;
            v16 = v5[v9];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_22:
                swift_release();
                v18 = 1 << *(_BYTE *)(v2 + 32);
                if (v18 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v18;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  v9 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v16 = v5[v9];
                  ++v17;
                  if (v16)
                    goto LABEL_21;
                }
              }
              v9 = v17;
            }
          }
        }
LABEL_21:
        v7 = (v16 - 1) & v16;
        v11 = __clz(__rbit64(v16)) + (v9 << 6);
      }
      v12 = (_OWORD *)(*(_QWORD *)(v2 + 48) + (v11 << 6));
      v13 = v12[1];
      v19[0] = *v12;
      v19[1] = v13;
      v14 = v12[3];
      v19[2] = v12[2];
      v19[3] = v14;
      sub_22A66A6C8((uint64_t)v19, v3);
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_22A66A380()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C8);
  v3 = sub_22A6A609C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v37 = v10;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34)
          goto LABEL_33;
        v16 = v35[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v34)
            goto LABEL_33;
          v16 = v35[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v34)
              goto LABEL_33;
            v16 = v35[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v33 = 1 << *(_BYTE *)(v2 + 32);
                if (v33 > 63)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v17 >= v34)
                    goto LABEL_33;
                  v16 = v35[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v37 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = *(_QWORD *)(v2 + 48) + 40 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_DWORD *)(v19 + 16);
      v23 = *(_BYTE *)(v19 + 20);
      v24 = *(_QWORD *)(v19 + 24);
      v25 = *(_QWORD *)(v19 + 32);
      sub_22A6A6258();
      TextAttribute.hash(into:)();
      sub_22A6A6264();
      sub_22A6A6264();
      result = sub_22A6A62A0();
      v26 = -1 << *(_BYTE *)(v4 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 40 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_DWORD *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 20) = v23;
      *(_QWORD *)(v12 + 24) = v24;
      *(_QWORD *)(v12 + 32) = v25;
      ++*(_QWORD *)(v4 + 16);
      v2 = v36;
      v10 = v37;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

__n128 sub_22A66A6C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  _BYTE v9[32];
  int v10;
  char v11;

  sub_22A6A6258();
  sub_22A66DBE4(a1 + 16, (uint64_t)v9);
  sub_22A6A5DE4();
  sub_22A66DBE4((uint64_t)v9, (uint64_t)&v10);
  if ((v11 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  sub_22A6A62A0();
  v4 = sub_22A6A6060();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  v5 = *(_QWORD *)(a2 + 48) + (v4 << 6);
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 48) = v8;
  *(__n128 *)v5 = result;
  *(_OWORD *)(v5 + 16) = v7;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_22A66A870(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  float32x4_t v23;
  uint64_t v24;
  unint64_t v25;
  char v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[72];
  _BYTE v42[32];
  float32x4_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v37 = (__int128 *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_22A66A19C();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_22A66AE0C();
        goto LABEL_41;
      }
      sub_22A66B1C8();
    }
    v40 = *v3;
    sub_22A6A6258();
    v8 = *(_QWORD *)v5;
    v9 = *(_QWORD *)(v5 + 8);
    sub_22A66DBE4(v5 + 16, (uint64_t)v42);
    v10 = v9;
    sub_22A6A5DE4();
    sub_22A66DBE4((uint64_t)v42, (uint64_t)&v46);
    if ((v47 & 1) == 0)
    {
      sub_22A6A6264();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
    }
    v11 = 0x504A2F6F65646976;
    sub_22A6A6264();
    v12 = *(unsigned __int8 *)(v5 + 41);
    if (!*(_BYTE *)(v5 + 41))
      v11 = 0x6E702F6567616D69;
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    result = sub_22A6A62A0();
    v13 = -1 << *(_BYTE *)(v40 + 32);
    a2 = result & ~v13;
    if (((*(_QWORD *)(v40 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v39 = v11;
      v14 = ~v13;
      if (v12)
        v15 = 0xEA00000000004745;
      else
        v15 = 0xE900000000000067;
      v38 = v15;
      do
      {
        v16 = *(_QWORD *)(v40 + 48) + (a2 << 6);
        v17 = *(_QWORD *)(v16 + 16);
        v18 = *(_QWORD *)(v16 + 24);
        v19 = *(_QWORD *)(v16 + 32);
        v20 = *(_BYTE *)(v16 + 40);
        v21 = *(unsigned __int8 *)(v16 + 41);
        if (*(_QWORD *)v16 != v8 || *(_QWORD *)(v16 + 8) != v10)
        {
          result = sub_22A6A61D4();
          if ((result & 1) == 0)
            goto LABEL_17;
        }
        if ((v20 & 1) != 0)
        {
          result = sub_22A66DBE4((uint64_t)v42, (uint64_t)v41);
          if (v41[24] != 1)
            goto LABEL_17;
        }
        else
        {
          result = sub_22A66DBE4((uint64_t)v42, (uint64_t)&v43);
          if ((v45 & 1) != 0)
            goto LABEL_17;
          v23.i64[0] = v17;
          v23.i64[1] = v18;
          if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v43, v23)), 0xFuLL))) & 1) == 0
            || v19 != v44)
          {
            goto LABEL_17;
          }
        }
        if (v21)
          v24 = 0x504A2F6F65646976;
        else
          v24 = 0x6E702F6567616D69;
        if (v21)
          v25 = 0xEA00000000004745;
        else
          v25 = 0xE900000000000067;
        if (v24 == v39 && v25 == v38)
          goto LABEL_44;
        v27 = sub_22A6A61D4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
          goto LABEL_45;
LABEL_17:
        a2 = (a2 + 1) & v14;
      }
      while (((*(_QWORD *)(v40 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_41:
  v28 = *v36;
  *(_QWORD *)(*v36 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v29 = (_OWORD *)(*(_QWORD *)(v28 + 48) + (a2 << 6));
  v30 = *v37;
  v31 = v37[1];
  v32 = v37[3];
  v29[2] = v37[2];
  v29[3] = v32;
  *v29 = v30;
  v29[1] = v31;
  v33 = *(_QWORD *)(v28 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (v34)
  {
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_45:
    result = sub_22A6A61F8();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v28 + 16) = v35;
  }
  return result;
}

void sub_22A66AC30(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v29[24];
  __int128 v30;
  int v31;
  char v32;
  _BYTE v33[24];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_22A66A380();
  }
  else
  {
    if (v7 > v6)
    {
      sub_22A66AFFC();
      goto LABEL_18;
    }
    sub_22A66B380();
  }
  v8 = *v3;
  sub_22A6A6258();
  sub_22A66E3BC(a1, (uint64_t)v33);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  sub_22A66E3BC((uint64_t)v33, (uint64_t)v29);
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  sub_22A6A6264();
  v11 = sub_22A6A62A0();
  v12 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    while (1)
    {
      v14 = *(_QWORD *)(v8 + 48) + 40 * a2;
      v15 = *(_DWORD *)(v14 + 16);
      v16 = *(_BYTE *)(v14 + 20);
      v18 = *(_QWORD *)(v14 + 24);
      v17 = *(_QWORD *)(v14 + 32);
      v30 = *(_OWORD *)v14;
      v31 = v15;
      v32 = v16;
      sub_22A66E3BC((uint64_t)v33, (uint64_t)v29);
      _s10AirPlayKit13TextAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)&v30);
      if ((v19 & 1) != 0 && v18 == v9 && v17 == v10)
        break;
      a2 = (a2 + 1) & v13;
      if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_18;
    }
    sub_22A6A61F8();
    __break(1u);
  }
LABEL_18:
  v21 = *v28;
  *(_QWORD *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v22 = *(_QWORD *)(v21 + 48) + 40 * a2;
  v23 = *(_OWORD *)a1;
  v24 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)v22 = v23;
  *(_OWORD *)(v22 + 16) = v24;
  v25 = *(_QWORD *)(v21 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v27;
}

void *sub_22A66AE0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00370);
  v2 = *v0;
  v3 = sub_22A6A6090();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_28;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
      {
        v9 = v25 + 2;
        if (v25 + 2 >= v13)
          goto LABEL_28;
        v26 = *(_QWORD *)(v6 + 8 * v9);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = v15 << 6;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v17 + 32);
    v20 = *(_BYTE *)(v17 + 40);
    v21 = *(_BYTE *)(v17 + 41);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_OWORD *)(v17 + 48);
    v24 = *(_OWORD *)(v17 + 16);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_QWORD *)(v22 + 8) = v18;
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v19;
    *(_BYTE *)(v22 + 40) = v20;
    *(_BYTE *)(v22 + 41) = v21;
    *(_OWORD *)(v22 + 48) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v27 = v25 + 3;
  if (v27 >= v13)
    goto LABEL_28;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22A66AFFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C8);
  v2 = *v0;
  v3 = sub_22A6A6090();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(unsigned int *)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_OWORD *)(v17 + 24);
    v23 = *(_BYTE *)(v17 + 20);
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v19;
    *(_DWORD *)(v21 + 16) = v20;
    *(_BYTE *)(v21 + 20) = v23;
    *(_OWORD *)(v21 + 24) = v22;
    result = (void *)sub_22A635434(v18, v19, v20, v23);
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_22A66B1C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _OWORD v19[4];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00370);
  v3 = sub_22A6A609C();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v8)
      goto LABEL_22;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_22;
      v17 = *(_QWORD *)(v5 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_22;
        v17 = *(_QWORD *)(v5 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v7 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_6:
    v12 = (_OWORD *)(*(_QWORD *)(v2 + 48) + (v11 << 6));
    v14 = v12[2];
    v13 = v12[3];
    v15 = v12[1];
    v19[0] = *v12;
    v19[1] = v15;
    v19[2] = v14;
    v19[3] = v13;
    sub_22A63EBF4((uint64_t)v19);
    sub_22A66A6C8((uint64_t)v19, v3);
  }
  v18 = v16 + 3;
  if (v18 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v17 = *(_QWORD *)(v5 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_22A66B380()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C8);
  v3 = sub_22A6A609C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v35 = v2;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v36 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_33;
      v16 = *(_QWORD *)(v33 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_33;
        v16 = *(_QWORD *)(v33 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v36 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v2 + 48) + 40 * v14;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(unsigned int *)(v19 + 16);
    v23 = *(_BYTE *)(v19 + 20);
    v24 = *(_QWORD *)(v19 + 24);
    v25 = *(_QWORD *)(v19 + 32);
    sub_22A6A6258();
    sub_22A635434(v20, v21, v22, v23);
    TextAttribute.hash(into:)();
    sub_22A6A6264();
    sub_22A6A6264();
    result = sub_22A6A62A0();
    v26 = -1 << *(_BYTE *)(v4 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 40 * v11;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v21;
    *(_DWORD *)(v12 + 16) = v22;
    *(_BYTE *)(v12 + 20) = v23;
    *(_QWORD *)(v12 + 24) = v24;
    *(_QWORD *)(v12 + 32) = v25;
    ++*(_QWORD *)(v4 + 16);
    v2 = v35;
    v10 = v36;
  }
  v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v33 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_22A66B6A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[4];

  if (a3)
  {
    v5 = a3;
    if (*(_QWORD *)(a4 + 16) != a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B00370);
      v8 = sub_22A6A60A8();
      if (a2 < 1)
        v9 = 0;
      else
        v9 = *a1;
      v10 = 0;
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v12 = v11 | (v10 << 6);
        }
        else
        {
          v13 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_29;
          if (v13 >= a2)
          {
LABEL_27:
            swift_release();
            return;
          }
          v14 = a1[v13];
          ++v10;
          if (!v14)
          {
            v10 = v13 + 1;
            if (v13 + 1 >= a2)
              goto LABEL_27;
            v14 = a1[v10];
            if (!v14)
            {
              v10 = v13 + 2;
              if (v13 + 2 >= a2)
                goto LABEL_27;
              v14 = a1[v10];
              if (!v14)
              {
                v15 = v13 + 3;
                if (v15 >= a2)
                  goto LABEL_27;
                v14 = a1[v15];
                if (!v14)
                {
                  while (1)
                  {
                    v10 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_30;
                    if (v10 >= a2)
                      goto LABEL_27;
                    v14 = a1[v10];
                    ++v15;
                    if (v14)
                      goto LABEL_24;
                  }
                }
                v10 = v15;
              }
            }
          }
LABEL_24:
          v9 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v10 << 6);
        }
        v16 = (__int128 *)(*(_QWORD *)(a4 + 48) + (v12 << 6));
        v17 = v16[3];
        v19 = *v16;
        v18 = v16[1];
        v21[2] = v16[2];
        v21[3] = v17;
        v21[0] = v19;
        v21[1] = v18;
        sub_22A63EBF4((uint64_t)v21);
        sub_22A66A6C8((uint64_t)v21, v8);
        if (__OFSUB__(v5--, 1))
          break;
        if (!v5)
          goto LABEL_27;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_22A66B848(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v7;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C8);
  result = sub_22A6A60A8();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 56;
  v35 = v4;
  while (1)
  {
    if (v8)
    {
      v36 = (v8 - 1) & v8;
      v37 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v12 >= a2)
      goto LABEL_36;
    v13 = a1[v12];
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= a2)
        goto LABEL_36;
      v13 = a1[v14];
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= a2)
          goto LABEL_36;
        v13 = a1[v14];
        if (!v13)
          break;
      }
    }
LABEL_23:
    v36 = (v13 - 1) & v13;
    v37 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_24:
    v16 = *(_QWORD *)(v4 + 48) + 40 * v11;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(unsigned int *)(v16 + 16);
    v20 = *(_BYTE *)(v16 + 20);
    v22 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    sub_22A6A6258();
    sub_22A635434(v17, v18, v19, v20);
    TextAttribute.hash(into:)();
    sub_22A6A6264();
    sub_22A6A6264();
    result = sub_22A6A62A0();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = *(_QWORD *)(v7 + 48) + 40 * v26;
    *(_QWORD *)v31 = v17;
    *(_QWORD *)(v31 + 8) = v18;
    *(_DWORD *)(v31 + 16) = v19;
    *(_BYTE *)(v31 + 20) = v20;
    *(_QWORD *)(v31 + 24) = v22;
    *(_QWORD *)(v31 + 32) = v21;
    ++*(_QWORD *)(v7 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v35;
    v8 = v36;
    v9 = v37;
    if (!v5)
      goto LABEL_36;
  }
  v15 = v9 + 4;
  if (v9 + 4 >= a2)
    goto LABEL_36;
  v13 = a1[v15];
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= a2)
      goto LABEL_36;
    v13 = a1[v14];
    ++v15;
    if (v13)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t *sub_22A66BB48(uint64_t isStackAllocationSafe, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_22A66BCAC((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = sub_22A66BCAC((unint64_t *)v9, v6, v4, a2);
    MEMORY[0x22E2DF3F8](v9, -1, -1);
  }
  return a2;
}

unint64_t *sub_22A66BCAC(unint64_t *result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_6;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v11)
      return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_6:
    if (*(unsigned __int8 *)(*(_QWORD *)(a3 + 56) + 72 * v13 + 64) == a4)
    {
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return (unint64_t *)sub_22A66BE08(result, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22A66BE08(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFF8);
  result = sub_22A6A6150();
  v8 = result;
  v36 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v38 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v39 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v36)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v36)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v36)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v36)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v36)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v39 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v4 + 56) + 72 * v13;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v45 = *(_QWORD *)(v21 + 24);
    v46 = *(_QWORD *)(v21 + 16);
    v44 = *(_QWORD *)(v21 + 32);
    v42 = *(_BYTE *)(v21 + 41);
    v43 = *(_BYTE *)(v21 + 40);
    v24 = *(_QWORD *)(v21 + 56);
    v41 = *(_QWORD *)(v21 + 48);
    v40 = *(_BYTE *)(v21 + 64);
    sub_22A6A6258();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22A6A5DE4();
    result = sub_22A6A62A0();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v28);
    *v33 = v20;
    v33[1] = v19;
    v34 = *(_QWORD *)(v8 + 56) + 72 * v28;
    *(_QWORD *)v34 = v22;
    *(_QWORD *)(v34 + 8) = v23;
    *(_QWORD *)(v34 + 16) = v46;
    *(_QWORD *)(v34 + 24) = v45;
    *(_QWORD *)(v34 + 32) = v44;
    *(_BYTE *)(v34 + 40) = v43;
    *(_BYTE *)(v34 + 41) = v42;
    *(_QWORD *)(v34 + 48) = v41;
    *(_QWORD *)(v34 + 56) = v24;
    *(_BYTE *)(v34 + 64) = v40;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v38;
    v10 = v39;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22A66C140(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];
  _OWORD v19[4];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = (__int128 *)(*(_QWORD *)(v2 + 48) + (v10 << 6));
    v12 = v11[3];
    v14 = *v11;
    v13 = v11[1];
    v19[2] = v11[2];
    v19[3] = v12;
    v19[0] = v14;
    v19[1] = v13;
    sub_22A63EBF4((uint64_t)v19);
    sub_22A66CA68((uint64_t *)v19, (uint64_t)v18);
    sub_22A62EB10(v18[0], v18[1]);
    result = sub_22A63EC28((uint64_t)v19);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22A66C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  float v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  char v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  uint64_t v42;
  unint64_t v43;
  char v45;
  uint64_t v47;
  uint64_t isStackAllocationSafe;
  char v49;
  unint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char *v69;
  _QWORD v70[7];

  v70[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v2 = *(_QWORD *)(a1 + 56);
  v59 = a1 + 56;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  v57 = ~v3;
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & v2;
  v58 = (unint64_t)(63 - v3) >> 6;
  v68 = a2;
  v69 = (char *)(a2 + 56);
  v6 = swift_bridgeObjectRetain();
  v61 = 0;
  v60 = v6;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v8 = (v5 - 1) & v5;
      v9 = v7 | (v61 << 6);
    }
    else
    {
      v10 = v61 + 1;
      if (__OFADD__(v61, 1))
      {
        __break(1u);
        goto LABEL_78;
      }
      if (v10 >= v58)
        goto LABEL_76;
      v11 = *(_QWORD *)(v59 + 8 * v10);
      v12 = v61 + 1;
      if (!v11)
      {
        v12 = v61 + 2;
        if (v61 + 2 >= v58)
          goto LABEL_76;
        v11 = *(_QWORD *)(v59 + 8 * v12);
        if (!v11)
        {
          v12 = v61 + 3;
          if (v61 + 3 >= v58)
            goto LABEL_76;
          v11 = *(_QWORD *)(v59 + 8 * v12);
          if (!v11)
          {
            v12 = v61 + 4;
            if (v61 + 4 >= v58)
              goto LABEL_76;
            v11 = *(_QWORD *)(v59 + 8 * v12);
            if (!v11)
            {
              v13 = v61 + 5;
              if (v61 + 5 >= v58)
              {
LABEL_76:
                sub_22A633AA4();
                return v68;
              }
              v11 = *(_QWORD *)(v59 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  v12 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    break;
                  if (v12 >= v58)
                    goto LABEL_76;
                  v11 = *(_QWORD *)(v59 + 8 * v12);
                  ++v13;
                  if (v11)
                    goto LABEL_24;
                }
LABEL_78:
                __break(1u);
              }
              v12 = v61 + 5;
            }
          }
        }
      }
LABEL_24:
      v8 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
      v61 = v12;
    }
    v14 = *(_QWORD *)(v6 + 48) + (v9 << 6);
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v18 = *(_QWORD *)(v14 + 16);
    v17 = *(_QWORD *)(v14 + 24);
    v19 = *(_QWORD *)(v14 + 32);
    v20 = *(unsigned __int8 *)(v14 + 40);
    LODWORD(v65) = *(unsigned __int8 *)(v14 + 41);
    v21 = *(_QWORD *)(v14 + 56);
    sub_22A6A6258();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22A6A5DE4();
    v67 = v20;
    v63 = v8;
    v62 = v21;
    v64 = v19;
    if ((v20 & 1) == 0)
    {
      sub_22A6A6264();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
    }
    sub_22A6A6264();
    v22 = (_DWORD)v65 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
    v66 = v22;
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    v23 = sub_22A6A62A0();
    v24 = v68;
    v25 = -1 << *(_BYTE *)(v68 + 32);
    v26 = v23 & ~v25;
    if (((*(_QWORD *)&v69[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) != 0)
      break;
LABEL_6:
    swift_release();
    swift_bridgeObjectRelease();
    v6 = v60;
    v5 = v63;
  }
  v27 = ~v25;
  v28 = *(float *)&v17;
  v29 = 0xEA00000000004745;
  if (!(_DWORD)v65)
    v29 = 0xE900000000000067;
  v65 = v29;
  while (1)
  {
    v30 = *(_QWORD *)(v24 + 48) + (v26 << 6);
    v31 = *(_QWORD *)(v30 + 16);
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v30 + 32);
    v34 = *(_BYTE *)(v30 + 40);
    v35 = *(unsigned __int8 *)(v30 + 41);
    if (*(_QWORD *)v30 != v16 || *(_QWORD *)(v30 + 8) != v15)
    {
      v37 = sub_22A6A61D4();
      v24 = v68;
      if ((v37 & 1) == 0)
        goto LABEL_34;
    }
    if ((v34 & 1) != 0)
    {
      if ((v67 & 1) == 0)
        goto LABEL_34;
    }
    else
    {
      if ((v67 & 1) != 0)
        goto LABEL_34;
      v38 = *(float *)&v31 == *(float *)&v18 && *((float *)&v31 + 1) == *((float *)&v18 + 1);
      v39 = v38 && *(float *)&v32 == v28;
      v40 = v39 && *((float *)&v32 + 1) == *((float *)&v17 + 1);
      if (!v40 || v33 != v64)
        goto LABEL_34;
    }
    v42 = v35 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
    v43 = v35 ? 0xEA00000000004745 : 0xE900000000000067;
    if (v42 == v66 && v43 == v65)
      break;
    v45 = sub_22A6A61D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v68;
    if ((v45 & 1) != 0)
      goto LABEL_72;
LABEL_34:
    v26 = (v26 + 1) & v27;
    if (((*(_QWORD *)&v69[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) == 0)
      goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v68;
LABEL_72:
  v47 = v24;
  swift_release();
  isStackAllocationSafe = swift_bridgeObjectRelease();
  v70[0] = v60;
  v70[1] = v59;
  v70[2] = v57;
  v70[3] = v61;
  v70[4] = v63;
  v49 = *(_BYTE *)(v47 + 32);
  v50 = (unint64_t)((1 << v49) + 63) >> 6;
  v51 = 8 * v50;
  if ((v49 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v69, v51);
    sub_22A66CE48((unint64_t *)((char *)&v57 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0)), v50, v68, v26, v70);
    v53 = v52;
    swift_release();
    sub_22A633AA4();
    return v53;
  }
  else
  {
    v54 = (void *)swift_slowAlloc();
    memcpy(v54, v69, v51);
    sub_22A66CE48((unint64_t *)v54, v50, v68, v26, v70);
    v56 = v55;
    swift_release();
    sub_22A633AA4();
    MEMORY[0x22E2DF3F8](v54, -1, -1);
    return v56;
  }
}

uint64_t sub_22A66CA68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  BOOL v21;
  float32x4_t v22;
  uint64_t v23;
  unint64_t v24;
  char v26;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[72];
  _BYTE v42[32];
  float32x4_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;

  v5 = *v2;
  sub_22A6A6258();
  v6 = *a1;
  v7 = a1[1];
  sub_22A66DBE4((uint64_t)(a1 + 2), (uint64_t)v42);
  swift_bridgeObjectRetain();
  v39 = v6;
  sub_22A6A5DE4();
  sub_22A66DBE4((uint64_t)v42, (uint64_t)&v46);
  v35 = v2;
  v36 = a2;
  if ((v47 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  v8 = *((unsigned __int8 *)a1 + 41);
  if (*((_BYTE *)a1 + 41))
    v9 = 0x504A2F6F65646976;
  else
    v9 = 0x6E702F6567616D69;
  v38 = v9;
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  v10 = sub_22A6A62A0();
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_34:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)(v36 + 32) = 0u;
    *(_OWORD *)(v36 + 48) = 0u;
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    return result;
  }
  v13 = ~v11;
  v14 = 0xEA00000000004745;
  if (!v8)
    v14 = 0xE900000000000067;
  v37 = v14;
  while (1)
  {
    v15 = *(_QWORD *)(v5 + 48) + (v12 << 6);
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    v18 = *(_QWORD *)(v15 + 32);
    v19 = *(_BYTE *)(v15 + 40);
    v20 = *(unsigned __int8 *)(v15 + 41);
    v21 = *(_QWORD *)v15 == v39 && *(_QWORD *)(v15 + 8) == v7;
    if (!v21 && (sub_22A6A61D4() & 1) == 0)
      goto LABEL_10;
    if ((v19 & 1) != 0)
    {
      sub_22A66DBE4((uint64_t)v42, (uint64_t)v41);
      if (v41[24] != 1)
        goto LABEL_10;
    }
    else
    {
      sub_22A66DBE4((uint64_t)v42, (uint64_t)&v43);
      if ((v45 & 1) != 0)
        goto LABEL_10;
      v22.i64[0] = v16;
      v22.i64[1] = v17;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v43, v22)), 0xFuLL))) & 1) == 0 || v18 != v44)
        goto LABEL_10;
    }
    v23 = v20 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
    v24 = v20 ? 0xEA00000000004745 : 0xE900000000000067;
    if (v23 == v38 && v24 == v37)
      break;
    v26 = sub_22A6A61D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      goto LABEL_36;
LABEL_10:
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_36:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = *v35;
  v40 = *v35;
  *v35 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_22A66AE0C();
    v29 = v40;
  }
  v30 = *(_QWORD *)(v29 + 48) + (v12 << 6);
  v31 = *(_QWORD *)(v30 + 8);
  v32 = *(_QWORD *)(v30 + 32);
  v33 = *(_BYTE *)(v30 + 40);
  v34 = *(_BYTE *)(v30 + 41);
  *(_QWORD *)v36 = *(_QWORD *)v30;
  *(_QWORD *)(v36 + 8) = v31;
  *(_OWORD *)(v36 + 16) = *(_OWORD *)(v30 + 16);
  *(_QWORD *)(v36 + 32) = v32;
  *(_BYTE *)(v36 + 40) = v33;
  *(_BYTE *)(v36 + 41) = v34;
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v30 + 48);
  sub_22A66D364(v12);
  *v35 = v40;
  return swift_bridgeObjectRelease();
}

void sub_22A66CE48(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  uint64_t v42;
  unint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v50;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v59;

  v5 = *(_QWORD *)(a3 + 16);
  v52 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v6 = v5 - 1;
  v57 = a3 + 56;
  do
  {
    v50 = v6;
    do
    {
      while (1)
      {
        v8 = a5[3];
        v7 = a5[4];
        if (v7)
        {
          v9 = (v7 - 1) & v7;
          v10 = __clz(__rbit64(v7)) | (v8 << 6);
          goto LABEL_16;
        }
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_81:
          __break(1u);
          return;
        }
        v12 = (unint64_t)(a5[2] + 64) >> 6;
        if (v11 >= v12)
        {
          v11 = a5[3];
LABEL_77:
          a5[3] = v11;
          a5[4] = 0;
          swift_retain();
          sub_22A66B6A4(a1, a2, v50, a3);
          return;
        }
        v13 = a5[1];
        v14 = *(_QWORD *)(v13 + 8 * v11);
        if (!v14)
        {
          v15 = v8 + 2;
          if (v8 + 2 >= v12)
            goto LABEL_77;
          v14 = *(_QWORD *)(v13 + 8 * v15);
          if (!v14)
          {
            if (v8 + 3 >= v12)
              goto LABEL_78;
            v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
            if (v14)
            {
              v11 = v8 + 3;
              goto LABEL_15;
            }
            v15 = v8 + 4;
            if (v8 + 4 >= v12)
            {
              v11 = v8 + 3;
              goto LABEL_77;
            }
            v14 = *(_QWORD *)(v13 + 8 * v15);
            if (!v14)
            {
              v11 = v8 + 5;
              if (v8 + 5 >= v12)
              {
LABEL_78:
                v11 = v15;
                goto LABEL_77;
              }
              v14 = *(_QWORD *)(v13 + 8 * v11);
              if (!v14)
              {
                v11 = v12 - 1;
                v48 = v8 + 6;
                do
                {
                  if (v12 == v48)
                    goto LABEL_77;
                  v14 = *(_QWORD *)(v13 + 8 * v48++);
                }
                while (!v14);
                v11 = v48 - 1;
              }
              goto LABEL_15;
            }
          }
          v11 = v15;
        }
LABEL_15:
        v9 = (v14 - 1) & v14;
        v10 = __clz(__rbit64(v14)) + (v11 << 6);
        v8 = v11;
LABEL_16:
        v16 = *(_QWORD *)(*a5 + 48) + (v10 << 6);
        v17 = *(_QWORD *)v16;
        v18 = *(_QWORD *)(v16 + 8);
        v20 = *(_QWORD *)(v16 + 16);
        v19 = *(_QWORD *)(v16 + 24);
        v21 = *(_QWORD *)(v16 + 32);
        v22 = *(_BYTE *)(v16 + 40);
        v23 = *(unsigned __int8 *)(v16 + 41);
        a5[3] = v8;
        a5[4] = v9;
        sub_22A6A6258();
        swift_bridgeObjectRetain();
        swift_retain();
        v59 = v18;
        sub_22A6A5DE4();
        v56 = v22;
        v53 = v21;
        if ((v22 & 1) == 0)
        {
          sub_22A6A6264();
          sub_22A6A627C();
          sub_22A6A627C();
          sub_22A6A627C();
          sub_22A6A627C();
        }
        sub_22A6A6264();
        v24 = v23 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
        v55 = v24;
        sub_22A6A5DE4();
        swift_bridgeObjectRelease();
        v25 = sub_22A6A62A0();
        v26 = -1 << *(_BYTE *)(a3 + 32);
        v27 = v25 & ~v26;
        if (((*(_QWORD *)(v57 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
          break;
LABEL_3:
        swift_release();
        swift_bridgeObjectRelease();
        a5 = v52;
      }
      v28 = ~v26;
      v29 = v20;
      if (v23)
        v30 = 0xEA00000000004745;
      else
        v30 = 0xE900000000000067;
      v54 = v30;
      while (1)
      {
        v31 = *(_QWORD *)(a3 + 48) + (v27 << 6);
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        v34 = *(_QWORD *)(v31 + 32);
        v35 = *(_BYTE *)(v31 + 40);
        v36 = *(unsigned __int8 *)(v31 + 41);
        v37 = *(_QWORD *)v31 == v17 && *(_QWORD *)(v31 + 8) == v59;
        if (!v37 && (sub_22A6A61D4() & 1) == 0)
          goto LABEL_26;
        if ((v35 & 1) != 0)
        {
          if ((v56 & 1) == 0)
            goto LABEL_26;
        }
        else
        {
          if ((v56 & 1) != 0)
            goto LABEL_26;
          v38 = *(float *)&v33 == *(float *)&v29 && *((float *)&v33 + 1) == *((float *)&v29 + 1);
          v39 = v38 && *(float *)&v32 == *(float *)&v19;
          v40 = v39 && *((float *)&v32 + 1) == *((float *)&v19 + 1);
          if (!v40 || v34 != v53)
            goto LABEL_26;
        }
        v42 = v36 ? 0x504A2F6F65646976 : 0x6E702F6567616D69;
        v43 = v36 ? 0xEA00000000004745 : 0xE900000000000067;
        if (v42 == v55 && v43 == v54)
          break;
        v45 = sub_22A6A61D4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
          goto LABEL_63;
LABEL_26:
        v27 = (v27 + 1) & v28;
        if (((*(_QWORD *)(v57 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          goto LABEL_3;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_63:
      swift_release();
      swift_bridgeObjectRelease();
      v46 = (v27 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v52;
      v47 = *(unint64_t *)((char *)a1 + v46);
      *(unint64_t *)((char *)a1 + v46) = v47 & ~(1 << v27);
    }
    while ((v47 & (1 << v27)) == 0);
    v6 = v50 - 1;
    if (__OFSUB__(v50, 1))
      goto LABEL_81;
  }
  while (v50 != 1);
}

unint64_t sub_22A66D364(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22A6A6054();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v21 = v3;
      v22 = (v8 + 1) & v7;
      v23 = v4;
      do
      {
        v12 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + (v6 << 6) + 40);
        sub_22A6A6258();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22A6A5DE4();
        if ((v12 & 1) == 0)
        {
          sub_22A6A6264();
          sub_22A6A627C();
          sub_22A6A627C();
          sub_22A6A627C();
          v3 = v21;
          sub_22A6A627C();
        }
        sub_22A6A6264();
        sub_22A6A5DE4();
        swift_bridgeObjectRelease();
        v13 = sub_22A6A62A0();
        swift_release();
        swift_bridgeObjectRelease();
        v14 = v13 & v7;
        v4 = v23;
        if (v2 >= (uint64_t)v22)
        {
          if (v14 < v22)
            goto LABEL_5;
        }
        else if (v14 >= v22)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_13:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (__int128 *)(v15 + (v2 << 6));
          v17 = (__int128 *)(v15 + (v6 << 6));
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 4))
          {
            v9 = *v17;
            v10 = v17[1];
            v11 = v17[3];
            v16[2] = v17[2];
            v16[3] = v11;
            *v16 = v9;
            v16[1] = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v23 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_22A66D650(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22A66D6D8(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v6 = a4 & 1;
  v7 = *a3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22A66D740;
  return sub_22A666A70(a2, v7, v6);
}

uint64_t sub_22A66D740(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22A66D79C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  _BYTE v7[8];
  uint64_t v8;
  _OWORD v9[4];

  v2 = *(_QWORD *)(a1 + 16);
  sub_22A66DBA0();
  result = sub_22A6A5F34();
  v8 = result;
  if (v2)
  {
    v4 = (_OWORD *)(a1 + 32);
    do
    {
      v5 = v4[1];
      v9[0] = *v4;
      v9[1] = v5;
      v6 = v4[3];
      v9[2] = v4[2];
      v9[3] = v6;
      sub_22A63EBF4((uint64_t)v9);
      sub_22A669B88((uint64_t)v7, (uint64_t *)v9);
      swift_release();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_22A66D83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  char v7;
  _QWORD *v8;

  v6 = *(uint64_t **)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_22A62E6B0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, char))((char *)&dword_255B00328 + dword_255B00328))(a1, a2, v6, v7);
}

uint64_t sub_22A66D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = *(_QWORD *)(a1 + 48) + (i << 6);
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v17 + 32);
    v20 = *(_BYTE *)(v17 + 40);
    v21 = *(_BYTE *)(v17 + 41);
    v22 = *(_QWORD *)(v17 + 48);
    v23 = *(_QWORD *)(v17 + 56);
    v25[0] = *(_QWORD *)v17;
    v25[1] = v18;
    v26 = *(_OWORD *)(v17 + 16);
    v27 = v19;
    v28 = v20;
    v29 = v21;
    v30 = v22;
    v31 = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22A6684C0((uint64_t)v25, a2);
    if (v2)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v9)
      return swift_release();
    v15 = *(_QWORD *)(v5 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v9)
        return swift_release();
      v15 = *(_QWORD *)(v5 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 2;
      if (v11 + 2 >= v9)
        return swift_release();
      v15 = *(_QWORD *)(v5 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 3;
      if (v11 + 3 >= v9)
        return swift_release();
      v15 = *(_QWORD *)(v5 + 8 * v16);
      if (v15)
      {
LABEL_14:
        v11 = v16;
        goto LABEL_15;
      }
      v24 = v11 + 4;
      if (v11 + 4 >= v9)
        return swift_release();
      v15 = *(_QWORD *)(v5 + 8 * v24);
      v11 += 4;
      if (!v15)
        break;
    }
LABEL_15:
    v8 = (v15 - 1) & v15;
  }
  while (1)
  {
    v11 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v11 >= v9)
      return swift_release();
    v15 = *(_QWORD *)(v5 + 8 * v11);
    ++v24;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22A66DAAC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A66DAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 32;
  v7 = *(_BYTE *)(v1 + 96);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22A62ED7C;
  return sub_22A63E680(a1, v4, v5, v6, v7);
}

uint64_t sub_22A66DB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenderAssetAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A66DBA0()
{
  unint64_t result;

  result = qword_255B00368;
  if (!qword_255B00368)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset, &type metadata for RenderAsset);
    atomic_store(result, (unint64_t *)&qword_255B00368);
  }
  return result;
}

uint64_t sub_22A66DBE4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8(a2, a1);
  return a2;
}

void sub_22A66DC20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v25[4];
  unint64_t *v26;

  v26 = a1;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v20 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v12)
      goto LABEL_24;
    v21 = *(_QWORD *)(v8 + 8 * v20);
    ++v7;
    if (!v21)
    {
      v7 = v20 + 1;
      if (v20 + 1 >= v12)
        goto LABEL_24;
      v21 = *(_QWORD *)(v8 + 8 * v7);
      if (!v21)
      {
        v7 = v20 + 2;
        if (v20 + 2 >= v12)
          goto LABEL_24;
        v21 = *(_QWORD *)(v8 + 8 * v7);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v11 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v7 << 6);
LABEL_5:
    v15 = (__int128 *)(*(_QWORD *)(a3 + 48) + (v14 << 6));
    v16 = v15[3];
    v18 = *v15;
    v17 = v15[1];
    v25[2] = v15[2];
    v25[3] = v16;
    v25[0] = v18;
    v25[1] = v17;
    sub_22A63EBF4((uint64_t)v25);
    v19 = sub_22A668B64((uint64_t *)v25, a4);
    sub_22A63EC28((uint64_t)v25);
    if ((v19 & 1) == 0)
    {
      *(unint64_t *)((char *)v26 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_22A66B6A4(v26, a2, v6, a3);
        return;
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v12)
    goto LABEL_24;
  v21 = *(_QWORD *)(v8 + 8 * v22);
  if (v21)
  {
    v7 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v21 = *(_QWORD *)(v8 + 8 * v7);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_22A66DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_22A66DC20((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_22A66DC20((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x22E2DF3F8](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_22A66DFAC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  int64_t i;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (_QWORD *)(a2 + 192);
  v38 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v42)
  {
    if (v5)
    {
      v41 = (v5 - 1) & v5;
      v42 = i;
      v9 = __clz(__rbit64(v5)) | (i << 6);
    }
    else
    {
      v10 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v10 >= v38)
        return swift_release();
      v11 = *(_QWORD *)(v37 + 8 * v10);
      v12 = i + 1;
      if (!v11)
      {
        v12 = i + 2;
        if (i + 2 >= v38)
          return swift_release();
        v11 = *(_QWORD *)(v37 + 8 * v12);
        if (!v11)
        {
          v12 = i + 3;
          if (i + 3 >= v38)
            return swift_release();
          v11 = *(_QWORD *)(v37 + 8 * v12);
          if (!v11)
          {
            v12 = i + 4;
            if (i + 4 >= v38)
              return swift_release();
            v11 = *(_QWORD *)(v37 + 8 * v12);
            if (!v11)
            {
              v13 = i + 5;
              if (i + 5 >= v38)
                return swift_release();
              v11 = *(_QWORD *)(v37 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  v12 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_39;
                  if (v12 >= v38)
                    return swift_release();
                  v11 = *(_QWORD *)(v37 + 8 * v12);
                  ++v13;
                  if (v11)
                    goto LABEL_23;
                }
              }
              v12 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v41 = (v11 - 1) & v11;
      v42 = v12;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    v14 = *(_QWORD *)(a1 + 48) + (v9 << 6);
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v43 = *(_QWORD *)(v14 + 24);
    v44 = *(_QWORD *)(v14 + 32);
    v45 = *(_BYTE *)(v14 + 40);
    v46 = *(_BYTE *)(v14 + 41);
    v18 = *(_QWORD *)(v14 + 56);
    v47 = *(_QWORD *)(v14 + 48);
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = (_QWORD *)*v6;
    v48 = (_QWORD *)*v6;
    v21 = v6;
    *v6 = 0x8000000000000000;
    v23 = sub_22A632FD0(v16, v15);
    v24 = v20[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v20[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = v48;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_22A67A404();
        v30 = v48;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_22A633B24(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_22A632FD0(v16, v15);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_40;
      v23 = v28;
      v30 = v48;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        v8 = v30[7] + 72 * v23;
        swift_release();
        swift_bridgeObjectRelease();
        *(_QWORD *)v8 = v16;
        *(_QWORD *)(v8 + 8) = v15;
        *(_QWORD *)(v8 + 16) = v17;
        *(_QWORD *)(v8 + 24) = v43;
        *(_QWORD *)(v8 + 32) = v44;
        *(_BYTE *)(v8 + 40) = v45;
        *(_BYTE *)(v8 + 41) = v46;
        *(_QWORD *)(v8 + 48) = v47;
        *(_QWORD *)(v8 + 56) = v18;
        *(_BYTE *)(v8 + 64) = a3;
        goto LABEL_5;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    v31 = (uint64_t *)(v30[6] + 16 * v23);
    *v31 = v16;
    v31[1] = v15;
    v32 = v30[7] + 72 * v23;
    *(_QWORD *)v32 = v16;
    *(_QWORD *)(v32 + 8) = v15;
    *(_QWORD *)(v32 + 16) = v17;
    *(_QWORD *)(v32 + 24) = v43;
    *(_QWORD *)(v32 + 32) = v44;
    *(_BYTE *)(v32 + 40) = v45;
    *(_BYTE *)(v32 + 41) = v46;
    *(_QWORD *)(v32 + 48) = v47;
    *(_QWORD *)(v32 + 56) = v18;
    *(_BYTE *)(v32 + 64) = a3;
    v33 = v30[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_37;
    v30[2] = v35;
    swift_bridgeObjectRetain();
LABEL_5:
    v6 = v21;
    *v21 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    v5 = v41;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A66E37C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2DF32C](&unk_22A6A976C, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A66E3BC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy21_8(a2, a1);
  return a2;
}

uint64_t sub_22A66E3F8(uint64_t a1)
{
  sub_22A63544C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
  return a1;
}

void TextAttribute.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_22A66E468()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_22A6A6264();
  return Color.hash(into:)(v1, v0, v3, v2);
}

uint64_t TextAttribute.hashValue.getter()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A66E590()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A66E5EC()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t TextAttributeRegion.hash(into:)()
{
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  return sub_22A6A6264();
}

uint64_t TextAttributeRegion.hashValue.getter()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

uint64_t sub_22A66E738()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

uint64_t sub_22A66E7C4()
{
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  return sub_22A6A6264();
}

uint64_t sub_22A66E828()
{
  sub_22A6A6258();
  TextAttribute.hash(into:)();
  sub_22A6A6264();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

void _s10AirPlayKit13TextAttributeO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_22A66E900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  BOOL v14;
  BOOL v15;

  if (v7)
  {
    sub_22A635434(v0, v1, v2, v7);
    sub_22A63544C(v3, v5, v4, v6);
    v9 = v0;
    v10 = v1;
    v11 = v2;
    v12 = v7;
LABEL_8:
    sub_22A63544C(v9, v10, v11, v12);
    return 0;
  }
  if (!(_BYTE)v4)
  {
    sub_22A63544C(v3, v5, v4, 0);
    sub_22A63544C(v0, v1, v2, 0);
    if (!(_BYTE)v2)
    {
      v14 = *(float *)&v3 == *(float *)&v0 && *((float *)&v3 + 1) == *((float *)&v0 + 1);
      v15 = v14 && *(float *)&v5 == *(float *)&v1;
      if (v15 && *((float *)&v5 + 1) == *((float *)&v1 + 1))
        return 1;
    }
    return 0;
  }
  if (v4 != 1)
  {
    sub_22A63544C(v3, v5, v4, 0);
    sub_22A63544C(v0, v1, v2, 0);
    return v2 == 2 && !(v1 | v0);
  }
  if (v2 != 1)
  {
    sub_22A63544C(v3, v5, v4, 0);
    v9 = v0;
    v10 = v1;
    v11 = v2;
    v12 = 0;
    goto LABEL_8;
  }
  v8 = sub_22A640B8C(v3, v0);
  sub_22A63544C(v3, v5, v4, 0);
  sub_22A63544C(v0, v1, v2, 0);
  return (v8 & 1) != 0;
}

BOOL _s10AirPlayKit19TextAttributeRegionV2eeoiySbAC_ACtFZ_0(__int128 *a1, uint64_t a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL4 v10;
  __int128 v12;
  int v13;
  char v14;

  v2 = *((_DWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 20);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v12 = *a1;
  v13 = v2;
  v14 = v3;
  _s10AirPlayKit13TextAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)&v12);
  v10 = v4 == v6 && v5 == v7;
  return (v8 & 1) != 0 && v10;
}

unint64_t sub_22A66EFC8()
{
  unint64_t result;

  result = qword_255B00398;
  if (!qword_255B00398)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextAttribute, &type metadata for TextAttribute);
    atomic_store(result, (unint64_t *)&qword_255B00398);
  }
  return result;
}

unint64_t sub_22A66F010()
{
  unint64_t result;

  result = qword_255B003A0;
  if (!qword_255B003A0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextAttributeRegion, &type metadata for TextAttributeRegion);
    atomic_store(result, (unint64_t *)&qword_255B003A0);
  }
  return result;
}

uint64_t destroy for TextAttribute(uint64_t a1)
{
  return sub_22A63544C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
}

uint64_t _s10AirPlayKit13TextAttributeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_22A635434(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  return a1;
}

uint64_t assignWithCopy for TextAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_22A635434(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_22A63544C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TextAttribute(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_DWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v4;
  sub_22A63544C(v5, v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextAttribute(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextAttribute(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A66F228(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 20);
}

uint64_t sub_22A66F230(uint64_t result, char a2)
{
  *(_BYTE *)(result + 20) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TextAttribute()
{
  return &type metadata for TextAttribute;
}

uint64_t initializeWithCopy for TextAttributeRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 20);
  sub_22A635434(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 20) = v7;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for TextAttributeRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 20);
  sub_22A635434(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v7;
  sub_22A63544C(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TextAttributeRegion(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(unsigned int *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v5;
  sub_22A63544C(v6, v7, v8, v9);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextAttributeRegion(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextAttributeRegion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextAttributeRegion()
{
  return &type metadata for TextAttributeRegion;
}

uint64_t static RenderNodeError.== infix(_:_:)()
{
  return 1;
}

uint64_t RenderNodeError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t RenderNodeError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A66F4B4()
{
  unint64_t result;

  result = qword_255B003A8;
  if (!qword_255B003A8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderNodeError, &type metadata for RenderNodeError);
    atomic_store(result, (unint64_t *)&qword_255B003A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RenderNodeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22A66F538 + 4 * asc_22A6AA254[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22A66F558 + 4 * byte_22A6AA259[v4]))();
}

_BYTE *sub_22A66F538(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22A66F558(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A66F560(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A66F568(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A66F570(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A66F578(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RenderNodeError()
{
  return &type metadata for RenderNodeError;
}

unint64_t sub_22A66F594(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6549D8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A66F5B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_22A6A5E20() != a1 || v9 != a2)
  {
    v10 = sub_22A6A61D4();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_22A6A5DFC();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_22A66F6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[5];
  uint64_t v23;
  uint64_t v24;

  v23 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v3);
  v21[3] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  MEMORY[0x24BDAC7A8](v5);
  v21[2] = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  MEMORY[0x24BDAC7A8](v7);
  v21[1] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  MEMORY[0x24BDAC7A8](v9);
  v21[0] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContainerContent.Child();
  v11 = MEMORY[0x24BDAC7A8](v24);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v21 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v21 - v16;
  if (*(_QWORD *)(a2 + 16))
  {
    v18 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v21[4] = *(_QWORD *)(v15 + 72);
    sub_22A6354E0(v18, (uint64_t)v21 - v16, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    sub_22A6A62AC();
    sub_22A6354E0((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    v19 = (char *)&loc_22A66F8B0 + 4 * byte_22A6AA324[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return 0;
}

void (*sub_22A66FB90(_QWORD *a1, uint64_t a2))(uint64_t, char *)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(_QWORD, _QWORD, _QWORD);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, char *);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  void (*v137)(uint64_t, char *);
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  _QWORD *v147;

  v124 = a2;
  v4 = type metadata accessor for RenderLayerAction();
  v114 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v121 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for RenderLayerType();
  v6 = MEMORY[0x24BDAC7A8](v118);
  v111 = (uint64_t *)((char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v110 = (uint64_t *)((char *)&v108 - v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v134 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v116 = (char *)&v108 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v117 = (char *)&v108 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  MEMORY[0x24BDAC7A8](v15);
  v129 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  MEMORY[0x24BDAC7A8](v17);
  v128 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  MEMORY[0x24BDAC7A8](v19);
  v127 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  MEMORY[0x24BDAC7A8](v21);
  v126 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22A6A5C40();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v122 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v115 = (char *)&v108 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v133 = (char *)&v108 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v137 = (void (*)(uint64_t, char *))((char *)&v108 - v31);
  v139 = type metadata accessor for ContainerContent.Child();
  v132 = *(_QWORD *)(v139 - 8);
  v32 = MEMORY[0x24BDAC7A8](v139);
  v34 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (void (*)(uint64_t, char *))((char *)&v108 - v36);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v120 = (char *)&v108 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v130 = (uint64_t)&v108 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v119 = (char *)&v108 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v135 = (char *)&v108 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v136 = (char *)&v108 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v138 = (uint64_t *)((char *)&v108 - v48);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003B8);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v55 = a1;
  v56 = *a1;
  v58 = *v2;
  v57 = v2[1];
  v131 = v4;
  v140 = v23;
  v141 = v24;
  v125 = v58;
  if (v56)
  {
    v113 = v54;
    v114 = v53;
    v109 = v57;
    v121 = (char *)&v108 - v52;
    v122 = (char *)v51;
    v108 = v55[1];
    swift_bridgeObjectRetain_n();
    sub_22A63065C(MEMORY[0x24BEE4AF8]);
    v59 = *(_QWORD *)(v56 + 16);
    v112 = v56;
    if (v59)
    {
      v60 = v56 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
      v61 = *(char **)(v132 + 72);
      swift_bridgeObjectRetain();
      v62 = (void (*)(_QWORD, _QWORD, _QWORD))v138;
      v134 = v61;
      sub_22A6354E0(v60, (uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      sub_22A6354E0((uint64_t)v62, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      v63 = (char *)&loc_22A670174 + dword_22A6712E4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    v72 = v56;
    v146 = v125;
    *(_QWORD *)&v145 = v56;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B003C8);
    sub_22A671D30(&qword_255B003D0, &qword_255B003C8, MEMORY[0x24BEE12B0]);
    v73 = v121;
    sub_22A6A5D48();
    swift_bridgeObjectRelease();
    sub_22A6354A0(&qword_255B003D8, (uint64_t (*)(uint64_t))type metadata accessor for ContainerContent.Child, (uint64_t)&protocol conformance descriptor for ContainerContent.Child);
    v74 = v113;
    v75 = v122;
    v76 = sub_22A6A6168();
    MEMORY[0x24BDAC7A8](v76);
    v77 = v124;
    *(&v108 - 2) = v72;
    *(&v108 - 1) = v77;
    v78 = v123;
    v79 = sub_22A671334(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *, char *))sub_22A671CD4, (uint64_t)(&v108 - 4));
    v80 = v132;
    if (v78)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v81 = *(void (**)(uint64_t, char *))(v114 + 8);
      v81(v74, v75);
      v81((uint64_t)v73, v75);
      swift_bridgeObjectRelease();
    }
    else
    {
      v82 = v79;
      v123 = 0;
      v137 = *(void (**)(uint64_t, char *))(v114 + 8);
      v137(v74, v75);
      swift_bridgeObjectRelease();
      v83 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v146 = MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)(v125 + 16))
      {
        v136 = (char *)v82;
        v84 = v125 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
        v138 = *(uint64_t **)(v80 + 72);
        swift_bridgeObjectRetain_n();
        sub_22A6354E0(v84, v130, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
        v85 = (char *)&loc_22A670AD0 + dword_22A6712F4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease();
      v87 = v146;
      v146 = v82;
      sub_22A693AF0(v87);
      v147 = v83;
      v88 = *(_QWORD *)(v146 + 16);
      if (v88)
      {
        v89 = v146 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v89, (uint64_t)&v146);
          sub_22A628A98((uint64_t)&v146, (uint64_t)&v142);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
          if (v143)
          {
            sub_22A628A38(&v142, (uint64_t)&v145);
            sub_22A628A38(&v145, (uint64_t)&v142);
            v90 = v147;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v90 = sub_22A62F0EC(0, v90[2] + 1, 1, v90);
              v147 = v90;
            }
            v92 = v90[2];
            v91 = v90[3];
            if (v92 >= v91 >> 1)
              v147 = sub_22A62F0EC((_QWORD *)(v91 > 1), v92 + 1, 1, v90);
            v93 = v143;
            v94 = v144;
            v95 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v142, v143);
            MEMORY[0x24BDAC7A8](v95);
            v97 = (char *)&v108 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v98 + 16))(v97);
            sub_22A69874C(v92, (uint64_t)v97, (uint64_t *)&v147, v93, v94);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v142);
          }
          else
          {
            sub_22A629860((uint64_t)&v142, (uint64_t *)&unk_255B01090);
          }
          v89 += 40;
          --v88;
        }
        while (v88);
        swift_bridgeObjectRelease_n();
        v81 = (void (*)(uint64_t, char *))v147;
      }
      else
      {
        swift_bridgeObjectRelease();
        v81 = (void (*)(uint64_t, char *))MEMORY[0x24BEE4AF8];
      }
      v99 = (uint64_t)v110;
      *v110 = v108;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRelease();
      v100 = (uint64_t)v111;
      v101 = v109;
      *v111 = v109;
      swift_storeEnumTagMultiPayload();
      sub_22A635054(v99, v100);
      v103 = v102;
      sub_22A633AE8(v100, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
      sub_22A633AE8(v99, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
      if ((v103 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
        v104 = swift_allocObject();
        *(_OWORD *)(v104 + 16) = xmmword_22A6A77C0;
        v105 = v131;
        *(_QWORD *)(v104 + 56) = v131;
        *(_QWORD *)(v104 + 64) = sub_22A6354A0((unint64_t *)&qword_255AFF1B0, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (uint64_t)&unk_22A6A7D70);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v104 + 32));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v141 + 16))(boxed_opaque_existential_1, v124, v140);
        *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v105 + 20)) = v101;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for RenderLayerActionType();
        swift_storeEnumTagMultiPayload();
        v146 = v104;
        sub_22A693AF0((uint64_t)v81);
        v81 = (void (*)(uint64_t, char *))v146;
      }
      v137((uint64_t)v121, v122);
    }
  }
  else
  {
    v136 = v34;
    v137 = v37;
    v64 = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B003C0);
    v65 = v57;
    v66 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_22A6A77C0;
    v130 = v67;
    v68 = (char *)(v67 + v66);
    v138 = *(uint64_t **)(v24 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v138)(v68, v124, v23);
    v69 = *(int *)(v4 + 20);
    v120 = v68;
    *(_QWORD *)&v68[v69] = v65;
    swift_storeEnumTagMultiPayload();
    v135 = (char *)type metadata accessor for RenderLayerActionType();
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v145 = v64;
    if (*(_QWORD *)(v58 + 16))
    {
      v70 = v58 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
      v133 = *(char **)(v132 + 72);
      swift_bridgeObjectRetain_n();
      sub_22A6354E0(v70, (uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
      v71 = (char *)&loc_22A670484 + dword_22A671314[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    v86 = sub_22A6666C8(v130);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v146 = v86;
    sub_22A693AF0(v64);
    return (void (*)(uint64_t, char *))v146;
  }
  return v81;
}

uint64_t sub_22A671334(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  void (*v18)(_QWORD, _QWORD, _QWORD);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, char *);
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;

  v31 = a2;
  v32 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (uint64_t)&v27 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003E8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v29 = v11;
  v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v11 + 16);
  v18 = v28;
  v27 = a1;
  v28 = v17;
  v17(v13, v18, v10);
  sub_22A671D30(&qword_255B003F0, &qword_255B003B8, MEMORY[0x24BEE3148]);
  sub_22A6A5E38();
  v19 = &v16[*(int *)(v14 + 36)];
  sub_22A671D30(&qword_255B003F8, &qword_255B003B8, MEMORY[0x24BEE3150]);
  v20 = *(_QWORD *)v19;
  sub_22A6A5F40();
  if (v20 == v33[0])
  {
    v21 = v27;
LABEL_6:
    sub_22A629860((uint64_t)v16, &qword_255B003E8);
  }
  else
  {
    while (1)
    {
      v22 = (void (*)(_QWORD *, _QWORD))sub_22A6A5F58();
      v23 = v30;
      sub_22A671D70(v24, v30);
      v22(v33, 0);
      v28(v13, v16, v10);
      sub_22A6A5F4C();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v10);
      sub_22A62981C(v23, (uint64_t)v8, &qword_255B003E0);
      v21 = v32;
      v31(&v34, v8);
      if (v3)
        break;
      sub_22A629860((uint64_t)v8, &qword_255B003E0);
      v25 = *(_QWORD *)v19;
      sub_22A6A5F40();
      if (v25 == v33[0])
      {
        v21 = v34;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_22A629860((uint64_t)v8, &qword_255B003E0);
    sub_22A629860((uint64_t)v16, &qword_255B003E8);
  }
  return v21;
}

uint64_t sub_22A671614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_22A6A5C40();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  ContainerContent.Child.id.getter();
  ContainerContent.Child.id.getter();
  v7 = sub_22A6A5C28();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_22A6716E0(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD **v70;

  v66 = (char *)a2;
  v57 = a4;
  v61 = a3;
  v70 = a1;
  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  v64 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v56 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v56 - v12;
  v14 = type metadata accessor for RenderLayerAction();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v58 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (unint64_t *)((char *)&v56 - v17);
  v19 = type metadata accessor for ContainerContent.Child();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v56 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003E0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t *)((char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22A671D70((uint64_t)v66, (uint64_t)v28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00400);
    sub_22A62F974((uint64_t)v28 + *(int *)(v29 + 48), (uint64_t)v25);
    ContainerContent.Child.id.getter();
    type metadata accessor for RenderLayerActionType();
    swift_storeEnumTagMultiPayload();
    v30 = v70;
    v31 = *v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v30 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v31 = sub_22A62F0EC(0, v31[2] + 1, 1, v31);
      *v30 = v31;
    }
    v34 = v31[2];
    v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      v31 = sub_22A62F0EC((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
      *v30 = v31;
    }
    v68 = v14;
    v69 = sub_22A6354A0((unint64_t *)&qword_255AFF1B0, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (uint64_t)&unk_22A6A7D70);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
    sub_22A6354E0((uint64_t)v18, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    v31[2] = v34 + 1;
    sub_22A628A38(&v67, (uint64_t)&v31[5 * v34 + 4]);
LABEL_18:
    sub_22A633AE8((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    v45 = (uint64_t)v25;
    return sub_22A633AE8(v45, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
  }
  v18 = (unint64_t *)v70;
  v36 = *v28;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00400);
  v38 = (uint64_t)v28 + *(int *)(v37 + 48);
  v39 = (char *)v28 + *(int *)(v37 + 64);
  v40 = *(_QWORD *)v39;
  v41 = (unint64_t *)v39[8];
  sub_22A62F974(v38, (uint64_t)v23);
  if ((_DWORD)v41 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1, 1, v19);
    v42 = (uint64_t)v62;
    goto LABEL_12;
  }
  if ((v40 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v40 >= *(_QWORD *)(v61 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v59;
  sub_22A6354E0(v61+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v40, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
  v42 = (uint64_t)v60;
LABEL_12:
  ContainerContent.Child.id.getter();
  v43 = v65;
  sub_22A69CD38((uint64_t)v13, v42);
  if (!v43)
  {
    v46 = v44;
    v65 = v36;
    v66 = v23;
    v47 = v63;
    v48 = v64;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v42, v63);
    sub_22A629860((uint64_t)v13, &qword_255B003B0);
    v41 = v18;
    sub_22A693AF0(v46);
    v18 = (unint64_t *)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v58, v57, v47);
    v49 = (char *)v18 + *(int *)(v14 + 20);
    v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_255AFF278) + 48);
    ContainerContent.Child.id.getter();
    *(_QWORD *)&v49[v50] = v65;
    type metadata accessor for RenderLayerActionType();
    swift_storeEnumTagMultiPayload();
    v40 = *v41;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    *v41 = v40;
    if ((v51 & 1) != 0)
    {
LABEL_15:
      v53 = *(_QWORD *)(v40 + 16);
      v52 = *(_QWORD *)(v40 + 24);
      if (v53 >= v52 >> 1)
      {
        v40 = (unint64_t)sub_22A62F0EC((_QWORD *)(v52 > 1), v53 + 1, 1, (_QWORD *)v40);
        *v41 = v40;
      }
      v68 = v14;
      v69 = sub_22A6354A0((unint64_t *)&qword_255AFF1B0, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerAction, (uint64_t)&unk_22A6A7D70);
      v54 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
      sub_22A6354E0((uint64_t)v18, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
      *(_QWORD *)(v40 + 16) = v53 + 1;
      sub_22A628A38(&v67, v40 + 40 * v53 + 32);
      v25 = v66;
      goto LABEL_18;
    }
LABEL_22:
    v40 = (unint64_t)sub_22A62F0EC(0, *(_QWORD *)(v40 + 16) + 1, 1, (_QWORD *)v40);
    *v41 = v40;
    goto LABEL_15;
  }
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v42, v63);
  sub_22A629860((uint64_t)v13, &qword_255B003B0);
  v45 = (uint64_t)v23;
  return sub_22A633AE8(v45, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
}

void (*sub_22A671C98(__int128 *a1, uint64_t a2))(uint64_t, char *)
{
  uint64_t *v2;
  __int128 v4;
  uint64_t v5;

  v5 = *v2;
  v4 = *a1;
  return sub_22A66FB90(&v4, a2);
}

uint64_t sub_22A671CD4(_QWORD **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A6716E0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_22A671CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerContent.Child();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A671D30(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2DF32C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A671D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B003E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for RemoteInspectorNodeRegistryEntry(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for RemoteInspectorNodeRegistryEntry(uint64_t a1, uint64_t a2)
{
  int v3;
  __int128 v4;

  v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  return a1;
}

uint64_t assignWithCopy for RemoteInspectorNodeRegistryEntry(uint64_t a1, uint64_t a2)
{
  int v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v3;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RemoteInspectorNodeRegistryEntry(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInspectorNodeRegistryEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInspectorNodeRegistryEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInspectorNodeRegistryEntry()
{
  return &type metadata for RemoteInspectorNodeRegistryEntry;
}

id sub_22A6720CC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = *(unsigned int *)v0;
  v4 = v0 + 2;
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v5, v6);
  v7 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_22A6A5D60();
  v9 = 1;
  v10 = objc_msgSend(v2, sel_nodeWithIdentifier_name_type_value_, v3, v7, 1, v8);

  v11 = v1[5];
  v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 72))(v11, v12);
  sub_22A672250();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_22A6A5E50();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAttributes_, v13);

  if (*((_BYTE *)v1 + 8) == 1)
  {
    v15 = v1[5];
    v14 = v1[6];
    __swift_project_boxed_opaque_existential_1(v4, v15);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 56))(v15, v14);
  }
  objc_msgSend(v10, sel_setChildNodeCount_, v9);
  return v10;
}

_QWORD *sub_22A672250()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  _QWORD *v24[2];
  _BYTE v25[48];

  v0 = swift_bridgeObjectRetain();
  v1 = sub_22A67368C(v0);
  swift_bridgeObjectRelease();
  v24[0] = v1;
  sub_22A6725A8(v24);
  v2 = v24[0][2];
  if (v2)
  {
    v3 = v24[0] + 4;
    swift_retain();
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_22A672610((uint64_t)v3, (uint64_t)v24);
      v13 = v24[0];
      v12 = v24[1];
      sub_22A633AAC((uint64_t)v25, (uint64_t)v23);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_22A62F9FC(0, v4[2] + 1, 1, v4);
      v15 = v4[2];
      v14 = v4[3];
      if (v15 >= v14 >> 1)
        v4 = sub_22A62F9FC((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
      v4[2] = v15 + 1;
      v16 = &v4[2 * v15];
      v16[4] = v13;
      v16[5] = v12;
      sub_22A649524((uint64_t)v23);
      sub_22A633AAC((uint64_t)v25, (uint64_t)v23);
      if (swift_dynamicCast())
      {
        v7 = v22;
        v18 = v4[2];
        v17 = v4[3];
        if (v18 >= v17 >> 1)
          v4 = sub_22A62F9FC((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
        v4[2] = v18 + 1;
        v19 = &v4[2 * v18];
        v19[4] = v21;
        v11 = v19 + 4;
      }
      else
      {
        sub_22A633AAC((uint64_t)v25, (uint64_t)v23);
        v5 = sub_22A6A5DC0();
        v7 = v6;
        v9 = v4[2];
        v8 = v4[3];
        if (v9 >= v8 >> 1)
          v4 = sub_22A62F9FC((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
        v4[2] = v9 + 1;
        v10 = &v4[2 * v9];
        v10[4] = v5;
        v11 = v10 + 4;
      }
      v11[1] = v7;
      sub_22A672658((uint64_t)v24);
      v3 += 7;
      --v2;
    }
    while (v2);
    swift_release_n();
  }
  else
  {
    swift_release();
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v4;
}

id sub_22A6724A4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0;
  v2 = *(unsigned int *)(v0 + 4);
  v3 = (void *)objc_opt_self();
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
  v6 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v8, v7);
  v9 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend(v3, sel_nodeWithIdentifier_name_type_value_, v2, v6, 3, v9);

  return v1;
}

uint64_t sub_22A6725A8(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_22A698738(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_22A672698(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_22A672610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A672658(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A672698(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *__dst;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v2 = a1[1];
  result = sub_22A6A61A4();
  if (result >= v2)
  {
    if (v2 < 0)
      goto LABEL_149;
    if (v2)
      return sub_22A672E3C(0, v2, 1, a1);
    return result;
  }
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  if (v2 < -1)
    goto LABEL_157;
  v105 = result;
  v112 = v1;
  if (v2 < 2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v2 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v10 = a1;
LABEL_115:
      v95 = v9;
      v104 = v7;
      if (v11 >= 2)
      {
        v96 = *v10;
        do
        {
          v97 = v11 - 2;
          if (v11 < 2)
            goto LABEL_144;
          if (!v96)
            goto LABEL_156;
          v98 = v95;
          v99 = *(_QWORD *)&v95[16 * v97 + 32];
          v100 = *(_QWORD *)&v95[16 * v11 + 24];
          v101 = v112;
          sub_22A672F80((char *)(v96 + 56 * v99), (char *)(v96 + 56 * *(_QWORD *)&v95[16 * v11 + 16]), v96 + 56 * v100, __dst);
          v112 = v101;
          if (v101)
            break;
          if (v100 < v99)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_22A6986AC((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_146;
          v102 = &v98[16 * v97 + 32];
          *(_QWORD *)v102 = v99;
          *((_QWORD *)v102 + 1) = v100;
          v103 = *((_QWORD *)v98 + 2);
          if (v11 > v103)
            goto LABEL_147;
          memmove(&v98[16 * v11 + 16], &v98[16 * v11 + 32], 16 * (v103 - v11));
          v95 = v98;
          *((_QWORD *)v98 + 2) = v103 - 1;
          v11 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v5 = v4 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC8);
    v6 = sub_22A6A5E8C();
    *(_QWORD *)(v6 + 16) = v5;
    v104 = v6;
    __dst = (char *)(v6 + 32);
  }
  v8 = 0;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v10 = a1;
  while (1)
  {
    v12 = v8++;
    if (v8 < v2)
    {
      v13 = *v10;
      sub_22A672610(*v10 + 56 * v8, (uint64_t)&v110);
      sub_22A672610(v13 + 56 * v12, (uint64_t)&v108);
      if (v110 == v108 && v111 == v109)
        v15 = 0;
      else
        v15 = sub_22A6A61D4();
      sub_22A672658((uint64_t)&v108);
      sub_22A672658((uint64_t)&v110);
      v8 = v12 + 2;
      if (v12 + 2 < v2)
      {
        v16 = v13;
        v17 = v13 + 56 * v12 + 56;
        while (1)
        {
          sub_22A672610(v17 + 56, (uint64_t)&v110);
          sub_22A672610(v17, (uint64_t)&v108);
          v18 = v110 == v108 && v111 == v109;
          v19 = v18 ? 0 : sub_22A6A61D4();
          sub_22A672658((uint64_t)&v108);
          sub_22A672658((uint64_t)&v110);
          if (((v15 ^ v19) & 1) != 0)
            break;
          ++v8;
          v17 += 56;
          if (v2 == v8)
          {
            v8 = v2;
            break;
          }
        }
        v13 = v16;
      }
      if ((v15 & 1) != 0)
      {
        if (v8 < v12)
          goto LABEL_150;
        if (v12 < v8)
        {
          v20 = v13 + 56 * v8 - 56;
          v21 = (__int128 *)(v13 + 56 * v12);
          v22 = v8;
          v23 = v12;
          do
          {
            if (v23 != --v22)
            {
              if (!v13)
                goto LABEL_155;
              v24 = *((_QWORD *)v21 + 6);
              v26 = v21[1];
              v25 = v21[2];
              v27 = *v21;
              v29 = *(_OWORD *)(v20 + 16);
              v28 = *(_OWORD *)(v20 + 32);
              v30 = *(_OWORD *)v20;
              *((_QWORD *)v21 + 6) = *(_QWORD *)(v20 + 48);
              v21[1] = v29;
              v21[2] = v28;
              *v21 = v30;
              *(_OWORD *)v20 = v27;
              *(_OWORD *)(v20 + 16) = v26;
              *(_OWORD *)(v20 + 32) = v25;
              *(_QWORD *)(v20 + 48) = v24;
            }
            ++v23;
            v20 -= 56;
            v21 = (__int128 *)((char *)v21 + 56);
          }
          while (v23 < v22);
        }
      }
    }
    if (v8 >= v2)
      goto LABEL_64;
    if (__OFSUB__(v8, v12))
      goto LABEL_148;
    if (v8 - v12 >= v105)
      goto LABEL_64;
    if (__OFADD__(v12, v105))
      goto LABEL_151;
    if (v12 + v105 < v2)
      v2 = v12 + v105;
    if (v2 < v12)
      break;
    if (v8 != v2)
    {
      v31 = 56 * v8;
      do
      {
        v32 = v12;
        v33 = v31;
        while (1)
        {
          v34 = *v10 + v33;
          sub_22A672610(v34, (uint64_t)&v110);
          sub_22A672610(v34 - 56, (uint64_t)&v108);
          if (v110 == v108 && v111 == v109)
            break;
          v36 = sub_22A6A61D4();
          sub_22A672658((uint64_t)&v108);
          sub_22A672658((uint64_t)&v110);
          if ((v36 & 1) == 0)
            goto LABEL_53;
          if (!*v10)
            goto LABEL_153;
          v37 = *v10 + v33;
          v38 = *(_QWORD *)(v37 + 48);
          v40 = *(_OWORD *)(v37 + 16);
          v39 = *(_OWORD *)(v37 + 32);
          v41 = *(_OWORD *)v37;
          v42 = *(_OWORD *)(v37 - 40);
          *(_OWORD *)v37 = *(_OWORD *)(v37 - 56);
          *(_OWORD *)(v37 + 16) = v42;
          *(_OWORD *)(v37 + 32) = *(_OWORD *)(v37 - 24);
          *(_QWORD *)(v37 + 48) = *(_QWORD *)(v37 - 8);
          *(_OWORD *)(v37 - 56) = v41;
          *(_OWORD *)(v37 - 40) = v40;
          *(_OWORD *)(v37 - 24) = v39;
          v33 -= 56;
          ++v32;
          *(_QWORD *)(v37 - 8) = v38;
          if (v8 == v32)
            goto LABEL_53;
        }
        sub_22A672658((uint64_t)&v108);
        sub_22A672658((uint64_t)&v110);
LABEL_53:
        ++v8;
        v31 += 56;
      }
      while (v8 != v2);
      v8 = v2;
    }
LABEL_64:
    if (v8 < v12)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_22A6982F4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v44 = *((_QWORD *)v9 + 2);
    v43 = *((_QWORD *)v9 + 3);
    v11 = v44 + 1;
    if (v44 >= v43 >> 1)
      v9 = sub_22A6982F4((char *)(v43 > 1), v44 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v11;
    v45 = v9 + 32;
    v46 = &v9[16 * v44 + 32];
    *(_QWORD *)v46 = v12;
    *((_QWORD *)v46 + 1) = v8;
    if (v44)
    {
      v10 = a1;
      while (1)
      {
        v47 = v11 - 1;
        if (v11 >= 4)
        {
          v52 = &v45[16 * v11];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_132;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_133;
          v59 = v11 - 2;
          v60 = &v45[16 * v11 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_135;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_138;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_142;
            v75 = v50 < v85;
            goto LABEL_102;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v76 = *((_QWORD *)v9 + 4);
            v77 = *((_QWORD *)v9 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_96;
          }
          v49 = *((_QWORD *)v9 + 4);
          v48 = *((_QWORD *)v9 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_134;
        v59 = v11 - 2;
        v65 = &v45[16 * v11 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_137;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_140;
        if (__OFADD__(v69, v74))
          goto LABEL_141;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_102:
          if (v75)
            v47 = v59;
          goto LABEL_104;
        }
LABEL_96:
        if ((v70 & 1) != 0)
          goto LABEL_136;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_139;
        if (v81 < v69)
          goto LABEL_15;
LABEL_104:
        v86 = v47 - 1;
        if (v47 - 1 >= v11)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        v87 = *v10;
        if (!*v10)
          goto LABEL_154;
        v88 = v9;
        v89 = &v45[16 * v86];
        v90 = *(_QWORD *)v89;
        v91 = &v45[16 * v47];
        v92 = *((_QWORD *)v91 + 1);
        v93 = v112;
        sub_22A672F80((char *)(v87 + 56 * *(_QWORD *)v89), (char *)(v87 + 56 * *(_QWORD *)v91), v87 + 56 * v92, __dst);
        v112 = v93;
        if (v93)
          goto LABEL_112;
        if (v92 < v90)
          goto LABEL_129;
        if (v47 > *((_QWORD *)v88 + 2))
          goto LABEL_130;
        *(_QWORD *)v89 = v90;
        *(_QWORD *)&v45[16 * v86 + 8] = v92;
        v94 = *((_QWORD *)v88 + 2);
        if (v47 >= v94)
          goto LABEL_131;
        v9 = v88;
        v11 = v94 - 1;
        memmove(&v45[16 * v47], v91 + 16, 16 * (v94 - 1 - v47));
        *((_QWORD *)v88 + 2) = v94 - 1;
        v75 = v94 > 2;
        v10 = a1;
        if (!v75)
          goto LABEL_15;
      }
    }
    v11 = 1;
    v10 = a1;
LABEL_15:
    v2 = v10[1];
    if (v8 >= v2)
    {
      v7 = v104;
      goto LABEL_115;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = sub_22A6A6120();
  __break(1u);
  return result;
}

uint64_t sub_22A672E3C(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD v20[7];
  _QWORD v21[8];

  if (a3 != a2)
  {
    v5 = a3;
    v7 = result;
    v8 = 56 * a3;
LABEL_6:
    v9 = v7;
    v10 = v8;
    while (1)
    {
      v11 = *a4 + v10;
      sub_22A672610(v11, (uint64_t)v21);
      sub_22A672610(v11 - 56, (uint64_t)v20);
      if (v21[0] == v20[0] && v21[1] == v20[1])
      {
        sub_22A672658((uint64_t)v20);
        result = sub_22A672658((uint64_t)v21);
LABEL_5:
        ++v5;
        v8 += 56;
        if (v5 == a2)
          return result;
        goto LABEL_6;
      }
      v13 = sub_22A6A61D4();
      sub_22A672658((uint64_t)v20);
      result = sub_22A672658((uint64_t)v21);
      if ((v13 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v14 = *a4 + v10;
      v15 = *(_QWORD *)(v14 + 48);
      v17 = *(_OWORD *)(v14 + 16);
      v16 = *(_OWORD *)(v14 + 32);
      v18 = *(_OWORD *)v14;
      v19 = *(_OWORD *)(v14 - 40);
      *(_OWORD *)v14 = *(_OWORD *)(v14 - 56);
      *(_OWORD *)(v14 + 16) = v19;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v14 - 24);
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(v14 - 8);
      *(_OWORD *)(v14 - 56) = v18;
      *(_OWORD *)(v14 - 40) = v17;
      *(_OWORD *)(v14 - 24) = v16;
      v10 -= 56;
      ++v9;
      *(_QWORD *)(v14 - 8) = v15;
      if (v5 == v9)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22A672F80(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  _OWORD *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  char v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v44 = __src;
  v43 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[56 * v11] <= __dst)
        memmove(__dst, a2, 56 * v11);
      v24 = &v4[56 * v11];
      v42 = v24;
      v44 = v6;
      if (__src < v6 && v10 >= 56)
      {
        v25 = a3 - 56;
        do
        {
          sub_22A672610((uint64_t)(v24 - 56), (uint64_t)&v40);
          v29 = v6 - 56;
          sub_22A672610((uint64_t)(v6 - 56), (uint64_t)&v38);
          if (v40 == v38 && v41 == v39)
            v31 = 0;
          else
            v31 = sub_22A6A61D4();
          v32 = (char *)(v25 + 56);
          sub_22A672658((uint64_t)&v38);
          sub_22A672658((uint64_t)&v40);
          if ((v31 & 1) != 0)
          {
            if (v32 != v6 || v25 >= (unint64_t)v6)
            {
              v26 = *(_OWORD *)v29;
              v27 = *(_OWORD *)(v6 - 40);
              v28 = *(_OWORD *)(v6 - 24);
              *(_QWORD *)(v25 + 48) = *((_QWORD *)v6 - 1);
              *(_OWORD *)(v25 + 16) = v27;
              *(_OWORD *)(v25 + 32) = v28;
              *(_OWORD *)v25 = v26;
            }
            v44 -= 56;
            v24 = v42;
            if (v42 <= v4)
              break;
          }
          else
          {
            v33 = v42;
            v24 = v42 - 56;
            v42 -= 56;
            if (v32 < v33 || v25 >= (unint64_t)v33 || v32 != v33)
            {
              v34 = *(_OWORD *)v24;
              v35 = *(_OWORD *)(v33 - 40);
              v36 = *(_OWORD *)(v33 - 24);
              *(_QWORD *)(v25 + 48) = *((_QWORD *)v33 - 1);
              *(_OWORD *)(v25 + 16) = v35;
              *(_OWORD *)(v25 + 32) = v36;
              *(_OWORD *)v25 = v34;
            }
            v29 = v6;
            if (v24 <= v4)
              break;
          }
          v25 -= 56;
          v6 = v29;
        }
        while (v29 > __src);
      }
LABEL_51:
      sub_22A6985EC((void **)&v44, (const void **)&v43, &v42);
      return 1;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[56 * v9] <= __dst)
      memmove(__dst, __src, 56 * v9);
    v12 = (unint64_t)&v4[56 * v9];
    v42 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      while (1)
      {
        sub_22A672610((uint64_t)v6, (uint64_t)&v40);
        sub_22A672610((uint64_t)v4, (uint64_t)&v38);
        if (v40 == v38 && v41 == v39)
          break;
        v14 = sub_22A6A61D4();
        sub_22A672658((uint64_t)&v38);
        sub_22A672658((uint64_t)&v40);
        if ((v14 & 1) == 0)
          goto LABEL_18;
        v15 = v44;
        v16 = (unint64_t)(v6 + 56);
        if (v44 >= v6 && (unint64_t)v44 < v16 && v44 == v6)
        {
          v15 = v6;
        }
        else
        {
          v17 = *(_OWORD *)v6;
          v18 = *((_OWORD *)v6 + 1);
          v19 = *((_OWORD *)v6 + 2);
          *((_QWORD *)v44 + 6) = *((_QWORD *)v6 + 6);
          v15[1] = v18;
          v15[2] = v19;
          *v15 = v17;
        }
LABEL_22:
        v44 = (char *)v15 + 56;
        v4 = v43;
        if ((unint64_t)v43 < v12)
        {
          v6 = (char *)v16;
          if (v16 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_22A672658((uint64_t)&v38);
      sub_22A672658((uint64_t)&v40);
LABEL_18:
      v15 = v44;
      v20 = v43 + 56;
      if (v44 != v43 || v44 >= v20)
      {
        v21 = *(_OWORD *)v43;
        v22 = *((_OWORD *)v43 + 1);
        v23 = *((_OWORD *)v43 + 2);
        *((_QWORD *)v44 + 6) = *((_QWORD *)v43 + 6);
        v15[1] = v22;
        v15[2] = v23;
        *v15 = v21;
      }
      v43 = v20;
      v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t TextContent.color.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v2 = sub_22A67359C(v1);
  swift_bridgeObjectRelease();
  v9 = v2;
  sub_22A673534((uint64_t *)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v3 = v9[2];
  if (v3)
  {
    v4 = (char *)v9 + 52;
    while (*v4 != 5)
    {
      v4 += 40;
      if (!--v3)
        goto LABEL_5;
    }
    v5 = *(_QWORD *)(v4 - 20);
    v6 = *(_QWORD *)(v4 - 12);
    v7 = *((unsigned int *)v4 - 1);
    sub_22A635434(v5, v6, v7, 5);
    sub_22A635434(v5, v6, v7, 5);
    swift_release();
  }
  else
  {
LABEL_5:
    swift_release();
    return 0x3F8000003F800000;
  }
  return v5;
}

uint64_t TextContent.font.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _QWORD *v11;

  v3 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v4 = sub_22A67359C(v3);
  swift_bridgeObjectRelease();
  v11 = v4;
  sub_22A673534((uint64_t *)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v5 = v11[2];
  if (v5)
  {
    v6 = (char *)v11 + 52;
    while (*v6 != 4)
    {
      v6 += 40;
      if (!--v5)
        goto LABEL_5;
    }
    v8 = *(_QWORD *)(v6 - 20);
    v9 = *(_QWORD *)(v6 - 12);
    v10 = *((_DWORD *)v6 - 1);
    sub_22A635434(v8, v9, v10, 4);
    result = swift_release();
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 16) = v10;
  }
  else
  {
LABEL_5:
    result = swift_release();
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = 1096810496;
  }
  return result;
}

uint64_t sub_22A673534(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22A698724(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_22A673784(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_22A67359C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_22A6742EC((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_22A633AA4();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_22A67368C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFBC0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  v5 = sub_22A674508(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_22A633AA4();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_22A673784(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *__dst;
  uint64_t v124;

  v3 = a1[1];
  result = sub_22A6A61A4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_155;
    if (v3)
      return sub_22A673F20(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_165;
  v6 = result;
  v124 = v1;
  v117 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v59 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v108 = v12;
      v119 = v9;
      if (v59 >= 2)
      {
        v109 = *v117;
        do
        {
          v110 = v59 - 2;
          if (v59 < 2)
            goto LABEL_149;
          if (!v109)
            goto LABEL_164;
          v111 = v108;
          v112 = *(_QWORD *)&v108[16 * v110 + 32];
          v113 = *(_QWORD *)&v108[16 * v59 + 24];
          sub_22A673FE4((char *)(v109 + 40 * v112), (char *)(v109 + 40 * *(_QWORD *)&v108[16 * v59 + 16]), v109 + 40 * v113, __dst);
          if (v124)
            break;
          if (v113 < v112)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_22A6986AC((uint64_t)v111);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_151;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v59 > v115)
            goto LABEL_152;
          memmove(&v111[16 * v59 + 16], &v111[16 * v59 + 32], 16 * (v115 - v59));
          v108 = v111;
          *((_QWORD *)v111 + 2) = v115 - 1;
          v59 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v119 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v119 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_22A6A5E8C();
    *(_QWORD *)(v8 + 16) = v7;
    v119 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v118 = *a1 + 32;
  v116 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v120 = v6;
  v121 = v3;
  v122 = v11;
  while (1)
  {
    v13 = v10++;
    if (v10 >= v3)
      goto LABEL_43;
    v14 = *(_QWORD *)(v11 + 40 * v10 + 24);
    v15 = v11 + 40 * v13;
    v16 = *(_QWORD *)(v15 + 32);
    if (v14 >= v16)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_40;
      v21 = 0;
      goto LABEL_22;
    }
    v17 = *(_QWORD *)(v11 + 40 * v10 + 32);
    v73 = __OFSUB__(v17, v14);
    v18 = v17 - v14;
    if (v73)
      goto LABEL_156;
    v19 = *(_QWORD *)(v15 + 24);
    v73 = __OFSUB__(v16, v19);
    v20 = v16 - v19;
    if (v73)
      break;
    v21 = v20 < v18;
    v22 = v13 + 2;
    if (v13 + 2 >= v3)
    {
LABEL_32:
      v10 = v22;
      if (v21)
        goto LABEL_33;
      goto LABEL_43;
    }
LABEL_22:
    if (v3 <= v22 + 1)
      v23 = v22 + 1;
    else
      v23 = v3;
    v24 = (_QWORD *)(v118 + 40 * v22);
    do
    {
      v25 = *(v24 - 1);
      v26 = *(_QWORD *)(v11 + 40 * v10 + 32);
      if (v25 >= v26)
      {
        if (v21)
          goto LABEL_33;
      }
      else
      {
        if (__OFSUB__(*v24, v25))
          goto LABEL_146;
        v73 = __OFSUB__(v26, v14);
        v27 = v26 - v14;
        if (v73)
        {
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (((v21 ^ (v27 >= *v24 - v25)) & 1) == 0)
          goto LABEL_32;
      }
      v10 = v22;
      v24 += 5;
      v14 = v25;
      ++v22;
    }
    while (v22 < v3);
    v22 = v23;
    v10 = v23;
    if (v21)
    {
LABEL_33:
      if (v22 < v13)
        goto LABEL_160;
      if (v13 < v22)
      {
        v28 = 40 * v22;
        v29 = 40 * v13;
        v30 = v22;
        v31 = v13;
        do
        {
          if (v31 != --v30)
          {
            if (!v11)
              goto LABEL_163;
            v32 = v11 + v29;
            v33 = *(_DWORD *)(v11 + v29 + 16);
            v34 = v11 + v28;
            v35 = *(_BYTE *)(v11 + v29 + 20);
            v36 = *(_OWORD *)(v11 + v29);
            v37 = *(_OWORD *)(v11 + v29 + 24);
            v38 = *(_QWORD *)(v11 + v28 - 8);
            v39 = *(_OWORD *)(v11 + v28 - 24);
            *(_OWORD *)v32 = *(_OWORD *)(v11 + v28 - 40);
            *(_OWORD *)(v32 + 16) = v39;
            *(_QWORD *)(v32 + 32) = v38;
            *(_OWORD *)(v34 - 40) = v36;
            *(_DWORD *)(v34 - 24) = v33;
            *(_BYTE *)(v34 - 20) = v35;
            *(_OWORD *)(v34 - 16) = v37;
          }
          ++v31;
          v28 -= 40;
          v29 += 40;
        }
        while (v31 < v30);
      }
LABEL_40:
      v10 = v22;
      if (v22 >= v3)
        goto LABEL_65;
      goto LABEL_44;
    }
LABEL_43:
    if (v10 >= v3)
      goto LABEL_65;
LABEL_44:
    if (__OFSUB__(v10, v13))
      goto LABEL_154;
    if (v10 - v13 < v6)
    {
      v40 = v13 + v6;
      if (__OFADD__(v13, v6))
        goto LABEL_158;
      if (v40 >= v3)
        v40 = v3;
      if (v40 < v13)
        goto LABEL_159;
      if (v10 != v40)
      {
        v41 = v116 + 40 * v10;
        do
        {
          v42 = v11 + 40 * v10;
          v43 = *(_QWORD *)(v42 + 24);
          v44 = *(_QWORD *)(v42 + 32);
          v45 = __OFSUB__(v44, v43);
          v46 = v13;
          v47 = v41;
          while (1)
          {
            v48 = *(_QWORD *)v47;
            if (v43 >= *(_QWORD *)v47)
              break;
            if (v45)
            {
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            v49 = *(_QWORD *)(v47 - 8);
            v73 = __OFSUB__(v48, v49);
            v50 = v48 - v49;
            if (v73)
              goto LABEL_131;
            if (v50 < v44 - v43)
            {
              if (!v11)
                goto LABEL_161;
              v51 = v47 + 8;
              v52 = *(_DWORD *)(v47 + 24);
              v53 = *(_BYTE *)(v47 + 28);
              v54 = *(_OWORD *)(v47 + 8);
              v55 = *(_OWORD *)(v47 - 16);
              *(_OWORD *)(v47 + 8) = *(_OWORD *)(v47 - 32);
              *(_OWORD *)(v47 + 24) = v55;
              v56 = *(_QWORD *)v47;
              *(_OWORD *)(v47 - 32) = v54;
              *(_DWORD *)(v47 - 16) = v52;
              *(_BYTE *)(v47 - 12) = v53;
              *(_QWORD *)(v47 - 8) = v43;
              *(_QWORD *)v47 = v44;
              v47 -= 40;
              ++v46;
              *(_QWORD *)(v51 + 32) = v56;
              if (v10 != v46)
                continue;
            }
            break;
          }
          ++v10;
          v41 += 40;
        }
        while (v10 != v40);
        v10 = v40;
      }
    }
LABEL_65:
    if (v10 < v13)
      goto LABEL_153;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_22A6982F4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v58 = *((_QWORD *)v12 + 2);
    v57 = *((_QWORD *)v12 + 3);
    v59 = v58 + 1;
    v11 = v122;
    if (v58 >= v57 >> 1)
    {
      v107 = sub_22A6982F4((char *)(v57 > 1), v58 + 1, 1, v12);
      v11 = v122;
      v12 = v107;
    }
    *((_QWORD *)v12 + 2) = v59;
    v60 = v12 + 32;
    v61 = &v12[16 * v58 + 32];
    *(_QWORD *)v61 = v13;
    *((_QWORD *)v61 + 1) = v10;
    if (v58)
    {
      while (1)
      {
        v62 = v59 - 1;
        if (v59 >= 4)
        {
          v67 = &v60[16 * v59];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_136;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_137;
          v74 = v59 - 2;
          v75 = &v60[16 * v59 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_139;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_142;
          if (v79 >= v70)
          {
            v97 = &v60[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_148;
            v90 = v65 < v100;
            goto LABEL_102;
          }
        }
        else
        {
          if (v59 != 3)
          {
            v91 = *((_QWORD *)v12 + 4);
            v92 = *((_QWORD *)v12 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_96;
          }
          v64 = *((_QWORD *)v12 + 4);
          v63 = *((_QWORD *)v12 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_138;
        v74 = v59 - 2;
        v80 = &v60[16 * v59 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_141;
        v86 = &v60[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_144;
        if (__OFADD__(v84, v89))
          goto LABEL_145;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_102:
          if (v90)
            v62 = v74;
          goto LABEL_104;
        }
LABEL_96:
        if ((v85 & 1) != 0)
          goto LABEL_140;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_143;
        if (v96 < v84)
          goto LABEL_113;
LABEL_104:
        v101 = v62 - 1;
        if (v62 - 1 >= v59)
          goto LABEL_132;
        if (!v11)
          goto LABEL_162;
        v102 = &v60[16 * v101];
        v103 = *(_QWORD *)v102;
        v104 = &v60[16 * v62];
        v105 = *((_QWORD *)v104 + 1);
        sub_22A673FE4((char *)(v11 + 40 * *(_QWORD *)v102), (char *)(v11 + 40 * *(_QWORD *)v104), v11 + 40 * v105, __dst);
        if (v124)
          goto LABEL_115;
        if (v105 < v103)
          goto LABEL_133;
        if (v62 > *((_QWORD *)v12 + 2))
          goto LABEL_134;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v60[16 * v101 + 8] = v105;
        v106 = *((_QWORD *)v12 + 2);
        if (v62 >= v106)
          goto LABEL_135;
        v59 = v106 - 1;
        memmove(&v60[16 * v62], v104 + 16, 16 * (v106 - 1 - v62));
        *((_QWORD *)v12 + 2) = v106 - 1;
        v11 = v122;
        if (v106 <= 2)
          goto LABEL_113;
      }
    }
    v59 = 1;
LABEL_113:
    v6 = v120;
    v3 = v121;
    if (v10 >= v121)
    {
      v9 = v119;
      goto LABEL_118;
    }
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_22A6A6120();
  __break(1u);
  return result;
}

uint64_t sub_22A673F20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 40 * a3 - 8;
LABEL_5:
    v6 = v4 + 40 * a3;
    v7 = *(_QWORD *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 32);
    v9 = __OFSUB__(v8, v7);
    v10 = result;
    v11 = v5;
    while (1)
    {
      v12 = *(_QWORD *)v11;
      if (v7 >= *(_QWORD *)v11)
      {
LABEL_4:
        ++a3;
        v5 += 40;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (v9)
        break;
      v13 = *(_QWORD *)(v11 - 8);
      v14 = __OFSUB__(v12, v13);
      v15 = v12 - v13;
      if (v14)
        goto LABEL_17;
      if (v15 < v8 - v7)
      {
        if (!v4)
          goto LABEL_18;
        v16 = v11 + 8;
        v17 = *(_DWORD *)(v11 + 24);
        v18 = *(_BYTE *)(v11 + 28);
        v19 = *(_OWORD *)(v11 + 8);
        v20 = *(_OWORD *)(v11 - 16);
        *(_OWORD *)(v11 + 8) = *(_OWORD *)(v11 - 32);
        *(_OWORD *)(v11 + 24) = v20;
        v21 = *(_QWORD *)v11;
        *(_OWORD *)(v11 - 32) = v19;
        *(_DWORD *)(v11 - 16) = v17;
        *(_BYTE *)(v11 - 12) = v18;
        *(_QWORD *)(v11 - 8) = v7;
        *(_QWORD *)v11 = v8;
        v11 -= 40;
        ++v10;
        *(_QWORD *)(v16 + 32) = v21;
        if (a3 != v10)
          continue;
      }
      goto LABEL_4;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  return result;
}

uint64_t sub_22A673FE4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t result;
  char *v40;
  const void *v41;
  char *v42;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v42 = __src;
  v41 = __dst;
  if (v9 < v11)
  {
    if (v8 < -39)
      goto LABEL_51;
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[40 * v9];
    v40 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      v13 = v4;
      while (1)
      {
        v14 = *((_QWORD *)v6 + 3);
        v15 = *((_QWORD *)v13 + 4);
        if (v14 >= v15)
          goto LABEL_16;
        v16 = *((_QWORD *)v6 + 4);
        v17 = __OFSUB__(v16, v14);
        v18 = v16 - v14;
        if (v17)
          goto LABEL_49;
        v19 = *((_QWORD *)v13 + 3);
        v17 = __OFSUB__(v15, v19);
        v20 = v15 - v19;
        if (v17)
          goto LABEL_50;
        if (v20 >= v18)
        {
LABEL_16:
          v4 = v13 + 40;
          v22 = v13;
          v21 = v6;
          if (v7 == v13)
          {
            v13 += 40;
            if (v7 < v4)
              goto LABEL_21;
          }
          else
          {
            v13 += 40;
          }
        }
        else
        {
          v21 = v6 + 40;
          v22 = v6;
          if (v7 == v6 && v7 < v21)
            goto LABEL_21;
        }
        v23 = *(_OWORD *)v22;
        v24 = *((_OWORD *)v22 + 1);
        *((_QWORD *)v7 + 4) = *((_QWORD *)v22 + 4);
        *(_OWORD *)v7 = v23;
        *((_OWORD *)v7 + 1) = v24;
LABEL_21:
        v7 += 40;
        if (v13 < v12)
        {
          v6 = v21;
          if ((unint64_t)v21 < a3)
            continue;
        }
        v41 = v4;
        v42 = v7;
        break;
      }
    }
LABEL_46:
    sub_22A698534((void **)&v42, &v41, &v40);
    return 1;
  }
  if (v10 < -39)
    goto LABEL_51;
  if (__dst != a2 || &a2[40 * v11] <= __dst)
    memmove(__dst, a2, 40 * v11);
  v25 = &v4[40 * v11];
  v40 = v25;
  v42 = v6;
  if (v7 >= v6 || v10 < 40)
    goto LABEL_46;
  v26 = a3 - 40;
  while (1)
  {
    v27 = (char *)(v26 + 40);
    v28 = *((_QWORD *)v25 - 2);
    v29 = *((_QWORD *)v6 - 1);
    if (v28 >= v29)
      goto LABEL_40;
    v30 = *((_QWORD *)v25 - 1);
    v17 = __OFSUB__(v30, v28);
    v31 = v30 - v28;
    if (v17)
      break;
    v32 = *((_QWORD *)v6 - 2);
    v17 = __OFSUB__(v29, v32);
    v33 = v29 - v32;
    if (v17)
      goto LABEL_48;
    if (v33 < v31)
    {
      v34 = v6 - 40;
      if (v27 != v6 || v26 >= (unint64_t)v6)
      {
        v35 = *(_OWORD *)v34;
        v36 = *(_OWORD *)(v6 - 24);
        *(_QWORD *)(v26 + 32) = *((_QWORD *)v6 - 1);
        *(_OWORD *)v26 = v35;
        *(_OWORD *)(v26 + 16) = v36;
      }
      v42 = v6 - 40;
      if (v34 <= v7)
        goto LABEL_46;
      goto LABEL_45;
    }
LABEL_40:
    v40 = v25 - 40;
    if (v27 < v25 || v26 >= (unint64_t)v25 || v27 != v25)
    {
      v37 = *(_OWORD *)(v25 - 40);
      v38 = *(_OWORD *)(v25 - 24);
      *(_QWORD *)(v26 + 32) = *((_QWORD *)v25 - 1);
      *(_OWORD *)v26 = v37;
      *(_OWORD *)(v26 + 16) = v38;
    }
    v34 = v6;
    v25 -= 40;
    if (v6 <= v7)
      goto LABEL_46;
LABEL_45:
    v26 -= 40;
    v6 = v34;
    if (v25 <= v4)
      goto LABEL_46;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A6742EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 40 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(unsigned int *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 20);
    v25 = *(_OWORD *)(v20 + 24);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_DWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 20) = v24;
    *(_OWORD *)(v11 + 24) = v25;
    if (v13 == v10)
    {
      sub_22A635434(v21, v22, v23, v24);
      goto LABEL_38;
    }
    v11 += 40;
    result = sub_22A635434(v21, v22, v23, v24);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_22A674508(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
LABEL_37:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v12;
  }
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
    goto LABEL_39;
  v10 = a2;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v25 = result;
  v11 = 0;
  v12 = 0;
  v26 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_22A633AAC(*(_QWORD *)(a4 + 56) + 40 * v14, (uint64_t)&v28);
    *(_QWORD *)&v27 = v20;
    *((_QWORD *)&v27 + 1) = v19;
    v21 = v30;
    v34 = v30;
    v22 = v29;
    v23 = v28;
    v32 = v28;
    v33 = v29;
    v31 = v27;
    *(_OWORD *)v10 = v27;
    *(_OWORD *)(v10 + 16) = v23;
    *(_OWORD *)(v10 + 32) = v22;
    *(_QWORD *)(v10 + 48) = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      v12 = a3;
      goto LABEL_36;
    }
    v10 += 56;
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v26)
      goto LABEL_35;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v26)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * v17);
      if (v16)
        goto LABEL_14;
      v11 = v15 + 1;
      if (v15 + 2 >= v26)
        goto LABEL_35;
      v16 = *(_QWORD *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        v11 = v15 + 2;
        if (v15 + 3 >= v26)
          goto LABEL_35;
        v16 = *(_QWORD *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          v17 = v15 + 4;
          v11 = v15 + 3;
          if (v15 + 4 < v26)
          {
            v16 = *(_QWORD *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v15 >= v26)
                {
                  v11 = v26 - 1;
                  goto LABEL_35;
                }
                v16 = *(_QWORD *)(v5 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          v8 = 0;
LABEL_36:
          v6 = v24;
          result = v25;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void sub_22A674768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = sub_22A6A5C40();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for RenderLayerActionType();
  MEMORY[0x24BDAC7A8](v3);
  sub_22A63CCEC(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_22A674864 + 4 * byte_22A6AA390[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A674864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22A638950(v1, v0);
  sub_22A631674();
  v3 = v2;
  sub_22A633AE8(v0, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
  return v3;
}

void sub_22A6749B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = sub_22A6A5C40();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for RenderLayerType();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for RenderLayerActionType();
  MEMORY[0x24BDAC7A8](v3);
  sub_22A63CCEC(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_22A674AA8 + 4 * byte_22A6AA394[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A674AA8()
{
  uint64_t v0;
  uint64_t v1;

  sub_22A638950(v0, v1);
  sub_22A6A6264();
  sub_22A631C5C();
  return sub_22A633AE8(v1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
}

void sub_22A674BA0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_22A674768();
  *a1 = v2;
}

uint64_t sub_22A674BC4()
{
  sub_22A6A6258();
  sub_22A6749B0();
  return sub_22A6A62A0();
}

uint64_t sub_22A674C04()
{
  sub_22A6A6258();
  sub_22A6749B0();
  return sub_22A6A62A0();
}

uint64_t sub_22A674C40()
{
  return sub_22A6354A0(&qword_255B00408, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerActionType, (uint64_t)&unk_22A6AA3BC);
}

uint64_t type metadata accessor for RenderLayerActionType()
{
  uint64_t result;

  result = qword_255B004C0;
  if (!qword_255B004C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A674CA8(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(qword_255B00410, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerActionType, (uint64_t)&unk_22A6AA3E4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A674CE4(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(&qword_255B00440, (uint64_t (*)(uint64_t))type metadata accessor for RenderLayerActionType, (uint64_t)&unk_22A6AA424);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22A674D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[4];

  v4 = sub_22A6A5C40();
  v16[2] = *(_QWORD *)(v4 - 8);
  v16[3] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v16[1] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RenderLayerType();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for RenderLayerActionType();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255B00448);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A63CCEC(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22A63CCEC(a2, (uint64_t)v14);
  v15 = (char *)sub_22A674EC4 + 4 * byte_22A6AA398[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A674EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  sub_22A63CCEC(v0, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    sub_22A6750C0(v0);
    v4 = 0;
  }
  else
  {
    sub_22A638950(v1, v3);
    sub_22A635054(v2, v3);
    v4 = v5;
    sub_22A633AE8(v3, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerType);
    sub_22A633AE8(v0, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
  }
  return v4 & 1;
}

uint64_t sub_22A6750C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B00448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_22A675100(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  char *v10;
  uint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v14 = sub_22A6A5C40();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(uint64_t *)((char *)a1 + *(int *)(v15 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 48));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v8 = type metadata accessor for RenderLayerType();
        v12 = swift_getEnumCaseMultiPayload();
        if (v12 != 3)
        {
          if (v12 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v13 = (char *)&loc_22A67526C + 4 * byte_22A6AA39C[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          goto LABEL_16;
        }
        goto LABEL_14;
      case 0:
        v8 = type metadata accessor for RenderLayerType();
        v9 = swift_getEnumCaseMultiPayload();
        if (v9 != 3)
        {
          if (v9 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v10 = (char *)&loc_22A6751AC + 4 * byte_22A6AA3A0[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
LABEL_16:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          goto LABEL_17;
        }
LABEL_14:
        v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_22A675540(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_22A6A5C40();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    type metadata accessor for RenderLayerType();
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result != 3)
    {
      if ((_DWORD)result == 2)
      {
        type metadata accessor for ImageContent.ContentType(0);
        result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_12;
          case 1:
            goto LABEL_17;
          case 2:
            return swift_bridgeObjectRelease();
          case 3:
            goto LABEL_16;
          default:
            return result;
        }
      }
      return result;
    }
    goto LABEL_14;
  }
  type metadata accessor for RenderLayerType();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if ((_DWORD)result == 2)
  {
    type metadata accessor for ImageContent.ContentType(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
LABEL_12:
        swift_bridgeObjectRelease();
        result = swift_release();
        break;
      case 1:
LABEL_17:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      case 2:
        return swift_bridgeObjectRelease();
      case 3:
LABEL_16:
        v3 = sub_22A6A5B8C();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      default:
        return result;
    }
  }
  return result;
}

_QWORD *sub_22A6756AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v12 = sub_22A6A5C40();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v7 = type metadata accessor for RenderLayerType();
      v10 = swift_getEnumCaseMultiPayload();
      if (v10 != 3)
      {
        if (v10 == 2)
        {
          type metadata accessor for ImageContent.ContentType(0);
          v11 = (char *)&loc_22A6757EC + 4 * byte_22A6AA3AC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    case 0:
      v7 = type metadata accessor for RenderLayerType();
      v8 = swift_getEnumCaseMultiPayload();
      if (v8 != 3)
      {
        if (v8 == 2)
        {
          type metadata accessor for ImageContent.ContentType(0);
          v9 = (char *)&loc_22A67574C + 4 * byte_22A6AA3B0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
LABEL_14:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_15;
      }
LABEL_12:
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_22A675AC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v12 = sub_22A6A5C40();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v7 = type metadata accessor for RenderLayerType();
        v10 = swift_getEnumCaseMultiPayload();
        if (v10 != 3)
        {
          if (v10 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v11 = (char *)&loc_22A675C24 + 4 * byte_22A6AA3B4[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          goto LABEL_15;
        }
        goto LABEL_13;
      case 0:
        v7 = type metadata accessor for RenderLayerType();
        v8 = swift_getEnumCaseMultiPayload();
        if (v8 != 3)
        {
          if (v8 == 2)
          {
            type metadata accessor for ImageContent.ContentType(0);
            v9 = (char *)&loc_22A675B7C + 4 * byte_22A6AA3B8[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
LABEL_15:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_16;
        }
LABEL_13:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_16;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_22A675F34(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_22A6A5C40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
      *(_QWORD *)&a1[*(int *)(v11 + 48)] = *(_QWORD *)&a2[*(int *)(v11 + 48)];
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v7 = type metadata accessor for RenderLayerType();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v8 = type metadata accessor for ImageContent.ContentType(0);
        if (swift_getEnumCaseMultiPayload() == 3)
          goto LABEL_6;
        goto LABEL_13;
      }
      goto LABEL_12;
    case 0:
      v7 = type metadata accessor for RenderLayerType();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v8 = type metadata accessor for ImageContent.ContentType(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
LABEL_6:
          v9 = sub_22A6A5B8C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
          swift_storeEnumTagMultiPayload();
LABEL_14:
          swift_storeEnumTagMultiPayload();
          goto LABEL_15;
        }
LABEL_13:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_14;
      }
LABEL_12:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_22A67616C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_22A633AE8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v9 = sub_22A6A5C40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255AFF278);
        *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v7 = type metadata accessor for RenderLayerType();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v8 = type metadata accessor for ImageContent.ContentType(0);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
LABEL_11:
            v11 = sub_22A6A5B8C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
            swift_storeEnumTagMultiPayload();
LABEL_16:
            swift_storeEnumTagMultiPayload();
            goto LABEL_17;
          }
LABEL_15:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          goto LABEL_16;
        }
        goto LABEL_13;
      case 0:
        v7 = type metadata accessor for RenderLayerType();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          v8 = type metadata accessor for ImageContent.ContentType(0);
          if (swift_getEnumCaseMultiPayload() == 3)
            goto LABEL_11;
          goto LABEL_15;
        }
LABEL_13:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_17;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22A6763BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  result = type metadata accessor for RenderLayerType();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5 = v4;
    result = sub_22A6A5C40();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22A676454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  __int128 *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  int64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44;
  __int128 v45;
  _OWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  v2 = MEMORY[0x24BEE4B00];
  v48 = MEMORY[0x24BEE4B00];
  v33 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v49 = &v41;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v32)
      goto LABEL_40;
    v12 = *(_QWORD *)(v33 + 8 * v11);
    v13 = v7 + 1;
    if (!v12)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v32)
        goto LABEL_40;
      v12 = *(_QWORD *)(v33 + 8 * v13);
      if (!v12)
      {
        v13 = v7 + 3;
        if (v7 + 3 >= v32)
          goto LABEL_40;
        v12 = *(_QWORD *)(v33 + 8 * v13);
        if (!v12)
        {
          v13 = v7 + 4;
          if (v7 + 4 >= v32)
            goto LABEL_40;
          v12 = *(_QWORD *)(v33 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v7 = v13;
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_22A677164(*(_QWORD *)(a1 + 56) + 40 * v10, (uint64_t)v46);
    *(_QWORD *)&v45 = v17;
    *((_QWORD *)&v45 + 1) = v16;
    v42 = v45;
    v43[0] = v46[0];
    v43[1] = v46[1];
    v44 = v47;
    sub_22A677164((uint64_t)v43, (uint64_t)&v34);
    if (*((_QWORD *)&v35 + 1))
    {
      v37 = v34;
      v38 = v35;
      v18 = v42;
      v39 = v36;
      v40 = v42;
      sub_22A633324((uint64_t)v43, (uint64_t)v49);
      v19 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v19)
      {
        v20 = v19 + 1;
        swift_bridgeObjectRetain();
        sub_22A633770(v20, 1);
        v2 = v48;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_22A6A6258();
      sub_22A6A5DE4();
      result = sub_22A6A62A0();
      v21 = v2 + 64;
      v22 = -1 << *(_BYTE *)(v2 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
      {
        v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v21 + 8 * v24);
        }
        while (v29 == -1);
        v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(_QWORD *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v25) = v18;
      v30 = *(_QWORD *)(v2 + 56) + 40 * v25;
      v31 = v38;
      *(_OWORD *)v30 = v37;
      *(_OWORD *)(v30 + 16) = v31;
      *(_QWORD *)(v30 + 32) = v39;
      ++*(_QWORD *)(v2 + 16);
      v8 = (__int128 *)v49;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_22A629860((uint64_t)&v42, &qword_255AFEFB0);
      v8 = &v34;
    }
    result = sub_22A629860((uint64_t)v8, &qword_255AFEFA8);
  }
  v14 = v7 + 5;
  if (v7 + 5 >= v32)
  {
LABEL_40:
    sub_22A633AA4();
    return v2;
  }
  v12 = *(_QWORD *)(v33 + 8 * v14);
  if (v12)
  {
    v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v32)
      goto LABEL_40;
    v12 = *(_QWORD *)(v33 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22A676818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v38 - v5;
  v7 = (uint64_t *)(v0 + *(int *)(type metadata accessor for RenderAssetAction() + 20));
  v8 = *v7;
  v9 = v7[1];
  v11 = v7[2];
  v10 = v7[3];
  v12 = v7[4];
  v13 = v7[5];
  v42 = v7[6];
  v43 = v12;
  v14 = v7[8];
  v44 = v7[7];
  v15 = v7[9];
  if ((v15 & 0x2000000000000000) != 0)
  {
    v40 = v15 & 0xDFFFFFFFFFFFFFFFLL;
    v41 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
    *(_QWORD *)(inited + 32) = 0x65707954656D696DLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v21 = 0x504A2F6F65646976;
    if ((v13 & 0x100) == 0)
      v21 = 0x6E702F6567616D69;
    v22 = 0xEA00000000004745;
    if ((v13 & 0x100) == 0)
      v22 = 0xE900000000000067;
    v46 = v21;
    v47 = v22;
    v23 = v9;
    v39 = v9;
    v24 = v11;
    v25 = v11;
    v26 = v43;
    sub_22A677070(v8, v23, v25, v10, v43, v13, v42, v44, v14, v15);
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 0x657469727073;
    *(_QWORD *)(inited + 96) = 0xE600000000000000;
    v46 = v24;
    v47 = v10;
    v48 = v26;
    v49 = v13 & 1;
    v27 = sub_22A65E114();
    v28 = v39;
    v29 = v8;
    if (v27)
    {
      v46 = v27;
      __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
      sub_22A677110((unint64_t *)&qword_255AFEC38, qword_255AFEC40, MEMORY[0x24BEE23D8]);
      sub_22A6A6084();
    }
    else
    {
      *(_QWORD *)(inited + 136) = 0;
      *(_OWORD *)(inited + 104) = 0u;
      *(_OWORD *)(inited + 120) = 0u;
    }
    v30 = sub_22A630E48(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    v31 = swift_initStackObject();
    *(_OWORD *)(v31 + 16) = xmmword_22A6A7580;
    *(_QWORD *)(v31 + 32) = 1701667182;
    *(_QWORD *)(v31 + 40) = 0xE400000000000000;
    v46 = v29;
    v47 = v28;
    swift_bridgeObjectRetain_n();
    sub_22A6A6084();
    *(_QWORD *)(v31 + 88) = 0x74736566696E616DLL;
    *(_QWORD *)(v31 + 96) = 0xE800000000000000;
    v32 = sub_22A676454(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v32;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A677110((unint64_t *)&qword_255AFEC38, qword_255AFEC40, MEMORY[0x24BEE23D8]);
    sub_22A6A6084();
    *(_QWORD *)(v31 + 144) = 1635017060;
    *(_QWORD *)(v31 + 152) = 0xE400000000000000;
    v33 = v40;
    v46 = v14;
    v47 = v40;
    sub_22A64E224(v14, v40);
    sub_22A6770CC();
    sub_22A6A6084();
    v34 = sub_22A630814(v31);
    v35 = sub_22A6A5C40();
    v36 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v41, 1, 1, v35);
    v45 = v34;
    sub_22A6A6084();
    v18 = sub_22A63C6E0(0x7341657461657263, 0xEB00000000746573, v36, &v46);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22A64E268(v14, v33);
    sub_22A629860((uint64_t)&v46, &qword_255AFEFA8);
    v19 = v36;
  }
  else
  {
    v16 = sub_22A6A5C40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00510);
    v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(v17 + 32) = 1701667182;
    *(_QWORD *)(v17 + 40) = 0xE400000000000000;
    *(_QWORD *)(v17 + 48) = v8;
    *(_QWORD *)(v17 + 56) = v9;
    sub_22A677070(v8, v9, v11, v10, v43, v13, v42, v44, v14, v15);
    v45 = sub_22A630F88(v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00518);
    sub_22A677110(qword_255B00520, &qword_255B00518, MEMORY[0x24BEE0D10]);
    sub_22A6A6084();
    v18 = sub_22A63C6E0(0x734165766F6D6572, 0xEB00000000746573, v6, &v46);
    sub_22A629860((uint64_t)&v46, &qword_255AFEFA8);
    v19 = (uint64_t)v6;
  }
  sub_22A629860(v19, (uint64_t *)&unk_255B01510);
  return v18;
}

uint64_t sub_22A676D64()
{
  sub_22A6A6258();
  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  sub_22A67C0F4();
  return sub_22A6A62A0();
}

uint64_t sub_22A676E08()
{
  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  return sub_22A67C0F4();
}

uint64_t sub_22A676E9C()
{
  sub_22A6A6258();
  sub_22A6A5C40();
  sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_22A6A5D3C();
  sub_22A67C0F4();
  return sub_22A6A62A0();
}

uint64_t sub_22A676F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD v14[5];
  _OWORD v15[5];

  if ((sub_22A6A5C28() & 1) != 0)
  {
    v6 = *(int *)(a3 + 20);
    v7 = *(_OWORD *)(a1 + v6 + 16);
    v15[0] = *(_OWORD *)(a1 + v6);
    v15[1] = v7;
    v8 = *(_OWORD *)(a1 + v6 + 48);
    v15[2] = *(_OWORD *)(a1 + v6 + 32);
    v15[3] = v8;
    v15[4] = *(_OWORD *)(a1 + v6 + 64);
    v9 = (_OWORD *)(a2 + v6);
    v10 = v9[1];
    v14[0] = *v9;
    v14[1] = v10;
    v11 = v9[3];
    v14[2] = v9[2];
    v14[3] = v11;
    v14[4] = v9[4];
    v12 = sub_22A67CA48((uint64_t *)v15, (uint64_t *)v14);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_22A676FCC()
{
  return sub_22A6354A0(&qword_255B004F8, (uint64_t (*)(uint64_t))type metadata accessor for RenderAssetAction, (uint64_t)&unk_22A6AA480);
}

uint64_t type metadata accessor for RenderAssetAction()
{
  uint64_t result;

  result = qword_255B00580;
  if (!qword_255B00580)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A677034(uint64_t a1)
{
  uint64_t result;

  result = sub_22A6354A0(&qword_255B00500, (uint64_t (*)(uint64_t))type metadata accessor for RenderAssetAction, (uint64_t)&unk_22A6AA4A8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A677070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a10 & 0x2000000000000000) == 0)
    return swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_22A64E224(a9, a10 & 0xDFFFFFFFFFFFFFFFLL);
}

unint64_t sub_22A6770CC()
{
  unint64_t result;

  result = qword_255B00508;
  if (!qword_255B00508)
  {
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BDCDE08], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255B00508);
  }
  return result;
}

uint64_t sub_22A677110(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE04C8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A677164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_22A6771AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    v13 = v10[2];
    v14 = v10[3];
    v15 = v10[4];
    v16 = v10[5];
    v17 = v10[6];
    v18 = v10[7];
    v21 = v10[8];
    v22 = v10[9];
    sub_22A677070(*v10, v12, v13, v14, v15, v16, v17, v18, v21, v22);
    *v9 = v11;
    v9[1] = v12;
    v9[2] = v13;
    v9[3] = v14;
    v9[4] = v15;
    v9[5] = v16;
    v9[6] = v17;
    v9[7] = v18;
    v9[8] = v21;
    v9[9] = v22;
  }
  return a1;
}

uint64_t sub_22A6772B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;

  v4 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  return sub_22A677318(*v5, v5[1], v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], v5[8], v5[9]);
}

uint64_t sub_22A677318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a10 & 0x2000000000000000) == 0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_22A64E268(a9, a10 & 0xDFFFFFFFFFFFFFFFLL);
}

uint64_t sub_22A677374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  v14 = v9[4];
  v15 = v9[5];
  v16 = v9[6];
  v17 = v9[7];
  v18 = v9[8];
  v20 = v9[9];
  sub_22A677070(*v9, v11, v12, v13, v14, v15, v16, v17, v18, v20);
  *v8 = v10;
  v8[1] = v11;
  v8[2] = v12;
  v8[3] = v13;
  v8[4] = v14;
  v8[5] = v15;
  v8[6] = v16;
  v8[7] = v17;
  result = a1;
  v8[8] = v18;
  v8[9] = v20;
  return result;
}

uint64_t sub_22A677448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  v14 = v9[4];
  v15 = v9[5];
  v16 = v9[6];
  v17 = v9[7];
  v18 = v9[8];
  v30 = v9[9];
  sub_22A677070(*v9, v11, v12, v13, v14, v15, v16, v17, v18, v30);
  v19 = *v8;
  v20 = v8[1];
  v21 = v8[2];
  v22 = v8[3];
  v23 = v8[4];
  v24 = v8[5];
  v25 = v8[6];
  v26 = v8[7];
  v27 = v8[8];
  v28 = v8[9];
  *v8 = v10;
  v8[1] = v11;
  v8[2] = v12;
  v8[3] = v13;
  v8[4] = v14;
  v8[5] = v15;
  v8[6] = v16;
  v8[7] = v17;
  v8[8] = v18;
  v8[9] = v30;
  sub_22A677318(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  return a1;
}

uint64_t sub_22A67753C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  v8[4] = v9[4];
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  return a1;
}

uint64_t sub_22A6775B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *v8;
  v11 = v8[1];
  v12 = v8[2];
  v13 = v8[3];
  v14 = v8[4];
  v15 = v8[5];
  v16 = v8[6];
  v17 = v8[7];
  v18 = v8[8];
  v19 = v8[9];
  v20 = v9[1];
  *(_OWORD *)v8 = *v9;
  *((_OWORD *)v8 + 1) = v20;
  v21 = v9[3];
  *((_OWORD *)v8 + 2) = v9[2];
  *((_OWORD *)v8 + 3) = v21;
  *((_OWORD *)v8 + 4) = v9[4];
  sub_22A677318(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  return a1;
}

uint64_t sub_22A677648()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A677654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  unsigned int v10;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 40);
  v10 = (v9 >> 2) & 0xFFFFFF80 | (v9 >> 1);
  if (v10 > 0x80000000)
    return -v10;
  else
    return 0;
}

uint64_t sub_22A6776D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

double sub_22A6776E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  }
  else
  {
    v11 = a1 + *(int *)(a4 + 20);
    result = 0.0;
    *(_OWORD *)v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 40) = (4 * -(int)a2) & 0x3FFFFFE00 | (2 * (-(int)a2 & 0x7FLL));
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
  }
  return result;
}

uint64_t sub_22A677778()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22A6777E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v12;

  v6 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE2B70] + 8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v12 - v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*v10 - 8) + 16))(a3, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return swift_setAtWritableKeyPath();
}

unint64_t sub_22A6778A4()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A74C0;
  *(_QWORD *)(inited + 32) = 0x646E497472617473;
  *(_QWORD *)(inited + 40) = 0xEA00000000007865;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x7865646E49646E65;
  *(_QWORD *)(inited + 96) = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 1701667182;
  *(_QWORD *)(inited + 152) = 0xE400000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x65756C6176;
  *(_QWORD *)(inited + 208) = 0xE500000000000000;
  sub_22A677A0C();
  return sub_22A630814(inited);
}

void sub_22A677A0C()
{
  __asm { BR              X10 }
}

uint64_t sub_22A677A44()
{
  return sub_22A6A6084();
}

unint64_t sub_22A677AB8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A6778A4();
  *a1 = result;
  return result;
}

unint64_t sub_22A677ADC(uint64_t a1)
{
  unint64_t result;

  result = sub_22A677B00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A677B00()
{
  unint64_t result;

  result = qword_255B005E0;
  if (!qword_255B005E0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextAttributeRegion, &type metadata for TextAttributeRegion);
    atomic_store(result, (unint64_t *)&qword_255B005E0);
  }
  return result;
}

unint64_t sub_22A677B44(uint64_t a1)
{
  unint64_t result;

  result = sub_22A677B68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A677B68()
{
  unint64_t result;

  result = qword_255B005E8;
  if (!qword_255B005E8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextAttributeRegion, &type metadata for TextAttributeRegion);
    atomic_store(result, (unint64_t *)&qword_255B005E8);
  }
  return result;
}

unint64_t sub_22A677BAC()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
  *(_QWORD *)(inited + 32) = 120;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 121;
  *(_QWORD *)(inited + 96) = 0xE100000000000000;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A677C64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A677BAC();
  *a1 = result;
  return result;
}

unint64_t sub_22A677C8C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A677CB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A677CB0()
{
  unint64_t result;

  result = qword_255B00618;
  if (!qword_255B00618)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Anchor, &type metadata for Anchor);
    atomic_store(result, (unint64_t *)&qword_255B00618);
  }
  return result;
}

uint64_t sub_22A677CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22A6A5C40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00630);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 32) = 0x6E6F6974636E7566;
  *(_QWORD *)(inited + 40) = 0xE900000000000073;
  v6 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RenderTransactionAction() + 20));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + 32;
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_22A628A98(v8, (uint64_t)v18);
      v10 = v19;
      v11 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_22A62F438(0, v9[2] + 1, 1, v9);
        v14 = v9[2];
        v13 = v9[3];
        if (v14 >= v13 >> 1)
          v9 = sub_22A62F438((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
        v9[2] = v14 + 1;
        v9[v14 + 4] = v12;
      }
      v8 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(inited + 48) = v9;
  v17[1] = sub_22A6310A8(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00638);
  sub_22A6781F4(&qword_255B00640, &qword_255B00638, sub_22A6781D0, MEMORY[0x24BEE04C8]);
  sub_22A6A6084();
  v15 = sub_22A63C6E0(0x746361736E617274, 0xEB000000006E6F69, v3, v18);
  sub_22A629860((uint64_t)v18, &qword_255AFEFA8);
  sub_22A629860((uint64_t)v3, (uint64_t *)&unk_255B01510);
  return v15;
}

uint64_t sub_22A677F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
  v4 = MEMORY[0x22E2DE8C4](v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22A677FD4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for RenderTransactionAction();
  v2 = *(_QWORD *)(v0 + *(int *)(result + 20));
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22A628A98(v4, (uint64_t)v5);
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      sub_22A6A5D3C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v4 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22A678080()
{
  sub_22A6A6258();
  sub_22A677FD4();
  return sub_22A6A62A0();
}

uint64_t sub_22A6780C0()
{
  sub_22A6A6258();
  sub_22A677FD4();
  return sub_22A6A62A0();
}

uint64_t sub_22A6780FC()
{
  return sub_22A678190(&qword_255B00620, (uint64_t)&unk_22A6AA630);
}

uint64_t type metadata accessor for RenderTransactionAction()
{
  uint64_t result;

  result = qword_255B006B0;
  if (!qword_255B006B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A67815C(uint64_t a1)
{
  uint64_t result;

  result = sub_22A678190(&qword_255B00628, (uint64_t)&unk_22A6AA658);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A678190(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RenderTransactionAction();
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A6781D0()
{
  return sub_22A6781F4(&qword_255B00648, qword_255B00650, (uint64_t (*)(void))sub_22A628ED4, MEMORY[0x24BEE12A8]);
}

uint64_t sub_22A6781F4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x22E2DF32C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_22A678258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v4 = type metadata accessor for RenderTransactionAction();
  v5 = *(_QWORD *)(a1 + *(int *)(v4 + 20));
  sub_22A6A62AC();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22A628A98(v7, (uint64_t)&v23);
      __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
      sub_22A6A5D3C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  v25 = v20;
  v26 = v21;
  v27 = v22;
  v23 = v18;
  v24 = v19;
  v8 = sub_22A6A6294();
  v9 = *(_QWORD *)(a2 + *(int *)(v4 + 20));
  sub_22A6A62AC();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22A628A98(v11, (uint64_t)&v18);
      __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
      sub_22A6A5D3C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  v20 = v15;
  v21 = v16;
  v22 = v17;
  v18 = v13;
  v19 = v14;
  return v8 == sub_22A6A6294();
}

uint64_t *sub_22A6783E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22A678470(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A6784B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22A678514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22A678580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22A6785DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22A678640()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A67864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22A6786C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A6786D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22A6A5C40();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_22A67874C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22A6787C0()
{
  uint64_t v0;

  MEMORY[0x22E2DF3F8](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onDataReceived.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onDataReceived.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onDataReceived.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onClose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onClose.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.onClose.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.close()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AirPlayConnectionProtocol.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A62E6B0;
  return v9(a1, a2, a3);
}

void sub_22A6788BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = sub_22A6A5B8C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for ImageContent.ContentType(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_22A6354E0(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_22A67898C + 4 * byte_22A6AA72C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_22A67898C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;

  v3 = *v0;
  v2 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  *(_QWORD *)(v1 - 192) = v3;
  *(_QWORD *)(v1 - 184) = v2;
  swift_bridgeObjectRetain();
  sub_22A6A6084();
  v5 = sub_22A630814(inited);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22A678C6C(uint64_t a1)
{
  return sub_22A678C80(a1);
}

uint64_t sub_22A678C80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  __int128 *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  _BYTE v40[40];
  __int128 v41;
  _OWORD v42[2];
  uint64_t v43;
  __int128 v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  int64_t v48;

  v2 = MEMORY[0x24BEE4B00];
  v47 = MEMORY[0x24BEE4B00];
  v32 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v48 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v48 << 6);
      goto LABEL_25;
    }
    v10 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v10 >= v31)
      goto LABEL_40;
    v11 = *(_QWORD *)(v32 + 8 * v10);
    v12 = v48 + 1;
    if (!v11)
    {
      v12 = v48 + 2;
      if (v48 + 2 >= v31)
        goto LABEL_40;
      v11 = *(_QWORD *)(v32 + 8 * v12);
      if (!v11)
      {
        v12 = v48 + 3;
        if (v48 + 3 >= v31)
          goto LABEL_40;
        v11 = *(_QWORD *)(v32 + 8 * v12);
        if (!v11)
        {
          v12 = v48 + 4;
          if (v48 + 4 >= v31)
            goto LABEL_40;
          v11 = *(_QWORD *)(v32 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v48 = v12;
LABEL_25:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v16 = *v14;
    v15 = v14[1];
    sub_22A62F9B8(*(_QWORD *)(a1 + 56) + 40 * v9, (uint64_t)v45, &qword_255AFEFA8);
    *(_QWORD *)&v44 = v16;
    *((_QWORD *)&v44 + 1) = v15;
    v41 = v44;
    v42[0] = v45[0];
    v42[1] = v45[1];
    v43 = v46;
    sub_22A62F9B8((uint64_t)v42, (uint64_t)&v33, &qword_255AFEFA8);
    if (*((_QWORD *)&v34 + 1))
    {
      v36 = v33;
      v37 = v34;
      v17 = v41;
      v38 = v35;
      v39 = v41;
      sub_22A62981C((uint64_t)v42, (uint64_t)v40, &qword_255AFEFA8);
      v18 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v18)
      {
        v19 = v18 + 1;
        swift_bridgeObjectRetain();
        sub_22A633770(v19, 1);
        v2 = v47;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_22A6A6258();
      sub_22A6A5DE4();
      result = sub_22A6A62A0();
      v20 = v2 + 64;
      v21 = -1 << *(_BYTE *)(v2 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v2 + 64 + 8 * (v22 >> 6))) != 0)
      {
        v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v2 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v20 + 8 * v23);
        }
        while (v28 == -1);
        v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      }
      *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v24) = v17;
      v29 = *(_QWORD *)(v2 + 56) + 40 * v24;
      v30 = v37;
      *(_OWORD *)v29 = v36;
      *(_OWORD *)(v29 + 16) = v30;
      *(_QWORD *)(v29 + 32) = v38;
      ++*(_QWORD *)(v2 + 16);
      v7 = (__int128 *)v40;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_22A629860((uint64_t)&v41, &qword_255AFEFB0);
      v7 = &v33;
    }
    result = sub_22A629860((uint64_t)v7, &qword_255AFEFA8);
  }
  v13 = v48 + 5;
  if (v48 + 5 >= v31)
  {
LABEL_40:
    sub_22A633AA4();
    return v2;
  }
  v11 = *(_QWORD *)(v32 + 8 * v13);
  if (v11)
  {
    v12 = v48 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v31)
      goto LABEL_40;
    v11 = *(_QWORD *)(v32 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22A679058(uint64_t a1, uint64_t a2)
{
  return sub_22A67906C(a1, a2);
}

uint64_t sub_22A67906C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_22A648E84(a1, (uint64_t)sub_22A679F68, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22A6790E8()
{
  uint64_t inited;
  unint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A97F0;
  *(_QWORD *)(inited + 32) = 0x6576727563;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  if (sub_22A69A100())
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 80) = 0;
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(_QWORD *)(inited + 88) = 0x79616C6564;
  *(_QWORD *)(inited + 96) = 0xE500000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x65756C61566F74;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  *(_OWORD *)(inited + 216) = 0u;
  *(_OWORD *)(inited + 232) = 0u;
  *(_QWORD *)(inited + 248) = 0;
  *(_QWORD *)(inited + 256) = 0x756C61566D6F7266;
  *(_QWORD *)(inited + 264) = 0xE900000000000065;
  *(_OWORD *)(inited + 272) = 0u;
  *(_OWORD *)(inited + 288) = 0u;
  *(_QWORD *)(inited + 304) = 0;
  v1 = sub_22A630E48(inited);
  v2 = sub_22A678C80(v1);
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_22A6792B4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t result;
  char v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  __int128 v98;
  uint64_t *v99;
  uint64_t *v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  __int128 v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[2];
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[2];
  uint64_t v124;
  unint64_t v125;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v103 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v96 - v5;
  v106 = type metadata accessor for SpriteSheetAnimation();
  v7 = *(_QWORD *)(v106 - 8);
  v8 = MEMORY[0x24BDAC7A8](v106);
  v10 = (uint64_t *)((char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v96 - v11);
  v13 = *a1;
  if (!*((_BYTE *)a1 + 8))
  {
    v57 = *(_QWORD *)(v13 + 16);
    if (v57)
    {
      v58 = *a1;
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFD8);
      v59 = v58 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v60 = *(_QWORD *)(v7 + 72);
      v100 = &v109;
      *(_QWORD *)&v101 = v60;
      v96 = v58;
      swift_bridgeObjectRetain();
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v102 = xmmword_22A6A7590;
      v98 = xmmword_22A6A77C0;
      v97 = 0x800000022A6AD3F0;
      v99 = v12;
      while (1)
      {
        v107 = v14;
        sub_22A6354E0(v59, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SpriteSheetAnimation);
        v62 = (uint64_t)v12 + *(int *)(v106 + 20);
        v63 = sub_22A6790E8();
        if (v63)
        {
          v64 = v63;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v98;
          *(_QWORD *)(inited + 32) = 0xD000000000000013;
          *(_QWORD *)(inited + 40) = v97;
          v66 = v12[1];
          v116 = *v12;
          v117 = v66;
          swift_bridgeObjectRetain();
          sub_22A6A6084();
          v67 = sub_22A630814(inited);
          v105 = sub_22A67906C(v67, v64);
        }
        else
        {
          v105 = 0;
        }
        v108 = v102;
        v109 = 0x55557463656A626FLL;
        v110 = 0xEA00000000004449;
        sub_22A62F9B8(v62, (uint64_t)v6, &qword_255AFF3C8);
        v68 = sub_22A6A5C1C();
        v70 = v69;
        v71 = sub_22A6A5C40();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v6, v71);
        v111 = v68;
        v112 = v70;
        strcpy((char *)v113, "animationType");
        HIWORD(v113[1]) = -4864;
        v114 = 1701015151;
        v115 = 0xE400000000000000;
        v72 = (_QWORD *)sub_22A6A6150();
        v73 = v109;
        v74 = v110;
        v76 = v111;
        v75 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_22A632FD0(v73, v74);
        if ((v77 & 1) != 0)
          goto LABEL_44;
        v104 = v59;
        *(_QWORD *)((char *)v72 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
        v78 = (uint64_t *)(v72[6] + 16 * result);
        *v78 = v73;
        v78[1] = v74;
        v79 = (uint64_t *)(v72[7] + 16 * result);
        *v79 = v76;
        v79[1] = v75;
        v80 = v72[2];
        v41 = __OFADD__(v80, 1);
        v81 = v80 + 1;
        if (v41)
          goto LABEL_45;
        v72[2] = v81;
        v82 = v113[0];
        v83 = v113[1];
        v85 = v114;
        v84 = v115;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = sub_22A632FD0(v82, v83);
        if ((v86 & 1) != 0)
          goto LABEL_46;
        *(_QWORD *)((char *)v72 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
        v87 = (uint64_t *)(v72[6] + 16 * result);
        *v87 = v82;
        v87[1] = v83;
        v88 = (uint64_t *)(v72[7] + 16 * result);
        *v88 = v85;
        v88[1] = v84;
        v89 = v72[2];
        v41 = __OFADD__(v89, 1);
        v90 = v89 + 1;
        if (v41)
          goto LABEL_47;
        v72[2] = v90;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B007C8);
        swift_arrayDestroy();
        v91 = v105;
        if (v105)
        {
          v92 = sub_22A679BC4((uint64_t)v72);
          swift_release();
          v93 = sub_22A67906C(v92, v91);
          v12 = v99;
          sub_22A626080((uint64_t)v99);
          v14 = v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_22A62F438(0, v14[2] + 1, 1, v14);
          v95 = v14[2];
          v94 = v14[3];
          v61 = v104;
          if (v95 >= v94 >> 1)
            v14 = sub_22A62F438((_QWORD *)(v94 > 1), v95 + 1, 1, v14);
          v14[2] = v95 + 1;
          v14[v95 + 4] = v93;
        }
        else
        {
          swift_release();
          v12 = v99;
          sub_22A626080((uint64_t)v99);
          v14 = v107;
          v61 = v104;
        }
        v59 = v61 + v101;
        if (!--v57)
        {
LABEL_37:
          swift_bridgeObjectRelease();
          return (unint64_t)v14;
        }
      }
    }
    return MEMORY[0x24BEE4AF8];
  }
  v14 = 0;
  if (*((_BYTE *)a1 + 8) != 1)
    return (unint64_t)v14;
  v15 = *(_QWORD *)(v13 + 16);
  if (!v15)
    return MEMORY[0x24BEE4AF8];
  v16 = *a1;
  *(_QWORD *)&v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFD8);
  v17 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v18 = *(uint64_t **)(v7 + 72);
  v99 = &v119;
  v100 = v18;
  v96 = v16;
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v101 = xmmword_22A6A7590;
  v98 = xmmword_22A6A77C0;
  v97 = 0x800000022A6AD3F0;
  while (1)
  {
    sub_22A6354E0(v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SpriteSheetAnimation);
    v20 = (uint64_t)v10 + *(int *)(v106 + 20);
    v21 = sub_22A6790E8();
    v107 = v14;
    if (v21)
    {
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = v98;
      *(_QWORD *)(v23 + 32) = 0xD000000000000013;
      *(_QWORD *)(v23 + 40) = v97;
      v24 = v10[1];
      v116 = *v10;
      v117 = v24;
      swift_bridgeObjectRetain();
      sub_22A6A6084();
      v25 = sub_22A630814(v23);
      v105 = sub_22A67906C(v25, v22);
    }
    else
    {
      v105 = 0;
    }
    v118 = v101;
    v119 = 0x55557463656A626FLL;
    v120 = 0xEA00000000004449;
    v26 = v103;
    sub_22A62F9B8(v20, v103, &qword_255AFF3C8);
    v27 = sub_22A6A5C1C();
    v29 = v28;
    v30 = sub_22A6A5C40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v26, v30);
    v121 = v27;
    v122 = v29;
    strcpy((char *)v123, "animationType");
    HIWORD(v123[1]) = -4864;
    v124 = 0x6E69746165706572;
    v125 = 0xE900000000000067;
    v31 = (_QWORD *)sub_22A6A6150();
    v32 = v119;
    v33 = v120;
    v35 = v121;
    v34 = v122;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_22A632FD0(v32, v33);
    if ((v37 & 1) != 0)
      break;
    v104 = v17;
    *(_QWORD *)((char *)v31 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v38 = (uint64_t *)(v31[6] + 16 * result);
    *v38 = v32;
    v38[1] = v33;
    v39 = (uint64_t *)(v31[7] + 16 * result);
    *v39 = v35;
    v39[1] = v34;
    v40 = v31[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_41;
    v31[2] = v42;
    v43 = v123[0];
    v44 = v123[1];
    v46 = v124;
    v45 = v125;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_22A632FD0(v43, v44);
    if ((v47 & 1) != 0)
      goto LABEL_42;
    *(_QWORD *)((char *)v31 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v48 = (uint64_t *)(v31[6] + 16 * result);
    *v48 = v43;
    v48[1] = v44;
    v49 = (uint64_t *)(v31[7] + 16 * result);
    *v49 = v46;
    v49[1] = v45;
    v50 = v31[2];
    v41 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (v41)
      goto LABEL_43;
    v31[2] = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B007C8);
    swift_arrayDestroy();
    v52 = v105;
    if (v105)
    {
      v53 = sub_22A679BC4((uint64_t)v31);
      swift_release();
      v54 = sub_22A67906C(v53, v52);
      sub_22A626080((uint64_t)v10);
      v14 = v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_22A62F438(0, v14[2] + 1, 1, v14);
      v56 = v14[2];
      v55 = v14[3];
      v19 = v104;
      if (v56 >= v55 >> 1)
        v14 = sub_22A62F438((_QWORD *)(v55 > 1), v56 + 1, 1, v14);
      v14[2] = v56 + 1;
      v14[v56 + 4] = v54;
    }
    else
    {
      swift_release();
      sub_22A626080((uint64_t)v10);
      v14 = v107;
      v19 = v104;
    }
    v17 = (uint64_t)v100 + v19;
    if (!--v15)
      goto LABEL_37;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

unint64_t sub_22A679BC4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFB8);
    v2 = (_QWORD *)sub_22A6A6150();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v24 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  if (v5)
    goto LABEL_9;
LABEL_10:
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_32;
  if (v10 >= v25)
    goto LABEL_29;
  v11 = *(_QWORD *)(v24 + 8 * v10);
  ++v7;
  if (!v11)
  {
    v7 = v10 + 1;
    if (v10 + 1 >= v25)
      goto LABEL_29;
    v11 = *(_QWORD *)(v24 + 8 * v7);
    if (!v11)
    {
      v7 = v10 + 2;
      if (v10 + 2 >= v25)
        goto LABEL_29;
      v11 = *(_QWORD *)(v24 + 8 * v7);
      if (!v11)
      {
        v12 = v10 + 3;
        if (v12 < v25)
        {
          v11 = *(_QWORD *)(v24 + 8 * v12);
          if (v11)
          {
            v7 = v12;
            goto LABEL_23;
          }
          while (1)
          {
            v7 = v12 + 1;
            if (__OFADD__(v12, 1))
              goto LABEL_33;
            if (v7 >= v25)
              break;
            v11 = *(_QWORD *)(v24 + 8 * v7);
            ++v12;
            if (v11)
              goto LABEL_23;
          }
        }
LABEL_29:
        swift_release();
        return (unint64_t)v2;
      }
    }
  }
LABEL_23:
  v5 = (v11 - 1) & v11;
  for (i = __clz(__rbit64(v11)) + (v7 << 6); ; i = v8 | (v7 << 6))
  {
    v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = v13[1];
    *(_QWORD *)&v26 = *v13;
    *((_QWORD *)&v26 + 1) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v15 = v26;
    v30 = v27;
    v31 = v28;
    v32 = v29;
    v26 = v27;
    v27 = v28;
    *(_QWORD *)&v28 = v29;
    result = sub_22A632FD0(v15, *((uint64_t *)&v15 + 1));
    v16 = result;
    if ((v17 & 1) != 0)
    {
      *(_OWORD *)(v2[6] + 16 * result) = v15;
      swift_bridgeObjectRelease();
      result = sub_22A649558((uint64_t)&v26, v2[7] + 40 * v16);
      if (!v5)
        goto LABEL_10;
      goto LABEL_9;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v15;
    v18 = v2[7] + 40 * result;
    v19 = v26;
    v20 = v27;
    *(_QWORD *)(v18 + 32) = v28;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    v21 = v2[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_31;
    v2[2] = v23;
    if (!v5)
      goto LABEL_10;
LABEL_9:
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_22A679E9C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_22A6788BC();
  *a1 = v2;
}

uint64_t sub_22A679EC0(uint64_t a1)
{
  uint64_t result;

  result = sub_22A679F28(&qword_255B007B8, (uint64_t)&protocol conformance descriptor for ImageContent.ContentType);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A679EF4(uint64_t a1)
{
  uint64_t result;

  result = sub_22A679F28(&qword_255B007C0, (uint64_t)&protocol conformance descriptor for ImageContent.ContentType);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A679F28(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ImageContent.ContentType(255);
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A679F68@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_22A633AAC((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

void *sub_22A679FA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  char *v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for ContainerContent.Child();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF008);
  v8 = *v0;
  v9 = sub_22A6A6138();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = (void *)swift_release();
LABEL_23:
    *v1 = v10;
    return result;
  }
  v26 = v1;
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  for (i = (uint64_t)v29; ; result = (void *)sub_22A62F974(i, *(_QWORD *)(v10 + 56) + v21))
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_25;
    if (v13 >= v28)
    {
LABEL_21:
      result = (void *)swift_release();
      v1 = v26;
      goto LABEL_23;
    }
    v23 = *(_QWORD *)(v27 + 8 * v13);
    if (!v23)
      break;
LABEL_20:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = *(_QWORD *)(v30 + 72) * v19;
    sub_22A6354E0(*(_QWORD *)(v8 + 56) + v21, i, (uint64_t (*)(_QWORD))type metadata accessor for ContainerContent.Child);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
  }
  v24 = v13 + 1;
  if (v13 + 1 >= v28)
    goto LABEL_21;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    ++v13;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_21;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void *sub_22A67A228()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFB8);
  v2 = *v0;
  v3 = sub_22A6A6138();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_26:
    *v1 = v4;
    return result;
  }
  v28 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_28;
    if (v9 >= v13)
    {
LABEL_24:
      result = (void *)swift_release();
      v1 = v28;
      goto LABEL_26;
    }
    v26 = *(_QWORD *)(v6 + 8 * v9);
    if (!v26)
      break;
LABEL_23:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_22A633AAC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22A67A404()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFF8);
  v2 = *v0;
  v3 = sub_22A6A6138();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      v9 = v33 + 1;
      if (v33 + 1 >= v13)
        goto LABEL_26;
      v34 = *(_QWORD *)(v6 + 8 * v9);
      if (!v34)
        break;
    }
LABEL_25:
    v12 = (v34 - 1) & v34;
    v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 72 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 32);
    v25 = *(_BYTE *)(v21 + 40);
    v26 = *(_BYTE *)(v21 + 41);
    v27 = *(_QWORD *)(v21 + 48);
    v28 = *(_QWORD *)(v21 + 56);
    v29 = *(_BYTE *)(v21 + 64);
    v30 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v31 = *(_OWORD *)(v21 + 16);
    *v30 = v19;
    v30[1] = v18;
    v32 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v32 = v22;
    *(_QWORD *)(v32 + 8) = v23;
    *(_OWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 32) = v24;
    *(_BYTE *)(v32 + 40) = v25;
    *(_BYTE *)(v32 + 41) = v26;
    *(_QWORD *)(v32 + 48) = v27;
    *(_QWORD *)(v32 + 56) = v28;
    *(_BYTE *)(v32 + 64) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v35 = v33 + 2;
  if (v35 >= v13)
    goto LABEL_26;
  v34 = *(_QWORD *)(v6 + 8 * v35);
  if (v34)
  {
    v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v34 = *(_QWORD *)(v6 + 8 * v9);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22A67A604()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFD8);
  v2 = *v0;
  v3 = sub_22A6A6138();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22A67A7BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _OWORD v31[3];
  uint64_t v32;

  v1 = v0;
  v2 = sub_22A6A5C40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFE8);
  v6 = *v0;
  v7 = sub_22A6A6138();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 56 * v18;
    sub_22A635464(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v31);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    v21 = *(_QWORD *)(v8 + 56) + v20;
    v22 = v32;
    v23 = v31[2];
    v24 = v31[1];
    *(_OWORD *)v21 = v31[0];
    *(_OWORD *)(v21 + 16) = v24;
    *(_OWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 48) = v22;
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22A67AA10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  v2 = sub_22A6A5C40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF030);
  v6 = *v0;
  v7 = sub_22A6A6138();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 40 * v18;
    sub_22A628A98(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = (void *)sub_22A628A38(v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22A67AC50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_22A6A5C40();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF020);
  v24 = v0;
  v5 = *v0;
  v6 = sub_22A6A6138();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 4 * v16;
    v18 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_DWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22A67AE70()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_22A6A5C40();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF018);
  v26 = v0;
  v8 = *v0;
  v9 = sub_22A6A6138();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_22A67B0CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_22A633AAC(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v25 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_22A62981C((uint64_t)&v25, (uint64_t)v23, qword_255B007D0);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v22 = v24;
    v19(v21);
    return sub_22A629860((uint64_t)v21, &qword_255AFFBC8);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_22A67B2C8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

unint64_t sub_22A67B464(uint64_t a1, char a2)
{
  uint64_t inited;
  uint64_t v3;

  if (a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
    *(_QWORD *)(inited + 32) = 1701274725;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 0x74657366666FLL;
    *(_QWORD *)(inited + 96) = 0xE600000000000000;
    sub_22A6A6084();
    sub_22A630814(inited);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A7590;
    *(_QWORD *)(v3 + 32) = 1701869940;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 88) = 0x65756C6176;
    *(_QWORD *)(v3 + 96) = 0xE500000000000000;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A7590;
    *(_QWORD *)(v3 + 32) = 1701869940;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 88) = 0x65756C6176;
    *(_QWORD *)(v3 + 96) = 0xE500000000000000;
  }
  sub_22A6A6084();
  return sub_22A630814(v3);
}

unint64_t sub_22A67B714(uint64_t a1, char a2)
{
  uint64_t inited;
  uint64_t v3;

  if (a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
    *(_QWORD *)(inited + 32) = 1701274725;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 0x74657366666FLL;
    *(_QWORD *)(inited + 96) = 0xE600000000000000;
    sub_22A6A6084();
    sub_22A630814(inited);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A7590;
    *(_QWORD *)(v3 + 32) = 1701869940;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 88) = 0x65756C6176;
    *(_QWORD *)(v3 + 96) = 0xE500000000000000;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A7590;
    *(_QWORD *)(v3 + 32) = 1701869940;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 88) = 0x65756C6176;
    *(_QWORD *)(v3 + 96) = 0xE500000000000000;
  }
  sub_22A6A6084();
  return sub_22A630814(v3);
}

unint64_t sub_22A67B9CC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_22A67B464(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
  *a1 = result;
  return result;
}

unint64_t sub_22A67B9F8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67BA1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67BA1C()
{
  unint64_t result;

  result = qword_255B00800;
  if (!qword_255B00800)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for HorizontalPosition, &type metadata for HorizontalPosition);
    atomic_store(result, (unint64_t *)&qword_255B00800);
  }
  return result;
}

unint64_t sub_22A67BA60@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_22A67B714(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
  *a1 = result;
  return result;
}

unint64_t sub_22A67BA8C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67BAB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67BAB0()
{
  unint64_t result;

  result = qword_255B00830;
  if (!qword_255B00830)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for VerticalPosition, &type metadata for VerticalPosition);
    atomic_store(result, (unint64_t *)&qword_255B00830);
  }
  return result;
}

uint64_t sub_22A67BAF4()
{
  char *v0;

  return *(_QWORD *)&aLeft_9[8 * *v0];
}

uint64_t sub_22A67BB18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A67BAF4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A67BB3C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67BB60();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67BB60()
{
  unint64_t result;

  result = qword_255B00860;
  if (!qword_255B00860)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Alignment, &type metadata for TextContent.Alignment);
    atomic_store(result, (unint64_t *)&qword_255B00860);
  }
  return result;
}

unint64_t sub_22A67BBA4(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67BBC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67BBC8()
{
  unint64_t result;

  result = qword_255B00868;
  if (!qword_255B00868)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Alignment, &type metadata for TextContent.Alignment);
    atomic_store(result, (unint64_t *)&qword_255B00868);
  }
  return result;
}

uint64_t sub_22A67BC0C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Animation<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A67BC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  __int128 *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  void (*v43)(uint64_t, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_22A6A6000();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v41 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_22A6A6000();
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v52 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v44 = (char *)&v41 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A97F0;
  *(_QWORD *)(inited + 32) = 0x6576727563;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v19 = *(int *)(a1 + 52);
  v53 = v2;
  v20 = (__int128 *)(v2 + v19);
  v21 = *((_BYTE *)v20 + 16);
  v54 = *v20;
  v55 = v21;
  v22 = sub_22A69A100();
  if (v22)
  {
    *(_QWORD *)&v54 = v22;
    __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
    sub_22A628ED4();
    sub_22A6A6084();
  }
  else
  {
    *(_QWORD *)(inited + 80) = 0;
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  *(_QWORD *)(inited + 88) = 0x79616C6564;
  *(_QWORD *)(inited + 96) = 0xE500000000000000;
  v23 = v53;
  *(_QWORD *)&v54 = *(_QWORD *)(v53 + *(int *)(a1 + 40));
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  *(_QWORD *)&v54 = *(_QWORD *)(v23 + *(int *)(a1 + 36));
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x65756C61566F74;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  v43 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  v43(v5, a2);
  v24 = v52;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v26 = v25(v14, 1, AssociatedTypeWitness);
  v46 = a2;
  if (v26 == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v48);
    *(_QWORD *)(inited + 248) = 0;
    *(_OWORD *)(inited + 216) = 0u;
    *(_OWORD *)(inited + 232) = 0u;
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v41 = v25;
    v28 = v44;
    v27(v44, v14, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    sub_22A6A6180();
    v29 = v28;
    v25 = v41;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v29, AssociatedTypeWitness);
  }
  *(_QWORD *)(inited + 256) = 0x756C61566D6F7266;
  *(_QWORD *)(inited + 264) = 0xE900000000000065;
  v30 = v53 + *(int *)(a1 + 44);
  v32 = v49;
  v31 = v50;
  v33 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v51, v30, v50);
  v34 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  else
  {
    v35 = v45;
    v43(v5, v46);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v5);
    if (v25(v35, 1, AssociatedTypeWitness) != 1)
    {
      v36 = v52;
      v37 = v42;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v42, v35, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      sub_22A6A6180();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, AssociatedTypeWitness);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
  }
  *(_QWORD *)(inited + 304) = 0;
  *(_OWORD *)(inited + 272) = 0u;
  *(_OWORD *)(inited + 288) = 0u;
LABEL_13:
  v38 = sub_22A630E48(inited);
  v39 = sub_22A678C6C(v38);
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_22A67C0F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[9];
  if ((v1 & 0x2000000000000000) != 0)
  {
    v3 = v0[8];
    v4 = v1 & 0xDFFFFFFFFFFFFFFFLL;
    v5 = v0[5];
    sub_22A6A6264();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22A64E224(v3, v4);
    sub_22A6A5DE4();
    if ((v5 & 1) == 0)
    {
      sub_22A6A6264();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
      sub_22A6A627C();
    }
    sub_22A6A6264();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A5BD4();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_22A64E268(v3, v4);
  }
  else
  {
    sub_22A6A6264();
    return sub_22A6A5DE4();
  }
}

uint64_t sub_22A67C2C4()
{
  sub_22A6A6258();
  sub_22A67C0F4();
  return sub_22A6A62A0();
}

uint64_t sub_22A67C320()
{
  sub_22A6A6258();
  sub_22A67C0F4();
  return sub_22A6A62A0();
}

unint64_t sub_22A67C37C()
{
  unint64_t result;

  result = qword_255B00870;
  if (!qword_255B00870)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AA8C0, &type metadata for RenderAssetActionType);
    atomic_store(result, (unint64_t *)&qword_255B00870);
  }
  return result;
}

void sub_22A67C3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_22A67C420(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x22A67C604);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_22A67C628(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22A67C684()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_22A67C3C0((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_22A64E268(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_22A67C84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_22A6A5AFC();
  v11 = result;
  if (result)
  {
    result = sub_22A6A5B14();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_22A6A5B08();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_22A67C3C0(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_22A67C900(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_22A67C944()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_22A67C978 + *((int *)qword_22A67CA38 + (v0 >> 62))))();
}

uint64_t sub_22A67C988@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_22A64E224(v2, v1);
      sub_22A67C628(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_22A67CA48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  __int16 v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[5];
  __int16 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[21];

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v9 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v11 = a1[9];
  v13 = *a2;
  v12 = a2[1];
  v15 = a2[2];
  v14 = a2[3];
  v17 = a2[4];
  v16 = a2[5];
  v19 = a2[6];
  v18 = a2[7];
  v20 = a2[8];
  v21 = a2[9];
  v73[0] = *a1;
  v73[1] = v2;
  v73[2] = v5;
  v73[3] = v4;
  v73[4] = v7;
  v73[5] = v6;
  v73[6] = v9;
  v73[7] = v8;
  v64 = v10;
  v73[8] = v10;
  v73[9] = v11;
  v73[10] = v13;
  v73[11] = v12;
  v73[12] = v15;
  v73[13] = v14;
  v73[14] = v17;
  v73[15] = v16;
  v73[16] = v19;
  v73[17] = v18;
  v73[18] = v20;
  v73[19] = v21;
  if ((v11 & 0x2000000000000000) != 0)
  {
    if ((v21 & 0x2000000000000000) != 0)
    {
      v54 = v21 & 0xDFFFFFFFFFFFFFFFLL;
      v69[0] = v3;
      v69[1] = v2;
      v69[2] = v5;
      v69[3] = v4;
      v69[4] = v7;
      v70 = v6 & 0x101;
      v71 = v9;
      v72 = v8;
      v65[0] = v13;
      v65[1] = v12;
      v65[2] = v15;
      v65[3] = v14;
      v65[4] = v17;
      v66 = v16 & 0x101;
      v67 = v19;
      v68 = v18;
      v50 = v21;
      v35 = v15;
      v36 = v4;
      v37 = v14;
      v61 = v7;
      v63 = v9;
      v38 = v17;
      v39 = v6;
      v40 = v16;
      v41 = v8;
      v42 = v2;
      v43 = v3;
      sub_22A677070(v13, v12, v35, v37, v38, v40, v19, v18, v20, v50);
      v44 = v11 & 0xDFFFFFFFFFFFFFFFLL;
      sub_22A677070(v43, v42, v5, v36, v61, v39, v63, v41, v64, v11);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_22A64E224(v64, v11 & 0xDFFFFFFFFFFFFFFFLL);
      sub_22A64E224(v20, v54);
      if ((_s10AirPlayKit11RenderAssetV2eeoiySbAC_ACtFZ_0((uint64_t)v69, (uint64_t)v65) & 1) != 0)
      {
        sub_22A67C900(v64, v44);
        v22 = v45;
        sub_22A64E268(v20, v54);
        sub_22A64E268(v64, v44);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      sub_22A64E268(v20, v54);
      sub_22A64E268(v64, v44);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_13:
      v22 = 0;
      goto LABEL_14;
    }
LABEL_7:
    v48 = v20;
    v49 = v21;
    v23 = v13;
    v24 = v15;
    v25 = v4;
    v26 = v14;
    v27 = v7;
    v28 = v6;
    v29 = v16;
    v30 = v9;
    v31 = v19;
    v32 = v8;
    v33 = v2;
    v34 = v3;
    sub_22A677070(v23, v12, v24, v26, v17, v29, v31, v18, v48, v49);
    sub_22A677070(v34, v33, v5, v25, v27, v28, v30, v32, v64, v11);
    goto LABEL_13;
  }
  if ((v21 & 0x2000000000000000) != 0)
    goto LABEL_7;
  v58 = v6;
  v59 = v8;
  v60 = v7;
  v62 = v9;
  v56 = v5;
  v57 = v4;
  v51 = v3;
  v52 = v2;
  if (v3 == v13 && v2 == v12)
  {
    v22 = 1;
  }
  else
  {
    v53 = v18;
    v55 = v12;
    v46 = sub_22A6A61D4();
    v18 = v53;
    v12 = v55;
    v22 = v46;
  }
  sub_22A677070(v13, v12, v15, v14, v17, v16, v19, v18, v20, v21);
  sub_22A677070(v51, v52, v56, v57, v60, v58, v62, v59, v64, v11);
LABEL_14:
  sub_22A67CD9C(v73);
  return v22 & 1;
}

uint64_t *sub_22A67CD9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = a1[10];
  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = a1[15];
  v7 = a1[16];
  v8 = a1[17];
  v9 = a1[18];
  v10 = a1[19];
  sub_22A677318(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  sub_22A677318(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t destroy for RenderAssetActionType(uint64_t *a1)
{
  return sub_22A677318(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

uint64_t *initializeWithCopy for RenderAssetActionType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  sub_22A677070(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t *assignWithCopy for RenderAssetActionType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v23 = a2[9];
  sub_22A677070(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  v19 = a1[7];
  v20 = a1[8];
  v21 = a1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v23;
  sub_22A677318(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t *assignWithTake for RenderAssetActionType(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  v11 = a1[8];
  v12 = a1[9];
  v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v13;
  v14 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v14;
  *((_OWORD *)a1 + 4) = a2[4];
  sub_22A677318(v3, v5, v4, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderAssetActionType(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 40) >> 2) & 0xFFFFFF80 | (*(_QWORD *)(a1 + 40) >> 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for RenderAssetActionType(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 72) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_22A67D0FC(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 72) >> 61) & 1;
}

uint64_t sub_22A67D108(uint64_t result)
{
  *(_QWORD *)(result + 72) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_22A67D118(uint64_t result, char a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)(result + 72) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
  *(_QWORD *)(result + 40) &= 0x101uLL;
  *(_QWORD *)(result + 72) = v2;
  return result;
}

ValueMetadata *type metadata accessor for RenderAssetActionType()
{
  return &type metadata for RenderAssetActionType;
}

uint64_t dispatch thunk of AirPlayOvelayCoordinating.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AirPlayOvelayCoordinating.activate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AirPlayOvelayCoordinating.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AirPlayOvelayCoordinating.connect()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  return v7(a1, a2);
}

unint64_t sub_22A67D1D4()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t inited;

  v1 = *v0;
  v2 = *v0 >> 30;
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A7580;
    *(_QWORD *)(inited + 32) = 2003790950;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 0x6E656D6E67696C61;
    *(_QWORD *)(inited + 96) = 0xE900000000000074;
    __asm { BR              X12 }
  }
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A7580;
    *(_QWORD *)(v3 + 32) = 2003790950;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 88) = 0x6E656D6E67696C61;
    *(_QWORD *)(v3 + 96) = 0xE900000000000074;
    sub_22A6A6084();
    *(_QWORD *)(v3 + 144) = 0x676E6963617073;
    *(_QWORD *)(v3 + 152) = 0xE700000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(v3 + 32) = 2003790950;
    *(_QWORD *)(v3 + 40) = 0xE400000000000000;
  }
  sub_22A6A6084();
  return sub_22A630814(v3);
}

unint64_t sub_22A67D510@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A67D1D4();
  *a1 = result;
  return result;
}

unint64_t sub_22A67D534(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67D558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67D558()
{
  unint64_t result;

  result = qword_255B008A8;
  if (!qword_255B008A8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent.Flow, &type metadata for ContainerContent.Flow);
    atomic_store(result, (unint64_t *)&qword_255B008A8);
  }
  return result;
}

unint64_t sub_22A67D59C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A67D5C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A67D5C0()
{
  unint64_t result;

  result = qword_255B008B0;
  if (!qword_255B008B0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ContainerContent.Flow, &type metadata for ContainerContent.Flow);
    atomic_store(result, (unint64_t *)&qword_255B008B0);
  }
  return result;
}

BOOL static AirPlayOverlayAssetStoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AirPlayOverlayAssetStoreError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AirPlayOverlayAssetStoreError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A67D68C()
{
  unint64_t result;

  result = qword_255B008B8;
  if (!qword_255B008B8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayAssetStoreError, &type metadata for AirPlayOverlayAssetStoreError);
    atomic_store(result, (unint64_t *)&qword_255B008B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayAssetStoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A67D71C + 4 * byte_22A6AA9D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A67D750 + 4 * asc_22A6AA9D0[v4]))();
}

uint64_t sub_22A67D750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A67D758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A67D760);
  return result;
}

uint64_t sub_22A67D76C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A67D774);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A67D778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A67D780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayAssetStoreError()
{
  return &type metadata for AirPlayOverlayAssetStoreError;
}

uint64_t SpriteSheetAnimation.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_BYTE *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 41);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 41) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t SpriteSheetAnimation.animation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SpriteSheetAnimation() + 20);
  return sub_22A67D858(v3, a1);
}

uint64_t type metadata accessor for SpriteSheetAnimation()
{
  uint64_t result;

  result = qword_255B00920;
  if (!qword_255B00920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A67D858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SpriteSheetAnimation.init(fallback:animation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_QWORD *)(a3 + 8) = v4;
  *(_OWORD *)(a3 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a3 + 32) = v5;
  *(_BYTE *)(a3 + 40) = v6;
  *(_BYTE *)(a3 + 41) = v7;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(a1 + 48);
  v8 = a3 + *(int *)(type metadata accessor for SpriteSheetAnimation() + 20);
  return sub_22A67D904(a2, v8);
}

uint64_t sub_22A67D904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SpriteSheetAnimation.hash(into:)()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22A6A5DE4();
  if ((v1 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SpriteSheetAnimation();
  return sub_22A65C090();
}

uint64_t static SpriteSheetAnimation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 41);
  v20[0] = *(_QWORD *)a1;
  v20[1] = v4;
  v21 = *(_OWORD *)(a1 + 16);
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = *(_OWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 41);
  v14[0] = *(_QWORD *)a2;
  v14[1] = v8;
  v15 = *(_OWORD *)(a2 + 16);
  v16 = v9;
  v17 = v10;
  v18 = v11;
  v19 = *(_OWORD *)(a2 + 48);
  if ((_s10AirPlayKit11RenderAssetV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v14) & 1) == 0)
    return 0;
  v12 = type metadata accessor for SpriteSheetAnimation();
  return sub_22A67DB88(a1 + *(int *)(v12 + 20), a2 + *(int *)(v12 + 20));
}

uint64_t sub_22A67DB88(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char v6;
  int v7;
  char v8;
  uint64_t v10;
  char v11;
  __int128 *v12;
  char v13;
  __int128 v14;
  char v15;
  __int128 v16;
  char v17;

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_6;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  if (*(double *)(a1 + v4[9]) != *(double *)(a2 + v4[9]) || *(double *)(a1 + v4[10]) != *(double *)(a2 + v4[10]))
    goto LABEL_6;
  v5 = v4[11];
  v6 = *(_BYTE *)(a1 + v5);
  v7 = *(unsigned __int8 *)(a2 + v5);
  if ((v6 & 1) == 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_6;
LABEL_9:
    v10 = v4[13];
    v11 = *(_BYTE *)(a1 + v10 + 16);
    v16 = *(_OWORD *)(a1 + v10);
    v17 = v11;
    v12 = (__int128 *)(a2 + v10);
    v13 = *((_BYTE *)v12 + 16);
    v14 = *v12;
    v15 = v13;
    v8 = _s10AirPlayKit14AnimationCurveO2eeoiySbAC_ACtFZ_0((uint64_t)&v16, (uint64_t)&v14);
    return v8 & 1;
  }
  if (v7)
    goto LABEL_9;
LABEL_6:
  v8 = 0;
  return v8 & 1;
}

uint64_t SpriteSheetAnimation.hashValue.getter()
{
  sub_22A6A6258();
  SpriteSheetAnimation.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A67DC84()
{
  sub_22A6A6258();
  SpriteSheetAnimation.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A67DCC4()
{
  sub_22A6A6258();
  SpriteSheetAnimation.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A67DCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  _QWORD v21[2];
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 41);
  v21[0] = *(_QWORD *)a1;
  v21[1] = v6;
  v22 = *(_OWORD *)(a1 + 16);
  v23 = v7;
  v24 = v8;
  v25 = v9;
  v26 = *(_OWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  v13 = *(_BYTE *)(a2 + 41);
  v15[0] = *(_QWORD *)a2;
  v15[1] = v10;
  v16 = *(_OWORD *)(a2 + 16);
  v17 = v11;
  v18 = v12;
  v19 = v13;
  v20 = *(_OWORD *)(a2 + 48);
  if ((_s10AirPlayKit11RenderAssetV2eeoiySbAC_ACtFZ_0((uint64_t)v21, (uint64_t)v15) & 1) != 0)
    return sub_22A67DB88(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

unint64_t sub_22A67DDC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B008C0;
  if (!qword_255B008C0)
  {
    v1 = type metadata accessor for SpriteSheetAnimation();
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for SpriteSheetAnimation, v1);
    atomic_store(result, (unint64_t *)&qword_255B008C0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SpriteSheetAnimation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
    *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
    v6 = a2[7];
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v6;
    v10 = sub_22A6A5C40();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v9, v8, v10);
    v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
    *(_QWORD *)(v9 + v12[9]) = *(_QWORD *)(v8 + v12[9]);
    *(_QWORD *)(v9 + v12[10]) = *(_QWORD *)(v8 + v12[10]);
    *(_BYTE *)(v9 + v12[11]) = *(_BYTE *)(v8 + v12[11]);
    v13 = v12[13];
    v14 = v9 + v13;
    v15 = v8 + v13;
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    *(_OWORD *)v14 = *(_OWORD *)v15;
  }
  return v3;
}

uint64_t destroy for SpriteSheetAnimation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22A6A5C40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for SpriteSheetAnimation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 20);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v9 = sub_22A6A5C40();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v10(v8, v7, v9);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v7 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v7 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v7 + v11[11]);
  v12 = v11[13];
  v13 = v8 + v12;
  v14 = v7 + v12;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  return a1;
}

uint64_t assignWithCopy for SpriteSheetAnimation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  *(_QWORD *)(v9 + v12[9]) = *(_QWORD *)(v10 + v12[9]);
  *(_QWORD *)(v9 + v12[10]) = *(_QWORD *)(v10 + v12[10]);
  *(_BYTE *)(v9 + v12[11]) = *(_BYTE *)(v10 + v12[11]);
  v13 = v12[13];
  v14 = v9 + v13;
  v15 = v10 + v13;
  v16 = *(_BYTE *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = v16;
  return a1;
}

_OWORD *initializeWithTake for SpriteSheetAnimation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22A6A5C40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v11 = v10[13];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v12[16] = v13[16];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  return a1;
}

uint64_t assignWithTake for SpriteSheetAnimation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v9 + v11[11]);
  v12 = v11[13];
  v13 = v8 + v12;
  v14 = v9 + v12;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for SpriteSheetAnimation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A67E2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SpriteSheetAnimation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A67E384(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_22A67E3FC()
{
  unint64_t v0;

  sub_22A67E470(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22A67E470(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_255B00930)
  {
    v2 = sub_22A64E39C();
    v4 = type metadata accessor for Animation(a1, (uint64_t)&type metadata for NoAnimationValue, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255B00930);
  }
}

unint64_t sub_22A67E4C8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A654A94();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22A67E4EC(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  void (*v29)(uint64_t *, uint64_t, uint64_t);
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  void (*v40)(uint64_t *, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  float v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  void (*v71)(uint64_t *, uint64_t, uint64_t);
  char *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char *v81;
  uint64_t *v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112[2];
  _QWORD *v113;
  uint64_t v114[3];
  uint64_t v115;
  uint64_t v116;
  _BYTE v117[64];
  __int128 v118;
  __int128 v119;
  _OWORD v120[2];
  _DWORD v121[15];
  unsigned __int16 v122;
  _BYTE v123[52];
  uint64_t v124;
  unsigned __int16 v125;
  _QWORD v126[5];
  char v127;
  unsigned __int8 v128;
  float v129[15];
  unsigned __int8 v130;
  _DWORD v131[15];
  unsigned __int8 v132;
  float v133[15];
  unsigned __int8 v134;
  __n128 v135[2];
  _QWORD *v136;

  v107 = sub_22A6A5C40();
  v136 = *(_QWORD **)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v6 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00960);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A62981C(a1, (uint64_t)v117, &qword_255AFF1B8);
  v10 = *(_QWORD *)(a1 + 8);
  v105 = *(_QWORD *)(a1 + 24);
  v106 = v10;
  v11 = *(_QWORD *)(a1 + 32);
  v103 = *(_QWORD *)(a1 + 40);
  v104 = v11;
  v12 = *(unsigned __int16 *)(a1 + 60);
  v13 = *(unsigned int *)(a1 + 56);
  v14 = v2[1];
  v118 = *v2;
  v119 = v14;
  v120[0] = v2[2];
  *(_OWORD *)((char *)v120 + 14) = *(__int128 *)((char *)v2 + 46);
  v15 = v108;
  result = sub_22A636D8C((uint64_t)v117, a2);
  if (v15)
    return result;
  v101 = v6;
  v102 = v12;
  v108 = a2;
  v18 = v106;
  v17 = v107;
  v98 = v9;
  v99 = v7;
  v100 = 0;
  v19 = (_QWORD *)sub_22A66658C(result);
  swift_bridgeObjectRelease();
  v20 = v118;
  sub_22A62981C((uint64_t)v117, (uint64_t)v133, &qword_255AFF1B8);
  v97 = v13;
  if ((unint64_t)v134 << 40 != 0x20000000000 && *(float *)&v20 == v133[0] && *((float *)&v20 + 1) == v133[1])
  {
    v22 = *((float *)&v18 + 1);
    v21 = *(float *)&v18;
    v23 = v17;
    v24 = v108;
    v25 = v102;
  }
  else
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
    v115 = v26;
    v27 = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
    v116 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v114);
    v29 = (void (*)(uint64_t *, uint64_t, uint64_t))v136[2];
    v23 = v17;
    v29(boxed_opaque_existential_1, v108, v17);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v26 + 36)) = 13;
    *(_DWORD *)((char *)boxed_opaque_existential_1 + *(int *)(v26 + 40)) = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
    v31 = v19[2];
    v30 = v19[3];
    v32 = v19;
    if (v31 >= v30 >> 1)
      v32 = sub_22A62F20C((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
    v19 = v32;
    v32[2] = v31 + 1;
    sub_22A62981C((uint64_t)v114, (uint64_t)&v32[5 * v31 + 4], (uint64_t *)&unk_255B01090);
    v115 = v26;
    v116 = v27;
    v33 = __swift_allocate_boxed_opaque_existential_1(v114);
    v29(v33, v108, v17);
    *((_BYTE *)v33 + *(int *)(v26 + 36)) = 14;
    *(_DWORD *)((char *)v33 + *(int *)(v26 + 40)) = HIDWORD(v20);
    v35 = v19[2];
    v34 = v19[3];
    if (v35 >= v34 >> 1)
      v19 = sub_22A62F20C((_QWORD *)(v34 > 1), v35 + 1, 1, v19);
    v25 = v102;
    v19[2] = v35 + 1;
    sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v35 + 4], (uint64_t *)&unk_255B01090);
    sub_22A62981C((uint64_t)v117, (uint64_t)v131, &qword_255AFF1B8);
    v24 = v108;
    if ((unint64_t)v132 << 40 == 0x20000000000)
      goto LABEL_17;
    v21 = *(float *)&v131[2];
    v22 = *(float *)&v131[3];
  }
  if (*((float *)&v118 + 2) == v21)
  {
    v36 = v136;
    if (*((float *)&v118 + 3) == v22)
      goto LABEL_25;
    goto LABEL_18;
  }
LABEL_17:
  v36 = v136;
LABEL_18:
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
  v115 = v37;
  v38 = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
  v116 = v38;
  v39 = __swift_allocate_boxed_opaque_existential_1(v114);
  v40 = (void (*)(uint64_t *, uint64_t, uint64_t))v36[2];
  v40(v39, v24, v23);
  v41 = *((_QWORD *)&v118 + 1);
  *((_BYTE *)v39 + *(int *)(v37 + 36)) = 11;
  *(_DWORD *)((char *)v39 + *(int *)(v37 + 40)) = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
  v43 = v19[2];
  v42 = v19[3];
  v44 = v19;
  if (v43 >= v42 >> 1)
    v44 = sub_22A62F20C((_QWORD *)(v42 > 1), v43 + 1, 1, v19);
  v19 = v44;
  v44[2] = v43 + 1;
  sub_22A62981C((uint64_t)v114, (uint64_t)&v44[5 * v43 + 4], (uint64_t *)&unk_255B01090);
  v115 = v37;
  v116 = v38;
  v45 = __swift_allocate_boxed_opaque_existential_1(v114);
  v40(v45, v24, v23);
  *((_BYTE *)v45 + *(int *)(v37 + 36)) = 12;
  *(_DWORD *)((char *)v45 + *(int *)(v37 + 40)) = HIDWORD(v41);
  v47 = v19[2];
  v46 = v19[3];
  if (v47 >= v46 >> 1)
    v19 = sub_22A62F20C((_QWORD *)(v46 > 1), v47 + 1, 1, v19);
  v36 = v136;
  v25 = v102;
  v19[2] = v47 + 1;
  sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v47 + 4], (uint64_t *)&unk_255B01090);
LABEL_25:
  v48 = *(float *)&v119;
  sub_22A62981C((uint64_t)v117, (uint64_t)v129, &qword_255AFF1B8);
  if ((unint64_t)v130 << 40 != 0x20000000000 && v48 == v129[4])
  {
    v50 = v104;
    v49 = v105;
    v51 = v103;
    goto LABEL_34;
  }
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
  v115 = v52;
  v116 = sub_22A628928((unint64_t *)&unk_255B010C0, &qword_255AFEC18);
  v53 = __swift_allocate_boxed_opaque_existential_1(v114);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v36[2])(v53, v24, v23);
  *((_BYTE *)v53 + *(int *)(v52 + 36)) = 15;
  *(float *)((char *)v53 + *(int *)(v52 + 40)) = v48;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
  v55 = v19[2];
  v54 = v19[3];
  if (v55 >= v54 >> 1)
    v19 = sub_22A62F20C((_QWORD *)(v54 > 1), v55 + 1, 1, v19);
  v19[2] = v55 + 1;
  sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v55 + 4], (uint64_t *)&unk_255B01090);
  sub_22A62981C((uint64_t)v117, (uint64_t)v126, &qword_255AFF1B8);
  if ((unint64_t)v128 << 40 != 0x20000000000)
  {
    v49 = v126[3];
    v50 = v126[4];
    v51 = v127;
LABEL_34:
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*((uint64_t *)&v119 + 1), *(uint64_t *)&v120[0], SBYTE8(v120[0]), v49, v50, v51) & 1) != 0)goto LABEL_40;
  }
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
  v115 = v56;
  v116 = sub_22A628928((unint64_t *)&unk_255B010A0, &qword_255AFEC08);
  v57 = __swift_allocate_boxed_opaque_existential_1(v114);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v36[2])(v57, v24, v23);
  sub_22A67F170((__n128 *)((char *)&v119 + 8), v135);
  *((_BYTE *)v57 + *(int *)(v56 + 36)) = 16;
  sub_22A67F170(v135, (__n128 *)((char *)v57 + *(int *)(v56 + 40)));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
  v59 = v19[2];
  v58 = v19[3];
  if (v59 >= v58 >> 1)
    v19 = sub_22A62F20C((_QWORD *)(v58 > 1), v59 + 1, 1, v19);
  v19[2] = v59 + 1;
  sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v59 + 4], (uint64_t *)&unk_255B01090);
LABEL_40:
  v60 = *(_QWORD *)((char *)v120 + 12);
  v61 = *(_QWORD *)((char *)&v120[1] + 4);
  v62 = BYTE12(v120[1]);
  sub_22A62981C((uint64_t)v117, (uint64_t)v123, &qword_255AFF1B8);
  if (HIBYTE(v125) != 2
    && (_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(v60, v61, v62, *(uint64_t *)&v123[44], v124, v125) & 1) != 0)
  {
    v63 = ((v97 | (unint64_t)(v25 << 32)) >> 40) & 1;
    v64 = 1701736302;
    if ((BYTE13(v120[1]) & 1) == 0)
      goto LABEL_43;
LABEL_53:
    v65 = 1;
    v66 = 0xE500000000000000;
    v67 = 0x646E756F72;
    if (!(_DWORD)v63)
      goto LABEL_59;
    goto LABEL_54;
  }
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
  v115 = v69;
  v116 = sub_22A628928((unint64_t *)&unk_255B010A0, &qword_255AFEC08);
  v70 = __swift_allocate_boxed_opaque_existential_1(v114);
  v71 = (void (*)(uint64_t *, uint64_t, uint64_t))v36[2];
  v71(v70, v108, v23);
  *((_BYTE *)v70 + *(int *)(v69 + 36)) = 17;
  v72 = (char *)v70 + *(int *)(v69 + 40);
  *(_QWORD *)v72 = v60;
  *((_QWORD *)v72 + 1) = v61;
  v72[16] = v62;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
  v64 = 1701736302;
  v74 = v19[2];
  v73 = v19[3];
  v75 = v99;
  if (v74 >= v73 >> 1)
    v19 = sub_22A62F20C((_QWORD *)(v73 > 1), v74 + 1, 1, v19);
  v19[2] = v74 + 1;
  sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v74 + 4], (uint64_t *)&unk_255B01090);
  v76 = BYTE13(v120[1]);
  sub_22A62981C((uint64_t)v117, (uint64_t)v121, &qword_255AFF1B8);
  v77 = v121[14] | ((unint64_t)v122 << 32);
  if ((v77 & 0xFF0000000000) == 0x20000000000)
  {
    v71((uint64_t *)v101, v108, v23);
    v78 = (uint64_t)v98;
    if (v76)
    {
      v36 = v136;
LABEL_62:
      v81 = v101;
      v79 = 0xE500000000000000;
      v64 = 0x646E756F72;
LABEL_65:
      ((void (*)(uint64_t, char *, uint64_t))v36[4])(v78, v81, v23);
      *(_BYTE *)(v78 + *(int *)(v75 + 36)) = 19;
      v82 = (uint64_t *)(v78 + *(int *)(v75 + 40));
      *v82 = v64;
      v82[1] = v79;
      v115 = v75;
      v116 = sub_22A628928(qword_255B00968, &qword_255B00960);
      v83 = __swift_allocate_boxed_opaque_existential_1(v114);
      sub_22A62981C(v78, (uint64_t)v83, &qword_255B00960);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_22A62F20C(0, v19[2] + 1, 1, v19);
      v85 = v19[2];
      v84 = v19[3];
      if (v85 >= v84 >> 1)
        v19 = sub_22A62F20C((_QWORD *)(v84 > 1), v85 + 1, 1, v19);
      v19[2] = v85 + 1;
      sub_22A62981C((uint64_t)v114, (uint64_t)&v19[5 * v85 + 4], (uint64_t *)&unk_255B01090);
      goto LABEL_70;
    }
    v79 = 0xE400000000000000;
    v36 = v136;
LABEL_64:
    v81 = v101;
    goto LABEL_65;
  }
  v63 = (v77 >> 40) & 1;
  v36 = v136;
  if ((v76 & 1) != 0)
    goto LABEL_53;
LABEL_43:
  v65 = 0;
  v66 = 0xE400000000000000;
  v67 = 1701736302;
  v68 = 0xE400000000000000;
  if ((v63 & 1) != 0)
  {
LABEL_54:
    v68 = 0xE500000000000000;
    if (v67 == 0x646E756F72)
      goto LABEL_55;
LABEL_59:
    v80 = sub_22A6A61D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
      goto LABEL_70;
    ((void (*)(char *, uint64_t, uint64_t))v36[2])(v101, v108, v23);
    if ((v65 & 1) != 0)
    {
      v78 = (uint64_t)v98;
      v75 = v99;
      goto LABEL_62;
    }
    v79 = 0xE400000000000000;
    v78 = (uint64_t)v98;
    v75 = v99;
    goto LABEL_64;
  }
LABEL_55:
  if (v66 != v68)
    goto LABEL_59;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_70:
  v113 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v86 = v19[2];
  if (v86)
  {
    v87 = (uint64_t)(v19 + 4);
    v136 = v19;
    swift_bridgeObjectRetain();
    do
    {
      sub_22A628968(v87, (uint64_t)v114);
      sub_22A62981C((uint64_t)v114, (uint64_t)&v109, (uint64_t *)&unk_255B01090);
      if (v110)
      {
        sub_22A628A38(&v109, (uint64_t)v112);
        sub_22A628A38(v112, (uint64_t)&v109);
        v88 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v88 = sub_22A62F0EC(0, v88[2] + 1, 1, v88);
          v113 = v88;
        }
        v90 = v88[2];
        v89 = v88[3];
        if (v90 >= v89 >> 1)
          v113 = sub_22A62F0EC((_QWORD *)(v89 > 1), v90 + 1, 1, v88);
        v91 = v110;
        v92 = v111;
        v93 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v109, v110);
        MEMORY[0x24BDAC7A8](v93);
        v95 = (char *)&v97 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v96 + 16))(v95);
        sub_22A69874C(v90, (uint64_t)v95, (uint64_t *)&v113, v91, v92);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      }
      else
      {
        sub_22A6289F8((uint64_t)&v109);
      }
      v87 += 40;
      --v86;
    }
    while (v86);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v113;
}

uint64_t sub_22A67F15C(uint64_t a1, uint64_t a2)
{
  return sub_22A67E4EC(a1, a2);
}

__n128 *sub_22A67F170(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_4(a2, a1);
  return a2;
}

uint64_t sub_22A67F1AC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;

  type metadata accessor for SpriteSheetAnimation();
  result = sub_22A6790E8();
  if (result)
  {
    v1 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(inited + 32) = 0xD000000000000013;
    *(_QWORD *)(inited + 40) = 0x800000022A6AD3F0;
    swift_bridgeObjectRetain();
    sub_22A6A6084();
    v3 = sub_22A630814(inited);
    return sub_22A679058(v3, v1);
  }
  return result;
}

uint64_t sub_22A67F274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22A67F1AC();
  *a1 = result;
  return result;
}

uint64_t sub_22A67F298(uint64_t a1)
{
  uint64_t result;

  result = sub_22A67F300(&qword_255B00998, (uint64_t)&protocol conformance descriptor for SpriteSheetAnimation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A67F2CC(uint64_t a1)
{
  uint64_t result;

  result = sub_22A67F300(&qword_255B009A0, (uint64_t)&protocol conformance descriptor for SpriteSheetAnimation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A67F300(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SpriteSheetAnimation();
    result = MEMORY[0x22E2DF32C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RenderAsset.MIMEType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x504A2F6F65646976;
  else
    return 0x6E702F6567616D69;
}

AirPlayKit::RenderAsset::MIMEType_optional __swiftcall RenderAsset.MIMEType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  AirPlayKit::RenderAsset::MIMEType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_22A67F3E8(char *a1, char *a2)
{
  return sub_22A641210(*a1, *a2);
}

uint64_t sub_22A67F3F4()
{
  return sub_22A687A54();
}

uint64_t sub_22A67F3FC()
{
  return sub_22A6412F8();
}

uint64_t sub_22A67F404()
{
  return sub_22A687D9C();
}

AirPlayKit::RenderAsset::MIMEType_optional sub_22A67F40C(Swift::String *a1)
{
  return RenderAsset.MIMEType.init(rawValue:)(*a1);
}

uint64_t sub_22A67F418@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RenderAsset.MIMEType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t RenderAsset.ImageType.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  return sub_22A6A6264();
}

uint64_t RenderAsset.ImageType.hashValue.getter()
{
  sub_22A6A6258();
  RenderAsset.ImageType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A67F548()
{
  sub_22A6A6258();
  RenderAsset.ImageType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A67F5A4()
{
  sub_22A6A6258();
  RenderAsset.ImageType.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t RenderAsset.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

__n128 RenderAsset.type.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[2].n128_u64[0];
  v3 = v1[2].n128_u8[8];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

void RenderAsset.mime.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

__n128 RenderAsset.init(identifier:type:mime:serialized:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unsigned __int8 *a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  unint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  __n128 result;

  v7 = a3[1].n128_u64[0];
  v8 = a3[1].n128_u8[8];
  v9 = *a4;
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  result = *a3;
  a7[1] = *a3;
  a7[2].n128_u64[0] = v7;
  a7[2].n128_u8[8] = v8;
  a7[2].n128_u8[9] = v9;
  a7[3].n128_u64[0] = a5;
  a7[3].n128_u64[1] = a6;
  return result;
}

uint64_t RenderAsset.hash(into:)()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t RenderAsset.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 40);
  sub_22A6A6258();
  sub_22A6A5DE4();
  if ((v1 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A67F8F4()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 40);
  sub_22A6A5DE4();
  if ((v1 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A67FA04()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 40);
  sub_22A6A6258();
  sub_22A6A5DE4();
  if ((v1 & 1) == 0)
  {
    sub_22A6A6264();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
    sub_22A6A627C();
  }
  sub_22A6A6264();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

BOOL _s10AirPlayKit11RenderAssetV9ImageTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  _BOOL4 v5;

  v2 = *(unsigned __int8 *)(a1 + 24);
  v3 = *(unsigned __int8 *)(a2 + 24);
  v4 = v2 & v3;
  if ((v2 & 1) == 0 && (v3 & 1) == 0)
  {
    v5 = *(float *)a1 == *(float *)a2;
    if (*(float *)(a1 + 4) != *(float *)(a2 + 4))
      v5 = 0;
    if (*(float *)(a1 + 8) != *(float *)(a2 + 8))
      v5 = 0;
    if (*(float *)(a1 + 12) != *(float *)(a2 + 12))
      v5 = 0;
    return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v5;
  }
  return v4;
}

uint64_t _s10AirPlayKit11RenderAssetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 41);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 41);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = *(_QWORD *)(a1 + 32), v13 = sub_22A6A61D4(), v3 = v12, v14 = 0, (v13 & 1) != 0))
  {
    if ((v5 & 1) != 0)
    {
      if ((v10 & 1) != 0)
      {
LABEL_22:
        if (v6)
          v19 = 0x504A2F6F65646976;
        else
          v19 = 0x6E702F6567616D69;
        if (v6)
          v20 = 0xEA00000000004745;
        else
          v20 = 0xE900000000000067;
        if (v11)
          v21 = 0x504A2F6F65646976;
        else
          v21 = 0x6E702F6567616D69;
        if (v11)
          v22 = 0xEA00000000004745;
        else
          v22 = 0xE900000000000067;
        if (v19 == v21 && v20 == v22)
          v14 = 1;
        else
          v14 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
    }
    else if ((v10 & 1) == 0)
    {
      v15 = *(float *)&v2 == *(float *)&v8 && *((float *)&v2 + 1) == *((float *)&v8 + 1);
      v16 = v15 && *(float *)&v4 == *(float *)&v7;
      v17 = v16 && *((float *)&v4 + 1) == *((float *)&v7 + 1);
      if (v17 && v3 == v9)
        goto LABEL_22;
    }
    v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_22A67FD24()
{
  unint64_t result;

  result = qword_255B009A8;
  if (!qword_255B009A8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset.MIMEType, &type metadata for RenderAsset.MIMEType);
    atomic_store(result, (unint64_t *)&qword_255B009A8);
  }
  return result;
}

unint64_t sub_22A67FD6C()
{
  unint64_t result;

  result = qword_255B009B0;
  if (!qword_255B009B0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset.ImageType, &type metadata for RenderAsset.ImageType);
    atomic_store(result, (unint64_t *)&qword_255B009B0);
  }
  return result;
}

unint64_t sub_22A67FDB4()
{
  unint64_t result;

  result = qword_255B009B8;
  if (!qword_255B009B8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderAsset, &type metadata for RenderAsset);
    atomic_store(result, (unint64_t *)&qword_255B009B8);
  }
  return result;
}

uint64_t initializeWithCopy for RenderAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RenderAsset(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RenderAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderAsset()
{
  return &type metadata for RenderAsset;
}

uint64_t storeEnumTagSinglePayload for RenderAsset.MIMEType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A68002C + 4 * byte_22A6AABD9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A680060 + 4 * byte_22A6AABD4[v4]))();
}

uint64_t sub_22A680060(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A680068(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A680070);
  return result;
}

uint64_t sub_22A68007C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A680084);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A680088(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A680090(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RenderAsset.MIMEType()
{
  return &type metadata for RenderAsset.MIMEType;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RenderAsset.ImageType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RenderAsset.ImageType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

uint64_t sub_22A680114(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22A680130(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    *(_BYTE *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderAsset.ImageType()
{
  return &type metadata for RenderAsset.ImageType;
}

uint64_t sub_22A68029C(void *a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  id v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v8 = (uint64_t (__cdecl *)())((char *)&dword_255B00A68 + dword_255B00A68);
  v5 = a1;
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v3[5] = v6;
  *v6 = v3;
  v6[1] = sub_22A680324;
  return v8();
}

uint64_t sub_22A680324()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_release();
  if (v0)
  {
    v6 = sub_22A6A5B20();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255B00A70);
    v7 = sub_22A6A5E50();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 32);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22A680540(void *a1, int a2, void *aBlock, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v6 = sub_22A6A5D84();
  v8 = v7;
  v4[5] = v7;
  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_255B00A38 + dword_255B00A38);
  v9 = a1;
  swift_retain();
  v10 = (_QWORD *)swift_task_alloc();
  v4[6] = v10;
  *v10 = v4;
  v10[1] = sub_22A6805F0;
  return v12(v6, v8);
}

uint64_t sub_22A6805F0(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t *v4;
  void *v5;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v10;
  void *v11;

  v5 = v3;
  v7 = *(void **)(*v4 + 16);
  v8 = *v4;
  swift_task_dealloc();

  swift_release();
  swift_bridgeObjectRelease();
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v8 + 32);
  if (v3)
  {
    v10 = (void *)sub_22A6A5B20();

    ((void (**)(_QWORD, _QWORD, _QWORD, void *))v9)[2](v9, 0, 0, v10);
    _Block_release(v9);
  }
  else
  {
    v11 = (void *)sub_22A6A5D60();
    ((void (**)(_QWORD, void *, _QWORD, _QWORD))v9)[2](v9, v11, a3 & 1, 0);

    _Block_release(v9);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_22A6806F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A680730()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_22A62ED7C;
  return ((uint64_t (*)(void *, int, void *, uint64_t))((char *)&dword_255B00A28 + dword_255B00A28))(v2, v3, v5, v4);
}

uint64_t sub_22A6807B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_22A6807C8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _BYTE *v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(int **)(v1 + 96);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 104);
  if (v2)
  {
    v6 = (uint64_t (*)(void))((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_22A68088C;
    return v6();
  }
  else
  {
    sub_22A64F880();
    swift_allocError();
    *v5 = 8;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A68088C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_22A680900()
{
  uint64_t v0;

  sub_22A62EA00(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
}

uint64_t sub_22A680938()
{
  uint64_t v0;

  sub_22A62EA00(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A68096C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22A680988()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _BYTE *v5;
  int *v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(int **)(v1 + 112);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v6 = (int *)((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v3;
    *v3 = v0;
    v3[1] = sub_22A680A58;
    return ((uint64_t (*)(_QWORD, _QWORD))v6)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  }
  else
  {
    sub_22A64F880();
    swift_allocError();
    *v5 = 8;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A680A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 64) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 72) = a2;
    *(_QWORD *)(v6 + 80) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_22A680AD0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_22A6A5BBC();
  v6 = v5;
  sub_22A62EA00(v3);
  sub_22A64E268(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v4, v6, 1);
}

uint64_t sub_22A680B50()
{
  uint64_t v0;

  sub_22A62EA00(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A680B88()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A680BBC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_22A62E6B0;
  return ((uint64_t (*)(void *, void *, uint64_t))((char *)&dword_255B00A48 + dword_255B00A48))(v2, v3, v4);
}

uint64_t sub_22A680C30()
{
  return sub_22A6572F8((unint64_t *)&qword_255AFEC38, qword_255AFEC40, MEMORY[0x24BEE23D8], MEMORY[0x24BEE04C8]);
}

unint64_t sub_22A680C64()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
  *(_QWORD *)(inited + 32) = 1953394534;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00AE8);
  sub_22A6572F8(qword_255B00AF0, &qword_255B00AE8, MEMORY[0x24BEE0D10], MEMORY[0x24BEE4AB0]);
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x657A6953746E6F66;
  *(_QWORD *)(inited + 96) = 0xE800000000000000;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

uint64_t sub_22A680D84()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = 0x6D6574737973;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_22A680DCC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A680C64();
  *a1 = result;
  return result;
}

unint64_t sub_22A680DF0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A680E14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A680E14()
{
  unint64_t result;

  result = qword_255B00AA8;
  if (!qword_255B00AA8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font, &type metadata for Font);
    atomic_store(result, (unint64_t *)&qword_255B00AA8);
  }
  return result;
}

unint64_t sub_22A680E58(uint64_t a1)
{
  unint64_t result;

  result = sub_22A680E7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A680E7C()
{
  unint64_t result;

  result = qword_255B00AB0;
  if (!qword_255B00AB0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font, &type metadata for Font);
    atomic_store(result, (unint64_t *)&qword_255B00AB0);
  }
  return result;
}

uint64_t sub_22A680EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A680D84();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A680EE4(uint64_t a1)
{
  unint64_t result;

  result = sub_22A680F08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A680F08()
{
  unint64_t result;

  result = qword_255B00AE0;
  if (!qword_255B00AE0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Font.Identifier, &type metadata for Font.Identifier);
    atomic_store(result, (unint64_t *)&qword_255B00AE0);
  }
  return result;
}

unint64_t sub_22A680F4C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64E84C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22A680F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;

  sub_22A69BFD0(a1 & 0xFFFFFFFFFFLL);
  if (v3)
  {
    sub_22A69BFD0(a2 & 0xFFFFFFFFFFLL);
    if (v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
      *(_QWORD *)(inited + 32) = 0x6874646977;
      *(_QWORD *)(inited + 40) = 0xE500000000000000;
      __swift_instantiateConcreteTypeFromMangledName(qword_255AFEC40);
      sub_22A628ED4();
      sub_22A6A6084();
      *(_QWORD *)(inited + 88) = 0x746867696568;
      *(_QWORD *)(inited + 96) = 0xE600000000000000;
      sub_22A6A6084();
      sub_22A630814(inited);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_22A681074(_QWORD *a1@<X8>)
{
  unsigned int *v1;
  uint64_t v3;

  sub_22A680F70(*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32), v1[2] | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 32));
  *a1 = v3;
}

unint64_t sub_22A6810B0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6810D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6810D4()
{
  unint64_t result;

  result = qword_255B00B20;
  if (!qword_255B00B20)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Size, &type metadata for Size);
    atomic_store(result, (unint64_t *)&qword_255B00B20);
  }
  return result;
}

void sub_22A681118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  __CFRunLoopSource *v17;
  __CFRunLoop *v18;
  char v19[8];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_lock);
  swift_unknownObjectWeakInit();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  swift_beginAccess();
  v6 = MEMORY[0x22E2DF4AC](v19);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    v9 = &v7[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_pendingQueue];
    swift_beginAccess();
    v10 = *(_QWORD **)v9;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v9 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_22A62F32C(0, v10[2] + 1, 1, v10);
      *(_QWORD *)v9 = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      v10 = sub_22A62F32C((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      *(_QWORD *)v9 = v10;
    }
    v10[2] = v13 + 1;
    v14 = &v10[2 * v13];
    v14[4] = sub_22A62E554;
    v14[5] = v8;
    swift_endAccess();

  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_unknownObjectWeakDestroy();
  v15 = *(void **)(v2 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop);
  if (v15)
  {
    v16 = *(void **)(v2 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source);
    if (v16)
    {
      v17 = v16;
      v18 = v15;
      CFRunLoopSourceSignal(v17);
      CFRunLoopWakeUp(v18);

    }
  }
}

id sub_22A6812C4()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_255AFE878 != -1)
    swift_once();
  v2 = sub_22A6A5CAC();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD00000000000005BLL, 0x800000022A6AD520, 0x74696E696564, 0xE600000000000000);
  objc_msgSend(v0, sel_cancel);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_22A6814B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B88);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RunLoopWorkerThread()), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(_QWORD *)(v7 + ((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v8 = v5;
  sub_22A681118((uint64_t)sub_22A682378, v7);
  swift_release();
  objc_msgSend(v8, sel_start);

}

uint64_t sub_22A6815CC(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B88);
  return sub_22A6A5ED4();
}

void sub_22A681610(void *a1, char *a2)
{
  __CFRunLoop *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const __CFAllocator *v12;
  CFRunLoopSourceRef v13;
  __CFRunLoopSource *v14;
  __CFRunLoop *v15;
  __CFRunLoopSource *v16;
  __CFRunLoop *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  __CFRunLoopSource *v22;
  uint64_t v23;
  unint64_t v24;
  __CFRunLoop *v25;
  uint64_t v26;
  unint64_t v27;
  const __CFString *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  CFRunLoopRunResult v32;
  void *v33;
  CFRunLoopRunResult v34;
  uint64_t v35;
  void *v36;
  CFRunLoopSourceRef v37;
  uint64_t v38;
  __CFRunLoopSource *v39;
  __CFRunLoop *v40;
  uint64_t v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __CFRunLoop *v46;
  CFRunLoopSourceContext context;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v4 = CFRunLoopGetCurrent();
  context.version = 0;
  context.info = a1;
  memset(&context.retain, 0, 48);
  context.cancel = (void (__cdecl *)(void *, CFRunLoopRef, CFRunLoopMode))sub_22A681B90;
  context.perform = (void (__cdecl *)(void *))sub_22A681B94;
  if (qword_255AFE878 != -1)
    swift_once();
  v5 = sub_22A6A5CAC();
  __swift_project_value_buffer(v5, (uint64_t)qword_255B08F48);
  v6 = sub_22A6A5C94();
  v7 = sub_22A6A5F70();
  v40 = v4;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v46 = (__CFRunLoop *)v9;
    *(_DWORD *)v8 = 136315138;
    swift_beginAccess();
    v41[1] = (uint64_t)context.info;
    v42 = *(_OWORD *)&context.retain;
    v43 = *(_OWORD *)&context.copyDescription;
    v44 = *(_OWORD *)&context.hash;
    v45 = *(_OWORD *)&context.cancel;
    type metadata accessor for CFRunLoopSourceContext(0);
    v10 = sub_22A6A5DC0();
    v41[0] = sub_22A62D174(v10, v11, (uint64_t *)&v46);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v6, v7, "CFRunLoopSourceContext: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v9, -1, -1);
    MEMORY[0x22E2DF3F8](v8, -1, -1);
  }

  v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  swift_beginAccess();
  v13 = CFRunLoopSourceCreate(v12, 0, &context);
  swift_endAccess();
  v14 = v13;
  v15 = v4;
  v16 = v14;
  v17 = v15;
  v18 = sub_22A6A5C94();
  v19 = sub_22A6A5F70();
  v39 = v16;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v41[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v46 = v13;
    v22 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B70);
    v23 = sub_22A6A5DC0();
    v37 = v13;
    v46 = (__CFRunLoop *)sub_22A62D174(v23, v24, v41);
    sub_22A6A6018();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v46 = v40;
    v25 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B78);
    v26 = sub_22A6A5DC0();
    v46 = (__CFRunLoop *)sub_22A62D174(v26, v27, v41);
    sub_22A6A6018();

    v16 = v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v18, v19, "Adding %s to %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v21, -1, -1);
    MEMORY[0x22E2DF3F8](v20, -1, -1);

  }
  else
  {

  }
  v28 = (const __CFString *)*MEMORY[0x24BDBD5A0];
  CFRunLoopAddSource(v17, v16, (CFRunLoopMode)*MEMORY[0x24BDBD5A0]);
  v29 = *(_QWORD *)&a2[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_lock];
  swift_unknownObjectWeakInit();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 16));
  sub_22A681BD0((uint64_t)v41, v40, v13);
  if (v38)
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
    swift_unknownObjectWeakDestroy();
    v30 = sub_22A681E24();
    v31 = (void *)MEMORY[0x22E2DEDE0](v30);
    v32 = CFRunLoopRunInMode(v28, 1.0e10, 1u);
    objc_autoreleasePoolPop(v31);
    if ((v32 - 1) >= 2)
    {
      do
      {
        if ((objc_msgSend(a2, sel_isCancelled, v37) & 1) != 0)
          break;
        v33 = (void *)MEMORY[0x22E2DEDE0]();
        v34 = CFRunLoopRunInMode(v28, 1.0e10, 1u);
        objc_autoreleasePoolPop(v33);
      }
      while ((v34 - 1) > 1);
    }
    swift_unknownObjectWeakInit();
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 16));
    swift_beginAccess();
    v35 = MEMORY[0x22E2DF4AC](&v46);
    if (v35)
    {
      v36 = (void *)v35;
      sub_22A681EE4();

    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));

    swift_unknownObjectWeakDestroy();
  }
}

void sub_22A681B94(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_22A681E24();

  }
}

void sub_22A681BD0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22[3];
  void *v23;

  if (qword_255AFE878 != -1)
    swift_once();
  v6 = sub_22A6A5CAC();
  __swift_project_value_buffer(v6, (uint64_t)qword_255B08F48);
  v7 = sub_22A6A5C94();
  v8 = sub_22A6A5F70();
  if (os_log_type_enabled(v7, v8))
  {
    v23 = a2;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_beginAccess();
    MEMORY[0x22E2DF4AC](a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B80);
    v11 = sub_22A6A5DC0();
    sub_22A62D174(v11, v12, v22);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v7, v8, "%s has been activated!", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v10, -1, -1);
    v13 = v9;
    a2 = v23;
    MEMORY[0x22E2DF3F8](v13, -1, -1);
  }

  swift_beginAccess();
  v14 = MEMORY[0x22E2DF4AC](a1);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(void **)(v14 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop);
    *(_QWORD *)(v14 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop) = a2;
    v17 = a2;

  }
  swift_beginAccess();
  v18 = MEMORY[0x22E2DF4AC](a1);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = *(void **)(v18 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source);
    *(_QWORD *)(v18 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source) = a3;
    v21 = a3;

  }
}

uint64_t sub_22A681E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[8];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_lock);
  swift_unknownObjectWeakInit();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_22A68202C((uint64_t)v9, &v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v8;
  result = swift_unknownObjectWeakDestroy();
  if (v2)
  {
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = v2 + 40;
      do
      {
        v6 = *(void (**)(uint64_t))(v5 - 8);
        v7 = swift_retain();
        v6(v7);
        swift_release();
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22A681EE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = sub_22A6A5CAC();
  __swift_project_value_buffer(v1, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD00000000000005BLL, 0x800000022A6AD520, 0x2870556E61656C63, 0xE900000000000029);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop) = 0;

  v3 = *(void **)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source) = 0;

  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_pendingQueue);
  swift_beginAccess();
  *v4 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A68202C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  _QWORD *v10;

  swift_beginAccess();
  v4 = MEMORY[0x22E2DF4AC](a1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (uint64_t *)(v4 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_pendingQueue);
    swift_beginAccess();
    v7 = *v6;
    swift_bridgeObjectRetain();

  }
  else
  {
    v7 = 0;
  }
  swift_beginAccess();
  result = MEMORY[0x22E2DF4AC](a1);
  if (result)
  {
    v9 = (void *)result;
    v10 = (_QWORD *)(result + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_pendingQueue);
    swift_beginAccess();
    *v10 = MEMORY[0x24BEE4AF8];

    result = swift_bridgeObjectRelease();
  }
  *a2 = v7;
  return result;
}

id sub_22A682124()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _DWORD *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_pendingQueue] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source] = 0;
  v2 = OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_lock;
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = v0;
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)&v0[v2] = v3;

  v7.receiver = v4;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for RunLoopWorkerThread()
{
  return objc_opt_self();
}

void sub_22A682224(char *a1)
{
  void *v1;
  __CFRunLoop *v2;
  void *v3;
  __CFRunLoopSource *v4;
  id v5;
  const __CFString *v6;
  __CFRunLoop *v7;
  __CFRunLoop *v8;

  if (a1)
  {
    v1 = *(void **)&a1[OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_runLoop];
    v2 = a1;
    if (v1)
    {
      v3 = *(void **)((char *)v2 + OBJC_IVAR____TtC10AirPlayKit19RunLoopWorkerThread_source);
      if (v3)
      {
        v8 = v2;
        v4 = v3;
        v5 = v1;
        -[__CFRunLoop cancel](v8, sel_cancel);
        v6 = (const __CFString *)*MEMORY[0x24BDBD5A0];
        v7 = (__CFRunLoop *)v5;
        CFRunLoopRemoveSource(v7, v4, v6);
        CFRunLoopStop(v7);

        v2 = v7;
      }
    }

  }
}

uint64_t sub_22A6822DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A682300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B00B88);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_22A682378()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B00B88) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_22A6815CC(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

double static Transform.identity.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1065353216;
  *(_OWORD *)a1 = xmmword_22A6A77B0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

float Transform.a.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

float Transform.b.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

float Transform.c.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

float Transform.d.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

float Transform.tx.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

float Transform.ty.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

void __swiftcall Transform.init(a:b:c:d:tx:ty:)(AirPlayKit::Transform *__return_ptr retstr, Swift::Float a, Swift::Float b, Swift::Float c, Swift::Float d, Swift::Float tx, Swift::Float ty)
{
  retstr->a = a;
  retstr->b = b;
  retstr->c = c;
  retstr->d = d;
  retstr->tx = tx;
  retstr->ty = ty;
}

double static Transform.scale(x:y:)@<D0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  double result;

  *(float *)a1 = a2;
  result = 0.0;
  *(_QWORD *)(a1 + 4) = 0;
  *(float *)(a1 + 12) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

void static Transform.translation(x:y:)(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  *(_OWORD *)a1 = xmmword_22A6A77B0;
  *(float *)(a1 + 16) = a2;
  *(float *)(a1 + 20) = a3;
}

void static Transform.rotation(radians:)(uint64_t a1@<X8>, float a2@<S0>)
{
  __float2 v3;

  v3 = __sincosf_stret(a2);
  *(float *)a1 = v3.__cosval;
  *(float *)(a1 + 4) = v3.__sinval;
  *(float *)(a1 + 8) = -v3.__sinval;
  *(float *)(a1 + 12) = v3.__cosval;
  *(_QWORD *)(a1 + 16) = 0;
}

float32x2_t static Transform.+ infix(_:_:)@<D0>(uint64_t a1@<X0>, float32x2_t *a2@<X1>, uint64_t a3@<X8>)
{
  int32x4_t v3;
  int32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t result;

  v3 = *(int32x4_t *)a1;
  v4 = *(int32x4_t *)(a1 + 4);
  *(float32x2_t *)v5.f32 = *a2;
  *(float32x2_t *)v6.f32 = a2[1];
  v7 = vmul_n_f32(*a2, COERCE_FLOAT(*(_QWORD *)(a1 + 16)));
  *(float32x2_t *)&v5.u32[2] = *a2;
  v8 = vmul_n_f32(*(float32x2_t *)v6.f32, *(float *)(a1 + 20));
  v6.i64[1] = v6.i64[0];
  v3.i32[1] = *(_DWORD *)(a1 + 8);
  v4.i32[1] = *(_DWORD *)(a1 + 12);
  *(float32x4_t *)a3 = vaddq_f32(vmulq_f32(v5, (float32x4_t)vzip1q_s32(v3, v3)), vmulq_f32(v6, (float32x4_t)vzip1q_s32(v4, v4)));
  result = vadd_f32(a2[2], vadd_f32(v7, v8));
  *(float32x2_t *)(a3 + 16) = result;
  return result;
}

uint64_t Transform.hash(into:)()
{
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t Transform.hashValue.getter()
{
  sub_22A6A6258();
  Transform.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A68258C()
{
  sub_22A6A6258();
  Transform.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A6825CC()
{
  sub_22A6A6258();
  Transform.hash(into:)();
  return sub_22A6A62A0();
}

BOOL sub_22A682604(__int128 *a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  return _s10AirPlayKit9TransformV2eeoiySbAC_ACtFZ_0((float *)&v3, (float *)&v5);
}

BOOL _s10AirPlayKit9TransformV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3] && a1[4] == a2[4] && a1[5] == a2[5];
}

unint64_t sub_22A6826BC()
{
  unint64_t result;

  result = qword_255B00B90;
  if (!qword_255B00B90)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Transform, &type metadata for Transform);
    atomic_store(result, (unint64_t *)&qword_255B00B90);
  }
  return result;
}

unint64_t sub_22A682700(uint64_t a1)
{
  unint64_t result;

  result = sub_22A682724();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A682724()
{
  unint64_t result;

  result = qword_255B00B98;
  if (!qword_255B00B98)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Transform, &type metadata for Transform);
    atomic_store(result, (unint64_t *)&qword_255B00B98);
  }
  return result;
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Transform(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Transform(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Transform()
{
  return &type metadata for Transform;
}

uint64_t sub_22A6827D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = v1;
  v3 = sub_22A6A5C88();
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A68285C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD6E0, 0xD000000000000012, 0x800000022A6AD7F0);
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  v7 = v5 + OBJC_IVAR____TtC10AirPlayKit27RemoteInspectorNodeRegistry_displayTree;
  swift_beginAccess();
  sub_22A62F9B8(v7, v1, (uint64_t *)&unk_255B00CE0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v1, 1, v8);
  v10 = *(_QWORD *)(v0 + 136);
  if (v9 == 1)
  {
    sub_22A629860(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_255B00CE0);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_QWORD *)(v0 + 48) = 0;
  }
  else
  {
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = sub_22A6851F8();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
    sub_22A661674(v10, (uint64_t)boxed_opaque_existential_1);
  }
  v12 = *(_QWORD **)(v0 + 104);
  v13 = v12[11];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 16));
  sub_22A682CD0(v12, v0 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
  v14 = sub_22A69FCD4();
  if (v14)
  {
    v15 = v14;
    sub_22A682F18(v14, 0);
    swift_unknownObjectRetain();
    v16 = sub_22A6A5C94();
    v17 = sub_22A6A5F70();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      *(_QWORD *)(v0 + 88) = objc_msgSend(v15, sel_depth);
      sub_22A6A6018();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_22A61E000, v16, v17, "Depth: %lu", v18, 0xCu);
      MEMORY[0x22E2DF3F8](v18, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease();
    }

    v21 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 120);
    v24 = *(void **)(v0 + 96);
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE4AF8];
    v25 = swift_task_alloc();
    *(_QWORD *)(v25 + 16) = v0 + 80;
    sub_22A6A5C70();
    sub_22A6832E8(v21, (void (*)(uint64_t, void *))sub_22A6851E0, v25);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    swift_task_dealloc();
    v26 = objc_msgSend(v24, sel_dispatcher);
    v27 = swift_bridgeObjectRetain();
    sub_22A6669CC(v27);
    swift_bridgeObjectRelease();
    sub_22A6617C0();
    v28 = (void *)sub_22A6A5E50();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_inlineStyleInvalidatedWithNodeIds_, v28);

    swift_unknownObjectRelease();
    sub_22A629860(v0 + 16, (uint64_t *)&unk_255B00CF0);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void *))(v0 + 8))(v15);
  }
  else
  {
    sub_22A64F880();
    swift_allocError();
    *v19 = 2;
    swift_willThrow();
    sub_22A629860(v0 + 16, (uint64_t *)&unk_255B00CF0);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

_QWORD *sub_22A682CD0(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23[5];
  _BYTE v24[40];
  uint64_t v25;

  v2 = result[2];
  if (!(v2 >> 62))
  {
    v4 = result;
    v5 = (void *)result[3];
    v6 = result[4];
    v7 = result[5];
    v8 = qword_255AFE878;
    v9 = (id)v2;
    v10 = v5;
    swift_unknownObjectRetain();
    v22 = v7;
    swift_unknownObjectRetain();
    if (v8 != -1)
      swift_once();
    v11 = sub_22A6A5CAC();
    __swift_project_value_buffer(v11, (uint64_t)qword_255B08F48);
    sub_22A62F9B8(a2, (uint64_t)v24, (uint64_t *)&unk_255B00CF0);
    v12 = sub_22A6A5C94();
    v13 = sub_22A6A5F70();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v21 = v5;
      v15 = swift_slowAlloc();
      v25 = v15;
      *(_DWORD *)v14 = 136315138;
      sub_22A62F9B8((uint64_t)v24, (uint64_t)v23, (uint64_t *)&unk_255B00CF0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CF0);
      v16 = sub_22A6A5DC0();
      v23[0] = sub_22A62D174(v16, v17, &v25);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      sub_22A629860((uint64_t)v24, (uint64_t *)&unk_255B00CF0);
      _os_log_impl(&dword_22A61E000, v12, v13, "Switch state to connected with rootNode: %s", v14, 0xCu);
      swift_arrayDestroy();
      v18 = v15;
      v5 = v21;
      MEMORY[0x22E2DF3F8](v18, -1, -1);
      MEMORY[0x22E2DF3F8](v14, -1, -1);
    }
    else
    {
      sub_22A629860((uint64_t)v24, (uint64_t *)&unk_255B00CF0);
    }

    v19 = v4[2];
    v20 = (void *)v4[3];
    v4[2] = v2 | 0x4000000000000000;
    v4[3] = v5;
    v4[4] = v6;
    v4[5] = v22;
    return (_QWORD *)sub_22A65F774(v19, v20);
  }
  return result;
}

id sub_22A682F18(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  id result;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t i;
  uint64_t v29;
  id v30;
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;

  v4 = sub_22A6A5CAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255AFE878 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_255B08F48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_unknownObjectRetain_n();
  v9 = sub_22A6A5C94();
  v10 = sub_22A6A5F70();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    v11 = swift_slowAlloc();
    result = (id)swift_slowAlloc();
    *(_DWORD *)v11 = 136315394;
    v35 = 0;
    v36 = 0xE000000000000000;
    v37 = result;
    if (a2 < 0)
    {
      __break(1u);
      goto LABEL_25;
    }
    v30 = result;
    v33 = v5;
    v34 = a2;
    v32 = v9;
    v31 = v10;
    if (a2)
    {
      do
      {
        sub_22A6A5E08();
        --a2;
      }
      while (a2);
      v13 = v35;
      v14 = v36;
    }
    else
    {
      v13 = 0;
      v14 = 0xE000000000000000;
    }
    v35 = sub_22A62D174(v13, v14, (uint64_t *)&v37);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v15 = objc_msgSend(a1, sel_description);
    v16 = a1;
    v17 = sub_22A6A5D84();
    v19 = v18;

    v20 = v17;
    a1 = v16;
    v35 = sub_22A62D174(v20, v19, (uint64_t *)&v37);
    sub_22A6A6018();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    v21 = v32;
    _os_log_impl(&dword_22A61E000, v32, (os_log_type_t)v31, "%s%s", (uint8_t *)v11, 0x16u);
    v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v22, -1, -1);
    MEMORY[0x22E2DF3F8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
    a2 = v34;
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = objc_msgSend(a1, sel_children, v30);
  if (!result)
    return result;
  v23 = result;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
  v24 = sub_22A6A5E5C();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_22A6A612C();
    v25 = (uint64_t)result;
    if (result)
    {
LABEL_14:
      v26 = __OFADD__(a2, 1);
      v27 = a2 + 1;
      if (!v26)
      {
        if (v25 >= 1)
        {
          for (i = 0; i != v25; ++i)
          {
            if ((v24 & 0xC000000000000001) != 0)
            {
              v29 = MEMORY[0x22E2DEB28](i, v24);
            }
            else
            {
              v29 = *(_QWORD *)(v24 + 8 * i + 32);
              swift_unknownObjectRetain();
            }
            sub_22A682F18(v29, v27);
            swift_unknownObjectRelease();
          }
          return (id)swift_bridgeObjectRelease_n();
        }
LABEL_26:
        __break(1u);
        return result;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_14;
  }
  return (id)swift_bridgeObjectRelease_n();
}

id sub_22A6832E8(uint64_t a1, void (*a2)(uint64_t, void *), uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id result;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = sub_22A6A5C88();
  v17 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a3;
  a2(a1, v4);
  result = objc_msgSend(v4, sel_children);
  if (result)
  {
    v13 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
    v14 = sub_22A6A5E5C();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      result = (id)sub_22A6A612C();
      v15 = (uint64_t)result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_4:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
            MEMORY[0x22E2DEB28](i, v14);
          else
            swift_unknownObjectRetain();
          sub_22A6A5C7C();
          sub_22A6832E8(v10, a2, v11);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
          swift_unknownObjectRelease();
        }
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_22A6835D4(void *a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  id v5;
  _QWORD *v6;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v5 = a1;
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v3[5] = v6;
  *v6 = v3;
  v6[1] = sub_22A683650;
  return sub_22A6827D8((uint64_t)v5);
}

uint64_t sub_22A683650(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_release();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 32);
  if (v3)
  {
    v8 = (void *)sub_22A6A5B20();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    v7[2](*(_QWORD *)(v6 + 32), a1, 0);
    _Block_release(v7);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_22A68385C(void *a1, uint64_t a2, void *aBlock, uint64_t a4)
{
  _QWORD *v4;
  id v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_255B00CA0 + dword_255B00CA0);
  v7 = a1;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v4[5] = v8;
  *v8 = v4;
  v8[1] = sub_22A6838F0;
  return v10(a2);
}

uint64_t sub_22A6838F0()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_release();
  if (v0)
  {
    v6 = sub_22A6A5B20();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    v7 = sub_22A6A5D60();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 32);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22A683B04(void *a1, uint64_t a2, void *aBlock, uint64_t a4)
{
  _QWORD *v4;
  id v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_255B00C78 + dword_255B00C78);
  v7 = a1;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v4[5] = v8;
  *v8 = v4;
  v8[1] = sub_22A683B98;
  return v10(a2);
}

uint64_t sub_22A683B98()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_release();
  if (v0)
  {
    v6 = sub_22A6A5B20();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    v7 = sub_22A6A5E50();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 32);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22A683C70(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v4 + 72) = a2;
  *(_DWORD *)(v4 + 76) = a3;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = v3;
  v5 = sub_22A6A5C88();
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A683CD4()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE *v12;
  uint64_t result;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_DWORD *)(v0 + 76);
  v3 = sub_22A6A5CAC();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD6E0, 0xD000000000000032, 0x800000022A6AD750);
  v5 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    result = sub_22A6A612C();
    v20 = result;
    if (result)
      goto LABEL_14;
    goto LABEL_26;
  }
  v6 = *(unsigned int *)(v0 + 72);
  v7 = *(_QWORD *)(*v5 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  v8 = sub_22A69FAD0(v6, v2 + 1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  if (!v8)
  {
    sub_22A64F880();
    swift_allocError();
    *v12 = 1;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_unknownObjectRetain();
  v9 = sub_22A6A5C94();
  v10 = sub_22A6A5F70();
  v47 = v8;
  v48 = v0;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    *(_QWORD *)(v0 + 24) = objc_msgSend(v8, sel_depth);
    sub_22A6A6018();
    swift_unknownObjectRelease();
    _os_log_impl(&dword_22A61E000, v9, v10, "Depth: %lu", v11, 0xCu);
    MEMORY[0x22E2DF3F8](v11, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease();
  }

  v14 = sub_22A6A5C94();
  v15 = sub_22A6A5F70();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_22A61E000, v14, v15, "Children: ", v16, 2u);
    v17 = v16;
    v8 = v47;
    MEMORY[0x22E2DF3F8](v17, -1, -1);
  }

  v18 = objc_msgSend(v8, sel_children);
  if (!v18)
    goto LABEL_27;
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
  v0 = sub_22A6A5E5C();

  if (v0 >> 62)
    goto LABEL_25;
  v20 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_26:
    swift_bridgeObjectRelease_n();
    v0 = v48;
LABEL_27:
    v36 = *(_QWORD *)(v0 + 56);
    v37 = *(_QWORD *)(v0 + 64);
    v38 = *(_QWORD *)(v0 + 48);
    v39 = *(void **)(v0 + 32);
    v40 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
    v41 = swift_task_alloc();
    *(_QWORD *)(v41 + 16) = v0 + 16;
    sub_22A6A5C70();
    sub_22A6832E8(v37, (void (*)(uint64_t, void *))sub_22A685264, v41);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
    swift_task_dealloc();
    v42 = objc_msgSend(v39, sel_dispatcher);
    v43 = swift_bridgeObjectRetain();
    sub_22A6669CC(v43);
    swift_bridgeObjectRelease();
    sub_22A6617C0();
    v44 = (void *)sub_22A6A5E50();
    swift_bridgeObjectRelease();
    objc_msgSend(v42, sel_inlineStyleInvalidatedWithNodeIds_, v44);

    swift_unknownObjectRelease();
    v45 = objc_msgSend(v47, sel_children);
    if (v45)
    {
      v46 = v45;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
      v40 = sub_22A6A5E5C();

    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v48 + 8))(v40);
  }
LABEL_14:
  v21 = v20 - 1;
  if (v20 >= 1)
  {
    v22 = 0;
    v23 = v0 & 0xC000000000000001;
    v49 = v20 - 1;
    if ((v0 & 0xC000000000000001) == 0)
      goto LABEL_17;
    while (1)
    {
      v24 = (void *)MEMORY[0x22E2DEB28](v22, v0);
      while (1)
      {
        swift_unknownObjectRetain_n();
        v25 = sub_22A6A5C94();
        v26 = sub_22A6A5F70();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = swift_slowAlloc();
          v50 = swift_slowAlloc();
          v52 = v50;
          *(_DWORD *)v27 = 136315138;
          v28 = v4;
          v29 = objc_msgSend(v24, sel_description);
          v30 = v0;
          v31 = sub_22A6A5D84();
          v51 = v22;
          v33 = v32;

          v4 = v28;
          v34 = v31;
          v0 = v30;
          *(_QWORD *)(v27 + 4) = sub_22A62D174(v34, v33, &v52);
          v22 = v51;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          _os_log_impl(&dword_22A61E000, v25, v26, "- %s", (uint8_t *)v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22E2DF3F8](v50, -1, -1);
          v35 = v27;
          v21 = v49;
          MEMORY[0x22E2DF3F8](v35, -1, -1);

          swift_unknownObjectRelease();
          if (v49 == v51)
            goto LABEL_26;
        }
        else
        {
          swift_unknownObjectRelease_n();

          if (v21 == v22)
            goto LABEL_26;
        }
        ++v22;
        if (v23)
          break;
LABEL_17:
        v24 = *(void **)(v0 + 8 * v22 + 32);
        swift_unknownObjectRetain();
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22A684334(int a1, id a2, uint64_t *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  v4 = objc_msgSend(a2, sel_nodeId);
  v5 = *a3;
  result = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_22A62FB08(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
    v5 = result;
    *a3 = result;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_22A62FB08((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_DWORD *)(v5 + 4 * v8 + 32) = v4;
  *a3 = v5;
  return result;
}

uint64_t sub_22A684534(void *a1, int a2, int a3, void *aBlock, uint64_t a5)
{
  _QWORD *v5;
  id v9;
  _QWORD *v10;

  v5[2] = a1;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  v9 = a1;
  swift_retain();
  v10 = (_QWORD *)swift_task_alloc();
  v5[5] = v10;
  *v10 = v5;
  v10[1] = sub_22A6845C8;
  return sub_22A683C70((uint64_t)v9, a2, a3);
}

uint64_t sub_22A6845C8()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_release();
  if (v0)
  {
    v6 = sub_22A6A5B20();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
    v7 = sub_22A6A5E50();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 32);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22A6846AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  int v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;

  v2 = *(void **)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 24);
  v4 = *(_DWORD *)(v0 + 28);
  v6 = *(void **)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_22A62ED7C;
  return ((uint64_t (*)(void *, int, int, void *, uint64_t))((char *)&dword_255B00C08 + dword_255B00C08))(v2, v3, v4, v6, v5);
}

uint64_t sub_22A68472C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_22A62ED7C;
  return v6();
}

uint64_t sub_22A684784(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_22A62ED7C;
  return v7();
}

uint64_t sub_22A6847DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22A6A5EF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22A6A5EEC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22A629860(a1, &qword_255AFECC0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22A6A5EBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22A684928()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A68494C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255B00C38 + dword_255B00C38))(a1, v4);
}

uint64_t sub_22A6849C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(unsigned int *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_22A62ED7C;
  return ((uint64_t (*)(void *, uint64_t, void *, uint64_t))((char *)&dword_255B00C58 + dword_255B00C58))(v2, v3, v5, v4);
}

uint64_t sub_22A684A44(int a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = v1;
  *(_DWORD *)(v2 + 184) = a1;
  sub_22A6A5DB4();
  *(_QWORD *)(v2 + 160) = swift_task_alloc();
  *(_QWORD *)(v2 + 168) = type metadata accessor for RenderTransactionAction();
  *(_QWORD *)(v2 + 176) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A684AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(unsigned int *)(v0 + 184);
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD6E0, 0xD000000000000021, 0x800000022A6AD7C0);
  v4 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72)) + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  sub_22A69EDF0(v2, v0 + 72);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  if (!*(_QWORD *)(v0 + 112))
  {
    sub_22A629860(v0 + 72, (uint64_t *)&unk_255AFF8B0);
    sub_22A64F880();
    swift_allocError();
    *v8 = 6;
    swift_willThrow();
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 64);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 32), v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v6, v7);
  v11 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 176);
  _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
  *(_QWORD *)(v10 + *(int *)(v11 + 20)) = v9;
  v12 = sub_22A677CF4();
  v13 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 128) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00CB0);
  v14 = objc_msgSend(v13, sel_isValidJSONObject_, sub_22A6A5FF4());
  swift_unknownObjectRelease();
  if (!v14)
  {
    v25 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    sub_22A64F880();
    swift_allocError();
    *v26 = 7;
LABEL_12:
    swift_willThrow();
    sub_22A6850FC(v25);
    sub_22A64F8C4(v0 + 16);
    goto LABEL_13;
  }
  *(_QWORD *)(v0 + 136) = v12;
  v15 = sub_22A6A5FF4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 144) = 0;
  v16 = objc_msgSend(v13, sel_dataWithJSONObject_options_error_, v15, 3, v0 + 144);
  swift_unknownObjectRelease();
  v17 = *(id *)(v0 + 144);
  if (!v16)
  {
    v27 = v17;
    v25 = *(_QWORD *)(v0 + 176);
    sub_22A6A5B2C();

    goto LABEL_12;
  }
  v18 = sub_22A6A5BC8();
  v20 = v19;

  sub_22A6A5DA8();
  v21 = sub_22A6A5D9C();
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    sub_22A64E268(v18, v20);
  }
  else
  {
    sub_22A64E268(v18, v20);
    v23 = 0;
    v24 = 0xE000000000000000;
  }
  sub_22A6850FC(*(_QWORD *)(v0 + 176));
  sub_22A64F8C4(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v23, v24);
}

uint64_t sub_22A684ED8(int a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_DWORD *)(v2 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_22A684EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;

  if (qword_255AFE878 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned int *)(v0 + 24);
  v3 = sub_22A6A5CAC();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000067, 0x800000022A6AD6E0, 0xD000000000000026, 0x800000022A6AD790);
  v4 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72)) + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  v5 = sub_22A69FAD0(v2, 1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  if (v5)
  {
    v6 = objc_msgSend(v5, sel_attributes);
    if (v6)
    {
      v7 = v6;
      v8 = sub_22A6A5E5C();

    }
    else
    {
      v8 = MEMORY[0x24BEE4AF8];
    }
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    sub_22A64F880();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A685078()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(unsigned int *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_22A62ED7C;
  return ((uint64_t (*)(void *, uint64_t, void *, uint64_t))((char *)&dword_255B00C80 + dword_255B00C80))(v2, v3, v5, v4);
}

uint64_t sub_22A6850FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RenderTransactionAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A685138()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A68516C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_22A62E6B0;
  return ((uint64_t (*)(void *, void *, uint64_t))((char *)&dword_255B00CB8 + dword_255B00CB8))(v2, v3, v4);
}

uint64_t sub_22A6851E0(int a1, void *a2)
{
  uint64_t v2;

  return sub_22A684334(a1, a2, *(uint64_t **)(v2 + 16));
}

unint64_t sub_22A6851F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255B01590;
  if (!qword_255B01590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255AFEEE0);
    v2[0] = sub_22A662144();
    v2[1] = sub_22A662188();
    result = MEMORY[0x22E2DF32C](&unk_22A6A85E0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_255B01590);
  }
  return result;
}

uint64_t sub_22A685268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int EnumCaseMultiPayload;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  if (EnumCaseMultiPayload == 1)
    return 0x6574616D696E61;
  else
    return 0x6E41657461657263;
}

uint64_t sub_22A685330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v5 = v4;
  v8 = type metadata accessor for Animation(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8), a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, v5, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *((_QWORD *)v14 + 1);
    v17 = *v14;
    sub_22A6A6264();
    sub_22A644918(v17);
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6521E4(a1, v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v14, v8);
    sub_22A6A6264();
    Animation.hash(into:)(a1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t sub_22A6854C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = a2;
  v44 = *(_QWORD *)(a4 + 8);
  v7 = type metadata accessor for Animation(0, a3, v44, a4);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v43 - v8;
  v10 = type metadata accessor for RenderAnimationActionType(0, a3, a4, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v43 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v19 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v21 = (char *)&v43 - v20;
  v22 = (char *)&v43 + *(int *)(v19 + 48) - v20;
  v45 = v11;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23((char *)&v43 - v20, a1, v10);
  v23(v22, v48, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23(v14, (uint64_t)v21, v10);
    v24 = v14[1];
    v25 = *((_QWORD *)v14 + 1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v48 = v25;
      v26 = v22[1];
      v27 = *((_QWORD *)v22 + 1);
      v28 = *v22;
      v29 = sub_22A644918(*v14);
      v31 = v30;
      if (v29 == sub_22A644918(v28) && v31 == v32)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v34 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
          goto LABEL_20;
      }
      if (*(_QWORD *)&aNonanimaonce_1[8 * v24] == *(_QWORD *)&aNonanimaonce_1[8 * v26]
        && *(_QWORD *)&aRepeatinted_1[8 * v24 + 8] == *(_QWORD *)&aRepeatinted_1[8 * v26 + 8])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = sub_22A6A61D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v35 = 0;
          goto LABEL_23;
        }
      }
      v35 = sub_22A63EE0C(v48, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v23(v16, (uint64_t)v21, v10);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v36 = v46;
      v37 = v47;
      v38 = (uint64_t)v43;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v22, v47);
      v35 = static Animation.== infix(_:_:)((uint64_t)v16, v38, a3, v44);
      v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v39(v38, v37);
      v39((uint64_t)v16, v37);
LABEL_23:
      v18 = v45;
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
  }
  v35 = 0;
  v10 = TupleTypeMetadata2;
LABEL_24:
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v10);
  return v35 & 1;
}

uint64_t sub_22A685840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  sub_22A6A6258();
  sub_22A685330((uint64_t)v5, a1, v2, v3);
  return sub_22A6A62A0();
}

uint64_t sub_22A68588C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  sub_22A6A6258();
  sub_22A685330((uint64_t)v6, a2, v3, v4);
  return sub_22A6A62A0();
}

uint64_t sub_22A6858CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A6854C4(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A6858D8()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t type metadata accessor for RenderAnimationActionType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenderAnimationActionType);
}

uint64_t sub_22A6858F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for Animation(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8), a4);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_22A685968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v20;
  unsigned int v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  const void *v27;
  void (*v28)(void *, const void *, uint64_t);
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = v12 + 1;
  v14 = v13 + v11;
  v15 = v12 + 3;
  if (((v15
       + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 <= 0x10)
    v16 = 16;
  else
    v16 = ((v15
          + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
        + 17;
  v17 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v17 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v16 > 0x17)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    v21 = *((unsigned __int8 *)a2 + v16);
    if (v21 >= 2)
      v21 = *(_DWORD *)a2 + 2;
    if (v21 == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + v16) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = v15;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v22 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      v23 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      *v22 = *v23;
      v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
      v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v25;
      v26 = (void *)(((unint64_t)v24 + v11 + 8) & ~v11);
      v35 = ~v11;
      v27 = (const void *)(((unint64_t)v25 + v11 + 8) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v27, 1, v9))
      {
        memcpy(v26, v27, v13);
        v28 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      }
      else
      {
        v28 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
        v28(v26, v27, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      }
      v29 = ((unint64_t)v26 + v14) & v35;
      v28((void *)v29, (const void *)(((unint64_t)v27 + v14) & v35), v9);
      v30 = (v34 + (((unint64_t)v27 + v14) & v35)) & 0xFFFFFFFFFFFFFFFCLL;
      v31 = *(_BYTE *)(v30 + 16);
      v32 = (v34 + v29) & 0xFFFFFFFFFFFFFFFCLL;
      *(_OWORD *)v32 = *(_OWORD *)v30;
      *(_BYTE *)(v32 + 16) = v31;
      *((_BYTE *)a1 + v16) = 0;
    }
  }
  return a1;
}

uint64_t sub_22A685BB8(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v20;
  int v21;
  void (*v22)(unint64_t, uint64_t);
  void (*v23)(unint64_t, uint64_t);

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = v10 + 1;
  v12 = v11 + v9;
  v13 = ((v10
        + ((v11 + v9 + ((v9 + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9)) & ~v9)
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  if (v13 <= 0x10)
    v13 = 16;
  v14 = *((unsigned __int8 *)a1 + v13);
  v15 = v14 - 2;
  if (v14 >= 2)
  {
    v16 = v13 <= 3 ? v13 : 4;
    if (v16)
    {
      v17 = v16 == 4 ? *a1 : *(unsigned __int8 *)a1;
      v18 = (v17 | (v15 << (8 * v13))) + 2;
      v14 = v17 + 2;
      if (v13 < 4)
        v14 = v18;
    }
  }
  if (v14 == 1)
    return swift_bridgeObjectRelease();
  (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, v4);
  v20 = ((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
  v21 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7);
  v22 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  if (!v21)
  {
    v23 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
    v22(v20, v7);
    v22 = v23;
  }
  return ((uint64_t (*)(unint64_t, uint64_t))v22)((v12 + v20) & ~v9, v7);
}

uint64_t sub_22A685D4C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  const void *v28;
  void (*v29)(void *, const void *, uint64_t);
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v34;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = v12 + 1;
  v14 = v13 + v11;
  v15 = v12 + 3;
  if (((v12
       + 3
       + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 <= 0x10)
    v16 = 16;
  else
    v16 = ((v12
          + 3
          + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
        + 17;
  v17 = a2[v16];
  v18 = v17 - 2;
  if (v17 >= 2)
  {
    v19 = v16 <= 3 ? v16 : 4;
    if (v19)
    {
      v20 = v19 == 4 ? *(_DWORD *)a2 : *a2;
      v21 = (v20 | (v18 << (8 * v16))) + 2;
      v17 = v20 + 2;
      if (v16 < 4)
        v17 = v21;
    }
  }
  if (v17 == 1)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_BYTE *)(a1 + v16) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = v15;
    v22 = ~v11;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
    v23 = (_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = (void *)(((unint64_t)v25 + v11 + 8) & ~v11);
    v28 = (const void *)(((unint64_t)v26 + v11 + 8) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v9))
    {
      memcpy(v27, v28, v13);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)v27 + v14) & v22, ((unint64_t)v28 + v14) & v22, v9);
    }
    else
    {
      v29 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      v29(v27, v28, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
      v29((void *)(((unint64_t)v27 + v14) & v22), (const void *)(((unint64_t)v28 + v14) & v22), v9);
    }
    v30 = (v34 + (((unint64_t)v28 + v14) & v22)) & 0xFFFFFFFFFFFFFFFCLL;
    v31 = *(_BYTE *)(v30 + 16);
    v32 = (v34 + (((unint64_t)v27 + v14) & v22)) & 0xFFFFFFFFFFFFFFFCLL;
    *(_OWORD *)v32 = *(_OWORD *)v30;
    *(_BYTE *)(v32 + 16) = v31;
    *(_BYTE *)(a1 + v16) = 0;
  }
  return a1;
}

unsigned __int8 *sub_22A685F88(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  void (*v19)(unsigned __int8 *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  int v22;
  void (*v23)(unint64_t, uint64_t);
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  const void *v33;
  void (*v34)(void *, const void *, uint64_t);
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;

  if (a1 == a2)
    return a1;
  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v43 = *(_QWORD *)(v7 + 64);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = v11 + 1;
  v44 = v12 + v10;
  v42 = v11 + 3;
  if (((v11
       + 3
       + ((v12 + v10 + ((v10 + ((((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 <= 0x10)
    v13 = 16;
  else
    v13 = ((v11
          + 3
          + ((v12 + v10 + ((v10 + ((((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL)
        + 17;
  v14 = a1[v13];
  v15 = v14 - 2;
  if (v14 >= 2)
  {
    v16 = v13 <= 3 ? v13 : 4;
    if (v16)
    {
      if (v16 == 4)
      {
        v17 = *(_DWORD *)a1;
        if (v13 < 4)
        {
LABEL_15:
          v14 = (v17 | (v15 << (8 * v13))) + 2;
          goto LABEL_18;
        }
      }
      else
      {
        v17 = *a1;
        if (v13 < 4)
          goto LABEL_15;
      }
      v14 = v17 + 2;
    }
  }
LABEL_18:
  v18 = ~v10;
  if (v14 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = *(_QWORD *)(v6 - 8);
    v41 = v12;
    v19 = *(void (**)(unsigned __int8 *, uint64_t))(v7 + 8);
    v20 = v6;
    v19(a1, v6);
    v21 = (((((unint64_t)&a1[v43 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & v18;
    v22 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, v8);
    v23 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    if (!v22)
      v23(v21, v8);
    v23((v44 + v21) & v18, v8);
    v6 = v20;
    v7 = v40;
    v12 = v41;
  }
  v24 = a2[v13];
  v25 = v24 - 2;
  if (v24 < 2 || (v13 <= 3 ? (v26 = v13) : (v26 = 4), !v26))
  {
LABEL_31:
    if (v24 == 1)
    {
LABEL_32:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      a1[v13] = 1;
      swift_bridgeObjectRetain();
      return a1;
    }
    goto LABEL_35;
  }
  if (v26 == 4)
  {
    v27 = *(_DWORD *)a2;
    if (v13 < 4)
    {
LABEL_30:
      v24 = (v27 | (v25 << (8 * v13))) + 2;
      goto LABEL_31;
    }
  }
  else
  {
    v27 = *a2;
    if (v13 < 4)
      goto LABEL_30;
  }
  if (v27 == -1)
    goto LABEL_32;
LABEL_35:
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
  v28 = (_QWORD *)((unint64_t)&a1[v43 + 7] & 0xFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((unint64_t)&a2[v43 + 7] & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = (void *)(((unint64_t)v30 + v10 + 8) & v18);
  v33 = (const void *)(((unint64_t)v31 + v10 + 8) & v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v33, 1, v8))
  {
    memcpy(v32, v33, v12);
    v34 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
  }
  else
  {
    v34 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    v34(v32, v33, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v32, 0, 1, v8);
  }
  v35 = ((unint64_t)v32 + v44) & v18;
  v34((void *)v35, (const void *)(((unint64_t)v33 + v44) & v18), v8);
  v36 = (v42 + (((unint64_t)v33 + v44) & v18)) & 0xFFFFFFFFFFFFFFFCLL;
  v37 = *(_BYTE *)(v36 + 16);
  v38 = (v42 + v35) & 0xFFFFFFFFFFFFFFFCLL;
  *(_OWORD *)v38 = *(_OWORD *)v36;
  *(_BYTE *)(v38 + 16) = v37;
  a1[v13] = 0;
  return a1;
}

_OWORD *sub_22A6862DC(_OWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  const void *v29;
  void (*v30)(void *, const void *, uint64_t);
  unint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v35;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = v12 + 1;
  v14 = v13 + v11;
  v15 = v12 + 3;
  if (((v12
       + 3
       + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 <= 0x10)
    v16 = 16;
  else
    v16 = ((v12
          + 3
          + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
        + 17;
  v17 = *((unsigned __int8 *)a2 + v16);
  v18 = v17 - 2;
  if (v17 >= 2)
  {
    v19 = v16 <= 3 ? v16 : 4;
    if (v19)
    {
      v20 = v19 == 4 ? *a2 : *(unsigned __int8 *)a2;
      v21 = (v20 | (v18 << (8 * v16))) + 2;
      v17 = v20 + 2;
      if (v16 < 4)
        v17 = v21;
    }
  }
  if (v17 == 1)
  {
    *a1 = *(_OWORD *)a2;
    v22 = 1;
  }
  else
  {
    v35 = v15;
    v23 = ~v11;
    (*(void (**)(_OWORD *, _DWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v24 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    *v24 = *v25;
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v27;
    v28 = (void *)(((unint64_t)v26 + v11 + 8) & ~v11);
    v29 = (const void *)(((unint64_t)v27 + v11 + 8) & ~v11);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v9))
    {
      memcpy(v28, v29, v13);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)v28 + v14) & v23, ((unint64_t)v29 + v14) & v23, v9);
    }
    else
    {
      v30 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
      v30(v28, v29, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      v30((void *)(((unint64_t)v28 + v14) & v23), (const void *)(((unint64_t)v29 + v14) & v23), v9);
    }
    v22 = 0;
    v31 = (v35 + (((unint64_t)v29 + v14) & v23)) & 0xFFFFFFFFFFFFFFFCLL;
    v32 = *(_BYTE *)(v31 + 16);
    v33 = (v35 + (((unint64_t)v28 + v14) & v23)) & 0xFFFFFFFFFFFFFFFCLL;
    *(_OWORD *)v33 = *(_OWORD *)v31;
    *(_BYTE *)(v33 + 16) = v32;
  }
  *((_BYTE *)a1 + v16) = v22;
  return a1;
}

unsigned __int8 *sub_22A68650C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  void (*v19)(unsigned __int8 *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  int v22;
  void (*v23)(unint64_t, uint64_t);
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  char v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  void *v33;
  const void *v34;
  void (*v35)(void *, const void *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;

  if (a1 != a2)
  {
    v6 = sub_22A6A5C40();
    v7 = *(_QWORD *)(v6 - 8);
    v44 = *(_QWORD *)(v7 + 64);
    v8 = *(_QWORD *)(a3 + 16);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 64);
    if (*(_DWORD *)(v9 + 84))
      v12 = *(_QWORD *)(v9 + 64);
    else
      v12 = v11 + 1;
    v45 = v12 + v10;
    v43 = v11 + 3;
    if (((v11
         + 3
         + ((v12 + v10 + ((v10 + ((((v44 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL)
       + 17 <= 0x10)
      v13 = 16;
    else
      v13 = ((v11
            + 3
            + ((v12 + v10 + ((v10 + ((((v44 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFFCLL)
          + 17;
    v14 = a1[v13];
    v15 = v14 - 2;
    if (v14 >= 2)
    {
      v16 = v13 <= 3 ? v13 : 4;
      if (v16)
      {
        if (v16 == 4)
        {
          v17 = *(_DWORD *)a1;
          if (v13 < 4)
          {
LABEL_15:
            v14 = (v17 | (v15 << (8 * v13))) + 2;
            goto LABEL_18;
          }
        }
        else
        {
          v17 = *a1;
          if (v13 < 4)
            goto LABEL_15;
        }
        v14 = v17 + 2;
      }
    }
LABEL_18:
    v18 = ~v10;
    if (v14 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = *(_QWORD *)(v6 - 8);
      v42 = v12;
      v19 = *(void (**)(unsigned __int8 *, uint64_t))(v7 + 8);
      v20 = v6;
      v19(a1, v6);
      v21 = (((((unint64_t)&a1[v44 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & v18;
      v22 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, v8);
      v23 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
      if (!v22)
        v23(v21, v8);
      v23((v45 + v21) & v18, v8);
      v6 = v20;
      v7 = v41;
      v12 = v42;
    }
    v24 = a2[v13];
    v25 = v24 - 2;
    if (v24 < 2 || (v13 <= 3 ? (v26 = v13) : (v26 = 4), !v26))
    {
LABEL_31:
      if (v24 == 1)
      {
LABEL_32:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v28 = 1;
LABEL_39:
        a1[v13] = v28;
        return a1;
      }
LABEL_35:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      v29 = (_QWORD *)((unint64_t)&a1[v44 + 7] & 0xFFFFFFFFFFFFF8);
      v30 = (_QWORD *)((unint64_t)&a2[v44 + 7] & 0xFFFFFFFFFFFFF8);
      *v29 = *v30;
      v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
      v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v31 = *v32;
      v33 = (void *)(((unint64_t)v31 + v10 + 8) & v18);
      v34 = (const void *)(((unint64_t)v32 + v10 + 8) & v18);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v34, 1, v8))
      {
        memcpy(v33, v34, v12);
        v35 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
      }
      else
      {
        v35 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
        v35(v33, v34, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v33, 0, 1, v8);
      }
      v36 = ((unint64_t)v33 + v45) & v18;
      v35((void *)v36, (const void *)(((unint64_t)v34 + v45) & v18), v8);
      v28 = 0;
      v37 = (v43 + (((unint64_t)v34 + v45) & v18)) & 0xFFFFFFFFFFFFFFFCLL;
      v38 = *(_BYTE *)(v37 + 16);
      v39 = (v43 + v36) & 0xFFFFFFFFFFFFFFFCLL;
      *(_OWORD *)v39 = *(_OWORD *)v37;
      *(_BYTE *)(v39 + 16) = v38;
      goto LABEL_39;
    }
    if (v26 == 4)
    {
      v27 = *(_DWORD *)a2;
      if (v13 < 4)
      {
LABEL_30:
        v24 = (v27 | (v25 << (8 * v13))) + 2;
        goto LABEL_31;
      }
    }
    else
    {
      v27 = *a2;
      if (v13 < 4)
        goto LABEL_30;
    }
    if (v27 == -1)
      goto LABEL_32;
    goto LABEL_35;
  }
  return a1;
}

uint64_t sub_22A68684C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  unsigned int v21;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v9 == 0;
  v12 = v10 + v8;
  if (v11)
    ++v12;
  v13 = ((v10
        + ((v12
          + ((((((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + v8
            + 8) & ~v8)) & ~v8)
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  v14 = 16;
  if (v13 > 0x10)
    v14 = v13;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_23;
  v15 = v14 + 1;
  v16 = 8 * (v14 + 1);
  if ((v14 + 1) <= 3)
  {
    v19 = ((a2 + ~(-1 << v16) - 254) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v19 < 2)
    {
LABEL_23:
      v21 = *(unsigned __int8 *)(a1 + v14);
      if (v21 >= 2)
        return (v21 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_16:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if ((_DWORD)v15)
  {
    if (v15 > 3)
      LODWORD(v15) = 4;
    __asm { BR              X11 }
  }
  return (v20 + 255);
}

void sub_22A6869DC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v11 == 0;
  v14 = v12 + v10;
  if (v13)
    ++v14;
  v15 = ((v12
        + ((v14
          + ((((((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + v10
            + 8) & ~v10)) & ~v10)
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  if (v15 <= 0x10)
    v15 = 16;
  v16 = v15 + 1;
  if (a3 < 0xFF)
  {
    v17 = 0;
  }
  else if (v16 <= 3)
  {
    v19 = ((a3 + ~(-1 << (8 * v16)) - 254) >> (8 * v16)) + 1;
    if (HIWORD(v19))
    {
      v17 = 4u;
    }
    else if (v19 >= 0x100)
    {
      v17 = 2;
    }
    else
    {
      v17 = v19 > 1;
    }
  }
  else
  {
    v17 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v18 = a2 - 255;
  if (v16 < 4)
  {
    if ((_DWORD)v15 != -1)
    {
      v20 = v18 & ~(-1 << (8 * v16));
      bzero(a1, v16);
      if ((_DWORD)v16 == 3)
      {
        *(_WORD *)a1 = v20;
        a1[2] = BYTE2(v20);
      }
      else if ((_DWORD)v16 == 2)
      {
        *(_WORD *)a1 = v20;
      }
      else
      {
        *a1 = v20;
      }
    }
  }
  else
  {
    bzero(a1, v15 + 1);
    *(_DWORD *)a1 = v18;
  }
  __asm { BR              X10 }
}

uint64_t sub_22A686BE8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  v9 = v7 == 0;
  v10 = v8 + v6;
  if (v9)
    ++v10;
  v11 = ((v8
        + ((v10
          + ((((((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + v6
            + 8) & ~v6)) & ~v6)
        + 3) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  if (v11 <= 0x10)
    v11 = 16;
  result = a1[v11];
  if (result >= 2)
  {
    v13 = v11 <= 3 ? v11 : 4;
    if (v13)
    {
      if (v13 == 4)
        v14 = *(_DWORD *)a1;
      else
        v14 = *a1;
      v15 = (v14 | (((_DWORD)result - 2) << (8 * v11))) + 2;
      v16 = v14 + 2;
      if (v11 >= 4)
        return v16;
      else
        return v15;
    }
  }
  return result;
}

void sub_22A686CC4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  size_t v13;
  char v14;
  int v15;
  int v16;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v9 == 0;
  v12 = v10 + v8;
  if (v11)
    ++v12;
  if (((v10
       + ((v12
         + ((((((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + v8
           + 8) & ~v8)) & ~v8)
       + 3) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 <= 0x10)
    v13 = 16;
  else
    v13 = ((v10
          + ((v12
            + ((((((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + v8
              + 8) & ~v8)) & ~v8)
          + 3) & 0xFFFFFFFFFFFFFFFCLL)
        + 17;
  if (a2 > 1)
  {
    if (v13 <= 3)
      v14 = ((a2 - 2) >> (8 * v13)) + 2;
    else
      v14 = 2;
    if (v13 <= 3)
      v15 = (a2 - 2) & ~(-1 << (8 * v13));
    else
      v15 = a2 - 2;
    a1[v13] = v14;
    if (v13 >= 4)
      v16 = 4;
    else
      v16 = v13;
    bzero(a1, v13);
    if (v16 == 1)
      *a1 = v15;
    else
      *(_DWORD *)a1 = v15;
  }
  else
  {
    a1[v13] = a2;
  }
}

uint64_t sub_22A686DC8(char a1)
{
  return *(_QWORD *)&aNonanimaonce_2[8 * a1];
}

uint64_t sub_22A686DE8(char *a1, char *a2)
{
  return sub_22A640874(*a1, *a2);
}

uint64_t sub_22A686DF4()
{
  return sub_22A687ADC();
}

uint64_t sub_22A686DFC()
{
  return sub_22A6412B8();
}

uint64_t sub_22A686E04()
{
  return sub_22A688334();
}

uint64_t sub_22A686E0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A686F74();
  *a1 = result;
  return result;
}

uint64_t sub_22A686E38@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22A686DC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t storeEnumTagSinglePayload for RenderAnimationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A686EAC + 4 * byte_22A6AB005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A686EE0 + 4 * byte_22A6AB000[v4]))();
}

uint64_t sub_22A686EE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A686EE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A686EF0);
  return result;
}

uint64_t sub_22A686EFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A686F04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A686F08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A686F10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RenderAnimationType()
{
  return &type metadata for RenderAnimationType;
}

unint64_t sub_22A686F30()
{
  unint64_t result;

  result = qword_255B00D88;
  if (!qword_255B00D88)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AB09C, &type metadata for RenderAnimationType);
    atomic_store(result, (unint64_t *)&qword_255B00D88);
  }
  return result;
}

uint64_t sub_22A686F74()
{
  unint64_t v0;

  v0 = sub_22A6A618C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t VerticalEdge.rawValue.getter(char a1)
{
  return *(_QWORD *)&aLeading_4[8 * a1];
}

uint64_t HorizontalEdge.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D6F74746F62;
  else
    return 7368564;
}

AirPlayKit::HorizontalEdge_optional __swiftcall HorizontalEdge.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  AirPlayKit::HorizontalEdge_optional v2;

  v1 = sub_22A6A618C();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = AirPlayKit_HorizontalEdge_bottom;
  else
    v2.value = AirPlayKit_HorizontalEdge_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t sub_22A687058(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = HorizontalEdge.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == HorizontalEdge.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22A6870E0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22A6A618C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_22A68713C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = HorizontalEdge.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22A687168(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = VerticalEdge.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == VerticalEdge.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22A6A61D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22A6871F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s10AirPlayKit12VerticalEdgeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_22A68721C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = VerticalEdge.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22A687244()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  HorizontalEdge.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A6872A4()
{
  char *v0;

  HorizontalEdge.rawValue.getter(*v0);
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A6872E4()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  HorizontalEdge.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687340()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  VerticalEdge.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A6873A0()
{
  char *v0;

  VerticalEdge.rawValue.getter(*v0);
  sub_22A6A5DE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A6873E0()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_22A6A6258();
  VerticalEdge.rawValue.getter(v1);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t _s10AirPlayKit12VerticalEdgeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_22A6A618C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_22A687488()
{
  unint64_t result;

  result = qword_255B00D90;
  if (!qword_255B00D90)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for HorizontalEdge, &type metadata for HorizontalEdge);
    atomic_store(result, (unint64_t *)&qword_255B00D90);
  }
  return result;
}

unint64_t sub_22A6874CC(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6874F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6874F0()
{
  unint64_t result;

  result = qword_255B00D98;
  if (!qword_255B00D98)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for HorizontalEdge, &type metadata for HorizontalEdge);
    atomic_store(result, (unint64_t *)&qword_255B00D98);
  }
  return result;
}

unint64_t sub_22A687538()
{
  unint64_t result;

  result = qword_255B00DA0;
  if (!qword_255B00DA0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for VerticalEdge, &type metadata for VerticalEdge);
    atomic_store(result, (unint64_t *)&qword_255B00DA0);
  }
  return result;
}

unint64_t sub_22A68757C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6875A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6875A0()
{
  unint64_t result;

  result = qword_255B00DA8;
  if (!qword_255B00DA8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for VerticalEdge, &type metadata for VerticalEdge);
    atomic_store(result, (unint64_t *)&qword_255B00DA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HorizontalEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A687630 + 4 * byte_22A6AB0FD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A687664 + 4 * byte_22A6AB0F8[v4]))();
}

uint64_t sub_22A687664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A68766C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A687674);
  return result;
}

uint64_t sub_22A687680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A687688);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A68768C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A687694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalEdge()
{
  return &type metadata for HorizontalEdge;
}

uint64_t storeEnumTagSinglePayload for VerticalEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22A6876FC + 4 * byte_22A6AB107[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22A687730 + 4 * byte_22A6AB102[v4]))();
}

uint64_t sub_22A687730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A687738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A687740);
  return result;
}

uint64_t sub_22A68774C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A687754);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22A687758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A687760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerticalEdge()
{
  return &type metadata for VerticalEdge;
}

uint64_t storeEnumTagSinglePayload for LoggingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22A6877C8 + 4 * byte_22A6AB2ED[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22A6877FC + 4 * byte_22A6AB2E8[v4]))();
}

uint64_t sub_22A6877FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A687804(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A68780CLL);
  return result;
}

uint64_t sub_22A687818(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A687820);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22A687824(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A68782C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoggingError()
{
  return &type metadata for LoggingError;
}

unint64_t sub_22A68784C()
{
  unint64_t result;

  result = qword_255B00DB0;
  if (!qword_255B00DB0)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6AB344, &type metadata for LoggingError);
    atomic_store(result, (unint64_t *)&qword_255B00DB0);
  }
  return result;
}

void sub_22A687890(char a1)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A6878E8()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A68797C()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A6879E0()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687A54()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687ADC()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687B44()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A687BAC(char a1)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A687C04()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A687CA0(char a1)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A687CF8()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687D9C()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A687E20()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A687E90(uint64_t a1, char a2)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A687EE4()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A687F88(uint64_t a1, char a2)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A687FDC()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A688078()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A6880DC(uint64_t a1, char a2)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A688130()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

void sub_22A6881C4(uint64_t a1, char a2)
{
  sub_22A6A6258();
  __asm { BR              X10 }
}

uint64_t sub_22A688218()
{
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A6882D4()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t sub_22A688334()
{
  sub_22A6A6258();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  return sub_22A6A62A0();
}

uint64_t TextContent.init(content:font:color:numberOfLines:alignment:textLayout:truncationMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;

  v16 = a3[1];
  v27 = *a3;
  v26 = *((_DWORD *)a3 + 4);
  v17 = *a8;
  v18 = *a10;
  v19 = *a11;
  result = sub_22A6A5DF0();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = result;
    v25 = v17;
    result = sub_22A6A5DF0();
    if ((result & 0x8000000000000000) == 0)
    {
      v22 = result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF1C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
      *(_QWORD *)(inited + 32) = v27;
      *(_QWORD *)(inited + 40) = v16;
      *(_DWORD *)(inited + 48) = v26;
      *(_BYTE *)(inited + 52) = 4;
      *(_QWORD *)(inited + 56) = 0;
      *(_QWORD *)(inited + 64) = v21;
      *(_QWORD *)(inited + 72) = a4;
      *(_QWORD *)(inited + 80) = a5;
      *(_DWORD *)(inited + 88) = a6;
      *(_BYTE *)(inited + 92) = 5;
      *(_QWORD *)(inited + 96) = 0;
      *(_QWORD *)(inited + 104) = v22;
      v24 = sub_22A63977C(inited);
      swift_setDeallocating();
      result = swift_arrayDestroy();
      *(_BYTE *)a9 = v25;
      *(_QWORD *)(a9 + 8) = a1;
      *(_QWORD *)(a9 + 16) = a2;
      *(_QWORD *)(a9 + 24) = a7;
      *(_BYTE *)(a9 + 32) = v18;
      *(_BYTE *)(a9 + 33) = v19;
      *(_QWORD *)(a9 + 40) = v24;
      return result;
    }
  }
  __break(1u);
  return result;
}

void TextContent.init(_:numberOfLines:alignment:textLayout:truncationMode:)(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  char v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = *a3;
  v10 = *a4;
  v11 = *a5;
  v12 = objc_msgSend(a1, sel_string);
  v13 = sub_22A6A5D84();
  v15 = v14;

  v16 = sub_22A63A9F8();
  *(_BYTE *)a6 = v9;
  *(_QWORD *)(a6 + 8) = v13;
  *(_QWORD *)(a6 + 16) = v15;
  *(_QWORD *)(a6 + 24) = a2;
  *(_BYTE *)(a6 + 32) = v10;
  *(_BYTE *)(a6 + 33) = v11;
  *(_QWORD *)(a6 + 40) = v16;
}

uint64_t TextContent.init(content:attributes:numberOfLines:alignment:textLayout:truncationMode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v8;
  char v9;

  v8 = *a6;
  v9 = *a7;
  *(_BYTE *)a8 = *a5;
  *(_QWORD *)(a8 + 8) = result;
  *(_QWORD *)(a8 + 16) = a2;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = v8;
  *(_BYTE *)(a8 + 33) = v9;
  *(_QWORD *)(a8 + 40) = a3;
  return result;
}

uint64_t TextContent.TruncationMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A6885F0 + 4 * byte_22A6AB3F7[*v0]))(0xD000000000000010, 0x800000022A6AC6D0);
}

uint64_t sub_22A6885F0()
{
  return 0x725764726F577962;
}

uint64_t sub_22A688624()
{
  return 0x697070696C437962;
}

uint64_t TextContent.Alignment.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aLeft_12[8 * *v0];
}

AirPlayKit::TextContent::Alignment_optional __swiftcall TextContent.Alignment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (AirPlayKit::TextContent::Alignment_optional)sub_22A6886F4(v1);
}

uint64_t sub_22A688694(char *a1, char *a2)
{
  return sub_22A640DA4(*a1, *a2);
}

uint64_t sub_22A6886A0()
{
  return sub_22A687B44();
}

uint64_t sub_22A6886A8()
{
  return sub_22A6416E0();
}

uint64_t sub_22A6886B0()
{
  return sub_22A688078();
}

AirPlayKit::TextContent::Alignment_optional sub_22A6886B8(Swift::String *a1)
{
  return TextContent.Alignment.init(rawValue:)(*a1);
}

uint64_t sub_22A6886C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TextContent.Alignment.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

AirPlayKit::TextContent::Layout_optional __swiftcall TextContent.Layout.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (AirPlayKit::TextContent::Layout_optional)sub_22A6886F4(v1);
}

uint64_t sub_22A6886F4@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22A6A618C();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t TextContent.Layout.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A688780 + 4 * byte_22A6AB3FD[*v0]))(0xD000000000000011, 0x800000022A6AC600);
}

uint64_t sub_22A688780()
{
  return 0x746C7561666564;
}

unint64_t sub_22A688798()
{
  return 0xD000000000000010;
}

uint64_t sub_22A6887B4()
{
  return 0x7865547473726966;
}

uint64_t sub_22A6887D4()
{
  return 0x747865547473616CLL;
}

void sub_22A6887F4(char *a1)
{
  sub_22A640E28(*a1);
}

void sub_22A688800()
{
  char *v0;

  sub_22A687BAC(*v0);
}

void sub_22A688808(uint64_t a1)
{
  char *v1;

  sub_22A641610(a1, *v1);
}

void sub_22A688810(uint64_t a1)
{
  char *v1;

  sub_22A687F88(a1, *v1);
}

AirPlayKit::TextContent::Layout_optional sub_22A688818(Swift::String *a1)
{
  return TextContent.Layout.init(rawValue:)(*a1);
}

uint64_t sub_22A688824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TextContent.Layout.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

AirPlayKit::TextContent::TruncationMode_optional __swiftcall TextContent.TruncationMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AirPlayKit::TextContent::TruncationMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22A6A618C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_22A6888A0(char *a1)
{
  sub_22A640FDC(*a1);
}

void sub_22A6888AC()
{
  char *v0;

  sub_22A687CA0(*v0);
}

void sub_22A6888B4(uint64_t a1)
{
  char *v1;

  sub_22A641544(a1, *v1);
}

void sub_22A6888BC(uint64_t a1)
{
  char *v1;

  sub_22A687E90(a1, *v1);
}

AirPlayKit::TextContent::TruncationMode_optional sub_22A6888C4(Swift::String *a1)
{
  return TextContent.TruncationMode.init(rawValue:)(*a1);
}

uint64_t sub_22A6888D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TextContent.TruncationMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void TextContent.alignment.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t TextContent.content.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextContent.numberOfLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

void TextContent.textLayout.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

void TextContent.truncationMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

uint64_t TextContent.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

void TextContent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  sub_22A6A6264();
  __asm { BR              X9 }
}

uint64_t sub_22A688A18()
{
  uint64_t v0;
  uint64_t v1;

  sub_22A6A5DE4();
  v1 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)sub_22A688AC4 + 4 * byte_22A6AB407[v0]))(v1);
}

uint64_t sub_22A688AC4()
{
  uint64_t v0;
  uint64_t v1;

  sub_22A6A5DE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22A688CFC(v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t TextContent.hashValue.getter()
{
  sub_22A6A6258();
  TextContent.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A688BE8()
{
  sub_22A6A6258();
  TextContent.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A688C54()
{
  sub_22A6A6258();
  TextContent.hash(into:)();
  return sub_22A6A62A0();
}

BOOL sub_22A688CB8()
{
  return sub_22A6931E8();
}

uint64_t sub_22A688CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2 + 56;
  sub_22A6A62A0();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v20 = (unint64_t)(v3 + 63) >> 6;
  v22 = a2;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v8++, 1))
      goto LABEL_19;
    if (v8 >= v20)
    {
LABEL_17:
      swift_release();
      return sub_22A6A6264();
    }
    v18 = *(_QWORD *)(v21 + 8 * v8);
    if (!v18)
      break;
LABEL_16:
    v5 = (v18 - 1) & v18;
    v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
    v11 = *(_QWORD *)(v22 + 48) + 40 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(unsigned int *)(v11 + 16);
    v15 = *(_BYTE *)(v11 + 20);
    sub_22A6A6258();
    sub_22A635434(v12, v13, v14, v15);
    TextAttribute.hash(into:)();
    sub_22A6A6264();
    sub_22A6A6264();
    v16 = sub_22A6A62A0();
    result = sub_22A63544C(v12, v13, v14, v15);
    v7 ^= v16;
  }
  v19 = v8 + 1;
  if (v8 + 1 >= v20)
    goto LABEL_17;
  v18 = *(_QWORD *)(v21 + 8 * v19);
  if (v18)
  {
    ++v8;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v20)
      goto LABEL_17;
    v18 = *(_QWORD *)(v21 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_22A688EE8()
{
  unint64_t result;

  result = qword_255B00DB8;
  if (!qword_255B00DB8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Alignment, &type metadata for TextContent.Alignment);
    atomic_store(result, (unint64_t *)&qword_255B00DB8);
  }
  return result;
}

unint64_t sub_22A688F30()
{
  unint64_t result;

  result = qword_255B00DC0;
  if (!qword_255B00DC0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Layout, &type metadata for TextContent.Layout);
    atomic_store(result, (unint64_t *)&qword_255B00DC0);
  }
  return result;
}

unint64_t sub_22A688F78()
{
  unint64_t result;

  result = qword_255B00DC8;
  if (!qword_255B00DC8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.TruncationMode, &type metadata for TextContent.TruncationMode);
    atomic_store(result, (unint64_t *)&qword_255B00DC8);
  }
  return result;
}

unint64_t sub_22A688FC0()
{
  unint64_t result;

  result = qword_255B00DD0;
  if (!qword_255B00DD0)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent, &type metadata for TextContent);
    atomic_store(result, (unint64_t *)&qword_255B00DD0);
  }
  return result;
}

unint64_t sub_22A689004(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64E7C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for TextContent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextContent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TextContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContent()
{
  return &type metadata for TextContent;
}

ValueMetadata *type metadata accessor for TextContent.Alignment()
{
  return &type metadata for TextContent.Alignment;
}

uint64_t _s10AirPlayKit11TextContentV9AlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22A6892A0 + 4 * byte_22A6AB412[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22A6892D4 + 4 * byte_22A6AB40D[v4]))();
}

uint64_t sub_22A6892D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A6892DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A6892E4);
  return result;
}

uint64_t sub_22A6892F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A6892F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22A6892FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A689304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextContent.Layout()
{
  return &type metadata for TextContent.Layout;
}

uint64_t getEnumTagSinglePayload for TextContent.TruncationMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextContent.TruncationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_22A6893FC + 4 * byte_22A6AB41C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_22A689430 + 4 * byte_22A6AB417[v4]))();
}

uint64_t sub_22A689430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A689438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A689440);
  return result;
}

uint64_t sub_22A68944C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A689454);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22A689458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A689460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextContent.TruncationMode()
{
  return &type metadata for TextContent.TruncationMode;
}

double static RenderNode<>.image(identifier:content:tintColor:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  v13 = a6 + v12[9];
  sub_22A6354E0(a2, v13, type metadata accessor for ImageContent.ContentType);
  v14 = v13 + *(int *)(type metadata accessor for ImageContent(0) + 20);
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = a4;
  *(_BYTE *)(v14 + 16) = a5;
  v15 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a6, a1, v15);
  *(_BYTE *)(a6 + v12[10]) = 0;
  v16 = (_QWORD *)(a6 + v12[11]);
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)((char *)v16 + 14) = 0;
  v17 = a6 + v12[12];
  *(_QWORD *)v17 = 0;
  *(_WORD *)(v17 + 12) = 0;
  *(_DWORD *)(v17 + 8) = 0;
  v18 = a6 + v12[13];
  *(_QWORD *)v18 = 0x3F0000003F000000;
  *(_BYTE *)(v18 + 8) = 0;
  v19 = a6 + v12[14];
  *(_QWORD *)&result = 1065353216;
  *(_OWORD *)v19 = xmmword_22A6A77B0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_BYTE *)(v19 + 24) = 0;
  v21 = a6 + v12[15];
  *(_QWORD *)v21 = 1065353216;
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a6 + v12[16];
  *(_QWORD *)v22 = 0;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 2;
  *(_DWORD *)(a6 + v12[17]) = 0;
  v23 = (_QWORD *)(a6 + v12[18]);
  *v23 = 0;
  v23[1] = 0;
  return result;
}

uint64_t RenderNode<>.withImageContent(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for ImageContent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_22A6354E0(a1, (uint64_t)&v18 - v9, type metadata accessor for ImageContent.ContentType);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  v12 = *(int *)(v5 + 20);
  v13 = v2 + v12 + *(int *)(v11 + 36);
  v14 = *(_BYTE *)(v13 + 16);
  v15 = &v10[v12];
  *(_OWORD *)v15 = *(_OWORD *)v13;
  v15[16] = v14;
  sub_22A6897FC(v2, a2);
  sub_22A6354E0((uint64_t)v10, (uint64_t)v8, type metadata accessor for ImageContent);
  v16 = a2 + *(int *)(v11 + 36);
  sub_22A689844(v16);
  sub_22A689880((uint64_t)v8, v16);
  return sub_22A689844((uint64_t)v10);
}

uint64_t RenderNode<>.withImageContent(_:tintColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v11 = type metadata accessor for ImageContent(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  sub_22A6354E0(a1, (uint64_t)&v20 - v15, type metadata accessor for ImageContent.ContentType);
  v17 = &v16[*(int *)(v11 + 20)];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  v17[16] = a4;
  sub_22A6897FC(v5, a5);
  sub_22A6354E0((uint64_t)v16, (uint64_t)v14, type metadata accessor for ImageContent);
  v18 = a5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570) + 36);
  sub_22A689844(v18);
  sub_22A689880((uint64_t)v14, v18);
  return sub_22A689844((uint64_t)v16);
}

uint64_t sub_22A6897FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A689844(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImageContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A689880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6898C8()
{
  return 1735289202;
}

unint64_t sub_22A6898D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t inited;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 44);
  v8 = *(_QWORD *)(v0 + 52);
  v4 = *(_BYTE *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6AB7B0;
  *(_QWORD *)(inited + 32) = 0x6E615265756C6176;
  *(_QWORD *)(inited + 40) = 0xEA00000000006567;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00DE0);
  sub_22A689BBC();
  sub_22A6A6084();
  strcpy((char *)(inited + 88), "definedRange");
  *(_BYTE *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x6874646977;
  *(_QWORD *)(inited + 152) = 0xE500000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 200) = 0x737569646172;
  *(_QWORD *)(inited + 208) = 0xE600000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 256) = 0x726F6C6F63;
  *(_QWORD *)(inited + 264) = 0xE500000000000000;
  sub_22A69C250(v1, v2, v4);
  sub_22A6A6084();
  *(_QWORD *)(inited + 312) = 0x6F6C6F4365736162;
  *(_QWORD *)(inited + 320) = 0xE900000000000072;
  sub_22A69C250(v3, v8, v5);
  sub_22A6A6084();
  *(_QWORD *)(inited + 368) = 7364963;
  *(_QWORD *)(inited + 376) = 0xE300000000000000;
  sub_22A689C18();
  sub_22A6A6084();
  return sub_22A630814(inited);
}

uint64_t sub_22A689B34()
{
  return sub_22A6898C8();
}

unint64_t sub_22A689B4C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22A656364();
  result = sub_22A689B78();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A689B78()
{
  unint64_t result;

  result = qword_255B00DD8;
  if (!qword_255B00DD8)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent, &type metadata for RingContent);
    atomic_store(result, (unint64_t *)&qword_255B00DD8);
  }
  return result;
}

unint64_t sub_22A689BBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255B00DE8;
  if (!qword_255B00DE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B00DE0);
    v2 = MEMORY[0x24BEE1508];
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE08E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255B00DE8);
  }
  return result;
}

unint64_t sub_22A689C18()
{
  unint64_t result;

  result = qword_255B00DF0[0];
  if (!qword_255B00DF0[0])
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RingContent.CapType, &type metadata for RingContent.CapType);
    atomic_store(result, qword_255B00DF0);
  }
  return result;
}

uint64_t static Animation.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  int *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 *v54;
  char v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  char v75;
  __int128 v76;
  char v77;

  v72 = a4;
  v73 = a2;
  v70 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v69 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v6;
  v7 = sub_22A6A6000();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v58 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v58 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v58 - v20;
  v22 = a1;
  v23 = v73;
  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_13;
  v66 = v12;
  v67 = v19;
  v64 = v21;
  v65 = v7;
  v62 = v16;
  v63 = v9;
  v68 = TupleTypeMetadata2;
  v26 = v70;
  v25 = v71;
  v27 = (int *)type metadata accessor for Animation(0, v71, v72, v24);
  if (*(double *)(v22 + v27[9]) != *(double *)(v23 + v27[9]))
    goto LABEL_13;
  v28 = v27;
  if (*(double *)(v22 + v27[10]) != *(double *)(v23 + v27[10]))
    goto LABEL_13;
  v29 = v27[11];
  v60 = v22;
  v30 = v22 + v29;
  v31 = v13;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v34 = v64;
  v33 = v65;
  v32(v64, v30, v65);
  v35 = v67;
  v32(v67, v23 + v28[11], v33);
  v36 = v66;
  v37 = &v66[*(int *)(v68 + 48)];
  v32(v66, (uint64_t)v34, v33);
  v61 = v37;
  v32(v37, (uint64_t)v35, v33);
  v38 = v26;
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v39(v36, 1, v25) == 1)
  {
    v40 = *(void (**)(char *, uint64_t))(v31 + 8);
    v40(v35, v33);
    v40(v34, v33);
    if (v39(v61, 1, v25) == 1)
    {
      v41 = v28;
      v40(v36, v33);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v59 = v31;
  v42 = v62;
  v32(v62, (uint64_t)v36, v33);
  v43 = v61;
  if (v39(v61, 1, v25) == 1)
  {
    v44 = *(void (**)(char *, uint64_t))(v59 + 8);
    v44(v67, v33);
    v44(v34, v33);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v25);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v68);
LABEL_13:
    v56 = 0;
    return v56 & 1;
  }
  v41 = v28;
  v45 = v34;
  v46 = v69;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v69, v43, v25);
  LODWORD(v72) = sub_22A6A5D54();
  v47 = *(void (**)(char *, uint64_t))(v38 + 8);
  v47(v46, v25);
  v48 = *(void (**)(char *, uint64_t))(v59 + 8);
  v48(v67, v33);
  v48(v45, v33);
  v47(v42, v25);
  v48(v36, v33);
  if ((v72 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  v49 = v41;
  v50 = v60;
  v51 = v73;
  if ((sub_22A6A5D54() & 1) == 0)
    goto LABEL_13;
  v52 = v49[13];
  v53 = *(_BYTE *)(v50 + v52 + 16);
  v76 = *(_OWORD *)(v50 + v52);
  v77 = v53;
  v54 = (__int128 *)(v51 + v52);
  v55 = *((_BYTE *)v54 + 16);
  v74 = *v54;
  v75 = v55;
  v56 = _s10AirPlayKit14AnimationCurveO2eeoiySbAC_ACtFZ_0((uint64_t)&v76, (uint64_t)&v74);
  return v56 & 1;
}

uint64_t type metadata accessor for Animation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Animation);
}

uint64_t Animation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22A6A5C40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

double Animation.duration.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

double Animation.delay.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

uint64_t Animation.fromValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_22A6A6000();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Animation.toValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

__n128 Animation.curve.getter@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 52));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t Animation.init(identifier:duration:delay:toValue:fromValue:curve:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  v17 = *a4;
  v18 = a4[1];
  v19 = *((_BYTE *)a4 + 16);
  v20 = sub_22A6A5C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a7, a1, v20);
  v22 = (int *)type metadata accessor for Animation(0, a5, a6, v21);
  *(double *)(a7 + v22[9]) = a8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + v22[12], a2, a5);
  *(double *)(a7 + v22[10]) = a9;
  v23 = a7 + v22[11];
  v24 = sub_22A6A6000();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a3, v24);
  v26 = a7 + v22[13];
  *(_QWORD *)v26 = v17;
  *(_QWORD *)(v26 + 8) = v18;
  *(_BYTE *)(v26 + 16) = v19;
  return result;
}

uint64_t Animation.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_22A6A5C40();
  sub_22A6298A0();
  sub_22A6A5D3C();
  sub_22A6A6288();
  sub_22A6A6288();
  sub_22A6A6000();
  sub_22A6A600C();
  sub_22A6A5D3C();
  v4 = v2 + *(int *)(a2 + 52);
  if (*(unsigned __int8 *)(v4 + 16) > 1u)
    __asm { BR              X9 }
  sub_22A6A6264();
  sub_22A6A627C();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t Animation.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_22A6A6258();
  Animation.hash(into:)((uint64_t)v3, a1);
  return sub_22A6A62A0();
}

uint64_t sub_22A68A430(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22A6A6258();
  Animation.hash(into:)((uint64_t)v4, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A68A470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Animation.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A68A47C()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t sub_22A68A48C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A68A494()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_22A6A5C40();
  if (v1 <= 0x3F)
  {
    result = sub_22A6A6000();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22A68A558(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  const void *v26;
  void (*v27)(void *, const void *, uint64_t);
  unint64_t v28;
  char v29;
  unint64_t v30;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = v12 + 1;
  v14 = v13 + v11;
  v15 = v12 + 3;
  v16 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v16 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v12
       + 3
       + ((v13 + v11 + ((v11 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFFCLL)
     + 17 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v21 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (void *)(((unint64_t)v23 + v11 + 8) & ~v11);
    v26 = (const void *)(((unint64_t)v24 + v11 + 8) & ~v11);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v24 + v11 + 8) & ~v11, 1, v9))
    {
      memcpy(v25, v26, v13);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)v25 + v14) & v20, ((unint64_t)v26 + v14) & v20, v9);
    }
    else
    {
      v27 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      v27(v25, v26, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      v27((void *)(((unint64_t)v25 + v14) & v20), (const void *)(((unint64_t)v26 + v14) & v20), v9);
    }
    v28 = (v15 + (((unint64_t)v26 + v14) & v20)) & 0xFFFFFFFFFFFFFFFCLL;
    v29 = *(_BYTE *)(v28 + 16);
    v30 = (v15 + (((unint64_t)v25 + v14) & v20)) & 0xFFFFFFFFFFFFFFFCLL;
    *(_OWORD *)v30 = *(_OWORD *)v28;
    *(_BYTE *)(v30 + 16) = v29;
  }
  return a1;
}

uint64_t sub_22A68A744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v15)(uint64_t, uint64_t);

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (((a1 + *(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + 8;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10 & ~v9, 1, v7);
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  if (!v11)
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v10 & ~v9, v7);
    v12 = v15;
  }
  v13 = (v10 | v9) + *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v13 & ~v9, v7);
}

uint64_t sub_22A68A81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  size_t v20;
  void (*v21)(unint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (unint64_t)v11 + v15 + 8;
  v30 = ~v15;
  v31 = a1;
  v17 = (unint64_t)v12 + v15 + 8;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v17 & ~v15, 1, v13))
  {
    v18 = *(_DWORD *)(v14 + 84);
    v19 = *(_QWORD *)(v14 + 64);
    if (v18)
      v20 = *(_QWORD *)(v14 + 64);
    else
      v20 = v19 + 1;
    memcpy((void *)(v16 & ~v15), (const void *)(v17 & ~v15), v20);
    v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
  }
  else
  {
    v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
    v21(v16 & ~v15, v17 & ~v15, v13);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16 & ~v15, 0, 1, v13);
    v18 = *(_DWORD *)(v14 + 84);
    v19 = *(_QWORD *)(v14 + 64);
  }
  if (v18)
    v22 = v19;
  else
    v22 = v19 + 1;
  v23 = ((v16 | v15) + v22) & v30;
  v24 = ((v17 | v15) + v22) & v30;
  v21(v23, v24, v13);
  v25 = (v19 + 3 + v24) & 0xFFFFFFFFFFFFFFFCLL;
  v26 = *(_BYTE *)(v25 + 16);
  v27 = *(_OWORD *)v25;
  v28 = (v19 + 3 + v23) & 0xFFFFFFFFFFFFFFFCLL;
  *(_OWORD *)v28 = v27;
  *(_BYTE *)(v28 + 16) = v26;
  return v31;
}

uint64_t sub_22A68A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(unint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v32;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v32 = a1;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (unint64_t)v11 + v15 + 8;
  v17 = ~v15;
  v18 = (unint64_t)v12 + v15 + 8;
  v19 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(v16 & ~v15, 1, v13);
  v21 = v19(v18 & ~v15, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))(v16 & ~v15, v18 & ~v15, v13);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16 & ~v15, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 24))(v16 & ~v15, v18 & ~v15, v13);
      goto LABEL_10;
    }
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v16 & ~v15, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  memcpy((void *)(v16 & ~v15), (const void *)(v18 & ~v15), v22);
LABEL_10:
  v23 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84))
    v24 = *(_QWORD *)(v14 + 64);
  else
    v24 = v23 + 1;
  v25 = ((v16 | v15) + v24) & v17;
  v26 = ((v18 | v15) + v24) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 24))(v25, v26, v13);
  v27 = (v23 + 3 + v26) & 0xFFFFFFFFFFFFFFFCLL;
  v28 = *(_BYTE *)(v27 + 16);
  v29 = *(_OWORD *)v27;
  v30 = (v23 + 3 + v25) & 0xFFFFFFFFFFFFFFFCLL;
  *(_OWORD *)v30 = v29;
  *(_BYTE *)(v30 + 16) = v28;
  return v32;
}

uint64_t sub_22A68AB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  size_t v20;
  void (*v21)(unint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (unint64_t)v11 + v15 + 8;
  v30 = ~v15;
  v31 = a1;
  v17 = (unint64_t)v12 + v15 + 8;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v17 & ~v15, 1, v13))
  {
    v18 = *(_DWORD *)(v14 + 84);
    v19 = *(_QWORD *)(v14 + 64);
    if (v18)
      v20 = *(_QWORD *)(v14 + 64);
    else
      v20 = v19 + 1;
    memcpy((void *)(v16 & ~v15), (const void *)(v17 & ~v15), v20);
    v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
  }
  else
  {
    v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
    v21(v16 & ~v15, v17 & ~v15, v13);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16 & ~v15, 0, 1, v13);
    v18 = *(_DWORD *)(v14 + 84);
    v19 = *(_QWORD *)(v14 + 64);
  }
  if (v18)
    v22 = v19;
  else
    v22 = v19 + 1;
  v23 = ((v16 | v15) + v22) & v30;
  v24 = ((v17 | v15) + v22) & v30;
  v21(v23, v24, v13);
  v25 = (v19 + 3 + v24) & 0xFFFFFFFFFFFFFFFCLL;
  v26 = *(_BYTE *)(v25 + 16);
  v27 = *(_OWORD *)v25;
  v28 = (v19 + 3 + v23) & 0xFFFFFFFFFFFFFFFCLL;
  *(_OWORD *)v28 = v27;
  *(_BYTE *)(v28 + 16) = v26;
  return v31;
}

uint64_t sub_22A68AD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(unint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v32;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v32 = a1;
  v9 = (_QWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (unint64_t)v11 + v15 + 8;
  v17 = ~v15;
  v18 = (unint64_t)v12 + v15 + 8;
  v19 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(v16 & ~v15, 1, v13);
  v21 = v19(v18 & ~v15, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32))(v16 & ~v15, v18 & ~v15, v13);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16 & ~v15, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 40))(v16 & ~v15, v18 & ~v15, v13);
      goto LABEL_10;
    }
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v16 & ~v15, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  memcpy((void *)(v16 & ~v15), (const void *)(v18 & ~v15), v22);
LABEL_10:
  v23 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84))
    v24 = *(_QWORD *)(v14 + 64);
  else
    v24 = v23 + 1;
  v25 = ((v16 | v15) + v24) & v17;
  v26 = ((v18 | v15) + v24) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 40))(v25, v26, v13);
  v27 = (v23 + 3 + v26) & 0xFFFFFFFFFFFFFFFCLL;
  v28 = *(_BYTE *)(v27 + 16);
  v29 = *(_OWORD *)v27;
  v30 = (v23 + 3 + v25) & 0xFFFFFFFFFFFFFFFCLL;
  *(_OWORD *)v30 = v29;
  *(_BYTE *)(v30 + 16) = v28;
  return v32;
}

uint64_t sub_22A68AEDC(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t (*v26)(unint64_t, uint64_t, uint64_t);
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;

  v6 = sub_22A6A5C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if ((_DWORD)v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = *(_DWORD *)(v7 + 84);
  else
    v13 = v12;
  if (v11 > v13)
    v13 = *(_DWORD *)(v10 + 84);
  if (v13 <= 0xFD)
    v13 = 253;
  v14 = *(_QWORD *)(v10 + 64);
  if ((_DWORD)v11)
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  if (!a2)
    return 0;
  v16 = v6;
  v17 = *(_QWORD *)(v7 + 64);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = v18 + 8;
  v20 = v15 + v18;
  v21 = v14 + 3;
  if (v13 < a2)
  {
    v22 = ((v21 + ((v20 + ((v19 + ((((v17 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~(_DWORD)v18)) & ~(_DWORD)v18)) & 0xFFFFFFFC)
        + 17;
    if (v22 < 4)
      v23 = ((a2 - v13 + 255) >> (8 * v22)) + 1;
    else
      v23 = 2;
    if (v23 >= 0x10000)
      v24 = 4;
    else
      v24 = 2;
    if (v23 < 0x100)
      v24 = 1;
    if (v23 >= 2)
      v25 = v24;
    else
      v25 = 0;
    __asm { BR              X7 }
  }
  if (v8 == v13)
  {
    v26 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
    v27 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v16;
    return v26(v27, v11, v9);
  }
  v29 = ~v18;
  v30 = (v19 + ((((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v18;
  if (v12 == v13)
  {
    if (v11 < 2)
      return 0;
    v31 = (*(uint64_t (**)(unint64_t))(v10 + 48))(v30);
    if (v31 >= 2)
      return v31 - 1;
    else
      return 0;
  }
  else
  {
    v27 = (v20 + v30) & v29;
    if ((_DWORD)v11 == v13)
    {
      v26 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      return v26(v27, v11, v9);
    }
    v32 = *(unsigned __int8 *)(((v21 + v27) & 0xFFFFFFFFFFFFFCLL) + 0x10);
    if (v32 > 2)
      return (v32 ^ 0xFF) + 1;
    else
      return 0;
  }
}

void sub_22A68B0F0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  int v18;
  int v19;

  v8 = 0;
  v9 = *(_QWORD *)(sub_22A6A5C40() - 8);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= *(_DWORD *)(v9 + 84))
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = v12;
  if (v11 > v13)
    v13 = *(_DWORD *)(v10 + 84);
  if (v13 <= 0xFD)
    v13 = 253;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  v16 = ((v14
        + 3
        + ((v15
          + *(unsigned __int8 *)(v10 + 80)
          + ((*(unsigned __int8 *)(v10 + 80)
            + 8
            + ((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFFCLL)
      + 17;
  if (v13 < a3)
  {
    if (v16 <= 3)
      v17 = ((a3 - v13 + 255) >> (8 * v16)) + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v8 = v18;
    else
      v8 = 0;
  }
  if (v13 < a2)
  {
    if (v16 >= 4)
      v19 = ~v13 + a2;
    else
      v19 = (~(_BYTE)v13 + a2);
    bzero(a1, v16);
    if ((_DWORD)v16 == 1)
      *a1 = v19;
    else
      *(_DWORD *)a1 = v19;
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_22A68B278()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x22A68B348);
}

void sub_22A68B280()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x22A68B288);
  JUMPOUT(0x22A68B348);
}

void sub_22A68B2D8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x22A68B348);
}

void sub_22A68B2E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x22A68B348);
}

void sub_22A68B2E8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (v3)
  {
    if (v0 != v1 && v2 != v1)
      JUMPOUT(0x22A68B2F4);
    JUMPOUT(0x22A68B30CLL);
  }
  JUMPOUT(0x22A68B348);
}

uint64_t RenderActionsFileLogger.__allocating_init(directoryURL:queue:)(uint64_t a1, void *a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_22A68CB6C(a1, a2);

  return v4;
}

uint64_t RenderActionsFileLogger.init(directoryURL:queue:)(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = sub_22A68CB6C(a1, a2);

  return v3;
}

uint64_t RenderActionsFileLogger.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_22A68C460(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_directoryURL;
  v3 = sub_22A6A5B8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter);
  swift_release();

  sub_22A68CD4C(*(id *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state));
  return v0;
}

Swift::Void __swiftcall RenderActionsFileLogger.deactivate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_22A68C460(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t RenderActionsFileLogger.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_22A68C460(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_directoryURL;
  v3 = sub_22A6A5B8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter);
  swift_release();

  sub_22A68CD4C(*(id *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state));
  return swift_deallocClassInstance();
}

id sub_22A68B5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  void *v39;
  unsigned __int8 v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  char *v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  id v52;
  void *v53;
  _BYTE *v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v58 = a1;
  v59 = a2;
  v66 = *MEMORY[0x24BDAC8D0];
  v2 = sub_22A6A5B38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22A6A5B8C();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v56 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v56 - v12;
  v62 = (char *)objc_opt_self();
  v14 = objc_msgSend(v62, sel_defaultManager);
  sub_22A6A5B74();
  v15 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((v16 & 1) == 0)
  {
    v17 = objc_msgSend(v62, sel_defaultManager);
    v18 = (void *)sub_22A6A5B5C();
    v64 = 0;
    v19 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v18, 1, 0, &v64);

    v20 = (id)v64;
    if (!v19)
    {
      v38 = (id)v64;
      sub_22A6A5B2C();

      swift_willThrow();
      return v20;
    }
    v21 = (id)v64;
  }
  v22 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v23 = objc_msgSend(v22, sel_bundleIdentifier);

  if (v23)
  {
    sub_22A6A5D84();

  }
  v64 = 0;
  v65 = 0xE000000000000000;
  sub_22A6A60B4();
  swift_bridgeObjectRelease();
  v64 = 0x4B79616C50726941;
  v65 = 0xEB000000002D7469;
  sub_22A6A5E08();
  swift_bridgeObjectRelease();
  sub_22A6A5E08();
  sub_22A6A5E08();
  sub_22A6A5E08();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCD7A0], v2);
  sub_22A629DCC();
  sub_22A6A5B80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v62, sel_defaultManager);
  sub_22A6A5B74();
  v25 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_fileExistsAtPath_, v25);

  v27 = v60;
  v28 = v61;
  if ((v26 & 1) != 0)
    goto LABEL_14;
  if (qword_255AFE878 != -1)
    swift_once();
  v29 = sub_22A6A5CAC();
  __swift_project_value_buffer(v29, (uint64_t)qword_255B08F48);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v11, v13, v28);
  v30 = sub_22A6A5C94();
  v31 = sub_22A6A5F70();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v64 = v33;
    *(_DWORD *)v32 = 136315138;
    v34 = sub_22A6A5B74();
    v63 = sub_22A62D174(v34, v35, &v64);
    v28 = v61;
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    v36 = *(void (**)(char *, uint64_t))(v60 + 8);
    v36(v11, v28);
    _os_log_impl(&dword_22A61E000, v30, v31, "Attempting to create new file at %s", v32, 0xCu);
    swift_arrayDestroy();
    v37 = v33;
    v27 = v60;
    MEMORY[0x22E2DF3F8](v37, -1, -1);
    MEMORY[0x22E2DF3F8](v32, -1, -1);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t))(v27 + 8);
    v36(v11, v28);
  }

  v20 = objc_msgSend(v62, sel_defaultManager);
  sub_22A6A5B74();
  v39 = (void *)sub_22A6A5D60();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v20, sel_createFileAtPath_contents_attributes_, v39, 0, 0);

  if ((v40 & 1) != 0)
  {
LABEL_14:
    if (qword_255AFE878 != -1)
      swift_once();
    v41 = sub_22A6A5CAC();
    __swift_project_value_buffer(v41, (uint64_t)qword_255B08F48);
    v42 = v57;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v57, v13, v28);
    v43 = sub_22A6A5C94();
    v44 = sub_22A6A5F70();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = v42;
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v64 = v47;
      *(_DWORD *)v46 = 136315138;
      v62 = v13;
      v48 = sub_22A6A5B74();
      v63 = sub_22A62D174(v48, v49, &v64);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(char *, uint64_t))(v27 + 8);
      v51 = v45;
      v28 = v61;
      v13 = v62;
      v50(v51, v61);
      _os_log_impl(&dword_22A61E000, v43, v44, "Make OutputStream to %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v47, -1, -1);
      MEMORY[0x22E2DF3F8](v46, -1, -1);
    }
    else
    {
      v50 = *(void (**)(char *, uint64_t))(v27 + 8);
      v50(v42, v28);
    }

    sub_22A6A5B74();
    v52 = objc_allocWithZone(MEMORY[0x24BDBCF08]);
    v53 = (void *)sub_22A6A5D60();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v52, sel_initToFileAtPath_append_, v53, 0);

    v50(v13, v28);
  }
  else
  {
    sub_22A64E1E0();
    swift_allocError();
    *v54 = 4;
    swift_willThrow();
    v36(v13, v28);
  }
  return v20;
}

uint64_t sub_22A68BD70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_22A6A5CC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22A6A5CE8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_22A68D294;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22A6360EC;
  aBlock[3] = &block_descriptor_6;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_22A6A5CDC();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_22A68D2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF130);
  sub_22A68D33C();
  sub_22A6A6048();
  MEMORY[0x22E2DE9E4](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

Swift::Void __swiftcall RenderActionsFileLogger.activate()()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_22A68CD5C() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
    if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state))
    {
      *(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state) = 1;
      sub_22A68CD4C(0);
      sub_22A68BD70((uint64_t)sub_22A68BFB4, 0);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  }
}

void sub_22A68BFB4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  _BYTE *v25;
  _BYTE *v26;
  void *v27;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v30[2];

  v1 = OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state) != 1)
    return;
  sub_22A68D388((id)1);
  v3 = sub_22A68B5A0(0x63417265646E6552, 0xED0000736E6F6974);
  v13 = v3;
  if (v3)
  {
    objc_msgSend(v3, sel_open);
    if (objc_msgSend(v13, sel_streamStatus) == (id)2)
    {
      if (qword_255AFE878 != -1)
        swift_once();
      v14 = sub_22A6A5CAC();
      __swift_project_value_buffer(v14, (uint64_t)qword_255B08F48);
      v15 = v13;
      v16 = sub_22A6A5C94();
      v17 = sub_22A6A5F70();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        osloga = (os_log_t)swift_slowAlloc();
        v30[0] = (uint64_t)osloga;
        *(_DWORD *)v18 = 136446210;
        v19 = v15;
        v20 = objc_msgSend(v19, sel_description);
        v21 = sub_22A6A5D84();
        v23 = v22;

        sub_22A62D174(v21, v23, v30);
        sub_22A6A6018();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22A61E000, v16, v17, "Activated Render Actions File Logger using stream: %{public}s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2DF3F8](osloga, -1, -1);
        MEMORY[0x22E2DF3F8](v18, -1, -1);

      }
      else
      {

      }
      v27 = *(void **)(a1 + v1);
      *(_QWORD *)(a1 + v1) = v13;
      sub_22A68CD4C(v27);
      return;
    }
    v24 = objc_msgSend(v13, sel_streamError);
    if (!v24)
    {
      sub_22A64E1E0();
      v24 = (id)swift_allocError();
      *v26 = 5;
    }
    swift_willThrow();

  }
  else
  {
    sub_22A64E1E0();
    v24 = (id)swift_allocError();
    *v25 = 3;
    swift_willThrow();
  }
  if (qword_255AFE878 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  __swift_project_value_buffer(v4, (uint64_t)qword_255B08F48);
  v5 = v24;
  v6 = v24;
  oslog = sub_22A6A5C94();
  v7 = sub_22A6A5F64();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v30[0] = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v11 = sub_22A6A5DC0();
    sub_22A62D174(v11, v12, v30);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, oslog, v7, "Unable to create OutputStream for RenderActions Log: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v9, -1, -1);
    MEMORY[0x22E2DF3F8](v8, -1, -1);

  }
  else
  {

  }
}

void sub_22A68C460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[8];

  v3 = sub_22A6A5CC4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22A6A5CE8();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state;
  v13 = *(void **)(a1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state);
  if ((unint64_t)v13 >= 2)
  {
    v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_queue);
    v23 = v9;
    v24 = v8;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    aBlock[4] = sub_22A68D3BC;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22A6360EC;
    aBlock[3] = &block_descriptor_13_0;
    v15 = _Block_copy(aBlock);
    v25 = v1;
    v16 = v15;
    sub_22A68D388(v13);
    v17 = v13;
    sub_22A6A5CDC();
    aBlock[7] = MEMORY[0x24BEE4AF8];
    sub_22A68D2F4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF130);
    v21 = v4;
    sub_22A68D33C();
    sub_22A6A6048();
    MEMORY[0x22E2DE9E4](0, v11, v6, v16);
    _Block_release(v16);
    sub_22A68CD4C(v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
    swift_release();
  }
  if (qword_255AFE878 != -1)
    swift_once();
  v18 = sub_22A6A5CAC();
  __swift_project_value_buffer(v18, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD00000000000005DLL, 0x800000022A6AD880, 0x6176697463616564, 0xEC00000029286574);
  v19 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = 0;
  sub_22A68CD4C(v19);
}

uint64_t RenderActionsFileLogger.log(action:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3[2];

  sub_22A628A98(a1, (uint64_t)v3);
  v1 = swift_allocObject();
  sub_22A628A38(v3, v1 + 16);
  sub_22A68BD70((uint64_t)sub_22A68CF4C, v1);
  return swift_release();
}

uint64_t sub_22A68C740(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  v4 = sub_22A6A5C10();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(a1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state);
  if ((unint64_t)v9 >= 2)
  {
    v10 = *(void **)(a1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter);
    v9;
    sub_22A6A5C04();
    v11 = (void *)sub_22A6A5BEC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    sub_22A6A5D84();
    v15[2] = 91;
    v15[3] = 0xE100000000000000;
    sub_22A6A5E08();
    swift_bridgeObjectRelease();
    sub_22A6A5E08();
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    sub_22A6A5E08();
    swift_bridgeObjectRelease();
    sub_22A6A5E08();
    sub_22A64D824();
    sub_22A68CD4C(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_22A68CA94()
{
  RenderActionsFileLogger.activate()();
}

void sub_22A68CAB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  sub_22A68C460(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
}

uint64_t sub_22A68CB04(uint64_t a1)
{
  uint64_t v1;
  __int128 v3[2];

  sub_22A628A98(a1, (uint64_t)v3);
  v1 = swift_allocObject();
  sub_22A628A38(v3, v1 + 16);
  sub_22A68BD70((uint64_t)sub_22A68D3D0, v1);
  return swift_release();
}

uint64_t sub_22A68CB6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v24;

  v3 = v2;
  v6 = sub_22A6A5C64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_state) = 0;
  v10 = v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_directoryURL;
  v11 = sub_22A6A5B8C();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter) = v13;
  type metadata accessor for UnfairLock();
  v14 = swift_allocObject();
  v15 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v14 + 16) = v15;
  *v15 = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock) = v14;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_queue) = a2;
  v16 = OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_formatter);
  v18 = a2;
  v19 = v17;
  sub_22A6A5C4C();
  v20 = (void *)sub_22A6A5C58();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v19, sel_setLocale_, v20);

  v21 = *(void **)(v3 + v16);
  v22 = (void *)sub_22A6A5D60();
  objc_msgSend(v21, sel_setDateFormat_, v22);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v3;
}

void sub_22A68CD4C(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_22A68CD5C()
{
  id v0;
  id v1;
  uint64_t v2;
  unsigned int v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  _OWORD v12[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_22A6A5D84();

    v2 = sub_22A6A5DCC();
    swift_bridgeObjectRelease();
    v1 = (id)(v2 + 32);
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_isInternal_, v1);
  swift_unknownObjectRelease();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_standardUserDefaults);
  v6 = (void *)sub_22A6A5D60();
  v7 = objc_msgSend(v5, sel_objectForKey_, v6);

  if (v7)
  {
    sub_22A6A603C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_22A63B6BC((uint64_t)v12);
  v8 = objc_msgSend(v4, sel_standardUserDefaults);
  v9 = (void *)sub_22A6A5D60();
  v10 = objc_msgSend(v8, sel_BOOLForKey_, v9);

  if (v7)
    return v10;
  else
    return v3;
}

uint64_t sub_22A68CF28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_22A68CF4C(uint64_t a1)
{
  uint64_t v1;

  return sub_22A68C740(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_22A68CF54()
{
  return type metadata accessor for RenderActionsFileLogger();
}

uint64_t type metadata accessor for RenderActionsFileLogger()
{
  uint64_t result;

  result = qword_255B00EA0;
  if (!qword_255B00EA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A68CF98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22A6A5B8C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RenderActionsFileLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RenderActionsFileLogger.__allocating_init(directoryURL:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *initializeBufferWithCopyOfBuffer for RenderActionsFileLogger.State(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for RenderActionsFileLogger.State(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for RenderActionsFileLogger.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for RenderActionsFileLogger.State(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for RenderActionsFileLogger.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RenderActionsFileLogger.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_22A68D220(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_22A68D238(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for RenderActionsFileLogger.State()
{
  return &type metadata for RenderActionsFileLogger.State;
}

uint64_t sub_22A68D268()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22A68D294()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t))(v0 + 24);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10AirPlayKit23RenderActionsFileLogger_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v2(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

unint64_t sub_22A68D2F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFF128;
  if (!qword_255AFF128)
  {
    v1 = sub_22A6A5CC4();
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_255AFF128);
  }
  return result;
}

unint64_t sub_22A68D33C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFF138;
  if (!qword_255AFF138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255AFF130);
    result = MEMORY[0x22E2DF32C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255AFF138);
  }
  return result;
}

id sub_22A68D388(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

uint64_t sub_22A68D398()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_22A68D3BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_close);
}

uint64_t sub_22A68D3E0(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t i;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  float v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t *v99;
  __int128 v100;
  char *v101;
  _QWORD *v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106[2];
  uint64_t v107[3];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110[3];
  __int128 v111;
  uint64_t v112[5];
  uint64_t v113[5];
  uint64_t v114[5];
  uint64_t v115[6];

  v102 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A62F9B8(a1, (uint64_t)v10, a3);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_22A629860((uint64_t)v10, a3);
    v111 = xmmword_22A6A74C0;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
    v112[3] = v15;
    v112[4] = sub_22A671D30((unint64_t *)&unk_255B010A0, &qword_255AFEC08, (uint64_t)&unk_22A6A9F78);
    *(_QWORD *)&v100 = v112;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v112);
    v101 = (char *)sub_22A6A5C40();
    v99 = *(uint64_t **)(*((_QWORD *)v101 - 1) + 16);
    v17 = v102;
    ((void (*)(uint64_t *, _QWORD *, char *))v99)(boxed_opaque_existential_1, v102, v101);
    v18 = v4 + v11[16];
    v19 = *(_BYTE *)(v18 + 16);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v15 + 36)) = 5;
    v20 = (char *)boxed_opaque_existential_1 + *(int *)(v15 + 40);
    *(_OWORD *)v20 = *(_OWORD *)v18;
    v20[16] = v19;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC10);
    v113[3] = v21;
    v113[4] = sub_22A671D30((unint64_t *)&unk_255B010B0, &qword_255AFEC10, (uint64_t)&unk_22A6A9F78);
    v22 = __swift_allocate_boxed_opaque_existential_1(v113);
    v23 = v99;
    ((void (*)(uint64_t *, _QWORD *, char *))v99)(v22, v17, v101);
    v24 = *(_BYTE *)(v4 + v11[10]);
    *((_BYTE *)v22 + *(int *)(v21 + 36)) = 6;
    *((_BYTE *)v22 + *(int *)(v21 + 40)) = v24;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
    v114[3] = v25;
    v114[4] = sub_22A671D30((unint64_t *)&unk_255B010C0, &qword_255AFEC18, (uint64_t)&unk_22A6A9F78);
    v26 = __swift_allocate_boxed_opaque_existential_1(v114);
    v27 = v17;
    v28 = (uint64_t)v101;
    ((void (*)(uint64_t *, _QWORD *, char *))v23)(v26, v27, v101);
    v29 = *(_DWORD *)(v4 + v11[17]);
    *((_BYTE *)v26 + *(int *)(v25 + 36)) = 7;
    *(_DWORD *)((char *)v26 + *(int *)(v25 + 40)) = v29;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC20);
    v115[3] = v30;
    v115[4] = sub_22A671D30((unint64_t *)&unk_255B010D0, &qword_255AFEC20, (uint64_t)&unk_22A6A9F78);
    v31 = __swift_allocate_boxed_opaque_existential_1(v115);
    ((void (*)(uint64_t *, _QWORD *, uint64_t))v23)(v31, v102, v28);
    v32 = v11[18];
    *((_BYTE *)v31 + *(int *)(v30 + 36)) = 9;
    *(_OWORD *)((char *)v31 + *(int *)(v30 + 40)) = *(_OWORD *)(v4 + v32);
    v110[0] = MEMORY[0x24BEE4AF8];
    for (i = 4; i != 24; i += 5)
    {
      sub_22A62F9B8((uint64_t)&v110[i + 1], (uint64_t)v107, (uint64_t *)&unk_255B01090);
      sub_22A62981C((uint64_t)v107, (uint64_t)&v103, (uint64_t *)&unk_255B01090);
      if (v104)
      {
        sub_22A628A38(&v103, (uint64_t)v106);
        sub_22A628A38(v106, (uint64_t)&v103);
        v34 = (_QWORD *)v110[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v34 = sub_22A62F0EC(0, v34[2] + 1, 1, v34);
          v110[0] = (uint64_t)v34;
        }
        v36 = v34[2];
        v35 = v34[3];
        if (v36 >= v35 >> 1)
          v110[0] = (uint64_t)sub_22A62F0EC((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
        v37 = v104;
        v38 = v105;
        v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v103, v104);
        MEMORY[0x24BDAC7A8](v39);
        v41 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v42 + 16))(v41);
        sub_22A69874C(v36, (uint64_t)v41, v110, v37, v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
      }
      else
      {
        sub_22A629860((uint64_t)&v103, (uint64_t *)&unk_255B01090);
      }
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayDestroy();
    return v110[0];
  }
  else
  {
    sub_22A62981C((uint64_t)v10, (uint64_t)v14, a4);
    *(_QWORD *)&v100 = v11;
    v43 = v11[16];
    v44 = &v14[v43];
    v45 = *(_QWORD *)&v14[v43];
    v46 = *(_QWORD *)&v14[v43 + 8];
    v98 = v4;
    v47 = v4 + v43;
    v49 = *(_QWORD *)v47;
    v48 = *(_QWORD *)(v47 + 8);
    v50 = *(_BYTE *)(v47 + 16);
    v51 = _s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(v45, v46, v44[16], *(_QWORD *)v47, v48, v50);
    v52 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v99 = a4;
    v101 = v14;
    if ((v51 & 1) == 0)
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC08);
      v108 = v53;
      v109 = sub_22A671D30((unint64_t *)&unk_255B010A0, &qword_255AFEC08, (uint64_t)&unk_22A6A9F78);
      v54 = __swift_allocate_boxed_opaque_existential_1(v107);
      v55 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v54, v102, v55);
      *((_BYTE *)v54 + *(int *)(v53 + 36)) = 5;
      v56 = (char *)v54 + *(int *)(v53 + 40);
      *(_QWORD *)v56 = v49;
      *((_QWORD *)v56 + 1) = v48;
      v56[16] = v50;
      v57 = sub_22A62F20C(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v59 = v57[2];
      v58 = v57[3];
      v52 = v57;
      if (v59 >= v58 >> 1)
        v52 = sub_22A62F20C((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
      v52[2] = v59 + 1;
      sub_22A62981C((uint64_t)v107, (uint64_t)&v52[5 * v59 + 4], (uint64_t *)&unk_255B01090);
      a4 = v99;
      v14 = v101;
    }
    v60 = v100;
    v61 = *(int *)(v100 + 40);
    v62 = v98;
    v63 = *(_BYTE *)(v98 + v61);
    sub_22A640C10(v14[v61]);
    if ((v64 & 1) != 0)
    {
      v65 = v102;
    }
    else
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC10);
      v108 = v67;
      v109 = sub_22A671D30((unint64_t *)&unk_255B010B0, &qword_255AFEC10, (uint64_t)&unk_22A6A9F78);
      v68 = __swift_allocate_boxed_opaque_existential_1(v107);
      v69 = sub_22A6A5C40();
      v65 = v102;
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v68, v102, v69);
      *((_BYTE *)v68 + *(int *)(v67 + 36)) = 6;
      *((_BYTE *)v68 + *(int *)(v67 + 40)) = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v52 = sub_22A62F20C(0, v52[2] + 1, 1, v52);
      v71 = v52[2];
      v70 = v52[3];
      a4 = v99;
      if (v71 >= v70 >> 1)
        v52 = sub_22A62F20C((_QWORD *)(v70 > 1), v71 + 1, 1, v52);
      v52[2] = v71 + 1;
      sub_22A62981C((uint64_t)v107, (uint64_t)&v52[5 * v71 + 4], (uint64_t *)&unk_255B01090);
      v14 = v101;
      v60 = v100;
    }
    v72 = *(int *)(v60 + 68);
    v73 = *(float *)(v62 + v72);
    if (*(float *)&v14[v72] != v73)
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
      v108 = v74;
      v109 = sub_22A671D30((unint64_t *)&unk_255B010C0, &qword_255AFEC18, (uint64_t)&unk_22A6A9F78);
      v75 = __swift_allocate_boxed_opaque_existential_1(v107);
      v76 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v75, v65, v76);
      *((_BYTE *)v75 + *(int *)(v74 + 36)) = 7;
      *(float *)((char *)v75 + *(int *)(v74 + 40)) = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v52 = sub_22A62F20C(0, v52[2] + 1, 1, v52);
      v78 = v52[2];
      v77 = v52[3];
      if (v78 >= v77 >> 1)
        v52 = sub_22A62F20C((_QWORD *)(v77 > 1), v78 + 1, 1, v52);
      v52[2] = v78 + 1;
      sub_22A62981C((uint64_t)v107, (uint64_t)&v52[5 * v78 + 4], (uint64_t *)&unk_255B01090);
      v14 = v101;
      v60 = v100;
    }
    v79 = *(int *)(v60 + 72);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)&v14[v79], *(float32x4_t *)(v62 + v79))), 0xFuLL))) & 1) == 0)
    {
      v100 = *(_OWORD *)(v62 + v79);
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC20);
      v108 = v80;
      v109 = sub_22A671D30((unint64_t *)&unk_255B010D0, &qword_255AFEC20, (uint64_t)&unk_22A6A9F78);
      v81 = __swift_allocate_boxed_opaque_existential_1(v107);
      v82 = sub_22A6A5C40();
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v81, v65, v82);
      *((_BYTE *)v81 + *(int *)(v80 + 36)) = 9;
      *(_OWORD *)((char *)v81 + *(int *)(v80 + 40)) = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v52 = sub_22A62F20C(0, v52[2] + 1, 1, v52);
      v84 = v52[2];
      v83 = v52[3];
      if (v84 >= v83 >> 1)
        v52 = sub_22A62F20C((_QWORD *)(v83 > 1), v84 + 1, 1, v52);
      v52[2] = v84 + 1;
      sub_22A62981C((uint64_t)v107, (uint64_t)&v52[5 * v84 + 4], (uint64_t *)&unk_255B01090);
    }
    v110[0] = MEMORY[0x24BEE4AF8];
    v85 = v52;
    v86 = v52[2];
    if (v86)
    {
      v87 = (uint64_t)(v85 + 4);
      v102 = v85;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A62F9B8(v87, (uint64_t)v107, (uint64_t *)&unk_255B01090);
        sub_22A62981C((uint64_t)v107, (uint64_t)&v103, (uint64_t *)&unk_255B01090);
        if (v104)
        {
          sub_22A628A38(&v103, (uint64_t)v106);
          sub_22A628A38(v106, (uint64_t)&v103);
          v88 = (_QWORD *)v110[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v88 = sub_22A62F0EC(0, v88[2] + 1, 1, v88);
            v110[0] = (uint64_t)v88;
          }
          v90 = v88[2];
          v89 = v88[3];
          if (v90 >= v89 >> 1)
            v110[0] = (uint64_t)sub_22A62F0EC((_QWORD *)(v89 > 1), v90 + 1, 1, v88);
          v91 = v104;
          v92 = v105;
          v93 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v103, v104);
          MEMORY[0x24BDAC7A8](v93);
          v95 = (char *)&v98 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v96 + 16))(v95);
          sub_22A69874C(v90, (uint64_t)v95, v110, v91, v92);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
        }
        else
        {
          sub_22A629860((uint64_t)&v103, (uint64_t *)&unk_255B01090);
        }
        v87 += 40;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease_n();
      a4 = v99;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v66 = v110[0];
    sub_22A629860((uint64_t)v101, a4);
  }
  return v66;
}

_QWORD *sub_22A68DE84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unsigned int (*v43)(char *, uint64_t, int *);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  char *v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  unsigned int (*v93)(char *, uint64_t, int *);
  uint64_t v94;
  _QWORD *v95;

  v6 = a3;
  v94 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v88 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v84 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v85 = (char *)&v84 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v84 = (_QWORD **)((char *)&v84 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v84 - v17;
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  v20 = v19[11];
  v89 = v4;
  v21 = v4 + v20;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(unsigned int *)(v21 + 16) | ((unint64_t)*(unsigned __int8 *)(v21 + 20) << 32);
  v25 = *(unsigned __int8 *)(v21 + 21);
  sub_22A62F9B8(a1, (uint64_t)v18, v6);
  v93 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48);
  v26 = v93(v18, 1, v19);
  v90 = a1;
  v91 = v6;
  v92 = a4;
  if (v26 == 1)
  {
    sub_22A628ADC(v22, v23, v24, v25);
    sub_22A629860((uint64_t)v18, v6);
    v27 = 0;
    v28 = 0;
    v29 = 0xFF0000000000;
  }
  else
  {
    v30 = &v18[v19[11]];
    v86 = (_QWORD *)v24;
    v31 = v23;
    v32 = v22;
    v33 = a4;
    v27 = *(_QWORD *)v30;
    v28 = *((_QWORD *)v30 + 1);
    v34 = *((unsigned int *)v30 + 4) | ((unint64_t)v30[20] << 32);
    v35 = v30[21];
    sub_22A628ADC(v32, v31, (uint64_t)v86, v25);
    sub_22A628ADC(v27, v28, v34, v35);
    v36 = v33;
    v22 = v32;
    v23 = v31;
    v24 = (unint64_t)v86;
    sub_22A629860((uint64_t)v18, v36);
    v29 = v34 | (v35 << 40);
    a1 = v90;
    v6 = v91;
  }
  v86 = sub_22A68E4CC(v27, v28, v29 & 0xFFFFFFFFFFFFLL, v94, 0, v22, v23, v24 & 0xFFFFFFFFFFLL | (v25 << 40));
  sub_22A628AF4(v27, v28, v29);
  sub_22A628B08(v22, v23, v24, v25);
  v37 = v89;
  v38 = v89 + v19[12];
  v39 = *(_QWORD *)v38;
  v40 = *(unsigned int *)(v38 + 8) | ((unint64_t)*(unsigned __int8 *)(v38 + 12) << 32);
  v41 = *(unsigned __int8 *)(v38 + 13);
  v42 = v84;
  sub_22A62F9B8(a1, (uint64_t)v84, v6);
  v43 = v93;
  if (v93((char *)v42, 1, v19) == 1)
  {
    sub_22A628B20(v39, v40, v41);
    sub_22A629860((uint64_t)v42, v6);
    v44 = 0;
    v45 = 0xFF0000000000;
  }
  else
  {
    v46 = (char *)v42 + v19[12];
    v47 = v37;
    v48 = v42;
    v44 = *(_QWORD *)v46;
    v49 = *((unsigned int *)v46 + 2) | ((unint64_t)v46[12] << 32);
    v50 = v46[13];
    sub_22A628B20(v39, v40, v41);
    sub_22A628B20(v44, v49, v50);
    v51 = (uint64_t)v48;
    v37 = v47;
    v43 = v93;
    sub_22A629860(v51, v92);
    v45 = v49 | (v50 << 40);
    a1 = v90;
  }
  v84 = sub_22A68E8B0(v44, v45 & 0xFFFFFFFFFFFFLL, v94, 1, v39, v40 & 0xFFFFFFFFFFLL | (v41 << 40));
  sub_22A628B38(v44, v45);
  sub_22A628B4C(v39, v40, v41);
  v52 = v37 + v19[13];
  v53 = *(_QWORD *)v52;
  v54 = *(_BYTE *)(v52 + 8);
  v55 = v85;
  sub_22A62F9B8(a1, (uint64_t)v85, v6);
  if (v43(v55, 1, v19) == 1)
  {
    sub_22A628B64(v53, v54);
    v56 = 0;
    v57 = -1;
    v58 = v6;
  }
  else
  {
    v59 = &v55[v19[13]];
    v56 = *(_QWORD *)v59;
    v57 = v59[8];
    sub_22A628B64(v53, v54);
    sub_22A628B64(v56, v57);
    v58 = v92;
  }
  sub_22A629860((uint64_t)v55, v58);
  v85 = (char *)sub_22A68EC68(v56, v57, v94, 3, v53, v54);
  sub_22A628B7C(v56, v57);
  sub_22A628B90(v53, v54);
  v60 = v37 + v19[14];
  v61 = *(_QWORD *)v60;
  v62 = *(_QWORD *)(v60 + 8);
  v63 = *(_QWORD *)(v60 + 16);
  v64 = *(_BYTE *)(v60 + 24);
  v65 = a1;
  v66 = v87;
  sub_22A62F9B8(v65, (uint64_t)v87, v6);
  if (v43(v66, 1, v19) == 1)
  {
    sub_22A628ADC(v61, v62, v63, v64);
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = -1;
    v71 = v91;
  }
  else
  {
    v72 = &v66[v19[14]];
    v67 = *(_QWORD *)v72;
    v68 = *((_QWORD *)v72 + 1);
    v69 = *((_QWORD *)v72 + 2);
    v70 = v72[24];
    sub_22A628ADC(v61, v62, v63, v64);
    sub_22A628ADC(v67, v68, v69, v70);
    v71 = v92;
  }
  sub_22A629860((uint64_t)v66, v71);
  v87 = (char *)sub_22A68F098(v67, v68, v69, v70, v94, 2, v61, v62, v63, v64);
  sub_22A628BA8(v67, v68, v69, v70);
  sub_22A628B08(v61, v62, v63, v64);
  v73 = v89 + v19[15];
  v74 = *(_QWORD *)v73;
  v75 = *(_BYTE *)(v73 + 8);
  v76 = v88;
  v77 = v91;
  sub_22A62F9B8(v90, v88, v91);
  if (v93((char *)v76, 1, v19) == 1)
  {
    sub_22A628B64(v74, v75);
    v78 = 0;
    v79 = -1;
    v80 = v77;
  }
  else
  {
    v81 = v76 + v19[15];
    v78 = *(_QWORD *)v81;
    v79 = *(_BYTE *)(v81 + 8);
    sub_22A628B64(v74, v75);
    sub_22A628B64(v78, v79);
    v80 = v92;
  }
  sub_22A629860(v76, v80);
  v82 = sub_22A68F4D0(v78, v79, v94, 8, v74, v75);
  sub_22A628B7C(v78, v79);
  sub_22A628B90(v74, v75);
  v95 = v86;
  sub_22A693AF0((uint64_t)v84);
  sub_22A693AF0((uint64_t)v85);
  sub_22A693AF0((uint64_t)v87);
  sub_22A693AF0((uint64_t)v82);
  return v95;
}

_QWORD *sub_22A68E4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  unint64_t v13;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43[2];
  uint64_t v44[5];
  _QWORD *v45;
  __int128 v46;
  uint64_t v47[7];

  v13 = a8 >> 40;
  if (BYTE5(a3) != 255)
  {
    sub_22A628ADC(a6, a7, a8, BYTE5(a8));
    sub_22A699A34(a1, a2, a3);
    v17 = sub_22A64262C(a1, a2, a3 & 0xFFFFFFFFFFFFLL, a6, a7, a8 & 0xFFFFFFFFFFFFLL);
    sub_22A628B08(a6, a7, a8, v13);
    sub_22A628AF4(a1, a2, a3);
    if ((v17 & 1) != 0)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((_BYTE)v13)
  {
    v44[0] = a6;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v44, &qword_255AFF3C0, (uint64_t (*)(uint64_t))sub_22A698710);
    if (v13 == 1)
    {
      sub_22A628B08(a6, a7, a8, 1u);
      v19 = v44[0];
      v20 = a4;
      v21 = a5;
      v22 = 1;
    }
    else
    {
      sub_22A628B08(a6, a7, a8, 2u);
      v19 = v44[0];
      v20 = a4;
      v21 = a5;
      v22 = 2;
    }
    v18 = (_QWORD *)sub_22A6987C4(v19, v20, v21, v22);
    swift_release();
  }
  else
  {
    *((_QWORD *)&v23 + 1) = a8;
    *(_QWORD *)&v23 = a7;
    v46 = xmmword_22A6A77C0;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01198);
    v47[3] = v24;
    v47[4] = sub_22A671D30((unint64_t *)&unk_255B011A0, &qword_255B01198, (uint64_t)&unk_22A6A9F78);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
    v26 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1, a4, v26);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v24 + 36)) = a5;
    v27 = (char *)boxed_opaque_existential_1 + *(int *)(v24 + 40);
    *(_QWORD *)v27 = a6;
    v27[8] = a7;
    *(_QWORD *)(v27 + 12) = v23 >> 32;
    v27[20] = BYTE4(a8);
    sub_22A62F9B8((uint64_t)v47, (uint64_t)v44, (uint64_t *)&unk_255B01090);
    sub_22A62981C((uint64_t)v44, (uint64_t)&v40, (uint64_t *)&unk_255B01090);
    if (v41)
    {
      sub_22A628A38(&v40, (uint64_t)v43);
      sub_22A628A38(v43, (uint64_t)&v40);
      v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v28 = sub_22A62F0EC(0, v28[2] + 1, 1, v28);
        v45 = v28;
      }
      v31 = v28[2];
      v30 = v28[3];
      if (v31 >= v30 >> 1)
        v45 = sub_22A62F0EC((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
      v32 = v41;
      v33 = v42;
      v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
      MEMORY[0x24BDAC7A8](v34);
      v36 = (char *)&v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v37 + 16))(v36);
      sub_22A69874C(v31, (uint64_t)v36, (uint64_t *)&v45, v32, v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      v18 = v45;
    }
    else
    {
      sub_22A629860((uint64_t)&v40, (uint64_t *)&unk_255B01090);
      v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayDestroy();
  }
  return v18;
}

_QWORD *sub_22A68E8B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  unint64_t v10;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  uint64_t v38[5];
  _QWORD *v39;
  __int128 v40;
  uint64_t v41[6];

  v10 = a6 >> 40;
  if (BYTE5(a2) != 255)
  {
    sub_22A628B20(a5, a6, BYTE5(a6));
    sub_22A699A20(a1, a2);
    v13 = sub_22A6428BC(a1, a2 & 0xFFFFFFFFFFFFLL, a5, a6 & 0xFFFFFFFFFFFFLL);
    sub_22A628B4C(a5, a6, v10);
    sub_22A628B38(a1, a2);
    if ((v13 & 1) != 0)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((_BYTE)v10)
  {
    v38[0] = a5;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v38, &qword_255AFF3B8, (uint64_t (*)(uint64_t))sub_22A6986FC);
    if (v10 == 1)
    {
      sub_22A628B4C(a5, a6, 1u);
      v15 = v38[0];
      v16 = a3;
      v17 = a4;
      v18 = 1;
    }
    else
    {
      sub_22A628B4C(a5, a6, 2u);
      v15 = v38[0];
      v16 = a3;
      v17 = a4;
      v18 = 2;
    }
    v14 = (_QWORD *)sub_22A698B68(v15, v16, v17, v18);
    swift_release();
  }
  else
  {
    v40 = xmmword_22A6A77C0;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01168);
    v41[3] = v19;
    v41[4] = sub_22A671D30((unint64_t *)&unk_255B01170, &qword_255B01168, (uint64_t)&unk_22A6A9F78);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
    v21 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_1, a3, v21);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v19 + 36)) = a4;
    v22 = (char *)boxed_opaque_existential_1 + *(int *)(v19 + 40);
    *(_DWORD *)v22 = a5;
    v22[4] = BYTE4(a5);
    *((_DWORD *)v22 + 2) = a6;
    v22[12] = BYTE4(a6);
    sub_22A62F9B8((uint64_t)v41, (uint64_t)v38, (uint64_t *)&unk_255B01090);
    sub_22A62981C((uint64_t)v38, (uint64_t)&v34, (uint64_t *)&unk_255B01090);
    if (v35)
    {
      sub_22A628A38(&v34, (uint64_t)v37);
      sub_22A628A38(v37, (uint64_t)&v34);
      v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v23 = sub_22A62F0EC(0, v23[2] + 1, 1, v23);
        v39 = v23;
      }
      v26 = v23[2];
      v25 = v23[3];
      if (v26 >= v25 >> 1)
        v39 = sub_22A62F0EC((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
      v27 = v35;
      v28 = v36;
      v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v35);
      MEMORY[0x24BDAC7A8](v29);
      v31 = (char *)&v34 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v31);
      sub_22A69874C(v26, (uint64_t)v31, (uint64_t *)&v39, v27, v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      v14 = v39;
    }
    else
    {
      sub_22A629860((uint64_t)&v34, (uint64_t *)&unk_255B01090);
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayDestroy();
  }
  return v14;
}

_QWORD *sub_22A68EC68(uint64_t a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36[5];
  _QWORD *v37;
  __int128 v38;
  uint64_t v39[6];

  if (a2 <= 1u)
  {
    if (!a2)
    {
      if (a6)
      {
        sub_22A628B7C(a1, 0);
        goto LABEL_10;
      }
      sub_22A628B7C(a1, 0);
      if (*(float *)&a1 != *(float *)&a5 || *((float *)&a1 + 1) != *((float *)&a5 + 1))
        goto LABEL_22;
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    if (!a6)
      goto LABEL_22;
    if (a6 == 1)
    {
      sub_22A628B64(a5, 1u);
      sub_22A699A0C(a1, 1u);
      v12 = sub_22A63F594(a1, a5);
      sub_22A628B90(a5, 1u);
      sub_22A628B7C(a1, 1u);
      if ((v12 & 1) == 0)
        goto LABEL_16;
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
LABEL_17:
    v36[0] = a5;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v36, &qword_255AFF3B0, (uint64_t (*)(uint64_t))sub_22A6986E8);
    sub_22A628B90(a5, a6);
    v13 = v36[0];
    v14 = a3;
    v15 = a4;
    v16 = 2;
    goto LABEL_18;
  }
  if (a2 == 2)
  {
    if (!a6)
      goto LABEL_22;
    if (a6 == 1)
      goto LABEL_16;
    sub_22A628B64(a5, 2u);
    sub_22A699A0C(a1, 2u);
    v11 = sub_22A63F594(a1, a5);
    sub_22A628B90(a5, 2u);
    sub_22A628B7C(a1, 2u);
    if ((v11 & 1) != 0)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
LABEL_10:
  if (a6)
  {
    if (a6 != 1)
      goto LABEL_17;
LABEL_16:
    v36[0] = a5;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v36, &qword_255AFF3B0, (uint64_t (*)(uint64_t))sub_22A6986E8);
    sub_22A628B90(a5, a6);
    v13 = v36[0];
    v14 = a3;
    v15 = a4;
    v16 = 1;
LABEL_18:
    v17 = (_QWORD *)sub_22A698F0C(v13, v14, v15, v16);
    swift_release();
    return v17;
  }
LABEL_22:
  v38 = xmmword_22A6A77C0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01138);
  v39[3] = v18;
  v39[4] = sub_22A671D30((unint64_t *)&unk_255B01140, &qword_255B01138, (uint64_t)&unk_22A6A9F78);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  v20 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_1, a3, v20);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v18 + 36)) = a4;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v18 + 40)) = a5;
  sub_22A62F9B8((uint64_t)v39, (uint64_t)v36, (uint64_t *)&unk_255B01090);
  sub_22A62981C((uint64_t)v36, (uint64_t)&v32, (uint64_t *)&unk_255B01090);
  if (v33)
  {
    sub_22A628A38(&v32, (uint64_t)v35);
    sub_22A628A38(v35, (uint64_t)&v32);
    v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_22A62F0EC(0, v21[2] + 1, 1, v21);
      v37 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
      v37 = sub_22A62F0EC((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    v25 = v33;
    v26 = v34;
    v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v32, v33);
    MEMORY[0x24BDAC7A8](v27);
    v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v29);
    sub_22A69874C(v24, (uint64_t)v29, (uint64_t *)&v37, v25, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    v17 = v37;
  }
  else
  {
    sub_22A629860((uint64_t)&v32, (uint64_t *)&unk_255B01090);
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
  swift_arrayDestroy();
  return v17;
}

_QWORD *sub_22A68F098(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  int v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44[2];
  uint64_t v45[5];
  _QWORD *v46;
  __int128 v47;
  uint64_t v48[7];

  HIDWORD(v40) = a6;
  v17 = ~a4;
  sub_22A628ADC(a7, a8, a9, a10);
  if (v17)
  {
    sub_22A6999F8(a1, a2, a3, a4);
    v18 = sub_22A642A84(a1, a2, a3, a4, a7, a8, a9, a10);
    sub_22A628B08(a7, a8, a9, a10);
    sub_22A628BA8(a1, a2, a3, a4);
    if (v18)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_22A628BA8(a1, a2, a3, 0xFFu);
    sub_22A628BA8(a7, a8, a9, a10);
  }
  if (!a10)
  {
    v47 = xmmword_22A6A77C0;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01108);
    v48[3] = v24;
    v48[4] = sub_22A671D30((unint64_t *)&unk_255B01110, &qword_255B01108, (uint64_t)&unk_22A6A9F78);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    v26 = sub_22A6A5C40();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1, a5, v26);
    *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v24 + 36)) = BYTE4(v40);
    v27 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v24 + 40));
    *v27 = a7;
    v27[1] = a8;
    v27[2] = a9;
    sub_22A62F9B8((uint64_t)v48, (uint64_t)v45, (uint64_t *)&unk_255B01090);
    sub_22A62981C((uint64_t)v45, (uint64_t)&v41, (uint64_t *)&unk_255B01090);
    if (v42)
    {
      sub_22A628A38(&v41, (uint64_t)v44);
      sub_22A628A38(v44, (uint64_t)&v41);
      v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v46 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v28 = sub_22A62F0EC(0, v28[2] + 1, 1, v28);
        v46 = v28;
      }
      v31 = v28[2];
      v30 = v28[3];
      if (v31 >= v30 >> 1)
        v46 = sub_22A62F0EC((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
      v32 = v42;
      v33 = v43;
      v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v41, v42);
      MEMORY[0x24BDAC7A8](v34);
      v36 = (char *)&v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v37 + 16))(v36);
      sub_22A69874C(v31, (uint64_t)v36, (uint64_t *)&v46, v32, v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      v19 = v46;
    }
    else
    {
      sub_22A629860((uint64_t)&v41, (uint64_t *)&unk_255B01090);
      v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
    swift_arrayDestroy();
    return v19;
  }
  v45[0] = a7;
  swift_bridgeObjectRetain_n();
  sub_22A696E6C(v45, &qword_255AFF3A8, (uint64_t (*)(uint64_t))sub_22A6986D4);
  if (a10 == 1)
  {
    sub_22A628B08(a7, a8, a9, 1u);
    v20 = v45[0];
    v21 = a5;
    v22 = HIDWORD(v40);
    v23 = 1;
  }
  else
  {
    sub_22A628B08(a7, a8, a9, 2u);
    v20 = v45[0];
    v21 = a5;
    v22 = HIDWORD(v40);
    v23 = 2;
  }
  v38 = sub_22A6992B0(v20, v21, v22, v23);
  swift_release();
  return (_QWORD *)v38;
}

_QWORD *sub_22A68F4D0(uint64_t a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36[5];
  _QWORD *v37;
  __int128 v38;
  uint64_t v39[6];

  if (a2 <= 1u)
  {
    if (!a2)
    {
      if (a6)
      {
        sub_22A628B7C(a1, 0);
        goto LABEL_10;
      }
      sub_22A628B7C(a1, 0);
      if (*(float *)&a1 != *(float *)&a5)
        goto LABEL_21;
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    if (!a6)
      goto LABEL_21;
    if (a6 == 1)
    {
      sub_22A628B64(a5, 1u);
      sub_22A699A0C(a1, 1u);
      v12 = sub_22A63EF88(a1, a5);
      sub_22A628B90(a5, 1u);
      sub_22A628B7C(a1, 1u);
      if ((v12 & 1) == 0)
        goto LABEL_16;
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
LABEL_17:
    v36[0] = a5;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v36, &qword_255AFF3A0, (uint64_t (*)(uint64_t))sub_22A6986C0);
    sub_22A628B90(a5, a6);
    v13 = v36[0];
    v14 = a3;
    v15 = a4;
    v16 = 2;
    goto LABEL_18;
  }
  if (a2 == 2)
  {
    if (!a6)
      goto LABEL_21;
    if (a6 == 1)
      goto LABEL_16;
    sub_22A628B64(a5, 2u);
    sub_22A699A0C(a1, 2u);
    v11 = sub_22A63EF88(a1, a5);
    sub_22A628B90(a5, 2u);
    sub_22A628B7C(a1, 2u);
    if ((v11 & 1) != 0)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
LABEL_10:
  if (a6)
  {
    if (a6 != 1)
      goto LABEL_17;
LABEL_16:
    v36[0] = a5;
    swift_bridgeObjectRetain_n();
    sub_22A696E6C(v36, &qword_255AFF3A0, (uint64_t (*)(uint64_t))sub_22A6986C0);
    sub_22A628B90(a5, a6);
    v13 = v36[0];
    v14 = a3;
    v15 = a4;
    v16 = 1;
LABEL_18:
    v17 = (_QWORD *)sub_22A699654(v13, v14, v15, v16);
    swift_release();
    return v17;
  }
LABEL_21:
  v38 = xmmword_22A6A77C0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC18);
  v39[3] = v18;
  v39[4] = sub_22A671D30((unint64_t *)&unk_255B010C0, &qword_255AFEC18, (uint64_t)&unk_22A6A9F78);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  v20 = sub_22A6A5C40();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_1, a3, v20);
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v18 + 36)) = a4;
  *(_DWORD *)((char *)boxed_opaque_existential_1 + *(int *)(v18 + 40)) = a5;
  sub_22A62F9B8((uint64_t)v39, (uint64_t)v36, (uint64_t *)&unk_255B01090);
  sub_22A62981C((uint64_t)v36, (uint64_t)&v32, (uint64_t *)&unk_255B01090);
  if (v33)
  {
    sub_22A628A38(&v32, (uint64_t)v35);
    sub_22A628A38(v35, (uint64_t)&v32);
    v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_22A62F0EC(0, v21[2] + 1, 1, v21);
      v37 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
      v37 = sub_22A62F0EC((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    v25 = v33;
    v26 = v34;
    v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v32, v33);
    MEMORY[0x24BDAC7A8](v27);
    v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v29);
    sub_22A69874C(v24, (uint64_t)v29, (uint64_t *)&v37, v25, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    v17 = v37;
  }
  else
  {
    sub_22A629860((uint64_t)&v32, (uint64_t *)&unk_255B01090);
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01090);
  swift_arrayDestroy();
  return v17;
}

uint64_t sub_22A68F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _QWORD v91[4];
  __int16 v92;
  uint64_t v93;
  _QWORD *v94;

  v81 = (_QWORD *)a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011D8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v80 = (uint64_t *)((char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v78 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v78 - v16;
  v83 = (_QWORD *)v2;
  sub_22A62F9B8(v2, (uint64_t)&v78 - v16, (uint64_t *)&unk_255B01540);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_22A62F9B8((uint64_t)v17, (uint64_t)v9, &qword_255B011D8);
  v82 = a1;
  sub_22A62F9B8(a1, v18, &qword_255B011D8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, &qword_255B011D8);
    v20 = v19(v18, 1, v4);
    v21 = v84;
    if (v20 == 1)
    {
      sub_22A629860((uint64_t)v9, &qword_255B011D8);
      return MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }
  sub_22A62F9B8((uint64_t)v9, (uint64_t)v15, &qword_255B011D8);
  if (v19(v18, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, &qword_255B011D8);
    sub_22A629860((uint64_t)v15, (uint64_t *)&unk_255B01540);
    v21 = v84;
LABEL_6:
    sub_22A629860((uint64_t)v9, &qword_255B011D0);
    goto LABEL_7;
  }
  v49 = v79;
  sub_22A62981C(v18, v79, (uint64_t *)&unk_255B01540);
  v50 = sub_22A692C48((uint64_t)v15, v49);
  sub_22A629860(v49, (uint64_t *)&unk_255B01540);
  sub_22A629860((uint64_t)v17, &qword_255B011D8);
  sub_22A629860((uint64_t)v15, (uint64_t *)&unk_255B01540);
  sub_22A629860((uint64_t)v9, &qword_255B011D8);
  v21 = v84;
  if ((v50 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  v22 = (char *)v83 + *(int *)(v4 + 36);
  v23 = *((_QWORD *)v22 + 1);
  v24 = *((_QWORD *)v22 + 2);
  v25 = *((_QWORD *)v22 + 3);
  v26 = *((_WORD *)v22 + 16);
  v27 = *((_QWORD *)v22 + 5);
  LOBYTE(v91[0]) = *v22;
  v91[1] = v23;
  v91[2] = v24;
  v91[3] = v25;
  v92 = v26;
  v93 = v27;
  v28 = (uint64_t)v80;
  sub_22A62F9B8(v82, (uint64_t)v80, &qword_255B011D8);
  if (v19(v28, 1, v4) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22A629860(v28, &qword_255B011D8);
    v88 = 0u;
    v89 = 0u;
    v90 = 0u;
  }
  else
  {
    v29 = v28 + *(int *)(v4 + 36);
    v30 = *(_QWORD *)(v29 + 8);
    v31 = *(_QWORD *)(v29 + 16);
    v32 = *(_QWORD *)(v29 + 24);
    v33 = *(_WORD *)(v29 + 32);
    v34 = *(_QWORD *)(v29 + 40);
    LOBYTE(v88) = *(_BYTE *)v29;
    *((_QWORD *)&v88 + 1) = v30;
    *(_QWORD *)&v89 = v31;
    *((_QWORD *)&v89 + 1) = v32;
    LOWORD(v90) = v33;
    *((_QWORD *)&v90 + 1) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22A629860(v28, (uint64_t *)&unk_255B01540);
  }
  v35 = v81;
  v36 = sub_22A637CAC(&v88, (uint64_t)v81);
  sub_22A699A48(v88, *((uint64_t *)&v88 + 1), v89);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v21)
  {
    v94 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v38 = *(_QWORD *)(v36 + 16);
    v84 = 0;
    if (v38)
    {
      v39 = v36 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628A98(v39, (uint64_t)v91);
        sub_22A628A98((uint64_t)v91, (uint64_t)&v85);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        if (v86)
        {
          sub_22A628A38(&v85, (uint64_t)&v88);
          sub_22A628A38(&v88, (uint64_t)&v85);
          v40 = v94;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v40 = sub_22A62F0EC(0, v40[2] + 1, 1, v40);
            v94 = v40;
          }
          v42 = v40[2];
          v41 = v40[3];
          if (v42 >= v41 >> 1)
            v94 = sub_22A62F0EC((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
          v43 = v86;
          v44 = v87;
          v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v85, v86);
          MEMORY[0x24BDAC7A8](v45);
          v47 = (char *)&v78 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v48 + 16))(v47);
          sub_22A69874C(v42, (uint64_t)v47, (uint64_t *)&v94, v43, v44);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        }
        else
        {
          sub_22A629860((uint64_t)&v85, (uint64_t *)&unk_255B01090);
        }
        v39 += 40;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease_n();
      v80 = v94;
      v35 = v81;
    }
    else
    {
      swift_bridgeObjectRelease();
      v80 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v51 = sub_22A68DE84(v82, (uint64_t)v35, &qword_255B011D8, (uint64_t *)&unk_255B01540);
    v94 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v52 = v51[2];
    if (v52)
    {
      v53 = (uint64_t)(v51 + 4);
      do
      {
        sub_22A628A98(v53, (uint64_t)v91);
        sub_22A628A98((uint64_t)v91, (uint64_t)&v85);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        if (v86)
        {
          sub_22A628A38(&v85, (uint64_t)&v88);
          sub_22A628A38(&v88, (uint64_t)&v85);
          v54 = v94;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v54 = sub_22A62F0EC(0, v54[2] + 1, 1, v54);
            v94 = v54;
          }
          v56 = v54[2];
          v55 = v54[3];
          if (v56 >= v55 >> 1)
            v94 = sub_22A62F0EC((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
          v57 = v86;
          v58 = v87;
          v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v85, v86);
          MEMORY[0x24BDAC7A8](v59);
          v61 = (char *)&v78 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v62 + 16))(v61);
          sub_22A69874C(v56, (uint64_t)v61, (uint64_t *)&v94, v57, v58);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        }
        else
        {
          sub_22A629860((uint64_t)&v85, (uint64_t *)&unk_255B01090);
        }
        v53 += 40;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
      v63 = v94;
      v35 = v81;
    }
    else
    {
      swift_bridgeObjectRelease();
      v63 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v64 = v84;
    v65 = sub_22A68D3E0(v82, v35, &qword_255B011D8, (uint64_t *)&unk_255B01540);
    if (v64)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v83 = v63;
      v84 = 0;
      v94 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v66 = *(_QWORD *)(v65 + 16);
      if (v66)
      {
        v67 = v65 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v67, (uint64_t)v91);
          sub_22A628A98((uint64_t)v91, (uint64_t)&v85);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
          if (v86)
          {
            sub_22A628A38(&v85, (uint64_t)&v88);
            sub_22A628A38(&v88, (uint64_t)&v85);
            v68 = v94;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v68 = sub_22A62F0EC(0, v68[2] + 1, 1, v68);
              v94 = v68;
            }
            v70 = v68[2];
            v69 = v68[3];
            if (v70 >= v69 >> 1)
              v94 = sub_22A62F0EC((_QWORD *)(v69 > 1), v70 + 1, 1, v68);
            v71 = v86;
            v72 = v87;
            v73 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v85, v86);
            MEMORY[0x24BDAC7A8](v73);
            v75 = (char *)&v78 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v76 + 16))(v75);
            sub_22A69874C(v70, (uint64_t)v75, (uint64_t *)&v94, v71, v72);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
          }
          else
          {
            sub_22A629860((uint64_t)&v85, (uint64_t *)&unk_255B01090);
          }
          v67 += 40;
          --v66;
        }
        while (v66);
        swift_bridgeObjectRelease_n();
        v77 = (uint64_t)v94;
      }
      else
      {
        swift_bridgeObjectRelease();
        v77 = MEMORY[0x24BEE4AF8];
      }
      v91[0] = v80;
      sub_22A693AF0(v77);
      sub_22A693AF0((uint64_t)v83);
      return v91[0];
    }
  }
  return result;
}

uint64_t sub_22A690254(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87[2];
  _QWORD v88[6];
  _QWORD *v89;

  v3 = v2;
  v80 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B011E0);
  MEMORY[0x24BDAC7A8](v5);
  v77 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for ImageContent(0);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v79 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v74 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011F8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v74 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v74 - v20;
  v82 = v3;
  sub_22A62F9B8(v3, (uint64_t)&v74 - v20, (uint64_t *)&unk_255B01570);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
  v22 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_22A62F9B8((uint64_t)v21, (uint64_t)v13, &qword_255B011F8);
  v81 = a1;
  sub_22A62F9B8(a1, v22, &qword_255B011F8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v23((uint64_t)v13, 1, v8) == 1)
  {
    sub_22A629860((uint64_t)v21, &qword_255B011F8);
    if (v23(v22, 1, v8) == 1)
    {
      sub_22A629860((uint64_t)v13, &qword_255B011F8);
      return MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }
  sub_22A62F9B8((uint64_t)v13, (uint64_t)v19, &qword_255B011F8);
  if (v23(v22, 1, v8) == 1)
  {
    sub_22A629860((uint64_t)v21, &qword_255B011F8);
    sub_22A629860((uint64_t)v19, (uint64_t *)&unk_255B01570);
LABEL_6:
    sub_22A629860((uint64_t)v13, &qword_255B011F0);
    v25 = (uint64_t)v78;
    v24 = (uint64_t)v79;
    goto LABEL_7;
  }
  v46 = v74;
  sub_22A62981C(v22, v74, (uint64_t *)&unk_255B01570);
  v47 = sub_22A69279C((uint64_t)v19, v46);
  sub_22A629860(v46, (uint64_t *)&unk_255B01570);
  sub_22A629860((uint64_t)v21, &qword_255B011F8);
  sub_22A629860((uint64_t)v19, (uint64_t *)&unk_255B01570);
  sub_22A629860((uint64_t)v13, &qword_255B011F8);
  v25 = (uint64_t)v78;
  v24 = (uint64_t)v79;
  if ((v47 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  sub_22A6354E0(v82 + *(int *)(v8 + 36), v24, type metadata accessor for ImageContent);
  v26 = &qword_255B011F8;
  sub_22A62F9B8(v81, v25, &qword_255B011F8);
  v27 = 1;
  v28 = v23(v25, 1, v8);
  v29 = v83;
  if (v28 == 1)
  {
    v30 = v80;
    v31 = v77;
  }
  else
  {
    v31 = v77;
    sub_22A6354E0(v25 + *(int *)(v8 + 36), v77, type metadata accessor for ImageContent);
    v27 = 0;
    v26 = (uint64_t *)&unk_255B01570;
    v30 = v80;
  }
  sub_22A629860(v25, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v31, v27, 1, v76);
  v32 = sub_22A637740(v31, (uint64_t)v30);
  v33 = v29;
  sub_22A629860(v31, (uint64_t *)&unk_255B011E0);
  result = sub_22A633AE8(v24, type metadata accessor for ImageContent);
  if (!v29)
  {
    v89 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v35 = *(_QWORD *)(v32 + 16);
    v83 = 0;
    if (v35)
    {
      v36 = v32 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628A98(v36, (uint64_t)v88);
        sub_22A628A98((uint64_t)v88, (uint64_t)&v84);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
        if (v85)
        {
          sub_22A628A38(&v84, (uint64_t)v87);
          sub_22A628A38(v87, (uint64_t)&v84);
          v37 = v89;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v37 = sub_22A62F0EC(0, v37[2] + 1, 1, v37);
            v89 = v37;
          }
          v39 = v37[2];
          v38 = v37[3];
          if (v39 >= v38 >> 1)
            v89 = sub_22A62F0EC((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
          v40 = v85;
          v41 = v86;
          v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v84, v85);
          MEMORY[0x24BDAC7A8](v42);
          v44 = (char *)&v74 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v45 + 16))(v44);
          sub_22A69874C(v39, (uint64_t)v44, (uint64_t *)&v89, v40, v41);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
        }
        else
        {
          sub_22A629860((uint64_t)&v84, (uint64_t *)&unk_255B01090);
        }
        v36 += 40;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease_n();
      v79 = (char *)v89;
      v33 = v83;
      v30 = v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      v79 = (char *)MEMORY[0x24BEE4AF8];
    }
    v48 = sub_22A68DE84(v81, (uint64_t)v30, &qword_255B011F8, (uint64_t *)&unk_255B01570);
    v89 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v49 = v48[2];
    if (v49)
    {
      v50 = (uint64_t)(v48 + 4);
      do
      {
        sub_22A628A98(v50, (uint64_t)v88);
        sub_22A628A98((uint64_t)v88, (uint64_t)&v84);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
        if (v85)
        {
          sub_22A628A38(&v84, (uint64_t)v87);
          sub_22A628A38(v87, (uint64_t)&v84);
          v51 = v89;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v51 = sub_22A62F0EC(0, v51[2] + 1, 1, v51);
            v89 = v51;
          }
          v53 = v51[2];
          v52 = v51[3];
          if (v53 >= v52 >> 1)
            v89 = sub_22A62F0EC((_QWORD *)(v52 > 1), v53 + 1, 1, v51);
          v54 = v85;
          v55 = v86;
          v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v84, v85);
          MEMORY[0x24BDAC7A8](v56);
          v58 = (char *)&v74 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v59 + 16))(v58);
          sub_22A69874C(v53, (uint64_t)v58, (uint64_t *)&v89, v54, v55);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
        }
        else
        {
          sub_22A629860((uint64_t)&v84, (uint64_t *)&unk_255B01090);
        }
        v50 += 40;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
      v60 = (uint64_t)v89;
      v33 = v83;
      v30 = v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x24BEE4AF8];
    }
    v61 = sub_22A68D3E0(v81, v30, &qword_255B011F8, (uint64_t *)&unk_255B01570);
    if (v33)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v89 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v62 = *(_QWORD *)(v61 + 16);
      if (v62)
      {
        v82 = v60;
        v83 = 0;
        v63 = v61 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v63, (uint64_t)v88);
          sub_22A628A98((uint64_t)v88, (uint64_t)&v84);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
          if (v85)
          {
            sub_22A628A38(&v84, (uint64_t)v87);
            sub_22A628A38(v87, (uint64_t)&v84);
            v64 = v89;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v64 = sub_22A62F0EC(0, v64[2] + 1, 1, v64);
              v89 = v64;
            }
            v66 = v64[2];
            v65 = v64[3];
            if (v66 >= v65 >> 1)
              v89 = sub_22A62F0EC((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
            v67 = v85;
            v68 = v86;
            v69 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v84, v85);
            MEMORY[0x24BDAC7A8](v69);
            v71 = (char *)&v74 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v72 + 16))(v71);
            sub_22A69874C(v66, (uint64_t)v71, (uint64_t *)&v89, v67, v68);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
          }
          else
          {
            sub_22A629860((uint64_t)&v84, (uint64_t *)&unk_255B01090);
          }
          v63 += 40;
          --v62;
        }
        while (v62);
        swift_bridgeObjectRelease_n();
        v73 = (uint64_t)v89;
        v60 = v82;
      }
      else
      {
        swift_bridgeObjectRelease();
        v73 = MEMORY[0x24BEE4AF8];
      }
      v88[0] = v79;
      sub_22A693AF0(v73);
      sub_22A693AF0(v60);
      return v88[0];
    }
  }
  return result;
}

uint64_t sub_22A690BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80[2];
  _QWORD v81[6];
  _QWORD *v82;

  v73 = (_QWORD *)a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v71 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01088);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t *)((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v71 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v71 - v16;
  v75 = v2;
  sub_22A62F9B8(v2, (uint64_t)&v71 - v16, &qword_255AFEEE0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_22A62F9B8((uint64_t)v17, (uint64_t)v9, (uint64_t *)&unk_255B00CE0);
  v74 = a1;
  sub_22A62F9B8(a1, v18, (uint64_t *)&unk_255B00CE0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B00CE0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B00CE0);
      return MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }
  sub_22A62F9B8((uint64_t)v9, (uint64_t)v15, (uint64_t *)&unk_255B00CE0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B00CE0);
    sub_22A629860((uint64_t)v15, &qword_255AFEEE0);
LABEL_6:
    sub_22A629860((uint64_t)v9, &qword_255B01088);
    goto LABEL_7;
  }
  v42 = v71;
  sub_22A62981C(v18, v71, &qword_255AFEEE0);
  v43 = sub_22A6922E8((uint64_t)v15, v42);
  sub_22A629860(v42, &qword_255AFEEE0);
  sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B00CE0);
  sub_22A629860((uint64_t)v15, &qword_255AFEEE0);
  sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B00CE0);
  if ((v43 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  v20 = (uint64_t *)(v75 + *(int *)(v4 + 36));
  v22 = *v20;
  v21 = v20[1];
  v23 = (uint64_t)v72;
  sub_22A62F9B8(v74, (uint64_t)v72, (uint64_t *)&unk_255B00CE0);
  if (v19(v23, 1, v4) == 1)
  {
    swift_bridgeObjectRetain();
    sub_22A629860(v23, (uint64_t *)&unk_255B00CE0);
    v24 = 0;
    v25 = 0;
  }
  else
  {
    v26 = (uint64_t *)(v23 + *(int *)(v4 + 36));
    v24 = *v26;
    v25 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22A629860(v23, &qword_255AFEEE0);
  }
  v27 = v73;
  v81[0] = v22;
  v81[1] = v21;
  *(_QWORD *)&v80[0] = v24;
  *((_QWORD *)&v80[0] + 1) = v25;
  v28 = v76;
  v29 = sub_22A66FB90(v80, (uint64_t)v73);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v28)
  {
    v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v31 = *((_QWORD *)v29 + 2);
    v76 = 0;
    if (v31)
    {
      v32 = (uint64_t)v29 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628A98(v32, (uint64_t)v81);
        sub_22A628A98((uint64_t)v81, (uint64_t)&v77);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
        if (v78)
        {
          sub_22A628A38(&v77, (uint64_t)v80);
          sub_22A628A38(v80, (uint64_t)&v77);
          v33 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v33 = sub_22A62F0EC(0, v33[2] + 1, 1, v33);
            v82 = v33;
          }
          v35 = v33[2];
          v34 = v33[3];
          if (v35 >= v34 >> 1)
            v82 = sub_22A62F0EC((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
          v36 = v78;
          v37 = v79;
          v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v77, v78);
          MEMORY[0x24BDAC7A8](v38);
          v40 = (char *)&v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v41 + 16))(v40);
          sub_22A69874C(v35, (uint64_t)v40, (uint64_t *)&v82, v36, v37);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
        }
        else
        {
          sub_22A629860((uint64_t)&v77, (uint64_t *)&unk_255B01090);
        }
        v32 += 40;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease_n();
      v72 = v82;
      v27 = v73;
    }
    else
    {
      swift_bridgeObjectRelease();
      v72 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v44 = sub_22A68DE84(v74, (uint64_t)v27, (uint64_t *)&unk_255B00CE0, &qword_255AFEEE0);
    v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v45 = v44[2];
    if (v45)
    {
      v46 = (uint64_t)(v44 + 4);
      do
      {
        sub_22A628A98(v46, (uint64_t)v81);
        sub_22A628A98((uint64_t)v81, (uint64_t)&v77);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
        if (v78)
        {
          sub_22A628A38(&v77, (uint64_t)v80);
          sub_22A628A38(v80, (uint64_t)&v77);
          v47 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v47 = sub_22A62F0EC(0, v47[2] + 1, 1, v47);
            v82 = v47;
          }
          v49 = v47[2];
          v48 = v47[3];
          if (v49 >= v48 >> 1)
            v82 = sub_22A62F0EC((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
          v50 = v78;
          v51 = v79;
          v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v77, v78);
          MEMORY[0x24BDAC7A8](v52);
          v54 = (char *)&v71 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v55 + 16))(v54);
          sub_22A69874C(v49, (uint64_t)v54, (uint64_t *)&v82, v50, v51);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
        }
        else
        {
          sub_22A629860((uint64_t)&v77, (uint64_t *)&unk_255B01090);
        }
        v46 += 40;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      v56 = (uint64_t)v82;
      v27 = v73;
    }
    else
    {
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x24BEE4AF8];
    }
    v57 = v76;
    v58 = sub_22A68D3E0(v74, v27, (uint64_t *)&unk_255B00CE0, &qword_255AFEEE0);
    if (v57)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v76 = 0;
      v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v59 = *(_QWORD *)(v58 + 16);
      if (v59)
      {
        v75 = v56;
        v60 = v58 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v60, (uint64_t)v81);
          sub_22A628A98((uint64_t)v81, (uint64_t)&v77);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
          if (v78)
          {
            sub_22A628A38(&v77, (uint64_t)v80);
            sub_22A628A38(v80, (uint64_t)&v77);
            v61 = v82;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v61 = sub_22A62F0EC(0, v61[2] + 1, 1, v61);
              v82 = v61;
            }
            v63 = v61[2];
            v62 = v61[3];
            if (v63 >= v62 >> 1)
              v82 = sub_22A62F0EC((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
            v64 = v78;
            v65 = v79;
            v66 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v77, v78);
            MEMORY[0x24BDAC7A8](v66);
            v68 = (char *)&v71 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v69 + 16))(v68);
            sub_22A69874C(v63, (uint64_t)v68, (uint64_t *)&v82, v64, v65);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
          }
          else
          {
            sub_22A629860((uint64_t)&v77, (uint64_t *)&unk_255B01090);
          }
          v60 += 40;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease_n();
        v70 = (uint64_t)v82;
        v56 = v75;
      }
      else
      {
        swift_bridgeObjectRelease();
        v70 = MEMORY[0x24BEE4AF8];
      }
      v81[0] = v72;
      sub_22A693AF0(v70);
      sub_22A693AF0(v56);
      return v81[0];
    }
  }
  return result;
}

uint64_t sub_22A691498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  _QWORD *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _BYTE v83[60];
  __int16 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  char v88;
  __int128 v89;
  char v90;
  char v91;
  uint64_t v92;

  v76 = (_QWORD *)a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v74 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01208);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01210);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v75 = (uint64_t *)((char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v73 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v73 - v16;
  v78 = v2;
  sub_22A62F9B8(v2, (uint64_t)&v73 - v16, &qword_255B01200);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_22A62F9B8((uint64_t)v17, (uint64_t)v9, (uint64_t *)&unk_255B01210);
  v77 = a1;
  sub_22A62F9B8(a1, v18, (uint64_t *)&unk_255B01210);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v9, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B01210);
    v20 = v19(v18, 1, v4);
    v21 = v92;
    if (v20 == 1)
    {
      sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B01210);
      return MEMORY[0x24BEE4AF8];
    }
    goto LABEL_6;
  }
  sub_22A62F9B8((uint64_t)v9, (uint64_t)v15, (uint64_t *)&unk_255B01210);
  if (v19(v18, 1, v4) == 1)
  {
    sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B01210);
    sub_22A629860((uint64_t)v15, &qword_255B01200);
    v21 = v92;
LABEL_6:
    sub_22A629860((uint64_t)v9, &qword_255B01208);
    goto LABEL_7;
  }
  v44 = v74;
  sub_22A62981C(v18, v74, &qword_255B01200);
  v45 = sub_22A691E0C((uint64_t)v15, v44);
  sub_22A629860(v44, &qword_255B01200);
  sub_22A629860((uint64_t)v17, (uint64_t *)&unk_255B01210);
  sub_22A629860((uint64_t)v15, &qword_255B01200);
  sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B01210);
  v21 = v92;
  if ((v45 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  v22 = v78 + *(int *)(v4 + 36);
  v23 = *(_BYTE *)(v22 + 40);
  v24 = *(_BYTE *)(v22 + 60);
  v25 = *(_BYTE *)(v22 + 61);
  v85 = *(_OWORD *)v22;
  v86 = *(_QWORD *)(v22 + 16);
  v87 = *(_OWORD *)(v22 + 24);
  v88 = v23;
  v89 = *(_OWORD *)(v22 + 44);
  v90 = v24;
  v91 = v25;
  v26 = (uint64_t)v75;
  sub_22A62F9B8(v77, (uint64_t)v75, (uint64_t *)&unk_255B01210);
  if (v19(v26, 1, v4) == 1)
  {
    sub_22A629860(v26, (uint64_t *)&unk_255B01210);
    memset(v83, 0, sizeof(v83));
    v84 = 512;
  }
  else
  {
    v27 = v26 + *(int *)(v4 + 36);
    v28 = *(_BYTE *)(v27 + 40);
    v29 = *(_BYTE *)(v27 + 60);
    v30 = *(_BYTE *)(v27 + 61);
    *(_OWORD *)v83 = *(_OWORD *)v27;
    *(_QWORD *)&v83[16] = *(_QWORD *)(v27 + 16);
    *(_OWORD *)&v83[24] = *(_OWORD *)(v27 + 24);
    v83[40] = v28;
    *(_OWORD *)&v83[44] = *(_OWORD *)(v27 + 44);
    LOBYTE(v84) = v29;
    HIBYTE(v84) = v30;
    sub_22A629860(v26, &qword_255B01200);
  }
  v31 = v76;
  result = sub_22A67E4EC((uint64_t)v83, (uint64_t)v76);
  if (!v21)
  {
    v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(result + 16);
    v92 = 0;
    if (v33)
    {
      v34 = result + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22A628A98(v34, (uint64_t)&v85);
        sub_22A628A98((uint64_t)&v85, (uint64_t)&v79);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        if (v80)
        {
          sub_22A628A38(&v79, (uint64_t)v83);
          sub_22A628A38((__int128 *)v83, (uint64_t)&v79);
          v35 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v35 = sub_22A62F0EC(0, v35[2] + 1, 1, v35);
            v82 = v35;
          }
          v37 = v35[2];
          v36 = v35[3];
          if (v37 >= v36 >> 1)
            v82 = sub_22A62F0EC((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
          v38 = v80;
          v39 = v81;
          v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v80);
          MEMORY[0x24BDAC7A8](v40);
          v42 = (char *)&v73 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v43 + 16))(v42);
          sub_22A69874C(v37, (uint64_t)v42, (uint64_t *)&v82, v38, v39);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        }
        else
        {
          sub_22A629860((uint64_t)&v79, (uint64_t *)&unk_255B01090);
        }
        v34 += 40;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease_n();
      v75 = v82;
      v31 = v76;
    }
    else
    {
      swift_bridgeObjectRelease();
      v75 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v46 = sub_22A68DE84(v77, (uint64_t)v31, (uint64_t *)&unk_255B01210, &qword_255B01200);
    v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v47 = v46[2];
    if (v47)
    {
      v48 = (uint64_t)(v46 + 4);
      do
      {
        sub_22A628A98(v48, (uint64_t)&v85);
        sub_22A628A98((uint64_t)&v85, (uint64_t)&v79);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        if (v80)
        {
          sub_22A628A38(&v79, (uint64_t)v83);
          sub_22A628A38((__int128 *)v83, (uint64_t)&v79);
          v49 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v49 = sub_22A62F0EC(0, v49[2] + 1, 1, v49);
            v82 = v49;
          }
          v51 = v49[2];
          v50 = v49[3];
          if (v51 >= v50 >> 1)
            v82 = sub_22A62F0EC((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
          v52 = v80;
          v53 = v81;
          v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v80);
          MEMORY[0x24BDAC7A8](v54);
          v56 = (char *)&v73 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v57 + 16))(v56);
          sub_22A69874C(v51, (uint64_t)v56, (uint64_t *)&v82, v52, v53);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        }
        else
        {
          sub_22A629860((uint64_t)&v79, (uint64_t *)&unk_255B01090);
        }
        v48 += 40;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
      v58 = (uint64_t)v82;
      v31 = v76;
    }
    else
    {
      swift_bridgeObjectRelease();
      v58 = MEMORY[0x24BEE4AF8];
    }
    v59 = v92;
    v60 = sub_22A68D3E0(v77, v31, (uint64_t *)&unk_255B01210, &qword_255B01200);
    if (v59)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v92 = 0;
      v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v61 = *(_QWORD *)(v60 + 16);
      if (v61)
      {
        v78 = v58;
        v62 = v60 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_22A628A98(v62, (uint64_t)&v85);
          sub_22A628A98((uint64_t)&v85, (uint64_t)&v79);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
          if (v80)
          {
            sub_22A628A38(&v79, (uint64_t)v83);
            sub_22A628A38((__int128 *)v83, (uint64_t)&v79);
            v63 = v82;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v63 = sub_22A62F0EC(0, v63[2] + 1, 1, v63);
              v82 = v63;
            }
            v65 = v63[2];
            v64 = v63[3];
            if (v65 >= v64 >> 1)
              v82 = sub_22A62F0EC((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
            v66 = v80;
            v67 = v81;
            v68 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v80);
            MEMORY[0x24BDAC7A8](v68);
            v70 = (char *)&v73 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v71 + 16))(v70);
            sub_22A69874C(v65, (uint64_t)v70, (uint64_t *)&v82, v66, v67);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
          }
          else
          {
            sub_22A629860((uint64_t)&v79, (uint64_t *)&unk_255B01090);
          }
          v62 += 40;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease_n();
        v72 = (uint64_t)v82;
        v58 = v78;
      }
      else
      {
        swift_bridgeObjectRelease();
        v72 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)&v85 = v75;
      sub_22A693AF0(v72);
      sub_22A693AF0(v58);
      return v85;
    }
  }
  return result;
}

uint64_t sub_22A691E0C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  char v57;
  uint64_t v58;
  int *v60;
  uint64_t v61;
  _OWORD v62[2];
  _OWORD v63[2];
  __int128 v64[2];
  _OWORD v65[2];

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_31;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v5 = v4[9];
  v6 = (_OWORD *)(a1 + v5);
  v7 = (__int128 *)(a2 + v5);
  v8 = v6[1];
  v62[0] = *v6;
  v62[1] = v8;
  v63[0] = v6[2];
  *(_OWORD *)((char *)v63 + 14) = *(_OWORD *)((char *)v6 + 46);
  v9 = v7[1];
  v64[0] = *v7;
  v64[1] = v9;
  v65[0] = v7[2];
  *(_OWORD *)((char *)v65 + 14) = *(__int128 *)((char *)v7 + 46);
  if (!sub_22A693110(v62, v64))
    goto LABEL_31;
  sub_22A640C10(*(_BYTE *)(a1 + v4[10]));
  if ((v10 & 1) == 0)
    goto LABEL_31;
  v11 = v4[11];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = *(unsigned int *)(a1 + v11 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + v11 + 20) << 32);
  v15 = *(unsigned __int8 *)(a1 + v11 + 21);
  v16 = a2 + v11;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v60 = v4;
  v61 = a2;
  v19 = *(unsigned int *)(v16 + 16) | ((unint64_t)*(unsigned __int8 *)(v16 + 20) << 32);
  v20 = *(unsigned __int8 *)(v16 + 21);
  sub_22A628ADC(v12, v13, v14, v15);
  sub_22A628ADC(v17, v18, v19, v20);
  v21 = sub_22A64262C(v12, v13, v14 | (v15 << 40), v17, v18, v19 | (v20 << 40));
  sub_22A628B08(v17, v18, v19, v20);
  sub_22A628B08(v12, v13, v14, v15);
  if ((v21 & 1) == 0)
    goto LABEL_31;
  v22 = v60[12];
  v23 = *(_QWORD *)(a1 + v22);
  v24 = *(unsigned int *)(a1 + v22 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v22 + 12) << 32);
  v25 = *(unsigned __int8 *)(a1 + v22 + 13);
  v26 = v61 + v22;
  v27 = *(_QWORD *)v26;
  v28 = *(unsigned int *)(v26 + 8) | ((unint64_t)*(unsigned __int8 *)(v26 + 12) << 32);
  v29 = *(unsigned __int8 *)(v26 + 13);
  sub_22A628B20(v23, v24, v25);
  sub_22A628B20(v27, v28, v29);
  v30 = sub_22A6428BC(v23, v24 | (v25 << 40), v27, v28 | (v29 << 40));
  sub_22A628B4C(v27, v28, v29);
  sub_22A628B4C(v23, v24, v25);
  if ((v30 & 1) == 0)
    goto LABEL_31;
  v31 = v60[13];
  v32 = *(_QWORD *)(a1 + v31);
  v33 = *(unsigned __int8 *)(a1 + v31 + 8);
  v34 = v61 + v31;
  v35 = *(_QWORD *)v34;
  v36 = *(unsigned __int8 *)(v34 + 8);
  if (v33)
  {
    if (v33 == 1)
    {
      if (v36 != 1)
        goto LABEL_31;
      sub_22A628B64(v35, 1u);
      sub_22A628B64(v32, 1u);
      v37 = sub_22A63F594(v32, v35);
      sub_22A628B90(v35, 1u);
      sub_22A628B90(v32, 1u);
      if ((v37 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v36 != 2)
        goto LABEL_31;
      sub_22A628B64(v35, 2u);
      sub_22A628B64(v32, 2u);
      v38 = sub_22A63F594(v32, v35);
      sub_22A628B90(v35, 2u);
      sub_22A628B90(v32, 2u);
      if ((v38 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v36)
      goto LABEL_31;
    if (*(float *)&v32 != *(float *)&v35 || *((float *)&v32 + 1) != *((float *)&v35 + 1))
      return v36 & 1;
  }
  v39 = v60[14];
  v40 = a1 + v39;
  v41 = *(_QWORD *)(a1 + v39);
  v42 = *(_QWORD *)(a1 + v39 + 8);
  v43 = *(_QWORD *)(a1 + v39 + 16);
  v44 = v61 + v39;
  v45 = *(_QWORD *)v44;
  v46 = *(_QWORD *)(v44 + 8);
  v47 = *(_QWORD *)(v44 + 16);
  v48 = *(_BYTE *)(v40 + 24);
  v49 = *(_BYTE *)(v44 + 24);
  sub_22A628ADC(v41, v42, v43, v48);
  sub_22A628ADC(v45, v46, v47, v49);
  v50 = sub_22A642A84(v41, v42, v43, v48, v45, v46, v47, v49);
  sub_22A628B08(v45, v46, v47, v49);
  sub_22A628B08(v41, v42, v43, v48);
  if (!v50)
    goto LABEL_31;
  v51 = v60[15];
  v52 = *(_QWORD *)(a1 + v51);
  v36 = *(unsigned __int8 *)(a1 + v51 + 8);
  v53 = v61 + v51;
  v54 = *(_QWORD *)v53;
  v55 = *(unsigned __int8 *)(v53 + 8);
  if (v36)
  {
    if (v36 == 1)
    {
      if (v55 != 1)
        goto LABEL_31;
      sub_22A628B64(v54, 1u);
      sub_22A628B64(v52, 1u);
      v56 = sub_22A63EF88(v52, v54);
      sub_22A628B90(v54, 1u);
      sub_22A628B90(v52, 1u);
      if ((v56 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v55 != 2)
        goto LABEL_31;
      sub_22A628B64(v54, 2u);
      sub_22A628B64(v52, 2u);
      v57 = sub_22A63EF88(v52, v54);
      sub_22A628B90(v54, 2u);
      sub_22A628B90(v52, 2u);
      if ((v57 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (!v55 && *(float *)&v52 == *(float *)&v54)
  {
LABEL_28:
    v58 = v60[16];
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + v58), *(_QWORD *)(a1 + v58 + 8), *(_BYTE *)(a1 + v58 + 16), *(_QWORD *)(v61 + v58), *(_QWORD *)(v61 + v58 + 8), *(_BYTE *)(v61 + v58 + 16)) & 1) != 0&& *(float *)(a1 + v60[17]) == *(float *)(v61 + v60[17]))
    {
      LOBYTE(v36) = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + v60[18]), *(float32x4_t *)(v61 + v60[18]))), 0xFuLL)));
      return v36 & 1;
    }
LABEL_31:
    LOBYTE(v36) = 0;
  }
  return v36 & 1;
}

uint64_t sub_22A6922E8(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  uint64_t v51;
  int *v53;
  char v54;
  BOOL v55;

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_31;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  if (!sub_22A693400(*(_QWORD *)(a1 + v4[9]), *(_QWORD *)(a1 + v4[9] + 8), *(_QWORD *)(a2 + v4[9]), *(_QWORD *)(a2 + v4[9] + 8)))goto LABEL_31;
  sub_22A640C10(*(_BYTE *)(a1 + v4[10]));
  if ((v5 & 1) == 0)
    goto LABEL_31;
  v6 = v4[11];
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = *(unsigned int *)(a1 + v6 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + v6 + 20) << 32);
  v10 = *(unsigned __int8 *)(a1 + v6 + 21);
  v11 = a2 + v6;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v53 = v4;
  v14 = *(unsigned int *)(v11 + 16) | ((unint64_t)*(unsigned __int8 *)(v11 + 20) << 32);
  v15 = *(unsigned __int8 *)(v11 + 21);
  sub_22A628ADC(v7, v8, v9, v10);
  sub_22A628ADC(v12, v13, v14, v15);
  v54 = sub_22A64262C(v7, v8, v9 | (v10 << 40), v12, v13, v14 | (v15 << 40));
  sub_22A628B08(v12, v13, v14, v15);
  sub_22A628B08(v7, v8, v9, v10);
  if ((v54 & 1) == 0)
    goto LABEL_31;
  v16 = v53[12];
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(unsigned int *)(a1 + v16 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v16 + 12) << 32);
  v19 = *(unsigned __int8 *)(a1 + v16 + 13);
  v20 = a2 + v16;
  v21 = *(_QWORD *)v20;
  v22 = *(unsigned int *)(v20 + 8) | ((unint64_t)*(unsigned __int8 *)(v20 + 12) << 32);
  v23 = *(unsigned __int8 *)(v20 + 13);
  sub_22A628B20(v17, v18, v19);
  sub_22A628B20(v21, v22, v23);
  v24 = sub_22A6428BC(v17, v18 | (v19 << 40), v21, v22 | (v23 << 40));
  sub_22A628B4C(v21, v22, v23);
  sub_22A628B4C(v17, v18, v19);
  if ((v24 & 1) == 0)
    goto LABEL_31;
  v25 = v53[13];
  v26 = *(_QWORD *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a1 + v25 + 8);
  v28 = a2 + v25;
  v29 = *(_QWORD *)v28;
  v30 = *(unsigned __int8 *)(v28 + 8);
  if (v27)
  {
    if (v27 == 1)
    {
      if (v30 != 1)
        goto LABEL_31;
      sub_22A628B64(v29, 1u);
      sub_22A628B64(v26, 1u);
      v31 = sub_22A63F594(v26, v29);
      sub_22A628B90(v29, 1u);
      sub_22A628B90(v26, 1u);
      if ((v31 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v30 != 2)
        goto LABEL_31;
      sub_22A628B64(v29, 2u);
      sub_22A628B64(v26, 2u);
      v32 = sub_22A63F594(v26, v29);
      sub_22A628B90(v29, 2u);
      sub_22A628B90(v26, 2u);
      if ((v32 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v30)
      goto LABEL_31;
    if (*(float *)&v26 != *(float *)&v29 || *((float *)&v26 + 1) != *((float *)&v29 + 1))
      return v30 & 1;
  }
  v33 = v53[14];
  v34 = a1 + v33;
  v35 = *(_QWORD *)(a1 + v33);
  v36 = *(_QWORD *)(a1 + v33 + 8);
  v37 = *(_QWORD *)(a1 + v33 + 16);
  v38 = a2 + v33;
  v39 = *(_QWORD *)v38;
  v40 = *(_QWORD *)(v38 + 8);
  v41 = *(_QWORD *)(v38 + 16);
  v42 = *(_BYTE *)(v34 + 24);
  v43 = *(_BYTE *)(v38 + 24);
  sub_22A628ADC(v35, v36, v37, v42);
  sub_22A628ADC(v39, v40, v41, v43);
  v55 = sub_22A642A84(v35, v36, v37, v42, v39, v40, v41, v43);
  sub_22A628B08(v39, v40, v41, v43);
  sub_22A628B08(v35, v36, v37, v42);
  if (!v55)
    goto LABEL_31;
  v44 = v53[15];
  v45 = *(_QWORD *)(a1 + v44);
  v30 = *(unsigned __int8 *)(a1 + v44 + 8);
  v46 = a2 + v44;
  v47 = *(_QWORD *)v46;
  v48 = *(unsigned __int8 *)(v46 + 8);
  if (v30)
  {
    if (v30 == 1)
    {
      if (v48 != 1)
        goto LABEL_31;
      sub_22A628B64(v47, 1u);
      sub_22A628B64(v45, 1u);
      v49 = sub_22A63EF88(v45, v47);
      sub_22A628B90(v47, 1u);
      sub_22A628B90(v45, 1u);
      if ((v49 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v48 != 2)
        goto LABEL_31;
      sub_22A628B64(v47, 2u);
      sub_22A628B64(v45, 2u);
      v50 = sub_22A63EF88(v45, v47);
      sub_22A628B90(v47, 2u);
      sub_22A628B90(v45, 2u);
      if ((v50 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (!v48 && *(float *)&v45 == *(float *)&v47)
  {
LABEL_28:
    v51 = v53[16];
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + v51), *(_QWORD *)(a1 + v51 + 8), *(_BYTE *)(a1 + v51 + 16), *(_QWORD *)(a2 + v51), *(_QWORD *)(a2 + v51 + 8), *(_BYTE *)(a2 + v51 + 16)) & 1) != 0&& *(float *)(a1 + v53[17]) == *(float *)(a2 + v53[17]))
    {
      LOBYTE(v30) = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + v53[18]), *(float32x4_t *)(a2 + v53[18]))), 0xFuLL)));
      return v30 & 1;
    }
LABEL_31:
    LOBYTE(v30) = 0;
  }
  return v30 & 1;
}

uint64_t sub_22A69279C(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  uint64_t v51;
  int *v53;
  char v54;
  BOOL v55;

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_31;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  if (!sub_22A6932AC(a1 + v4[9], a2 + v4[9]))
    goto LABEL_31;
  sub_22A640C10(*(_BYTE *)(a1 + v4[10]));
  if ((v5 & 1) == 0)
    goto LABEL_31;
  v6 = v4[11];
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = *(unsigned int *)(a1 + v6 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + v6 + 20) << 32);
  v10 = *(unsigned __int8 *)(a1 + v6 + 21);
  v11 = a2 + v6;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v53 = v4;
  v14 = *(unsigned int *)(v11 + 16) | ((unint64_t)*(unsigned __int8 *)(v11 + 20) << 32);
  v15 = *(unsigned __int8 *)(v11 + 21);
  sub_22A628ADC(v7, v8, v9, v10);
  sub_22A628ADC(v12, v13, v14, v15);
  v54 = sub_22A64262C(v7, v8, v9 | (v10 << 40), v12, v13, v14 | (v15 << 40));
  sub_22A628B08(v12, v13, v14, v15);
  sub_22A628B08(v7, v8, v9, v10);
  if ((v54 & 1) == 0)
    goto LABEL_31;
  v16 = v53[12];
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(unsigned int *)(a1 + v16 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v16 + 12) << 32);
  v19 = *(unsigned __int8 *)(a1 + v16 + 13);
  v20 = a2 + v16;
  v21 = *(_QWORD *)v20;
  v22 = *(unsigned int *)(v20 + 8) | ((unint64_t)*(unsigned __int8 *)(v20 + 12) << 32);
  v23 = *(unsigned __int8 *)(v20 + 13);
  sub_22A628B20(v17, v18, v19);
  sub_22A628B20(v21, v22, v23);
  v24 = sub_22A6428BC(v17, v18 | (v19 << 40), v21, v22 | (v23 << 40));
  sub_22A628B4C(v21, v22, v23);
  sub_22A628B4C(v17, v18, v19);
  if ((v24 & 1) == 0)
    goto LABEL_31;
  v25 = v53[13];
  v26 = *(_QWORD *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a1 + v25 + 8);
  v28 = a2 + v25;
  v29 = *(_QWORD *)v28;
  v30 = *(unsigned __int8 *)(v28 + 8);
  if (v27)
  {
    if (v27 == 1)
    {
      if (v30 != 1)
        goto LABEL_31;
      sub_22A628B64(v29, 1u);
      sub_22A628B64(v26, 1u);
      v31 = sub_22A63F594(v26, v29);
      sub_22A628B90(v29, 1u);
      sub_22A628B90(v26, 1u);
      if ((v31 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v30 != 2)
        goto LABEL_31;
      sub_22A628B64(v29, 2u);
      sub_22A628B64(v26, 2u);
      v32 = sub_22A63F594(v26, v29);
      sub_22A628B90(v29, 2u);
      sub_22A628B90(v26, 2u);
      if ((v32 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v30)
      goto LABEL_31;
    if (*(float *)&v26 != *(float *)&v29 || *((float *)&v26 + 1) != *((float *)&v29 + 1))
      return v30 & 1;
  }
  v33 = v53[14];
  v34 = a1 + v33;
  v35 = *(_QWORD *)(a1 + v33);
  v36 = *(_QWORD *)(a1 + v33 + 8);
  v37 = *(_QWORD *)(a1 + v33 + 16);
  v38 = a2 + v33;
  v39 = *(_QWORD *)v38;
  v40 = *(_QWORD *)(v38 + 8);
  v41 = *(_QWORD *)(v38 + 16);
  v42 = *(_BYTE *)(v34 + 24);
  v43 = *(_BYTE *)(v38 + 24);
  sub_22A628ADC(v35, v36, v37, v42);
  sub_22A628ADC(v39, v40, v41, v43);
  v55 = sub_22A642A84(v35, v36, v37, v42, v39, v40, v41, v43);
  sub_22A628B08(v39, v40, v41, v43);
  sub_22A628B08(v35, v36, v37, v42);
  if (!v55)
    goto LABEL_31;
  v44 = v53[15];
  v45 = *(_QWORD *)(a1 + v44);
  v30 = *(unsigned __int8 *)(a1 + v44 + 8);
  v46 = a2 + v44;
  v47 = *(_QWORD *)v46;
  v48 = *(unsigned __int8 *)(v46 + 8);
  if (v30)
  {
    if (v30 == 1)
    {
      if (v48 != 1)
        goto LABEL_31;
      sub_22A628B64(v47, 1u);
      sub_22A628B64(v45, 1u);
      v49 = sub_22A63EF88(v45, v47);
      sub_22A628B90(v47, 1u);
      sub_22A628B90(v45, 1u);
      if ((v49 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v48 != 2)
        goto LABEL_31;
      sub_22A628B64(v47, 2u);
      sub_22A628B64(v45, 2u);
      v50 = sub_22A63EF88(v45, v47);
      sub_22A628B90(v47, 2u);
      sub_22A628B90(v45, 2u);
      if ((v50 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (!v48 && *(float *)&v45 == *(float *)&v47)
  {
LABEL_28:
    v51 = v53[16];
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + v51), *(_QWORD *)(a1 + v51 + 8), *(_BYTE *)(a1 + v51 + 16), *(_QWORD *)(a2 + v51), *(_QWORD *)(a2 + v51 + 8), *(_BYTE *)(a2 + v51 + 16)) & 1) != 0&& *(float *)(a1 + v53[17]) == *(float *)(a2 + v53[17]))
    {
      LOBYTE(v30) = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + v53[18]), *(float32x4_t *)(a2 + v53[18]))), 0xFuLL)));
      return v30 & 1;
    }
LABEL_31:
    LOBYTE(v30) = 0;
  }
  return v30 & 1;
}

uint64_t sub_22A692C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  int *v55;
  uint64_t v56;

  if ((sub_22A6A5C28() & 1) == 0)
    goto LABEL_31;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  if (!sub_22A6931E8())
    goto LABEL_31;
  sub_22A640C10(*(_BYTE *)(a1 + *(int *)(v4 + 40)));
  if ((v5 & 1) == 0)
    goto LABEL_31;
  v6 = *(int *)(v4 + 44);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = *(unsigned int *)(a1 + v6 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + v6 + 20) << 32);
  v10 = *(unsigned __int8 *)(a1 + v6 + 21);
  v11 = a2 + v6;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v55 = (int *)v4;
  v56 = a2;
  v14 = *(unsigned int *)(v11 + 16) | ((unint64_t)*(unsigned __int8 *)(v11 + 20) << 32);
  v15 = *(unsigned __int8 *)(v11 + 21);
  sub_22A628ADC(v7, v8, v9, v10);
  sub_22A628ADC(v12, v13, v14, v15);
  v16 = sub_22A64262C(v7, v8, v9 | (v10 << 40), v12, v13, v14 | (v15 << 40));
  sub_22A628B08(v12, v13, v14, v15);
  sub_22A628B08(v7, v8, v9, v10);
  if ((v16 & 1) == 0)
    goto LABEL_31;
  v17 = v55[12];
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(unsigned int *)(a1 + v17 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + v17 + 12) << 32);
  v20 = *(unsigned __int8 *)(a1 + v17 + 13);
  v21 = v56 + v17;
  v22 = *(_QWORD *)v21;
  v23 = *(unsigned int *)(v21 + 8) | ((unint64_t)*(unsigned __int8 *)(v21 + 12) << 32);
  v24 = *(unsigned __int8 *)(v21 + 13);
  sub_22A628B20(v18, v19, v20);
  sub_22A628B20(v22, v23, v24);
  v25 = sub_22A6428BC(v18, v19 | (v20 << 40), v22, v23 | (v24 << 40));
  sub_22A628B4C(v22, v23, v24);
  sub_22A628B4C(v18, v19, v20);
  if ((v25 & 1) == 0)
    goto LABEL_31;
  v26 = v55[13];
  v27 = *(_QWORD *)(a1 + v26);
  v28 = *(unsigned __int8 *)(a1 + v26 + 8);
  v29 = v56 + v26;
  v30 = *(_QWORD *)v29;
  v31 = *(unsigned __int8 *)(v29 + 8);
  if (v28)
  {
    if (v28 == 1)
    {
      if (v31 != 1)
        goto LABEL_31;
      sub_22A628B64(v30, 1u);
      sub_22A628B64(v27, 1u);
      v32 = sub_22A63F594(v27, v30);
      sub_22A628B90(v30, 1u);
      sub_22A628B90(v27, 1u);
      if ((v32 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v31 != 2)
        goto LABEL_31;
      sub_22A628B64(v30, 2u);
      sub_22A628B64(v27, 2u);
      v33 = sub_22A63F594(v27, v30);
      sub_22A628B90(v30, 2u);
      sub_22A628B90(v27, 2u);
      if ((v33 & 1) == 0)
        goto LABEL_31;
    }
  }
  else
  {
    if (v31)
      goto LABEL_31;
    if (*(float *)&v27 != *(float *)&v30 || *((float *)&v27 + 1) != *((float *)&v30 + 1))
      return v31 & 1;
  }
  v34 = v55[14];
  v35 = a1 + v34;
  v36 = *(_QWORD *)(a1 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 8);
  v38 = *(_QWORD *)(a1 + v34 + 16);
  v39 = v56 + v34;
  v40 = *(_QWORD *)v39;
  v41 = *(_QWORD *)(v39 + 8);
  v42 = *(_QWORD *)(v39 + 16);
  v43 = *(_BYTE *)(v35 + 24);
  v44 = *(_BYTE *)(v39 + 24);
  sub_22A628ADC(v36, v37, v38, v43);
  sub_22A628ADC(v40, v41, v42, v44);
  v45 = sub_22A642A84(v36, v37, v38, v43, v40, v41, v42, v44);
  sub_22A628B08(v40, v41, v42, v44);
  sub_22A628B08(v36, v37, v38, v43);
  if (!v45)
    goto LABEL_31;
  v46 = v55[15];
  v47 = *(_QWORD *)(a1 + v46);
  v31 = *(unsigned __int8 *)(a1 + v46 + 8);
  v48 = v56 + v46;
  v49 = *(_QWORD *)v48;
  v50 = *(unsigned __int8 *)(v48 + 8);
  if (v31)
  {
    if (v31 == 1)
    {
      if (v50 != 1)
        goto LABEL_31;
      sub_22A628B64(v49, 1u);
      sub_22A628B64(v47, 1u);
      v51 = sub_22A63EF88(v47, v49);
      sub_22A628B90(v49, 1u);
      sub_22A628B90(v47, 1u);
      if ((v51 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      if (v50 != 2)
        goto LABEL_31;
      sub_22A628B64(v49, 2u);
      sub_22A628B64(v47, 2u);
      v52 = sub_22A63EF88(v47, v49);
      sub_22A628B90(v49, 2u);
      sub_22A628B90(v47, 2u);
      if ((v52 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (!v50 && *(float *)&v47 == *(float *)&v49)
  {
LABEL_28:
    v53 = v55[16];
    if ((_s10AirPlayKit5ColorO2eeoiySbAC_ACtFZ_0(*(_QWORD *)(a1 + v53), *(_QWORD *)(a1 + v53 + 8), *(_BYTE *)(a1 + v53 + 16), *(_QWORD *)(v56 + v53), *(_QWORD *)(v56 + v53 + 8), *(_BYTE *)(v56 + v53 + 16)) & 1) != 0&& *(float *)(a1 + v55[17]) == *(float *)(v56 + v55[17]))
    {
      LOBYTE(v31) = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + v55[18]), *(float32x4_t *)(v56 + v55[18]))), 0xFuLL)));
      return v31 & 1;
    }
LABEL_31:
    LOBYTE(v31) = 0;
  }
  return v31 & 1;
}

BOOL sub_22A693110(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[4];
  uint64_t v7;
  _OWORD v8[4];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[4];
  _OWORD v13[6];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = a1[1];
  v12[2] = *a1;
  v12[3] = v2;
  v13[0] = a1[2];
  *(_OWORD *)((char *)v13 + 14) = *(_OWORD *)((char *)a1 + 46);
  v3 = a2[1];
  v10 = *a2;
  v11 = v3;
  v12[0] = a2[2];
  *(_OWORD *)((char *)v12 + 14) = *(__int128 *)((char *)a2 + 46);
  sub_22A6A62AC();
  RingContent.hash(into:)((uint64_t)v8);
  sub_22A6A62AC();
  RingContent.hash(into:)((uint64_t)v6);
  v17 = v8[2];
  v18 = v8[3];
  v19 = v9;
  v15 = v8[0];
  v16 = v8[1];
  v4 = sub_22A6A6294();
  v13[4] = v6[2];
  v13[5] = v6[3];
  v14 = v7;
  v13[2] = v6[0];
  v13[3] = v6[1];
  return v4 == sub_22A6A6294();
}

BOOL sub_22A6931E8()
{
  uint64_t v0;

  sub_22A6A62AC();
  TextContent.hash(into:)();
  sub_22A6A62AC();
  TextContent.hash(into:)();
  v0 = sub_22A6A6294();
  return v0 == sub_22A6A6294();
}

BOOL sub_22A6932AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[4];
  uint64_t v16;
  _OWORD v17[4];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  sub_22A6A62AC();
  ImageContent.ContentType.hash(into:)();
  v4 = type metadata accessor for ImageContent(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v8 = *(_QWORD *)v5;
    v7 = *(_QWORD *)(v5 + 8);
    sub_22A6A6270();
    Color.hash(into:)((uint64_t)v17, v8, v7, v6);
  }
  sub_22A6A62AC();
  ImageContent.ContentType.hash(into:)();
  v9 = a2 + *(int *)(v4 + 20);
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 == 255)
  {
    sub_22A6A6270();
  }
  else
  {
    v12 = *(_QWORD *)v9;
    v11 = *(_QWORD *)(v9 + 8);
    sub_22A6A6270();
    Color.hash(into:)((uint64_t)v15, v12, v11, v10);
  }
  v26 = v17[2];
  v27 = v17[3];
  v28 = v18;
  v24 = v17[0];
  v25 = v17[1];
  v13 = sub_22A6A6294();
  v21 = v15[2];
  v22 = v15[3];
  v23 = v16;
  v19 = v15[0];
  v20 = v15[1];
  return v13 == sub_22A6A6294();
}

BOOL sub_22A693400(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  _OWORD v10[4];
  uint64_t v11;
  _OWORD v12[4];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  sub_22A6A62AC();
  sub_22A652388((uint64_t)v12, a1);
  if (!(a2 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  sub_22A6A6264();
  if (a2 >> 30 == 1)
  {
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A627C();
  }
  sub_22A6A62AC();
  sub_22A652388((uint64_t)v10, a3);
  if (!(a4 >> 30))
  {
    sub_22A6A6264();
    __asm { BR              X10 }
  }
  sub_22A6A6264();
  if (a4 >> 30 == 1)
  {
    sub_22A6A5DE4();
    swift_bridgeObjectRelease();
    sub_22A6A627C();
  }
  v21 = v12[2];
  v22 = v12[3];
  v23 = v13;
  v19 = v12[0];
  v20 = v12[1];
  v8 = sub_22A6A6294();
  v16 = v10[2];
  v17 = v10[3];
  v18 = v11;
  v14 = v10[0];
  v15 = v10[1];
  return v8 == sub_22A6A6294();
}

void sub_22A693664()
{
  JUMPOUT(0x22A69347CLL);
}

void sub_22A693678()
{
  JUMPOUT(0x22A69347CLL);
}

void sub_22A69368C()
{
  JUMPOUT(0x22A69347CLL);
}

void sub_22A6936AC()
{
  JUMPOUT(0x22A69347CLL);
}

void sub_22A6936CC()
{
  JUMPOUT(0x22A69347CLL);
}

void sub_22A6936E8()
{
  JUMPOUT(0x22A693560);
}

void sub_22A6936FC()
{
  JUMPOUT(0x22A693560);
}

void sub_22A693710()
{
  JUMPOUT(0x22A693560);
}

void sub_22A693730()
{
  JUMPOUT(0x22A693560);
}

void sub_22A693750()
{
  JUMPOUT(0x22A693560);
}

uint64_t sub_22A69376C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a7;
  v37 = a8;
  v33 = a6;
  v34 = a2;
  v35 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22A6A5C40();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a4 + 16);
  if (v19)
  {
    v32 = a1;
    v39 = MEMORY[0x24BEE4AF8];
    sub_22A6571AC(0, v19, 0);
    v20 = *(unsigned __int8 *)(v12 + 80);
    v31 = a4;
    v21 = a4 + ((v20 + 32) & ~v20);
    v38 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_22A62F9B8(v21, (uint64_t)v14, a5);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v14, v15);
      sub_22A629860((uint64_t)v14, a5);
      v22 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A6571AC(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v39;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_22A6571AC(v23 > 1, v24 + 1, 1);
        v22 = v39;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      v25 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
      v25(v22+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v24, v18, v15);
      v39 = v22;
      v21 += v38;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a1 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
    v22 = MEMORY[0x24BEE4AF8];
  }
  v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v33) + 36);
  v27 = v36;
  v28 = v37;
  v29 = v37 + v26;
  *(_BYTE *)v29 = v34;
  *(_BYTE *)(v29 + 1) = v35;
  *(_QWORD *)(v29 + 8) = v22;
  __swift_instantiateConcreteTypeFromMangledName(v27);
  swift_storeEnumTagMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v25)(v28, a1, v15);
}

uint64_t sub_22A6939BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_22A6A5EF8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_22A6A5EEC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_22A629860(a1, &qword_255AFECC0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22A6A5EBC();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_22A693AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_22A62F0EC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

uint64_t sub_22A693C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22A6A5EF8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_22A629860((uint64_t)v4, &qword_255AFECC0);
  }
  else
  {
    sub_22A6A5EEC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_22A6A5EBC();
      v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_22A693E18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A62E6B0;
  return sub_22A693E60();
}

uint64_t sub_22A693E60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A693EBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(os_unfair_lock_s **)(v1 + 136);
  v0[4] = v3;
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_22A69504C(v4, v1, v2);
  os_unfair_lock_unlock(v5);
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_22A693F7C;
  return sub_22A694318(v0[3]);
}

uint64_t sub_22A693F7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A693FE0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(os_unfair_lock_s **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v1 + 17;
  v5 = (uint64_t)&v1[4];
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v2;
  os_unfair_lock_lock(v4);
  sub_22A6955B0(v5, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
  os_unfair_lock_unlock(v4);
  swift_task_dealloc();
  sub_22A6940E4(v3);
  sub_22A629860(v2, &qword_255AFEEE0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A694098()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_22A6940E4(*(_QWORD *)(v0 + 16));
  sub_22A629860(v1, &qword_255AFEEE0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22A6940E4(uint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(a1 + 136);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 17;
  os_unfair_lock_lock(v1 + 17);
  sub_22A6957C0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_22A694318(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[42] = a1;
  v2[43] = v1;
  v2[44] = type metadata accessor for RenderTransactionAction();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v2[48] = swift_task_alloc();
  v2[49] = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v3 = sub_22A6A5C10();
  v2[53] = v3;
  v2[54] = *(_QWORD *)(v3 - 8);
  v2[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A694420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56[2];

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 424);
  sub_22A6A5C04();
  sub_22A6A5BF8();
  v5 = v4;
  *(_QWORD *)(v0 + 448) = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_255AFE870 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = sub_22A6A5CAC();
  *(_QWORD *)(v0 + 456) = __swift_project_value_buffer(v8, (uint64_t)qword_255B08F30);
  sub_22A62F9B8(v7, v6, &qword_255AFEEE0);
  v9 = sub_22A6A5C94();
  v10 = sub_22A6A5F70();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 416);
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 408);
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v56[0] = v15;
    *(_DWORD *)v14 = 134218242;
    *(_QWORD *)(v0 + 320) = v5;
    sub_22A6A6018();
    *(_WORD *)(v14 + 12) = 2080;
    sub_22A62F9B8(v12, v13, &qword_255AFEEE0);
    v16 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 328) = sub_22A62D174(v16, v17, v56);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    sub_22A629860(v12, &qword_255AFEEE0);
    _os_log_impl(&dword_22A61E000, v9, v10, "[%f] Apply Root -> %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v15, -1, -1);
    MEMORY[0x22E2DF3F8](v14, -1, -1);
  }
  else
  {
    sub_22A629860(*(_QWORD *)(v0 + 416), &qword_255AFEEE0);
  }

  v18 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 344) + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode;
  swift_beginAccess();
  sub_22A62F9B8(v20, v18, (uint64_t *)&unk_255B00CE0);
  v22 = sub_22A690BE0(v18, v19);
  v23 = *(_QWORD *)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 336);
  sub_22A629860(*(_QWORD *)(v0 + 384), (uint64_t *)&unk_255B00CE0);
  sub_22A62F9B8(v24, v23, &qword_255AFEEE0);
  swift_bridgeObjectRetain();
  v25 = sub_22A6A5C94();
  v26 = sub_22A6A5F70();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(_QWORD *)(v0 + 400);
  if (v27)
  {
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v56[0] = v30;
    *(_DWORD *)v29 = 134218498;
    *(_QWORD *)(v0 + 296) = v5;
    sub_22A6A6018();
    *(_WORD *)(v29 + 12) = 2048;
    *(_QWORD *)(v0 + 304) = *(_QWORD *)(v22 + 16);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2080;
    sub_22A6A5C40();
    sub_22A6354A0(&qword_255B01078, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v31 = sub_22A6A61B0();
    *(_QWORD *)(v0 + 312) = sub_22A62D174(v31, v32, v56);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    sub_22A629860(v28, &qword_255AFEEE0);
    _os_log_impl(&dword_22A61E000, v25, v26, "[%f] %ld actions created for %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v30, -1, -1);
    MEMORY[0x22E2DF3F8](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_22A629860(v28, &qword_255AFEEE0);
  }

  v33 = *(_QWORD *)(v0 + 376);
  v34 = *(_QWORD *)(v0 + 352);
  _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0();
  v35 = *(int *)(v34 + 20);
  *(_DWORD *)(v0 + 480) = v35;
  *(_QWORD *)(v33 + v35) = v22;
  if (*(_QWORD *)(v22 + 16))
  {
    sub_22A6354E0(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    v36 = sub_22A6A5C94();
    v37 = sub_22A6A5F70();
    v38 = os_log_type_enabled(v36, v37);
    v39 = *(_QWORD *)(v0 + 368);
    if (v38)
    {
      v40 = swift_slowAlloc();
      *(_DWORD *)v40 = 134218240;
      *(_QWORD *)(v0 + 272) = v5;
      sub_22A6A6018();
      *(_WORD *)(v40 + 12) = 2048;
      v41 = *(_QWORD *)(*(_QWORD *)(v39 + *(int *)(v34 + 20)) + 16);
      sub_22A633AE8(v39, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
      *(_QWORD *)(v0 + 280) = v41;
      sub_22A6A6018();
      _os_log_impl(&dword_22A61E000, v36, v37, "[%f] Attempting to send %ld display tree actions", (uint8_t *)v40, 0x16u);
      MEMORY[0x22E2DF3F8](v40, -1, -1);
    }
    else
    {
      sub_22A633AE8(*(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    }
    v47 = *(_QWORD *)(v0 + 376);
    v48 = *(_QWORD **)(v0 + 344);
    v49 = *(_QWORD *)(v0 + 352);

    v50 = v48 + 2;
    v51 = v48[5];
    v52 = v48[6];
    __swift_project_boxed_opaque_existential_1(v50, v51);
    *(_QWORD *)(v0 + 136) = v49;
    *(_QWORD *)(v0 + 144) = sub_22A6354A0((unint64_t *)&unk_255B01060, (uint64_t (*)(uint64_t))type metadata accessor for RenderTransactionAction, (uint64_t)&unk_22A6AA6C0);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 112));
    sub_22A6354E0(v47, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v52 + 16) + *(_QWORD *)(v52 + 16));
    v54 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 464) = v54;
    *v54 = v0;
    v54[1] = sub_22A694BD8;
    return v55(v0 + 112, v51, v52);
  }
  else
  {
    v42 = sub_22A6A5C94();
    v43 = sub_22A6A5F70();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v44 = 134217984;
      *(_QWORD *)(v0 + 288) = v5;
      sub_22A6A6018();
      _os_log_impl(&dword_22A61E000, v42, v43, "[%f] No actions for transaction!", v44, 0xCu);
      MEMORY[0x22E2DF3F8](v44, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 376);

    sub_22A696E28();
    swift_allocError();
    *v46 = 3;
    swift_willThrow();
    sub_22A633AE8(v45, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A694BD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 472) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 112);
  return swift_task_switch();
}

uint64_t sub_22A694C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_22A62F9B8(*(_QWORD *)(v0 + 344) + 56, v0 + 152, &qword_255AFECB8);
  v1 = *(_QWORD *)(v0 + 176);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 376);
    v3 = *(_QWORD *)(v0 + 352);
    v4 = *(_QWORD *)(v0 + 184);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 216) = v3;
    *(_QWORD *)(v0 + 224) = &off_24F46F4D8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 192));
    sub_22A6354E0(v2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v0 + 192, v1, v4);
    __swift_destroy_boxed_opaque_existential_1(v0 + 192);
    __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  }
  else
  {
    sub_22A629860(v0 + 152, &qword_255AFECB8);
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v7 = (void *)sub_22A6A5D60();
  v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);

  if (v8)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(int *)(v0 + 480));
    v10 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      v11 = 0;
      v12 = v9 + 32;
      do
      {
        sub_22A628A98(v12, v0 + 24);
        *(_QWORD *)(v0 + 64) = v11;
        sub_22A628A38((__int128 *)(v0 + 24), v0 + 72);
        sub_22A6953B4(v11, v0 + 72);
        sub_22A629860(v0 + 64, &qword_255B01070);
        v12 += 40;
        ++v11;
      }
      while (v10 != v11);
    }
    swift_bridgeObjectRelease();
  }
  sub_22A6354E0(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  v13 = sub_22A6A5C94();
  v14 = sub_22A6A5F70();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 360);
    v18 = swift_slowAlloc();
    *(_DWORD *)v18 = 134218240;
    *(_QWORD *)(v0 + 264) = v15;
    sub_22A6A6018();
    *(_WORD *)(v18 + 12) = 2048;
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + *(int *)(v17 + 20)) + 16);
    sub_22A633AE8(v16, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
    *(_QWORD *)(v0 + 256) = v19;
    sub_22A6A6018();
    _os_log_impl(&dword_22A61E000, v13, v14, "[%f] Success sending %ld display tree actions", (uint8_t *)v18, 0x16u);
    MEMORY[0x22E2DF3F8](v18, -1, -1);
  }
  else
  {
    sub_22A633AE8(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  }
  v20 = *(_QWORD *)(v0 + 376);

  sub_22A633AE8(v20, (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A694F9C()
{
  uint64_t v0;

  sub_22A633AE8(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for RenderTransactionAction);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A69504C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32[2];
  uint64_t v33;
  char v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A62EB4C(a1, (uint64_t)v32);
  if (v34)
  {
    sub_22A62EB88((uint64_t)v32);
    sub_22A696E28();
    swift_allocError();
    *v17 = 2;
    return swift_willThrow();
  }
  v38 = v3;
  v19 = v33;
  sub_22A628A38(v32, (uint64_t)v35);
  if (*(_BYTE *)(a2 + 144) != 1)
    goto LABEL_6;
  v29 = a3;
  v30 = a2;
  v31 = v19;
  v20 = v36;
  v21 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_22A629860((uint64_t)v12, (uint64_t *)&unk_255B00CE0);
LABEL_6:
    sub_22A696E28();
    swift_allocError();
    *v22 = 3;
    swift_willThrow();
    goto LABEL_7;
  }
  sub_22A62981C((uint64_t)v12, (uint64_t)v16, &qword_255AFEEE0);
  v23 = *(_QWORD *)(v30 + 40);
  v24 = *(_QWORD *)(v30 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v30 + 16), v23);
  v25 = v38;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  if (!v25)
  {
    sub_22A62EB88(a1);
    if (qword_255AFE870 != -1)
      swift_once();
    v27 = sub_22A6A5CAC();
    __swift_project_value_buffer(v27, (uint64_t)qword_255B08F30);
    sub_22A629A38(0xD00000000000006ALL, 0x800000022A6AD990, 0xD000000000000018, 0x800000022A6ADA60);
    *(_BYTE *)(v30 + 144) = 0;
    sub_22A628A98((uint64_t)v35, a1);
    *(_QWORD *)(a1 + 40) = v31;
    *(_BYTE *)(a1 + 48) = 1;
    sub_22A62981C((uint64_t)v16, v29, &qword_255AFEEE0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  v26 = v30 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode;
  swift_beginAccess();
  sub_22A696DA8((uint64_t)v10, v26);
  swift_endAccess();
  swift_willThrow();
  sub_22A629860((uint64_t)v16, &qword_255AFEEE0);
LABEL_7:
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

void sub_22A6953B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11[5];
  uint64_t v12;
  _BYTE v13[40];

  if (qword_255AFE870 != -1)
    swift_once();
  v4 = sub_22A6A5CAC();
  __swift_project_value_buffer(v4, (uint64_t)qword_255B08F30);
  sub_22A628A98(a2, (uint64_t)v13);
  v5 = sub_22A6A5C94();
  v6 = sub_22A6A5F70();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 134218498;
    sub_22A6A6018();
    *(_WORD *)(v7 + 12) = 2048;
    v11[0] = a1;
    sub_22A6A6018();
    *(_WORD *)(v7 + 22) = 2080;
    sub_22A628A98((uint64_t)v13, (uint64_t)v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B01080);
    v9 = sub_22A6A5DC0();
    v11[0] = sub_22A62D174(v9, v10, &v12);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    _os_log_impl(&dword_22A61E000, v5, v6, "[%f] %ld - %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v8, -1, -1);
    MEMORY[0x22E2DF3F8](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }

}

uint64_t sub_22A6955B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(uint64_t);
  uint64_t result;
  void (*v14)(uint64_t);
  _BYTE *v15;
  _BYTE v17[56];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_22A62EB4C(a1, (uint64_t)v17);
  if (v17[48] == 1)
  {
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    if (qword_255AFE870 != -1)
      swift_once();
    v9 = sub_22A6A5CAC();
    __swift_project_value_buffer(v9, (uint64_t)qword_255B08F30);
    sub_22A629A38(0xD00000000000006ALL, 0x800000022A6AD990, 0xD000000000000016, 0x800000022A6ADA40);
    sub_22A62F9B8(a3, (uint64_t)v8, &qword_255AFEEE0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
    v11 = a2 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode;
    swift_beginAccess();
    sub_22A696DA8((uint64_t)v8, v11);
    swift_endAccess();
    v12 = (void (**)(uint64_t))(a2 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
    result = swift_beginAccess();
    v14 = *v12;
    if (*v12)
    {
      swift_retain();
      v14(a3);
      return sub_22A62EA00((uint64_t)v14);
    }
  }
  else
  {
    sub_22A62EB88((uint64_t)v17);
    sub_22A696E28();
    swift_allocError();
    *v15 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22A6957C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE *v5;
  __int128 v6[2];
  uint64_t v7;
  char v8;
  __int128 v9[2];

  sub_22A62EB4C(a1, (uint64_t)v6);
  if (v8 == 1)
  {
    sub_22A62EB88(a1);
    v2 = v7;
    sub_22A628A38(v6, (uint64_t)v9);
    if (qword_255AFE870 != -1)
      swift_once();
    v3 = sub_22A6A5CAC();
    __swift_project_value_buffer(v3, (uint64_t)qword_255B08F30);
    sub_22A629A38(0xD00000000000006ALL, 0x800000022A6AD990, 0xD000000000000018, 0x800000022A6ADA20);
    result = sub_22A628A38(v9, a1);
    *(_QWORD *)(a1 + 40) = v2;
    *(_BYTE *)(a1 + 48) = 0;
  }
  else
  {
    sub_22A62EB88((uint64_t)v6);
    sub_22A696E28();
    swift_allocError();
    *v5 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22A6958E4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_22A629860(v0 + 56, &qword_255AFECB8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  sub_22A629860(v0 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode, (uint64_t *)&unk_255B00CE0);
  sub_22A62EA00(*(_QWORD *)(v0 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated));
  return swift_deallocClassInstance();
}

uint64_t sub_22A695958()
{
  return type metadata accessor for AirPlayOverlayDisplayTree();
}

uint64_t type metadata accessor for AirPlayOverlayDisplayTree()
{
  uint64_t result;

  result = qword_255B00F78;
  if (!qword_255B00F78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22A69599C()
{
  unint64_t v0;

  sub_22A695A40();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22A695A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B01460[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255AFEEE0);
    v0 = sub_22A6A6000();
    if (!v1)
      atomic_store(v0, qword_255B01460);
  }
}

uint64_t destroy for AirPlayOverlayDisplayTree.State(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 48);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 <= 1)
  {
    __swift_destroy_boxed_opaque_existential_1(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AirPlayOverlayDisplayTree.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = 1;
    swift_unknownObjectRetain();
  }
  else if (v4)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = 0;
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AirPlayOverlayDisplayTree.State(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_unknownObjectRelease();
    }
    v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = 1;
      swift_unknownObjectRetain();
    }
    else if (v5)
    {
      v8 = *a2;
      v9 = a2[1];
      v10 = a2[2];
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)a1 = v8;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = 0;
      swift_unknownObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AirPlayOverlayDisplayTree.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_unknownObjectRelease();
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      if (!v5)
      {
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      }
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      LOBYTE(v5) = *(_BYTE *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPlayOverlayDisplayTree.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayDisplayTree.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A695E18(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_22A695E34(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayDisplayTree.State()
{
  return &type metadata for AirPlayOverlayDisplayTree.State;
}

uint64_t sub_22A695E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22A695ECC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[4];
  v2 = v0[6];
  v3 = *(os_unfair_lock_s **)(v2 + 136);
  v0[8] = v3;
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = (uint64_t)&v3[4];
  v6 = v3 + 17;
  os_unfair_lock_lock(v3 + 17);
  sub_22A6967FC((uint64_t)&v3[4], *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
  os_unfair_lock_unlock(v3 + 17);
  swift_task_dealloc();
  if (qword_255AFE870 != -1)
    swift_once();
  v8 = v0[6];
  v7 = v0[7];
  v9 = sub_22A6A5CAC();
  v0[9] = __swift_project_value_buffer(v9, (uint64_t)qword_255B08F30);
  sub_22A629A38(0xD00000000000006ALL, 0x800000022A6AD990, 0xD00000000000001FLL, 0x800000022A6ADA00);
  os_unfair_lock_lock(v6);
  sub_22A69504C(v5, v8, v7);
  os_unfair_lock_unlock(v6);
  v10 = (_QWORD *)swift_task_alloc();
  v0[10] = v10;
  *v10 = v0;
  v10[1] = sub_22A696260;
  return sub_22A694318(v0[7]);
}

uint64_t sub_22A696260()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22A6962C4()
{
  uint64_t v0;
  void *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 88);
  v2 = *(os_unfair_lock_s **)(v0 + 64);
  v3 = v2 + 17;
  v4 = (uint64_t)&v2[4];
  v5 = swift_task_alloc();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 48);
  os_unfair_lock_lock(v3);
  sub_22A6955B0(v4, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  v6 = *(os_unfair_lock_s **)(v0 + 64);
  if (v1)
  {
    v7 = *(_QWORD *)(v0 + 56);
    os_unfair_lock_unlock(v6 + 17);
    swift_task_dealloc();
    sub_22A629860(v7, &qword_255AFEEE0);
    v11 = v1;
    v12 = v1;
    v13 = sub_22A6A5C94();
    v14 = sub_22A6A5F64();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v27 = v16;
      *(_DWORD *)v15 = 136446210;
      *(_QWORD *)(v0 + 16) = v1;
      v17 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
      v18 = sub_22A6A5DC0();
      *(_QWORD *)(v0 + 24) = sub_22A62D174(v18, v19, &v27);
      sub_22A6A6018();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22A61E000, v13, v14, "Failed to send initial display tree: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2DF3F8](v16, -1, -1);
      MEMORY[0x22E2DF3F8](v15, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v8 = v6 + 17;
    v9 = (uint64_t)&v6[4];
    os_unfair_lock_unlock(v6 + 17);
    swift_task_dealloc();
    os_unfair_lock_lock(v8);
    sub_22A6957C0(v9);
    v10 = *(_QWORD *)(v0 + 56);
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v0 + 64) + 68));
    sub_22A629860(v10, &qword_255AFEEE0);
  }
  v20 = *(os_unfair_lock_s **)(v0 + 64);
  v26 = *(_OWORD *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 32);
  v22 = v20 + 17;
  v23 = (uint64_t)&v20[4];
  v24 = swift_task_alloc();
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = v21;
  os_unfair_lock_lock(v22);
  sub_22A69691C(v23, *(_QWORD *)(v24 + 16), *(_QWORD **)(v24 + 24), *(_QWORD *)(v24 + 32));
  os_unfair_lock_unlock(v22);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A6965B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;

  sub_22A629860(*(_QWORD *)(v0 + 56), &qword_255AFEEE0);
  v1 = *(void **)(v0 + 88);
  v2 = v1;
  v3 = v1;
  v4 = sub_22A6A5C94();
  v5 = sub_22A6A5F64();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v18 = v7;
    *(_QWORD *)(v0 + 16) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFECE0);
    v9 = sub_22A6A5DC0();
    *(_QWORD *)(v0 + 24) = sub_22A62D174(v9, v10, &v18);
    sub_22A6A6018();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22A61E000, v4, v5, "Failed to send initial display tree: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v7, -1, -1);
    MEMORY[0x22E2DF3F8](v6, -1, -1);

  }
  else
  {

  }
  v11 = *(os_unfair_lock_s **)(v0 + 64);
  v17 = *(_OWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = v11 + 17;
  v14 = (uint64_t)&v11[4];
  v15 = swift_task_alloc();
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = v12;
  os_unfair_lock_lock(v13);
  sub_22A69691C(v14, *(_QWORD *)(v15 + 16), *(_QWORD **)(v15 + 24), *(_QWORD *)(v15 + 32));
  os_unfair_lock_unlock(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A6967FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int8x16_t v6;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  int8x16_t v13;
  int8x16_t v14;
  char v15;

  sub_22A62EB4C(a1, (uint64_t)v12);
  if (v15 == 2
    && (v6 = vorrq_s8(v13, v14),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v12[1] | v12[0])))
  {
    sub_22A62EB88(a1);
    sub_22A62EB88((uint64_t)v12);
    v9 = *(_QWORD *)(a2 + 120);
    v10 = *(_QWORD *)(a2 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 96), v9);
    v11 = DispatchSourceTimerProviding.makeTimer(fireInterval:handler:)((uint64_t)nullsub_1, 0, v9, v10, 0.0);
    result = sub_22A628A98(a3, a1);
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a2 + 144) = 1;
  }
  else
  {
    sub_22A62EB88((uint64_t)v12);
    sub_22A696E28();
    swift_allocError();
    *v7 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22A69691C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_22A62EB88(a1);
  v8 = 1.0 / (double)a2;
  v9 = a3[15];
  v10 = a3[16];
  __swift_project_boxed_opaque_existential_1(a3 + 12, v9);
  v11 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v12 = DispatchSourceTimerProviding.makeRepeatingTimer(fireInterval:handler:)((uint64_t)sub_22A699A9C, v11, v9, v10, v8);
  swift_release_n();
  result = sub_22A628A98(a4, a1);
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_22A696A00()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22A693C58();
    return swift_release();
  }
  return result;
}

uint64_t sub_22A696A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a2 + 144) = 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a2 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_rootNode;
  swift_beginAccess();
  sub_22A696DA8((uint64_t)v5, v7);
  return swift_endAccess();
}

uint64_t sub_22A696B24()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
  swift_beginAccess();
  v2 = *v1;
  sub_22A62A1BC(*v1);
  return v2;
}

uint64_t sub_22A696B80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(*v2 + OBJC_IVAR____TtC10AirPlayKit25AirPlayOverlayDisplayTree_onRootNodeUpdated);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_22A62EA00(v6);
}

uint64_t (*sub_22A696BE0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22A696C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62ED7C;
  return sub_22A695E6C(a1, a2);
}

void sub_22A696C88()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 136);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 17;
  os_unfair_lock_lock(v1 + 17);
  sub_22A696DF0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_22A696CCC(uint64_t a1, uint64_t a2)
{
  sub_22A696D3C(a1, a2, (void (*)(os_unfair_lock_s *))sub_22A696D90);
}

uint64_t sub_22A696CD8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _BYTE v4[56];

  result = sub_22A62EB4C(a1, (uint64_t)v4);
  if (v4[48] < 2u)
  {
    swift_unknownObjectRelease();
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    *(_BYTE *)(a2 + 144) = 1;
  }
  return result;
}

void sub_22A696D30(uint64_t a1, uint64_t a2)
{
  sub_22A696D3C(a1, a2, (void (*)(os_unfair_lock_s *))sub_22A699B38);
}

void sub_22A696D3C(uint64_t a1, uint64_t a2, void (*a3)(os_unfair_lock_s *))
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)v3 + 136);
  v6 = v5 + 4;
  v7 = v5 + 17;
  os_unfair_lock_lock(v5 + 17);
  a3(v6);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_22A696D90(uint64_t a1)
{
  uint64_t v1;

  return sub_22A696A54(a1, v1);
}

uint64_t sub_22A696DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_22A696DF0(uint64_t a1)
{
  uint64_t v1;
  double result;

  sub_22A62EB88(a1);
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 2;
  *(_BYTE *)(v1 + 144) = 0;
  return result;
}

unint64_t sub_22A696E28()
{
  unint64_t result;

  result = qword_255B01058;
  if (!qword_255B01058)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayDisplayTreeError, &type metadata for AirPlayOverlayDisplayTreeError);
    atomic_store(result, (unint64_t *)&qword_255B01058);
  }
  return result;
}

uint64_t sub_22A696E6C(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10[2];

  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = a3(v7);
  v8 = *(_QWORD *)(v7 + 16);
  v10[0] = v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  result = sub_22A696F00(v10, a2);
  *a1 = v7;
  return result;
}

uint64_t sub_22A696F00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  double v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  double v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  BOOL v136;
  uint64_t v137;
  char v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t *v201;

  v197 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v189 = *(_QWORD *)(v197 - 8);
  v5 = MEMORY[0x24BDAC7A8](v197);
  v182 = (uint64_t)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v198 = (uint64_t)&v172 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v172 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v172 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v172 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v188 = (char *)&v172 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v178 = (char *)&v172 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v172 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v186 = (uint64_t)&v172 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v185 = (uint64_t)&v172 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v177 = (uint64_t)&v172 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v176 = (uint64_t)&v172 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v180 = (uint64_t)&v172 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v179 = (uint64_t)&v172 - v35;
  v201 = a1;
  v36 = a1[1];
  result = sub_22A6A61A4();
  if (result >= v36)
  {
    if (v36 < 0)
      goto LABEL_151;
    if (v36)
      return sub_22A6484D4(0, v36, 1, v201, a2);
    return result;
  }
  if (v36 >= 0)
    v38 = v36;
  else
    v38 = v36 + 1;
  if (v36 < -1)
    goto LABEL_159;
  v192 = v14;
  v193 = v11;
  v191 = v17;
  v174 = result;
  v190 = v2;
  if (v36 < 2)
  {
    v43 = (uint64_t)v188;
    v44 = MEMORY[0x24BEE4AF8];
    v187 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
    v42 = a2;
    if (v36 != 1)
    {
      v47 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v46 = (char *)MEMORY[0x24BEE4AF8];
LABEL_115:
      v173 = v44;
      if (v47 >= 2)
      {
        v163 = *v201;
        do
        {
          v164 = v47 - 2;
          if (v47 < 2)
            goto LABEL_146;
          if (!v163)
            goto LABEL_158;
          v165 = v46;
          v166 = v46 + 32;
          v167 = *(_QWORD *)&v46[16 * v164 + 32];
          v168 = *(_QWORD *)&v46[16 * v47 + 24];
          v169 = v190;
          sub_22A697C70(v163 + *(_QWORD *)(v189 + 72) * v167, v163 + *(_QWORD *)(v189 + 72) * *(_QWORD *)&v166[16 * v47 - 16], v163 + *(_QWORD *)(v189 + 72) * v168, v187, v42);
          v190 = v169;
          if (v169)
            goto LABEL_127;
          if (v168 < v167)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v165 = sub_22A6986AC((uint64_t)v165);
          if (v164 >= *((_QWORD *)v165 + 2))
            goto LABEL_148;
          v170 = &v165[16 * v164 + 32];
          *(_QWORD *)v170 = v167;
          *((_QWORD *)v170 + 1) = v168;
          v171 = *((_QWORD *)v165 + 2);
          if (v47 > v171)
            goto LABEL_149;
          v46 = v165;
          memmove(&v165[16 * v47 + 16], &v165[16 * v47 + 32], 16 * (v171 - v47));
          *((_QWORD *)v165 + 2) = v171 - 1;
          v47 = v171 - 1;
        }
        while (v171 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v173 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v173 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v39 = v38 >> 1;
    v40 = sub_22A6A5E8C();
    *(_QWORD *)(v40 + 16) = v39;
    v41 = *(unsigned __int8 *)(v189 + 80);
    v173 = v40;
    v187 = v40 + ((v41 + 32) & ~v41);
    v42 = a2;
    v43 = (uint64_t)v188;
  }
  v45 = 0;
  v46 = (char *)MEMORY[0x24BEE4AF8];
  v184 = v24;
  while (1)
  {
    v199 = v36;
    v48 = v45;
    v49 = v45 + 1;
    if (v45 + 1 >= v36)
    {
      v66 = v45 + 1;
    }
    else
    {
      v50 = *v201;
      v51 = *(char **)(v189 + 72);
      v52 = v179;
      sub_22A62F9B8(*v201 + (_QWORD)v51 * v49, v179, v42);
      v194 = v50;
      v200 = v51;
      v53 = v50 + (_QWORD)v51 * v48;
      v54 = v180;
      sub_22A62F9B8(v53, v180, v42);
      v55 = v197;
      v56 = *(int *)(v197 + 40);
      v57 = *(double *)(v52 + v56);
      v58 = *(double *)(v54 + v56);
      v59 = v52;
      v60 = v176;
      sub_22A62F9B8(v59, v176, v42);
      v61 = v54;
      v62 = v177;
      sub_22A62F9B8(v61, v177, v42);
      v63 = (uint64_t)v178;
      if (v57 >= v58)
      {
        sub_22A629860(v62, v42);
        sub_22A629860(v60, v42);
        LODWORD(v196) = 0;
      }
      else
      {
        v64 = *(double *)(v60 + *(int *)(v55 + 36));
        sub_22A629860(v60, v42);
        v65 = *(double *)(v62 + *(int *)(v55 + 36));
        sub_22A629860(v62, v42);
        LODWORD(v196) = v64 < v65;
      }
      sub_22A629860(v180, v42);
      sub_22A629860(v179, v42);
      v66 = v48 + 2;
      if (v48 + 2 < v199)
      {
        v183 = v48;
        v175 = v46;
        v195 = (_QWORD)v200 * v49;
        v68 = v194;
        v69 = v66;
        v70 = (_QWORD)v200 * v66;
        while (1)
        {
          v71 = v185;
          sub_22A62F9B8(v68 + v70, v185, v42);
          v72 = v186;
          sub_22A62F9B8(v68 + v195, v186, v42);
          v73 = v197;
          v74 = *(int *)(v197 + 40);
          v75 = *(double *)(v71 + v74);
          v76 = *(double *)(v72 + v74);
          sub_22A62F9B8(v71, (uint64_t)v24, v42);
          sub_22A62F9B8(v72, v63, v42);
          if (v75 >= v76)
          {
            sub_22A629860(v63, v42);
            sub_22A629860((uint64_t)v24, v42);
            v79 = 0;
          }
          else
          {
            v77 = *(double *)&v24[*(int *)(v73 + 36)];
            sub_22A629860((uint64_t)v24, v42);
            v78 = *(double *)(v63 + *(int *)(v73 + 36));
            sub_22A629860(v63, v42);
            v79 = v77 < v78;
          }
          sub_22A629860(v186, v42);
          sub_22A629860(v185, v42);
          if ((_DWORD)v196 != v79)
            break;
          v68 += (uint64_t)v200;
          if (v199 == ++v69)
          {
            v66 = v199;
            v46 = v175;
            goto LABEL_31;
          }
        }
        v46 = v175;
        v66 = v69;
LABEL_31:
        v48 = v183;
      }
      v67 = v197;
      if (!(_DWORD)v196)
        goto LABEL_45;
      if (v66 < v48)
        goto LABEL_152;
      if (v48 >= v66)
      {
LABEL_45:
        v43 = (uint64_t)v188;
        goto LABEL_46;
      }
      v175 = v46;
      v80 = 0;
      v81 = (_QWORD)v200 * (v66 - 1);
      v82 = v48;
      v83 = v66 * (_QWORD)v200;
      v84 = v82;
      v183 = v82;
      v85 = v82 * (_QWORD)v200;
      do
      {
        if (v84 != v66 + v80 - 1)
        {
          v87 = v194;
          if (!v194)
            goto LABEL_157;
          v88 = v194 + v85;
          v196 = v194 + v81;
          sub_22A62981C(v194 + v85, v182, v42);
          if (v85 < v81 || v88 >= v87 + v83)
          {
            v86 = v196;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v86 = v196;
            if (v85 != v81)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_22A62981C(v182, v86, v42);
        }
        ++v84;
        --v80;
        v81 -= (uint64_t)v200;
        v83 -= (uint64_t)v200;
        v85 += (uint64_t)v200;
      }
      while (v84 < v66 + v80);
      v46 = v175;
      v43 = (uint64_t)v188;
      v48 = v183;
      v24 = v184;
    }
    v67 = v197;
LABEL_46:
    if (v66 < v199)
    {
      if (__OFSUB__(v66, v48))
        goto LABEL_150;
      if (v66 - v48 < v174)
        break;
    }
LABEL_66:
    if (v66 < v48)
      goto LABEL_145;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v196 = v66;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v46 = sub_22A6982F4(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
    v111 = *((_QWORD *)v46 + 2);
    v110 = *((_QWORD *)v46 + 3);
    v47 = v111 + 1;
    if (v111 >= v110 >> 1)
      v46 = sub_22A6982F4((char *)(v110 > 1), v111 + 1, 1, v46);
    *((_QWORD *)v46 + 2) = v47;
    v200 = v46 + 32;
    v112 = &v46[16 * v111 + 32];
    v113 = v196;
    *(_QWORD *)v112 = v48;
    *((_QWORD *)v112 + 1) = v113;
    if (v111)
    {
      v114 = v200;
      while (1)
      {
        v115 = v47 - 1;
        if (v47 >= 4)
        {
          v120 = &v114[16 * v47];
          v121 = *((_QWORD *)v120 - 8);
          v122 = *((_QWORD *)v120 - 7);
          v126 = __OFSUB__(v122, v121);
          v123 = v122 - v121;
          if (v126)
            goto LABEL_134;
          v125 = *((_QWORD *)v120 - 6);
          v124 = *((_QWORD *)v120 - 5);
          v126 = __OFSUB__(v124, v125);
          v118 = v124 - v125;
          v119 = v126;
          if (v126)
            goto LABEL_135;
          v127 = v47 - 2;
          v128 = &v114[16 * v47 - 32];
          v130 = *(_QWORD *)v128;
          v129 = *((_QWORD *)v128 + 1);
          v126 = __OFSUB__(v129, v130);
          v131 = v129 - v130;
          if (v126)
            goto LABEL_137;
          v126 = __OFADD__(v118, v131);
          v132 = v118 + v131;
          if (v126)
            goto LABEL_140;
          if (v132 >= v123)
          {
            v150 = &v114[16 * v115];
            v152 = *(_QWORD *)v150;
            v151 = *((_QWORD *)v150 + 1);
            v126 = __OFSUB__(v151, v152);
            v153 = v151 - v152;
            if (v126)
              goto LABEL_144;
            v143 = v118 < v153;
            goto LABEL_104;
          }
        }
        else
        {
          if (v47 != 3)
          {
            v144 = *((_QWORD *)v46 + 4);
            v145 = *((_QWORD *)v46 + 5);
            v126 = __OFSUB__(v145, v144);
            v137 = v145 - v144;
            v138 = v126;
            goto LABEL_98;
          }
          v117 = *((_QWORD *)v46 + 4);
          v116 = *((_QWORD *)v46 + 5);
          v126 = __OFSUB__(v116, v117);
          v118 = v116 - v117;
          v119 = v126;
        }
        if ((v119 & 1) != 0)
          goto LABEL_136;
        v127 = v47 - 2;
        v133 = &v114[16 * v47 - 32];
        v135 = *(_QWORD *)v133;
        v134 = *((_QWORD *)v133 + 1);
        v136 = __OFSUB__(v134, v135);
        v137 = v134 - v135;
        v138 = v136;
        if (v136)
          goto LABEL_139;
        v139 = &v114[16 * v115];
        v141 = *(_QWORD *)v139;
        v140 = *((_QWORD *)v139 + 1);
        v126 = __OFSUB__(v140, v141);
        v142 = v140 - v141;
        if (v126)
          goto LABEL_142;
        if (__OFADD__(v137, v142))
          goto LABEL_143;
        if (v137 + v142 >= v118)
        {
          v143 = v118 < v142;
LABEL_104:
          if (v143)
            v115 = v127;
          goto LABEL_106;
        }
LABEL_98:
        if ((v138 & 1) != 0)
          goto LABEL_138;
        v146 = &v114[16 * v115];
        v148 = *(_QWORD *)v146;
        v147 = *((_QWORD *)v146 + 1);
        v126 = __OFSUB__(v147, v148);
        v149 = v147 - v148;
        if (v126)
          goto LABEL_141;
        if (v149 < v137)
          goto LABEL_15;
LABEL_106:
        v154 = v115 - 1;
        if (v115 - 1 >= v47)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v201)
          goto LABEL_156;
        v155 = v46;
        v156 = &v114[16 * v154];
        v157 = v114;
        v158 = *(_QWORD *)v156;
        v159 = &v157[16 * v115];
        v160 = *((_QWORD *)v159 + 1);
        v161 = v190;
        sub_22A697C70(*v201 + *(_QWORD *)(v189 + 72) * *(_QWORD *)v156, *v201 + *(_QWORD *)(v189 + 72) * *(_QWORD *)v159, *v201 + *(_QWORD *)(v189 + 72) * v160, v187, v42);
        if (v161)
        {
LABEL_127:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v173 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v160 < v158)
          goto LABEL_131;
        if (v115 > *((_QWORD *)v155 + 2))
          goto LABEL_132;
        *(_QWORD *)v156 = v158;
        v114 = v200;
        *(_QWORD *)&v200[16 * v154 + 8] = v160;
        v162 = *((_QWORD *)v155 + 2);
        if (v115 >= v162)
          goto LABEL_133;
        v46 = v155;
        v190 = 0;
        v47 = v162 - 1;
        memmove(v159, v159 + 16, 16 * (v162 - 1 - v115));
        *((_QWORD *)v155 + 2) = v162 - 1;
        v43 = (uint64_t)v188;
        v24 = v184;
        if (v162 <= 2)
          goto LABEL_15;
      }
    }
    v47 = 1;
LABEL_15:
    v36 = v201[1];
    v45 = v196;
    if (v196 >= v36)
    {
      v44 = v173;
      goto LABEL_115;
    }
  }
  if (__OFADD__(v48, v174))
    goto LABEL_153;
  v89 = v199;
  if (v48 + v174 < v199)
    v89 = v48 + v174;
  if (v89 >= v48)
  {
    if (v66 != v89)
    {
      v183 = v48;
      v175 = v46;
      v90 = *(_QWORD *)(v189 + 72);
      v91 = v90 * (v66 - 1);
      v194 = v90;
      v200 = (char *)(v66 * v90);
      v181 = v89;
      do
      {
        v93 = 0;
        v94 = v183;
        v195 = v91;
        v196 = v66;
        while (1)
        {
          v199 = v94;
          v95 = *v201;
          sub_22A62F9B8((uint64_t)&v200[v93 + *v201], v43, v42);
          v96 = v43;
          v97 = (uint64_t)v191;
          sub_22A62F9B8(v91 + v93 + v95, (uint64_t)v191, v42);
          v98 = *(int *)(v67 + 40);
          v99 = *(double *)(v96 + v98);
          v100 = *(double *)(v97 + v98);
          v101 = v67;
          v102 = v42;
          v103 = (uint64_t)v192;
          sub_22A62F9B8(v96, (uint64_t)v192, v102);
          v104 = (uint64_t)v193;
          sub_22A62F9B8(v97, (uint64_t)v193, v102);
          if (v99 >= v100)
            break;
          v105 = *(double *)(v103 + *(int *)(v101 + 36));
          sub_22A629860(v103, v102);
          v106 = *(double *)(v104 + *(int *)(v101 + 36));
          sub_22A629860(v104, v102);
          sub_22A629860(v97, v102);
          sub_22A629860(v96, v102);
          v42 = v102;
          v43 = v96;
          if (v105 >= v106)
            goto LABEL_56;
          v107 = *v201;
          if (!*v201)
            goto LABEL_155;
          v91 = v195;
          v108 = v107 + v195 + v93;
          sub_22A62981C((uint64_t)&v200[v107 + v93], v198, v102);
          swift_arrayInitWithTakeFrontToBack();
          sub_22A62981C(v198, v108, v102);
          v93 -= v194;
          v94 = v199 + 1;
          v92 = v196;
          v67 = v197;
          if (v196 == v199 + 1)
            goto LABEL_57;
        }
        sub_22A629860(v104, v102);
        sub_22A629860(v103, v102);
        sub_22A629860(v97, v102);
        sub_22A629860(v96, v102);
        v42 = v102;
        v43 = v96;
LABEL_56:
        v67 = v101;
        v91 = v195;
        v92 = v196;
LABEL_57:
        v66 = v92 + 1;
        v91 += v194;
        v200 += v194;
      }
      while (v66 != v181);
      v66 = v181;
      v46 = v175;
      v48 = v183;
      v24 = v184;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  result = sub_22A6A6120();
  __break(1u);
  return result;
}

uint64_t sub_22A697C70(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  _BOOL4 v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v72 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v65 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v65 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v65 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v67 = (unint64_t)&v65 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v66 = (uint64_t)&v65 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v65 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v65 - v26;
  v71 = *(_QWORD *)(v28 + 72);
  if (!v71)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v29 = a1;
  if (a2 - a1 == 0x8000000000000000 && v71 == -1)
    goto LABEL_66;
  v30 = v72 - a2;
  if (v72 - a2 == 0x8000000000000000 && v71 == -1)
    goto LABEL_67;
  v31 = (uint64_t)(a2 - a1) / v71;
  v75 = a1;
  v74 = a4;
  v32 = v30 / v71;
  if (v31 >= v30 / v71)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      v67 = a1;
      v34 = v32 * v71;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v47 = a4 + v34;
      v73 = a4 + v34;
      v75 = a2;
      if (v34 >= 1 && v67 < a2)
      {
        v49 = -v71;
        v71 = v9;
        do
        {
          sub_22A62F9B8(v47 + v49, (uint64_t)v18, a5);
          v50 = a2 + v49;
          v51 = v70;
          sub_22A62F9B8(a2 + v49, v70, a5);
          v52 = *(int *)(v9 + 40);
          v53 = *(double *)&v18[v52];
          v54 = *(double *)(v51 + v52);
          v55 = v68;
          sub_22A62F9B8((uint64_t)v18, v68, a5);
          v56 = v51;
          v57 = v69;
          sub_22A62F9B8(v56, v69, a5);
          if (v53 >= v54)
          {
            sub_22A629860(v57, a5);
            sub_22A629860(v55, a5);
            v60 = 0;
          }
          else
          {
            v58 = *(double *)(v55 + *(int *)(v9 + 36));
            sub_22A629860(v55, a5);
            v59 = *(double *)(v57 + *(int *)(v9 + 36));
            sub_22A629860(v57, a5);
            v60 = v58 < v59;
          }
          v61 = v72;
          v62 = v72 + v49;
          sub_22A629860(v70, a5);
          sub_22A629860((uint64_t)v18, a5);
          if (v60)
          {
            if (v61 < a2 || v62 >= a2)
            {
              v9 = v71;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v9 = v71;
              if (v61 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v75 += v49;
          }
          else
          {
            v63 = v73;
            v73 += v49;
            if (v61 < v63 || v62 >= v63)
            {
              v9 = v71;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v9 = v71;
              if (v61 != v63)
                swift_arrayInitWithTakeBackToFront();
            }
            v50 = a2;
          }
          v47 = v73;
          if (v73 <= a4)
            break;
          a2 = v50;
          v72 = v62;
        }
        while (v50 > v67);
      }
LABEL_64:
      sub_22A698428(&v75, &v74, (uint64_t *)&v73, a5);
      return 1;
    }
  }
  else if ((v31 & 0x8000000000000000) == 0)
  {
    v33 = v31 * v71;
    if (a4 < v29 || v29 + v33 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v29)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v35 = a4 + v33;
    v73 = a4 + v33;
    if (v33 >= 1 && a2 < v72)
    {
      while (1)
      {
        sub_22A62F9B8(a2, (uint64_t)v27, a5);
        sub_22A62F9B8(a4, (uint64_t)v25, a5);
        v37 = *(int *)(v9 + 40);
        v38 = *(double *)&v27[v37];
        v39 = *(double *)&v25[v37];
        v40 = v66;
        sub_22A62F9B8((uint64_t)v27, v66, a5);
        v41 = v67;
        sub_22A62F9B8((uint64_t)v25, v67, a5);
        if (v38 >= v39)
          break;
        v42 = *(double *)(v40 + *(int *)(v9 + 36));
        sub_22A629860(v40, a5);
        v43 = *(double *)(v41 + *(int *)(v9 + 36));
        sub_22A629860(v41, a5);
        sub_22A629860((uint64_t)v25, a5);
        sub_22A629860((uint64_t)v27, a5);
        if (v42 >= v43)
          goto LABEL_29;
        v44 = v75;
        v45 = a2 + v71;
        if (v75 < a2 || v75 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v75 == a2)
        {
          v44 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_35:
        v75 = v44 + v71;
        a4 = v74;
        if (v74 < v35)
        {
          a2 = v45;
          if (v45 < v72)
            continue;
        }
        goto LABEL_64;
      }
      sub_22A629860(v41, a5);
      sub_22A629860(v40, a5);
      sub_22A629860((uint64_t)v25, a5);
      sub_22A629860((uint64_t)v27, a5);
LABEL_29:
      v44 = v75;
      v46 = v74 + v71;
      if (v75 < v74 || v75 >= v46)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v75 != v74)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v74 = v46;
      v45 = a2;
      goto LABEL_35;
    }
    goto LABEL_64;
  }
LABEL_68:
  result = sub_22A6A615C();
  __break(1u);
  return result;
}

char *sub_22A6982F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B010E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22A6983EC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22A698428(a1, a2, a3, &qword_255AFF3A0);
}

uint64_t sub_22A6983F8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22A698428(a1, a2, a3, &qword_255AFF3A8);
}

uint64_t sub_22A698404(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22A698428(a1, a2, a3, &qword_255AFF3B0);
}

uint64_t sub_22A698410(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22A698428(a1, a2, a3, &qword_255AFF3B8);
}

uint64_t sub_22A69841C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_22A698428(a1, a2, a3, &qword_255AFF3C0);
}

uint64_t sub_22A698428(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_22A6A615C();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_22A698534(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_22A6A615C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_22A6985EC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    result = (char *)sub_22A6A615C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

char *sub_22A6986AC(uint64_t a1)
{
  return sub_22A6982F4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22A6986C0(_QWORD *a1)
{
  return sub_22A657560(0, a1[2], 0, a1);
}

uint64_t sub_22A6986D4(_QWORD *a1)
{
  return sub_22A657574(0, a1[2], 0, a1);
}

uint64_t sub_22A6986E8(_QWORD *a1)
{
  return sub_22A657588(0, a1[2], 0, a1);
}

uint64_t sub_22A6986FC(_QWORD *a1)
{
  return sub_22A65759C(0, a1[2], 0, a1);
}

uint64_t sub_22A698710(_QWORD *a1)
{
  return sub_22A6575B0(0, a1[2], 0, a1);
}

uint64_t sub_22A698724(uint64_t a1)
{
  return sub_22A657944(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22A698738(_QWORD *a1)
{
  return sub_22A657F44(0, a1[2], 0, a1);
}

uint64_t sub_22A69874C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_22A628A38(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_22A6987C4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a3;
  v35 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3C0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v34 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011B0);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = MEMORY[0x24BDAC7A8](v42);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v36 = &v32[-v16];
  v17 = *(_QWORD *)(a1 + 16);
  v38 = a1;
  if (v17)
  {
    v33 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_22A657278(0, v17, 0);
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v39 = *(_QWORD *)(v7 + 72);
    v40 = v10;
    do
    {
      sub_22A62F9B8(v18, (uint64_t)v9, &qword_255AFF3C0);
      v19 = (uint64_t)&v15[*(int *)(v42 + 36)];
      sub_22A62F9B8((uint64_t)v9, v19, &qword_255AFF3C0);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
      v20(v15, v19, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B011B8);
      swift_storeEnumTagMultiPayload();
      sub_22A629860((uint64_t)v9, &qword_255AFF3C0);
      v21 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A657278(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v43;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_22A657278(v22 > 1, v23 + 1, 1);
        v21 = v43;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_22A62981C((uint64_t)v15, v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, &qword_255B011B0);
      v10 = v40;
      v18 += v39;
      --v17;
    }
    while (v17);
    a4 = v33;
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v21 = MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v34;
  v20(v34, v35, v41);
  v25 = v38;
  swift_bridgeObjectRetain();
  v26 = v36;
  sub_22A69376C(v24, v37, a4, v25, &qword_255AFF3C0, &qword_255B011B0, &qword_255B011B8, (uint64_t)v36);
  v27 = sub_22A666578(v21);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 56) = v42;
  *(_QWORD *)(inited + 64) = sub_22A671D30((unint64_t *)&unk_255B011C0, &qword_255B011B0, (uint64_t)&unk_22A6A976C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  sub_22A62F9B8((uint64_t)v26, (uint64_t)boxed_opaque_existential_1, &qword_255B011B0);
  v43 = v27;
  sub_22A693AF0(inited);
  v30 = v43;
  sub_22A629860((uint64_t)v26, &qword_255B011B0);
  return v30;
}

uint64_t sub_22A698B68(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a3;
  v35 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v34 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01180);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = MEMORY[0x24BDAC7A8](v42);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v36 = &v32[-v16];
  v17 = *(_QWORD *)(a1 + 16);
  v38 = a1;
  if (v17)
  {
    v33 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_22A65724C(0, v17, 0);
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v39 = *(_QWORD *)(v7 + 72);
    v40 = v10;
    do
    {
      sub_22A62F9B8(v18, (uint64_t)v9, &qword_255AFF3B8);
      v19 = (uint64_t)&v15[*(int *)(v42 + 36)];
      sub_22A62F9B8((uint64_t)v9, v19, &qword_255AFF3B8);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
      v20(v15, v19, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01188);
      swift_storeEnumTagMultiPayload();
      sub_22A629860((uint64_t)v9, &qword_255AFF3B8);
      v21 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A65724C(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v43;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_22A65724C(v22 > 1, v23 + 1, 1);
        v21 = v43;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_22A62981C((uint64_t)v15, v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, &qword_255B01180);
      v10 = v40;
      v18 += v39;
      --v17;
    }
    while (v17);
    a4 = v33;
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v21 = MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v34;
  v20(v34, v35, v41);
  v25 = v38;
  swift_bridgeObjectRetain();
  v26 = v36;
  sub_22A69376C(v24, v37, a4, v25, &qword_255AFF3B8, &qword_255B01180, &qword_255B01188, (uint64_t)v36);
  v27 = sub_22A666564(v21);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 56) = v42;
  *(_QWORD *)(inited + 64) = sub_22A671D30(&qword_255B01190, &qword_255B01180, (uint64_t)&unk_22A6A976C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  sub_22A62F9B8((uint64_t)v26, (uint64_t)boxed_opaque_existential_1, &qword_255B01180);
  v43 = v27;
  sub_22A693AF0(inited);
  v30 = v43;
  sub_22A629860((uint64_t)v26, &qword_255B01180);
  return v30;
}

uint64_t sub_22A698F0C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a3;
  v35 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v34 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01150);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = MEMORY[0x24BDAC7A8](v42);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v36 = &v32[-v16];
  v17 = *(_QWORD *)(a1 + 16);
  v38 = a1;
  if (v17)
  {
    v33 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_22A657220(0, v17, 0);
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v39 = *(_QWORD *)(v7 + 72);
    v40 = v10;
    do
    {
      sub_22A62F9B8(v18, (uint64_t)v9, &qword_255AFF3B0);
      v19 = (uint64_t)&v15[*(int *)(v42 + 36)];
      sub_22A62F9B8((uint64_t)v9, v19, &qword_255AFF3B0);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
      v20(v15, v19, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01158);
      swift_storeEnumTagMultiPayload();
      sub_22A629860((uint64_t)v9, &qword_255AFF3B0);
      v21 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A657220(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v43;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_22A657220(v22 > 1, v23 + 1, 1);
        v21 = v43;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_22A62981C((uint64_t)v15, v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, &qword_255B01150);
      v10 = v40;
      v18 += v39;
      --v17;
    }
    while (v17);
    a4 = v33;
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v21 = MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v34;
  v20(v34, v35, v41);
  v25 = v38;
  swift_bridgeObjectRetain();
  v26 = v36;
  sub_22A69376C(v24, v37, a4, v25, &qword_255AFF3B0, &qword_255B01150, &qword_255B01158, (uint64_t)v36);
  v27 = sub_22A666550(v21);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 56) = v42;
  *(_QWORD *)(inited + 64) = sub_22A671D30(&qword_255B01160, &qword_255B01150, (uint64_t)&unk_22A6A976C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  sub_22A62F9B8((uint64_t)v26, (uint64_t)boxed_opaque_existential_1, &qword_255B01150);
  v43 = v27;
  sub_22A693AF0(inited);
  v30 = v43;
  sub_22A629860((uint64_t)v26, &qword_255B01150);
  return v30;
}

uint64_t sub_22A6992B0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a3;
  v35 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v34 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01120);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = MEMORY[0x24BDAC7A8](v42);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v36 = &v32[-v16];
  v17 = *(_QWORD *)(a1 + 16);
  v38 = a1;
  if (v17)
  {
    v33 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_22A6571F4(0, v17, 0);
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v39 = *(_QWORD *)(v7 + 72);
    v40 = v10;
    do
    {
      sub_22A62F9B8(v18, (uint64_t)v9, &qword_255AFF3A8);
      v19 = (uint64_t)&v15[*(int *)(v42 + 36)];
      sub_22A62F9B8((uint64_t)v9, v19, &qword_255AFF3A8);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
      v20(v15, v19, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01128);
      swift_storeEnumTagMultiPayload();
      sub_22A629860((uint64_t)v9, &qword_255AFF3A8);
      v21 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A6571F4(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v43;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_22A6571F4(v22 > 1, v23 + 1, 1);
        v21 = v43;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_22A62981C((uint64_t)v15, v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, &qword_255B01120);
      v10 = v40;
      v18 += v39;
      --v17;
    }
    while (v17);
    a4 = v33;
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v21 = MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v34;
  v20(v34, v35, v41);
  v25 = v38;
  swift_bridgeObjectRetain();
  v26 = v36;
  sub_22A69376C(v24, v37, a4, v25, &qword_255AFF3A8, &qword_255B01120, &qword_255B01128, (uint64_t)v36);
  v27 = sub_22A6663D0(v21);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 56) = v42;
  *(_QWORD *)(inited + 64) = sub_22A671D30(&qword_255B01130, &qword_255B01120, (uint64_t)&unk_22A6A976C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  sub_22A62F9B8((uint64_t)v26, (uint64_t)boxed_opaque_existential_1, &qword_255B01120);
  v43 = v27;
  sub_22A693AF0(inited);
  v30 = v43;
  sub_22A629860((uint64_t)v26, &qword_255B01120);
  return v30;
}

uint64_t sub_22A699654(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a3;
  v35 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFF3A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v34 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFFB78);
  v12 = *(_QWORD *)(v42 - 8);
  v13 = MEMORY[0x24BDAC7A8](v42);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v36 = &v32[-v16];
  v17 = *(_QWORD *)(a1 + 16);
  v38 = a1;
  if (v17)
  {
    v33 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_22A6571C8(0, v17, 0);
    v18 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v39 = *(_QWORD *)(v7 + 72);
    v40 = v10;
    do
    {
      sub_22A62F9B8(v18, (uint64_t)v9, &qword_255AFF3A0);
      v19 = (uint64_t)&v15[*(int *)(v42 + 36)];
      sub_22A62F9B8((uint64_t)v9, v19, &qword_255AFF3A0);
      v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
      v20(v15, v19, v41);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B010F0);
      swift_storeEnumTagMultiPayload();
      sub_22A629860((uint64_t)v9, &qword_255AFF3A0);
      v21 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22A6571C8(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v43;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_22A6571C8(v22 > 1, v23 + 1, 1);
        v21 = v43;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      sub_22A62981C((uint64_t)v15, v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, &qword_255AFFB78);
      v10 = v40;
      v18 += v39;
      --v17;
    }
    while (v17);
    a4 = v33;
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v21 = MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v34;
  v20(v34, v35, v41);
  v25 = v38;
  swift_bridgeObjectRetain();
  v26 = v36;
  sub_22A69376C(v24, v37, a4, v25, &qword_255AFF3A0, &qword_255AFFB78, (uint64_t *)&unk_255B010F0, (uint64_t)v36);
  v27 = sub_22A6663BC(v21);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
  *(_QWORD *)(inited + 56) = v42;
  *(_QWORD *)(inited + 64) = sub_22A671D30(&qword_255B01100, &qword_255AFFB78, (uint64_t)&unk_22A6A976C);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  sub_22A62F9B8((uint64_t)v26, (uint64_t)boxed_opaque_existential_1, &qword_255AFFB78);
  v43 = v27;
  sub_22A693AF0(inited);
  v30 = v43;
  sub_22A629860((uint64_t)v26, &qword_255AFFB78);
  return v30;
}

uint64_t sub_22A6999F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    return sub_22A628ADC(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_22A699A0C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_22A628B64(a1, a2);
  return a1;
}

uint64_t sub_22A699A20(uint64_t result, uint64_t a2)
{
  if (BYTE5(a2) != 255)
    return sub_22A628B20(result, a2, BYTE5(a2));
  return result;
}

uint64_t sub_22A699A34(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE5(a3) != 255)
    return sub_22A628ADC(result, a2, a3, BYTE5(a3));
  return result;
}

uint64_t sub_22A699A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22A699A78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A699A9C()
{
  return sub_22A696A00();
}

uint64_t sub_22A699AA4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A699AD0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A62E6B0;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_22A62E6B0;
  return sub_22A693E60();
}

uint64_t sub_22A699B38(uint64_t a1)
{
  uint64_t v1;

  return sub_22A696CD8(a1, v1);
}

BOOL static Anchor.== infix(_:_:)(float a1, float a2, float a3, float a4)
{
  return a2 == a4 && a1 == a3;
}

float static Anchor.center.getter()
{
  return 0.5;
}

uint64_t Anchor.hash(into:)()
{
  sub_22A6A627C();
  return sub_22A6A627C();
}

uint64_t Anchor.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A627C();
  sub_22A6A627C();
  return sub_22A6A62A0();
}

uint64_t sub_22A699C28()
{
  sub_22A6A6258();
  Anchor.hash(into:)();
  return sub_22A6A62A0();
}

uint64_t sub_22A699C78()
{
  return Anchor.hash(into:)();
}

uint64_t sub_22A699C80()
{
  sub_22A6A6258();
  Anchor.hash(into:)();
  return sub_22A6A62A0();
}

unint64_t sub_22A699CD0()
{
  unint64_t result;

  result = qword_255B01240;
  if (!qword_255B01240)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Anchor, &type metadata for Anchor);
    atomic_store(result, (unint64_t *)&qword_255B01240);
  }
  return result;
}

BOOL sub_22A699D14(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

unint64_t sub_22A699D40(uint64_t a1)
{
  unint64_t result;

  result = sub_22A699D64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A699D64()
{
  unint64_t result;

  result = qword_255B01248;
  if (!qword_255B01248)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Anchor, &type metadata for Anchor);
    atomic_store(result, (unint64_t *)&qword_255B01248);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Anchor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Anchor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Anchor()
{
  return &type metadata for Anchor;
}

uint64_t sub_22A699E00()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22A699E38 + 4 * byte_22A6ABB14[*v0]))(0xD000000000000011, 0x800000022A6AC600);
}

uint64_t sub_22A699E38()
{
  return 0x746C7561666564;
}

unint64_t sub_22A699E50()
{
  return 0xD000000000000010;
}

uint64_t sub_22A699E6C()
{
  return 0x7865547473726966;
}

uint64_t sub_22A699E8C()
{
  return 0x747865547473616CLL;
}

uint64_t sub_22A699EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22A699E00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_22A699ED0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A699EF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A699EF4()
{
  unint64_t result;

  result = qword_255B01278;
  if (!qword_255B01278)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for TextContent.Layout, &type metadata for TextContent.Layout);
    atomic_store(result, (unint64_t *)&qword_255B01278);
  }
  return result;
}

unint64_t sub_22A699F38(uint64_t a1)
{
  unint64_t result;

  result = sub_22A64E890();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteInspectorError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInspectorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_22A69A038 + 4 * byte_22A6ABB65[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_22A69A06C + 4 * byte_22A6ABB60[v4]))();
}

uint64_t sub_22A69A06C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A69A074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A69A07CLL);
  return result;
}

uint64_t sub_22A69A088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A69A090);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_22A69A094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A69A09C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteInspectorError()
{
  return &type metadata for RemoteInspectorError;
}

unint64_t sub_22A69A0BC()
{
  unint64_t result;

  result = qword_255B012E0;
  if (!qword_255B012E0)
  {
    result = MEMORY[0x22E2DF32C](&unk_22A6ABBC8, &type metadata for RemoteInspectorError);
    atomic_store(result, (unint64_t *)&qword_255B012E0);
  }
  return result;
}

unint64_t sub_22A69A100()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
    return sub_22A6596D4();
  if (*(_BYTE *)(v0 + 16) != 1)
    __asm { BR              X10 }
  return sub_22A628F30();
}

unint64_t sub_22A69A2F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_22A69A100();
  *a1 = result;
  return result;
}

unint64_t sub_22A69A314(uint64_t a1)
{
  unint64_t result;

  result = sub_22A69A338();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A69A338()
{
  unint64_t result;

  result = qword_255B01310;
  if (!qword_255B01310)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AnimationCurve, &type metadata for AnimationCurve);
    atomic_store(result, (unint64_t *)&qword_255B01310);
  }
  return result;
}

unint64_t sub_22A69A37C(uint64_t a1)
{
  unint64_t result;

  result = sub_22A69A3A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A69A3A0()
{
  unint64_t result;

  result = qword_255B01318;
  if (!qword_255B01318)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AnimationCurve, &type metadata for AnimationCurve);
    atomic_store(result, (unint64_t *)&qword_255B01318);
  }
  return result;
}

uint64_t sub_22A69A3E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22A69A404@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22A63B540;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22A62A1BC(v4);
}

uint64_t sub_22A69A48C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22A63B540;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_22A62A1BC(v3);
  return sub_22A62EA00(v8);
}

uint64_t NullAirPlayConnection.onClose.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t NullAirPlayConnection.onClose.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*NullAirPlayConnection.onClose.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22A69A610@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22A69AB2C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22A62A1BC(v4);
}

uint64_t sub_22A69A698(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22A69AAFC;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  sub_22A62A1BC(v3);
  return sub_22A62EA00(v8);
}

uint64_t NullAirPlayConnection.onDataReceived.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t NullAirPlayConnection.onDataReceived.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*NullAirPlayConnection.onDataReceived.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double NullAirPlayConnection.__allocating_init()()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

double NullAirPlayConnection.init()()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

uint64_t NullAirPlayConnection.deinit()
{
  uint64_t v0;

  sub_22A62EA00(*(_QWORD *)(v0 + 16));
  sub_22A62EA00(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t NullAirPlayConnection.__deallocating_deinit()
{
  uint64_t v0;

  sub_22A62EA00(*(_QWORD *)(v0 + 16));
  sub_22A62EA00(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t NullAirPlayConnection.send(_:)()
{
  uint64_t v0;

  return sub_22A69A8B4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  return sub_22A69A8B4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A69A8B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22A69A8D4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t sub_22A69A920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*sub_22A69A970())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22A69A9AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  sub_22A62A1BC(v1);
  return v1;
}

uint64_t sub_22A69A9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_22A62EA00(v5);
}

uint64_t (*sub_22A69AA48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22A69AA84()
{
  uint64_t v0;

  return sub_22A69A8B4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for NullAirPlayConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for NullAirPlayConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NullAirPlayConnection.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_22A69AAD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A69AAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_22A69AB2C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_22A69AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  char *v21;
  _QWORD v22[11];
  uint64_t v23;

  v22[6] = a4;
  v22[7] = a3;
  v22[9] = a2;
  v5 = sub_22A6A5C40();
  v22[10] = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v22[5] = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v22[8] = (char *)v22 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for RenderLayerAction();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v22[2] = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v22[4] = (char *)v22 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v16 = type metadata accessor for RenderLayerActionType();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[3] = v10;
  v19 = *(int *)(v10 + 20);
  v23 = v4;
  sub_22A6354E0(v4 + v19, (uint64_t)v18, v20);
  v21 = (char *)&loc_22A69AD38 + dword_22A69BF74[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_22A69AD48()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = v0[9];
  if (!*(_QWORD *)(v5 + 16) || (v6 = sub_22A632F64(*(_QWORD *)(v4 - 72)), (v7 & 1) == 0))
  {
    if (qword_255AFE878 != -1)
      swift_once();
    v9 = sub_22A6A5CAC();
    __swift_project_value_buffer(v9, (uint64_t)qword_255B08F48);
    sub_22A6354E0(*(_QWORD *)(v4 - 72), v3, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    v10 = sub_22A6A5C94();
    v11 = sub_22A6A5F64();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v0[10] = v2;
      v14 = v13;
      v0[32] = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v4 - 72) = v12 + 4;
      sub_22A644894(&qword_255B01078, MEMORY[0x24BDCEAB8]);
      v15 = sub_22A6A61B0();
      v0[24] = sub_22A62D174(v15, v16, v0 + 32);
      sub_22A6A6018();
      swift_bridgeObjectRelease();
      sub_22A633AE8(v3, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
      _os_log_impl(&dword_22A61E000, v10, v11, "No node in registry for %s", v12, 0xCu);
      swift_arrayDestroy();
      v17 = v14;
      v2 = v0[10];
      MEMORY[0x22E2DF3F8](v17, -1, -1);
      MEMORY[0x22E2DF3F8](v12, -1, -1);
    }
    else
    {
      sub_22A633AE8(v3, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    }

    goto LABEL_11;
  }
  sub_22A628A98(*(_QWORD *)(v5 + 56) + 40 * v6, (uint64_t)(v0 + 32));
  sub_22A628A38((__int128 *)v0 + 16, (uint64_t)(v0 + 24));
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = v0[11];
  sub_22A69E618(v0 + 24, (uint64_t)(v0 + 32));
  if (v8)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 24));
LABEL_11:
    sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
    return;
  }
  sub_22A64F8C4((uint64_t)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 24));
  sub_22A633AE8(v2, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerActionType);
  v18 = v0[4];
  if (qword_255AFE878 != -1)
    swift_once();
  v19 = sub_22A6A5CAC();
  __swift_project_value_buffer(v19, (uint64_t)qword_255B08F48);
  sub_22A6354E0(*(_QWORD *)(v4 - 72), v18, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
  v20 = sub_22A6A5C94();
  v21 = sub_22A6A5F70();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v0[32] = v23;
    v0[11] = 0;
    *(_DWORD *)v22 = 136315138;
    sub_22A6354E0(v18, v0[2], (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    v24 = sub_22A6A5DC0();
    v0[24] = sub_22A62D174(v24, v25, v0 + 32);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    sub_22A633AE8(v18, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
    _os_log_impl(&dword_22A61E000, v20, v21, "Action: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2DF3F8](v23, -1, -1);
    MEMORY[0x22E2DF3F8](v22, -1, -1);
  }
  else
  {
    sub_22A633AE8(v18, (uint64_t (*)(_QWORD))type metadata accessor for RenderLayerAction);
  }

}

void sub_22A69BF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22A69AB60(a1, a2, a3, a4);
}

uint64_t sub_22A69BF98(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

void sub_22A69BFD0(uint64_t a1)
{
  __asm { BR              X10 }
}

unint64_t sub_22A69C004()
{
  int v0;
  uint64_t v1;
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A7590;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  strcpy((char *)(v1 - 192), "absolutePoint");
  *(_WORD *)(v1 - 178) = -4864;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x65756C6176;
  *(_QWORD *)(inited + 96) = 0xE500000000000000;
  *(_DWORD *)(v1 - 192) = v0;
  sub_22A6A6084();
  return sub_22A630814(inited);
}

void sub_22A69C1B8(_QWORD *a1@<X8>)
{
  unsigned int *v1;
  uint64_t v3;

  sub_22A69BFD0(*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
  *a1 = v3;
}

unint64_t sub_22A69C1E8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A69C20C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A69C20C()
{
  unint64_t result;

  result = qword_255B01408;
  if (!qword_255B01408)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Dimension, &type metadata for Dimension);
    atomic_store(result, (unint64_t *)&qword_255B01408);
  }
  return result;
}

uint64_t sub_22A69C250(uint64_t a1, int a2, char a3)
{
  float v5;
  float v6;
  float v7;

  if (!a3)
  {
    sub_22A6A60B4();
    sub_22A6A5E08();
    v5 = *(float *)&a1 * 255.0;
    if ((~COERCE_INT(*(float *)&a1 * 255.0) & 0x7F800000) != 0)
    {
      if (v5 > -9.2234e18)
      {
        if (v5 < 9.2234e18)
        {
          sub_22A6A61B0();
          sub_22A6A5E08();
          swift_bridgeObjectRelease();
          sub_22A6A5E08();
          v6 = *((float *)&a1 + 1) * 255.0;
          if ((~COERCE_INT(*((float *)&a1 + 1) * 255.0) & 0x7F800000) != 0)
          {
            if (v6 > -9.2234e18)
            {
              if (v6 < 9.2234e18)
              {
                sub_22A6A61B0();
                sub_22A6A5E08();
                swift_bridgeObjectRelease();
                sub_22A6A5E08();
                v7 = *(float *)&a2 * 255.0;
                if ((~COERCE_INT(*(float *)&a2 * 255.0) & 0x7F800000) != 0)
                {
                  if (v7 > -9.2234e18)
                  {
                    if (v7 < 9.2234e18)
                    {
                      sub_22A6A61B0();
                      sub_22A6A5E08();
                      swift_bridgeObjectRelease();
                      sub_22A6A5E08();
                      sub_22A6A5F1C();
                      sub_22A6A5E08();
                      return 0;
                    }
LABEL_23:
                    __break(1u);
                    JUMPOUT(0x22A69C56CLL);
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  if (a3 == 1)
    __asm { BR              X10 }
  return 0x302C302861626772;
}

uint64_t sub_22A69C57C(uint64_t a1, char a2)
{
  if (a2 == 1)
  {
    sub_22A6A60B4();
    sub_22A6A5E08();
    sub_22A6A5E08();
    swift_bridgeObjectRelease();
  }
  sub_22A6A5E08();
  sub_22A6A5F1C();
  sub_22A6A5E08();
  return 0;
}

uint64_t sub_22A69C6E0(uint64_t a1, char a2)
{
  if (a2 == 1)
  {
    sub_22A6A60B4();
    sub_22A6A5E08();
    sub_22A6A5E08();
    swift_bridgeObjectRelease();
  }
  sub_22A6A5E08();
  sub_22A6A5F1C();
  sub_22A6A5E08();
  return 0;
}

void sub_22A69C850(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22A69C880()
{
  sub_22A6A5E08();
  sub_22A6A5F1C();
  sub_22A6A5E08();
  return 0;
}

uint64_t sub_22A69C96C()
{
  float *v0;
  float v1;
  float v2;
  float v4;
  __float2 v5;
  BOOL v6;

  v1 = *v0;
  v2 = v0[1];
  if (*v0 == 1.0 && v2 == 0.0 && v0[2] == 0.0 && v0[3] == 1.0 && v0[4] == 0.0 && v0[5] == 0.0)
    return 0x797469746E656469;
  if (v2 == 0.0 && v0[2] == 0.0)
  {
    if (v0[4] == 0.0 && v0[5] == 0.0)
    {
      sub_22A6A60B4();
      sub_22A6A5E08();
      sub_22A6A5F1C();
      sub_22A6A5E08();
      goto LABEL_22;
    }
    if (v1 == 1.0 && v0[3] == 1.0)
    {
      sub_22A6A60B4();
      sub_22A6A5E08();
      sub_22A6A5F1C();
      goto LABEL_21;
    }
  }
  v4 = acosf(*v0);
  v5 = __sincosf_stret(v4);
  v6 = v5.__cosval == v1 && v5.__sinval == v2;
  if (!v6 || v0[2] != (float)-v5.__sinval || v5.__cosval != v0[3] || v0[4] != 0.0 || v0[5] != 0.0)
  {
    sub_22A6A60B4();
    sub_22A6A5E08();
    sub_22A6A5F1C();
    sub_22A6A5E08();
    sub_22A6A5F1C();
    sub_22A6A5E08();
    sub_22A6A5F1C();
    sub_22A6A5E08();
    sub_22A6A5F1C();
    sub_22A6A5E08();
    sub_22A6A5F1C();
LABEL_21:
    sub_22A6A5E08();
    goto LABEL_22;
  }
  sub_22A6A60B4();
  sub_22A6A5E08();
LABEL_22:
  sub_22A6A5F1C();
  sub_22A6A5E08();
  return 0;
}

void sub_22A69CD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD v53[29];
  uint64_t v54;
  char *v55;

  v53[28] = a2;
  v54 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01210);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v53[27] = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v53[10] = (char *)v53 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01200);
  v53[17] = *(_QWORD *)(v6 - 8);
  v53[18] = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v53[26] = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53[9] = (char *)v53 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v53[25] = (char *)v53 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v53[24] = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v53[3] = (char *)v53 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v53[11] = *(_QWORD *)(v16 - 8);
  v53[12] = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v53[23] = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v53[2] = (char *)v53 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v53[1] = (char *)v53 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011F8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v53[22] = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v53[8] = (char *)v53 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01570);
  v53[15] = *(_QWORD *)(v26 - 8);
  v53[16] = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v53[21] = (char *)v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v53[6] = (char *)v53 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v53[7] = (char *)v53 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B011D8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v53[19] = (char *)v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v53[5] = (char *)v53 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01540);
  v53[13] = *(_QWORD *)(v36 - 8);
  v53[14] = v36;
  v37 = MEMORY[0x24BDAC7A8](v36);
  v53[20] = (char *)v53 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v53[4] = (char *)v53 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v41 = type metadata accessor for ContainerContent.Child();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v45 = MEMORY[0x24BDAC7A8](v44);
  MEMORY[0x24BDAC7A8](v45);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B01410);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)v53 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = (uint64_t)&v49[*(int *)(v47 + 48)];
  sub_22A62F9B8(v54, (uint64_t)v49, &qword_255B003B0);
  sub_22A6297D8((uint64_t)v55, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v49, 1, v41) == 1)
  {
    v51 = (char *)&loc_22A69D23C + 4 * byte_22A6ABD3C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v55 = v49;
  v52 = (char *)sub_22A69D2D0 + 4 * byte_22A6ABD38[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A69D2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v3 - 72);
  sub_22A6297D8(v4, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A629860(v2, &qword_255AFEEE0);
    sub_22A69D838();
    swift_allocError();
    swift_willThrow();
    sub_22A649594(v4);
  }
  else
  {
    v5 = *(_QWORD *)(v3 - 328);
    sub_22A62981C(v2, v5, &qword_255AFEEE0);
    v6 = v0;
    v7 = *(_QWORD *)(v3 - 320);
    sub_22A62981C(v6, v7, &qword_255AFEEE0);
    v8 = *(_QWORD *)(v3 - 312);
    sub_22A62F9B8(v5, v8, &qword_255AFEEE0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 248) + 56))(v8, 0, 1, *(_QWORD *)(v3 - 240));
    v9 = *(_QWORD *)(v3 - 104);
    v10 = sub_22A690BE0(v8, *(_QWORD *)(v3 - 112));
    if (!v9)
    {
      v1 = v10;
      sub_22A629860(v8, (uint64_t *)&unk_255B00CE0);
      sub_22A629860(v7, &qword_255AFEEE0);
      sub_22A629860(v5, &qword_255AFEEE0);
      sub_22A649594(v4);
      return v1;
    }
    sub_22A629860(v8, (uint64_t *)&unk_255B00CE0);
    sub_22A629860(v7, &qword_255AFEEE0);
    sub_22A629860(v5, &qword_255AFEEE0);
    v0 = v4;
  }
  sub_22A649594(v0);
  return v1;
}

void sub_22A69D2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22A62981C(a1, v1, (uint64_t *)&unk_255B01570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 216) + 56))(v2, 1, 1, *(_QWORD *)(v3 - 208));
  sub_22A690254(v2, *(_QWORD **)(v3 - 112));
  sub_22A629860(v2, &qword_255B011F8);
  sub_22A629860(v1, (uint64_t *)&unk_255B01570);
  JUMPOUT(0x22A69D764);
}

void sub_22A69D358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22A62981C(a1, v2, &qword_255B01200);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 200) + 56))(v1, 1, 1, *(_QWORD *)(v3 - 192));
  sub_22A691498(v1, *(_QWORD *)(v3 - 112));
  sub_22A629860(v1, (uint64_t *)&unk_255B01210);
  JUMPOUT(0x22A69D40CLL);
}

void sub_22A69D41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22A6297D8(*(_QWORD *)(v2 - 72), v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = *(_QWORD *)(v2 - 280);
    sub_22A62981C(v1, v3, (uint64_t *)&unk_255B01570);
    v4 = v0;
    v5 = *(_QWORD *)(v2 - 288);
    sub_22A62981C(v4, v5, (uint64_t *)&unk_255B01570);
    v6 = *(_QWORD *)(v2 - 272);
    sub_22A62F9B8(v3, v6, (uint64_t *)&unk_255B01570);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 216) + 56))(v6, 0, 1, *(_QWORD *)(v2 - 208));
    v7 = *(_QWORD *)(v2 - 104);
    sub_22A690254(v6, *(_QWORD **)(v2 - 112));
    if (v7)
    {
      sub_22A629860(v6, &qword_255B011F8);
      sub_22A629860(v5, (uint64_t *)&unk_255B01570);
      sub_22A629860(v3, (uint64_t *)&unk_255B01570);
      JUMPOUT(0x22A69D75CLL);
    }
    sub_22A629860(v6, &qword_255B011F8);
    sub_22A629860(v5, (uint64_t *)&unk_255B01570);
    sub_22A629860(v3, (uint64_t *)&unk_255B01570);
    JUMPOUT(0x22A69D818);
  }
  sub_22A629860(v1, (uint64_t *)&unk_255B01570);
  JUMPOUT(0x22A69D680);
}

void sub_22A69D824(uint64_t a1, uint64_t a2)
{
  sub_22A69CD38(a1, a2);
}

unint64_t sub_22A69D838()
{
  unint64_t result;

  result = qword_255B01418;
  if (!qword_255B01418)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for RenderNodeError, &type metadata for RenderNodeError);
    atomic_store(result, (unint64_t *)&qword_255B01418);
  }
  return result;
}

uint64_t sub_22A69D87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_22A6A2250(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_22A69D8BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[3];
  uint64_t v11;

  if (*(_QWORD *)(a1 + 40))
  {
    v4 = *(_OWORD *)(a1 + 16);
    v10[0] = *(_OWORD *)a1;
    v10[1] = v4;
    v10[2] = *(_OWORD *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 48);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    *v2 = 0x8000000000000000;
    sub_22A6A1838(v10, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v9;
    swift_bridgeObjectRelease();
    v6 = sub_22A6A5C40();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  }
  else
  {
    sub_22A629860(a1, (uint64_t *)&unk_255AFF8B0);
    sub_22A6A0924(a2, (uint64_t)v10);
    v8 = sub_22A6A5C40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return sub_22A629860((uint64_t)v10, (uint64_t *)&unk_255AFF8B0);
  }
}

uint64_t sub_22A69D9B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_22A628A38((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_22A6A19AC(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_22A6A5C40();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_22A629860(a1, (uint64_t *)&unk_255B00CF0);
    sub_22A6A0A3C(a2, (uint64_t)v9);
    v7 = sub_22A6A5C40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B00CF0);
  }
}

uint64_t sub_22A69DA94(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_22A629860(a1, (uint64_t *)&unk_255B01510);
    v13 = sub_22A633034(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22A67AC50();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_22A6A13BC(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_22A629860((uint64_t)v8, (uint64_t *)&unk_255B01510);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_22A6A1CA8((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22A69DC6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_22A629860(a1, (uint64_t *)&unk_255B01510);
    sub_22A6A0B40(a2, (uint64_t)v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return sub_22A629860((uint64_t)v8, (uint64_t *)&unk_255B01510);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_22A6A1DCC((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
}

uint64_t sub_22A69DDE0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v5 = sub_22A633034(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_22A67AC50();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_22A6A5C40();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v7, v11);
    sub_22A6A13BC(v7, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_22A6A5C40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_22A69DED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[10];
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255AFF440);
  v4 = MEMORY[0x24BDAC7A8](v28);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v27[9] = (char *)v27 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v27[8] = (char *)v27 - v7;
  v29 = type metadata accessor for ContainerContent.Child();
  v27[3] = *(_QWORD *)(v29 - 8);
  v8 = MEMORY[0x24BDAC7A8](v29);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v27 - v11;
  v13 = sub_22A6A5C88();
  v27[4] = *(_QWORD *)(v13 - 8);
  v27[5] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 16) = sub_22A635568(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 24) = sub_22A63095C(v19);
  *(_QWORD *)(v1 + 32) = sub_22A630B04(v19);
  type metadata accessor for UnfairLock();
  v20 = swift_allocObject();
  v21 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v20 + 16) = v21;
  *v21 = 0;
  *(_QWORD *)(v1 + 40) = v20;
  *(_DWORD *)(v1 + 48) = 10;
  v22 = v1 + OBJC_IVAR____TtC10AirPlayKit27RemoteInspectorNodeRegistry_displayTree;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  swift_beginAccess();
  sub_22A6A258C(a1, v22);
  swift_endAccess();
  sub_22A62F9B8(a1, (uint64_t)v18, (uint64_t *)&unk_255B00CE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v23) != 1)
  {
    swift_retain();
    sub_22A6A5C70();
    sub_22A62F9B8((uint64_t)v18, (uint64_t)v12, &qword_255AFEEE0);
    swift_storeEnumTagMultiPayload();
    sub_22A6297D8((uint64_t)v12, (uint64_t)v10);
    v25 = (char *)&loc_22A69E1CC + 4 * byte_22A6ABD50[swift_getEnumCaseMultiPayload()];
    v27[6] = v15;
    __asm { BR              X10 }
  }
  sub_22A629860(a1, (uint64_t *)&unk_255B00CE0);
  sub_22A629860((uint64_t)v18, (uint64_t *)&unk_255B00CE0);
  return v2;
}

void sub_22A69E464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v4);
  sub_22A6297D8(a3, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_22A69E4F4 + 4 * byte_22A6ABD54[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_22A69E4F4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(v2 - 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v2 - 112) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 - 144));
  sub_22A62981C(v1, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  sub_22A69E618((_QWORD *)(v2 - 144), v2 - 104);
  __swift_destroy_boxed_opaque_existential_1(v2 - 144);
  if (v0)

  else
    sub_22A64F8C4(v2 - 104);
}

uint64_t sub_22A69E618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  __int128 v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[4];
  unsigned int v38;
  uint64_t v39;
  _BYTE *v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v13 = v12;
  v14 = v44;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v11);
  v15 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v15(v10, 0, 1, v4);
  sub_22A69EB34((uint64_t)v10, (uint64_t)v41);
  result = sub_22A629860((uint64_t)v10, (uint64_t *)&unk_255B01510);
  if (*((_QWORD *)&v42 + 1))
  {
    v17 = v41[1];
    *(_OWORD *)a2 = v41[0];
    *(_OWORD *)(a2 + 16) = v17;
    *(_OWORD *)(a2 + 32) = v42;
    *(_QWORD *)(a2 + 48) = v43;
    return result;
  }
  v39 = a2;
  v40 = v7;
  result = sub_22A629860((uint64_t)v41, (uint64_t *)&unk_255AFF8B0);
  v18 = *(_DWORD *)(v14 + 48);
  v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v14 + 48) = v19;
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  v15(v10, 0, 1, v4);
  swift_beginAccess();
  v38 = v19;
  sub_22A69DA94((uint64_t)v10, v19);
  swift_endAccess();
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
  if (result == 3)
  {
    v24 = *(_DWORD *)(v44 + 48);
    v25 = v24 + 1;
    if (!__OFADD__(v24, 1))
    {
      *(_DWORD *)(v44 + 48) = v25;
      v26 = a1[3];
      v27 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v26);
      (*(void (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
      v15(v10, 0, 1, v4);
      swift_beginAccess();
      sub_22A69DA94((uint64_t)v10, v25);
      swift_endAccess();
      goto LABEL_7;
    }
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_7:
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v28, v29);
  if (v30 == 3)
    v31 = *(_DWORD *)(v44 + 48);
  else
    v31 = 0;
  v32 = v39;
  v33 = (uint64_t)v40;
  v34 = v30 != 3;
  sub_22A628A98((uint64_t)a1, v39 + 16);
  *(_DWORD *)v32 = v38;
  *(_DWORD *)(v32 + 4) = v31;
  *(_BYTE *)(v32 + 8) = v34;
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  (*(void (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
  sub_22A635464(v32, (uint64_t)v41);
  swift_beginAccess();
  sub_22A69D8BC((uint64_t)v41, v33);
  return swift_endAccess();
}

id sub_22A69E970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;

  if (a2 < 1)
    return 0;
  v3 = v2;
  v6 = sub_22A6720CC();
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (a2 == 1)
      return v6;
    v12 = sub_22A6724A4();
    v17 = MEMORY[0x24BEE4AF8];
    if (v12)
    {
      v13 = swift_unknownObjectRetain();
      MEMORY[0x22E2DE8A0](v13);
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_22A6A5E80();
      sub_22A6A5E98();
      sub_22A6A5E74();
    }
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);
  if (v9)
  {
    v10 = v9;
    swift_retain();
    v11 = sub_22A69D87C(v10, v3, a2);
    swift_bridgeObjectRelease();
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_22A6A612C();
      swift_bridgeObjectRelease();
      if (!v16)
        goto LABEL_6;
    }
    else if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
    v14 = (void *)sub_22A6A5E50();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setChildren_, v14);

  }
  return v6;
}

uint64_t sub_22A69EB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A62F9B8(a1, (uint64_t)v7, (uint64_t *)&unk_255B01510);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    result = sub_22A629860((uint64_t)v7, (uint64_t *)&unk_255B01510);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_QWORD *)(a2 + 48) = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 32);
    if (*(_QWORD *)(v13 + 16) && (v14 = sub_22A632F64((uint64_t)v11), (v15 & 1) != 0))
    {
      sub_22A635464(*(_QWORD *)(v13 + 56) + 56 * v14, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 48) = 0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_22A69ECB8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_22A629860(v0 + OBJC_IVAR____TtC10AirPlayKit27RemoteInspectorNodeRegistry_displayTree, (uint64_t *)&unk_255B00CE0);
  return swift_deallocClassInstance();
}

uint64_t sub_22A69ED10()
{
  return type metadata accessor for RemoteInspectorNodeRegistry();
}

uint64_t type metadata accessor for RemoteInspectorNodeRegistry()
{
  uint64_t result;

  result = qword_255B01450;
  if (!qword_255B01450)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22A69ED54()
{
  unint64_t v0;

  sub_22A695A40();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_22A69EDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = sub_22A6A5C40();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x100000000) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_8:
    result = sub_22A629860((uint64_t)v10, (uint64_t *)&unk_255B01510);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_QWORD *)(a2 + 48) = 0;
    return result;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_22A633034(a1), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, *(_QWORD *)(v15 + 56) + *(_QWORD *)(v12 + 72) * v16, v11);
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v18(v10, 0, 1, v11);
  }
  else
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v18(v10, 1, 1, v11);
  }
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_8;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
  v18(v8, 0, 1, v11);
  sub_22A69EB34((uint64_t)v8, a2);
  sub_22A629860((uint64_t)v8, (uint64_t *)&unk_255B01510);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

double sub_22A69F00C@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A69EDF0(a1 | ((HIDWORD(a1) & 1) << 32), (uint64_t)v12);
  if (*((_QWORD *)&v13 + 1))
  {
    v15 = v12[0];
    v16[0] = v12[1];
    v16[1] = v13;
    v7 = v14;
    v17 = v14;
    v8 = *((_QWORD *)&v13 + 1);
    __swift_project_boxed_opaque_existential_1(v16, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
    v9 = sub_22A6A5C40();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
    sub_22A69F158((uint64_t)v6, a2);
    sub_22A629860((uint64_t)v6, (uint64_t *)&unk_255B01510);
    sub_22A64F8C4((uint64_t)&v15);
  }
  else
  {
    sub_22A629860((uint64_t)v12, (uint64_t *)&unk_255AFF8B0);
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_22A69F158@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(char *, unint64_t, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  double result;
  _QWORD v32[2];
  char *v33;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v32 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v32 - v12;
  v14 = sub_22A6A5C40();
  v15 = *(_QWORD **)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v32 - v19;
  sub_22A62F9B8(a1, (uint64_t)v13, (uint64_t *)&unk_255B01510);
  v21 = (unsigned int (*)(char *, uint64_t, uint64_t))v15[6];
  if (v21(v13, 1, v14) == 1)
  {
    sub_22A629860((uint64_t)v13, (uint64_t *)&unk_255B01510);
  }
  else
  {
    v22 = v13;
    v23 = (void (*)(char *, char *, uint64_t))v15[4];
    v23(v20, v22, v14);
    swift_beginAccess();
    v24 = *(_QWORD *)(v3 + 24);
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_22A632F64((uint64_t)v20), (v26 & 1) != 0))
    {
      v32[1] = v3;
      v27 = (void (*)(char *, unint64_t, uint64_t))v15[2];
      v27(v11, *(_QWORD *)(v24 + 56) + v15[9] * v25, v14);
      v28 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v15[7];
      v28(v11, 0, 1, v14);
      if (v21(v11, 1, v14) != 1)
      {
        v23(v18, v11, v14);
        swift_endAccess();
        v29 = (uint64_t)v33;
        v27(v33, (unint64_t)v18, v14);
        v28((char *)v29, 0, 1, v14);
        sub_22A69EB34(v29, a2);
        sub_22A629860(v29, (uint64_t *)&unk_255B01510);
        v30 = (void (*)(char *, uint64_t))v15[1];
        v30(v18, v14);
        v30(v20, v14);
        return result;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7])(v11, 1, 1, v14);
    }
    sub_22A629860((uint64_t)v11, (uint64_t *)&unk_255B01510);
    swift_endAccess();
    ((void (*)(char *, uint64_t))v15[1])(v20, v14);
  }
  *(_QWORD *)(a2 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t sub_22A69F414@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;

  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  sub_22A69EB34((uint64_t)v9, (uint64_t)v22);
  sub_22A629860((uint64_t)v9, (uint64_t *)&unk_255B01510);
  if (*((_QWORD *)&v23 + 1))
  {
    v25[0] = v22[0];
    v25[1] = v22[1];
    v25[2] = v23;
    v26 = v24;
    v12 = v22[0];
    sub_22A628A98((uint64_t)a1, a2 + 16);
    v13 = DWORD1(v25[0]);
    v14 = BYTE8(v25[0]);
    *(_DWORD *)a2 = v12;
    *(_DWORD *)(a2 + 4) = v13;
    *(_BYTE *)(a2 + 8) = v14;
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    v17 = (uint64_t)v21;
    (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    sub_22A635464(a2, (uint64_t)v22);
    swift_beginAccess();
    sub_22A69D8BC((uint64_t)v22, v17);
    swift_endAccess();
    return sub_22A64F8C4((uint64_t)v25);
  }
  else
  {
    sub_22A629860((uint64_t)v22, (uint64_t *)&unk_255AFF8B0);
    sub_22A64F880();
    swift_allocError();
    *v19 = 6;
    return swift_willThrow();
  }
}

uint64_t sub_22A69F638(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[40];
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_22A6A5C40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *a1;
  v23[0] = 0;
  sub_22A69EDF0(v11, (uint64_t)v23);
  v12 = v24;
  result = sub_22A629860((uint64_t)v23, (uint64_t *)&unk_255AFF8B0);
  if (v12)
  {
    v14 = *a2;
    v23[0] = 0;
    sub_22A69EDF0(v14, (uint64_t)v23);
    v15 = v24;
    result = sub_22A629860((uint64_t)v23, (uint64_t *)&unk_255AFF8B0);
    if (v15)
    {
      v16 = a1 + 4;
      v18 = *((_QWORD *)a1 + 5);
      v17 = *((_QWORD *)a1 + 6);
      __swift_project_boxed_opaque_existential_1(v16, v18);
      (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17);
      v19 = a2 + 4;
      v21 = *((_QWORD *)a2 + 5);
      v20 = *((_QWORD *)a2 + 6);
      __swift_project_boxed_opaque_existential_1(v19, v21);
      (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      swift_beginAccess();
      sub_22A69DC6C((uint64_t)v6, (uint64_t)v10);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_22A69F7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_22A6A5C40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_DWORD *)a1;
  swift_beginAccess();
  sub_22A69DDE0(v11, (uint64_t)v10);
  swift_endAccess();
  sub_22A629860((uint64_t)v10, (uint64_t *)&unk_255B01510);
  v12 = (_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v14, v13);
  swift_beginAccess();
  sub_22A6A0924((uint64_t)v7, (uint64_t)v19);
  swift_endAccess();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  sub_22A629860((uint64_t)v19, (uint64_t *)&unk_255AFF8B0);
  sub_22A628A98((uint64_t)v12, (uint64_t)v19);
  v15 = v20;
  v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_22A6A4200((void (*)(_QWORD *))sub_22A6A2584, v2, v15, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_22A69F9A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_22A6A5C40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  swift_beginAccess();
  sub_22A6A0B40((uint64_t)v5, (uint64_t)v8);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_22A629860((uint64_t)v8, (uint64_t *)&unk_255B01510);
}

id sub_22A69FAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  LOBYTE(v17) = 0;
  sub_22A69EDF0(a1, (uint64_t)v14);
  if (*((_QWORD *)&v15 + 1))
  {
    v17 = v14[0];
    v18 = v14[1];
    v19 = v15;
    v20 = v16;
    if (qword_255AFE878 != -1)
      swift_once();
    v4 = sub_22A6A5CAC();
    __swift_project_value_buffer(v4, (uint64_t)qword_255B08F48);
    sub_22A629A38(0xD000000000000065, 0x800000022A6ADB60, 0xD00000000000001FLL, 0x800000022A6ADBD0);
    if ((BYTE8(v17) & 1) != 0 || DWORD1(v17) != (_DWORD)a1)
    {
      v12 = sub_22A69E970((uint64_t)&v17, a2);
    }
    else
    {
      v5 = (void *)objc_opt_self();
      v6 = *((_QWORD *)&v19 + 1);
      v7 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
      (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
      v8 = (void *)sub_22A6A5D60();
      swift_bridgeObjectRelease();
      v9 = *((_QWORD *)&v19 + 1);
      v10 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
      (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
      v11 = (void *)sub_22A6A5D60();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v5, sel_nodeWithIdentifier_name_type_value_, a1, v8, 3, v11);

    }
    sub_22A64F8C4((uint64_t)&v17);
  }
  else
  {
    sub_22A629860((uint64_t)v14, (uint64_t *)&unk_255AFF8B0);
    return 0;
  }
  return v12;
}

id sub_22A69FCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  _DWORD v32[14];
  _OWORD v33[2];
  __int128 v34;
  uint64_t v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22A6A5C40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32[-2] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC10AirPlayKit27RemoteInspectorNodeRegistry_displayTree;
  swift_beginAccess();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_4:
    sub_22A629860((uint64_t)v4, (uint64_t *)&unk_255B01510);
LABEL_5:
    if (qword_255AFE878 != -1)
      swift_once();
    v11 = sub_22A6A5CAC();
    __swift_project_value_buffer(v11, (uint64_t)qword_255B08F48);
    v12 = sub_22A6A5C94();
    v13 = sub_22A6A5F64();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_22A61E000, v12, v13, "Failed to get root node", v14, 2u);
      MEMORY[0x22E2DF3F8](v14, -1, -1);
    }

    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  swift_beginAccess();
  v17 = *(_QWORD *)(v1 + 32);
  if (!*(_QWORD *)(v17 + 16) || (v18 = sub_22A632F64((uint64_t)v8), (v19 & 1) == 0))
  {
    v35 = 0;
    v34 = 0u;
    memset(v33, 0, sizeof(v33));
    goto LABEL_19;
  }
  sub_22A635464(*(_QWORD *)(v17 + 56) + 56 * v18, (uint64_t)v33);
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_19:
    sub_22A629860((uint64_t)v33, (uint64_t *)&unk_255AFF8B0);
    swift_endAccess();
    goto LABEL_20;
  }
  sub_22A635464((uint64_t)v33, (uint64_t)v32);
  sub_22A629860((uint64_t)v33, (uint64_t *)&unk_255AFF8B0);
  swift_endAccess();
  v20 = v32[0];
  sub_22A64F8C4((uint64_t)v32);
  v21 = sub_22A69FAD0(v20, 3);
  if (!v21)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_5;
  }
  v22 = v21;
  if (qword_255AFE878 != -1)
    swift_once();
  v23 = sub_22A6A5CAC();
  __swift_project_value_buffer(v23, (uint64_t)qword_255B08F48);
  sub_22A629A38(0xD000000000000065, 0x800000022A6ADB60, 0x75636F44656B616DLL, 0xEE002928746E656DLL);
  v24 = (void *)objc_opt_self();
  v25 = (void *)sub_22A6A5D60();
  v26 = (void *)sub_22A6A5D60();
  v15 = objc_msgSend(v24, sel_nodeWithIdentifier_name_type_value_, 0, v25, 9, v26);

  objc_msgSend(v15, sel_setNodeType_, 9);
  v27 = (void *)sub_22A6A5D60();
  objc_msgSend(v15, sel_setDocumentURL_, v27);

  v28 = (void *)sub_22A6A5D60();
  objc_msgSend(v15, sel_setXmlVersion_, v28);

  objc_msgSend(v15, sel_setChildNodeCount_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01520);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_22A6ABDC0;
  *(_QWORD *)(v29 + 32) = v22;
  *(_QWORD *)&v33[0] = v29;
  sub_22A6A5E74();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B00C50);
  v30 = (void *)sub_22A6A5E50();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setChildren_, v30);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

void sub_22A6A01F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52[2];
  uint64_t v53;
  _QWORD v54[5];
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v50 = a3;
  v51 = a4;
  v7 = sub_22A6A5C88();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v43 - v15;
  v55[0] = sub_22A6312E0(MEMORY[0x24BEE4AF8]);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v47(v16, 1, 1, v17);
  sub_22A6A5C70();
  sub_22A646AE0((uint64_t)v16, (uint64_t)v10, a1, (uint64_t)v55);
  v49 = v4;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_22A629860((uint64_t)v16, (uint64_t *)&unk_255B00CE0);
  v58 = v55[0];
  v18 = a2 + OBJC_IVAR____TtC10AirPlayKit27RemoteInspectorNodeRegistry_displayTree;
  swift_beginAccess();
  sub_22A62F9B8(v18, (uint64_t)v14, (uint64_t *)&unk_255B00CE0);
  v19 = v49;
  v20 = sub_22A690BE0((uint64_t)v14, a1);
  sub_22A629860((uint64_t)v14, (uint64_t *)&unk_255B00CE0);
  if (v19)
    goto LABEL_2;
  v49 = v18;
  v46 = v16;
  v45 = v17;
  if (!*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_255AFE878 != -1)
    swift_once();
  v21 = sub_22A6A5CAC();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_255B08F48);
  swift_bridgeObjectRetain();
  v43[1] = v22;
  v23 = sub_22A6A5C94();
  v24 = sub_22A6A5F70();
  v25 = os_log_type_enabled(v23, v24);
  v48 = a2;
  v44 = a1;
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v26 = 134217984;
    v55[0] = *(_QWORD *)(v20 + 16);
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v23, v24, "Merging %ld actions", v26, 0xCu);
    MEMORY[0x22E2DF3F8](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v27 = v45;
  v28 = (uint64_t)v46;
  v29 = v47;
  v30 = *(_QWORD *)(v20 + 16);
  if (v30)
  {
    v31 = v20 + 32;
    v43[0] = v20;
    swift_bridgeObjectRetain();
    v32 = &qword_255B01080;
    v33 = v49;
    do
    {
      sub_22A628A98(v31, (uint64_t)v54);
      __swift_instantiateConcreteTypeFromMangledName(v32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B01530);
      if (swift_dynamicCast())
      {
        v34 = v32;
        sub_22A628A38(v52, (uint64_t)v55);
        v35 = v56;
        v36 = v57;
        __swift_project_boxed_opaque_existential_1(v55, v56);
        v54[3] = type metadata accessor for RemoteInspectorNodeRegistry();
        v54[4] = &off_24F4714A8;
        v54[0] = v48;
        v37 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 16);
        swift_retain();
        v37(v54, v58, v50, v51, v35, v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
        v33 = v49;
        v32 = v34;
      }
      else
      {
        v53 = 0;
        memset(v52, 0, sizeof(v52));
        sub_22A629860((uint64_t)v52, &qword_255B01538);
      }
      v31 += 40;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v38 = v43[0];
    v27 = v45;
    v28 = (uint64_t)v46;
    v29 = v47;
  }
  else
  {
    v38 = v20;
    v33 = v49;
  }
  swift_bridgeObjectRelease();
  sub_22A62F9B8(v44, v28, &qword_255AFEEE0);
  v29((char *)v28, 0, 1, v27);
  swift_beginAccess();
  sub_22A696DA8(v28, v33);
  swift_endAccess();
  swift_bridgeObjectRetain();
  v39 = sub_22A6A5C94();
  v40 = sub_22A6A5F70();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v41 = 134217984;
    v42 = *(_QWORD *)(v38 + 16);
    swift_bridgeObjectRelease();
    v55[0] = v42;
    sub_22A6A6018();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22A61E000, v39, v40, "Merged %ld actions", v41, 0xCu);
    MEMORY[0x22E2DF3F8](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

double sub_22A6A07F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  double result;
  uint64_t v19;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22A632FD0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v19 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22A67A404();
      v11 = v19;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 72 * v8;
    v13 = *(_QWORD *)(v12 + 8);
    v14 = *(_QWORD *)(v12 + 32);
    v15 = *(_BYTE *)(v12 + 40);
    v16 = *(_BYTE *)(v12 + 41);
    v17 = *(_BYTE *)(v12 + 64);
    *(_QWORD *)a3 = *(_QWORD *)v12;
    *(_QWORD *)(a3 + 8) = v13;
    *(_OWORD *)(a3 + 16) = *(_OWORD *)(v12 + 16);
    *(_QWORD *)(a3 + 32) = v14;
    *(_BYTE *)(a3 + 40) = v15;
    *(_BYTE *)(a3 + 41) = v16;
    *(_OWORD *)(a3 + 48) = *(_OWORD *)(v12 + 48);
    *(_BYTE *)(a3 + 64) = v17;
    sub_22A6A0C70(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_BYTE *)(a3 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_22A6A0924@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  double result;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22A632F64(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22A67A7BC();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_22A6A5C40();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56) + 56 * v6;
    v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v13;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(v12 + 48);
    sub_22A6A0E5C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_22A6A0A3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22A632F64(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22A67AA10();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_22A6A5C40();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_22A628A38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_22A6A1110(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22A6A0B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_22A632F64(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22A67AE70();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_22A6A5C40();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(_QWORD *)(v12 + 72) * v6;
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10 + v13, v11);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, *(_QWORD *)(v9 + 56) + v13, v11);
    sub_22A6A157C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v15 = sub_22A6A5C40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

unint64_t sub_22A6A0C70(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22A6A6054();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22A6A6258();
        swift_bridgeObjectRetain();
        sub_22A6A5DE4();
        v9 = sub_22A6A62A0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 72 * v3;
          v15 = (const void *)(v14 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v15 + 72 || (v16 = v3 == v6, v3 = v6, !v16))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22A6A0E5C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_22A6A5C40();
  v38 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_22A6A6054();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v37 = (result + 1) & v11;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v36(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_22A6A5D30();
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 56 * a1;
            v25 = (__int128 *)(v23 + 56 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 56))
            {
              v26 = *v25;
              v27 = v25[1];
              v28 = v25[2];
              *(_QWORD *)(v24 + 48) = *((_QWORD *)v25 + 6);
              *(_OWORD *)(v24 + 16) = v27;
              *(_OWORD *)(v24 + 32) = v28;
              *(_OWORD *)v24 = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22A6A1110(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_22A6A5C40();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_22A6A6054();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_22A6A5D30();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 40 * a1;
            v25 = (__int128 *)(v23 + 40 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 40))
            {
              v26 = *v25;
              v27 = v25[1];
              *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
              *(_OWORD *)v24 = v26;
              *(_OWORD *)(v24 + 16) = v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22A6A13BC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22A6A6054();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_DWORD *)(v9 + 4 * v6);
        result = MEMORY[0x22E2DECA8](*(_QWORD *)(a2 + 40), *v10, 4);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_DWORD *)(v9 + 4 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_22A6A5C40() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22A6A157C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v4 = sub_22A6A5C40();
  v33 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_22A6A6054();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v32 = (result + 1) & v11;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12 * v10;
        v16 = v13;
        v31(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_22A6354A0((unint64_t *)&qword_255AFEC98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v17 = sub_22A6A5D30();
        result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            v21 = v12 * a1;
            if (v12 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v21 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = v22 + v21;
            if (v21 < v15 || result >= v22 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v8 = v14;
              v13 = v16;
            }
            else
            {
              a1 = v10;
              v23 = v21 == v15;
              v8 = v14;
              v13 = v16;
              if (!v23)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v16;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22A6A1838(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22A632F64(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_22A6A1FFC((uint64_t)a1, v20[7] + 56 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_22A67A7BC();
      goto LABEL_7;
    }
    sub_22A6341D8(v17, a3 & 1);
    v22 = sub_22A632F64(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_22A6A1FFC((uint64_t)a1, v20[7] + 56 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_22A6A1F48(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6A19AC(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22A632F64(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_22A628A38(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_22A67AA10();
      goto LABEL_7;
    }
    sub_22A6345A0(v17, a3 & 1);
    v23 = sub_22A632F64(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_22A6A2038(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6A1B2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_22A632FD0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_22A67A404();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_22A6A2214(a1, v18[7] + 72 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 72 * v12;
    *(_OWORD *)v23 = *(_OWORD *)a1;
    v24 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    *(_BYTE *)(v23 + 64) = *(_BYTE *)(a1 + 64);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 16) = v24;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_22A633B24(v15, a4 & 1);
  v20 = sub_22A632FD0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_22A6A2214(a1, v18[7] + 72 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6A1CA8(uint64_t a1, unsigned int a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_22A633034(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_22A6A5C40();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_22A6A20DC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22A67AC50();
      goto LABEL_7;
    }
    sub_22A634948(v13, a3 & 1);
    v20 = sub_22A633034(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_22A6A20DC(v10, a2, a1, v16);
    }
  }
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6A1DCC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_22A6A5C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_22A632F64(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_22A67AE70();
      goto LABEL_7;
    }
    sub_22A634C7C(v17, a3 & 1);
    v22 = sub_22A632F64(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_22A6A2168(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_22A6A6204();
  __break(1u);
  return result;
}

uint64_t sub_22A6A1F48(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_22A6A5C40();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 56 * a1;
  *(_QWORD *)(v11 + 48) = *((_QWORD *)a3 + 6);
  v12 = a3[2];
  v13 = *a3;
  *(_OWORD *)(v11 + 16) = a3[1];
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)v11 = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

uint64_t sub_22A6A1FFC(uint64_t a1, uint64_t a2)
{
  assignWithTake for RemoteInspectorNodeRegistryEntry(a2, a1);
  return a2;
}

uint64_t sub_22A6A2038(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_22A6A5C40();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_22A628A38(a3, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_22A6A20DC(unint64_t a1, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  v7 = a4[7];
  v8 = sub_22A6A5C40();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_22A6A2168(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_22A6A5C40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72) * a1;
  v12 = v8 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v12, a2, v9);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a4[7] + v11, a3, v9);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_22A6A2214(uint64_t a1, uint64_t a2)
{
  assignWithTake for AirPlayOverlayAssetStore.Asset(a2, a1);
  return a2;
}

uint64_t sub_22A6A2250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v7 = sub_22A6A5C40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v30 - v14;
  result = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v30[1] = v3;
    v18 = a2;
    v19 = (_QWORD *)(a1 + 32);
    v34 = v18;
    v31 = (uint64_t *)(v18 + 32);
    v33 = a3 - 1;
    v20 = __OFSUB__(a3, 1);
    v35 = v20;
    v30[0] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v21 = v19[3];
      v22 = v19[4];
      __swift_project_boxed_opaque_existential_1(v19, v21);
      (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      sub_22A62F9B8((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_255B01510);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
      {
        sub_22A629860((uint64_t)v13, (uint64_t *)&unk_255B01510);
        v36 = 0u;
        v37 = 0u;
        v38 = 0u;
        v39 = 0;
      }
      else
      {
        v23 = (uint64_t)v32;
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v32, v13, v7);
        v24 = v31;
        swift_beginAccess();
        v25 = *v24;
        if (*(_QWORD *)(v25 + 16) && (v26 = sub_22A632F64(v23), (v27 & 1) != 0))
        {
          sub_22A635464(*(_QWORD *)(v25 + 56) + 56 * v26, (uint64_t)&v36);
        }
        else
        {
          v39 = 0;
          v37 = 0u;
          v38 = 0u;
          v36 = 0u;
        }
        swift_endAccess();
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v7);
      }
      result = sub_22A629860((uint64_t)v15, (uint64_t *)&unk_255B01510);
      if (*((_QWORD *)&v38 + 1))
      {
        v40[0] = v36;
        v40[1] = v37;
        v40[2] = v38;
        v41 = v39;
        if (v35)
        {
          __break(1u);
          return result;
        }
        v28 = sub_22A69E970(v40, v33);
        v29 = sub_22A64F8C4((uint64_t)v40);
        if (v28)
        {
          MEMORY[0x22E2DE8A0](v29);
          if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22A6A5E80();
          sub_22A6A5E98();
          sub_22A6A5E74();
        }
      }
      else
      {
        sub_22A629860((uint64_t)&v36, (uint64_t *)&unk_255AFF8B0);
      }
      v19 += 5;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        return v42;
      }
    }
  }
  return result;
}

uint64_t sub_22A6A2584(_QWORD *a1)
{
  return sub_22A69F9A4(a1);
}

uint64_t sub_22A6A258C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t NullAirPlayConnectionProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NullAirPlayConnectionProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t NullAirPlayConnectionProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NullAirPlayConnectionProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t NullAirPlayConnectionProvider.makeAirPlayConnection(from:)()
{
  return swift_task_switch();
}

uint64_t sub_22A6A2618()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for NullAirPlayConnection();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A6A2668()
{
  return swift_task_switch();
}

uint64_t type metadata accessor for NullAirPlayConnectionProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for NullAirPlayConnectionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NullAirPlayConnectionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of AirPlayOverlayAdaptorDelegate.didConnect(adaptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AirPlayOverlayAdaptorDelegate.adaptor(_:connectionDidFailWithError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AirPlayOverlayAdaptorDelegate.didDisconnect(adaptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AirPlayOverlayActionSending.assertConnected()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AirPlayOverlayActionSending.sendAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_22A62ED7C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.activate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AirPlayOverlayAdapting.connect()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 56) + *(_QWORD *)(a2 + 56));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A62E6B0;
  return v7(a1, a2);
}

unint64_t sub_22A6A27F0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6A2814();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22A6A2814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255AFF9D0;
  if (!qword_255AFF9D0)
  {
    v1 = type metadata accessor for ImageContent(255);
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for ImageContent, v1);
    atomic_store(result, (unint64_t *)&qword_255AFF9D0);
  }
  return result;
}

uint64_t sub_22A6A285C(uint64_t a1, uint64_t a2)
{
  return sub_22A637740(a1, a2);
}

uint64_t dispatch thunk of RenderActionProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RenderActionProtocol.serialize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22A6A2880(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v20 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEFA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22A6A74C0;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v21 = 0x6E6F6974636E7566;
  v22 = 0xE800000000000000;
  sub_22A6A6084();
  *(_QWORD *)(inited + 88) = 0x6E6F69746361;
  *(_QWORD *)(inited + 96) = 0xE600000000000000;
  v21 = a1;
  v22 = a2;
  swift_bridgeObjectRetain();
  sub_22A6A6084();
  *(_QWORD *)(inited + 144) = 0x55557463656A626FLL;
  *(_QWORD *)(inited + 152) = 0xEA00000000004449;
  sub_22A62F9B8(a3, (uint64_t)v9, (uint64_t *)&unk_255B01510);
  v11 = sub_22A6A5C40();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_22A6A2ABC((uint64_t)v9);
    *(_OWORD *)(inited + 160) = 0u;
    *(_OWORD *)(inited + 176) = 0u;
    *(_QWORD *)(inited + 192) = 0;
  }
  else
  {
    v13 = sub_22A6A5C1C();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    v21 = v13;
    v22 = v15;
    sub_22A6A6084();
  }
  *(_QWORD *)(inited + 200) = 0x746E656D75677261;
  *(_QWORD *)(inited + 208) = 0xE900000000000073;
  sub_22A62F9B8(v20, inited + 216, &qword_255AFEFA8);
  v16 = sub_22A630E48(inited);
  v17 = sub_22A631888(v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_22A6A2ABC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B01510);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Animatable.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a2;
  v35 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v6;
  v36 = v7;
  v8 = type metadata accessor for Animatable(0, v6, v7, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v35 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v38 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v19 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v21 = (char *)&v35 - v20;
  v22 = (char *)&v35 + *(int *)(v19 + 48) - v20;
  v37 = v9;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23((char *)&v35 - v20, a1, v8);
  v23(v22, v40, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23(v15, (uint64_t)v21, v8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_4:
        v26 = type metadata accessor for Animation(0, v39, v36, v25);
        MEMORY[0x22E2DF32C](&protocol conformance descriptor for Animation<A>, v26);
        v27 = sub_22A6A5EB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        v29 = v37;
        goto LABEL_12;
      }
    }
    else
    {
      v23(v12, (uint64_t)v21, v8);
      if (swift_getEnumCaseMultiPayload() == 2)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v35;
    v23(v17, (uint64_t)v21, v8);
    if (!swift_getEnumCaseMultiPayload())
    {
      v30 = v28;
      v31 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v32 = v39;
      v31(v5, v22, v39);
      v27 = sub_22A6A5D54();
      v33 = *(void (**)(char *, uint64_t))(v30 + 8);
      v33(v5, v32);
      v33(v17, v32);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v39);
  }
  v27 = 0;
  v29 = v38;
  v8 = TupleTypeMetadata2;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v8);
  return v27 & 1;
}

uint64_t type metadata accessor for Animatable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Animatable);
}

uint64_t Animatable.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, v11, a2);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_22A6A6264();
    v13 = type metadata accessor for Animation(0, v3, *(_QWORD *)(a2 + 24), v12);
    MEMORY[0x22E2DF32C](&protocol conformance descriptor for Animation<A>, v13);
    sub_22A6A5EA4();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_22A6A6264();
    sub_22A6A5D3C();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

uint64_t Animatable.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_22A6A6258();
  Animatable.hash(into:)((uint64_t)v3, a1);
  return sub_22A6A62A0();
}

uint64_t sub_22A6A2FA0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_22A6A6258();
  Animatable.hash(into:)((uint64_t)v4, a2);
  return sub_22A6A62A0();
}

uint64_t sub_22A6A2FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Animatable.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

void sub_22A6A2FEC()
{
  JUMPOUT(0x22E2DF32CLL);
}

uint64_t sub_22A6A2FFC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_22A6A3074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 3)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 2)
    {
      *a1 = *a2;
      v11 = 2;
    }
    else
    {
      if (v9 != 1)
      {
        (*(void (**)(uint64_t *))(v4 + 16))(a1);
        *((_BYTE *)v3 + v5) = 0;
        return v3;
      }
      *a1 = *a2;
      v11 = 1;
    }
    *((_BYTE *)a1 + v5) = v11;
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_22A6A31A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2 || v4 == 1)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_22A6A31EC + 4 * byte_22A6ABEBD[v5]))();
  }
}

_QWORD *sub_22A6A324C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *a1 = *a2;
    v8 = 2;
  }
  else
  {
    if (v6 != 1)
    {
      (*(void (**)(_QWORD *))(v4 + 16))(a1);
      *((_BYTE *)a1 + v5) = 0;
      return a1;
    }
    *a1 = *a2;
    v8 = 1;
  }
  *((_BYTE *)a1 + v5) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22A6A333C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2 || v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *a1 = *a2;
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        *((_BYTE *)a1 + v7) = 0;
        return a1;
      }
      *a1 = *a2;
      v12 = 1;
    }
    *((_BYTE *)a1 + v7) = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_22A6A34EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *a1 = *a2;
    v8 = 2;
  }
  else if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_22A6A35D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2 || v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *a1 = *a2;
      v12 = 2;
    }
    else if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_22A6A3784(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A6A3848 + 4 * byte_22A6ABEE0[(v4 - 1)]))();
}

void sub_22A6A3894(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_22A6A3A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A6A3A84 + 4 * byte_22A6ABEEE[v3]))();
}

void sub_22A6A3ACC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unint64_t sub_22A6A3B94(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t inited;

  if (a3 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A77C0;
    *(_QWORD *)(inited + 32) = 0x6C6169726574616DLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEC80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22A6A74C0;
    *(_QWORD *)(inited + 32) = 114;
    *(_QWORD *)(inited + 40) = 0xE100000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 88) = 103;
    *(_QWORD *)(inited + 96) = 0xE100000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 144) = 98;
    *(_QWORD *)(inited + 152) = 0xE100000000000000;
    sub_22A6A6084();
    *(_QWORD *)(inited + 200) = 97;
    *(_QWORD *)(inited + 208) = 0xE100000000000000;
  }
  sub_22A6A6084();
  return sub_22A630814(inited);
}

unint64_t sub_22A6A3DD4@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_22A6A3B94(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  *a1 = result;
  return result;
}

unint64_t sub_22A6A3E00(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6A3E24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6A3E24()
{
  unint64_t result;

  result = qword_255B01710;
  if (!qword_255B01710)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_255B01710);
  }
  return result;
}

unint64_t sub_22A6A3E68(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6A3E8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6A3E8C()
{
  unint64_t result;

  result = qword_255B01718;
  if (!qword_255B01718)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_255B01718);
  }
  return result;
}

BOOL static AirPlayOverlayCoordinatorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AirPlayOverlayCoordinatorError.hash(into:)()
{
  return sub_22A6A6264();
}

uint64_t AirPlayOverlayCoordinatorError.hashValue.getter()
{
  sub_22A6A6258();
  sub_22A6A6264();
  return sub_22A6A62A0();
}

unint64_t sub_22A6A3F54()
{
  unint64_t result;

  result = qword_255B01720;
  if (!qword_255B01720)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for AirPlayOverlayCoordinatorError, &type metadata for AirPlayOverlayCoordinatorError);
    atomic_store(result, (unint64_t *)&qword_255B01720);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirPlayOverlayCoordinatorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A6A3FE4 + 4 * byte_22A6AC005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A6A4018 + 4 * byte_22A6AC000[v4]))();
}

uint64_t sub_22A6A4018(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A6A4020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A6A4028);
  return result;
}

uint64_t sub_22A6A4034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A6A403CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A6A4040(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A6A4048(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPlayOverlayCoordinatorError()
{
  return &type metadata for AirPlayOverlayCoordinatorError;
}

uint64_t sub_22A6A4064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_22A6A41B8(a1, (uint64_t)v12);
  v6 = v13;
  if (v13)
  {
    v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_22A629860((uint64_t)v12, (uint64_t *)&unk_255B00CF0);
    v8 = sub_22A630814(MEMORY[0x24BEE4AF8]);
  }
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4);
  v10 = sub_22A6A44AC(v8, v9);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v12[0] = MEMORY[0x24BEE4AF8];
    MEMORY[0x24BDAC7A8](v10);
    sub_22A6A475C(v9, (void (*)(uint64_t, uint64_t, _BYTE *))sub_22A6A4750);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v12[0];
  }
}

uint64_t sub_22A6A41B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B00CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6A4200(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  if (result)
  {
    v7 = *(_QWORD *)(result + 16);
    if (v7)
    {
      v8 = (_QWORD *)(result + 32);
      do
      {
        a1(v8);
        v9 = v8[3];
        v10 = v8[4];
        __swift_project_boxed_opaque_existential_1(v8, v9);
        sub_22A6A4200(a1, a2, v9, v10);
        v8 += 5;
        --v7;
      }
      while (v7);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22A6A42BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5, unsigned int a6)
{
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  if (!*(_QWORD *)(a4 + 16))
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
    return sub_22A629860((uint64_t)&v30, &qword_255AFEFA8);
  }
  swift_bridgeObjectRetain();
  v12 = sub_22A632FD0(a1, a2);
  if ((v13 & 1) == 0)
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
    swift_bridgeObjectRelease();
    return sub_22A629860((uint64_t)&v30, &qword_255AFEFA8);
  }
  sub_22A633AAC(*(_QWORD *)(a4 + 56) + 40 * v12, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
    return sub_22A629860((uint64_t)&v30, &qword_255AFEFA8);
  v33[0] = v30;
  v33[1] = v31;
  v34 = v32;
  if ((MEMORY[0x22E2DEAD4](v33, a3) & 1) == 0)
  {
    sub_22A633AAC(a3, (uint64_t)&v30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v28;
      v15 = v29;
      v16 = *a5;
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      v14 = sub_22A6A606C();
      v15 = v18;
      v16 = *a5;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a5 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_22A62FC14(0, v16[2] + 1, 1, v16);
      *a5 = v16;
    }
    v20 = v16[2];
    v21 = v16[3];
    v22 = v20 + 1;
    if (v20 >= v21 >> 1)
    {
      v27 = v20 + 1;
      v24 = v16;
      v25 = v16[2];
      v26 = sub_22A62FC14((_QWORD *)(v21 > 1), v20 + 1, 1, v24);
      v20 = v25;
      v22 = v27;
      v16 = v26;
      *a5 = v26;
    }
    v16[2] = v22;
    v23 = &v16[6 * v20];
    v23[4] = a6;
    v23[5] = a1;
    v23 += 4;
    v23[2] = a2;
    v23[3] = v14;
    v23[4] = v15;
    *((_BYTE *)v23 + 40) = 3;
  }
  return sub_22A649524((uint64_t)v33);
}

uint64_t sub_22A6A44AC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v20 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
LABEL_8:
      v10 = *(_QWORD *)(v3 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v23 = *v11;
      *((_QWORD *)&v23 + 1) = v12;
      sub_22A633AAC(v10 + 40 * v9, (uint64_t)&v24);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v13 < v21)
    {
      v14 = *(_QWORD *)(v20 + 8 * v13);
      if (v14)
        goto LABEL_12;
      v15 = v4 + 2;
      ++v4;
      if (v13 + 1 < v21)
      {
        v14 = *(_QWORD *)(v20 + 8 * v15);
        if (v14)
          goto LABEL_15;
        v4 = v13 + 1;
        if (v13 + 2 < v21)
        {
          v14 = *(_QWORD *)(v20 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          v4 = v13 + 2;
          if (v13 + 3 < v21)
          {
            v14 = *(_QWORD *)(v20 + 8 * (v13 + 3));
            if (v14)
            {
              v13 += 3;
              goto LABEL_12;
            }
            v15 = v13 + 4;
            v4 = v13 + 3;
            if (v13 + 4 < v21)
              break;
          }
        }
      }
    }
LABEL_29:
    v7 = 0;
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    v23 = 0u;
LABEL_30:
    sub_22A6A4924((uint64_t)&v23, (uint64_t)&v27);
    if (!v28)
      return 1;
    v23 = v29;
    v24 = v30;
    *(_QWORD *)&v25 = v31;
    v16 = sub_22A632FD0(v27, v28);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_22A649524((uint64_t)&v23);
      return 0;
    }
    sub_22A633AAC(*(_QWORD *)(a2 + 56) + 40 * v16, (uint64_t)v22);
    v19 = MEMORY[0x22E2DEAD4](v22, &v23);
    sub_22A649524((uint64_t)v22);
    result = sub_22A649524((uint64_t)&v23);
    if ((v19 & 1) == 0)
      return 0;
  }
  v14 = *(_QWORD *)(v20 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v13 = v15;
LABEL_12:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
    goto LABEL_8;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v21)
    {
      v4 = v21 - 1;
      goto LABEL_29;
    }
    v14 = *(_QWORD *)(v20 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22A6A4750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_22A6A42BC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD ***)(v3 + 24), *(_DWORD *)(v3 + 32));
}

uint64_t sub_22A6A475C(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[40];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_22A633AAC(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_22A629860((uint64_t)v18, &qword_255AFFBC8);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_22A6A4924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255B007D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A6A496C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_22A6A4978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A49F8 + 4 * byte_22A6AC11C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A49F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A4B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A4B94 + 4 * byte_22A6AC120[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A4B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A4CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A4D28 + 4 * byte_22A6AC124[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A4D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A4E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A4EC4 + 4 * byte_22A6AC128[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A4EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A4FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A5058 + 4 * byte_22A6AC12C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A5058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A516C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A51EC + 4 * byte_22A6AC130[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A51EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

void sub_22A6A5300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for ContainerContent.Child();
  MEMORY[0x24BDAC7A8](v1);
  sub_22A6297D8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_22A6A5380 + 4 * byte_22A6AC134[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22A6A5380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 48) = __swift_instantiateConcreteTypeFromMangledName(&qword_255AFEEE0);
  *(_QWORD *)(v1 - 40) = sub_22A661F80((unint64_t *)&qword_255B01590, &qword_255AFEEE0, (uint64_t (*)(void))sub_22A662144, (uint64_t (*)(void))sub_22A662188);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_22A62981C(v0, (uint64_t)boxed_opaque_existential_1, &qword_255AFEEE0);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v1 - 72);
  return v5;
}

uint64_t sub_22A6A54B0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22A6354A0(&qword_255B003D8, (uint64_t (*)(uint64_t))type metadata accessor for ContainerContent.Child, (uint64_t)&protocol conformance descriptor for ContainerContent.Child);
  result = sub_22A6354A0(&qword_255B01750, (uint64_t (*)(uint64_t))type metadata accessor for ContainerContent.Child, (uint64_t)&protocol conformance descriptor for ContainerContent.Child);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t static Point.zero.getter()
{
  return 0;
}

unint64_t Point.y.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return __PAIR64__(a3, HIDWORD(a2));
}

uint64_t static Point.center.getter()
{
  return 1056964608;
}

uint64_t Point.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5;
  uint64_t v7;

  v7 = __PAIR64__(a4, HIDWORD(a3));
  v5 = HIDWORD(a4);
  HorizontalPosition.hash(into:)(a1, a2, a3);
  return VerticalPosition.hash(into:)(a1, v7, v5);
}

BOOL static Point.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  *(_QWORD *)&v9 = a5;
  *((_QWORD *)&v9 + 1) = a6;
  v6 = *(_QWORD *)((char *)&v9 + 4);
  LOBYTE(v9) = a2;
  *(_QWORD *)((char *)&v9 + 4) = __PAIR64__(a3, HIDWORD(a2));
  BYTE12(v9) = BYTE4(a3);
  v7 = v9;
  LOBYTE(v9) = a5;
  *(_QWORD *)((char *)&v9 + 4) = v6;
  BYTE12(v9) = BYTE4(a6);
  return sub_22A6A57C4(a1, v7, *((uint64_t *)&v7 + 1), a4, v9, *((uint64_t *)&v9 + 1));
}

uint64_t Point.hashValue.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3;
  uint64_t v5;
  unint64_t v6;
  _OWORD v8[4];

  v3 = a2;
  *(_QWORD *)&v8[0] = a2;
  *((_QWORD *)&v8[0] + 1) = a3;
  v5 = *(_QWORD *)((char *)v8 + 4);
  v6 = HIDWORD(a3);
  sub_22A6A6258();
  HorizontalPosition.hash(into:)((uint64_t)v8, a1, v3);
  VerticalPosition.hash(into:)((uint64_t)v8, v5, v6);
  return sub_22A6A62A0();
}

uint64_t sub_22A6A5664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 12);
  v3 = *(_BYTE *)(v0 + 8);
  v4 = *(_BYTE *)(v0 + 20);
  sub_22A6A6258();
  HorizontalPosition.hash(into:)((uint64_t)v6, v1, v3);
  VerticalPosition.hash(into:)((uint64_t)v6, v2, v4);
  return sub_22A6A62A0();
}

uint64_t sub_22A6A56D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 12);
  v5 = *(_BYTE *)(v1 + 8);
  v6 = *(_BYTE *)(v1 + 20);
  HorizontalPosition.hash(into:)(a1, v3, v5);
  return VerticalPosition.hash(into:)(a1, v4, v6);
}

uint64_t sub_22A6A5714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  _BYTE v6[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 12);
  v3 = *(_BYTE *)(v0 + 8);
  v4 = *(_BYTE *)(v0 + 20);
  sub_22A6A6258();
  HorizontalPosition.hash(into:)((uint64_t)v6, v1, v3);
  VerticalPosition.hash(into:)((uint64_t)v6, v2, v4);
  return sub_22A6A62A0();
}

BOOL sub_22A6A577C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v4;

  *(_QWORD *)((char *)&v4 + 4) = *(_QWORD *)(a1 + 12);
  BYTE12(v4) = *(_BYTE *)(a1 + 20);
  v2 = v4;
  LOBYTE(v4) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((char *)&v4 + 4) = *(_QWORD *)(a2 + 12);
  BYTE12(v4) = *(_BYTE *)(a2 + 20);
  return sub_22A6A57C4(*(_QWORD *)a1, v2, *((uint64_t *)&v2 + 1), *(_QWORD *)a2, v4, *((uint64_t *)&v4 + 1));
}

BOOL sub_22A6A57C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  float v7;
  char v8;
  unint64_t v10;
  char v11;
  _BOOL8 result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  float v18;
  float v19;

  v6 = BYTE4(a6);
  v7 = *((float *)&a4 + 1);
  v8 = BYTE4(a3);
  v10 = __PAIR64__(a3, HIDWORD(a2));
  v18 = *((float *)&a5 + 1);
  v19 = *(float *)&a6;
  if (!(_BYTE)a2)
  {
    result = 0;
    if ((_BYTE)a5)
      return result;
    goto LABEL_10;
  }
  if (a2 != 1)
  {
    result = 0;
    if (a5 != 2)
      return result;
LABEL_10:
    if (*(float *)&a1 != *(float *)&a4)
      return result;
    goto LABEL_11;
  }
  if (a5 != 1)
    return 0;
  v11 = sub_22A6407F0(a1, a4);
  result = 0;
  if ((v11 & 1) != 0 && *((float *)&a1 + 1) == v7)
  {
LABEL_11:
    if (v8)
    {
      if (v8 == 1)
      {
        if (v6 == 1)
        {
          if ((v10 & 1) != 0)
            v13 = 0x6D6F74746F62;
          else
            v13 = 7368564;
          if ((v10 & 1) != 0)
            v14 = 0xE600000000000000;
          else
            v14 = 0xE300000000000000;
          if ((LOBYTE(v18) & 1) != 0)
            v15 = 0x6D6F74746F62;
          else
            v15 = 7368564;
          if ((LOBYTE(v18) & 1) != 0)
            v16 = 0xE600000000000000;
          else
            v16 = 0xE300000000000000;
          if (v13 == v15 && v14 == v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((float *)&v10 + 1) != v19)
              return 0;
          }
          else
          {
            v17 = sub_22A6A61D4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0 || *((float *)&v10 + 1) != v19)
              return 0;
          }
          return 1;
        }
        return 0;
      }
      if (v6 != 2)
        return 0;
    }
    else if (v6)
    {
      return 0;
    }
    return *(float *)&v10 == v18;
  }
  return result;
}

unint64_t sub_22A6A5984()
{
  unint64_t result;

  result = qword_255B01758;
  if (!qword_255B01758)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Point, &type metadata for Point);
    atomic_store(result, (unint64_t *)&qword_255B01758);
  }
  return result;
}

unint64_t sub_22A6A59C8(uint64_t a1)
{
  unint64_t result;

  result = sub_22A6A59EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A6A59EC()
{
  unint64_t result;

  result = qword_255B01760;
  if (!qword_255B01760)
  {
    result = MEMORY[0x22E2DF32C](&protocol conformance descriptor for Point, &type metadata for Point);
    atomic_store(result, (unint64_t *)&qword_255B01760);
  }
  return result;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Point(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Point(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Point()
{
  return &type metadata for Point;
}

uint64_t sub_22A6A5AE4()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_22A6A5AF0()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_22A6A5AFC()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_22A6A5B08()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_22A6A5B14()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_22A6A5B20()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_22A6A5B2C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_22A6A5B38()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_22A6A5B44()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_22A6A5B50()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_22A6A5B5C()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_22A6A5B68()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_22A6A5B74()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_22A6A5B80()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_22A6A5B8C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22A6A5B98()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_22A6A5BA4()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_22A6A5BB0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_22A6A5BBC()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_22A6A5BC8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_22A6A5BD4()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_22A6A5BE0()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_22A6A5BEC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_22A6A5BF8()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_22A6A5C04()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_22A6A5C10()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_22A6A5C1C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_22A6A5C28()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t _s10AirPlayKit16ContainerContentV2id10Foundation4UUIDVvg_0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_22A6A5C40()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_22A6A5C4C()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_22A6A5C58()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_22A6A5C64()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_22A6A5C70()
{
  return MEMORY[0x24BDCF658]();
}

uint64_t sub_22A6A5C7C()
{
  return MEMORY[0x24BDCF668]();
}

uint64_t sub_22A6A5C88()
{
  return MEMORY[0x24BDCF678]();
}

uint64_t sub_22A6A5C94()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22A6A5CA0()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_22A6A5CAC()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22A6A5CB8()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_22A6A5CC4()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_22A6A5CD0()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_22A6A5CDC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_22A6A5CE8()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_22A6A5CF4()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_22A6A5D00()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_22A6A5D0C()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_22A6A5D18()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_22A6A5D24()
{
  return MEMORY[0x24BEE02C0]();
}

uint64_t sub_22A6A5D30()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_22A6A5D3C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_22A6A5D48()
{
  return MEMORY[0x24BEE0770]();
}

uint64_t sub_22A6A5D54()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22A6A5D60()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22A6A5D6C()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_22A6A5D78()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_22A6A5D84()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22A6A5D90()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_22A6A5D9C()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_22A6A5DA8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_22A6A5DB4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_22A6A5DC0()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_22A6A5DCC()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_22A6A5DD8()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_22A6A5DE4()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_22A6A5DF0()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_22A6A5DFC()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_22A6A5E08()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22A6A5E14()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_22A6A5E20()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_22A6A5E2C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_22A6A5E38()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_22A6A5E44()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_22A6A5E50()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_22A6A5E5C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_22A6A5E68()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_22A6A5E74()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_22A6A5E80()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_22A6A5E8C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_22A6A5E98()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_22A6A5EA4()
{
  return MEMORY[0x24BEE1268]();
}

uint64_t sub_22A6A5EB0()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t sub_22A6A5EBC()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_22A6A5EC8()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_22A6A5ED4()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22A6A5EE0()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_22A6A5EEC()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_22A6A5EF8()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_22A6A5F04()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_22A6A5F10()
{
  return MEMORY[0x24BEE6BB8]();
}

uint64_t sub_22A6A5F1C()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_22A6A5F28()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_22A6A5F34()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_22A6A5F40()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_22A6A5F4C()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_22A6A5F58()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_22A6A5F64()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22A6A5F70()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_22A6A5F7C()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_22A6A5F88()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22A6A5F94()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_22A6A5FA0()
{
  return MEMORY[0x24BEE57C0]();
}

uint64_t sub_22A6A5FAC()
{
  return MEMORY[0x24BEE5828]();
}

uint64_t sub_22A6A5FB8()
{
  return MEMORY[0x24BEE58B0]();
}

uint64_t sub_22A6A5FC4()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_22A6A5FD0()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_22A6A5FDC()
{
  return MEMORY[0x24BEE5958]();
}

uint64_t sub_22A6A5FE8()
{
  return MEMORY[0x24BEE5960]();
}

uint64_t sub_22A6A5FF4()
{
  return MEMORY[0x24BEE1C60]();
}

uint64_t sub_22A6A6000()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22A6A600C()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_22A6A6018()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_22A6A6024()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22A6A6030()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_22A6A603C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_22A6A6048()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22A6A6054()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_22A6A6060()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_22A6A606C()
{
  return MEMORY[0x24BEE2398]();
}

uint64_t sub_22A6A6078()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_22A6A6084()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_22A6A6090()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22A6A609C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22A6A60A8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_22A6A60B4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22A6A60C0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_22A6A60CC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_22A6A60D8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_22A6A60E4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_22A6A60F0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_22A6A60FC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_22A6A6108()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_22A6A6114()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_22A6A6120()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22A6A612C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_22A6A6138()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_22A6A6144()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_22A6A6150()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_22A6A615C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22A6A6168()
{
  return MEMORY[0x24BEE3138]();
}

uint64_t sub_22A6A6174()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_22A6A6180()
{
  return MEMORY[0x24BEE3288]();
}

uint64_t sub_22A6A618C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_22A6A6198()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_22A6A61A4()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_22A6A61B0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22A6A61BC()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_22A6A61C8()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_22A6A61D4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22A6A61E0()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_22A6A61EC()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_22A6A61F8()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22A6A6204()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_22A6A6210()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_22A6A621C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_22A6A6228()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_22A6A6234()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_22A6A6240()
{
  return MEMORY[0x24BDD0730]();
}

uint64_t sub_22A6A624C()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_22A6A6258()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22A6A6264()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22A6A6270()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_22A6A627C()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_22A6A6288()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_22A6A6294()
{
  return MEMORY[0x24BEE4320]();
}

uint64_t sub_22A6A62A0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_22A6A62AC()
{
  return MEMORY[0x24BEE4330]();
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC2C8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC2F8]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC348](rl, source, mode);
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x24BDBC360](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x24BDBC370](allocator, order, context);
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
  MEMORY[0x24BDBC380](source);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
  MEMORY[0x24BDBC388](rl);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x24BDBC3B8](rl);
}

uint64_t JSRemoteInspectorGetInspectionEnabledByDefault()
{
  return MEMORY[0x24BDDA620]();
}

uint64_t JSRemoteInspectorSetInspectionEnabledByDefault()
{
  return MEMORY[0x24BDDA628]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC898](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

float acosf(float a1)
{
  float result;

  MEMORY[0x24BDAD110](a1);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x24BDAF4E0]();
}

mach_port_t pthread_mach_thread_np(pthread_t a1)
{
  return MEMORY[0x24BDAF8A8](a1);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x24BDAF978]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

