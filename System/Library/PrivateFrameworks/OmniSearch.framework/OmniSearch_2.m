void SearchAnswerEntity.init(builder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_61_8();
  type metadata accessor for SearchAnswerEntity(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_58_10();
  OUTLINED_FUNCTION_75_12();
}

void sub_2432A9778(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_23_22();
  OUTLINED_FUNCTION_75_12();
}

void sub_2432A9788(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_103_8();
}

void sub_2432A97A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_135();
  *(_QWORD *)(v1 + 40) = MEMORY[0x2494F42B0](v2);
  OUTLINED_FUNCTION_80_6();
  OUTLINED_FUNCTION_103_8();
}

void sub_2432A97FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_75_12();
}

void sub_2432A981C(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 56) = a1;
  OUTLINED_FUNCTION_13_15(v2 + v1[12], 1);
  v4 = (_OWORD *)(v2 + v1[13]);
  *(_QWORD *)(v3 - 104) = v4;
  *v4 = xmmword_24334E610;
  v5 = v1[14];
  *(_QWORD *)(v3 - 160) = v5;
  *(_BYTE *)(v2 + v5) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_80_6();
  OUTLINED_FUNCTION_75_12();
}

void sub_2432A9888(objc_class *a1)
{
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  Class isa;
  Class *v11;
  Class v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  Class v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;

  *(_QWORD *)(v9 - 128) = v1;
  *(Class *)((char *)&v1->isa + v4) = a1;
  isa = v8[1].isa;
  if (!isa)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v20, (uint64_t)static Logging.search);
    OUTLINED_FUNCTION_50_2();
    v21 = OUTLINED_FUNCTION_116_8();
    if (!OUTLINED_FUNCTION_34_13(v21))
      goto LABEL_18;
    v18 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v18 = 0;
    v19 = "Attempting to create SearchAnswerEntity without id";
    goto LABEL_17;
  }
  v11 = (Class *)(v4 + *(int *)(v2 + 60));
  *v11 = v8->isa;
  v11[1] = isa;
  v1 = v8;
  v12 = v8[3].isa;
  if (!v12)
  {
    v8 = v1;
    v1 = one-time initialization token for search;
    OUTLINED_FUNCTION_115();
    if (v1 != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v22, (uint64_t)static Logging.search);
    OUTLINED_FUNCTION_50_2();
    v23 = OUTLINED_FUNCTION_116_8();
    if (!OUTLINED_FUNCTION_34_13(v23))
      goto LABEL_18;
    v18 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v18 = 0;
    v19 = "Attempting to create SearchAnswerEntity without answer";
    goto LABEL_17;
  }
  *(v9 - 176) = v1[2];
  v13 = type metadata accessor for SearchAnswerEntity.Builder(0);
  *(_QWORD *)(v9 - 168) = v13;
  v14 = (uint64_t)v1 + *(int *)(v13 + 40);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v14, v5, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_22_2(v5, 1, v6);
  if (!v15)
  {
    *(_QWORD *)(v9 - 184) = v14;
    v26 = v5;
    v27 = *(_QWORD *)(v9 - 136);
    outlined init with take of SearchResult(v26, v27, type metadata accessor for SearchResult);
    OUTLINED_FUNCTION_115();
    v28 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_127_3(v28, &demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_2_7(v27, v7);
    OUTLINED_FUNCTION_13_15(v7, 0);
    v29 = (Class)MEMORY[0x24BEE4AF8];
    v30 = v1[7].isa;
    v31 = (uint64_t)v1;
    if (v1[6].isa)
      v29 = v1[6].isa;
    *(_QWORD *)(v4 + 24) = v29;
    *(_QWORD *)(v9 - 192) = v6;
    swift_bridgeObjectRetain();
    if (v30)
      v32 = (uint64_t)v30;
    else
      v32 = Dictionary.init(dictionaryLiteral:)();
    *(_QWORD *)(v4 + 32) = v32;
    v33 = *(_QWORD *)(v9 - 168);
    OUTLINED_FUNCTION_44_17((uint64_t)v1 + *(int *)(v33 + 36), v3);
    OUTLINED_FUNCTION_44_17(v3, *(_QWORD *)(v9 - 152));
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    outlined destroy of MobileSMSDocument?(v3, &demangling cache variable for type metadata for IntentFile?);
    *(_QWORD *)(v9 - 96) = *(_QWORD *)(v9 - 176);
    *(_QWORD *)(v9 - 88) = v12;
    OUTLINED_FUNCTION_114_1();
    v34 = *(Class *)((char *)&v1->isa + *(int *)(v33 + 44));
    if (v34)
    {
      v35 = v34;
      v36 = OUTLINED_FUNCTION_84_2();
      v38 = v37;

    }
    else
    {
      v36 = 0;
      v38 = 0xF000000000000000;
    }
    v39 = *(_QWORD *)(v9 - 192);
    v40 = *(_QWORD *)(v9 - 104);
    outlined consume of Data?(*(_QWORD *)v40, *(_QWORD *)(v40 + 8));
    *(_QWORD *)v40 = v36;
    *(_QWORD *)(v40 + 8) = v38;
    v41 = *(_QWORD *)(v9 - 144);
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(*(_QWORD *)(v9 - 184), v41, &demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_22_2(v41, 1, v39);
    if (v15)
    {
      outlined destroy of MobileSMSDocument?(v41, &demangling cache variable for type metadata for SearchResult?);
    }
    else
    {
      v42 = *(void **)(v41 + *(int *)(v39 + 20));
      if (v42)
      {
        v43 = v42;
        _s10OmniSearch0B6ResultVWOhTm_1(v41, type metadata accessor for SearchResult);
        v44 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(v43);
        v46 = *(_QWORD *)(v9 - 160);
        if (v45)
        {
          v47 = v44;
          v48 = v45;
          type metadata accessor for LocalIndexClient();
          v49 = static LocalIndexClient.displayName(for:)(v47, v48);
          v51 = v50;
          OUTLINED_FUNCTION_6_1();
          if (v51)
          {
            *(_QWORD *)(v9 - 96) = v49;
            *(_QWORD *)(v9 - 88) = v51;
LABEL_40:
            OUTLINED_FUNCTION_114_1();
            v52 = *(_QWORD *)(v31 + 40);
            *(_QWORD *)(v9 - 96) = *(_QWORD *)(v31 + 32);
            *(_QWORD *)(v9 - 88) = v52;
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_114_1();
            v53 = *(int **)(v9 - 168);
            OUTLINED_FUNCTION_22_19(*(_QWORD *)(v31 + v53[12] + 8));
            OUTLINED_FUNCTION_114_1();
            OUTLINED_FUNCTION_22_19(*(_QWORD *)(v31 + v53[13] + 8));
            OUTLINED_FUNCTION_114_1();
            *(_BYTE *)(v4 + v46) = *(_BYTE *)(v31 + v53[14]);
            *(_QWORD *)(v9 - 96) = SearchAnswerEntity.validTypeIdentifiers.getter();
            OUTLINED_FUNCTION_114_1();
            _s10OmniSearch0B6ResultVWOhTm_1(v31, type metadata accessor for SearchAnswerEntity.Builder);
            _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v9 - 136), type metadata accessor for SearchResult);
            v54 = *(_QWORD *)(v9 - 120);
            OUTLINED_FUNCTION_13_7(v4, v54);
            OUTLINED_FUNCTION_70_3(v54, 0);
            OUTLINED_FUNCTION_6_7(v4);
            goto LABEL_21;
          }
        }
LABEL_39:
        *(_QWORD *)(v9 - 96) = 0;
        *(_QWORD *)(v9 - 88) = 0xE000000000000000;
        goto LABEL_40;
      }
      _s10OmniSearch0B6ResultVWOhTm_1(v41, type metadata accessor for SearchResult);
    }
    v46 = *(_QWORD *)(v9 - 160);
    goto LABEL_39;
  }
  v8 = v1;
  OUTLINED_FUNCTION_115();
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for SearchResult?);
  if (one-time initialization token for search != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v16, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_50_2();
  v17 = OUTLINED_FUNCTION_116_8();
  if (OUTLINED_FUNCTION_34_13(v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v18 = 0;
    v19 = "Attempting to create SearchAnswerEntity without SourceResult";
LABEL_17:
    _os_log_impl(&dword_24315F000, v1, (os_log_type_t)v5, v19, v18, 2u);
    MEMORY[0x2494F6D70](v18, -1, -1);
  }
LABEL_18:
  v24 = *(_QWORD *)(v9 - 120);

  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v8, type metadata accessor for SearchAnswerEntity.Builder);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v25 = swift_release();
  OUTLINED_FUNCTION_127_3(v25, &demangling cache variable for type metadata for SearchResult?);
  outlined consume of Data?(**(_QWORD **)(v9 - 104), *(_QWORD *)(*(_QWORD *)(v9 - 104) + 8));
  if (isa)
    swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_70_3(v24, 1);
LABEL_21:
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchAnswerEntity.validTypeIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for UTType();
  OUTLINED_FUNCTION_81_9();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_63_13();
  EntityProperty.wrappedValue.getter();
  v6 = OUTLINED_FUNCTION_53_4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v6);
  outlined destroy of MobileSMSDocument?(v0, &demangling cache variable for type metadata for IntentFile?);
  v8 = 0;
  v9 = 0;
  if (EnumTagSinglePayload != 1)
  {
    if (one-time initialization token for searchToolExportedExperiences != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v3, (uint64_t)static UTType.searchToolExportedExperiences);
    OUTLINED_FUNCTION_2_6();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v10, v3);
    v8 = UTType.identifier.getter();
    v9 = v11;
    OUTLINED_FUNCTION_73_10();
  }
  static UTType.plainText.getter();
  v12 = UTType.identifier.getter();
  v14 = v13;
  OUTLINED_FUNCTION_73_10();
  if (v9)
  {
    swift_bridgeObjectRetain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v16 = v15;
    v17 = *(_QWORD *)(v15 + 16);
    if (v17 >= *(_QWORD *)(v15 + 24) >> 1)
    {
      OUTLINED_FUNCTION_43_13();
      v16 = v24;
    }
    *(_QWORD *)(v16 + 16) = v17 + 1;
    v18 = v16 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v9;
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_4_7();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v16 = v22;
  }
  v19 = *(_QWORD *)(v16 + 16);
  if (v19 >= *(_QWORD *)(v16 + 24) >> 1)
  {
    OUTLINED_FUNCTION_43_13();
    v16 = v23;
  }
  *(_QWORD *)(v16 + 16) = v19 + 1;
  v20 = v16 + 16 * v19;
  *(_QWORD *)(v20 + 32) = v12;
  *(_QWORD *)(v20 + 40) = v14;
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_6_1();
  return v16;
}

void SearchAnswerEntity.Builder.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_96_9();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.answer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.answer.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.title.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.title.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAnswerEntity.Builder.sourceDocuments.getter()
{
  return swift_bridgeObjectRetain();
}

void SearchAnswerEntity.Builder.sourceDocuments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAnswerEntity.Builder.sourceDocuments.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAnswerEntity.Builder.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

void SearchAnswerEntity.Builder.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAnswerEntity.Builder.metadata.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.experienceFile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_56_9();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 36), v2, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.experienceFile.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_68_14();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 36), &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAnswerEntity.Builder.experienceFile.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.sourceResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_56_9();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 40), v2, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.sourceResult.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_68_14();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 40), &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAnswerEntity.Builder.sourceResult.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.card.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(type metadata accessor for SearchAnswerEntity.Builder(0) + 44));
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.card.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_68_14() + 44);

  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.card.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.globalSearchSummary.getter()
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.globalSearchSummary.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_87_9() + 48));
  OUTLINED_FUNCTION_96_9();
  *v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.globalSearchSummary.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAnswerEntity.Builder.description.getter()
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.Builder.description.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_87_9() + 52));
  OUTLINED_FUNCTION_96_9();
  *v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAnswerEntity.Builder.description.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAnswerEntity.Builder.lowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchAnswerEntity.Builder(0) + 56));
}

void SearchAnswerEntity.Builder.lowConfidenceKnowledge.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for SearchAnswerEntity.Builder(0) + 56)) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAnswerEntity.Builder.lowConfidenceKnowledge.modify())(_QWORD)
{
  type metadata accessor for SearchAnswerEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t default argument 10 of SearchAnswerEntity.Builder.init(id:answer:title:sourceDocuments:metadata:experienceFile:sourceResult:card:globalSearchSummary:description:lowConfidenceKnowledge:)()
{
  return 0;
}

void SearchAnswerEntity.Builder.init(id:answer:title:sourceDocuments:metadata:experienceFile:sourceResult:card:globalSearchSummary:description:lowConfidenceKnowledge:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  _QWORD *v39;
  _QWORD *v40;

  OUTLINED_FUNCTION_18_2();
  v29 = v28;
  *v28 = v30;
  v28[1] = v31;
  v28[2] = v32;
  v28[3] = v33;
  v28[4] = v34;
  v28[5] = v35;
  v28[6] = v36;
  v28[7] = v37;
  v38 = (int *)type metadata accessor for SearchAnswerEntity.Builder(0);
  outlined init with take of URL?(a21, (uint64_t)v29 + v38[9], &demangling cache variable for type metadata for IntentFile?);
  outlined init with take of URL?(a22, (uint64_t)v29 + v38[10], &demangling cache variable for type metadata for SearchResult?);
  *(_QWORD *)((char *)v29 + v38[11]) = a23;
  v39 = (_QWORD *)((char *)v29 + v38[12]);
  *v39 = a24;
  v39[1] = a25;
  v40 = (_QWORD *)((char *)v29 + v38[13]);
  *v40 = a26;
  v40[1] = a27;
  *((_BYTE *)v29 + v38[14]) = a28;
  OUTLINED_FUNCTION_43_0();
}

void static SearchAnswerEntity.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAnswerEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_89_11(a1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_51_0();
}

void static SearchAnswerEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAnswerEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_89_11(v3, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  swift_endAccess();
  v4 = OUTLINED_FUNCTION_6_5();
  v5(v4);
  OUTLINED_FUNCTION_51_0();
}

void static SearchAnswerEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static SearchAnswerEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

void SearchAnswerEntity.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_83();
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_44_4();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_61_8();
  type metadata accessor for SFCard();
  v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SearchAnswerEntity(0) + 52));
  v6 = *v5;
  v7 = v5[1];
  outlined copy of Data?(*v5, v7);
  v8 = SFCard.init(data:)(v6, v7);
  if (v8)
  {
    v9 = v8;
    SFCard.snippetPluginModel.getter(v1);

    v10 = type metadata accessor for RGPluginModel();
    OUTLINED_FUNCTION_22_2((uint64_t)v1, 1, v10);
    if (v11)
    {
      outlined destroy of MobileSMSDocument?((uint64_t)v1, &demangling cache variable for type metadata for RGPluginModel?);
    }
    else
    {
      lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel);
      SnippetPluginModel.data.getter();
      v13 = v12;
      OUTLINED_FUNCTION_104_11(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
      if (v13 >> 60 != 15)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v14._countAndFlagsBits = 0;
        v14._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
        OUTLINED_FUNCTION_7_8();
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
        swift_bridgeObjectRelease();
        v15._countAndFlagsBits = 0;
        v15._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
        LocalizedStringResource.init(stringInterpolation:)();
        static RGPluginModel.bundleName.getter();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        goto LABEL_7;
      }
    }
  }
  OUTLINED_FUNCTION_7_8();
  DisplayRepresentation.init(stringLiteral:)();
LABEL_7:
  OUTLINED_FUNCTION_43_0();
}

void SearchAnswerEntity.id.getter()
{
  type metadata accessor for SearchAnswerEntity(0);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchAnswerEntity.Query.entities(for:)()
{
  uint64_t v0;

  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchAnswerEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchAnswerEntity.Query.entities(for:)();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchAnswerEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query();
  *v1 = v0;
  v1[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return EntityQuery.results()();
}

uint64_t (*static SearchAnswerEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAnswerEntity.supportedTypeIdentifiersForExport.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_42_10();
  EntityProperty.wrappedValue.getter();
  return v1;
}

void key path setter for SearchAnswerEntity.supportedTypeIdentifiersForExport : SearchAnswerEntity()
{
  swift_bridgeObjectRetain();
  SearchAnswerEntity.supportedTypeIdentifiersForExport.setter();
}

void SearchAnswerEntity.supportedTypeIdentifiersForExport.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  OUTLINED_FUNCTION_42_10();
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchAnswerEntity.$supportedTypeIdentifiersForExport.getter()
{
  OUTLINED_FUNCTION_42_10();
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void static SearchAnswerEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  OUTLINED_FUNCTION_18_2();
  v12[1] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (DataRepresentation<SearchAnswerEntity>, ProxyRepresentation<SearchAnswerEntity, String>));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_63_1();
  v12[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchAnswerEntity, String>);
  v5 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x24BDAC7A8](v12[0]);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DataRepresentation<SearchAnswerEntity>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = OUTLINED_FUNCTION_91_2();
  type metadata accessor for SearchAnswerEntity(v10);
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
  static ExperienceProviding<>.experienceTransferableRepresentation()();
  lazy protocol witness table accessor for type String and conformance String();
  ProxyRepresentation.init(exporting:)();
  v11 = v0 + *(int *)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v0, v1, v8);
  (*(void (**)(uint64_t, char *, _QWORD))(v5 + 16))(v11, v7, v12[0]);
  TupleTransferRepresentation.init(_:)();
  OUTLINED_FUNCTION_104_11(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  OUTLINED_FUNCTION_43_0();
}

uint64_t specialized implicit closure #1 in static SearchAnswerEntity.transferRepresentation.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = EntityProperty.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t SearchAnswerEntity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  char v15;

  v2 = a1 == 0x726577736E61 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E656D75636F64 && a2 == 0xEE00656372756F53;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6F44656372756F73 && a2 == 0xEF73746E656D7563;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6E65697265707865 && a2 == 0xEE00656C69466563;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x800000024335ED30
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x6552656372756F73 && a2 == 0xEC000000746C7573;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x6174614464726163 && a2 == 0xE800000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0xD000000000000016 && a2 == 0x800000024335D390
                         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v14 = a1 == 25705 && a2 == 0xE200000000000000;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else if (a1 == 0xD000000000000021 && a2 == 0x800000024335BD60)
                    {
                      swift_bridgeObjectRelease();
                      return 12;
                    }
                    else
                    {
                      v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if ((v15 & 1) != 0)
                        return 12;
                      else
                        return 13;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t SearchAnswerEntity.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2432AB280 + 4 * aR[a1]))(0x726577736E61, 0xE600000000000000);
}

uint64_t sub_2432AB280()
{
  return 0x746E656D75636F64;
}

uint64_t sub_2432AB2A4()
{
  return 0x656C746974;
}

uint64_t sub_2432AB2B8()
{
  return 0x6F44656372756F73;
}

uint64_t sub_2432AB2DC()
{
  return 0x617461646174656DLL;
}

unint64_t sub_2432AB388()
{
  return 0xD000000000000016;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchAnswerEntity.CodingKeys()
{
  unsigned __int8 *v0;

  return SearchAnswerEntity.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchAnswerEntity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = SearchAnswerEntity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchAnswerEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchAnswerEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void SearchAnswerEntity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchAnswerEntity.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys();
  OUTLINED_FUNCTION_61_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>);
  OUTLINED_FUNCTION_4_9();
  if (!v1)
  {
    OUTLINED_FUNCTION_4_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_4_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchAnswerEntity.SourceDocument]);
    lazy protocol witness table accessor for type [SearchAnswerEntity.SourceDocument] and conformance <A> [A]();
    OUTLINED_FUNCTION_63_8();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type [String : String] and conformance <> [A : B]);
    OUTLINED_FUNCTION_63_8();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
    lazy protocol witness table accessor for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_63_8();
    OUTLINED_FUNCTION_4_9();
    OUTLINED_FUNCTION_4_9();
    type metadata accessor for SearchAnswerEntity(0);
    type metadata accessor for SearchResult(0);
    lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchResult and conformance SearchResult);
    OUTLINED_FUNCTION_65_3();
    lazy protocol witness table accessor for type Data and conformance Data();
    OUTLINED_FUNCTION_65_3();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
    lazy protocol witness table accessor for type EntityProperty<[String]> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_63_8();
  }
  OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Encodable.encode(to:) in conformance SearchAnswerEntity(_QWORD *a1)
{
  SearchAnswerEntity.encode(to:)(a1);
}

void static SearchAnswerEntity.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  OUTLINED_FUNCTION_18_2();
  v4 = v3;
  v6 = v5;
  v89 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0_3();
  v86 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchResult?, SearchResult?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v14);
  v16 = OUTLINED_FUNCTION_51_11(v15, v85);
  type metadata accessor for SearchAnswerEntity(v16);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_60_9();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_31_0();
  v98 = v19;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_31_0();
  v94 = v21;
  OUTLINED_FUNCTION_17_1();
  v23 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_31_0();
  v93 = v24;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_31_0();
  v92 = v26;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_31_0();
  v95 = v28;
  OUTLINED_FUNCTION_17_1();
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v85 - v32;
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_86_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_76_10();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v41 = (char *)&v85 - v37;
  v42 = *(int *)(v36 + 60);
  v43 = *(_QWORD *)(v6 + v42);
  v44 = *(_QWORD *)(v6 + v42 + 8);
  v45 = (_QWORD *)(v4 + v42);
  v46 = v43 == *v45 && v44 == v45[1];
  v96 = v38;
  v97 = v6;
  v85 = v10;
  v87 = v39;
  v88 = v13;
  v91 = v40;
  if (v46)
  {
    OUTLINED_FUNCTION_2_7(v6, (uint64_t)&v85 - v37);
    v48 = v4;
    OUTLINED_FUNCTION_2_7(v4, v1);
  }
  else
  {
    v47 = OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_94_8(v6, (uint64_t)v41);
    v48 = v4;
    OUTLINED_FUNCTION_94_8(v4, v1);
    if ((v47 & 1) == 0)
    {
      OUTLINED_FUNCTION_1_9(v1);
      OUTLINED_FUNCTION_1_9((uint64_t)v41);
      v49 = v97;
      OUTLINED_FUNCTION_2_7(v97, v2);
      v50 = v4;
      OUTLINED_FUNCTION_2_7(v4, (uint64_t)v33);
      v51 = v95;
LABEL_13:
      OUTLINED_FUNCTION_1_9((uint64_t)v33);
      OUTLINED_FUNCTION_1_9(v2);
      v56 = v91;
      OUTLINED_FUNCTION_2_7(v49, v91);
      OUTLINED_FUNCTION_2_7(v50, v51);
      v57 = v49;
      v59 = v93;
      v58 = v94;
      v60 = v92;
LABEL_20:
      OUTLINED_FUNCTION_1_9(v56);
      OUTLINED_FUNCTION_1_9(v51);
      OUTLINED_FUNCTION_2_7(v57, v60);
      OUTLINED_FUNCTION_2_7(v50, v59);
LABEL_32:
      OUTLINED_FUNCTION_6_7(v60);
      OUTLINED_FUNCTION_6_7(v59);
      v68 = v96;
      OUTLINED_FUNCTION_13_7(v57, v96);
      OUTLINED_FUNCTION_13_7(v50, v58);
      goto LABEL_33;
    }
  }
  OUTLINED_FUNCTION_7_8();
  v52 = v99;
  v53 = v100;
  OUTLINED_FUNCTION_7_8();
  if (v52 == v99 && v53 == v100)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_1_9(v1);
    OUTLINED_FUNCTION_1_9((uint64_t)v41);
    OUTLINED_FUNCTION_2_7(v97, v2);
    v50 = v48;
    OUTLINED_FUNCTION_2_7(v48, (uint64_t)v33);
    v51 = v95;
  }
  else
  {
    v55 = OUTLINED_FUNCTION_18_7();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9(v1);
    OUTLINED_FUNCTION_1_9((uint64_t)v41);
    v49 = v97;
    OUTLINED_FUNCTION_2_7(v97, v2);
    v50 = v48;
    OUTLINED_FUNCTION_2_7(v48, (uint64_t)v33);
    v51 = v95;
    if ((v55 & 1) == 0)
      goto LABEL_13;
  }
  OUTLINED_FUNCTION_7_8();
  v61 = v99;
  v62 = v100;
  OUTLINED_FUNCTION_7_8();
  if (v61 == v99 && v62 == v100)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_1_9((uint64_t)v33);
    OUTLINED_FUNCTION_1_9(v2);
    v57 = v97;
    v56 = v91;
    OUTLINED_FUNCTION_2_7(v97, v91);
    OUTLINED_FUNCTION_2_7(v50, v51);
    v59 = v93;
    v58 = v94;
    v60 = v92;
  }
  else
  {
    v64 = OUTLINED_FUNCTION_18_7();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9((uint64_t)v33);
    OUTLINED_FUNCTION_1_9(v2);
    v57 = v97;
    v56 = v91;
    OUTLINED_FUNCTION_2_7(v97, v91);
    OUTLINED_FUNCTION_2_7(v50, v51);
    v59 = v93;
    v58 = v94;
    v60 = v92;
    if ((v64 & 1) == 0)
      goto LABEL_20;
  }
  specialized static Array<A>.== infix(_:_:)(*(_QWORD *)(v56 + 24), *(_QWORD *)(v51 + 24));
  v66 = v65;
  _s10OmniSearch0B6ResultVWOhTm_1(v56, type metadata accessor for SearchAnswerEntity);
  _s10OmniSearch0B6ResultVWOhTm_1(v51, type metadata accessor for SearchAnswerEntity);
  OUTLINED_FUNCTION_94_8(v57, v60);
  OUTLINED_FUNCTION_94_8(v50, v59);
  if ((v66 & 1) == 0)
    goto LABEL_32;
  v67 = specialized static Dictionary<>.== infix(_:_:)(*(_QWORD *)(v60 + 32), *(_QWORD *)(v59 + 32));
  OUTLINED_FUNCTION_1_9(v60);
  OUTLINED_FUNCTION_1_9(v59);
  v68 = v96;
  OUTLINED_FUNCTION_2_7(v57, v96);
  OUTLINED_FUNCTION_2_7(v50, v58);
  if ((v67 & 1) == 0)
  {
LABEL_33:
    OUTLINED_FUNCTION_6_7(v58);
    OUTLINED_FUNCTION_6_7(v68);
LABEL_34:
    OUTLINED_FUNCTION_13_7(v57, v98);
    OUTLINED_FUNCTION_13_7(v50, v0);
    goto LABEL_35;
  }
  OUTLINED_FUNCTION_7_8();
  v70 = v99;
  v69 = v100;
  OUTLINED_FUNCTION_7_8();
  v71 = v100;
  if (!v69)
  {
    OUTLINED_FUNCTION_6_7(v58);
    OUTLINED_FUNCTION_6_7(v68);
    if (!v71)
    {
LABEL_42:
      OUTLINED_FUNCTION_13_7(v97, v98);
      OUTLINED_FUNCTION_13_7(v50, v0);
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_36_0();
LABEL_40:
    v57 = v97;
    goto LABEL_34;
  }
  if (!v100)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_9(v58);
    OUTLINED_FUNCTION_1_9(v68);
    OUTLINED_FUNCTION_102_0();
    goto LABEL_40;
  }
  if (v70 == v99 && v69 == v100)
  {
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9(v58);
    OUTLINED_FUNCTION_1_9(v68);
    OUTLINED_FUNCTION_6_1();
    goto LABEL_42;
  }
  v73 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_1_9(v58);
  OUTLINED_FUNCTION_1_9(v68);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_7(v97, v98);
  OUTLINED_FUNCTION_2_7(v50, v0);
  if ((v73 & 1) != 0)
  {
LABEL_43:
    v74 = *(int *)(v87 + 48);
    v75 = v0 + v74;
    v76 = v90;
    v77 = v90 + *(int *)(v88 + 48);
    OUTLINED_FUNCTION_113_6(v98 + v74, v90);
    OUTLINED_FUNCTION_113_6(v75, v77);
    v78 = v89;
    OUTLINED_FUNCTION_22_2(v76, 1, v89);
    if (v46)
    {
      OUTLINED_FUNCTION_1_9(v0);
      OUTLINED_FUNCTION_1_9(v98);
      v79 = OUTLINED_FUNCTION_22_2(v77, 1, v78);
      if (v46)
      {
        OUTLINED_FUNCTION_111_0(v79, &demangling cache variable for type metadata for SearchResult?);
        goto LABEL_36;
      }
    }
    else
    {
      v80 = v86;
      outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v76, v86, &demangling cache variable for type metadata for SearchResult?);
      OUTLINED_FUNCTION_22_2(v77, 1, v78);
      if (!v81)
      {
        v83 = v85;
        outlined init with take of SearchResult(v77, v85, type metadata accessor for SearchResult);
        static SearchResult.== infix(_:_:)(v80, v83);
        OUTLINED_FUNCTION_1_9(v83);
        _s10OmniSearch0B6ResultVWOhTm_1(v0, type metadata accessor for SearchAnswerEntity);
        _s10OmniSearch0B6ResultVWOhTm_1(v98, type metadata accessor for SearchAnswerEntity);
        OUTLINED_FUNCTION_1_9(v80);
        OUTLINED_FUNCTION_111_0(v84, &demangling cache variable for type metadata for SearchResult?);
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_6_7(v0);
      OUTLINED_FUNCTION_6_7(v98);
      OUTLINED_FUNCTION_106_9(v82, type metadata accessor for SearchResult);
    }
    OUTLINED_FUNCTION_111_0(v79, &demangling cache variable for type metadata for (SearchResult?, SearchResult?));
    goto LABEL_36;
  }
LABEL_35:
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_6_7(v98);
LABEL_36:
  OUTLINED_FUNCTION_43_0();
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchAnswerEntity()
{
  SearchAnswerEntity.validateParameters()();
}

uint64_t protocol witness for ExperienceProviding.experienceSourceType.getter in conformance SearchAnswerEntity@<X0>(uint64_t a1@<X8>)
{
  return SearchAnswerEntity.experienceSourceType.getter(a1);
}

void protocol witness for Identifiable.id.getter in conformance SearchAnswerEntity(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SearchAnswerEntity.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

uint64_t specialized static Dictionary<>.== infix(_:_:)(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  char v25;
  int64_t v26;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v26)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v26)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v26)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v23 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v20);
    if (*v23 == v19 && v23[1] == v18)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      result = swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

void SearchAnswerEntity.asNLGEntity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[12];

  OUTLINED_FUNCTION_18_2();
  v0 = OUTLINED_FUNCTION_83();
  v19[0] = type metadata accessor for RestaurantReservation(v0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  v3 = OUTLINED_FUNCTION_51_11(v2, v19[0]);
  v19[3] = type metadata accessor for HotelReservation(v3);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  v19[4] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_18_1();
  v19[6] = v7;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v8);
  v19[7] = (uint64_t)v19 - v9;
  v19[8] = type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_18_1();
  v19[2] = v11;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_86_2();
  MEMORY[0x24BDAC7A8](v13);
  v19[5] = type metadata accessor for FlightReservation(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0_3();
  v19[9] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_71();
  MEMORY[0x24BDAC7A8](v18);
  SearchNLGEntity.init()();
}

void sub_2432AC4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(uint64_t);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;

  OUTLINED_FUNCTION_7_8();
  v10 = *(_QWORD *)(v9 - 88);
  *(_QWORD *)(v9 - 96) = *(_QWORD *)(v9 - 96);
  *(_QWORD *)(v9 - 88) = v10;
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_7_8();
  *(_OWORD *)(v9 - 96) = *(_OWORD *)(v9 - 96);
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_7_8();
  v11 = *(_QWORD *)(v9 - 88);
  *(_QWORD *)(v9 - 96) = *(_QWORD *)(v9 - 96);
  *(_QWORD *)(v9 - 88) = v11;
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_7_8();
  *(_OWORD *)(v9 - 96) = *(_OWORD *)(v9 - 96);
  OUTLINED_FUNCTION_114_1();
  v12 = v1 + *(int *)(type metadata accessor for SearchAnswerEntity(0) + 48);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v12, v4, v3);
  v13 = OUTLINED_FUNCTION_22_2(v4, 1, v2);
  if (v14)
  {
    outlined destroy of MobileSMSDocument?(v4, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    v15 = *(void **)(v4 + *(int *)(v2 + 20));
    if (v15)
    {
      v3 = v15;
      OUTLINED_FUNCTION_106_9((uint64_t)v3, type metadata accessor for SearchResult);
      CSSearchableItem.senderNames.getter();
      v17 = v16;

      goto LABEL_8;
    }
    OUTLINED_FUNCTION_106_9(v13, type metadata accessor for SearchResult);
  }
  v17 = 0;
LABEL_8:
  *(_QWORD *)(v9 - 96) = v17;
  OUTLINED_FUNCTION_114_1();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v12, v7, &demangling cache variable for type metadata for SearchResult?);
  v18 = OUTLINED_FUNCTION_22_2(v7, 1, v2);
  if (!v14)
  {
    v19 = v7;
    v20 = *(_QWORD *)(v9 - 104);
    outlined init with take of SearchResult(v19, v20, type metadata accessor for SearchResult);
    outlined init with copy of SearchResult(v20, v5, type metadata accessor for SearchResultItem);
    v21 = OUTLINED_FUNCTION_110_6();
    if (v21 == 9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for FlightReservation;
      outlined init with take of SearchResult(v5, v8, type metadata accessor for FlightReservation);
      v23 = *(int **)(v9 - 136);
      v24 = OUTLINED_FUNCTION_57_8(v23[10]);
      OUTLINED_FUNCTION_22_19(v24);
      OUTLINED_FUNCTION_114_1();
      v25 = OUTLINED_FUNCTION_57_8(v23[13]);
      OUTLINED_FUNCTION_22_19(v25);
      OUTLINED_FUNCTION_114_1();
      v26 = OUTLINED_FUNCTION_109_6();
      OUTLINED_FUNCTION_29_17(v26);
      OUTLINED_FUNCTION_70_10();
      outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v3, *(_QWORD *)(v9 - 128), &demangling cache variable for type metadata for DateComponents?);
      EntityProperty.wrappedValue.setter();
      outlined destroy of MobileSMSDocument?((uint64_t)v3, &demangling cache variable for type metadata for DateComponents?);
      v27 = OUTLINED_FUNCTION_57_8(v23[19]);
      OUTLINED_FUNCTION_22_19(v27);
      OUTLINED_FUNCTION_114_1();
      v28 = OUTLINED_FUNCTION_57_8(v23[20]);
      OUTLINED_FUNCTION_22_19(v28);
      OUTLINED_FUNCTION_114_1();
      v29 = v8;
    }
    else
    {
      OUTLINED_FUNCTION_1_9(v5);
      OUTLINED_FUNCTION_2_7(v20, v6);
      if (OUTLINED_FUNCTION_110_6() == 10)
      {
        v30 = *(_QWORD *)(v9 - 144);
        outlined init with take of SearchResult(v6, v30, type metadata accessor for HotelReservation);
        v31 = *(int **)(v9 - 152);
        v32 = OUTLINED_FUNCTION_57_8(v31[15]);
        OUTLINED_FUNCTION_22_19(v32);
        OUTLINED_FUNCTION_114_1();
        v33 = OUTLINED_FUNCTION_57_8(v31[18]);
        v34 = *(_QWORD *)(v0 + 80);
        OUTLINED_FUNCTION_22_19(v33);
        OUTLINED_FUNCTION_114_1();
        v35 = OUTLINED_FUNCTION_109_6();
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        v37 = *(_QWORD *)(v9 - 120);
        v36(v37, v34, v35);
        OUTLINED_FUNCTION_71_13();
        OUTLINED_FUNCTION_102_7(v37);
        EntityProperty.wrappedValue.setter();
        OUTLINED_FUNCTION_124_8();
        v36(v37, v30 + v31[13], v35);
        OUTLINED_FUNCTION_71_13();
        OUTLINED_FUNCTION_102_7(v37);
        EntityProperty.wrappedValue.setter();
        OUTLINED_FUNCTION_124_8();
        v29 = v30;
        v38 = type metadata accessor for HotelReservation;
LABEL_18:
        _s10OmniSearch0B6ResultVWOhTm_1(v29, v38);
        v43 = type metadata accessor for SearchResult;
        v44 = v20;
LABEL_19:
        _s10OmniSearch0B6ResultVWOhTm_1(v44, v43);
        goto LABEL_20;
      }
      OUTLINED_FUNCTION_1_9(v6);
      v39 = *(_QWORD *)(v9 - 160);
      OUTLINED_FUNCTION_2_7(v20, v39);
      if (OUTLINED_FUNCTION_110_6() != 11)
      {
        _s10OmniSearch0B6ResultVWOhTm_1(v20, type metadata accessor for SearchResult);
        v43 = type metadata accessor for SearchResultItem;
        v44 = v39;
        goto LABEL_19;
      }
      v22 = type metadata accessor for RestaurantReservation;
      v40 = *(_QWORD *)(v9 - 168);
      outlined init with take of SearchResult(v39, v40, type metadata accessor for RestaurantReservation);
      v41 = *(_QWORD *)(v9 - 176);
      OUTLINED_FUNCTION_22_19(*(_QWORD *)(v40 + *(int *)(v41 + 60) + 8));
      OUTLINED_FUNCTION_114_1();
      OUTLINED_FUNCTION_22_19(*(_QWORD *)(v40 + *(int *)(v41 + 68) + 8));
      OUTLINED_FUNCTION_114_1();
      v42 = type metadata accessor for DateComponents();
      OUTLINED_FUNCTION_29_17(v42);
      OUTLINED_FUNCTION_70_10();
      outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v3, *(_QWORD *)(v9 - 128), &demangling cache variable for type metadata for DateComponents?);
      EntityProperty.wrappedValue.setter();
      outlined destroy of MobileSMSDocument?((uint64_t)v3, &demangling cache variable for type metadata for DateComponents?);
      v29 = v40;
    }
    v38 = v22;
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_127_3(v18, &demangling cache variable for type metadata for SearchResult?);
LABEL_20:
  OUTLINED_FUNCTION_43_0();
}

unint64_t lazy protocol witness table accessor for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.SourceDocument.CodingKeys, &unk_2513D16E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.SourceDocument.CodingKeys, &unk_2513D16E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.SourceDocument.CodingKeys, &unk_2513D16E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.SourceDocument.CodingKeys, &unk_2513D16E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument.CodingKeys and conformance SearchAnswerEntity.SourceDocument.CodingKeys);
  }
  return result;
}

void lazy protocol witness table accessor for type URL and conformance URL(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_284();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t type metadata accessor for SearchAnswerEntity.Builder(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for SearchAnswerEntity.Builder);
}

unint64_t lazy protocol witness table accessor for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.CodingKeys, &unk_2513D1658);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.CodingKeys, &unk_2513D1658);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.CodingKeys, &unk_2513D1658);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.CodingKeys, &unk_2513D1658);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.CodingKeys and conformance SearchAnswerEntity.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [SearchAnswerEntity.SourceDocument] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type [SearchAnswerEntity.SourceDocument] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchAnswerEntity.SourceDocument] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchAnswerEntity.SourceDocument]);
    lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity.SourceDocument and conformance SearchAnswerEntity.SourceDocument);
    v3 = v2;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchAnswerEntity.SourceDocument] and conformance <A> [A]);
  }
  return result;
}

void lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    OUTLINED_FUNCTION_74_13(0, v1);
    OUTLINED_FUNCTION_284();
  }
  OUTLINED_FUNCTION_59_0();
}

unint64_t lazy protocol witness table accessor for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.Query, &type metadata for SearchAnswerEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.Query, &type metadata for SearchAnswerEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.Query, &type metadata for SearchAnswerEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAnswerEntity.Query, &type metadata for SearchAnswerEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAnswerEntity.Query and conformance SearchAnswerEntity.Query);
  }
  return result;
}

void associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchAnswerEntity.Query()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchAnswerEntity.Query()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchAnswerEntity] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type [SearchAnswerEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchAnswerEntity] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchAnswerEntity]);
    lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
    v3 = v2;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6638], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchAnswerEntity] and conformance <A> [A]);
  }
  return result;
}

void base witness table accessor for AppValue in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void base witness table accessor for DisplayRepresentable in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void base witness table accessor for Identifiable in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

uint64_t associated type witness table accessor for Transferable.Representation : TransferRepresentation in SearchAnswerEntity()
{
  return swift_getOpaqueTypeConformance2();
}

void base witness table accessor for PersistentlyIdentifiable in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void base witness table accessor for TypeDisplayRepresentable in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void base witness table accessor for InstanceDisplayRepresentable in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type EmptyResolverSpecification<SearchAnswerEntity> and conformance EmptyResolverSpecification<A>((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAnswerEntity> and conformance EmptyResolverSpecification<A>);
}

void base witness table accessor for CustomLocalizedStringResourceConvertible in SearchAnswerEntity()
{
  lazy protocol witness table accessor for type URL and conformance URL((uint64_t)&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
}

void sub_2432ACE1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAnswerEntity.answer.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2432ACE40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAnswerEntity.documentSource.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2432ACE64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAnswerEntity.title.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2432ACE84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchAnswerEntity.title.setter);
}

void sub_2432ACEA0()
{
  SearchAnswerEntity.experienceFile.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432ACEC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAnswerEntity.globalSearchSummary.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2432ACEE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchAnswerEntity.globalSearchSummary.setter);
}

void sub_2432ACEFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAnswerEntity.description.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2432ACF1C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchAnswerEntity.description.setter);
}

void sub_2432ACF38()
{
  id *v0;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchAnswerEntity.card.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432ACF5C()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchAnswerEntity.supportedTypeIdentifiersForExport.getter();
  OUTLINED_FUNCTION_5();
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchAnswerEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v13 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    v7 = a2[6];
    a1[5] = a2[5];
    a1[6] = v7;
    v8 = a3[12];
    __dst = (char *)a1 + v8;
    v9 = (char *)a2 + v8;
    a1[7] = a2[7];
    v10 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      type metadata accessor for SearchResultItem(0);
      v14 = (char *)&loc_2432AD0D4 + 4 * word_243357A0E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    v12 = a3;
    v13 = a1;
    v15 = a3[13];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *((_QWORD *)v17 + 1);
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    else
    {
      v19 = *(_QWORD *)v17;
      outlined copy of Data._Representation(*(_QWORD *)v17, *((_QWORD *)v17 + 1));
      v12 = a3;
      *(_QWORD *)v16 = v19;
      *((_QWORD *)v16 + 1) = v18;
    }
    v20 = v12[15];
    *((_BYTE *)a1 + v12[14]) = *((_BYTE *)a2 + v12[14]);
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(_QWORD *)((char *)a1 + v12[16]) = *(_QWORD *)((char *)a2 + v12[16]);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v13;
}

uint64_t destroy for SearchAnswerEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int EnumTagSinglePayload;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  unint64_t v81;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = (int *)type metadata accessor for EmailDocument(0);
        v7 = v4 + v6[12];
        v8 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v4 + v6[17];
        v10 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        v11 = v6[18];
        goto LABEL_20;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = (int *)type metadata accessor for MobileSMSDocument(0);
        v13 = v4 + v12[10];
        v14 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        v15 = v4 + v12[11];
        v16 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        v17 = v4 + v12[12];
        if (!__swift_getEnumTagSinglePayload(v17, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = (int *)type metadata accessor for CalendarEvent(0);
        v18 = v4 + v12[7];
        v19 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v18, 1, v19))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        v20 = v4 + v12[8];
        if (!__swift_getEnumTagSinglePayload(v20, 1, v19))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v20, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = v4 + v12[13];
        v22 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v21, 1, v22))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
LABEL_19:
        v11 = v12[14];
LABEL_20:
        if (!*(_QWORD *)(v4 + v11))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = type metadata accessor for Photo(0);
        v24 = v4 + *(int *)(v23 + 44);
        v25 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v24, 1, v25))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(v23 + 64);
        goto LABEL_67;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = (int *)type metadata accessor for NoteDocument(0);
        v28 = v4 + v27[8];
        v29 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v28, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
        v30 = v4 + v27[9];
        if (!__swift_getEnumTagSinglePayload(v30, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v30, v29);
        v26 = v27[10];
        goto LABEL_67;
      case 5u:
        swift_bridgeObjectRelease();

        v26 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_67;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = type metadata accessor for WalletTransaction(0);
        v32 = v4 + *(int *)(v31 + 28);
        v33 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v32, 1, v33))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(v31 + 52);
        goto LABEL_67;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = type metadata accessor for WalletPass(0);
        v35 = v4 + *(int *)(v34 + 28);
        v36 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v35, 1, v36))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        swift_bridgeObjectRelease();
        v26 = *(int *)(v34 + 36);
        goto LABEL_67;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_67;
      case 9u:
        swift_bridgeObjectRelease();
        v37 = (int *)type metadata accessor for FlightReservation(0);
        v38 = v4 + v37[5];
        v39 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v38, 1, v39))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = v4 + v37[11];
        if (!__swift_getEnumTagSinglePayload(v40, 1, v39))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v40, v39);
        v41 = v4 + v37[12];
        if (!__swift_getEnumTagSinglePayload(v41, 1, v39))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v41, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = v4 + v37[15];
        v43 = type metadata accessor for DateComponents();
        v44 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8);
        v44(v42, v43);
        v44(v4 + v37[16], v43);
        v45 = v4 + v37[17];
        v46 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v45, 1, v46))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
        v47 = v4 + v37[18];
        if (!__swift_getEnumTagSinglePayload(v47, 1, v46))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v47, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v48 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_64;
      case 0xAu:
        swift_bridgeObjectRelease();
        v49 = (int *)type metadata accessor for HotelReservation(0);
        v50 = v4 + v49[5];
        v51 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v50, 1, v51))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = v4 + v49[12];
        v53 = type metadata accessor for DateComponents();
        v54 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8);
        v54(v52, v53);
        v54(v4 + v49[13], v53);
        v55 = v4 + v49[14];
        v56 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v55, 1, v56))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xBu:
        swift_bridgeObjectRelease();
        v57 = (int *)type metadata accessor for RestaurantReservation(0);
        v58 = v4 + v57[5];
        v59 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v58, 1, v59))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v60 = v4 + v57[12];
        v61 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
        swift_bridgeObjectRelease();
        v62 = v4 + v57[14];
        v63 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xCu:
        swift_bridgeObjectRelease();
        v64 = type metadata accessor for GlobalItem();
        v65 = v4 + *(int *)(v64 + 20);
        v66 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v65, 1, v66))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = (uint64_t *)(v4 + *(int *)(v64 + 32));
        v68 = v67[1];
        if (v68 >> 60 != 15)
          outlined consume of Data._Representation(*v67, v68);
        v48 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_64:
        __swift_instantiateConcreteTypeFromMangledName(v48);
LABEL_65:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_67:
        v69 = v4 + v26;
        v70 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v69, 1, v70))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v71 = type metadata accessor for IntentFileItem();
        v72 = v4 + *(int *)(v71 + 20);
        v73 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v72, 1, v73);
        v75 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8);
        if (!EnumTagSinglePayload)
          v75(v72, v73);
        v75(v4 + *(int *)(v71 + 24), v73);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v76 = type metadata accessor for Answer(0);
        v77 = v4 + *(int *)(v76 + 20);
        v78 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v77, 1, v78))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v79 = v4 + *(int *)(v76 + 40);
        if (!__swift_getEnumTagSinglePayload(v79, 1, v78))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v79, v78);
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }
  v80 = (uint64_t *)(a1 + *(int *)(a2 + 52));
  v81 = v80[1];
  if (v81 >> 60 != 15)
    outlined consume of Data._Representation(*v80, v81);
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for SearchAnswerEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *__dst;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  v7 = a3[12];
  __dst = (char *)a1 + v7;
  v8 = (char *)a2 + v7;
  a1[6] = a2[6];
  a1[7] = v6;
  v9 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    type metadata accessor for SearchResultItem(0);
    v11 = (char *)&loc_2432AFFC0 + 4 * word_243357A4E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(__dst, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = a3[13];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_QWORD *)v14 + 1);
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *(_QWORD *)v14;
    outlined copy of Data._Representation(*(_QWORD *)v14, *((_QWORD *)v14 + 1));
    *(_QWORD *)v13 = v16;
    *((_QWORD *)v13 + 1) = v15;
  }
  v17 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchAnswerEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  v6 = a3[12];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      type metadata accessor for SearchResultItem(0);
      v12 = (char *)&loc_2432B20A4 + 4 * word_243357A6E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v11)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResult);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_10;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v14 = (char *)&loc_2432B22C4 + 4 * word_243357A8E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = *(int *)(v9 + 20);
  v16 = *(void **)&v7[v15];
  v17 = *(void **)&v8[v15];
  *(_QWORD *)&v7[v15] = v17;
  v18 = v17;

  v19 = *(int *)(v9 + 24);
  v20 = &v7[v19];
  v21 = &v8[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_10:
  v22 = a3[13];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a2 + v22 + 8);
  if (*(_QWORD *)((char *)a1 + v22 + 8) >> 60 != 15)
  {
    if (v25 >> 60 != 15)
    {
      v27 = *v24;
      outlined copy of Data._Representation(v27, v25);
      v28 = *v23;
      v29 = v23[1];
      *v23 = v27;
      v23[1] = v25;
      outlined consume of Data._Representation(v28, v29);
      goto LABEL_17;
    }
    outlined destroy of Data((uint64_t)v23);
    goto LABEL_15;
  }
  if (v25 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    goto LABEL_17;
  }
  v26 = *v24;
  outlined copy of Data._Representation(v26, v25);
  *v23 = v26;
  v23[1] = v25;
LABEL_17:
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v30 = a3[15];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SearchAnswerEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = a3[12];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    type metadata accessor for SearchResultItem(0);
    v11 = (char *)&loc_2432B605C + 4 * word_243357AAE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

_QWORD *assignWithTake for SearchAnswerEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  v6 = a3[12];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      type metadata accessor for SearchResultItem(0);
      v12 = (char *)&loc_2432B7574 + 4 * word_243357ACE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v11)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResult);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_10;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v14 = (char *)&loc_2432B76D0 + 4 * word_243357AEE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = *(int *)(v9 + 20);
  v16 = *(void **)&v7[v15];
  *(_QWORD *)&v7[v15] = *(_QWORD *)&v8[v15];

  v17 = *(int *)(v9 + 24);
  v18 = &v7[v17];
  v19 = &v8[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
LABEL_10:
  v22 = a3[13];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      v27 = *v23;
      *v23 = *v24;
      v23[1] = v26;
      outlined consume of Data._Representation(v27, v25);
      goto LABEL_15;
    }
    outlined destroy of Data((uint64_t)v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
LABEL_15:
  v28 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAnswerEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2432B9E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_33_2(a1 + *(int *)(a3 + 48), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAnswerEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432B9E78(_QWORD *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    v5 = OUTLINED_FUNCTION_45_10(*(int *)(a4 + 48));
    OUTLINED_FUNCTION_32_2(v5, v6, v7, v8);
  }
}

void type metadata completion function for SearchAnswerEntity()
{
  unint64_t v0;

  type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchAnswerEntity.SourceDocument(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for SearchAnswerEntity.SourceDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for URL();
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for SearchAnswerEntity.SourceDocument(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithCopy for SearchAnswerEntity.SourceDocument(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for SearchAnswerEntity.SourceDocument(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for SearchAnswerEntity.SourceDocument(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAnswerEntity.SourceDocument()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2432BA4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 2147483646)
  {
    OUTLINED_FUNCTION_40_10();
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_33_2(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAnswerEntity.SourceDocument()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432BA53C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_117_3();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = v0;
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    v5 = OUTLINED_FUNCTION_45_10(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_32_2(v5, v6, v7, v8);
  }
}

void type metadata completion function for SearchAnswerEntity.SourceDocument()
{
  unint64_t v0;

  type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchAnswerEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    v10 = a3[9];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[6] = a2[6];
    a1[7] = v9;
    v13 = type metadata accessor for IntentFile();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    v16 = a3[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      type metadata accessor for SearchResultItem(0);
      v21 = (char *)&loc_2432BA7BC + 4 * word_243357B0E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v22 = a3[11];
    v23 = a3[12];
    v24 = *(void **)((char *)a2 + v22);
    *(_QWORD *)((char *)v4 + v22) = v24;
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[13];
    v29 = a3[14];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (_QWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    v33 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SearchAnswerEntity.Builder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int EnumTagSinglePayload;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = type metadata accessor for IntentFile();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[10];
  v7 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = (int *)type metadata accessor for EmailDocument(0);
        v9 = v6 + v8[12];
        v10 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v6 + v8[17];
        v12 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        v13 = v8[18];
        goto LABEL_22;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = (int *)type metadata accessor for MobileSMSDocument(0);
        v15 = v6 + v14[10];
        v16 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        v17 = v6 + v14[11];
        v18 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        v19 = v6 + v14[12];
        if (!__swift_getEnumTagSinglePayload(v19, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v19, v18);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = (int *)type metadata accessor for CalendarEvent(0);
        v20 = v6 + v14[7];
        v21 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        v22 = v6 + v14[8];
        if (!__swift_getEnumTagSinglePayload(v22, 1, v21))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = v6 + v14[13];
        v24 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
LABEL_21:
        v13 = v14[14];
LABEL_22:
        if (!*(_QWORD *)(v6 + v13))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = type metadata accessor for Photo(0);
        v26 = v6 + *(int *)(v25 + 44);
        v27 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(v25 + 64);
        goto LABEL_69;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = (int *)type metadata accessor for NoteDocument(0);
        v30 = v6 + v29[8];
        v31 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v30, 1, v31))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        v32 = v6 + v29[9];
        if (!__swift_getEnumTagSinglePayload(v32, 1, v31))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v32, v31);
        v28 = v29[10];
        goto LABEL_69;
      case 5u:
        swift_bridgeObjectRelease();

        v28 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_69;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = type metadata accessor for WalletTransaction(0);
        v34 = v6 + *(int *)(v33 + 28);
        v35 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(v33 + 52);
        goto LABEL_69;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = type metadata accessor for WalletPass(0);
        v37 = v6 + *(int *)(v36 + 28);
        v38 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v37, 1, v38))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        swift_bridgeObjectRelease();
        v28 = *(int *)(v36 + 36);
        goto LABEL_69;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_69;
      case 9u:
        swift_bridgeObjectRelease();
        v39 = (int *)type metadata accessor for FlightReservation(0);
        v40 = v6 + v39[5];
        v41 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = v6 + v39[11];
        if (!__swift_getEnumTagSinglePayload(v42, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v42, v41);
        v43 = v6 + v39[12];
        if (!__swift_getEnumTagSinglePayload(v43, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v43, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = v6 + v39[15];
        v45 = type metadata accessor for DateComponents();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v44, v45);
        v46(v6 + v39[16], v45);
        v47 = v6 + v39[17];
        v48 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v47, 1, v48))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
        v49 = v6 + v39[18];
        if (!__swift_getEnumTagSinglePayload(v49, 1, v48))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v49, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_66;
      case 0xAu:
        swift_bridgeObjectRelease();
        v51 = (int *)type metadata accessor for HotelReservation(0);
        v52 = v6 + v51[5];
        v53 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v54 = v6 + v51[12];
        v55 = type metadata accessor for DateComponents();
        v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
        v56(v54, v55);
        v56(v6 + v51[13], v55);
        v57 = v6 + v51[14];
        v58 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v57, 1, v58))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xBu:
        swift_bridgeObjectRelease();
        v59 = (int *)type metadata accessor for RestaurantReservation(0);
        v60 = v6 + v59[5];
        v61 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v60, 1, v61))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v6 + v59[12];
        v63 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
        swift_bridgeObjectRelease();
        v64 = v6 + v59[14];
        v65 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v64, 1, v65))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xCu:
        swift_bridgeObjectRelease();
        v66 = type metadata accessor for GlobalItem();
        v67 = v6 + *(int *)(v66 + 20);
        v68 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = (uint64_t *)(v6 + *(int *)(v66 + 32));
        v70 = v69[1];
        if (v70 >> 60 != 15)
          outlined consume of Data._Representation(*v69, v70);
        v50 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_66:
        __swift_instantiateConcreteTypeFromMangledName(v50);
LABEL_67:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_69:
        v71 = v6 + v28;
        v72 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v71, 1, v72))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v73 = type metadata accessor for IntentFileItem();
        v74 = v6 + *(int *)(v73 + 20);
        v75 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v74, 1, v75);
        v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8);
        if (!EnumTagSinglePayload)
          v77(v74, v75);
        v77(v6 + *(int *)(v73 + 24), v75);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v78 = type metadata accessor for Answer(0);
        v79 = v6 + *(int *)(v78 + 20);
        v80 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v79, 1, v80))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v79, v80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v81 = v6 + *(int *)(v78 + 40);
        if (!__swift_getEnumTagSinglePayload(v81, 1, v80))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v81, v80);
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchAnswerEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = a3[9];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for IntentFile();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v14 = a3[10];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    type metadata accessor for SearchResultItem(0);
    v19 = (char *)&loc_2432BD464 + 4 * word_243357B4E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  v20 = a3[11];
  v21 = a3[12];
  v22 = *(void **)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = (_QWORD *)((char *)a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[13];
  v27 = a3[14];
  v28 = (_QWORD *)((char *)a1 + v26);
  v29 = (_QWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v31 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchAnswerEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[9];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for IntentFile();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[10];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for SearchResult(0);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      type metadata accessor for SearchResultItem(0);
      v20 = (char *)&loc_2432BF2E8 + 4 * word_243357B6E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_12;
  }
  if (v19)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v15, type metadata accessor for SearchResult);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v15, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v22 = (char *)&loc_2432BF520 + 4 * word_243357B8E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v23 = *(int *)(v17 + 20);
  v24 = *(void **)&v15[v23];
  v25 = *(void **)&v16[v23];
  *(_QWORD *)&v15[v23] = v25;
  v26 = v25;

  v27 = *(int *)(v17 + 24);
  v28 = &v15[v27];
  v29 = &v16[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_17:
  v30 = a3[11];
  v31 = *(void **)((char *)a1 + v30);
  v32 = *(void **)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v32;
  v33 = v32;

  v34 = a3[12];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[13];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

_OWORD *initializeWithTake for SearchAnswerEntity.Builder(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[9];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IntentFile();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[10];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    type metadata accessor for SearchResultItem(0);
    v18 = (char *)&loc_2432C32C4 + 4 * word_243357BAE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  v19 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v20 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

_QWORD *assignWithTake for SearchAnswerEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  v9 = a3[9];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for IntentFile();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  v17 = a3[10];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for SearchResult(0);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      type metadata accessor for SearchResultItem(0);
      v23 = (char *)&loc_2432C4858 + 4 * word_243357BCE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_12;
  }
  if (v22)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResult);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v25 = (char *)&loc_2432C49CC + 4 * word_243357BEE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v26 = *(int *)(v20 + 20);
  v27 = *(void **)&v18[v26];
  *(_QWORD *)&v18[v26] = *(_QWORD *)&v19[v26];

  v28 = *(int *)(v20 + 24);
  v29 = &v18[v28];
  v30 = &v19[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
LABEL_17:
  v33 = a3[11];
  v34 = *(void **)((char *)a1 + v33);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);

  v35 = a3[12];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAnswerEntity.Builder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2432C70D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 2147483646)
  {
    OUTLINED_FUNCTION_40_10();
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 36);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      v8 = *(int *)(a3 + 40);
    }
    OUTLINED_FUNCTION_33_2(a1 + v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAnswerEntity.Builder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432C715C()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_117_3();
  if (v4)
  {
    *(_QWORD *)(v1 + 8) = v0;
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v5 = v3;
    if (*(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?)
                               - 8)
                   + 84) == v2)
    {
      v6 = *(int *)(v5 + 36);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      v6 = *(int *)(v5 + 40);
    }
    v7 = OUTLINED_FUNCTION_45_10(v6);
    OUTLINED_FUNCTION_32_2(v7, v8, v9, v10);
  }
}

void type metadata completion function for SearchAnswerEntity.Builder()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for IntentFile?, (void (*)(uint64_t))MEMORY[0x24BDB4F20]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SearchAnswerEntity.Query()
{
  return &type metadata for SearchAnswerEntity.Query;
}

void sub_2432C72BC()
{
  lazy protocol witness table accessor for type EmptyResolverSpecification<SearchAnswerEntity> and conformance EmptyResolverSpecification<A>((uint64_t)&lazy protocol witness table cache variable for type TupleTransferRepresentation<SearchAnswerEntity, (DataRepresentation<SearchAnswerEntity>, ProxyRepresentation<SearchAnswerEntity, String>)> and conformance TupleTransferRepresentation<A, B>);
}

void lazy protocol witness table accessor for type EmptyResolverSpecification<SearchAnswerEntity> and conformance EmptyResolverSpecification<A>(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_284();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t storeEnumTagSinglePayload for SearchAnswerEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2432C7368 + 4 * byte_243357C13[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2432C739C + 4 * byte_243357C0E[v4]))();
}

uint64_t sub_2432C739C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C73A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432C73ACLL);
  return result;
}

uint64_t sub_2432C73B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432C73C0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2432C73C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C73CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchAnswerEntity.CodingKeys()
{
  return &unk_2513D1658;
}

uint64_t storeEnumTagSinglePayload for SearchAnswerEntity.SourceDocument.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2432C7434 + 4 * byte_243357C1D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2432C7468 + 4 * byte_243357C18[v4]))();
}

uint64_t sub_2432C7468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C7470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432C7478);
  return result;
}

uint64_t sub_2432C7484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432C748CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2432C7490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C7498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchAnswerEntity.SourceDocument.CodingKeys()
{
  return &unk_2513D16E8;
}

uint64_t OUTLINED_FUNCTION_22_19(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_23_22()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_29_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(*(_QWORD *)(v2 - 120), v1, a1);
}

BOOL OUTLINED_FUNCTION_34_13(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_35_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_40_10()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t OUTLINED_FUNCTION_42_10()
{
  return type metadata accessor for SearchAnswerEntity(0);
}

void OUTLINED_FUNCTION_43_13()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_44_17(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_51_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return type metadata accessor for SearchAnswerEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_57_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_58_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_67_14()
{
  return type metadata accessor for SearchAnswerEntity(0);
}

uint64_t OUTLINED_FUNCTION_68_14()
{
  return type metadata accessor for SearchAnswerEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_70_10()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_71_13()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_73_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_74_13(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
}

void OUTLINED_FUNCTION_75_12()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_79_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_80_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_87_9()
{
  return type metadata accessor for SearchAnswerEntity.Builder(0);
}

void OUTLINED_FUNCTION_94_8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_95_10()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_96_9()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_102_7(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, v2, v1);
}

void OUTLINED_FUNCTION_103_8()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_104_11@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_106_9(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

uint64_t OUTLINED_FUNCTION_109_6()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_110_6()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_113_6(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_116_8()
{
  return static os_log_type_t.fault.getter();
}

void OUTLINED_FUNCTION_120_6()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_124_8()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of MobileSMSDocument?(v1, v0);
}

void OUTLINED_FUNCTION_127_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

Swift::OpaquePointer *kMediaRegexTriggersPerLang.unsafeMutableAddressor()
{
  if (one-time initialization token for kMediaRegexTriggersPerLang != -1)
    swift_once();
  return &kMediaRegexTriggersPerLang;
}

Swift::OpaquePointer *kMediaURLTriggers.unsafeMutableAddressor()
{
  if (one-time initialization token for kMediaURLTriggers != -1)
    swift_once();
  return &kMediaURLTriggers;
}

void one-time initialization function for kMediaRegexTriggersPerLang()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Regex<Substring>)>);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, Regex<Substring>))
                                      - 8)
                          + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24334DB60;
  v7 = (_QWORD *)(v6 + v5);
  *v7 = 28261;
  v7[1] = 0xE200000000000000;
  Regex.init(_regexString:version:)();
  Regex.ignoresCase(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  kMediaRegexTriggersPerLang._rawValue = (void *)Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_63();
}

void one-time initialization function for kMediaURLTriggers()
{
  _OWORD *v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Regex<(Substring, Substring)>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v0 = (_OWORD *)swift_allocObject();
  v0[1] = xmmword_243351440;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Substring, Substring));
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_0_29();
  kMediaURLTriggers._rawValue = v0;
  OUTLINED_FUNCTION_63();
}

uint64_t OUTLINED_FUNCTION_0_29()
{
  return Regex.init(_regexString:version:)();
}

uint64_t WebImage.init(id:url:title:description:altText:surroundingText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  *a9 = a1;
  a9[1] = a2;
  v18 = (int *)OUTLINED_FUNCTION_5_30();
  result = outlined init with take of URL?(a3, (uint64_t)a9 + v18[5]);
  v20 = (_QWORD *)((char *)a9 + v18[6]);
  *v20 = a4;
  v20[1] = a5;
  v21 = (_QWORD *)((char *)a9 + v18[7]);
  *v21 = a6;
  v21[1] = a7;
  v22 = (_QWORD *)((char *)a9 + v18[8]);
  *v22 = a8;
  v22[1] = a10;
  v23 = (_QWORD *)((char *)a9 + v18[9]);
  *v23 = a11;
  v23[1] = a12;
  return result;
}

uint64_t type metadata accessor for WebImage()
{
  uint64_t result;

  result = type metadata singleton initialization cache for WebImage;
  if (!type metadata singleton initialization cache for WebImage)
    return swift_getSingletonMetadata();
  return result;
}

void WebImage.id.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t WebImage.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_5_30() + 20);
  return outlined init with copy of URL?(v3, a1);
}

void WebImage.title.getter()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void WebImage.description.getter()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void WebImage.altText.getter()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void WebImage.surroundingText.getter()
{
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t WebImage.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7107189 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x74786554746C61 && a2 == 0xE700000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x646E756F72727573 && a2 == 0xEF74786554676E69)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t WebImage.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2432C8080 + 4 * byte_2433583C0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2432C8080()
{
  return 7107189;
}

uint64_t sub_2432C8090()
{
  return 0x656C746974;
}

uint64_t sub_2432C80A4()
{
  return 0x7470697263736564;
}

uint64_t sub_2432C80C4()
{
  return 0x74786554746C61;
}

uint64_t sub_2432C80DC()
{
  return 0x646E756F72727573;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance WebImage.CodingKeys()
{
  unsigned __int8 *v0;

  return WebImage.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance WebImage.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = WebImage.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance WebImage.CodingKeys()
{
  lazy protocol witness table accessor for type WebImage.CodingKeys and conformance WebImage.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance WebImage.CodingKeys()
{
  lazy protocol witness table accessor for type WebImage.CodingKeys and conformance WebImage.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t WebImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<WebImage.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type WebImage.CodingKeys and conformance WebImage.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8 = (int *)type metadata accessor for WebImage();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_110_2(v8[6]);
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_110_2(v8[7]);
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_110_2(v8[8]);
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_110_2(v8[9]);
    OUTLINED_FUNCTION_21_12();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t lazy protocol witness table accessor for type WebImage.CodingKeys and conformance WebImage.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebImage.CodingKeys, &unk_2513D1A70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebImage.CodingKeys, &unk_2513D1A70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebImage.CodingKeys, &unk_2513D1A70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebImage.CodingKeys, &unk_2513D1A70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebImage.CodingKeys and conformance WebImage.CodingKeys);
  }
  return result;
}

uint64_t WebImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  int *v27;
  uint64_t *v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<WebImage.CodingKeys>);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_2();
  v27 = (int *)type metadata accessor for WebImage();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_2_2();
  v28 = (uint64_t *)(v10 - v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type WebImage.CodingKeys and conformance WebImage.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
    return OUTLINED_FUNCTION_10_22();
  *v28 = KeyedDecodingContainer.decode(_:forKey:)();
  v28[1] = v11;
  type metadata accessor for URL();
  lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  outlined init with take of URL?(v7, (uint64_t)v28 + v27[5]);
  v12 = OUTLINED_FUNCTION_2_23();
  v13 = (uint64_t *)((char *)v28 + v27[6]);
  *v13 = v12;
  v13[1] = v14;
  v15 = OUTLINED_FUNCTION_2_23();
  v16 = (uint64_t *)((char *)v28 + v27[7]);
  *v16 = v15;
  v16[1] = v17;
  v18 = OUTLINED_FUNCTION_2_23();
  v19 = (uint64_t *)((char *)v28 + v27[8]);
  *v19 = v18;
  v19[1] = v20;
  v21 = OUTLINED_FUNCTION_2_23();
  v23 = v22;
  OUTLINED_FUNCTION_57_5();
  v24 = (uint64_t *)((char *)v28 + v27[9]);
  *v24 = v21;
  v24[1] = v23;
  outlined init with copy of WebImage((uint64_t)v28, a2);
  OUTLINED_FUNCTION_10_22();
  return outlined destroy of WebImage((uint64_t)v28);
}

uint64_t outlined init with copy of WebImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of WebImage(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebImage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for WebImage(_QWORD *a1)
{
  uint64_t result;

  a1[1] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebImage and conformance WebImage, (uint64_t (*)(uint64_t))type metadata accessor for WebImage, (uint64_t)&protocol conformance descriptor for WebImage);
  a1[2] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebImage and conformance WebImage, (uint64_t (*)(uint64_t))type metadata accessor for WebImage, (uint64_t)&protocol conformance descriptor for WebImage);
  result = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebImage and conformance WebImage, (uint64_t (*)(uint64_t))type metadata accessor for WebImage, (uint64_t)&protocol conformance descriptor for WebImage);
  a1[3] = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance WebImage@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebImage.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance WebImage(_QWORD *a1)
{
  return WebImage.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebImage(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[8];
    v23 = a3[9];
    v24 = (uint64_t *)((char *)v4 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (uint64_t *)((char *)v4 + v23);
    v28 = (uint64_t *)((char *)a2 + v23);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for WebImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WebImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WebImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for WebImage(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *assignWithTake for WebImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[9];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebImage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432C8F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WebImage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432C9000(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for WebImage()
{
  unint64_t v0;

  type metadata accessor for URL?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for WebImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2432C9140 + 4 * byte_2433583CB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2432C9174 + 4 * byte_2433583C6[v4]))();
}

uint64_t sub_2432C9174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C917C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432C9184);
  return result;
}

uint64_t sub_2432C9190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432C9198);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2432C919C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432C91A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for WebImage.CodingKeys()
{
  return &unk_2513D1A70;
}

uint64_t OUTLINED_FUNCTION_2_23()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return type metadata accessor for WebImage();
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t static SearchToolMCGrounding.openAppWhenRun.getter()
{
  return 0;
}

uint64_t static SearchToolMCGrounding.isDiscoverable.getter()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolMCGrounding.isDiscoverable;
}

uint64_t static SearchToolMCGrounding.isDiscoverable.setter(char a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_6();
  static SearchToolMCGrounding.isDiscoverable = a1;
  return result;
}

uint64_t (*static SearchToolMCGrounding.isDiscoverable.modify())()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolControl.assistantOnly.modify;
}

uint64_t static SearchToolMCGrounding.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for title != -1)
    swift_once();
  v2 = type metadata accessor for LocalizedStringResource();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCGrounding.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void static SearchToolMCGrounding.description.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCGrounding.description);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolMCGrounding.description.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCGrounding.description);
  OUTLINED_FUNCTION_2_6();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static SearchToolMCGrounding.description.modify())()
{
  uint64_t v0;

  if (one-time initialization token for description != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_17_5();
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolMCGrounding.description);
  OUTLINED_FUNCTION_2_6();
  return static UTType.searchToolExportedExperiences.modify;
}

void SearchToolMCGrounding.rawQueries.getter()
{
  IntentParameter.wrappedValue.getter();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchToolMCGrounding.rawQueries : SearchToolMCGrounding(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SearchToolMCGrounding.rawQueries.getter();
  *a1 = v2;
}

void SearchToolMCGrounding.rawQueries.setter()
{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCGrounding.rawQueries.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  v1[4] = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCGrounding.$rawQueries.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchToolMCGrounding.quParses.getter()
{
  IntentParameter.wrappedValue.getter();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchToolMCGrounding.quParses : SearchToolMCGrounding(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SearchToolMCGrounding.quParses.getter();
  *a1 = v2;
}

void key path setter for SearchToolMCGrounding.rawQueries : SearchToolMCGrounding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  a5(v6);
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCGrounding.quParses.setter()
{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCGrounding.quParses.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  v1[4] = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCGrounding.$quParses.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolMCGrounding.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for InputConnectionBehavior();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentDialog?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String.IntentInputOptions?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  v14 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<[String]>);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v14);
  v13 = type metadata accessor for String.IntentInputOptions();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v13);
  type metadata accessor for IntentDialog();
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_15_22();
  v12 = OUTLINED_FUNCTION_3_17();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v14);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v13);
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_15_22();
  result = OUTLINED_FUNCTION_3_17();
  *a1 = v12;
  a1[1] = result;
  return result;
}

uint64_t SearchToolMCGrounding.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 80) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MemoryCreationQUResult?);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  v3 = type metadata accessor for MemoryCreationQUResult();
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 112) = swift_task_alloc();
  *(_QWORD *)(v2 + 120) = swift_task_alloc();
  *(_OWORD *)(v2 + 128) = *v1;
  return swift_task_switch();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t SearchToolMCGrounding.perform()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  if (one-time initialization token for stextension != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  *(_QWORD *)(v0 + 144) = __swift_project_value_buffer(v1, (uint64_t)static Logging.stextension);
  swift_retain_n();
  swift_retain_n();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v4 = 134217984;
    OUTLINED_FUNCTION_75();
    swift_retain();
    IntentParameter.wrappedValue.getter();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_4_12();
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_4_12();
    *(_QWORD *)(v0 + 72) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_4_12();
    _os_log_impl(&dword_24315F000, v2, v3, "SearchTool Memory Creation Grounding perform() with %ld queries", v4, 0xCu);
    specialized UnsafeMutablePointer.deallocate()();
  }
  swift_release_n();
  swift_release_n();

  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_15_5();
  IntentParameter.wrappedValue.getter();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_39_0();
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_15_5();
  IntentParameter.wrappedValue.getter();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_39_0();
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  swift_bridgeObjectRelease();
  if (v6 != v7)
  {
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_24315F000, v22, v23, "SearchTool Memory Creation Grounding should have the same number of raw queries and qu parses", v24, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUResult]);
    lazy protocol witness table accessor for type [MemoryCreationQUResult] and conformance <A> [A]();
    static IntentResult.result<A>(value:)();
    goto LABEL_13;
  }
  swift_retain();
  OUTLINED_FUNCTION_15_5();
  IntentParameter.wrappedValue.getter();
  swift_release();
  OUTLINED_FUNCTION_39_0();
  v8 = *(_QWORD **)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v8;
  v9 = v8[2];
  *(_QWORD *)(v0 + 160) = v9;
  if (!v9)
  {
    OUTLINED_FUNCTION_36_0();
    *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUResult]);
    OUTLINED_FUNCTION_28_15();
    static IntentResult.result<A>(value:)();
    OUTLINED_FUNCTION_36_0();
LABEL_13:
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = type metadata accessor for OmniSearchService();
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = v11;
  *(_QWORD *)(v0 + 168) = v10;
  *(_QWORD *)(v0 + 192) = v8[4];
  *(_QWORD *)(v0 + 200) = v8[5];
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_91_0();
  IntentParameter.wrappedValue.getter();
  swift_release();
  result = OUTLINED_FUNCTION_69();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16))
  {
    OUTLINED_FUNCTION_11_19();
    OUTLINED_FUNCTION_36_0();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v13;
    v14 = OUTLINED_FUNCTION_0_30(v13, (uint64_t)SearchToolMCGrounding.perform());
    return static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(v14, v15, v16, v17, v18, v19, v20, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = swift_retain();
  MemoryCreationQUResult.init(parse:)(v4, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 88);

    outlined destroy of MemoryCreationQUResult?(v5);
    v6 = *(_QWORD *)(v0 + 184);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    outlined init with take of MemoryCreationQUResult(*(_QWORD *)(v0 + 88), v7);
    outlined init with copy of MemoryCreationQUResult(v7, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *(_QWORD *)(v0 + 184);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_25_14();
      v6 = v26;
    }
    v10 = *(_QWORD *)(v6 + 16);
    if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      OUTLINED_FUNCTION_25_14();
      v6 = v27;
    }
    v11 = *(void **)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v6 + 16) = v10 + 1;
    outlined init with take of MemoryCreationQUResult(v12, v6+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v10);

    outlined destroy of MemoryCreationQUResult(v13);
  }
  OUTLINED_FUNCTION_21_16();
  if (v15)
  {
    OUTLINED_FUNCTION_19_19();
    *(_QWORD *)(v0 + 56) = v6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUResult]);
    OUTLINED_FUNCTION_28_15();
    OUTLINED_FUNCTION_10_23();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 176) = v1;
    *(_QWORD *)(v0 + 184) = v6;
    OUTLINED_FUNCTION_5_31(*(_QWORD *)(v0 + 152));
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_91_0();
    IntentParameter.wrappedValue.getter();
    OUTLINED_FUNCTION_69();
    result = OUTLINED_FUNCTION_50();
    if (v1 >= *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16))
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_11_19();
      OUTLINED_FUNCTION_36_0();
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v17;
      v18 = OUTLINED_FUNCTION_0_30(v17, (uint64_t)SearchToolMCGrounding.perform());
      return static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(v18, v19, v20, v21, v22, v23, v24, v25);
    }
  }
  return result;
}

{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(void **)(v0 + 232);
  v3 = v2;
  swift_bridgeObjectRetain();
  v4 = v2;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 200);
  if (v7)
  {
    v10 = *(_QWORD *)(v0 + 192);
    v11 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v12 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v28 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v11 = 138412546;
    v13 = v8;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v11 + 4) = v14;
    *v12 = v14;
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_21_4();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v9, &v28);
    *(_QWORD *)(v11 + 14) = v15;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v5, v6, "SearchTool Memory Creation Grounding failed with error: %@, not adding this query %s to the returned results", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();
  swift_bridgeObjectRelease_n();

  OUTLINED_FUNCTION_21_16();
  if (v16)
  {
    v17 = *(_QWORD *)(v0 + 184);
    OUTLINED_FUNCTION_19_19();
    *(_QWORD *)(v0 + 56) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUResult]);
    OUTLINED_FUNCTION_28_15();
    OUTLINED_FUNCTION_10_23();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_8_20();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 176) = v1;
    OUTLINED_FUNCTION_5_31(*(_QWORD *)(v0 + 152));
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_91_0();
    IntentParameter.wrappedValue.getter();
    OUTLINED_FUNCTION_69();
    result = OUTLINED_FUNCTION_13_8();
    if (v1 >= *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16))
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_11_19();
      OUTLINED_FUNCTION_36_0();
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v19;
      v20 = OUTLINED_FUNCTION_0_30(v19, (uint64_t)SearchToolMCGrounding.perform());
      return static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(v20, v21, v22, v23, v24, v25, v26, v27);
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [MemoryCreationQUResult] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type [MemoryCreationQUResult] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [MemoryCreationQUResult] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MemoryCreationQUResult]);
    v2 = lazy protocol witness table accessor for type MemoryCreationQUResult and conformance MemoryCreationQUResult();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6630], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MemoryCreationQUResult] and conformance <A> [A]);
  }
  return result;
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolMCGrounding(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = protocol witness for AppIntent.perform() in conformance SearchToolControl;
  return SearchToolMCGrounding.perform()(a1);
}

uint64_t protocol witness for static PersistentlyIdentifiable.persistentIdentifier.getter in conformance SearchToolMCGrounding()
{
  lazy protocol witness table accessor for type SearchToolMCGrounding and conformance SearchToolMCGrounding();
  return static AppIntent.persistentIdentifier.getter();
}

uint64_t outlined init with take of MemoryCreationQUResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MemoryCreationQUResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of MemoryCreationQUResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MemoryCreationQUResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MemoryCreationQUResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MemoryCreationQUResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type SearchToolMCGrounding and conformance SearchToolMCGrounding()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding;
  if (!lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCGrounding, &type metadata for SearchToolMCGrounding);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding;
  if (!lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCGrounding, &type metadata for SearchToolMCGrounding);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding;
  if (!lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCGrounding, &type metadata for SearchToolMCGrounding);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCGrounding and conformance SearchToolMCGrounding);
  }
  return result;
}

uint64_t associated type witness table accessor for AppIntent.PerformResult : IntentResult in SearchToolMCGrounding()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t associated type witness table accessor for AppIntent.SummaryContent : ParameterSummary in SearchToolMCGrounding()
{
  lazy protocol witness table accessor for type SearchToolMCGrounding and conformance SearchToolMCGrounding();
  return swift_getOpaqueTypeConformance2();
}

void sub_2432CA83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolMCGrounding.rawQueries : SearchToolMCGrounding(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolMCGrounding.rawQueries.setter);
}

void sub_2432CA85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolMCGrounding.rawQueries : SearchToolMCGrounding(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolMCGrounding.quParses.setter);
}

ValueMetadata *type metadata accessor for SearchToolMCGrounding()
{
  return &type metadata for SearchToolMCGrounding;
}

unint64_t lazy protocol witness table accessor for type IntentResultContainer<[MemoryCreationQUResult], Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type IntentResultContainer<[MemoryCreationQUResult], Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>;
  if (!lazy protocol witness table cache variable for type IntentResultContainer<[MemoryCreationQUResult], Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentResultContainer<[MemoryCreationQUResult], Never, Never, Never>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5E60], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentResultContainer<[MemoryCreationQUResult], Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t OUTLINED_FUNCTION_5_31@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = a1 + 16 * v2;
  *(_QWORD *)(v1 + 192) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v1 + 200) = *(_QWORD *)(v3 + 40);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_22()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  return static IntentResult.result<A>(value:)();
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 208) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_25_14()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

unint64_t OUTLINED_FUNCTION_28_15()
{
  return lazy protocol witness table accessor for type [MemoryCreationQUResult] and conformance <A> [A]();
}

void specialized SearchItem.source.getter()
{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for WebAnswer, &demangling cache variable for type metadata for WebAnswer.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for WebImage, &demangling cache variable for type metadata for WebImage.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for Contact, &demangling cache variable for type metadata for Contact.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for Answer, &demangling cache variable for type metadata for Answer.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for Photo, &demangling cache variable for type metadata for Photo.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for RestaurantReservation, &demangling cache variable for type metadata for RestaurantReservation.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for WalletTransaction, &demangling cache variable for type metadata for WalletTransaction.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for MobileSMSDocument, &demangling cache variable for type metadata for MobileSMSDocument.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for FlightReservation, &demangling cache variable for type metadata for FlightReservation.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for HotelReservation, &demangling cache variable for type metadata for HotelReservation.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for IntentFileItem, &demangling cache variable for type metadata for IntentFileItem.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for EmailDocument, &demangling cache variable for type metadata for EmailDocument.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for CalendarEvent, &demangling cache variable for type metadata for CalendarEvent.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for AppEntityItem, &demangling cache variable for type metadata for AppEntityItem.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for NoteDocument, &demangling cache variable for type metadata for NoteDocument.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for FileDocument, &demangling cache variable for type metadata for FileDocument.Type);
}

{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeoLocation.Type);
  OUTLINED_FUNCTION_275_0();
  OUTLINED_FUNCTION_233_0();
  OUTLINED_FUNCTION_275_1();
  v1 = v0;
  OUTLINED_FUNCTION_36_0();
  if (v1)
  {
    OUTLINED_FUNCTION_265_1();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_225_1();
    OUTLINED_FUNCTION_196_2();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_234_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_194_1();
  }
  else
  {
    __break(1u);
  }
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for WalletPass, &demangling cache variable for type metadata for WalletPass.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for KGDocument, &demangling cache variable for type metadata for KGDocument.Type);
}

{
  specialized SearchItem.source.getter((void (*)(_QWORD))type metadata accessor for GlobalItem, &demangling cache variable for type metadata for GlobalItem.Type);
}

void specialized SearchItem.source.getter(void (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  a1(0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_275_0();
  OUTLINED_FUNCTION_233_0();
  OUTLINED_FUNCTION_275_1();
  v4 = v3;
  OUTLINED_FUNCTION_36_0();
  if (v4)
  {
    OUTLINED_FUNCTION_265_1();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_225_1();
    OUTLINED_FUNCTION_196_2();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_234_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_194_1();
  }
  else
  {
    __break(1u);
  }
}

void specialized static SearchItem.== infix(_:_:)()
{
  specialized static SearchItem.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_45_13();
  type metadata accessor for WebImage();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v11 = v10;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v13 && v11 == v12)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for WebImage.Type & 1) == 0)
        goto LABEL_16;
    }
    WebImage.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    if (v3 == WebImage.llmConsumableDescription.getter() && v1 == v15)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for Contact(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_230_1();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for Contact.Type & 1) == 0)
        goto LABEL_16;
    }
    Contact.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    Contact.llmConsumableDescription.getter();
    if (v3 == v17 && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for Answer(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for Answer.Type & 1) == 0)
        goto LABEL_16;
    }
    Answer.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    Answer.llmConsumableDescription.getter();
    if (v3 == v17 && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v36)(void);
  char *v37;

  OUTLINED_FUNCTION_18_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8(0);
  OUTLINED_FUNCTION_15();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v36 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v36 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v36 - v19;
  LOBYTE(v3) = v3(v5, v7);
  OUTLINED_FUNCTION_13_7(v7, (uint64_t)v20);
  OUTLINED_FUNCTION_13_7(v5, (uint64_t)v18);
  if ((v3 & 1) != 0)
  {
    v36 = v1;
    v37 = v12;
    OUTLINED_FUNCTION_273_1();
    v22 = v21;
    v24 = v23;
    OUTLINED_FUNCTION_273_1();
    if (v22 == v26 && v24 == v25)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7((uint64_t)v18);
      OUTLINED_FUNCTION_6_7((uint64_t)v20);
      OUTLINED_FUNCTION_13_7(v7, (uint64_t)v15);
      v29 = (uint64_t)v37;
      OUTLINED_FUNCTION_13_7(v5, (uint64_t)v37);
    }
    else
    {
      v28 = OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_6_7((uint64_t)v18);
      OUTLINED_FUNCTION_6_7((uint64_t)v20);
      OUTLINED_FUNCTION_13_7(v7, (uint64_t)v15);
      v29 = (uint64_t)v37;
      OUTLINED_FUNCTION_13_7(v5, (uint64_t)v37);
      if ((v28 & 1) == 0)
        goto LABEL_16;
    }
    v30 = v36;
    v31 = v36();
    v33 = v32;
    if (v31 == v30() && v33 == v34)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_56_0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7((uint64_t)v18);
    OUTLINED_FUNCTION_6_7((uint64_t)v20);
    OUTLINED_FUNCTION_13_7(v7, (uint64_t)v15);
    OUTLINED_FUNCTION_13_7(v5, (uint64_t)v12);
    v29 = (uint64_t)v12;
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v29);
  OUTLINED_FUNCTION_6_7((uint64_t)v15);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for RestaurantReservation(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for RestaurantReservation.Type & 1) == 0)
        goto LABEL_16;
    }
    RestaurantReservation.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    RestaurantReservation.llmConsumableDescription.getter();
    if (v3 == v17 && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for WalletTransaction(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_229_1();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for WalletTransaction.Type & 1) == 0)
        goto LABEL_16;
    }
    WalletTransaction.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    if (v3 == WalletTransaction.llmConsumableDescription.getter() && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for FlightReservation(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for FlightReservation.Type & 1) == 0)
        goto LABEL_16;
    }
    FlightReservation.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    FlightReservation.llmConsumableDescription.getter();
    if (v3 == v17 && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for HotelReservation(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for HotelReservation.Type & 1) == 0)
        goto LABEL_16;
    }
    HotelReservation.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    HotelReservation.llmConsumableDescription.getter();
    if (v3 == v17 && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_45_13();
  type metadata accessor for IntentFileItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v11 = v10;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v13 && v11 == v12)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for IntentFileItem.Type & 1) == 0)
        goto LABEL_16;
    }
    IntentFileItem.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    IntentFileItem.llmConsumableDescription.getter();
    if (v3 == v16 && v1 == v15)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for CalendarEvent(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_229_1();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for CalendarEvent.Type & 1) == 0)
        goto LABEL_16;
    }
    CalendarEvent.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    if (v3 == CalendarEvent.llmConsumableDescription.getter() && v1 == v16)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  specialized static SearchItem.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for WalletPass(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_230_1();
  v12 = v11;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v14 && v12 == v13)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for WalletPass.Type & 1) == 0)
        goto LABEL_11;
    }
    WalletPass.llmConsumableDescription.getter();
  }
  OUTLINED_FUNCTION_6_7(v4);
  OUTLINED_FUNCTION_6_7(v3);
  OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_13_7(v1, v5);
LABEL_11:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_45_13();
  type metadata accessor for KGDocument();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v11 = v10;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v13 && v11 == v12)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for KGDocument.Type & 1) == 0)
        goto LABEL_16;
    }
    KGDocument.llmConsumableDescription.getter();
    OUTLINED_FUNCTION_46_13();
    if (v3 == KGDocument.llmConsumableDescription.getter() && v1 == v15)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_45_13();
  type metadata accessor for GlobalItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_43_14();
  OUTLINED_FUNCTION_50_14();
  v11 = v10;
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_23();
    OUTLINED_FUNCTION_10_24();
    if (v5 == v13 && v11 == v12)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      OUTLINED_FUNCTION_13_7(v1, v5);
    }
    else
    {
      OUTLINED_FUNCTION_4_30();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      OUTLINED_FUNCTION_2_7(v1, v5);
      if ((&demangling cache variable for type metadata for GlobalItem.Type & 1) == 0)
        goto LABEL_16;
    }
    GlobalItem.description.getter();
    OUTLINED_FUNCTION_46_13();
    if (v3 == GlobalItem.description.getter() && v1 == v15)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_3_18();
      OUTLINED_FUNCTION_39_17();
      OUTLINED_FUNCTION_56_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_18_2();
  v6 = OUTLINED_FUNCTION_45_13();
  type metadata accessor for SearchResultItem(v6);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_170_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_20();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_19();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_14();
  v11 = specialized SearchItem.matchesAsset(_:)(v1, v2);
  OUTLINED_FUNCTION_2_7(v2, v3);
  OUTLINED_FUNCTION_2_7(v1, v4);
  if ((v11 & 1) != 0)
  {
    v36 = v5;
    SearchResultItem.associatedValue.getter();
    v12 = v38;
    v13 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
    v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    SearchResultItem.associatedValue.getter();
    v18 = v38;
    v17 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v18, v17);
    v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    if (v14 == v19 && v16 == v21)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_6_7(v4);
      OUTLINED_FUNCTION_6_7(v3);
      OUTLINED_FUNCTION_2_24();
      v5 = v36;
      OUTLINED_FUNCTION_13_7(v1, v36);
    }
    else
    {
      OUTLINED_FUNCTION_82_7();
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_40_11();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_1_9(v4);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v2, v0);
      v5 = v36;
      OUTLINED_FUNCTION_2_7(v1, v36);
      if ((v17 & 1) == 0)
        goto LABEL_16;
    }
    SearchResultItem.associatedValue.getter();
    v23 = v39;
    OUTLINED_FUNCTION_236_0();
    v24 = OUTLINED_FUNCTION_282_1();
    v26 = v25(v24, v23);
    v28 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    SearchResultItem.associatedValue.getter();
    v29 = v39;
    OUTLINED_FUNCTION_236_0();
    v30 = OUTLINED_FUNCTION_282_1();
    v32 = v31(v30, v29);
    v34 = v33;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    if (v26 == v32 && v28 == v34)
    {
      OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_39_17();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_7(v4);
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_2_24();
    OUTLINED_FUNCTION_13_7(v1, v5);
  }
LABEL_16:
  OUTLINED_FUNCTION_6_7(v5);
  OUTLINED_FUNCTION_6_7(v0);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

uint64_t specialized static SearchItem.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[160];
  _BYTE v21[160];

  outlined retain of GeoLocation((uint64_t)a2);
  v4 = specialized SearchItem.matchesAsset(_:)(a2, a1);
  OUTLINED_FUNCTION_228_2();
  if ((v4 & 1) != 0)
  {
    outlined retain of GeoLocation((uint64_t)a2);
    outlined retain of GeoLocation((uint64_t)a1);
    specialized SearchItem.source.getter();
    v6 = v5;
    v8 = v7;
    specialized SearchItem.source.getter();
    if (v6 == v10 && v8 == v9)
    {
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_228_2();
      OUTLINED_FUNCTION_276_0();
      OUTLINED_FUNCTION_204_1(v21, a1);
      OUTLINED_FUNCTION_204_1(v20, a2);
    }
    else
    {
      v12 = OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_80_0();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_228_2();
      OUTLINED_FUNCTION_276_0();
      OUTLINED_FUNCTION_204_1(v21, a1);
      OUTLINED_FUNCTION_204_1(v20, a2);
      v13 = 0;
      if ((v12 & 1) == 0)
        return v13 & 1;
    }
    outlined retain of GeoLocation((uint64_t)a2);
    outlined retain of GeoLocation((uint64_t)a1);
    v14 = GeoLocation.llmConsumableDescription.getter();
    v16 = v15;
    if (v14 == GeoLocation.llmConsumableDescription.getter() && v16 == v17)
      v13 = 1;
    else
      v13 = OUTLINED_FUNCTION_3_18();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_228_2();
    OUTLINED_FUNCTION_276_0();
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t ExtractionRule.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  _BYTE v6[24];
  ValueMetadata *v7;
  unint64_t v8;

  v2 = (*(uint64_t (**)(void))(a2 + 24))();
  if (v2 == 7)
  {
    v3 = 1;
  }
  else
  {
    v4 = v2;
    v7 = &type metadata for FeatureFlag;
    v8 = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
    v6[0] = v4;
    v3 = isFeatureEnabled(_:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return v3 & 1;
}

void static ExtractedInfo.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_2();
  v16 = v1;
  v17 = v2;
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  type metadata accessor for URL();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0_3();
  type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_15();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_19_20();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ExtractedInfo, ExtractedInfo));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_44_11();
  v14 = v0 + *(int *)(v13 + 48);
  OUTLINED_FUNCTION_106_2(v16, v0);
  OUTLINED_FUNCTION_106_2(v17, v14);
  v15 = (char *)sub_2432CCBFC + 4 * byte_2433586F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_2432CCBFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  outlined init with copy of SearchResult(v0, (uint64_t)v2, type metadata accessor for ExtractedInfo);
  v4 = *v2;
  v3 = v2[1];
  if (OUTLINED_FUNCTION_76_11())
  {
    v5 = OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_85_3(v5, &demangling cache variable for type metadata for (ExtractedInfo, ExtractedInfo));
  }
  else
  {
    if (v4 == *v1 && v3 == v1[1])
    {
      v7 = OUTLINED_FUNCTION_102_0();
    }
    else
    {
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_80_0();
      v7 = OUTLINED_FUNCTION_36_0();
    }
    OUTLINED_FUNCTION_81_4(v7, type metadata accessor for ExtractedInfo);
  }
  OUTLINED_FUNCTION_43_0();
}

uint64_t type metadata accessor for ExtractedInfo(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for ExtractedInfo);
}

void ExtractedResult.newResult.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_44_4();
  v6 = type metadata accessor for ExtractedResult(v5);
  OUTLINED_FUNCTION_106_2(v1 + *(int *)(v6 + 20), v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 6)
    goto LABEL_4;
  if ((_DWORD)EnumCaseMultiPayload == 5)
  {
    OUTLINED_FUNCTION_124_0(EnumCaseMultiPayload, type metadata accessor for ExtractedInfo);
LABEL_4:
    outlined init with copy of SearchResult(v1, a1, type metadata accessor for SearchResult);
    v8 = OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_45_4(a1, 0, v9, v8);
    return;
  }
  v10 = OUTLINED_FUNCTION_77_0();
  v13 = OUTLINED_FUNCTION_49(a1, v11, v12, v10);
  OUTLINED_FUNCTION_124_0(v13, type metadata accessor for ExtractedInfo);
}

uint64_t type metadata accessor for ExtractedResult(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for ExtractedResult);
}

void ExtractedResult.init(result:type:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  outlined init with take of SearchResult(a1, a3, type metadata accessor for SearchResult);
  v5 = type metadata accessor for ExtractedResult(0);
  outlined init with take of SearchResult(a2, a3 + *(int *)(v5 + 20), type metadata accessor for ExtractedInfo);
}

uint64_t ExtractionRule.checkFirstN.getter()
{
  return 0;
}

uint64_t ExtractionRule.requiresHydratedResults.getter()
{
  return 0;
}

uint64_t ExtractionRule.featureFlag.getter()
{
  return 7;
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance InstantAnswerExtraction()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_92_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_11(v1, (uint64_t)protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch);
  return OUTLINED_FUNCTION_64_10(v2, v3, v4, v5, v6, v7);
}

uint64_t specialized ExtractionRule.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 176) = a7;
  *(_QWORD *)(v8 + 184) = a8;
  *(_BYTE *)(v8 + 380) = a6;
  *(_QWORD *)(v8 + 160) = a4;
  *(_QWORD *)(v8 + 168) = a5;
  *(_QWORD *)(v8 + 152) = a3;
  v9 = type metadata accessor for ExtractedResult(0);
  *(_QWORD *)(v8 + 192) = v9;
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = type metadata accessor for Answer(0);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = type metadata accessor for ExtractedInfo(0);
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  *(_QWORD *)(v8 + 280) = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  return swift_task_switch();
}

void specialized ExtractionRule.extractResults(query:results:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *rawValue;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(void);
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_59();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + 16);
  *(_QWORD *)(v0 + 296) = v1;
  if (!v1)
    goto LABEL_39;
  v2 = v0 + 16;
  v3 = v0 + 96;
  v4 = v0 + 136;
  v5 = *(_QWORD *)(v0 + 280);
  *(_DWORD *)(v0 + 376) = *(_DWORD *)(v5 + 80);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    *(_QWORD *)(v0 + 320) = v6;
    *(_QWORD *)(v0 + 328) = v7;
    *(_QWORD *)(v0 + 312) = v1;
    v8 = OUTLINED_FUNCTION_109_7(v6);
    outlined init with copy of SearchResult(v8, v9, type metadata accessor for SearchResult);
    if (v1 >= 1)
      break;
    OUTLINED_FUNCTION_83_2(*(_QWORD *)(v0 + 288));
    v1 = 0;
LABEL_36:
    OUTLINED_FUNCTION_128_6();
    if (v39)
    {
      OUTLINED_FUNCTION_242_1();
LABEL_39:
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_34_3();
      OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_41_2();
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_55();
      v76 = OUTLINED_FUNCTION_84_11();
      OUTLINED_FUNCTION_17_23(v76, v77);
      return;
    }
  }
  OUTLINED_FUNCTION_176_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  OUTLINED_FUNCTION_82_7();
  if (!OUTLINED_FUNCTION_7_16())
  {
    v51 = *(_QWORD *)(v0 + 256);
    v52 = *(_QWORD *)(v0 + 224);
    OUTLINED_FUNCTION_49(v52, v10, v11, *(_QWORD *)(v0 + 232));
    outlined destroy of MobileSMSDocument?(v52, &demangling cache variable for type metadata for Answer?);
    v53 = OUTLINED_FUNCTION_89_5(v51);
    goto LABEL_29;
  }
  v13 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 224);
  __swift_storeEnumTagSinglePayload(v14, 0, 1, v13);
  outlined init with take of SearchResult(v14, v12, type metadata accessor for Answer);
  OUTLINED_FUNCTION_240(*(int *)(v13 + 32));
  if (!v17)
  {
LABEL_28:
    v57 = *(_QWORD *)(v0 + 240);
    OUTLINED_FUNCTION_121_5(*(_QWORD *)(v0 + 256), v15, v16, *(_QWORD *)(v0 + 264));
    _s10OmniSearch0B6ResultVWOhTm_1(v57, type metadata accessor for Answer);
LABEL_29:
    v58 = *(_QWORD *)(v0 + 256);
    v59 = OUTLINED_FUNCTION_120_7(v53, v54, *(_QWORD *)(v0 + 264));
    v60 = *(_QWORD *)(v0 + 288);
    if (v59 == 1)
    {
      v61 = *(_QWORD *)(v0 + 312);
      OUTLINED_FUNCTION_83_2(*(_QWORD *)(v0 + 288));
      outlined destroy of MobileSMSDocument?(v58, &demangling cache variable for type metadata for ExtractedInfo?);
      v1 = v61 - 1;
      v7 = *(_QWORD *)(v0 + 328);
    }
    else
    {
      v62 = v4;
      v63 = v3;
      v64 = v2;
      v65 = *(_QWORD *)(v0 + 272);
      v66 = *(_QWORD *)(v0 + 208);
      v67 = *(_QWORD *)(v0 + 192);
      OUTLINED_FUNCTION_170_0(v58, v65);
      outlined init with copy of SearchResult(v60, v66, type metadata accessor for SearchResult);
      OUTLINED_FUNCTION_2_7(v65, v66 + *(int *)(v67 + 20));
      v68 = OUTLINED_FUNCTION_214_1();
      v7 = *(_QWORD *)(v0 + 328);
      if ((v68 & 1) == 0)
      {
        OUTLINED_FUNCTION_24_16();
        v7 = v74;
      }
      v2 = v64;
      v3 = v63;
      v4 = v62;
      v69 = *(_QWORD *)(v7 + 16);
      if (v69 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        OUTLINED_FUNCTION_34_14();
        v7 = v75;
      }
      v70 = *(_QWORD *)(v0 + 288);
      v71 = *(_QWORD *)(v0 + 272);
      *(_QWORD *)(v7 + 16) = v69 + 1;
      OUTLINED_FUNCTION_193_1();
      outlined init with take of SearchResult(v72, v73, type metadata accessor for ExtractedResult);
      _s10OmniSearch0B6ResultVWOhTm_1(v71, type metadata accessor for ExtractedInfo);
      OUTLINED_FUNCTION_83_2(v70);
      v1 = *(_QWORD *)(v0 + 312);
    }
    goto LABEL_36;
  }
  v18 = one-time initialization token for kMediaRegexTriggersPerLang;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(v0 + 352) = 1;
  while (1)
  {
    rawValue = kMediaRegexTriggersPerLang._rawValue;
    if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
    {
      v33 = *(_QWORD *)(v0 + 216);
      v34 = OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_49(v33, v35, v36, v34);
LABEL_16:
      outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 216), &demangling cache variable for type metadata for Regex<Substring>?);
      goto LABEL_19;
    }
    v21 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRetain();
    v22 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v20);
    v23 = *(_QWORD *)(v0 + 216);
    if ((v24 & 1) != 0)
    {
      v25 = v22;
      v26 = rawValue[7];
      OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_108_10();
      OUTLINED_FUNCTION_89_11(v23, v26 + v27 * v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
      OUTLINED_FUNCTION_30_9();
    }
    else
    {
      OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_255_1();
      OUTLINED_FUNCTION_86_3();
    }
    __swift_storeEnumTagSinglePayload(v29, v30, v31, v32);
    v37 = *(_QWORD *)(v0 + 216);
    OUTLINED_FUNCTION_237_1();
    v38 = OUTLINED_FUNCTION_255();
    OUTLINED_FUNCTION_26_7(v37);
    if (v39)
      goto LABEL_16;
    v42 = *(_QWORD *)(v0 + 216);
    v44 = *(_QWORD *)(v0 + 152);
    v43 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_235_0();
    v45 = OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_89_11((uint64_t)v45, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32));
    OUTLINED_FUNCTION_263_1();
    OUTLINED_FUNCTION_280_1();
    *(_QWORD *)(v0 + 136) = v44;
    *(_QWORD *)(v0 + 144) = v43;
    lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_255_1();
    v46 = BidirectionalCollection<>.contains<A>(_:)();
    if ((v46 & 1) != 0)
      break;
    OUTLINED_FUNCTION_31_7();
LABEL_19:
    OUTLINED_FUNCTION_49(*(_QWORD *)(v0 + 248), v40, v41, *(_QWORD *)(v0 + 264));
    v47 = *(_QWORD *)(v0 + 248);
    OUTLINED_FUNCTION_22_2(v47, 1, *(_QWORD *)(v0 + 264));
    if (!v39)
    {
      swift_bridgeObjectRelease();
      v55 = OUTLINED_FUNCTION_216();
      outlined init with take of SearchResult(v55, v56, type metadata accessor for ExtractedInfo);
      goto LABEL_28;
    }
    v49 = *(_QWORD *)(v0 + 344);
    v48 = *(_QWORD *)(v0 + 352);
    outlined destroy of MobileSMSDocument?(v47, &demangling cache variable for type metadata for ExtractedInfo?);
    if (v48 == v49)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    v50 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(v0 + 352) = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      return;
    }
  }
  v78 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v78;
  v79 = OUTLINED_FUNCTION_218_0(v78);
  OUTLINED_FUNCTION_103_9(v79, v80);
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t (*v3)(uint64_t);
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *rawValue;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  char v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;

  OUTLINED_FUNCTION_94_2();
  v1 = (uint64_t)(v0 + 7);
  v75 = v0 + 12;
  OUTLINED_FUNCTION_31_7();
  v2 = &demangling cache variable for type metadata for ExtractedInfo?;
  v3 = type metadata accessor for Answer;
  while (1)
  {
    OUTLINED_FUNCTION_22_2(v0[31], 1, v0[33]);
    if (v4)
    {
      v6 = v0[43];
      v5 = v0[44];
      OUTLINED_FUNCTION_269_1();
      if (v5 != v6)
      {
        v42 = v0[44];
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = OUTLINED_FUNCTION_248_0();
      outlined init with take of SearchResult(v7, v8, type metadata accessor for ExtractedInfo);
    }
    do
    {
      v11 = v0[30];
      OUTLINED_FUNCTION_121_5(v0[32], v9, v10, v0[33]);
      _s10OmniSearch0B6ResultVWOhTm_1(v11, type metadata accessor for Answer);
      while (2)
      {
        OUTLINED_FUNCTION_271_1();
        if (v4)
        {
          v12 = v0[39];
          OUTLINED_FUNCTION_137_6((uint64_t)v3);
          OUTLINED_FUNCTION_269_1();
          v13 = v12 - 1;
          v14 = v0[41];
        }
        else
        {
          v15 = v2;
          v16 = v0[34];
          v17 = v0[26];
          v18 = v0[24];
          v19 = OUTLINED_FUNCTION_216();
          OUTLINED_FUNCTION_170_0(v19, v20);
          outlined init with copy of SearchResult((uint64_t)v3, v17, type metadata accessor for SearchResult);
          OUTLINED_FUNCTION_2_7(v16, v17 + *(int *)(v18 + 20));
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v14 = v0[41];
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_24_16();
            v14 = v34;
          }
          v22 = *(_QWORD *)(v14 + 16);
          if (v22 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            OUTLINED_FUNCTION_34_14();
            v14 = v35;
          }
          v23 = v0[36];
          v24 = v0[34];
          *(_QWORD *)(v14 + 16) = v22 + 1;
          OUTLINED_FUNCTION_104_12();
          outlined init with take of SearchResult(v25, v26, type metadata accessor for ExtractedResult);
          _s10OmniSearch0B6ResultVWOhTm_1(v24, type metadata accessor for ExtractedInfo);
          OUTLINED_FUNCTION_137_6(v23);
          v13 = v0[39];
          v2 = v15;
        }
        while (1)
        {
          OUTLINED_FUNCTION_128_6();
          if (v4)
          {
            OUTLINED_FUNCTION_242_1();
            OUTLINED_FUNCTION_118_4();
            OUTLINED_FUNCTION_95();
            OUTLINED_FUNCTION_34_3();
            OUTLINED_FUNCTION_99();
            OUTLINED_FUNCTION_41_2();
            OUTLINED_FUNCTION_73();
            OUTLINED_FUNCTION_56();
            OUTLINED_FUNCTION_55();
            v69 = OUTLINED_FUNCTION_84_11();
            OUTLINED_FUNCTION_16_12(v69, v70);
            return;
          }
          v0[40] = v27;
          v0[41] = v14;
          v0[39] = v13;
          v28 = OUTLINED_FUNCTION_109_7(v27);
          outlined init with copy of SearchResult(v28, v29, type metadata accessor for SearchResult);
          if (v13 >= 1)
            break;
          OUTLINED_FUNCTION_137_6(v0[36]);
          v13 = 0;
        }
        v3 = (uint64_t (*)(uint64_t))v0[28];
        OUTLINED_FUNCTION_176_0();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
        if (!OUTLINED_FUNCTION_7_16())
        {
          v32 = v0[32];
          v33 = v0[28];
          OUTLINED_FUNCTION_49(v33, v30, v31, v0[29]);
          outlined destroy of MobileSMSDocument?(v33, &demangling cache variable for type metadata for Answer?);
          OUTLINED_FUNCTION_89_5(v32);
          continue;
        }
        break;
      }
      v37 = v0[29];
      v36 = v0[30];
      v38 = v0[28];
      __swift_storeEnumTagSinglePayload(v38, 0, 1, v37);
      outlined init with take of SearchResult(v38, v36, type metadata accessor for Answer);
      v39 = *(int *)(v37 + 32);
      v3 = type metadata accessor for Answer;
      OUTLINED_FUNCTION_240(v39);
    }
    while (!v40);
    v41 = one-time initialization token for kMediaRegexTriggersPerLang;
    swift_bridgeObjectRetain();
    if (v41 != -1)
      swift_once();
    v42 = 0;
    v1 = (uint64_t)(v0 + 7);
LABEL_25:
    v0[44] = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    rawValue = kMediaRegexTriggersPerLang._rawValue;
    if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
    {
      v57 = v0[27];
      v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
      OUTLINED_FUNCTION_49(v57, v59, v60, v58);
LABEL_33:
      outlined destroy of MobileSMSDocument?(v0[27], &demangling cache variable for type metadata for Regex<Substring>?);
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_23_0();
    v44 = OUTLINED_FUNCTION_95_0();
    v46 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v45);
    v47 = v0[27];
    if ((v48 & 1) != 0)
    {
      v49 = v46;
      v50 = rawValue[7];
      OUTLINED_FUNCTION_215_1();
      OUTLINED_FUNCTION_108_10();
      OUTLINED_FUNCTION_89_11(v47, v50 + v51 * v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
      OUTLINED_FUNCTION_30_9();
    }
    else
    {
      OUTLINED_FUNCTION_215_1();
      OUTLINED_FUNCTION_86_3();
    }
    __swift_storeEnumTagSinglePayload(v53, v54, v55, v56);
    v61 = v0[27];
    OUTLINED_FUNCTION_237_1();
    OUTLINED_FUNCTION_215_1();
    OUTLINED_FUNCTION_26_7(v61);
    v3 = type metadata accessor for Answer;
    if (v4)
      goto LABEL_33;
    v64 = v0[27];
    v65 = v0[19];
    v74 = v0[20];
    v0[16] = OUTLINED_FUNCTION_235_0();
    __swift_allocate_boxed_opaque_existential_1(v75);
    OUTLINED_FUNCTION_281_1();
    OUTLINED_FUNCTION_89_11(v66, v64, v67);
    outlined init with take of SageSearchClient((__int128 *)v75, v1);
    OUTLINED_FUNCTION_280_1();
    v0[17] = v65;
    v0[18] = v74;
    lazy protocol witness table accessor for type String and conformance String();
    v68 = BidirectionalCollection<>.contains<A>(_:)();
    if ((v68 & 1) != 0)
    {
      v71 = (_QWORD *)swift_task_alloc();
      v0[45] = v71;
      v72 = OUTLINED_FUNCTION_218_0(v71);
      OUTLINED_FUNCTION_93_7(v72, v73);
      return;
    }
    OUTLINED_FUNCTION_31_7();
    v3 = type metadata accessor for Answer;
LABEL_36:
    OUTLINED_FUNCTION_49(v0[31], v62, v63, v0[33]);
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *rawValue;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + 16);
  if (!v1)
  {
    v66 = MEMORY[0x24BEE4AF8];
    goto LABEL_42;
  }
  v67 = (_QWORD *)(v0 + 56);
  v78 = (uint64_t *)(v0 + 96);
  v71 = *(_QWORD *)(v0 + 248);
  v75 = *(_QWORD *)(v0 + 232);
  v69 = *(_QWORD *)(v0 + 192);
  OUTLINED_FUNCTION_173_1();
  v4 = v2 + v3;
  v6 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x24BEE4AF8];
  v9 = v1;
  v72 = v6;
  v73 = v4;
  v68 = v1;
  while (1)
  {
    OUTLINED_FUNCTION_310_0(v4 + v7 * v6, *(_QWORD *)(v0 + 288));
    if (v9 >= 1)
      break;
    OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 288));
    v9 = 0;
LABEL_39:
    if (++v7 == v1)
    {
      OUTLINED_FUNCTION_242_1();
      v66 = v8;
LABEL_42:
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_104();
      OUTLINED_FUNCTION_34_3();
      OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_41_2();
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_55();
      (*(void (**)(uint64_t))(v0 + 8))(v66);
      return;
    }
  }
  v76 = v9 - 1;
  v77 = v9;
  SearchResultItem.associatedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (!OUTLINED_FUNCTION_7_16())
  {
    v50 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 224);
    OUTLINED_FUNCTION_49(v13, v10, v11, *(_QWORD *)(v0 + 232));
    outlined destroy of MobileSMSDocument?(v13, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_89_5(v50);
LABEL_31:
    OUTLINED_FUNCTION_271_1();
    if (v38)
    {
      OUTLINED_FUNCTION_59_3(v13);
      outlined destroy of MobileSMSDocument?(v14, &demangling cache variable for type metadata for ExtractedInfo?);
      v9 = v76;
    }
    else
    {
      v53 = v7;
      v54 = *(_QWORD *)(v0 + 272);
      v55 = *(_QWORD *)(v0 + 208);
      OUTLINED_FUNCTION_170_0(v14, v54);
      outlined init with copy of SearchResult(v13, v55, type metadata accessor for SearchResult);
      OUTLINED_FUNCTION_2_7(v54, v55 + *(int *)(v69 + 20));
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_228();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v64;
      }
      v6 = v72;
      v4 = v73;
      v7 = v53;
      v58 = *(_QWORD *)(v8 + 16);
      v57 = *(_QWORD *)(v8 + 24);
      if (v58 >= v57 >> 1)
      {
        OUTLINED_FUNCTION_130_1(v57);
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v65;
      }
      v59 = *(_QWORD *)(v0 + 288);
      v60 = *(_QWORD *)(v0 + 272);
      *(_QWORD *)(v8 + 16) = v58 + 1;
      OUTLINED_FUNCTION_10_2();
      outlined init with take of SearchResult(v63, v8 + v61 + *(_QWORD *)(v62 + 72) * v58, type metadata accessor for ExtractedResult);
      _s10OmniSearch0B6ResultVWOhTm_1(v60, type metadata accessor for ExtractedInfo);
      OUTLINED_FUNCTION_59_3(v59);
      v9 = v77;
    }
    goto LABEL_39;
  }
  v74 = v8;
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = 1;
  OUTLINED_FUNCTION_53_16(v13, v10, v11, *(_QWORD *)(v0 + 232));
  outlined init with take of SearchResult(v13, v12, type metadata accessor for Answer);
  v79 = *(_QWORD *)(*(_QWORD *)(v12 + *(int *)(v75 + 32)) + 16);
  if (!v79)
  {
    v1 = v68;
LABEL_30:
    v52 = *(_QWORD *)(v0 + 240);
    OUTLINED_FUNCTION_121_5(*(_QWORD *)(v0 + 256), v15, v16, *(_QWORD *)(v0 + 264));
    _s10OmniSearch0B6ResultVWOhTm_1(v52, type metadata accessor for Answer);
    goto LABEL_31;
  }
  v70 = v7;
  v17 = one-time initialization token for kMediaRegexTriggersPerLang;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = 0;
  while (1)
  {
    v19 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    rawValue = kMediaRegexTriggersPerLang._rawValue;
    if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
    {
      v33 = *(_QWORD *)(v0 + 216);
      v34 = OUTLINED_FUNCTION_224_2();
      OUTLINED_FUNCTION_49(v33, v35, v36, v34);
LABEL_17:
      outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 216), &demangling cache variable for type metadata for Regex<Substring>?);
LABEL_18:
      OUTLINED_FUNCTION_49(*(_QWORD *)(v0 + 248), v39, v40, *(_QWORD *)(v0 + 264));
      goto LABEL_19;
    }
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    OUTLINED_FUNCTION_91_0();
    v23 = specialized __RawDictionaryStorage.find<A>(_:)(v22, v21);
    v13 = *(_QWORD *)(v0 + 216);
    if ((v24 & 1) != 0)
    {
      v25 = v23;
      v26 = rawValue[7];
      OUTLINED_FUNCTION_224_2();
      OUTLINED_FUNCTION_108_10();
      OUTLINED_FUNCTION_89_11(v13, v26 + v27 * v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
      OUTLINED_FUNCTION_30_9();
    }
    else
    {
      OUTLINED_FUNCTION_224_2();
      OUTLINED_FUNCTION_86_3();
    }
    __swift_storeEnumTagSinglePayload(v29, v30, v31, v32);
    v37 = *(_QWORD *)(v0 + 216);
    OUTLINED_FUNCTION_237_1();
    OUTLINED_FUNCTION_224_2();
    OUTLINED_FUNCTION_26_7(v37);
    if (v38)
      goto LABEL_17;
    v42 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 160);
    v13 = OUTLINED_FUNCTION_235_0();
    *(_QWORD *)(v0 + 128) = v13;
    __swift_allocate_boxed_opaque_existential_1(v78);
    OUTLINED_FUNCTION_281_1();
    OUTLINED_FUNCTION_89_11(v45, v42, v46);
    outlined init with take of SageSearchClient((__int128 *)v78, (uint64_t)v67);
    __swift_project_boxed_opaque_existential_1(v67, *(_QWORD *)(v0 + 80));
    *(_QWORD *)(v0 + 136) = v43;
    *(_QWORD *)(v0 + 144) = v44;
    lazy protocol witness table accessor for type String and conformance String();
    v47 = BidirectionalCollection<>.contains<A>(_:)();
    if ((v47 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      goto LABEL_18;
    }
    v48 = *(_QWORD **)(v0 + 248);
    OUTLINED_FUNCTION_277_1();
    v13 = v49[1];
    *v48 = *v49;
    *(_QWORD *)(v71 + 8) = v13;
    OUTLINED_FUNCTION_270_1();
    OUTLINED_FUNCTION_30_15((uint64_t)v48, 0);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
LABEL_19:
    v41 = *(_QWORD *)(v0 + 248);
    OUTLINED_FUNCTION_22_2(v41, 1, *(_QWORD *)(v0 + 264));
    if (!v38)
    {
      v51 = *(_QWORD *)(v0 + 256);
      swift_bridgeObjectRelease();
      outlined init with take of SearchResult(v41, v51, type metadata accessor for ExtractedInfo);
      v14 = 0;
LABEL_29:
      v4 = v73;
      v8 = v74;
      v1 = v68;
      v6 = v72;
      v7 = v70;
      goto LABEL_30;
    }
    outlined destroy of MobileSMSDocument?(v41, &demangling cache variable for type metadata for ExtractedInfo?);
    ++v18;
    if (v19 == v79)
    {
      swift_bridgeObjectRelease();
      v14 = 1;
      goto LABEL_29;
    }
  }
  __break(1u);
}

uint64_t specialized ExtractionRule.extractResults(query:results:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_65_10();
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 240);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  OUTLINED_FUNCTION_6_1();
  _s10OmniSearch0B6ResultVWOhTm_1(v2, type metadata accessor for Answer);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_121();
  _s10OmniSearch0B6ResultVWOhTm_1(v1, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10_18(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_59();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  *(_QWORD *)(v0 + 200) = v1;
  if (!v1)
  {
LABEL_19:
    OUTLINED_FUNCTION_158_3();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    v37 = OUTLINED_FUNCTION_84_11();
    return OUTLINED_FUNCTION_17_23(v37, v38);
  }
  v2 = *(_QWORD *)(v0 + 176);
  *(_DWORD *)(v0 + 280) = *(_DWORD *)(v2 + 80);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  v5 = &demangling cache variable for type metadata for SearchItem;
  while (1)
  {
    *(_QWORD *)(v0 + 224) = v3;
    *(_QWORD *)(v0 + 232) = v4;
    *(_QWORD *)(v0 + 216) = v1;
    OUTLINED_FUNCTION_55_7(*(_QWORD *)(v0 + 192), v3);
    if (v1 >= 1)
      break;
    OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 192));
    v1 = 0;
LABEL_16:
    OUTLINED_FUNCTION_128_6();
    if (v34)
    {
      OUTLINED_FUNCTION_168_1();
      goto LABEL_19;
    }
  }
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_215_1();
  OUTLINED_FUNCTION_82_7();
  if (!OUTLINED_FUNCTION_7_16())
  {
    v17 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 120);
    OUTLINED_FUNCTION_49(v18, v6, v7, *(_QWORD *)(v0 + 128));
    outlined destroy of MobileSMSDocument?(v18, &demangling cache variable for type metadata for Answer?);
    v15 = OUTLINED_FUNCTION_89_5(v17);
LABEL_9:
    v19 = *(_QWORD *)(v0 + 152);
    v20 = OUTLINED_FUNCTION_120_7(v15, v16, *(_QWORD *)(v0 + 160));
    v21 = *(_QWORD *)(v0 + 192);
    if (v20 == 1)
    {
      v22 = *(_QWORD *)(v0 + 216);
      OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 192));
      outlined destroy of MobileSMSDocument?(v19, &demangling cache variable for type metadata for ExtractedInfo?);
      v1 = v22 - 1;
      v4 = *(_QWORD *)(v0 + 232);
    }
    else
    {
      v23 = v5;
      v24 = *(_QWORD *)(v0 + 168);
      v25 = *(_QWORD *)(v0 + 112);
      v26 = *(_QWORD *)(v0 + 96);
      OUTLINED_FUNCTION_170_0(v19, v24);
      OUTLINED_FUNCTION_310_0(v21, v25);
      OUTLINED_FUNCTION_2_7(v24, v25 + *(int *)(v26 + 20));
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v4 = *(_QWORD *)(v0 + 232);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_24_16();
        v4 = v35;
      }
      v28 = *(_QWORD *)(v4 + 16);
      if (v28 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        OUTLINED_FUNCTION_34_14();
        v4 = v36;
      }
      v29 = *(_QWORD *)(v0 + 192);
      v30 = *(_QWORD *)(v0 + 168);
      *(_QWORD *)(v4 + 16) = v28 + 1;
      OUTLINED_FUNCTION_223_2();
      outlined init with take of SearchResult(v33, v32 + v31 * v28, type metadata accessor for ExtractedResult);
      _s10OmniSearch0B6ResultVWOhTm_1(v30, type metadata accessor for ExtractedInfo);
      OUTLINED_FUNCTION_6_7(v29);
      v1 = *(_QWORD *)(v0 + 216);
      v5 = v23;
    }
    goto LABEL_16;
  }
  v9 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 120), 0, 1, v9);
  v10 = OUTLINED_FUNCTION_256_1();
  OUTLINED_FUNCTION_11_17(v10, v11);
  v12 = *(_QWORD *)(v8 + *(int *)(v9 + 32));
  *(_QWORD *)(v0 + 240) = v12;
  v13 = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v0 + 248) = v13;
  if (!v13)
  {
    v14 = *(_QWORD *)(v0 + 136);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 160));
    OUTLINED_FUNCTION_6_7(v14);
    goto LABEL_9;
  }
  *(_QWORD *)(v0 + 256) = 0;
  v40 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_122_6(v40, v41, type metadata accessor for SearchResult);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v42;
  v43 = OUTLINED_FUNCTION_190_3(v42);
  return OUTLINED_FUNCTION_101_8(v43, v44, v45, v46, v47, v48, v49);
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_5();
  *v3 = *v2;
  *(_QWORD *)(v0 + 272) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_59();
  v2 = *(_QWORD *)(v0 + 144);
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 184), type metadata accessor for SearchResult);
  v3 = OUTLINED_FUNCTION_40_4(v2);
  v4 = *(_QWORD *)(v0 + 144);
  if ((_DWORD)v3 == 1)
  {
    v5 = *(_QWORD *)(v0 + 248);
    v1 = *(_QWORD *)(v0 + 256) + 1;
    OUTLINED_FUNCTION_35_5(v3, &demangling cache variable for type metadata for ExtractedInfo?);
    if (v1 != v5)
    {
      v36 = *(_QWORD *)(v0 + 256) + 1;
      v35 = *(_QWORD *)(v0 + 240);
LABEL_22:
      *(_QWORD *)(v0 + 256) = v36;
      outlined init with copy of SearchResult(v35+ ((*(unsigned __int8 *)(v0 + 280) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280))+ *(_QWORD *)(v0 + 208) * v36, *(_QWORD *)(v0 + 184), type metadata accessor for SearchResult);
      v40 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v40;
      v41 = OUTLINED_FUNCTION_190_3(v40);
      return OUTLINED_FUNCTION_101_8(v41, v42, v43, v44, v45, v46, v47);
    }
    swift_bridgeObjectRelease();
    v7 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_145_4(v4, v8, type metadata accessor for ExtractedInfo);
    v7 = 0;
  }
LABEL_5:
  v9 = OUTLINED_FUNCTION_45_4(*(_QWORD *)(v0 + 152), v7, v6, *(_QWORD *)(v0 + 160));
  OUTLINED_FUNCTION_124_0(v9, type metadata accessor for Answer);
  v12 = &demangling cache variable for type metadata for ExtractedInfo?;
LABEL_6:
  v13 = OUTLINED_FUNCTION_120_7(v10, v11, *(_QWORD *)(v0 + 160));
  v14 = *(_QWORD *)(v0 + 192);
  if (v13 == 1)
  {
    v15 = *(_QWORD *)(v0 + 216);
    OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 192));
    OUTLINED_FUNCTION_267_1();
    v1 = v15 - 1;
    v16 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v17 = v12;
    OUTLINED_FUNCTION_152_2();
    OUTLINED_FUNCTION_310_0(v14, v1);
    OUTLINED_FUNCTION_179_2();
    v18 = OUTLINED_FUNCTION_214_1();
    v16 = *(_QWORD *)(v0 + 232);
    if ((v18 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_16();
      v16 = v28;
    }
    v19 = *(_QWORD *)(v16 + 16);
    if (v19 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      OUTLINED_FUNCTION_34_14();
      v16 = v29;
    }
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v16 + 16) = v19 + 1;
    OUTLINED_FUNCTION_104_12();
    outlined init with take of SearchResult(v22, v23, type metadata accessor for ExtractedResult);
    OUTLINED_FUNCTION_137_6(v21);
    OUTLINED_FUNCTION_59_3(v20);
    v1 = *(_QWORD *)(v0 + 216);
    v12 = v17;
  }
  while (1)
  {
    OUTLINED_FUNCTION_128_6();
    if (v25)
      break;
    *(_QWORD *)(v0 + 224) = v24;
    *(_QWORD *)(v0 + 232) = v16;
    *(_QWORD *)(v0 + 216) = v1;
    OUTLINED_FUNCTION_55_7(*(_QWORD *)(v0 + 192), v24);
    if (v1 >= 1)
    {
      OUTLINED_FUNCTION_176_0();
      OUTLINED_FUNCTION_161_3();
      if (!OUTLINED_FUNCTION_7_16())
      {
        v26 = *(_QWORD *)(v0 + 152);
        v27 = OUTLINED_FUNCTION_124_9();
        outlined destroy of MobileSMSDocument?(v27, &demangling cache variable for type metadata for Answer?);
        v10 = OUTLINED_FUNCTION_89_5(v26);
        goto LABEL_6;
      }
      v1 = *(_QWORD *)(v0 + 128);
      v30 = *(_QWORD *)(v0 + 136);
      v31 = *(_QWORD *)(v0 + 120);
      v7 = 1;
      OUTLINED_FUNCTION_212_2(v31);
      OUTLINED_FUNCTION_145_4(v31, v32, type metadata accessor for Answer);
      v33 = *(_QWORD *)(v30 + *(int *)(v1 + 32));
      *(_QWORD *)(v0 + 240) = v33;
      v34 = *(_QWORD *)(v33 + 16);
      *(_QWORD *)(v0 + 248) = v34;
      if (v34)
      {
        v35 = swift_bridgeObjectRetain();
        v36 = 0;
        goto LABEL_22;
      }
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 192));
    v1 = 0;
  }
  OUTLINED_FUNCTION_168_1();
  OUTLINED_FUNCTION_158_3();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  v37 = OUTLINED_FUNCTION_84_11();
  return OUTLINED_FUNCTION_17_23(v37, v38);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_65_10();
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 136);
  OUTLINED_FUNCTION_137_6(*(_QWORD *)(v0 + 184));
  _s10OmniSearch0B6ResultVWOhTm_1(v2, type metadata accessor for Answer);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_137_6(v1);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10_18(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);

  OUTLINED_FUNCTION_59();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  *(_QWORD *)(v0 + 184) = v1;
  if (!v1)
  {
LABEL_17:
    OUTLINED_FUNCTION_178_1();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    v25 = OUTLINED_FUNCTION_84_11();
    return OUTLINED_FUNCTION_17_23(v25, v26);
  }
  v2 = *(_QWORD *)(v0 + 168);
  *(_DWORD *)(v0 + 240) = *(_DWORD *)(v2 + 80);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x24BEE4AF8];
  v5 = &demangling cache variable for type metadata for SearchItem;
  while (1)
  {
    *(_QWORD *)(v0 + 208) = v3;
    *(_QWORD *)(v0 + 216) = v4;
    *(_QWORD *)(v0 + 200) = v1;
    OUTLINED_FUNCTION_55_7(*(_QWORD *)(v0 + 176), v3);
    if (v1 >= 1)
      break;
    OUTLINED_FUNCTION_59_3(*(_QWORD *)(v0 + 176));
    v1 = 0;
LABEL_14:
    OUTLINED_FUNCTION_128_6();
    if (v11)
    {
      OUTLINED_FUNCTION_168_1();
      goto LABEL_17;
    }
  }
  v6 = *(_QWORD *)(v0 + 128);
  OUTLINED_FUNCTION_176_0();
  __swift_instantiateConcreteTypeFromMangledName(v5);
  if (!OUTLINED_FUNCTION_7_16())
  {
    v9 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    v10 = OUTLINED_FUNCTION_124_9();
    outlined destroy of MobileSMSDocument?(v10, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_89_5(v9);
    OUTLINED_FUNCTION_239_0();
    if (v11)
    {
      v12 = *(_QWORD *)(v0 + 200);
      OUTLINED_FUNCTION_59_3(v6);
      outlined destroy of MobileSMSDocument?(v8, &demangling cache variable for type metadata for ExtractedInfo?);
      v1 = v12 - 1;
      v4 = *(_QWORD *)(v0 + 216);
    }
    else
    {
      v13 = v5;
      v14 = *(_QWORD *)(v0 + 160);
      v15 = *(_QWORD *)(v0 + 112);
      v16 = *(_QWORD *)(v0 + 96);
      OUTLINED_FUNCTION_170_0(v8, v14);
      OUTLINED_FUNCTION_310_0(v6, v15);
      OUTLINED_FUNCTION_2_7(v14, v15 + *(int *)(v16 + 20));
      v17 = OUTLINED_FUNCTION_214_1();
      v4 = *(_QWORD *)(v0 + 216);
      if ((v17 & 1) == 0)
      {
        OUTLINED_FUNCTION_24_16();
        v4 = v23;
      }
      v18 = *(_QWORD *)(v4 + 16);
      if (v18 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        OUTLINED_FUNCTION_34_14();
        v4 = v24;
      }
      v19 = *(_QWORD *)(v0 + 176);
      v20 = *(_QWORD *)(v0 + 160);
      *(_QWORD *)(v4 + 16) = v18 + 1;
      OUTLINED_FUNCTION_193_1();
      outlined init with take of SearchResult(v21, v22, type metadata accessor for ExtractedResult);
      _s10OmniSearch0B6ResultVWOhTm_1(v20, type metadata accessor for ExtractedInfo);
      OUTLINED_FUNCTION_6_7(v19);
      v1 = *(_QWORD *)(v0 + 200);
      v5 = v13;
    }
    goto LABEL_14;
  }
  v28 = OUTLINED_FUNCTION_45_4(*(_QWORD *)(v0 + 120), 0, v7, *(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_78_12(v28, v29, type metadata accessor for Answer);
  v30 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 224) = v30;
  v31 = OUTLINED_FUNCTION_187_3(v30);
  return OUTLINED_FUNCTION_99_5(v31, v32, v33, v34, v35, v36, v37);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);

  OUTLINED_FUNCTION_59();
  _s10OmniSearch0B6ResultVWOhTm_1(v0[17], type metadata accessor for Answer);
  v3 = &demangling cache variable for type metadata for ExtractedInfo?;
  while (2)
  {
    OUTLINED_FUNCTION_239_0();
    if (v4)
    {
      v5 = v0[25];
      OUTLINED_FUNCTION_59_3(v2);
      OUTLINED_FUNCTION_267_1();
      v1 = v5 - 1;
      v6 = v0[27];
    }
    else
    {
      v7 = v3;
      OUTLINED_FUNCTION_152_2();
      OUTLINED_FUNCTION_310_0(v2, v1);
      OUTLINED_FUNCTION_179_2();
      v8 = OUTLINED_FUNCTION_214_1();
      v6 = v0[27];
      if ((v8 & 1) == 0)
      {
        OUTLINED_FUNCTION_24_16();
        v6 = v18;
      }
      v9 = *(_QWORD *)(v6 + 16);
      if (v9 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        OUTLINED_FUNCTION_34_14();
        v6 = v19;
      }
      v10 = v0[22];
      v11 = v0[20];
      *(_QWORD *)(v6 + 16) = v9 + 1;
      OUTLINED_FUNCTION_104_12();
      outlined init with take of SearchResult(v12, v13, type metadata accessor for ExtractedResult);
      OUTLINED_FUNCTION_137_6(v11);
      OUTLINED_FUNCTION_59_3(v10);
      v1 = v0[25];
      v3 = v7;
    }
    while (1)
    {
      OUTLINED_FUNCTION_128_6();
      if (v4)
      {
        OUTLINED_FUNCTION_168_1();
        OUTLINED_FUNCTION_178_1();
        OUTLINED_FUNCTION_95();
        OUTLINED_FUNCTION_34_3();
        OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_41_2();
        OUTLINED_FUNCTION_73();
        v20 = OUTLINED_FUNCTION_84_11();
        return OUTLINED_FUNCTION_17_23(v20, v21);
      }
      v0[26] = v14;
      v0[27] = v6;
      v0[25] = v1;
      OUTLINED_FUNCTION_55_7(v0[22], v14);
      if (v1 >= 1)
        break;
      OUTLINED_FUNCTION_59_3(v0[22]);
      v1 = 0;
    }
    v2 = v0[16];
    OUTLINED_FUNCTION_176_0();
    OUTLINED_FUNCTION_161_3();
    if (!OUTLINED_FUNCTION_7_16())
    {
      v16 = v0[18];
      v17 = OUTLINED_FUNCTION_124_9();
      outlined destroy of MobileSMSDocument?(v17, &demangling cache variable for type metadata for Answer?);
      OUTLINED_FUNCTION_89_5(v16);
      continue;
    }
    break;
  }
  v23 = OUTLINED_FUNCTION_45_4(v0[15], 0, v15, v0[16]);
  OUTLINED_FUNCTION_78_12(v23, v24, type metadata accessor for Answer);
  v25 = (_QWORD *)OUTLINED_FUNCTION_6();
  v0[28] = (uint64_t)v25;
  v26 = OUTLINED_FUNCTION_187_3(v25);
  return OUTLINED_FUNCTION_99_5(v26, v27, v28, v29, v30, v31, v32);
}

{
  uint64_t v0;
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 136), type metadata accessor for Answer);
  swift_bridgeObjectRelease();
  v1 = OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_81_4(v1, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_6_13(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_94_2();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (!v1)
  {
    v6 = MEMORY[0x24BEE4AF8];
    goto LABEL_27;
  }
  v35 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_173_1();
  v4 = v2 + v3;
  v36 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x24BEE4AF8];
  v7 = v1;
  do
  {
    OUTLINED_FUNCTION_106_2(v4, *(_QWORD *)(v0 + 112));
    v8 = *(_QWORD *)(v0 + 112);
    if (v7 < 1)
    {
      OUTLINED_FUNCTION_69_8(v8);
      v7 = 0;
      goto LABEL_23;
    }
    outlined init with copy of SearchResult(v8, *(_QWORD *)(v0 + 64), type metadata accessor for SearchResultItem);
    v9 = OUTLINED_FUNCTION_252_1();
    v10 = (uint64_t *)(v0 + 64);
    if (v9 == 9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      v11 = OUTLINED_FUNCTION_256_1();
      outlined init with take of SearchResult(v11, v12, type metadata accessor for FlightReservation);
      v13 = FlightReservation.needsResolution.getter();
      v10 = (uint64_t *)(v0 + 72);
      if ((v13 & 1) != 0)
      {
        outlined init with take of SearchResult(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), type metadata accessor for FlightReservation);
        OUTLINED_FUNCTION_256_1();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        v18 = 0;
        goto LABEL_16;
      }
    }
    OUTLINED_FUNCTION_83_2(*v10);
    outlined init with copy of SearchResult(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56), type metadata accessor for SearchResultItem);
    v14 = OUTLINED_FUNCTION_252_1();
    switch(v14)
    {
      case 11:
        v16 = *(_QWORD *)(v0 + 56);
        v17 = type metadata accessor for RestaurantReservation;
        goto LABEL_14;
      case 10:
        v16 = *(_QWORD *)(v0 + 56);
        v17 = type metadata accessor for HotelReservation;
        goto LABEL_14;
      case 9:
        v15 = *(_QWORD *)(v0 + 56);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        OUTLINED_FUNCTION_22_10();
        v16 = v15;
        v17 = type metadata accessor for FlightReservation;
LABEL_14:
        _s10OmniSearch0B6ResultVWOhTm_1(v16, v17);
        goto LABEL_15;
    }
    _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 56), type metadata accessor for SearchResultItem);
    v18 = 1;
LABEL_16:
    v19 = *(_QWORD *)(v0 + 80);
    OUTLINED_FUNCTION_30_15(v19, v18);
    if (OUTLINED_FUNCTION_40_4(v19) == 1)
    {
      v20 = *(_QWORD *)(v0 + 80);
      OUTLINED_FUNCTION_69_8(*(_QWORD *)(v0 + 112));
      outlined destroy of MobileSMSDocument?(v20, &demangling cache variable for type metadata for ExtractedInfo?);
      --v7;
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 96);
      v22 = *(_QWORD *)(v0 + 40);
      outlined init with take of SearchResult(*(_QWORD *)(v0 + 80), v21, type metadata accessor for ExtractedInfo);
      v23 = OUTLINED_FUNCTION_216();
      OUTLINED_FUNCTION_106_2(v23, v24);
      outlined init with copy of SearchResult(v21, v22 + *(int *)(v35 + 20), type metadata accessor for ExtractedInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_228();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v6 = v32;
      }
      v26 = *(_QWORD *)(v6 + 16);
      v25 = *(_QWORD *)(v6 + 24);
      if (v26 >= v25 >> 1)
      {
        OUTLINED_FUNCTION_130_1(v25);
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v6 = v33;
      }
      v27 = *(_QWORD *)(v0 + 112);
      v28 = *(_QWORD *)(v0 + 96);
      *(_QWORD *)(v6 + 16) = v26 + 1;
      OUTLINED_FUNCTION_10_2();
      outlined init with take of SearchResult(v31, v6 + v29 + *(_QWORD *)(v30 + 72) * v26, type metadata accessor for ExtractedResult);
      _s10OmniSearch0B6ResultVWOhTm_1(v28, type metadata accessor for ExtractedInfo);
      OUTLINED_FUNCTION_69_8(v27);
    }
LABEL_23:
    v4 += v36;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
LABEL_27:
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_16_12(v6, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_59();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 16);
  if (v1)
  {
    v41 = *(_QWORD *)(v0 + 288);
    v39 = *(_QWORD *)(v0 + 216);
    OUTLINED_FUNCTION_173_1();
    v38 = v2;
    v42 = v3 + v2;
    v5 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = MEMORY[0x24BEE4AF8];
    v45 = v1;
    v44 = v5;
    do
    {
      OUTLINED_FUNCTION_106_2(v42 + v6 * v5, *(_QWORD *)(v0 + 360));
      if (v45 < 1)
      {
        OUTLINED_FUNCTION_69_8(*(_QWORD *)(v0 + 360));
        v45 = 0;
      }
      else
      {
        v43 = v6;
        SearchResultItem.associatedValue.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
        if (OUTLINED_FUNCTION_7_16())
        {
          v10 = *(_QWORD *)(v0 + 296);
          v11 = *(_QWORD *)(v0 + 280);
          OUTLINED_FUNCTION_53_16(v11, v8, v9, *(_QWORD *)(v0 + 288));
          outlined init with take of SearchResult(v11, v10, type metadata accessor for Answer);
          v14 = *(_QWORD *)(v10 + *(int *)(v41 + 32));
          if (*(_QWORD *)(v14 + 16))
          {
            v46 = v14 + v38;
            swift_bridgeObjectRetain();
            v15 = *(_QWORD *)(v0 + 352);
            v16 = *(_QWORD *)(v0 + 272);
            outlined init with copy of SearchResult(v46, v15, type metadata accessor for SearchResult);
            outlined init with copy of SearchResult(v15, v16, type metadata accessor for SearchResultItem);
            v17 = (char *)&loc_2432CF9D0 + 4 * byte_2433586F7[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
          v5 = v44;
          v22 = *(_QWORD *)(v0 + 296);
          OUTLINED_FUNCTION_121_5(*(_QWORD *)(v0 + 312), v12, v13, *(_QWORD *)(v0 + 320));
          _s10OmniSearch0B6ResultVWOhTm_1(v22, type metadata accessor for Answer);
        }
        else
        {
          v18 = *(_QWORD *)(v0 + 312);
          v19 = *(_QWORD *)(v0 + 280);
          OUTLINED_FUNCTION_49(v19, v8, v9, *(_QWORD *)(v0 + 288));
          outlined destroy of MobileSMSDocument?(v19, &demangling cache variable for type metadata for Answer?);
          v20 = OUTLINED_FUNCTION_89_5(v18);
          v5 = v44;
        }
        v23 = *(_QWORD *)(v0 + 312);
        v24 = OUTLINED_FUNCTION_120_7(v20, v21, *(_QWORD *)(v0 + 320));
        v25 = *(_QWORD *)(v0 + 360);
        if (v24 == 1)
        {
          OUTLINED_FUNCTION_69_8(*(_QWORD *)(v0 + 360));
          outlined destroy of MobileSMSDocument?(v23, &demangling cache variable for type metadata for ExtractedInfo?);
          --v45;
        }
        else
        {
          v26 = *(_QWORD *)(v0 + 328);
          v27 = *(_QWORD *)(v0 + 232);
          OUTLINED_FUNCTION_170_0(v23, v26);
          outlined init with copy of SearchResult(v25, v27, type metadata accessor for SearchResult);
          OUTLINED_FUNCTION_2_7(v26, v27 + *(int *)(v39 + 20));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_228();
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v35;
          }
          v29 = *(_QWORD *)(v7 + 16);
          v28 = *(_QWORD *)(v7 + 24);
          if (v29 >= v28 >> 1)
          {
            OUTLINED_FUNCTION_130_1(v28);
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v36;
          }
          v30 = *(_QWORD *)(v0 + 360);
          v31 = *(_QWORD *)(v0 + 328);
          *(_QWORD *)(v7 + 16) = v29 + 1;
          OUTLINED_FUNCTION_10_2();
          outlined init with take of SearchResult(v34, v7 + v32 + *(_QWORD *)(v33 + 72) * v29, type metadata accessor for ExtractedResult);
          _s10OmniSearch0B6ResultVWOhTm_1(v31, type metadata accessor for ExtractedInfo);
          OUTLINED_FUNCTION_69_8(v30);
          v5 = v44;
        }
        v6 = v43;
      }
      ++v6;
    }
    while (v6 != v1);
    swift_bridgeObjectRelease();
    v40 = v7;
  }
  else
  {
    v40 = MEMORY[0x24BEE4AF8];
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_17_23(v40, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized ExtractionRule.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[19] = a3;
  v8 = type metadata accessor for ExtractedResult(0);
  v7[24] = v8;
  v7[25] = *(_QWORD *)(v8 - 8);
  v7[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  v7[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v7[28] = swift_task_alloc();
  v7[29] = type metadata accessor for Answer(0);
  v7[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  v7[33] = type metadata accessor for ExtractedInfo(0);
  v7[34] = swift_task_alloc();
  v7[35] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v7[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized ExtractionRule.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = type metadata accessor for ExtractedResult(0);
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for Answer(0);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for ExtractedInfo(0);
  v5[21] = swift_task_alloc();
  v5[22] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = type metadata accessor for ExtractedResult(0);
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for Answer(0);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v5[18] = swift_task_alloc();
  v5[19] = type metadata accessor for ExtractedInfo(0);
  v5[20] = swift_task_alloc();
  v5[21] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a5;
  v6 = type metadata accessor for ExtractedResult(0);
  v5[3] = v6;
  v5[4] = *(_QWORD *)(v6 - 8);
  v5[5] = swift_task_alloc();
  v5[6] = type metadata accessor for SearchResultItem(0);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  type metadata accessor for FlightReservation(0);
  v5[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v5[10] = swift_task_alloc();
  v5[11] = type metadata accessor for ExtractedInfo(0);
  v5[12] = swift_task_alloc();
  v5[13] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[26] = a5;
  v6 = type metadata accessor for ExtractedResult(0);
  v5[27] = v6;
  v5[28] = *(_QWORD *)(v6 - 8);
  v5[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  v5[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  v5[31] = swift_task_alloc();
  type metadata accessor for DateComponents();
  v5[32] = swift_task_alloc();
  v5[33] = type metadata accessor for SearchResultItem(0);
  v5[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v5[35] = swift_task_alloc();
  v5[36] = type metadata accessor for Answer(0);
  v5[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = type metadata accessor for ExtractedInfo(0);
  v5[41] = swift_task_alloc();
  v7 = type metadata accessor for SearchResult(0);
  v5[42] = v7;
  v5[43] = *(_QWORD *)(v7 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t ExtractionRule.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = type metadata accessor for ExtractedResult(0);
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = OUTLINED_FUNCTION_18_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v8[13] = OUTLINED_FUNCTION_18_5();
  v8[14] = OUTLINED_FUNCTION_5_16();
  v8[15] = OUTLINED_FUNCTION_18_5();
  v8[16] = *(_QWORD *)(OUTLINED_FUNCTION_77_0() - 8);
  v8[17] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t ExtractionRule.extractResults(query:results:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  v1 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 56));
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v2 + 16);
  if ((v3 & 1) != 0)
    v1 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 144) = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 128);
    *(_DWORD *)(v0 + 200) = *(_DWORD *)(v5 + 80);
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      *(_QWORD *)(v0 + 168) = v6;
      *(_QWORD *)(v0 + 176) = v7;
      *(_QWORD *)(v0 + 160) = v1;
      OUTLINED_FUNCTION_13_7(*(_QWORD *)(v0 + 48)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ *(_QWORD *)(v0 + 152) * v6, *(_QWORD *)(v0 + 136));
      if (v1 > 0)
        break;
      OUTLINED_FUNCTION_6_7(*(_QWORD *)(v0 + 136));
      OUTLINED_FUNCTION_128_6();
      if (v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    v10 = (_QWORD *)OUTLINED_FUNCTION_6();
    v11 = OUTLINED_FUNCTION_114_8(v10);
    return v12(v11);
  }
  else
  {
LABEL_9:
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_5();
  *v3 = *v2;
  *(_QWORD *)(v0 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

uint64_t ExtractionRule.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_157_2();
  v13 = OUTLINED_FUNCTION_120_7(v11, v12, *(_QWORD *)(v10 + 112));
  if ((_DWORD)v13 == 1)
  {
    v14 = *(_QWORD *)(v10 + 160);
    OUTLINED_FUNCTION_81_4(v13, type metadata accessor for SearchResult);
    OUTLINED_FUNCTION_35_5(v15, &demangling cache variable for type metadata for ExtractedInfo?);
    v16 = v14 - 1;
    v17 = *(_QWORD *)(v10 + 176);
  }
  else
  {
    v18 = *(_QWORD *)(v10 + 120);
    v19 = *(_QWORD *)(v10 + 96);
    v20 = *(_QWORD *)(v10 + 80);
    v21 = OUTLINED_FUNCTION_248_0();
    outlined init with take of SearchResult(v21, v22, type metadata accessor for ExtractedInfo);
    OUTLINED_FUNCTION_272_1(v23, v24, type metadata accessor for SearchResult);
    outlined init with copy of SearchResult(v18, v19 + *(int *)(v20 + 20), type metadata accessor for ExtractedInfo);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *(_QWORD *)(v10 + 176);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_24_16();
      v17 = v53;
    }
    v26 = *(_QWORD *)(v17 + 16);
    if (v26 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      OUTLINED_FUNCTION_34_14();
      v17 = v54;
    }
    v27 = *(_QWORD *)(v10 + 120);
    *(_QWORD *)(v17 + 16) = v26 + 1;
    OUTLINED_FUNCTION_223_2();
    outlined init with take of SearchResult(v30, v29 + v28 * v26, type metadata accessor for ExtractedResult);
    _s10OmniSearch0B6ResultVWOhTm_1(v27, type metadata accessor for ExtractedInfo);
    OUTLINED_FUNCTION_124_0(v31, type metadata accessor for SearchResult);
    v16 = *(_QWORD *)(v10 + 160);
  }
  OUTLINED_FUNCTION_128_6();
  if (v33)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_84_11();
    OUTLINED_FUNCTION_46_3();
    return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10);
  }
  else
  {
    while (1)
    {
      *(_QWORD *)(v10 + 168) = v32;
      *(_QWORD *)(v10 + 176) = v17;
      *(_QWORD *)(v10 + 160) = v16;
      OUTLINED_FUNCTION_13_7(*(_QWORD *)(v10 + 48)+ ((*(unsigned __int8 *)(v10 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 200))+ *(_QWORD *)(v10 + 152) * v32, *(_QWORD *)(v10 + 136));
      if (v16 > 0)
        break;
      OUTLINED_FUNCTION_6_7(*(_QWORD *)(v10 + 136));
      OUTLINED_FUNCTION_128_6();
      if (v33)
        goto LABEL_12;
    }
    v43 = (_QWORD *)OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_114_8(v43);
    OUTLINED_FUNCTION_46_3();
    return v52(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10);
  }
}

uint64_t ExtractionRule.extractResults(query:results:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_22_5(a1, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  return OUTLINED_FUNCTION_6_13(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t protocol witness for TypedExtractionRule.extractInfo(query:typedResult:) in conformance CalendarLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_44_18(v1);
  return OUTLINED_FUNCTION_51_12(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  *(_QWORD *)(v8 + 144) = a8;
  *(_QWORD *)(v8 + 152) = v10;
  *(_BYTE *)(v8 + 216) = a7;
  *(_QWORD *)(v8 + 128) = a5;
  *(_QWORD *)(v8 + 136) = a6;
  *(_QWORD *)(v8 + 112) = a1;
  *(_QWORD *)(v8 + 120) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *rawValue;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_94_2();
  v1 = OUTLINED_FUNCTION_26_10();
  v2 = OUTLINED_FUNCTION_247_1(v1);
  v0[22] = v2;
  v3 = *(_QWORD *)(v2 + 16);
  v0[23] = v3;
  if (v3)
  {
    v4 = (uint64_t)(v0 + 2);
    v42 = v0 + 7;
    v5 = one-time initialization token for kMediaRegexTriggersPerLang;
    swift_bridgeObjectRetain();
    if (v5 != -1)
      swift_once();
    v0[24] = 1;
    while (1)
    {
      rawValue = kMediaRegexTriggersPerLang._rawValue;
      if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
        break;
      v8 = v0[18];
      v7 = v0[19];
      swift_bridgeObjectRetain();
      v9 = specialized __RawDictionaryStorage.find<A>(_:)(v8, v7);
      v10 = v0[20];
      if ((v11 & 1) != 0)
      {
        v12 = v9;
        v13 = rawValue[7];
        OUTLINED_FUNCTION_24_1();
        OUTLINED_FUNCTION_108_10();
        OUTLINED_FUNCTION_89_11(v10, v13 + v14 * v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
        OUTLINED_FUNCTION_30_9();
      }
      else
      {
        OUTLINED_FUNCTION_24_1();
        OUTLINED_FUNCTION_86_3();
      }
      __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
      v24 = v0[20];
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_26_7(v24);
      if (v25)
        goto LABEL_12;
      v26 = v0[20];
      v43 = v0[15];
      v44 = v0[16];
      v0[11] = OUTLINED_FUNCTION_245_0();
      __swift_allocate_boxed_opaque_existential_1(v42);
      OUTLINED_FUNCTION_281_1();
      OUTLINED_FUNCTION_89_11(v27, v26, v28);
      outlined init with take of SageSearchClient((__int128 *)v42, v4);
      OUTLINED_FUNCTION_244_1();
      v0[12] = v43;
      v0[13] = v44;
      lazy protocol witness table accessor for type String and conformance String();
      v29 = BidirectionalCollection<>.contains<A>(_:)();
      if ((v29 & 1) != 0)
      {
        v39 = (_QWORD *)swift_task_alloc();
        v0[25] = v39;
        v40 = OUTLINED_FUNCTION_188_3(v39);
        return OUTLINED_FUNCTION_93_7(v40, v41);
      }
      __swift_destroy_boxed_opaque_existential_1(v4);
LABEL_15:
      v30 = v0[21];
      v31 = type metadata accessor for ExtractedInfo(0);
      OUTLINED_FUNCTION_89_5(v30);
      v32 = v0[21];
      OUTLINED_FUNCTION_26_7(v32);
      if (!v25)
        goto LABEL_21;
      v33 = v0[23];
      v31 = v0[24];
      outlined destroy of MobileSMSDocument?(v32, &demangling cache variable for type metadata for ExtractedInfo?);
      if (v31 == v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      v34 = v0[24];
      v0[24] = v34 + 1;
      if (__OFADD__(v34, 1))
      {
        __break(1u);
LABEL_21:
        v35 = v0[14];
        swift_bridgeObjectRelease();
        outlined init with take of SearchResult(v32, v35, type metadata accessor for ExtractedInfo);
        v36 = 0;
        goto LABEL_24;
      }
    }
    v20 = v0[20];
    v21 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_49(v20, v22, v23, v21);
LABEL_12:
    outlined destroy of MobileSMSDocument?(v0[20], &demangling cache variable for type metadata for Regex<Substring>?);
    goto LABEL_15;
  }
LABEL_23:
  v31 = type metadata accessor for ExtractedInfo(0);
  v36 = 1;
LABEL_24:
  __swift_storeEnumTagSinglePayload(v0[14], v36, 1, v31);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  v37 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v37();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_10_11(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *rawValue;
  unint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = OUTLINED_FUNCTION_26_10();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_247_1(v40) + 16);
  if (!v1)
    goto LABEL_21;
  v2 = v0 + 16;
  v3 = one-time initialization token for kMediaRegexTriggersPerLang;
  swift_bridgeObjectRetain();
  if (v3 != -1)
LABEL_24:
    swift_once();
  v4 = 0;
  v39 = *(_QWORD *)(v0 + 168);
  v41 = v1;
  do
  {
    v5 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    rawValue = kMediaRegexTriggersPerLang._rawValue;
    if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
    {
      v18 = *(_QWORD *)(v0 + 160);
      v19 = OUTLINED_FUNCTION_122_4();
      OUTLINED_FUNCTION_49(v18, v20, v21, v19);
LABEL_12:
      outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 160), &demangling cache variable for type metadata for Regex<Substring>?);
LABEL_13:
      v23 = *(_QWORD *)(v0 + 168);
      v30 = type metadata accessor for ExtractedInfo(0);
      OUTLINED_FUNCTION_89_5(v23);
      goto LABEL_14;
    }
    OUTLINED_FUNCTION_177_1();
    v7 = OUTLINED_FUNCTION_199_1();
    v8 = *(_QWORD *)(v0 + 160);
    if ((v9 & 1) != 0)
    {
      v10 = v7;
      v11 = rawValue[7];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
      OUTLINED_FUNCTION_108_10();
      OUTLINED_FUNCTION_89_11(v8, v11 + v12 * v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
      OUTLINED_FUNCTION_30_9();
    }
    else
    {
      OUTLINED_FUNCTION_122_4();
      OUTLINED_FUNCTION_86_3();
    }
    __swift_storeEnumTagSinglePayload(v14, v15, v16, v17);
    OUTLINED_FUNCTION_238();
    OUTLINED_FUNCTION_122_4();
    OUTLINED_FUNCTION_26_7(v8);
    if (v22)
      goto LABEL_12;
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_245_0();
    OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_281_1();
    OUTLINED_FUNCTION_89_11(v28, v25, v29);
    outlined init with take of SageSearchClient((__int128 *)(v0 + 56), v2);
    OUTLINED_FUNCTION_244_1();
    *(_QWORD *)(v0 + 96) = v27;
    *(_QWORD *)(v0 + 104) = v26;
    lazy protocol witness table accessor for type String and conformance String();
    v30 = v0 + 96;
    v31 = BidirectionalCollection<>.contains<A>(_:)();
    if ((v31 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1(v2);
      v1 = v41;
      goto LABEL_13;
    }
    v32 = *(_QWORD **)(v0 + 168);
    OUTLINED_FUNCTION_277_1();
    v34 = v33[1];
    *v32 = *v33;
    *(_QWORD *)(v39 + 8) = v34;
    type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_282_1();
    OUTLINED_FUNCTION_270_1();
    OUTLINED_FUNCTION_30_15((uint64_t)v32, 0);
    OUTLINED_FUNCTION_91_0();
    __swift_destroy_boxed_opaque_existential_1(v2);
    v1 = v41;
LABEL_14:
    v24 = *(_QWORD *)(v0 + 168);
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_26_7(v24);
    if (!v22)
    {
      OUTLINED_FUNCTION_205_1();
      OUTLINED_FUNCTION_145_4(v24, v35, type metadata accessor for ExtractedInfo);
      v36 = 0;
      goto LABEL_22;
    }
    outlined destroy of MobileSMSDocument?(v24, &demangling cache variable for type metadata for ExtractedInfo?);
    ++v4;
  }
  while (v5 != v1);
  OUTLINED_FUNCTION_205_1();
LABEL_21:
  v30 = type metadata accessor for ExtractedInfo(0);
  v36 = 1;
LABEL_22:
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 112), v36, 1, v30);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  v37 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_19(v37);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_208_1(v1);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_105_12();
    OUTLINED_FUNCTION_122_6(v3, v4, type metadata accessor for SearchResult);
    v5 = swift_task_alloc();
    v6 = (_QWORD *)OUTLINED_FUNCTION_261_1(v5);
    v7 = OUTLINED_FUNCTION_189_3(v6);
    return WalletLocationAnswer.extractFromSource(query:answer:source:)(v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v15 = type metadata accessor for ExtractedInfo(0);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 16), 1, 1, v15);
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_16_25(v16);
  }
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_125_6();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1[8];
  _s10OmniSearch0B6ResultVWOhTm_1(v1[10], type metadata accessor for SearchResult);
  v3 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_26_7(v2);
  if (!v4)
  {
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_145_4(v2, v6, type metadata accessor for ExtractedInfo);
    v7 = 0;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v1[2], v7, 1, v3);
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_10_11(v8);
  }
  v5 = OUTLINED_FUNCTION_241_1();
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for ExtractedInfo?);
  if (v0 == v2)
  {
    OUTLINED_FUNCTION_168_1();
    v7 = 1;
    goto LABEL_5;
  }
  v10 = v1[14] + 1;
  v1[14] = v10;
  v11 = OUTLINED_FUNCTION_109_7(v10);
  outlined init with copy of SearchResult(v11, v12, type metadata accessor for SearchResult);
  v13 = swift_task_alloc();
  v14 = (_QWORD *)OUTLINED_FUNCTION_261_1(v13);
  v15 = OUTLINED_FUNCTION_189_3(v14);
  return WalletLocationAnswer.extractFromSource(query:answer:source:)(v15, v16, v17, v18, v19, v20, v21);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_26_10();
  if (*(_QWORD *)(OUTLINED_FUNCTION_247_1(v10) + 16))
  {
    OUTLINED_FUNCTION_173_1();
    v3 = v1 + v2;
    swift_bridgeObjectRetain();
    v4 = v0[20];
    v5 = v0[15];
    outlined init with copy of SearchResult(v3, v4, type metadata accessor for SearchResult);
    outlined init with copy of SearchResult(v4, v5, type metadata accessor for SearchResultItem);
    v6 = (char *)&loc_2432D15B0 + 4 * byte_243358707[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v7 = type metadata accessor for ExtractedInfo(0);
  __swift_storeEnumTagSinglePayload(v0[11], 1, 1, v7);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_19(v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = OUTLINED_FUNCTION_26_10();
  OUTLINED_FUNCTION_208_1(v1);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_105_12();
    OUTLINED_FUNCTION_122_6(v3, v4, type metadata accessor for SearchResult);
    v5 = swift_task_alloc();
    v6 = (_QWORD *)OUTLINED_FUNCTION_261_1(v5);
    v7 = OUTLINED_FUNCTION_166_2(v6);
    return FlightFromExtractedAnswer.extractFromSource(query:answer:source:)(v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    v15 = type metadata accessor for ExtractedInfo(0);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 16), 1, 1, v15);
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_16_25(v16);
  }
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_125_6();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1[8];
  _s10OmniSearch0B6ResultVWOhTm_1(v1[10], type metadata accessor for SearchResult);
  v3 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_26_7(v2);
  if (!v4)
  {
    OUTLINED_FUNCTION_219_1();
    OUTLINED_FUNCTION_145_4(v2, v6, type metadata accessor for ExtractedInfo);
    v7 = 0;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v1[2], v7, 1, v3);
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_10_11(v8);
  }
  v5 = OUTLINED_FUNCTION_241_1();
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for ExtractedInfo?);
  if (v0 == v2)
  {
    OUTLINED_FUNCTION_168_1();
    v7 = 1;
    goto LABEL_5;
  }
  v10 = v1[14] + 1;
  v1[14] = v10;
  v11 = OUTLINED_FUNCTION_109_7(v10);
  outlined init with copy of SearchResult(v11, v12, type metadata accessor for SearchResult);
  v13 = swift_task_alloc();
  v14 = (_QWORD *)OUTLINED_FUNCTION_261_1(v13);
  v15 = OUTLINED_FUNCTION_166_2(v14);
  return FlightFromExtractedAnswer.extractFromSource(query:answer:source:)(v15, v16, v17, v18, v19, v20, v21);
}

void specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *rawValue;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_31_7();
  v1 = type metadata accessor for ExtractedInfo(0);
  v2 = v0[21];
  OUTLINED_FUNCTION_22_2(v2, 1, v1);
  if (v3)
  {
    while (1)
    {
      v5 = v0[23];
      v4 = v0[24];
      outlined destroy of MobileSMSDocument?(v2, &demangling cache variable for type metadata for ExtractedInfo?);
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        v33 = 1;
        goto LABEL_18;
      }
      v6 = v0[24];
      v0[24] = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        return;
      }
      rawValue = kMediaRegexTriggersPerLang._rawValue;
      if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
        break;
      v9 = v0[18];
      v8 = v0[19];
      swift_bridgeObjectRetain();
      v10 = specialized __RawDictionaryStorage.find<A>(_:)(v9, v8);
      v11 = v0[20];
      if ((v12 & 1) != 0)
      {
        v13 = v10;
        v14 = rawValue[7];
        OUTLINED_FUNCTION_161_3();
        OUTLINED_FUNCTION_108_10();
        OUTLINED_FUNCTION_89_11(v11, v14 + v15 * v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
        OUTLINED_FUNCTION_30_9();
      }
      else
      {
        OUTLINED_FUNCTION_161_3();
        OUTLINED_FUNCTION_86_3();
      }
      __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
      v25 = v0[20];
      swift_bridgeObjectRelease();
      v26 = OUTLINED_FUNCTION_161_3();
      OUTLINED_FUNCTION_26_7(v25);
      if (v3)
        goto LABEL_12;
      v27 = v0[20];
      v28 = v0[15];
      v29 = v0[16];
      v0[11] = OUTLINED_FUNCTION_245_0();
      v30 = OUTLINED_FUNCTION_195_0();
      OUTLINED_FUNCTION_89_11((uint64_t)v30, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32));
      OUTLINED_FUNCTION_263_1();
      __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
      v0[12] = v28;
      v0[13] = v29;
      lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_255_1();
      v31 = BidirectionalCollection<>.contains<A>(_:)();
      if ((v31 & 1) != 0)
      {
        v35 = (_QWORD *)swift_task_alloc();
        v0[25] = v35;
        v36 = OUTLINED_FUNCTION_188_3(v35);
        OUTLINED_FUNCTION_103_9(v36, v37);
        return;
      }
      OUTLINED_FUNCTION_31_7();
LABEL_15:
      OUTLINED_FUNCTION_70_4(v0[21], 1);
      v2 = v0[21];
      OUTLINED_FUNCTION_22_2(v2, 1, v1);
      if (!v3)
        goto LABEL_16;
    }
    v21 = v0[20];
    v22 = OUTLINED_FUNCTION_161_3();
    OUTLINED_FUNCTION_49(v21, v23, v24, v22);
LABEL_12:
    outlined destroy of MobileSMSDocument?(v0[20], &demangling cache variable for type metadata for Regex<Substring>?);
    goto LABEL_15;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_145_4(v2, v32, type metadata accessor for ExtractedInfo);
  v33 = 0;
LABEL_18:
  __swift_storeEnumTagSinglePayload(v0[14], v33, 1, v1);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  v34 = (void (*)(void))OUTLINED_FUNCTION_27_5();
  v34();
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a1;
  v8[15] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  v8[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v6[8] = swift_task_alloc();
  v6[9] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v6;

  v6[11] = a1;
  v6[12] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CalendarEvent?);
  v6[13] = swift_task_alloc();
  v6[14] = type metadata accessor for SearchResultItem(0);
  v6[15] = swift_task_alloc();
  v6[16] = type metadata accessor for CalendarEvent(0);
  v6[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v6[18] = swift_task_alloc();
  v6[19] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v6[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_22_5(a1, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 140) = a7;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  *(_QWORD *)(v7 + 64) = swift_task_alloc();
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  *(_QWORD *)(v7 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v9[11] = OUTLINED_FUNCTION_18_5();
  v9[12] = *(_QWORD *)(OUTLINED_FUNCTION_77_0() - 8);
  v9[13] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerSourceExtractionRule.extractInfo(query:typedResult:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t (*v11)(void);

  v1 = OUTLINED_FUNCTION_26_10();
  v2 = OUTLINED_FUNCTION_247_1(v1);
  *(_QWORD *)(v0 + 112) = v2;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 120) = v3;
  if (v3)
  {
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
    v4 = *(_QWORD *)(v0 + 96);
    *(_DWORD *)(v0 + 168) = *(_DWORD *)(v4 + 80);
    *(_QWORD *)(v0 + 136) = *(_QWORD *)(v4 + 72);
    *(_QWORD *)(v0 + 144) = 0;
    v5 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_122_6(v5, v6, type metadata accessor for SearchResult);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v7;
    OUTLINED_FUNCTION_116_9(v7);
    return OUTLINED_FUNCTION_141_4(v8);
  }
  else
  {
    v10 = type metadata accessor for ExtractedInfo(0);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 16), 1, 1, v10);
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v11);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_5();
  *v3 = *v2;
  *(_QWORD *)(v0 + 160) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(void);

  v1 = *(_QWORD *)(v0 + 88);
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 104), type metadata accessor for SearchResult);
  v2 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_26_7(v1);
  if (!v3)
  {
    v6 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_145_4(v6, v7, type metadata accessor for ExtractedInfo);
    v8 = 0;
LABEL_5:
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 16), v8, 1, v2);
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v9);
  }
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 144) + 1;
  outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 88), &demangling cache variable for type metadata for ExtractedInfo?);
  if (v5 == v4)
  {
    swift_bridgeObjectRelease();
    v8 = 1;
    goto LABEL_5;
  }
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144) + 1;
  *(_QWORD *)(v0 + 144) = v12;
  outlined init with copy of SearchResult(*(_QWORD *)(v0 + 112)+ ((*(unsigned __int8 *)(v0 + 168) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 168))+ v11 * v12, *(_QWORD *)(v0 + 104), type metadata accessor for SearchResult);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v13;
  OUTLINED_FUNCTION_116_9(v13);
  return OUTLINED_FUNCTION_141_4(v14);
}

uint64_t AnswerSourceExtractionRule.extractInfo(query:typedResult:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_22_5(a1, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v1 + 8));
}

void protocol witness for ExtractionRule.eligibleResultTypes.getter in conformance CalendarLocationAnswer()
{
  specialized AnswerSourceExtractionRule.eligibleResultTypes.getter();
}

uint64_t specialized AnswerSourceExtractionRule.eligibleResultTypes.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResultType>);
  v0 = type metadata accessor for SearchResultType();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24334DB60;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x24BE6E1E8], v0);
  return v3;
}

void specialized AnswerSourceExtractionRule.eligibleResultTypes.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResultType>);
  OUTLINED_FUNCTION_278_0();
  v1 = OUTLINED_FUNCTION_107_6();
  *(_OWORD *)(v1 + 16) = xmmword_24334DB60;
  OUTLINED_FUNCTION_250_1(v1 + v0, *MEMORY[0x24BE6E1E8]);
  OUTLINED_FUNCTION_12();
}

void AnswerSourceExtractionRule.eligibleResultTypes.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResultType>);
  OUTLINED_FUNCTION_278_0();
  v1 = OUTLINED_FUNCTION_107_6();
  *(_OWORD *)(v1 + 16) = xmmword_24334DB60;
  OUTLINED_FUNCTION_250_1(v1 + v0, *MEMORY[0x24BE6E1E8]);
  OUTLINED_FUNCTION_12();
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance CalendarLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_92_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_11(v1, (uint64_t)protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch);
  return OUTLINED_FUNCTION_64_10(v2, v3, v4, v5, v6, v7);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance CalendarLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_44_18(v1);
  return OUTLINED_FUNCTION_51_12(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  *(_QWORD *)(v8 + 104) = a8;
  *(_QWORD *)(v8 + 112) = v10;
  *(_BYTE *)(v8 + 160) = a7;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 56) = a1;
  *(_QWORD *)(v8 + 64) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  *(_QWORD *)(v8 + 120) = swift_task_alloc();
  *(_QWORD *)(v8 + 128) = type metadata accessor for Answer(0);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_19_12())
  {
    v3 = OUTLINED_FUNCTION_45_4(v0[15], 0, v2, v0[16]);
    OUTLINED_FUNCTION_78_12(v3, v4, type metadata accessor for Answer);
    v5 = (_QWORD *)OUTLINED_FUNCTION_25_5();
    v0[18] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = specialized TypedExtractionRule.extractInfo(query:result:);
    __asm { BR              X8 }
  }
  v6 = OUTLINED_FUNCTION_49(v0[15], v1, v2, v0[16]);
  OUTLINED_FUNCTION_35_5(v6, &demangling cache variable for type metadata for Answer?);
  OUTLINED_FUNCTION_130_3();
  OUTLINED_FUNCTION_104();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_153_2(v7);
}

{
  OUTLINED_FUNCTION_127_4();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 136), type metadata accessor for Answer);
  OUTLINED_FUNCTION_150_4();
  OUTLINED_FUNCTION_104();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_19_12())
  {
    v3 = OUTLINED_FUNCTION_45_4(v0[15], 0, v2, v0[16]);
    OUTLINED_FUNCTION_78_12(v3, v4, type metadata accessor for Answer);
    v5 = (_QWORD *)OUTLINED_FUNCTION_25_5();
    v0[18] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = specialized TypedExtractionRule.extractInfo(query:result:);
    v6 = OUTLINED_FUNCTION_248_1();
    return v10(v6);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_49(v0[15], v1, v2, v0[16]);
    OUTLINED_FUNCTION_35_5(v8, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_130_3();
    OUTLINED_FUNCTION_104();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v9);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_19_12())
  {
    v3 = OUTLINED_FUNCTION_45_4(v0[13], 0, v2, v0[14]);
    OUTLINED_FUNCTION_78_12(v3, v4, type metadata accessor for Answer);
    v5 = (_QWORD *)OUTLINED_FUNCTION_25_5();
    v0[16] = (uint64_t)v5;
    v6 = OUTLINED_FUNCTION_167_1(v5);
    return OUTLINED_FUNCTION_133_4(v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_49(v0[13], v1, v2, v0[14]);
    OUTLINED_FUNCTION_35_5(v14, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_59_11();
    OUTLINED_FUNCTION_104();
    v15 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v15);
  }
}

{
  OUTLINED_FUNCTION_65_13();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 120), type metadata accessor for Answer);
  OUTLINED_FUNCTION_111_7();
  OUTLINED_FUNCTION_104();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_19_12())
  {
    v3 = OUTLINED_FUNCTION_45_4(v0[13], 0, v2, v0[14]);
    OUTLINED_FUNCTION_78_12(v3, v4, type metadata accessor for Answer);
    v5 = (_QWORD *)OUTLINED_FUNCTION_25_5();
    v0[16] = (uint64_t)v5;
    v6 = OUTLINED_FUNCTION_167_1(v5);
    return OUTLINED_FUNCTION_133_4(v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_49(v0[13], v1, v2, v0[14]);
    OUTLINED_FUNCTION_35_5(v14, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_59_11();
    OUTLINED_FUNCTION_104();
    v15 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v15);
  }
}

{
  OUTLINED_FUNCTION_65_13();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t (*v9)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_19_12())
  {
    v3 = OUTLINED_FUNCTION_45_4(*(_QWORD *)(v0 + 104), 0, v2, *(_QWORD *)(v0 + 112));
    OUTLINED_FUNCTION_78_12(v3, v4, type metadata accessor for Answer);
    v5 = (_QWORD *)OUTLINED_FUNCTION_25_5();
    *(_QWORD *)(v0 + 128) = v5;
    *v5 = v0;
    v5[1] = specialized TypedExtractionRule.extractInfo(query:result:);
    return v9(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 120), *(unsigned __int8 *)(v0 + 144));
  }
  else
  {
    v7 = OUTLINED_FUNCTION_49(*(_QWORD *)(v0 + 104), v1, v2, *(_QWORD *)(v0 + 112));
    OUTLINED_FUNCTION_35_5(v7, &demangling cache variable for type metadata for Answer?);
    OUTLINED_FUNCTION_59_11();
    OUTLINED_FUNCTION_104();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v8);
  }
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_22_5(a1, type metadata accessor for Answer);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_22_5(a1, type metadata accessor for Answer);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v8[15] = swift_task_alloc();
  v8[16] = type metadata accessor for Answer(0);
  v8[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v6[13] = swift_task_alloc();
  v6[14] = type metadata accessor for Answer(0);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v6[13] = swift_task_alloc();
  v6[14] = type metadata accessor for Answer(0);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized TypedExtractionRule.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 144) = a7;
  *(_QWORD *)(v7 + 88) = a5;
  *(_QWORD *)(v7 + 96) = a6;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  *(_QWORD *)(v7 + 112) = type metadata accessor for Answer(0);
  *(_QWORD *)(v7 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t TypedExtractionRule.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v9[14] = a8;
  v9[15] = v8;
  v9[12] = a6;
  v9[13] = a7;
  v9[10] = a4;
  v9[11] = a5;
  v9[8] = a2;
  v9[9] = a3;
  v9[7] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[16] = AssociatedTypeWitness;
  v11 = type metadata accessor for Optional();
  v9[17] = v11;
  v9[18] = *(_QWORD *)(v11 - 8);
  v9[19] = OUTLINED_FUNCTION_18_5();
  v9[20] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[21] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t TypedExtractionRule.extractInfo(query:result:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t (*v15)(uint64_t);

  OUTLINED_FUNCTION_89_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if (OUTLINED_FUNCTION_7_16())
  {
    v2 = v0[20];
    v1 = v0[21];
    v3 = v0[19];
    OUTLINED_FUNCTION_30_15(v3, 0);
    OUTLINED_FUNCTION_89_11(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v4 = (_QWORD *)OUTLINED_FUNCTION_6();
    v0[22] = v4;
    *v4 = v0;
    v4[1] = TypedExtractionRule.extractInfo(query:result:);
    v5 = OUTLINED_FUNCTION_248_1();
    return v15(v5);
  }
  else
  {
    v8 = v0[18];
    v7 = v0[19];
    v9 = v0[17];
    v10 = v0[7];
    OUTLINED_FUNCTION_89_5(v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v11 = type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_49(v10, v12, v13, v11);
    OUTLINED_FUNCTION_243_0();
    OUTLINED_FUNCTION_104();
    v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_25_15(v14);
  }
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  _QWORD *v0;
  uint64_t (*v1)(void);

  (*(void (**)(_QWORD, _QWORD))(v0[20] + 8))(v0[21], v0[16]);
  OUTLINED_FUNCTION_243_0();
  OUTLINED_FUNCTION_104();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for TypedExtractionRule.extractInfo(query:typedResult:) in conformance WalletLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_44_18(v1);
  return OUTLINED_FUNCTION_51_12(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance WalletLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_92_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_11(v1, (uint64_t)protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch);
  return OUTLINED_FUNCTION_64_10(v2, v3, v4, v5, v6, v7);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance WalletLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_44_18(v1);
  return OUTLINED_FUNCTION_51_12(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t protocol witness for TypedExtractionRule.extractInfo(query:typedResult:) in conformance FlightFromExtractedAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_63_14();
  v0 = OUTLINED_FUNCTION_155_3();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_117_4(v1);
  return OUTLINED_FUNCTION_123_7(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t protocol witness for ExtractionRule.requiresHydratedResults.getter in conformance FlightFromExtractedAnswer()
{
  return getEnumTag for GlobalSearchClient.GlobalSearchError();
}

uint64_t protocol witness for ExtractionRule.eligibleResultTypes.getter in conformance FlightFromExtractedAnswer()
{
  return specialized AnswerSourceExtractionRule.eligibleResultTypes.getter();
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance FlightFromExtractedAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_72_4();
  v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ExtractionRule.extractResults(query:results:)
                                       + async function pointer to specialized ExtractionRule.extractResults(query:results:));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_79_9(v1, (uint64_t)protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch);
  return v4(v2);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance FlightFromExtractedAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_63_14();
  v0 = OUTLINED_FUNCTION_155_3();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_117_4(v1);
  return OUTLINED_FUNCTION_123_7(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t protocol witness for AnswerSourceExtractionRule.extractFromSource(query:answer:source:) in conformance MediaURLAnswer()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_91_7();
  v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized RegexExtractionRule.extractFromSource(query:answer:source:)
                                       + async function pointer to specialized RegexExtractionRule.extractFromSource(query:answer:source:));
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_112(v1);
  *v2 = v0;
  v2[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  v3 = OUTLINED_FUNCTION_163_3();
  return v5(v3);
}

uint64_t specialized RegexExtractionRule.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = v11;
  *(_BYTE *)(v8 + 184) = a8;
  *(_QWORD *)(v8 + 128) = a5;
  *(_QWORD *)(v8 + 136) = a6;
  *(_QWORD *)(v8 + 112) = a1;
  *(_QWORD *)(v8 + 120) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t specialized RegexExtractionRule.extractFromSource(query:answer:source:)()
{
  uint64_t *v0;
  _QWORD *rawValue;
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  unint64_t v24;
  uint64_t *v25;
  char v26;
  _QWORD *v27;

  if (one-time initialization token for kMediaRegexTriggersPerLang != -1)
    swift_once();
  rawValue = kMediaRegexTriggersPerLang._rawValue;
  if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
  {
    v12 = v0[20];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_49(v12, v14, v15, v13);
LABEL_10:
    outlined destroy of MobileSMSDocument?(v0[20], &demangling cache variable for type metadata for Regex<Substring>?);
LABEL_11:
    v18 = v0[14];
    v19 = type metadata accessor for ExtractedInfo(0);
    OUTLINED_FUNCTION_49(v18, v20, v21, v19);
    OUTLINED_FUNCTION_246_1();
    v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return OUTLINED_FUNCTION_6_13(v22);
  }
  OUTLINED_FUNCTION_177_1();
  v2 = OUTLINED_FUNCTION_199_1();
  v3 = v0[20];
  if ((v4 & 1) != 0)
  {
    v5 = v2;
    v6 = rawValue[7];
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_89_11(v3, v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    OUTLINED_FUNCTION_30_9();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_86_3();
  }
  __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
  OUTLINED_FUNCTION_238();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  OUTLINED_FUNCTION_22_2(v3, 1, v16);
  if (v17)
    goto LABEL_10;
  v24 = OUTLINED_FUNCTION_140_2();
  v25 = OUTLINED_FUNCTION_206_0(v24);
  OUTLINED_FUNCTION_203_1((uint64_t)v25);
  OUTLINED_FUNCTION_144_3();
  v26 = OUTLINED_FUNCTION_226_2();
  if ((v26 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_17();
    goto LABEL_11;
  }
  v27 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v27;
  *v27 = v0;
  v27[1] = specialized RegexExtractionRule.extractFromSource(query:answer:source:);
  return MediaURLAnswer.extractMatched(typedResult:)(v0[14], v0[17]);
}

{
  OUTLINED_FUNCTION_126_4();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_246_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

{
  _QWORD *v0;
  _QWORD *rawValue;
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  unint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  if (one-time initialization token for kMediaRegexTriggersPerLang != -1)
    swift_once();
  rawValue = kMediaRegexTriggersPerLang._rawValue;
  if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
  {
    v12 = v0[20];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_49(v12, v14, v15, v13);
LABEL_10:
    outlined destroy of MobileSMSDocument?(v0[20], &demangling cache variable for type metadata for Regex<Substring>?);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_177_1();
  v2 = OUTLINED_FUNCTION_199_1();
  v3 = v0[20];
  if ((v4 & 1) != 0)
  {
    v5 = v2;
    v6 = rawValue[7];
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_89_11(v3, v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    OUTLINED_FUNCTION_30_9();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_86_3();
  }
  __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
  OUTLINED_FUNCTION_238();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  OUTLINED_FUNCTION_22_2(v3, 1, v16);
  if (v17)
    goto LABEL_10;
  v24 = OUTLINED_FUNCTION_140_2();
  v25 = OUTLINED_FUNCTION_206_0(v24);
  OUTLINED_FUNCTION_203_1((uint64_t)v25);
  OUTLINED_FUNCTION_144_3();
  v26 = OUTLINED_FUNCTION_226_2();
  if ((v26 & 1) != 0)
  {
    v27 = v0[17];
    v28 = (_QWORD *)v0[14];
    v29 = (_QWORD *)(v27 + *(int *)(OUTLINED_FUNCTION_26_10() + 24));
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_248_0();
    OUTLINED_FUNCTION_270_1();
    OUTLINED_FUNCTION_212_2((uint64_t)v28);
    OUTLINED_FUNCTION_91_0();
    OUTLINED_FUNCTION_2_17();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_2_17();
LABEL_11:
  v18 = v0[14];
  v19 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_49(v18, v20, v21, v19);
LABEL_12:
  OUTLINED_FUNCTION_246_1();
  v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v22);
}

uint64_t specialized RegexExtractionRule.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[18] = a8;
  v8[19] = v10;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a1;
  v8[15] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t RegexExtractionRule.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v9[19] = v11;
  v9[20] = v8;
  v9[17] = a6;
  v9[18] = a8;
  v9[15] = a4;
  v9[16] = a5;
  v9[14] = a1;
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

uint64_t RegexExtractionRule.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);

  OUTLINED_FUNCTION_157_2();
  (*(void (**)(_QWORD))(*(_QWORD *)(v10 + 152) + 16))(*(_QWORD *)(v10 + 144));
  if (*(_QWORD *)(v10 + 80))
  {
    v12 = *(_QWORD *)(v10 + 120);
    v11 = *(_QWORD *)(v10 + 128);
    outlined init with take of SageSearchClient((__int128 *)(v10 + 56), v10 + 16);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 40));
    *(_QWORD *)(v10 + 96) = v12;
    *(_QWORD *)(v10 + 104) = v11;
    lazy protocol witness table accessor for type String and conformance String();
    if ((BidirectionalCollection<>.contains<A>(_:)() & 1) != 0)
    {
      v13 = (_QWORD *)OUTLINED_FUNCTION_6();
      *(_QWORD *)(v10 + 168) = v13;
      *v13 = v10;
      v13[1] = RegexExtractionRule.extractFromSource(query:answer:source:);
      OUTLINED_FUNCTION_46_3();
      return v18(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
    }
    OUTLINED_FUNCTION_2_17();
  }
  else
  {
    outlined destroy of MobileSMSDocument?(v10 + 56, &demangling cache variable for type metadata for RegexComponent?);
  }
  v23 = *(_QWORD *)(v10 + 112);
  v24 = type metadata accessor for ExtractedInfo(0);
  OUTLINED_FUNCTION_49(v23, v25, v26, v24);
  v27 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_153_2(v27);
}

uint64_t RegexExtractionRule.extractFromSource(query:answer:source:)()
{
  OUTLINED_FUNCTION_126_4();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for TypedExtractionRule.extractInfo(query:typedResult:) in conformance MediaURLAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_63_14();
  v0 = OUTLINED_FUNCTION_146_6((int *)&async function pointer to specialized AnswerSourceExtractionRule.extractInfo(query:typedResult:));
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_88_6(v1);
  return OUTLINED_FUNCTION_100_8(v2);
}

uint64_t protocol witness for ExtractionRule.checkFirstN.getter in conformance MediaURLAnswer()
{
  return IntentFileItem.CodingKeys.intValue.getter();
}

uint64_t protocol witness for ExtractionRule.featureFlag.getter in conformance MediaURLAnswer()
{
  return SearchAppEntity.CodingKeys.init(intValue:)();
}

uint64_t protocol witness for ExtractionRule.eligibleResultTypes.getter in conformance MediaURLAnswer()
{
  return specialized AnswerSourceExtractionRule.eligibleResultTypes.getter();
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance MediaURLAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_136_3();
  OUTLINED_FUNCTION_72_4();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_79_9(v1, (uint64_t)protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance GlobalSearchClient);
  return v4(v2);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance MediaURLAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_63_14();
  v0 = OUTLINED_FUNCTION_146_6((int *)&async function pointer to specialized TypedExtractionRule.extractInfo(query:result:));
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_88_6(v1);
  return OUTLINED_FUNCTION_100_8(v2);
}

uint64_t protocol witness for AnswerSourceExtractionRule.extractFromSource(query:answer:source:) in conformance MediaNameAnswer()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_91_7();
  v4 = (uint64_t (*)(void))((char *)&async function pointer to specialized RegexExtractionRule.extractFromSource(query:answer:source:)
                         + async function pointer to specialized RegexExtractionRule.extractFromSource(query:answer:source:));
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_112(v1);
  *v2 = v0;
  v2[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  OUTLINED_FUNCTION_163_3();
  return OUTLINED_FUNCTION_86_13(v4);
}

uint64_t protocol witness for TypedExtractionRule.extractInfo(query:typedResult:) in conformance MediaNameAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_136_3();
  OUTLINED_FUNCTION_151_3();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_98_7(v1);
  return OUTLINED_FUNCTION_86_13(v2);
}

uint64_t protocol witness for ExtractionRule.checkFirstN.getter in conformance MediaNameAnswer()
{
  return IntentFileItem.CodingKeys.intValue.getter();
}

uint64_t protocol witness for ExtractionRule.requiresHydratedResults.getter in conformance MediaNameAnswer()
{
  return getEnumTag for GlobalSearchClient.GlobalSearchError();
}

uint64_t protocol witness for ExtractionRule.featureFlag.getter in conformance MediaNameAnswer()
{
  return SearchAppEntity.CodingKeys.init(intValue:)();
}

uint64_t protocol witness for ExtractionRule.eligibleResultTypes.getter in conformance MediaNameAnswer()
{
  return specialized AnswerSourceExtractionRule.eligibleResultTypes.getter();
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance MediaNameAnswer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_72_4();
  v11 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v10 + 16) = v11;
  OUTLINED_FUNCTION_79_9(v11, (uint64_t)protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch);
  OUTLINED_FUNCTION_46_3();
  return v19(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance MediaNameAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_136_3();
  OUTLINED_FUNCTION_151_3();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_98_7(v1);
  return OUTLINED_FUNCTION_86_13(v2);
}

void ExtractedInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;

  OUTLINED_FUNCTION_18_2();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_44_4();
  type metadata accessor for FlightReservation(v2);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v4 = type metadata accessor for URL();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  outlined init with copy of SearchResult(v0, v7 - v6, v8);
  v9 = (char *)sub_2432D3A34 + 4 * byte_243358717[OUTLINED_FUNCTION_252_1()];
  __asm { BR              X10 }
}

uint64_t sub_2432D3A34()
{
  Hasher._combine(_:)(0);
  String.hash(into:)();
  return OUTLINED_FUNCTION_121();
}

Swift::Int ExtractedInfo.hashValue.getter()
{
  Hasher.init(_seed:)();
  ExtractedInfo.hash(into:)();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ExtractedInfo()
{
  Hasher.init(_seed:)();
  ExtractedInfo.hash(into:)();
  return Hasher._finalize()();
}

void ExtractedResult.result.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of SearchResult(v1, a1, type metadata accessor for SearchResult);
}

void ExtractedResult.type.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ExtractedResult(0);
  outlined init with copy of SearchResult(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ExtractedInfo);
}

void base witness table accessor for Equatable in ExtractedInfo()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type ExtractedInfo and conformance ExtractedInfo, type metadata accessor for ExtractedInfo, (uint64_t)&protocol conformance descriptor for ExtractedInfo);
}

char *initializeBufferWithCopyOfBuffer for ExtractedInfo(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  char *__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        v7 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v7;
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 1u:
        v9 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_24;
      case 2u:
        v10 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v10;
        v11 = (int *)type metadata accessor for FlightReservation(0);
        v12 = v11[5];
        v13 = &a1[v12];
        v14 = (char *)a2 + v12;
        v15 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
        }
        *(_QWORD *)&a1[v11[6]] = *(uint64_t *)((char *)a2 + v11[6]);
        *(_QWORD *)&a1[v11[7]] = *(uint64_t *)((char *)a2 + v11[7]);
        v18 = v11[8];
        v19 = &a1[v18];
        v20 = (uint64_t *)((char *)a2 + v18);
        v21 = v20[1];
        *(_QWORD *)v19 = *v20;
        *((_QWORD *)v19 + 1) = v21;
        v22 = v11[9];
        v23 = &a1[v22];
        v24 = (uint64_t *)((char *)a2 + v22);
        v25 = v24[1];
        *(_QWORD *)v23 = *v24;
        *((_QWORD *)v23 + 1) = v25;
        v26 = v11[10];
        v27 = &a1[v26];
        v28 = (uint64_t *)((char *)a2 + v26);
        v29 = v28[1];
        *(_QWORD *)v27 = *v28;
        *((_QWORD *)v27 + 1) = v29;
        v30 = v11[11];
        __dst = &a1[v30];
        v31 = (char *)a2 + v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v15))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(__dst, v31, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v15);
        }
        v33 = v11[12];
        v34 = &a1[v33];
        v35 = (char *)a2 + v33;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v33, 1, v15))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v34, v35, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v15);
        }
        v37 = v11[13];
        v38 = &a1[v37];
        v39 = (uint64_t *)((char *)a2 + v37);
        v40 = v39[1];
        *(_QWORD *)v38 = *v39;
        *((_QWORD *)v38 + 1) = v40;
        v41 = v11[14];
        v42 = &a1[v41];
        v43 = (uint64_t *)((char *)a2 + v41);
        v44 = v43[1];
        *(_QWORD *)v42 = *v43;
        *((_QWORD *)v42 + 1) = v44;
        v45 = v11[15];
        v46 = &a1[v45];
        v47 = (char *)a2 + v45;
        v48 = type metadata accessor for DateComponents();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        v49(&a1[v11[16]], (char *)a2 + v11[16], v48);
        v50 = v11[17];
        v51 = &a1[v50];
        v52 = (char *)a2 + v50;
        v53 = type metadata accessor for TimeZone();
        if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
        }
        v55 = v11[18];
        v56 = &a1[v55];
        v57 = (char *)a2 + v55;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v55, 1, v53))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v56, v57, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v53);
        }
        v59 = v11[19];
        v60 = &a1[v59];
        v61 = (uint64_t *)((char *)a2 + v59);
        v62 = v61[1];
        *(_QWORD *)v60 = *v61;
        *((_QWORD *)v60 + 1) = v62;
        v63 = v11[20];
        v64 = &a1[v63];
        v65 = (uint64_t *)((char *)a2 + v63);
        __dsta = (void *)v65[1];
        *(_QWORD *)v64 = *v65;
        *((_QWORD *)v64 + 1) = __dsta;
        v66 = v11[21];
        v67 = &a1[v66];
        v68 = (uint64_t *)((char *)a2 + v66);
        v98 = v68[1];
        *(_QWORD *)v67 = *v68;
        *((_QWORD *)v67 + 1) = v98;
        v69 = v11[22];
        v70 = &a1[v69];
        v71 = (uint64_t *)((char *)a2 + v69);
        v97 = v71[1];
        *(_QWORD *)v70 = *v71;
        *((_QWORD *)v70 + 1) = v97;
        v72 = v11[23];
        v73 = &a1[v72];
        v74 = (uint64_t *)((char *)a2 + v72);
        v75 = v74[1];
        *(_QWORD *)v73 = *v74;
        *((_QWORD *)v73 + 1) = v75;
        *(_QWORD *)&a1[v11[24]] = *(uint64_t *)((char *)a2 + v11[24]);
        *(_QWORD *)&a1[v11[25]] = *(uint64_t *)((char *)a2 + v11[25]);
        v76 = v11[26];
        v77 = &a1[v76];
        v78 = (uint64_t *)((char *)a2 + v76);
        v79 = v78[1];
        *(_QWORD *)v77 = *v78;
        *((_QWORD *)v77 + 1) = v79;
        v80 = v11[27];
        v81 = &a1[v80];
        v82 = (uint64_t *)((char *)a2 + v80);
        v83 = v82[1];
        *(_QWORD *)v81 = *v82;
        *((_QWORD *)v81 + 1) = v83;
        v84 = v11[28];
        v85 = &a1[v84];
        v86 = (uint64_t *)((char *)a2 + v84);
        v87 = v86[1];
        *(_QWORD *)v85 = *v86;
        *((_QWORD *)v85 + 1) = v87;
        v88 = v11[29];
        v89 = &a1[v88];
        v90 = (uint64_t *)((char *)a2 + v88);
        v91 = v90[1];
        *(_QWORD *)v89 = *v90;
        *((_QWORD *)v89 + 1) = v91;
        v92 = v11[30];
        v93 = &a1[v92];
        v94 = (uint64_t *)((char *)a2 + v92);
        v95 = v94[1];
        *(_QWORD *)v93 = *v94;
        *((_QWORD *)v93 + 1) = v95;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 4u:
        v17 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ExtractedInfo(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 5:
      return swift_bridgeObjectRelease();
    case 1:
      v3 = type metadata accessor for URL();
      goto LABEL_16;
    case 2:
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for FlightReservation(0);
      v5 = a1 + v4[5];
      v6 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a1 + v4[11];
      if (!__swift_getEnumTagSinglePayload(v7, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v7, v6);
      v8 = a1 + v4[12];
      if (!__swift_getEnumTagSinglePayload(v8, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v8, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = a1 + v4[15];
      v10 = type metadata accessor for DateComponents();
      v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v11(v9, v10);
      v11(a1 + v4[16], v10);
      v12 = a1 + v4[17];
      v13 = type metadata accessor for TimeZone();
      if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      v14 = a1 + v4[18];
      if (!__swift_getEnumTagSinglePayload(v14, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4:
      v3 = type metadata accessor for Date();
LABEL_16:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ExtractedInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  char *__dst;
  void *__dsta;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      swift_bridgeObjectRetain();
      goto LABEL_22;
    case 1u:
      v7 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_22;
    case 2u:
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v8;
      v9 = (int *)type metadata accessor for FlightReservation(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
      *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
      v16 = v9[8];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = v9[9];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = v9[10];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      v28 = v9[11];
      __dst = &a1[v28];
      v29 = &a2[v28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v13))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(__dst, v29, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v13);
      }
      v31 = v9[12];
      v32 = &a1[v31];
      v33 = &a2[v31];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v31], 1, v13))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v32, v33, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v13);
      }
      v35 = v9[13];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = *((_QWORD *)v37 + 1);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v39 = v9[14];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = *((_QWORD *)v41 + 1);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      v43 = v9[15];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = type metadata accessor for DateComponents();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v44, v45, v46);
      v47(&a1[v9[16]], &a2[v9[16]], v46);
      v48 = v9[17];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = type metadata accessor for TimeZone();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
      }
      v53 = v9[18];
      v54 = &a1[v53];
      v55 = &a2[v53];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v53], 1, v51))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v54, v55, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
      }
      v57 = v9[19];
      v58 = &a1[v57];
      v59 = &a2[v57];
      v60 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      v61 = v9[20];
      v62 = &a1[v61];
      v63 = &a2[v61];
      __dsta = (void *)*((_QWORD *)v63 + 1);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = __dsta;
      v64 = v9[21];
      v65 = &a1[v64];
      v66 = &a2[v64];
      v96 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v96;
      v67 = v9[22];
      v68 = &a1[v67];
      v69 = &a2[v67];
      v95 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v95;
      v70 = v9[23];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      *(_QWORD *)&a1[v9[24]] = *(_QWORD *)&a2[v9[24]];
      *(_QWORD *)&a1[v9[25]] = *(_QWORD *)&a2[v9[25]];
      v74 = v9[26];
      v75 = &a1[v74];
      v76 = &a2[v74];
      v77 = *((_QWORD *)v76 + 1);
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      v78 = v9[27];
      v79 = &a1[v78];
      v80 = &a2[v78];
      v81 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v81;
      v82 = v9[28];
      v83 = &a1[v82];
      v84 = &a2[v82];
      v85 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v86 = v9[29];
      v87 = &a1[v86];
      v88 = &a2[v86];
      v89 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v90 = v9[30];
      v91 = &a1[v90];
      v92 = &a2[v90];
      v93 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v91 = *(_QWORD *)v92;
      *((_QWORD *)v91 + 1) = v93;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    case 4u:
      v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ExtractedInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *__dst;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)a1, type metadata accessor for ExtractedInfo);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 1u:
        v6 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_23;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v7 = (int *)type metadata accessor for FlightReservation(0);
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
        *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
        *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
        v14 = v7[8];
        v15 = &a1[v14];
        v16 = &a2[v14];
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
        v17 = v7[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        v20 = v7[10];
        v21 = &a1[v20];
        v22 = &a2[v20];
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
        v23 = v7[11];
        __dst = &a1[v23];
        v24 = &a2[v23];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v11))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(__dst, v24, v11);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v11);
        }
        v26 = v7[12];
        v27 = &a1[v26];
        v28 = &a2[v26];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v26], 1, v11))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v27, v28, v11);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v11);
        }
        v30 = v7[13];
        v31 = &a1[v30];
        v32 = &a2[v30];
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
        v33 = v7[14];
        v34 = &a1[v33];
        v35 = &a2[v33];
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
        v36 = v7[15];
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = type metadata accessor for DateComponents();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        v40(&a1[v7[16]], &a2[v7[16]], v39);
        v41 = v7[17];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = type metadata accessor for TimeZone();
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
        }
        v46 = v7[18];
        v47 = &a1[v46];
        v48 = &a2[v46];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v46], 1, v44))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v47, v48, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v44);
        }
        v50 = v7[19];
        v51 = &a1[v50];
        v52 = &a2[v50];
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
        v53 = v7[20];
        v54 = &a1[v53];
        v55 = &a2[v53];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
        v56 = v7[21];
        v57 = &a1[v56];
        v58 = &a2[v56];
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
        v59 = v7[22];
        v60 = &a1[v59];
        v61 = &a2[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
        v62 = v7[23];
        v63 = &a1[v62];
        v64 = &a2[v62];
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
        *(_QWORD *)&a1[v7[24]] = *(_QWORD *)&a2[v7[24]];
        *(_QWORD *)&a1[v7[25]] = *(_QWORD *)&a2[v7[25]];
        v65 = v7[26];
        v66 = &a1[v65];
        v67 = &a2[v65];
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
        v68 = v7[27];
        v69 = &a1[v68];
        v70 = &a2[v68];
        *(_QWORD *)v69 = *(_QWORD *)v70;
        *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
        v71 = v7[28];
        v72 = &a1[v71];
        v73 = &a2[v71];
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
        v74 = v7[29];
        v75 = &a1[v74];
        v76 = &a2[v74];
        *(_QWORD *)v75 = *(_QWORD *)v76;
        *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
        v77 = v7[30];
        v78 = &a1[v77];
        v79 = &a2[v77];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 4u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for ExtractedInfo(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v8 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_23;
    case 2:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = (int *)type metadata accessor for FlightReservation(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
      *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
      *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
      v15 = v9[11];
      v16 = &a1[v15];
      v17 = &a2[v15];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v13))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v16, v17, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
      }
      v19 = v9[12];
      v20 = &a1[v19];
      v21 = &a2[v19];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v13))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v20, v21, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v13);
      }
      *(_OWORD *)&a1[v9[13]] = *(_OWORD *)&a2[v9[13]];
      *(_OWORD *)&a1[v9[14]] = *(_OWORD *)&a2[v9[14]];
      v23 = v9[15];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = type metadata accessor for DateComponents();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
      v27(v24, v25, v26);
      v27(&a1[v9[16]], &a2[v9[16]], v26);
      v28 = v9[17];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = type metadata accessor for TimeZone();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      v33 = v9[18];
      v34 = &a1[v33];
      v35 = &a2[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v33], 1, v31))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v34, v35, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
      }
      *(_OWORD *)&a1[v9[19]] = *(_OWORD *)&a2[v9[19]];
      *(_OWORD *)&a1[v9[20]] = *(_OWORD *)&a2[v9[20]];
      *(_OWORD *)&a1[v9[21]] = *(_OWORD *)&a2[v9[21]];
      *(_OWORD *)&a1[v9[22]] = *(_OWORD *)&a2[v9[22]];
      *(_OWORD *)&a1[v9[23]] = *(_OWORD *)&a2[v9[23]];
      *(_QWORD *)&a1[v9[24]] = *(_QWORD *)&a2[v9[24]];
      *(_QWORD *)&a1[v9[25]] = *(_QWORD *)&a2[v9[25]];
      *(_OWORD *)&a1[v9[26]] = *(_OWORD *)&a2[v9[26]];
      *(_OWORD *)&a1[v9[27]] = *(_OWORD *)&a2[v9[27]];
      *(_OWORD *)&a1[v9[28]] = *(_OWORD *)&a2[v9[28]];
      *(_OWORD *)&a1[v9[29]] = *(_OWORD *)&a2[v9[29]];
      *(_OWORD *)&a1[v9[30]] = *(_OWORD *)&a2[v9[30]];
      goto LABEL_23;
    case 1:
      v7 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for ExtractedInfo(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)a1, type metadata accessor for ExtractedInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_24;
      case 2:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v9 = (int *)type metadata accessor for FlightReservation(0);
        v10 = v9[5];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
        *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
        *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
        *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
        *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
        *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
        v15 = v9[11];
        v16 = &a1[v15];
        v17 = &a2[v15];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v13))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v16, v17, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
        }
        v19 = v9[12];
        v20 = &a1[v19];
        v21 = &a2[v19];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v13))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v20, v21, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v13);
        }
        *(_OWORD *)&a1[v9[13]] = *(_OWORD *)&a2[v9[13]];
        *(_OWORD *)&a1[v9[14]] = *(_OWORD *)&a2[v9[14]];
        v23 = v9[15];
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = type metadata accessor for DateComponents();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
        v27(v24, v25, v26);
        v27(&a1[v9[16]], &a2[v9[16]], v26);
        v28 = v9[17];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = type metadata accessor for TimeZone();
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
        }
        v33 = v9[18];
        v34 = &a1[v33];
        v35 = &a2[v33];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v33], 1, v31))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v34, v35, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
        }
        *(_OWORD *)&a1[v9[19]] = *(_OWORD *)&a2[v9[19]];
        *(_OWORD *)&a1[v9[20]] = *(_OWORD *)&a2[v9[20]];
        *(_OWORD *)&a1[v9[21]] = *(_OWORD *)&a2[v9[21]];
        *(_OWORD *)&a1[v9[22]] = *(_OWORD *)&a2[v9[22]];
        *(_OWORD *)&a1[v9[23]] = *(_OWORD *)&a2[v9[23]];
        *(_QWORD *)&a1[v9[24]] = *(_QWORD *)&a2[v9[24]];
        *(_QWORD *)&a1[v9[25]] = *(_QWORD *)&a2[v9[25]];
        *(_OWORD *)&a1[v9[26]] = *(_OWORD *)&a2[v9[26]];
        *(_OWORD *)&a1[v9[27]] = *(_OWORD *)&a2[v9[27]];
        *(_OWORD *)&a1[v9[28]] = *(_OWORD *)&a2[v9[28]];
        *(_OWORD *)&a1[v9[29]] = *(_OWORD *)&a2[v9[29]];
        *(_OWORD *)&a1[v9[30]] = *(_OWORD *)&a2[v9[30]];
        goto LABEL_24;
      case 1:
        v7 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata completion function for ExtractedInfo()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FlightReservation(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Date();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ExtractedResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for SearchResultItem(0);
    v5 = (char *)&loc_2432D5CB0 + 4 * word_243358736[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ExtractedResult(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int EnumTagSinglePayload;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t result;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  type metadata accessor for SearchResultItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for EmailDocument(0);
      v5 = a1 + v4[12];
      v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a1 + v4[17];
      v8 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      v9 = v4[18];
      goto LABEL_19;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = (int *)type metadata accessor for MobileSMSDocument(0);
      v11 = a1 + v10[10];
      v12 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      v13 = a1 + v10[11];
      v14 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = a1 + v10[12];
      if (!__swift_getEnumTagSinglePayload(v15, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v15, v14);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = (int *)type metadata accessor for CalendarEvent(0);
      v16 = a1 + v10[7];
      v17 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      v18 = a1 + v10[8];
      if (!__swift_getEnumTagSinglePayload(v18, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = a1 + v10[13];
      v20 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
LABEL_18:
      v9 = v10[14];
LABEL_19:
      if (!*(_QWORD *)(a1 + v9))
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for Photo(0);
      v22 = a1 + *(int *)(v21 + 44);
      v23 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v21 + 64);
      goto LABEL_66;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (int *)type metadata accessor for NoteDocument(0);
      v26 = a1 + v25[8];
      v27 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      v28 = a1 + v25[9];
      if (!__swift_getEnumTagSinglePayload(v28, 1, v27))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v28, v27);
      v24 = v25[10];
      goto LABEL_66;
    case 5u:
      swift_bridgeObjectRelease();

      v24 = *(int *)(type metadata accessor for FileDocument(0) + 24);
      goto LABEL_66;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = type metadata accessor for WalletTransaction(0);
      v30 = a1 + *(int *)(v29 + 28);
      v31 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v30, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v29 + 52);
      goto LABEL_66;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = type metadata accessor for WalletPass(0);
      v33 = a1 + *(int *)(v32 + 28);
      v34 = type metadata accessor for Date();
      if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      swift_bridgeObjectRelease();
      v24 = *(int *)(v32 + 36);
      goto LABEL_66;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(int *)(type metadata accessor for Contact(0) + 36);
      goto LABEL_66;
    case 9u:
      swift_bridgeObjectRelease();
      v35 = (int *)type metadata accessor for FlightReservation(0);
      v36 = a1 + v35[5];
      v37 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = a1 + v35[11];
      if (!__swift_getEnumTagSinglePayload(v38, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v38, v37);
      v39 = a1 + v35[12];
      if (!__swift_getEnumTagSinglePayload(v39, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v39, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = a1 + v35[15];
      v41 = type metadata accessor for DateComponents();
      v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8);
      v42(v40, v41);
      v42(a1 + v35[16], v41);
      v43 = a1 + v35[17];
      v44 = type metadata accessor for TimeZone();
      if (!__swift_getEnumTagSinglePayload(v43, 1, v44))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
      v45 = a1 + v35[18];
      if (!__swift_getEnumTagSinglePayload(v45, 1, v44))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v45, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
      goto LABEL_63;
    case 0xAu:
      swift_bridgeObjectRelease();
      v47 = (int *)type metadata accessor for HotelReservation(0);
      v48 = a1 + v47[5];
      v49 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v48, 1, v49))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = a1 + v47[12];
      v51 = type metadata accessor for DateComponents();
      v52 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8);
      v52(v50, v51);
      v52(a1 + v47[13], v51);
      v53 = a1 + v47[14];
      v54 = type metadata accessor for TimeZone();
      if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    case 0xBu:
      swift_bridgeObjectRelease();
      v55 = (int *)type metadata accessor for RestaurantReservation(0);
      v56 = a1 + v55[5];
      v57 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58 = a1 + v55[12];
      v59 = type metadata accessor for DateComponents();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
      swift_bridgeObjectRelease();
      v60 = a1 + v55[14];
      v61 = type metadata accessor for TimeZone();
      if (!__swift_getEnumTagSinglePayload(v60, 1, v61))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    case 0xCu:
      swift_bridgeObjectRelease();
      v62 = type metadata accessor for GlobalItem();
      v63 = a1 + *(int *)(v62 + 20);
      v64 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v63, 1, v64))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = (uint64_t *)(a1 + *(int *)(v62 + 32));
      v66 = v65[1];
      if (v66 >> 60 != 15)
        outlined consume of Data._Representation(*v65, v66);
      v46 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_63:
      __swift_instantiateConcreteTypeFromMangledName(v46);
LABEL_64:
      swift_bridgeObjectRelease();
      break;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_66:
      v67 = a1 + v24;
      v68 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
      break;
    case 0xEu:
      swift_bridgeObjectRelease();
      v69 = type metadata accessor for IntentFileItem();
      v70 = a1 + *(int *)(v69 + 20);
      v71 = type metadata accessor for URL();
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v70, 1, v71);
      v73 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8);
      if (!EnumTagSinglePayload)
        v73(v70, v71);
      v73(a1 + *(int *)(v69 + 24), v71);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      v74 = type metadata accessor for Answer(0);
      v75 = a1 + *(int *)(v74 + 20);
      v76 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v75, 1, v76))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v75, v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v77 = a1 + *(int *)(v74 + 40);
      if (!__swift_getEnumTagSinglePayload(v77, 1, v76))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v77, v76);
      break;
    default:
      break;
  }

  swift_bridgeObjectRelease();
  v78 = a1 + *(int *)(a2 + 20);
  type metadata accessor for ExtractedInfo(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 5:
      return swift_bridgeObjectRelease();
    case 1:
      v80 = type metadata accessor for URL();
      goto LABEL_90;
    case 2:
      swift_bridgeObjectRelease();
      v81 = (int *)type metadata accessor for FlightReservation(0);
      v82 = v78 + v81[5];
      v83 = type metadata accessor for URL();
      if (!__swift_getEnumTagSinglePayload(v82, 1, v83))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v82, v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84 = v78 + v81[11];
      if (!__swift_getEnumTagSinglePayload(v84, 1, v83))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v84, v83);
      v85 = v78 + v81[12];
      if (!__swift_getEnumTagSinglePayload(v85, 1, v83))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v85, v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86 = v78 + v81[15];
      v87 = type metadata accessor for DateComponents();
      v88 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8);
      v88(v86, v87);
      v88(v78 + v81[16], v87);
      v89 = v78 + v81[17];
      v90 = type metadata accessor for TimeZone();
      if (!__swift_getEnumTagSinglePayload(v89, 1, v90))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v89, v90);
      v91 = v78 + v81[18];
      if (!__swift_getEnumTagSinglePayload(v91, 1, v90))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v91, v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4:
      v80 = type metadata accessor for Date();
LABEL_90:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v78, v80);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ExtractedResult()
{
  char *v0;

  type metadata accessor for SearchResultItem(0);
  v0 = (char *)sub_2432D9014 + 4 * word_243358782[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2432D9014(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__dst, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  char *v162;
  uint64_t v163;

  v31 = v28[1];
  *v30 = *v28;
  v30[1] = v31;
  v32 = v28[3];
  v30[2] = v28[2];
  v30[3] = v32;
  v33 = v28[5];
  v30[4] = v28[4];
  v30[5] = v33;
  v34 = v28[7];
  v30[6] = v28[6];
  v30[7] = v34;
  v35 = v28[9];
  v30[8] = v28[8];
  v30[9] = v35;
  v158 = v28[11];
  v30[10] = v28[10];
  v30[11] = v158;
  v36 = (int *)type metadata accessor for EmailDocument(0);
  v37 = v36[12];
  v156 = (char *)v28 + v37;
  v157 = (char *)v30 + v37;
  v161 = v30;
  v38 = type metadata accessor for Date();
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = v38;
  v41 = v161;
  v39(v157, v156, v40);
  *(_QWORD *)((char *)v161 + v36[13]) = *(_QWORD *)((char *)v28 + v36[13]);
  *(_QWORD *)((char *)v161 + v36[14]) = *(_QWORD *)((char *)v28 + v36[14]);
  *(_QWORD *)((char *)v161 + v36[15]) = *(_QWORD *)((char *)v28 + v36[15]);
  *((_BYTE *)v161 + v36[16]) = *((_BYTE *)v28 + v36[16]);
  v42 = v36[17];
  v43 = (char *)v161 + v42;
  v44 = (char *)v28 + v42;
  v45 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
  }
  v47 = v36[18];
  v48 = (_QWORD *)((char *)v161 + v47);
  v49 = (_QWORD *)((char *)v28 + v47);
  if (*v49)
  {
    v51 = v49[1];
    v52 = v49[2];
    *v48 = *v49;
    v48[1] = v51;
    v53 = v49[3];
    v54 = v49[4];
    v48[2] = v52;
    v48[3] = v53;
    v48[4] = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v50 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v50;
    v48[4] = v49[4];
  }
  swift_storeEnumTagMultiPayload();
  v55 = type metadata accessor for SearchResult(0);
  v56 = *(int *)(v55 + 20);
  v57 = *(void **)((char *)v28 + v56);
  *(_QWORD *)((char *)v161 + v56) = v57;
  v58 = *(int *)(v55 + 24);
  v59 = (_QWORD *)((char *)v161 + v58);
  v60 = (_QWORD *)((char *)v28 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = *(int *)(v29 + 20);
  v63 = (char *)v161 + v62;
  v64 = (char *)v28 + v62;
  v65 = type metadata accessor for ExtractedInfo(0);
  v66 = v57;
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 5u:
      v76 = *((_QWORD *)v64 + 1);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v76;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 1u:
      v67 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v63, v64, v67);
      goto LABEL_14;
    case 2u:
      v68 = *((_QWORD *)v64 + 1);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v68;
      v69 = (int *)type metadata accessor for FlightReservation(0);
      v70 = v69[5];
      v71 = &v63[v70];
      v72 = &v64[v70];
      v73 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      }
      *(_QWORD *)&v63[v69[6]] = *(_QWORD *)&v64[v69[6]];
      *(_QWORD *)&v63[v69[7]] = *(_QWORD *)&v64[v69[7]];
      v78 = v69[8];
      v79 = &v63[v78];
      v80 = &v64[v78];
      v81 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v81;
      v82 = v69[9];
      v83 = &v63[v82];
      v84 = &v64[v82];
      v85 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v86 = v69[10];
      v87 = &v63[v86];
      v88 = &v64[v86];
      v89 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v90 = v69[11];
      v162 = &v63[v90];
      v91 = &v64[v90];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v73))
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v162, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v162, v91, v73);
        __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v73);
      }
      v93 = v69[12];
      v94 = &v63[v93];
      v95 = &v64[v93];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v64[v93], 1, v73))
      {
        v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v94, v95, v73);
        __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v73);
      }
      v97 = v69[13];
      v98 = &v63[v97];
      v99 = &v64[v97];
      v100 = *((_QWORD *)v99 + 1);
      *(_QWORD *)v98 = *(_QWORD *)v99;
      *((_QWORD *)v98 + 1) = v100;
      v101 = v69[14];
      v102 = &v63[v101];
      v103 = &v64[v101];
      v104 = *((_QWORD *)v103 + 1);
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = v104;
      v105 = v69[15];
      v106 = &v63[v105];
      v107 = &v64[v105];
      v108 = type metadata accessor for DateComponents();
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v109(v106, v107, v108);
      v109(&v63[v69[16]], &v64[v69[16]], v108);
      v110 = v69[17];
      v111 = &v63[v110];
      v112 = &v64[v110];
      v113 = type metadata accessor for TimeZone();
      if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v113))
      {
        v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
        __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v113);
      }
      v115 = v69[18];
      v116 = &v63[v115];
      v117 = &v64[v115];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v64[v115], 1, v113))
      {
        v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v116, v117, v113);
        __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v113);
      }
      v119 = v69[19];
      v120 = &v63[v119];
      v121 = &v64[v119];
      v122 = *((_QWORD *)v121 + 1);
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = v122;
      v123 = v69[20];
      v124 = &v63[v123];
      v125 = &v64[v123];
      v163 = *((_QWORD *)v125 + 1);
      *(_QWORD *)v124 = *(_QWORD *)v125;
      *((_QWORD *)v124 + 1) = v163;
      v126 = v69[21];
      v127 = &v63[v126];
      v128 = &v64[v126];
      v160 = *((_QWORD *)v128 + 1);
      *(_QWORD *)v127 = *(_QWORD *)v128;
      *((_QWORD *)v127 + 1) = v160;
      v129 = v69[22];
      v130 = &v63[v129];
      v131 = &v64[v129];
      v159 = *((_QWORD *)v131 + 1);
      *(_QWORD *)v130 = *(_QWORD *)v131;
      *((_QWORD *)v130 + 1) = v159;
      v132 = v69[23];
      v133 = &v63[v132];
      v134 = &v64[v132];
      v135 = *((_QWORD *)v134 + 1);
      *(_QWORD *)v133 = *(_QWORD *)v134;
      *((_QWORD *)v133 + 1) = v135;
      *(_QWORD *)&v63[v69[24]] = *(_QWORD *)&v64[v69[24]];
      *(_QWORD *)&v63[v69[25]] = *(_QWORD *)&v64[v69[25]];
      v136 = v69[26];
      v137 = &v63[v136];
      v138 = &v64[v136];
      v139 = *((_QWORD *)v138 + 1);
      *(_QWORD *)v137 = *(_QWORD *)v138;
      *((_QWORD *)v137 + 1) = v139;
      v140 = v69[27];
      v141 = &v63[v140];
      v142 = &v64[v140];
      v143 = *((_QWORD *)v142 + 1);
      *(_QWORD *)v141 = *(_QWORD *)v142;
      *((_QWORD *)v141 + 1) = v143;
      v144 = v69[28];
      v145 = &v63[v144];
      v146 = &v64[v144];
      v147 = *((_QWORD *)v146 + 1);
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *((_QWORD *)v145 + 1) = v147;
      v148 = v69[29];
      v149 = &v63[v148];
      v150 = &v64[v148];
      v151 = *((_QWORD *)v150 + 1);
      *(_QWORD *)v149 = *(_QWORD *)v150;
      *((_QWORD *)v149 + 1) = v151;
      v152 = v69[30];
      v153 = &v63[v152];
      v154 = &v64[v152];
      v155 = *((_QWORD *)v154 + 1);
      *(_QWORD *)v153 = *(_QWORD *)v154;
      *((_QWORD *)v153 + 1) = v155;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      return v161;
    case 4u:
      v75 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v63, v64, v75);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      break;
  }
  return v41;
}

uint64_t assignWithCopy for ExtractedResult(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(a1, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v4 = (char *)&loc_2432DB3D4 + 4 * word_2433587A8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = type metadata accessor for SearchResult(0);
  v6 = *(int *)(v5 + 20);
  v7 = *(void **)(a1 + v6);
  v8 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v8;
  v9 = v8;

  v10 = *(int *)(v5 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void initializeWithTake for ExtractedResult()
{
  char *v0;

  type metadata accessor for SearchResultItem(0);
  v0 = (char *)sub_2432DD9E0 + 4 * word_2433587CE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_2432DD9E0()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v3 = v1[1];
  *v0 = *v1;
  v0[1] = v3;
  v4 = v1[3];
  v0[2] = v1[2];
  v0[3] = v4;
  v5 = v1[5];
  v0[4] = v1[4];
  v0[5] = v5;
  v6 = (int *)type metadata accessor for EmailDocument(0);
  v7 = v6[12];
  v8 = (char *)v0 + v7;
  v9 = (char *)v1 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)v0 + v6[13]) = *(_QWORD *)((char *)v1 + v6[13]);
  *(_QWORD *)((char *)v0 + v6[14]) = *(_QWORD *)((char *)v1 + v6[14]);
  *(_QWORD *)((char *)v0 + v6[15]) = *(_QWORD *)((char *)v1 + v6[15]);
  *((_BYTE *)v0 + v6[16]) = *((_BYTE *)v1 + v6[16]);
  v11 = v6[17];
  v12 = (char *)v0 + v11;
  v13 = (char *)v1 + v11;
  v14 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v16 = v6[18];
  v17 = (char *)v0 + v16;
  v18 = (char *)v1 + v16;
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  swift_storeEnumTagMultiPayload();
  v20 = type metadata accessor for SearchResult(0);
  *(_QWORD *)((char *)v0 + *(int *)(v20 + 20)) = *(_QWORD *)((char *)v1 + *(int *)(v20 + 20));
  *(_OWORD *)((char *)v0 + *(int *)(v20 + 24)) = *(_OWORD *)((char *)v1 + *(int *)(v20 + 24));
  v21 = *(int *)(v2 + 20);
  v22 = (char *)v0 + v21;
  v23 = (char *)v1 + v21;
  v24 = type metadata accessor for ExtractedInfo(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v27 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v22, v23, v27);
      goto LABEL_26;
    case 2:
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v28 = (int *)type metadata accessor for FlightReservation(0);
      v29 = v28[5];
      v30 = &v22[v29];
      v31 = &v23[v29];
      v32 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      }
      *(_QWORD *)&v22[v28[6]] = *(_QWORD *)&v23[v28[6]];
      *(_QWORD *)&v22[v28[7]] = *(_QWORD *)&v23[v28[7]];
      *(_OWORD *)&v22[v28[8]] = *(_OWORD *)&v23[v28[8]];
      *(_OWORD *)&v22[v28[9]] = *(_OWORD *)&v23[v28[9]];
      *(_OWORD *)&v22[v28[10]] = *(_OWORD *)&v23[v28[10]];
      v34 = v28[11];
      v35 = &v22[v34];
      v36 = &v23[v34];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v23[v34], 1, v32))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v35, v36, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v32);
      }
      v38 = v28[12];
      v39 = &v22[v38];
      v40 = &v23[v38];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v23[v38], 1, v32))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v39, v40, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v32);
      }
      *(_OWORD *)&v22[v28[13]] = *(_OWORD *)&v23[v28[13]];
      *(_OWORD *)&v22[v28[14]] = *(_OWORD *)&v23[v28[14]];
      v42 = v28[15];
      v43 = &v22[v42];
      v44 = &v23[v42];
      v45 = type metadata accessor for DateComponents();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
      v46(v43, v44, v45);
      v46(&v22[v28[16]], &v23[v28[16]], v45);
      v47 = v28[17];
      v48 = &v22[v47];
      v49 = &v23[v47];
      v50 = type metadata accessor for TimeZone();
      if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
      }
      v52 = v28[18];
      v53 = &v22[v52];
      v54 = &v23[v52];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v23[v52], 1, v50))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v53, v54, v50);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v50);
      }
      *(_OWORD *)&v22[v28[19]] = *(_OWORD *)&v23[v28[19]];
      *(_OWORD *)&v22[v28[20]] = *(_OWORD *)&v23[v28[20]];
      *(_OWORD *)&v22[v28[21]] = *(_OWORD *)&v23[v28[21]];
      *(_OWORD *)&v22[v28[22]] = *(_OWORD *)&v23[v28[22]];
      *(_OWORD *)&v22[v28[23]] = *(_OWORD *)&v23[v28[23]];
      *(_QWORD *)&v22[v28[24]] = *(_QWORD *)&v23[v28[24]];
      *(_QWORD *)&v22[v28[25]] = *(_QWORD *)&v23[v28[25]];
      *(_OWORD *)&v22[v28[26]] = *(_OWORD *)&v23[v28[26]];
      *(_OWORD *)&v22[v28[27]] = *(_OWORD *)&v23[v28[27]];
      *(_OWORD *)&v22[v28[28]] = *(_OWORD *)&v23[v28[28]];
      *(_OWORD *)&v22[v28[29]] = *(_OWORD *)&v23[v28[29]];
      *(_OWORD *)&v22[v28[30]] = *(_OWORD *)&v23[v28[30]];
      goto LABEL_26;
    case 1:
      v26 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v22, v23, v26);
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return v0;
  }
  memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  return v0;
}

uint64_t assignWithTake for ExtractedResult(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(a1, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v4 = (char *)&loc_2432DF1C8 + 4 * word_2433587EE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = type metadata accessor for SearchResult(0);
  v6 = *(int *)(v5 + 20);
  v7 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);

  v8 = *(int *)(v5 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractedResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432E0978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_77_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_5_16();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ExtractedResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432E09E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_77_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = type metadata accessor for ExtractedInfo(0);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata completion function for ExtractedResult()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SearchResult(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ExtractedInfo(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of ExtractionRule.checkFirstN.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ExtractionRule.requiresHydratedResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtractionRule.featureFlag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ExtractionRule.eligibleResultTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ExtractionRule.extractResults(query:results:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_136_3();
  OUTLINED_FUNCTION_91_7();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = dispatch thunk of SageSearchClient.search(query:clientEntities:location:);
  v2 = OUTLINED_FUNCTION_82_7();
  return v4(v2);
}

uint64_t dispatch thunk of ExtractionRule.extractInfo(query:result:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_80_7();
  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_97_10(v1);
  return OUTLINED_FUNCTION_100_8(v2);
}

uint64_t dispatch thunk of TypedExtractionRule.extractInfo(query:typedResult:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_80_7();
  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_97_10(v1);
  return OUTLINED_FUNCTION_100_8(v2);
}

uint64_t dispatch thunk of AnswerSourceExtractionRule.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  OUTLINED_FUNCTION_65_10();
  v22 = v17;
  OUTLINED_FUNCTION_80_7();
  v18 = OUTLINED_FUNCTION_25_5();
  v19 = (_QWORD *)OUTLINED_FUNCTION_112(v18);
  *v19 = v10;
  v19[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v21(v16, v15, v14, v13, v12, v11, v9, v22, a9);
}

uint64_t dispatch thunk of RegexExtractionRule.regex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RegexExtractionRule.extractMatched(typedResult:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_92_2();
  v5 = OUTLINED_FUNCTION_6();
  v6 = (_QWORD *)OUTLINED_FUNCTION_112(v5);
  *v6 = v2;
  v6[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v8(v4, v3, v1, v0);
}

uint64_t specialized SearchItem.matchesAsset(_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for WebAnswer();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type WebAnswer and conformance WebAnswer, (uint64_t (*)(uint64_t))type metadata accessor for WebAnswer, (uint64_t)&protocol conformance descriptor for WebAnswer);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 28)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 28), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for Photo(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Photo and conformance Photo, type metadata accessor for Photo, (uint64_t)&protocol conformance descriptor for Photo);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Photo);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for Photo);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for Photo);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for Photo);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 64)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 64), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for Photo);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for Photo);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for Photo);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for MobileSMSDocument(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument, type metadata accessor for MobileSMSDocument, (uint64_t)&protocol conformance descriptor for MobileSMSDocument);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MobileSMSDocument);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for MobileSMSDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for MobileSMSDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for MobileSMSDocument);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 44)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 44), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for MobileSMSDocument);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for MobileSMSDocument);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for MobileSMSDocument);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for EmailDocument(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type EmailDocument and conformance EmailDocument, type metadata accessor for EmailDocument, (uint64_t)&protocol conformance descriptor for EmailDocument);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for EmailDocument);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for EmailDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for EmailDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for EmailDocument);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 68)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 68), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for EmailDocument);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for EmailDocument);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for EmailDocument);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for AppEntityItem();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem, (uint64_t (*)(uint64_t))type metadata accessor for AppEntityItem, (uint64_t)&protocol conformance descriptor for AppEntityItem);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 32)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 32), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for NoteDocument(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type NoteDocument and conformance NoteDocument, type metadata accessor for NoteDocument, (uint64_t)&protocol conformance descriptor for NoteDocument);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for NoteDocument);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for NoteDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for NoteDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for NoteDocument);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 40)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 40), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for NoteDocument);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for NoteDocument);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for NoteDocument);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];

  v4 = type metadata accessor for URL();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for FileDocument(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = v15;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type FileDocument and conformance FileDocument, type metadata accessor for FileDocument, (uint64_t)&protocol conformance descriptor for FileDocument);
  v36[4] = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for FileDocument);
  if (*a2 == *boxed_opaque_existential_1 && a2[1] == boxed_opaque_existential_1[1])
  {
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for FileDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined init with copy of SearchResult((uint64_t)a2, (uint64_t)v17, type metadata accessor for FileDocument);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v36, (uint64_t)v35);
    if ((v21 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for FileDocument);
LABEL_14:
      v25 = 0;
      goto LABEL_16;
    }
  }
  v22 = (uint64_t)&v17[*(int *)(v14 + 24)];
  v23 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  outlined init with copy of URL?((uint64_t)v23 + *(int *)(v14 + 24), (uint64_t)v13);
  v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of URL?(v22, (uint64_t)v8);
  outlined init with copy of URL?((uint64_t)v13, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    v26 = v33;
    outlined init with copy of URL?((uint64_t)v8, v33);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
    {
      v27 = v34;
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v4);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for FileDocument);
      v29((char *)v26, v4);
      outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for FileDocument);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v4);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for FileDocument);
  if (__swift_getEnumTagSinglePayload(v24, 1, v4) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for URL?);
  v25 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25 & 1;
}

void specialized SearchItem.matchesAsset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_2();
  v26 = OUTLINED_FUNCTION_72_10();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_96_10(v7, v24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81_10(v10, v25);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_115_5();
  OUTLINED_FUNCTION_132_2();
  v13 = MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_66_15(v13);
  v15 = (uint64_t)OUTLINED_FUNCTION_182_2(v14);
  OUTLINED_FUNCTION_310_0(v1, v15);
  OUTLINED_FUNCTION_209_1();
  v18 = v18 && v16 == v17;
  if (v18)
  {
    OUTLINED_FUNCTION_310_0(v4, v2);
    OUTLINED_FUNCTION_85_10();
LABEL_8:
    v19 = OUTLINED_FUNCTION_134_4();
    OUTLINED_FUNCTION_181_2((uint64_t)v19, *(int *)(v5 + 52));
    OUTLINED_FUNCTION_112_5();
    OUTLINED_FUNCTION_184_1();
    v20 = OUTLINED_FUNCTION_22_2(v0, 1, v26);
    if (v18)
    {
      OUTLINED_FUNCTION_160_3(v20, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (v18)
      {
        OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for URL?);
        goto LABEL_17;
      }
    }
    else
    {
      OUTLINED_FUNCTION_149_3();
      v23 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (!v22)
      {
        OUTLINED_FUNCTION_73_11();
        lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        OUTLINED_FUNCTION_87_10();
        OUTLINED_FUNCTION_113_7();
        OUTLINED_FUNCTION_159_3(v3);
        OUTLINED_FUNCTION_59_3(v2);
        OUTLINED_FUNCTION_162_3(v5);
        OUTLINED_FUNCTION_159_3(v0);
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_160_3(v23, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_110_7();
    }
    OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_17;
  }
  v15 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_310_0(v4, v2);
  OUTLINED_FUNCTION_85_10();
  if ((v15 & 1) != 0)
    goto LABEL_8;
  OUTLINED_FUNCTION_59_3(v2);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_2();
  v26 = OUTLINED_FUNCTION_72_10();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_96_10(v7, v24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81_10(v10, v25);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_115_5();
  OUTLINED_FUNCTION_132_2();
  v13 = MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_66_15(v13);
  v15 = (uint64_t)OUTLINED_FUNCTION_182_2(v14);
  OUTLINED_FUNCTION_310_0(v1, v15);
  OUTLINED_FUNCTION_209_1();
  v18 = v18 && v16 == v17;
  if (v18)
  {
    OUTLINED_FUNCTION_310_0(v4, v2);
    OUTLINED_FUNCTION_85_10();
LABEL_8:
    v19 = OUTLINED_FUNCTION_134_4();
    OUTLINED_FUNCTION_181_2((uint64_t)v19, *(int *)(v5 + 36));
    OUTLINED_FUNCTION_112_5();
    OUTLINED_FUNCTION_184_1();
    v20 = OUTLINED_FUNCTION_22_2(v0, 1, v26);
    if (v18)
    {
      OUTLINED_FUNCTION_160_3(v20, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (v18)
      {
        OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for URL?);
        goto LABEL_17;
      }
    }
    else
    {
      OUTLINED_FUNCTION_149_3();
      v23 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (!v22)
      {
        OUTLINED_FUNCTION_73_11();
        lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        OUTLINED_FUNCTION_87_10();
        OUTLINED_FUNCTION_113_7();
        OUTLINED_FUNCTION_159_3(v3);
        OUTLINED_FUNCTION_59_3(v2);
        OUTLINED_FUNCTION_162_3(v5);
        OUTLINED_FUNCTION_159_3(v0);
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_160_3(v23, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_110_7();
    }
    OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_17;
  }
  v15 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_310_0(v4, v2);
  OUTLINED_FUNCTION_85_10();
  if ((v15 & 1) != 0)
    goto LABEL_8;
  OUTLINED_FUNCTION_59_3(v2);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_2();
  v26 = OUTLINED_FUNCTION_72_10();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_96_10(v7, v24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81_10(v10, v25);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_115_5();
  OUTLINED_FUNCTION_132_2();
  v13 = MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_66_15(v13);
  v15 = (uint64_t)OUTLINED_FUNCTION_182_2(v14);
  OUTLINED_FUNCTION_310_0(v1, v15);
  OUTLINED_FUNCTION_209_1();
  v18 = v18 && v16 == v17;
  if (v18)
  {
    OUTLINED_FUNCTION_310_0(v4, v2);
    OUTLINED_FUNCTION_85_10();
LABEL_8:
    v19 = OUTLINED_FUNCTION_134_4();
    OUTLINED_FUNCTION_181_2((uint64_t)v19, *(int *)(v5 + 20));
    OUTLINED_FUNCTION_112_5();
    OUTLINED_FUNCTION_184_1();
    v20 = OUTLINED_FUNCTION_22_2(v0, 1, v26);
    if (v18)
    {
      OUTLINED_FUNCTION_160_3(v20, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (v18)
      {
        OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for URL?);
        goto LABEL_17;
      }
    }
    else
    {
      OUTLINED_FUNCTION_149_3();
      v23 = OUTLINED_FUNCTION_22_2(v15, 1, v26);
      if (!v22)
      {
        OUTLINED_FUNCTION_73_11();
        lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        OUTLINED_FUNCTION_87_10();
        OUTLINED_FUNCTION_113_7();
        OUTLINED_FUNCTION_159_3(v3);
        OUTLINED_FUNCTION_59_3(v2);
        OUTLINED_FUNCTION_162_3(v5);
        OUTLINED_FUNCTION_159_3(v0);
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_160_3(v23, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_59_3(v2);
      v21 = OUTLINED_FUNCTION_110_7();
    }
    OUTLINED_FUNCTION_85_3(v21, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_17;
  }
  v15 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_310_0(v4, v2);
  OUTLINED_FUNCTION_85_10();
  if ((v15 & 1) != 0)
    goto LABEL_8;
  OUTLINED_FUNCTION_59_3(v2);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_43_0();
}

uint64_t specialized SearchItem.matchesAsset(_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int EnumTagSinglePayload;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  _QWORD v39[5];

  v37 = type metadata accessor for URL();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  v39[3] = &type metadata for GeoLocation;
  v39[4] = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  v39[0] = swift_allocObject();
  v15 = *a1;
  memcpy((void *)(v39[0] + 16), a1, 0x9DuLL);
  v38[0] = *a2;
  outlined retain of GeoLocation((uint64_t)a1);
  v16 = dispatch thunk of CustomStringConvertible.description.getter();
  v18 = v17;
  v38[0] = v15;
  if (v16 == dispatch thunk of CustomStringConvertible.description.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v39, (uint64_t)v38);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v39, (uint64_t)v38);
    v22 = 0;
    if ((v21 & 1) == 0)
      goto LABEL_19;
  }
  outlined retain of GeoLocation((uint64_t)a2);
  URL.init(string:)();
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  URL.init(string:)();
  v23 = (uint64_t)&v6[*(int *)(v36 + 48)];
  outlined init with copy of URL?((uint64_t)v14, (uint64_t)v6);
  outlined init with copy of URL?((uint64_t)v12, v23);
  v24 = v37;
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v37) == 1)
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
    outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
    outlined release of GeoLocation((uint64_t)a2);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v24);
    if (EnumTagSinglePayload == 1)
      v26 = &demangling cache variable for type metadata for URL?;
    else
      v26 = &demangling cache variable for type metadata for (URL?, URL?);
    if (EnumTagSinglePayload == 1)
      v22 = -1;
    else
      v22 = 0;
  }
  else
  {
    v27 = v34;
    outlined init with copy of URL?((uint64_t)v6, v34);
    if (__swift_getEnumTagSinglePayload(v23, 1, v24) == 1)
    {
      outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
      outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
      outlined release of GeoLocation((uint64_t)a2);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v24);
      v22 = 0;
      v26 = &demangling cache variable for type metadata for (URL?, URL?);
    }
    else
    {
      v28 = v35;
      v29 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v33, v23, v24);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, v24);
      v26 = &demangling cache variable for type metadata for URL?;
      outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
      outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
      outlined release of GeoLocation((uint64_t)a2);
      v30((char *)v27, v24);
    }
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v6, v26);
LABEL_19:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v22 & 1;
}

unint64_t lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation, &type metadata for GeoLocation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation, &type metadata for GeoLocation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation, &type metadata for GeoLocation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation;
  if (!lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation, &type metadata for GeoLocation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation and conformance GeoLocation);
  }
  return result;
}

uint64_t sub_2432E2E8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>;
  if (!lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Regex<Substring>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>);
  }
  return result;
}

uint64_t specialized SearchItem.matchesAsset(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[6];

  v50 = type metadata accessor for URL();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  MEMORY[0x24BDAC7A8](v49);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v47 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v45 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - v13;
  v15 = type metadata accessor for SearchResultItem(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57[3] = v16;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchResultItem and conformance SearchResultItem, type metadata accessor for SearchResultItem, (uint64_t)&protocol conformance descriptor for SearchResultItem);
  v57[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
  outlined init with copy of SearchResult(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SearchResultItem);
  SearchResultItem.associatedValue.getter();
  v21 = v55;
  v22 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  SearchResultItem.associatedValue.getter();
  v27 = v55;
  v26 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32))(v27, v26);
  v30 = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  if (v23 == v28 && v25 == v30)
  {
    swift_bridgeObjectRelease_n();
    outlined init with copy of SearchResult(a2, (uint64_t)v18, type metadata accessor for SearchResultItem);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v57, (uint64_t)v54);
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined init with copy of SearchResult(a2, (uint64_t)v18, type metadata accessor for SearchResultItem);
    outlined init with copy of IMSPIMessageProtocol((uint64_t)v57, (uint64_t)v54);
    if ((v32 & 1) == 0)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResultItem);
LABEL_14:
      v39 = 0;
      goto LABEL_16;
    }
  }
  SearchResultItem.associatedValue.getter();
  v33 = v52;
  v34 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  (*(void (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_project_boxed_opaque_existential_1(v54, v55);
  SearchResultItem.associatedValue.getter();
  v35 = v52;
  v36 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  (*(void (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  v37 = (uint64_t)&v6[*(int *)(v49 + 48)];
  outlined init with copy of URL?((uint64_t)v14, (uint64_t)v6);
  outlined init with copy of URL?((uint64_t)v12, v37);
  v38 = v50;
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v50) != 1)
  {
    v40 = v47;
    outlined init with copy of URL?((uint64_t)v6, v47);
    if (__swift_getEnumTagSinglePayload(v37, 1, v38) != 1)
    {
      v41 = v48;
      v42 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v46, v37, v38);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      v43 = *(void (**)(char *, uint64_t))(v41 + 8);
      v43(v42, v38);
      outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
      outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResultItem);
      v43((char *)v40, v38);
      outlined destroy of MobileSMSDocument?((uint64_t)v6, &demangling cache variable for type metadata for URL?);
      goto LABEL_16;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
    outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResultItem);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v40, v38);
    goto LABEL_13;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v12, &demangling cache variable for type metadata for URL?);
  outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for URL?);
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchResultItem);
  if (__swift_getEnumTagSinglePayload(v37, 1, v38) != 1)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v6, &demangling cache variable for type metadata for (URL?, URL?));
    goto LABEL_14;
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v6, &demangling cache variable for type metadata for URL?);
  v39 = 1;
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  return v39 & 1;
}

void OUTLINED_FUNCTION_2_24()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of SearchResult(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_18()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_4_30()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_10_24()
{
  uint64_t *v0;
  void (*v1)(_QWORD);

  specialized SearchItem.source.getter(v1, v0);
}

void OUTLINED_FUNCTION_15_23()
{
  uint64_t *v0;
  void (*v1)(_QWORD);

  specialized SearchItem.source.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_25(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17_23(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_24_16()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_25_15(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_34_14()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_44_18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_45_13()
{
  return 0;
}

void OUTLINED_FUNCTION_50_14()
{
  specialized SearchItem.matchesAsset(_:)();
}

uint64_t OUTLINED_FUNCTION_51_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_53_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, a4);
}

void OUTLINED_FUNCTION_55_7(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  outlined init with copy of SearchResult(*(_QWORD *)(v5 + 88) + ((v3 + 32) & ~v3) + v2 * a2, a1, v4);
}

uint64_t OUTLINED_FUNCTION_59_11()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ExtractedInfo(0);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_61_9()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_64_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_66_15(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 96) = a1;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_70_11@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_72_10()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_73_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 32))(*(_QWORD *)(v2 - 192), v0, v1);
}

uint64_t OUTLINED_FUNCTION_76_11()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_78_12(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of SearchResult(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_79_9@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

void OUTLINED_FUNCTION_81_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_83_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_85_10()
{
  uint64_t v0;

  return outlined init with copy of IMSPIMessageProtocol(v0 - 120, v0 - 160);
}

uint64_t OUTLINED_FUNCTION_86_13@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_87_10()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_88_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v3;
  a1[1] = v1;
  *(_QWORD *)(v5 + 16) = v2;
  return v4;
}

void OUTLINED_FUNCTION_89_14()
{
  SearchResultItem.associatedValue.getter();
}

uint64_t OUTLINED_FUNCTION_90_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_93_7(uint64_t a1, uint64_t a2)
{
  return MediaURLAnswer.extractMatched(typedResult:)(a1, a2);
}

void OUTLINED_FUNCTION_96_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_97_10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_98_7(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_99_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_100_8@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_101_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return WalletLocationAnswer.extractFromSource(query:answer:source:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_103_9(uint64_t a1, uint64_t a2)
{
  return MediaURLAnswer.extractMatched(typedResult:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_105_12()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  *(_DWORD *)(v0 + 136) = *(_DWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 112) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_107_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_109_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v3 + ((v2 + 32) & ~v2) + v1 * a1;
}

uint64_t OUTLINED_FUNCTION_110_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_111_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112_5()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of URL?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_113_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_114_8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_115_5()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_116_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  *a1 = v2;
  a1[1] = v1;
  result = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 72);
  return result;
}

uint64_t OUTLINED_FUNCTION_117_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_118_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_120_7(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_getEnumTagSinglePayload(v3, 1, a3);
}

uint64_t OUTLINED_FUNCTION_121_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(a1, v4, 1, a4);
}

void OUTLINED_FUNCTION_122_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of SearchResult(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_123_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_124_9()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, *(_QWORD *)(v0 + 128));
  return v1;
}

uint64_t OUTLINED_FUNCTION_125_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_126_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_127_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_130_3()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ExtractedInfo(0);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_133_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

_QWORD *OUTLINED_FUNCTION_134_4()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 136));
}

void OUTLINED_FUNCTION_137_6(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

unint64_t OUTLINED_FUNCTION_140_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 80) = v1;
  return lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
}

uint64_t OUTLINED_FUNCTION_141_4@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

unint64_t OUTLINED_FUNCTION_144_3()
{
  _QWORD *v0;
  __int128 *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  outlined init with take of SageSearchClient(v1, (uint64_t)v0);
  __swift_project_boxed_opaque_existential_1(v0, v2[5]);
  v2[12] = v4;
  v2[13] = v3;
  return lazy protocol witness table accessor for type String and conformance String();
}

void OUTLINED_FUNCTION_145_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of SearchResult(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_146_6@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = (char *)a1 + *a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of URL?(v0, *(_QWORD *)(v1 - 184));
}

uint64_t OUTLINED_FUNCTION_150_4()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_152_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_153_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_155_3()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_158_3()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_159_3(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(a1, v1);
}

void OUTLINED_FUNCTION_160_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_161_3()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_162_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_163_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_166_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 64);
}

uint64_t OUTLINED_FUNCTION_167_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 56);
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_176_0()
{
  SearchResultItem.associatedValue.getter();
}

uint64_t OUTLINED_FUNCTION_177_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_178_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_179_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  outlined init with copy of SearchResult(v2, v1 + *(int *)(v0 + 20), v3);
}

uint64_t OUTLINED_FUNCTION_181_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return outlined init with copy of URL?(a1 + a2, v2);
}

uint64_t *OUTLINED_FUNCTION_182_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of URL?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_187_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

uint64_t OUTLINED_FUNCTION_188_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 168);
}

uint64_t OUTLINED_FUNCTION_189_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 64);
}

uint64_t OUTLINED_FUNCTION_190_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

uint64_t *OUTLINED_FUNCTION_195_0()
{
  uint64_t *v0;

  return __swift_allocate_boxed_opaque_existential_1(v0);
}

unint64_t OUTLINED_FUNCTION_196_2()
{
  return lazy protocol witness table accessor for type Substring and conformance Substring();
}

unint64_t OUTLINED_FUNCTION_199_1()
{
  uint64_t v0;
  uint64_t v1;

  return specialized __RawDictionaryStorage.find<A>(_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_203_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(a1, v2, v1);
}

void *OUTLINED_FUNCTION_204_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x9DuLL);
}

uint64_t OUTLINED_FUNCTION_205_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t *OUTLINED_FUNCTION_206_0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_208_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  *(_QWORD *)(v2 + 88) = result;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(result + 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_209_1()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_212_2(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_214_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_215_1()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_218_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 248);
}

uint64_t OUTLINED_FUNCTION_219_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_224_2()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

unint64_t OUTLINED_FUNCTION_225_1()
{
  uint64_t v0;
  unint64_t v1;

  return specialized Collection.dropFirst(_:)(1uLL, v0, v1);
}

uint64_t OUTLINED_FUNCTION_226_2()
{
  return BidirectionalCollection<>.contains<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_228_2()
{
  uint64_t v0;

  return outlined release of GeoLocation(v0);
}

void OUTLINED_FUNCTION_229_1()
{
  specialized SearchItem.matchesAsset(_:)();
}

void OUTLINED_FUNCTION_230_1()
{
  specialized SearchItem.matchesAsset(_:)();
}

uint64_t OUTLINED_FUNCTION_233_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return String.append<A>(contentsOf:)();
}

unint64_t OUTLINED_FUNCTION_235_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
}

_QWORD *OUTLINED_FUNCTION_236_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 120), v0);
}

uint64_t OUTLINED_FUNCTION_237_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_238()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_239_0()
{
  uint64_t v0;

  return __swift_getEnumTagSinglePayload(*(_QWORD *)(v0 + 144), 1, *(_QWORD *)(v0 + 152));
}

uint64_t OUTLINED_FUNCTION_240@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v2 + a1);
  *(_QWORD *)(v1 + 336) = result;
  *(_QWORD *)(v1 + 344) = *(_QWORD *)(result + 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_241_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_242_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_243_0()
{
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_244_1()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, *(_QWORD *)(v0 + 40));
}

unint64_t OUTLINED_FUNCTION_245_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
}

uint64_t OUTLINED_FUNCTION_246_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_247_1(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 32));
}

uint64_t OUTLINED_FUNCTION_248_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_250_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_255_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_256_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_258_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_261_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_263_1()
{
  uint64_t v0;
  __int128 *v1;

  return outlined init with take of SageSearchClient(v1, v0);
}

uint64_t OUTLINED_FUNCTION_265_1()
{
  return String.lowercased()()._countAndFlagsBits;
}

void OUTLINED_FUNCTION_267_1()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(v0, v1);
}

void OUTLINED_FUNCTION_269_1()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_270_1()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_271_1()
{
  uint64_t v0;

  return __swift_getEnumTagSinglePayload(*(_QWORD *)(v0 + 256), 1, *(_QWORD *)(v0 + 264));
}

void OUTLINED_FUNCTION_272_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of SearchResult(v3, v4, a3);
}

void OUTLINED_FUNCTION_273_1()
{
  void (*v0)(_QWORD);
  uint64_t *v1;

  specialized SearchItem.source.getter(v0, v1);
}

void OUTLINED_FUNCTION_275_1()
{
  uint64_t v0;
  unint64_t v1;

  specialized Collection.first.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_276_0()
{
  uint64_t v0;

  return outlined release of GeoLocation(v0);
}

uint64_t OUTLINED_FUNCTION_278_0()
{
  return type metadata accessor for SearchResultType();
}

_QWORD *OUTLINED_FUNCTION_280_1()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v1 + 80));
}

uint64_t OUTLINED_FUNCTION_282_1()
{
  uint64_t v0;

  return v0;
}

uint64_t MemoryCreationQUDateGroundingHeuristics.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = OUTLINED_FUNCTION_78_10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  Date.init()();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v4 + 88))(a1, a2, a3, a4, v13);
  OUTLINED_FUNCTION_37_7(v13, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  return v14;
}

void MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:currentDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  char v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  OUTLINED_FUNCTION_18_2();
  v0 = type metadata accessor for Locale();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_59_5();
  static Locale.current.getter();
  v1 = Locale.identifier.getter();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_63_15();
  v5(v4);
  if (v1 == 0x53555F6E65 && v3 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_36_0();
    if ((v7 & 1) == 0)
      goto LABEL_15;
  }
  OUTLINED_FUNCTION_62_10();
  MemoryCreationQUDateGroundingHeuristics.groundSeasonsHeuristic(_:currentDate:)();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_36_0();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 <= 0)
  {
    OUTLINED_FUNCTION_36_0();
    MemoryCreationQUDateGroundingHeuristics.groundYearInReviewHeuristic(_:currentDate:)();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_36_0();
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11 <= 0)
    {
      OUTLINED_FUNCTION_36_0();
      v12 = OUTLINED_FUNCTION_62_10();
      MemoryCreationQUDateGroundingHeuristics.groundCOVIDHeuristic(_:currentDate:)(v12, v13, v14);
    }
  }
LABEL_15:
  OUTLINED_FUNCTION_69_11();
  OUTLINED_FUNCTION_43_0();
}

void MemoryCreationQUDateGroundingHeuristics.groundSeasonsHeuristic(_:currentDate:)()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  Swift::String v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unsigned __int8 v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  NSObject *v43;
  BOOL v44;
  BOOL v45;
  BOOL v46;
  BOOL v47;
  unsigned __int8 v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject v62;
  uint64_t object;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_3();
  v58 = v9;
  v61 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>)
                  - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_61_0();
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v59 = v6;
  v11 = OUTLINED_FUNCTION_13();
  v12 = __swift_project_value_buffer(v11, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v13 = OUTLINED_FUNCTION_106_3();
  v57 = v8;
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v62.isa = (Class)swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    v15 = OUTLINED_FUNCTION_63_15();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v12, v13, "Attempting to run groundSeasonsHeuristic on dateString: %s", v14, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_63_15();
  v18 = String.lowercased()();
  v19 = Dictionary.init(dictionaryLiteral:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Substring, season: Substring, Substring?, year: Substring));
  Regex.init(_regexString:version:)();
  swift_bridgeObjectRetain();
  v20 = specialized Dictionary.subscript.getter(v18._countAndFlagsBits, (uint64_t)v18._object, v19);
  OUTLINED_FUNCTION_26_0();
  swift_bridgeObjectRelease();
  if (v20 != 4)
  {
    OUTLINED_FUNCTION_26_0();
    MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)();
    goto LABEL_72;
  }
  v62.isa = (Class)v18._countAndFlagsBits;
  object = (uint64_t)v18._object;
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>();
  v21 = v0;
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v59, 1, v7) == 1)
  {
    outlined destroy of CustomStringConvertible?(v59, &demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>.Match?);
    OUTLINED_FUNCTION_59_12();
    v22 = OUTLINED_FUNCTION_106_3();
    if (OUTLINED_FUNCTION_31(v22))
    {
      v23 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v23 = 0;
      OUTLINED_FUNCTION_19_2(&dword_24315F000, &v62, (os_log_type_t)v0, "Date string not related to season heuristics, unable to ground date", v23);
      specialized UnsafeMutablePointer.deallocate()();
    }

LABEL_10:
    OUTLINED_FUNCTION_37_7(v21, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
LABEL_73:
    OUTLINED_FUNCTION_69_11();
    OUTLINED_FUNCTION_43_0();
    return;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v58, v59, v7);
  OUTLINED_FUNCTION_67_15();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60 = MEMORY[0x2494F5C48](v64, v65, v66, v67);
  v25 = v24;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67_15();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = MEMORY[0x2494F5C48](v68, v69, v70, v71);
  v28 = v27;
  swift_bridgeObjectRelease();
  v29 = HIBYTE(v28) & 0xF;
  v30 = v26 & 0xFFFFFFFFFFFFLL;
  if ((v28 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v28) & 0xF;
  else
    v31 = v26 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    OUTLINED_FUNCTION_36_0();
    v43 = 0;
    goto LABEL_60;
  }
  if ((v28 & 0x1000000000000000) != 0)
  {
    v54 = OUTLINED_FUNCTION_126_0();
    v33 = (uint64_t)specialized _parseInteger<A, B>(ascii:radix:)(v54, v55, 10);
    v2 = v56;
LABEL_57:
    OUTLINED_FUNCTION_36_0();
    if ((v2 & 1) != 0)
      v43 = 0;
    else
      v43 = v33;
LABEL_60:
    v44 = v60 == 1819042150 && v25 == 0xE400000000000000;
    v0 = v21;
    if (v44
      || (OUTLINED_FUNCTION_18_7() & 1) != 0
      || (v60 == 0x6E6D75747561 ? (v45 = v25 == 0xE600000000000000) : (v45 = 0),
          v45
       || (OUTLINED_FUNCTION_9_23() & 1) != 0
       || (v60 == 0x676E69727073 ? (v46 = v25 == 0xE600000000000000) : (v46 = 0),
           v46
        || (OUTLINED_FUNCTION_9_23() & 1) != 0
        || (v60 == 0x72656D6D7573 ? (v47 = v25 == 0xE600000000000000) : (v47 = 0),
            v47
         || (OUTLINED_FUNCTION_9_23() & 1) != 0
         || (v60 == 0x7265746E6977 ? (v50 = v25 == 0xE600000000000000) : (v50 = 0), v50)))))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = OUTLINED_FUNCTION_9_23();
      OUTLINED_FUNCTION_26_0();
      if ((v51 & 1) == 0)
      {
        OUTLINED_FUNCTION_59_12();
        v52 = OUTLINED_FUNCTION_106_3();
        if (OUTLINED_FUNCTION_31(v52))
        {
          v53 = (uint8_t *)OUTLINED_FUNCTION_5_3();
          *(_WORD *)v53 = 0;
          OUTLINED_FUNCTION_19_2(&dword_24315F000, v43, (os_log_type_t)v21, "Date string not related to season heuristics, unable to ground date", v53);
          specialized UnsafeMutablePointer.deallocate()();
        }

        OUTLINED_FUNCTION_33_14();
        goto LABEL_10;
      }
    }
    MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)();
    OUTLINED_FUNCTION_33_14();
LABEL_72:
    OUTLINED_FUNCTION_37_7(v0, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    goto LABEL_73;
  }
  if ((v28 & 0x2000000000000000) == 0)
  {
    if ((v26 & 0x1000000000000000) != 0)
    {
      v32 = (unsigned __int8 *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      OUTLINED_FUNCTION_126_0();
      v32 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    v33 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v32, v30, 10);
    v2 = v34 & 1;
    goto LABEL_57;
  }
  v62.isa = (Class)v26;
  object = v28 & 0xFFFFFFFFFFFFFFLL;
  v35 = v26 >> 8;
  v36 = v26 >> 16;
  if (v26 == 43)
  {
    if (!v29)
      goto LABEL_107;
    if (v29 == 1 || (BYTE1(v26) - 48) > 9u)
      goto LABEL_43;
    v33 = (BYTE1(v26) - 48);
    if (v29 != 2)
    {
      v37 = v36 - 48;
      if (v37 > 9u)
        goto LABEL_43;
      v33 = 10 * v33 + v37;
      if (v29 != 3)
      {
        while (1)
        {
          OUTLINED_FUNCTION_48_10();
          if (!v44 & v38)
            goto LABEL_43;
          OUTLINED_FUNCTION_26_15();
          if (!v44)
            goto LABEL_43;
          v33 = v40 + v39;
          if (__OFADD__(v40, v39))
            goto LABEL_43;
          OUTLINED_FUNCTION_50_15();
          if (v44)
            goto LABEL_57;
        }
      }
    }
LABEL_56:
    v2 = 0;
    goto LABEL_57;
  }
  if (v26 != 45)
  {
    if (!v29 || (v26 - 48) > 9u)
      goto LABEL_43;
    v33 = (v26 - 48);
    if (v29 != 1)
    {
      if ((v35 - 48) > 9u)
        goto LABEL_43;
      v33 = 10 * v33 + (v35 - 48);
      if (v29 != 2)
      {
        while (1)
        {
          OUTLINED_FUNCTION_48_10();
          if (!v44 & v38)
            goto LABEL_43;
          OUTLINED_FUNCTION_26_15();
          if (!v44)
            goto LABEL_43;
          v33 = v42 + v41;
          if (__OFADD__(v42, v41))
            goto LABEL_43;
          OUTLINED_FUNCTION_50_15();
          if (v44)
            goto LABEL_57;
        }
      }
    }
    goto LABEL_56;
  }
  if (v29)
  {
    if (v29 != 1 && (BYTE1(v26) - 48) <= 9u)
    {
      if (v29 == 2)
      {
        v2 = 0;
        v33 = -(uint64_t)(BYTE1(v26) - 48);
        goto LABEL_57;
      }
      if ((BYTE2(v26) - 48) <= 9u)
      {
        v33 = -10 * (BYTE1(v26) - 48) - (BYTE2(v26) - 48);
        if (v29 == 3)
          goto LABEL_56;
        while (1)
        {
          OUTLINED_FUNCTION_48_10();
          if (!v44 & v38)
            break;
          OUTLINED_FUNCTION_26_15();
          if (!v44)
            break;
          v33 = v49 - v48;
          if (__OFSUB__(v49, v48))
            break;
          OUTLINED_FUNCTION_50_15();
          if (v44)
            goto LABEL_57;
        }
      }
    }
LABEL_43:
    v33 = 0;
    v2 = 1;
    goto LABEL_57;
  }
  __break(1u);
LABEL_107:
  __break(1u);
}

void MemoryCreationQUDateGroundingHeuristics.datesForSeason(_:year:currentDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;

  OUTLINED_FUNCTION_18_2();
  v68 = v3;
  v69 = v4;
  v65 = v6;
  v66 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_18_1();
  v55 = v8;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v9);
  v56 = (char *)&v55 - v10;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v11);
  v67 = (char *)&v55 - v12;
  OUTLINED_FUNCTION_17_1();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v22 = OUTLINED_FUNCTION_23_23(v14, v15, v16, v17, v18, v19, v20, v21, v55);
  v59 = *(_QWORD *)(v22 - 8);
  v60 = v22;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0_3();
  v58 = v24;
  v25 = OUTLINED_FUNCTION_65_14();
  v64 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_94_4();
  v27 = type metadata accessor for Date();
  v63 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_18_1();
  v57 = v29;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v55 - v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_61_0();
  v35 = type metadata accessor for DateComponents();
  v61 = *(_QWORD *)(v35 - 8);
  v62 = v35;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_112_3();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v55 - v38;
  OUTLINED_FUNCTION_34_4(v0);
  OUTLINED_FUNCTION_175();
  v40 = OUTLINED_FUNCTION_66_16();
  __swift_storeEnumTagSinglePayload(v40, v41, v42, v43);
  OUTLINED_FUNCTION_3_19();
  LOBYTE(v56) = 1;
  v55 = 0;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_24_17();
  v70 = v39;
  DateComponents.day.setter();
  OUTLINED_FUNCTION_34_4(v0);
  v44 = OUTLINED_FUNCTION_66_16();
  __swift_storeEnumTagSinglePayload(v44, v45, v46, v47);
  OUTLINED_FUNCTION_3_19();
  LOBYTE(v56) = 1;
  v48 = v2;
  v49 = v64;
  v55 = 0;
  v50 = v27;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_24_17();
  v71 = v48;
  DateComponents.day.setter();
  v51 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v32, v68, v27);
  if ((v69 & 1) != 0)
  {
    OUTLINED_FUNCTION_35_12();
    v53 = v58;
    v52 = v59;
    v54 = v60;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v58, *MEMORY[0x24BDCF240], v60);
    Calendar.component(_:from:)();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v54);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v1, v25);
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v50);
  DateComponents.year.setter();
  OUTLINED_FUNCTION_28_16();
  __asm { BR              X10 }
}

void sub_2432E5408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD);
  char v11;
  NSDate v12;
  uint64_t v13;
  Class isa;
  NSDate v15;
  objc_class *v16;
  Class v17;
  Class v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  objc_class *v21;
  Class v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_19_21();
  OUTLINED_FUNCTION_56_10();
  if (!__OFADD__(v2, 1))
  {
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_35_12();
    OUTLINED_FUNCTION_49_16();
    v10 = *(void (**)(uint64_t, _QWORD))(v8 + 8);
    OUTLINED_FUNCTION_30_17();
    OUTLINED_FUNCTION_17_24(v0);
    if (v11)
    {
      outlined destroy of CustomStringConvertible?(v0, &demangling cache variable for type metadata for Date?);
      isa = 0;
    }
    else
    {
      v12.super.isa = OUTLINED_FUNCTION_55_8().super.isa;
      v13 = v0;
      isa = v12.super.isa;
      v5(v13, v1);
    }
    OUTLINED_FUNCTION_35_12();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_30_17();
    OUTLINED_FUNCTION_17_24((uint64_t)v6);
    if (v11)
    {
      outlined destroy of CustomStringConvertible?((uint64_t)v6, &demangling cache variable for type metadata for Date?);
      v15.super.isa = 0;
    }
    else
    {
      v15.super.isa = Date._bridgeToObjectiveC()().super.isa;
      v5((uint64_t)v6, v1);
      if (isa && v15.super.isa)
      {
        v16 = v15.super.isa;
        v6 = v16;
        if ((*(_DWORD *)(v9 - 120) & 1) == 0)
        {
          v17 = isa;
          v18 = v6;
LABEL_30:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v37 = OUTLINED_FUNCTION_20_20();
          *(_OWORD *)(v37 + 16) = xmmword_243351430;
          *(_QWORD *)(v37 + 32) = v17;
          *(_QWORD *)(v37 + 40) = v18;
          *(_QWORD *)(v9 - 96) = v37;
          specialized Array._endMutation()();

          goto LABEL_13;
        }
        *(_QWORD *)(v9 - 144) = v3;
        v21 = v16;
        *(_QWORD *)(v9 - 136) = isa;
        v22 = Date._bridgeToObjectiveC()().super.isa;
        v23 = v1;
        v24 = -[objc_class earlierDate:](v21, sel_earlierDate_, v22);
        *(_QWORD *)(v9 - 120) = v21;

        v25 = *(_QWORD *)(v9 - 224);
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v22) = static Date.== infix(_:_:)();
        v5(v25, v23);
        if ((v22 & 1) == 0)
        {
          v17 = *(Class *)(v9 - 136);
          v18 = *(Class *)(v9 - 120);
          v4 = *(_QWORD *)(v9 - 112);
          goto LABEL_30;
        }
        v26 = DateComponents.year.getter();
        v27 = *(_QWORD *)(v9 - 232);
        if ((v28 & 1) == 0)
        {
          if (__OFSUB__(v26, 1))
          {
            __break(1u);
            goto LABEL_34;
          }
          DateComponents.year.setter();
        }
        v29 = DateComponents.year.getter();
        if ((v30 & 1) != 0)
          goto LABEL_21;
        if (!__OFSUB__(v29, 1))
        {
          OUTLINED_FUNCTION_28_16();
LABEL_21:
          OUTLINED_FUNCTION_35_12();
          OUTLINED_FUNCTION_49_16();
          v10(v7, *(_QWORD *)(v9 - 144));
          OUTLINED_FUNCTION_17_24(v27);
          if (!v11)
          {
            v17 = Date._bridgeToObjectiveC()().super.isa;
            OUTLINED_FUNCTION_68_15();
            OUTLINED_FUNCTION_35_12();
            v27 = *(_QWORD *)(v9 - 240);
            OUTLINED_FUNCTION_49_16();
            OUTLINED_FUNCTION_30_17();
            OUTLINED_FUNCTION_36_16(v27);
            if (!v11)
            {
              v18 = Date._bridgeToObjectiveC()().super.isa;

              OUTLINED_FUNCTION_68_15();
              v4 = *(_QWORD *)(v9 - 112);
              goto LABEL_30;
            }

          }
          outlined destroy of CustomStringConvertible?(v27, &demangling cache variable for type metadata for Date?);
          v5 = *(void (**)(uint64_t, uint64_t))(v9 - 136);
          v6 = *(objc_class **)(v9 - 120);
          if (one-time initialization token for memoryCreationQU == -1)
            goto LABEL_26;
          goto LABEL_32;
        }
LABEL_34:
        __break(1u);
        JUMPOUT(0x2432E57B0);
      }
    }

    v6 = isa;
    goto LABEL_13;
  }
  __break(1u);
LABEL_32:
  swift_once();
LABEL_26:
  v31 = OUTLINED_FUNCTION_13();
  v32 = (void *)OUTLINED_FUNCTION_28(v31, (uint64_t)static Logging.memoryCreationQU);
  v33 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_21(v33))
  {
    v34 = (_WORD *)OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_51(v34);
    OUTLINED_FUNCTION_7(&dword_24315F000, v35, v36, "Unable to create start and end dates");
    specialized UnsafeMutablePointer.deallocate()();
  }

  v4 = *(_QWORD *)(v9 - 112);
LABEL_13:

  v19 = *(_QWORD *)(v9 - 184);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 192) + 8);
  v20(*(_QWORD *)(v9 - 104), v19);
  v20(v4, v19);
  OUTLINED_FUNCTION_69_11();
  OUTLINED_FUNCTION_43_0();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.groundCOVIDHeuristic(_:currentDate:)(uint64_t a1, uint64_t a2, void *a3)
{
  Swift::String v4;
  BOOL v5;
  os_log_type_t countAndFlagsBits;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  uint64_t v29;

  v4 = String.lowercased()();
  v5 = v4._countAndFlagsBits == 0x6320676E69727564 && v4._object == (void *)0xEC0000006469766FLL;
  if (v5 || (countAndFlagsBits = v4._countAndFlagsBits, (OUTLINED_FUNCTION_18_7() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v7, (uint64_t)static Logging.memoryCreationQU);
    v8 = OUTLINED_FUNCTION_66();
    if (OUTLINED_FUNCTION_21(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_51(v9);
      OUTLINED_FUNCTION_7(&dword_24315F000, v10, v11, "COVID grounding heuristic: grounding date to 2020-2023");
      specialized UnsafeMutablePointer.deallocate()();
    }

    MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
    if (!v12)
      return MEMORY[0x24BEE4AF8];
    a3 = v12;
    MemoryCreationQUDateGroundingHeuristics.covidEndDate.getter();
    if (v13)
    {
      v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v15 = OUTLINED_FUNCTION_20_20();
      *(_OWORD *)(v15 + 16) = xmmword_243351430;
      *(_QWORD *)(v15 + 32) = a3;
      *(_QWORD *)(v15 + 40) = v14;
LABEL_30:
      v29 = v15;
      specialized Array._endMutation()();
      return v29;
    }
    goto LABEL_22;
  }
  if (v4._countAndFlagsBits == 0x6F632065636E6973 && v4._object == (void *)0xEB00000000646976)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_126_0();
    countAndFlagsBits = OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_36_0();
    if ((countAndFlagsBits & 1) == 0)
    {
      if (one-time initialization token for memoryCreationQU != -1)
        swift_once();
      v17 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v17, (uint64_t)static Logging.memoryCreationQU);
      v18 = OUTLINED_FUNCTION_66();
      if (OUTLINED_FUNCTION_21(v18))
      {
        v19 = (_WORD *)OUTLINED_FUNCTION_5_3();
        OUTLINED_FUNCTION_51(v19);
        OUTLINED_FUNCTION_7(&dword_24315F000, v20, v21, "Date string not related to COVID heuristics, unable to ground date");
        specialized UnsafeMutablePointer.deallocate()();
      }
LABEL_22:

      return MEMORY[0x24BEE4AF8];
    }
  }
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_28(v22, (uint64_t)static Logging.memoryCreationQU);
  v23 = OUTLINED_FUNCTION_106_3();
  if (OUTLINED_FUNCTION_31(v23))
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v24 = 0;
    OUTLINED_FUNCTION_19_2(&dword_24315F000, v4._object, countAndFlagsBits, "COVID grounding heuristic: grounding date to 2020-present", v24);
    specialized UnsafeMutablePointer.deallocate()();
  }

  MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
  if (v25)
  {
    v26 = v25;
    isa = OUTLINED_FUNCTION_55_8().super.isa;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v15 = OUTLINED_FUNCTION_20_20();
    *(_OWORD *)(v15 + 16) = xmmword_243351430;
    *(_QWORD *)(v15 + 32) = v26;
    *(_QWORD *)(v15 + 40) = isa;
    goto LABEL_30;
  }
  return MEMORY[0x24BEE4AF8];
}

void MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter()
{
  MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  OUTLINED_FUNCTION_18_2();
  v1 = OUTLINED_FUNCTION_65_14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_59_5();
  v9 = type metadata accessor for DateComponents();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v14, v15, v16, v1);
  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
  OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_63_15();
  OUTLINED_FUNCTION_15_10();
  DateComponents.day.setter();
  OUTLINED_FUNCTION_58_11();
  OUTLINED_FUNCTION_57_9();
  static Calendar.current.getter();
  Calendar.date(from:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  v21 = OUTLINED_FUNCTION_78_10();
  OUTLINED_FUNCTION_17_24(v6);
  if (v22)
  {
    outlined destroy of CustomStringConvertible?(v6, &demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_55_8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v6, v21);
  }
  OUTLINED_FUNCTION_69_11();
  OUTLINED_FUNCTION_43_0();
}

void MemoryCreationQUDateGroundingHeuristics.covidEndDate.getter()
{
  MemoryCreationQUDateGroundingHeuristics.covidStartDate.getter();
}

void MemoryCreationQUDateGroundingHeuristics.groundYearInReviewHeuristic(_:currentDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  char *v51;
  _WORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Class v61;
  void (*v62)(uint64_t, uint64_t);
  NSDate v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Class isa;
  uint64_t v75;
  char *v76;
  uint64_t v77;

  OUTLINED_FUNCTION_18_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  v69 = v3;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v66 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_3();
  v72 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_94_4();
  v10 = type metadata accessor for DateComponents();
  v71 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_18_1();
  v73 = v12;
  OUTLINED_FUNCTION_17_1();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v22 = (void *)OUTLINED_FUNCTION_23_23(v14, v15, v16, v17, v18, v19, v20, v21, v66);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_63_1();
  v23 = OUTLINED_FUNCTION_65_14();
  isa = *(Class *)(v23 - 8);
  v75 = v23;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_112_3();
  MEMORY[0x24BDAC7A8](v25);
  v76 = (char *)&v66 - v26;
  OUTLINED_FUNCTION_126_0();
  v27 = String.lowercased()();
  v28 = v27._countAndFlagsBits == 0x206E692072616579 && v27._object == (void *)0xEE00776569766572;
  if (v28)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_36_0();
    if ((v29 & 1) == 0)
    {
      if (one-time initialization token for memoryCreationQU != -1)
        swift_once();
      v30 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v30, (uint64_t)static Logging.memoryCreationQU);
      v31 = OUTLINED_FUNCTION_66();
      if (OUTLINED_FUNCTION_21(v31))
      {
        v32 = (_WORD *)OUTLINED_FUNCTION_5_3();
        OUTLINED_FUNCTION_51(v32);
        OUTLINED_FUNCTION_7(&dword_24315F000, v33, v34, "Date string not related to year in review heuristic, unable to ground date");
        specialized UnsafeMutablePointer.deallocate()();
      }

      goto LABEL_25;
    }
  }
  v68 = v10;
  v35 = static Calendar.current.getter();
  OUTLINED_FUNCTION_60_10(v35, *MEMORY[0x24BDCF250]);
  v36 = OUTLINED_FUNCTION_40_12();
  v37 = OUTLINED_FUNCTION_61_10();
  if (v36 != 1)
  {
    if (one-time initialization token for memoryCreationQU == -1)
    {
LABEL_18:
      v47 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v47, (uint64_t)static Logging.memoryCreationQU);
      v48 = OUTLINED_FUNCTION_66();
      v49 = OUTLINED_FUNCTION_21(v48);
      v50 = v75;
      v51 = v76;
      if (v49)
      {
        v52 = (_WORD *)OUTLINED_FUNCTION_5_3();
        OUTLINED_FUNCTION_51(v52);
        OUTLINED_FUNCTION_7(&dword_24315F000, v53, v54, "Current month is not January, not applying year in review heuristic");
        specialized UnsafeMutablePointer.deallocate()();
      }

      (*((void (**)(char *, uint64_t))isa + 1))(v51, v50);
      goto LABEL_25;
    }
LABEL_31:
    swift_once();
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_60_10(v37, *MEMORY[0x24BDCF240]);
  v38 = OUTLINED_FUNCTION_40_12();
  OUTLINED_FUNCTION_61_10();
  v22 = (void *)(v38 - 1);
  if (__OFSUB__(v38, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  v67 = v38;
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v39, v40, v41, v75);
  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_86_3();
  v66 = v42;
  __swift_storeEnumTagSinglePayload(v43, v44, v45, v42);
  OUTLINED_FUNCTION_2_25();
  LOBYTE(v67) = 1;
  v66 = 0;
  v46 = v70;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_24_17();
  DateComponents.day.setter();
  OUTLINED_FUNCTION_58_11();
  OUTLINED_FUNCTION_57_9();
  static Calendar.current.getter();
  Calendar.date(from:)();
  OUTLINED_FUNCTION_73_1(v1);
  OUTLINED_FUNCTION_78_10();
  OUTLINED_FUNCTION_36_16((uint64_t)v6);
  if (v28)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v6, &demangling cache variable for type metadata for Date?);
    isa = 0;
  }
  else
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_34_15();
  }
  v55 = v68;
  OUTLINED_FUNCTION_34_4(v0);
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v56, v57, v58, v66);
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_24_17();
  DateComponents.day.setter();
  OUTLINED_FUNCTION_58_11();
  OUTLINED_FUNCTION_57_9();
  static Calendar.current.getter();
  v59 = v69;
  Calendar.date(from:)();
  OUTLINED_FUNCTION_73_1(v1);
  OUTLINED_FUNCTION_36_16(v59);
  if (v28)
  {
    outlined destroy of CustomStringConvertible?(v59, &demangling cache variable for type metadata for Date?);
    v63.super.isa = 0;
    v60 = (uint64_t)v76;
    v61 = isa;
  }
  else
  {
    v63.super.isa = Date._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_34_15();
    v61 = isa;
    if (isa)
    {
      v60 = (uint64_t)v76;
      if (v63.super.isa)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        v64 = OUTLINED_FUNCTION_20_20();
        *(_OWORD *)(v64 + 16) = xmmword_243351430;
        *(_QWORD *)(v64 + 32) = v61;
        *(NSDate *)(v64 + 40) = v63;
        v77 = v64;
        specialized Array._endMutation()();
        v65 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
        v65(v73, v55);
        v65(v46, v55);
        OUTLINED_FUNCTION_73_1(v60);
        goto LABEL_25;
      }
    }
    else
    {
      v60 = (uint64_t)v76;
    }
  }

  v62 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v62(v73, v55);
  v62(v46, v55);
  OUTLINED_FUNCTION_73_1(v60);
LABEL_25:
  OUTLINED_FUNCTION_43_0();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MemoryCreationQUDateGroundingHeuristics.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MemoryCreationQUDateGroundingHeuristics.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for MemoryCreationQUDateGroundingHeuristics()
{
  return objc_opt_self();
}

uint64_t method lookup function for MemoryCreationQUDateGroundingHeuristics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:currentDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of MemoryCreationQUDateGroundingHeuristics.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_5();
}

void _StringGuts._slowEnsureMatchingEncoding(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = String.UTF16View.index(_:offsetBy:)();
    OUTLINED_FUNCTION_51_13(v4);
  }
  else
  {
    v3 = MEMORY[0x2494F5D20](15, a1 >> 16);
    OUTLINED_FUNCTION_51_13(v3);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t static String._copying(_:)()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = specialized Collection.subscript.getter();
  v4 = static String._copying(_:)(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t specialized Collection.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t static String._copying(_:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    specialized Collection.count.getter(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v9, 0);
      v12 = v11;
      specialized Sequence._copySequenceContents(initializing:)(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x2494F5C90](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2494F5C90);
LABEL_9:
      _StringObject.sharedUTF8.getter();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2494F5C90]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void specialized Collection.count.getter(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    _StringGuts._slowEnsureMatchingEncoding(_:)(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    _StringGuts._slowEnsureMatchingEncoding(_:)(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    String.UTF8View._foreignDistance(from:to:)();
    return;
  }
  __break(1u);
}

void specialized Sequence._copySequenceContents(initializing:)(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      _StringGuts._slowEnsureMatchingEncoding(_:)(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = String.UTF8View._foreignSubscript(position:)();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = _StringObject.sharedUTF8.getter();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      _StringGuts._slowEnsureMatchingEncoding(_:)(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>;
  if (!lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Regex<(Substring, season: Substring, Substring?, year: Substring)>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Regex<(Substring, season: Substring, Substring?, year: Substring)> and conformance Regex<A>);
  }
  return result;
}

unsigned __int8 *specialized _parseInteger<A, B>(ascii:radix:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = String.init<A>(_:)();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = static String._copying(_:)();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  v11 = specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUDateGroundingHeuristics.Season(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2432E6C34 + 4 * byte_243358945[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2432E6C68 + 4 * asc_243358940[v4]))();
}

uint64_t sub_2432E6C68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432E6C70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432E6C78);
  return result;
}

uint64_t sub_2432E6C84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432E6C8CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2432E6C90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432E6C98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for MemoryCreationQUDateGroundingHeuristics.Season()
{
  return &unk_2513D1D58;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUDateGroundingHeuristics.Season, &unk_2513D1D58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUDateGroundingHeuristics.Season and conformance MemoryCreationQUDateGroundingHeuristics.Season);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_23()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_17_24(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_19_21()
{
  return DateComponents.month.setter();
}

uint64_t OUTLINED_FUNCTION_20_20()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_23_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 144) = (char *)&a9 - v9;
  return type metadata accessor for Calendar.Component();
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_28_16()
{
  return DateComponents.year.setter();
}

uint64_t OUTLINED_FUNCTION_30_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_33_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 264), v0);
}

uint64_t OUTLINED_FUNCTION_34_15()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_35_12()
{
  return static Calendar.current.getter();
}

uint64_t OUTLINED_FUNCTION_36_16(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_40_12()
{
  return Calendar.component(_:from:)();
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return Calendar.date(from:)();
}

unint64_t OUTLINED_FUNCTION_51_13(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

NSDate OUTLINED_FUNCTION_55_8()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_56_10()
{
  return DateComponents.month.setter();
}

uint64_t OUTLINED_FUNCTION_57_9()
{
  return DateComponents.year.setter();
}

uint64_t OUTLINED_FUNCTION_58_11()
{
  return DateComponents.month.setter();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_60_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v4, a2, v2);
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_62_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_63_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_65_14()
{
  return type metadata accessor for Calendar();
}

uint64_t OUTLINED_FUNCTION_66_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_67_15()
{
  return Regex.Match.output.getter();
}

uint64_t OUTLINED_FUNCTION_68_15()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_69_11()
{
  uint64_t v0;

  return v0;
}

void SearchEntityBuilder.__allocating_init(cardBuilder:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  outlined init with take of SageSearchClient(a1, v2 + 16);
  OUTLINED_FUNCTION_5();
}

void SearchEntityBuilder.makeSearchEntity(searchResult:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = type metadata accessor for SearchEntity.Builder();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (_OWORD *)((char *)&v35 - v7);
  v39 = type metadata accessor for SearchResult(0);
  MEMORY[0x24BDAC7A8](v39);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_3_20();
  outlined init with copy of IMSPIMessageProtocol(v1 + 16, (uint64_t)&v44);
  v11 = v47;
  v12 = v48;
  v13 = __swift_project_boxed_opaque_existential_1(&v44, v47);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  outlined init with copy of SearchAnswerEntity.SourceDocument(a1, (uint64_t)v10, type metadata accessor for SearchResult);
  *v8 = 0u;
  v8[1] = 0u;
  OUTLINED_FUNCTION_1_27();
  v15 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_0_31(v15);
  OUTLINED_FUNCTION_1_27();
  v16 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_0_31(v16);
  v17 = OUTLINED_FUNCTION_1_27();
  v18 = type metadata accessor for SearchSpotlightEntity(v17);
  OUTLINED_FUNCTION_0_31(v18);
  v19 = OUTLINED_FUNCTION_1_27();
  v20 = type metadata accessor for SearchAnswerEntity(v19);
  OUTLINED_FUNCTION_0_31(v20);
  v21 = OUTLINED_FUNCTION_1_27();
  v22 = type metadata accessor for SearchAppEntity(v21);
  OUTLINED_FUNCTION_0_31(v22);
  OUTLINED_FUNCTION_1_27();
  type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_2_26((uint64_t)v13);
  OUTLINED_FUNCTION_2_26((uint64_t)v8 + *(int *)(v3 + 48));
  closure #1 in SearchEntity.init(result:card:)((uint64_t)v8, (uint64_t)v10, v14, v23, v24, v25, v26, v27, v35, v36, v37, v38, v39, v14, v41, v42, (uint64_t)v10, v44, v45,
    v46);
  outlined init with copy of SearchAnswerEntity.SourceDocument((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
  SearchEntity.init(builder:)((uint64_t)v6, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
    v46);
}

void sub_2432E7190()
{
  uint64_t *v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  _s10OmniSearch0B6ResultVWOhTm_0(v2, v1);
  v4 = *(_QWORD *)(v3 - 200);
  v5 = *(_QWORD *)(v3 - 192);
  v6 = *(_QWORD *)(v3 - 184);
  v7 = *(_QWORD *)(v3 - 176);
  v9 = *(_QWORD *)(v3 - 168);
  v8 = *(_QWORD *)(v3 - 160);
  v10 = *(_QWORD *)(v3 - 152);
  v11 = *(_QWORD *)(v3 - 144);
  v13 = *(_QWORD *)(v3 - 136);
  v12 = *(_QWORD *)(v3 - 128);
  v14 = *(_QWORD *)(v3 - 120);
  *(_QWORD *)(v3 - 224) = v12;
  *(_QWORD *)(v3 - 216) = v14;
  if (v4)
  {
    *(_QWORD *)(v3 - 200) = v4;
    *(_QWORD *)(v3 - 192) = v5;
    *(_QWORD *)(v3 - 184) = v6;
    *(_QWORD *)(v3 - 176) = v7;
    *(_QWORD *)(v3 - 168) = v9;
    *(_QWORD *)(v3 - 160) = v8;
    *(_QWORD *)(v3 - 152) = v10;
    *(_QWORD *)(v3 - 144) = v11;
    *(_QWORD *)(v3 - 136) = v13;
    *(_QWORD *)(v3 - 128) = v12;
    *(_QWORD *)(v3 - 120) = v14;
    *(_QWORD *)(v3 - 256) = v13;
    *(_QWORD *)(v3 - 264) = *(_QWORD *)(*(_QWORD *)(v3 - 208) + *(int *)(*(_QWORD *)(v3 - 240) + 24));
    *(_QWORD *)(v3 - 240) = v11;
    outlined copy of SearchEntity?(v4);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v3 - 248) = v0;
    v11 = *(_QWORD *)(v3 - 240);
    SearchEntity.associatedQuery.setter();
    v0 = *(uint64_t **)(v3 - 248);

    v13 = *(_QWORD *)(v3 - 256);
    outlined consume of SearchEntity?(v4);
  }
  else
  {

  }
  _s10OmniSearch0B6ResultVWOhTm_0(*(_QWORD *)(v3 - 208), type metadata accessor for SearchResult);
  *v0 = v4;
  v0[1] = v5;
  v0[2] = v6;
  v0[3] = v7;
  v0[4] = v9;
  v0[5] = v8;
  v0[6] = v10;
  v0[7] = v11;
  v15 = *(_QWORD *)(v3 - 224);
  v0[8] = v13;
  v0[9] = v15;
  v0[10] = *(_QWORD *)(v3 - 216);
}

void SearchEntityBuilder.cardBuilder.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_3_20();
  outlined init with copy of IMSPIMessageProtocol(v1 + 16, a1);
  OUTLINED_FUNCTION_56_1();
}

void SearchEntityBuilder.cardBuilder.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  OUTLINED_FUNCTION_2_4();
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of SageSearchClient(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_56_1();
}

uint64_t (*SearchEntityBuilder.cardBuilder.modify())()
{
  OUTLINED_FUNCTION_2_4();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t SearchEntityBuilder.init(cardBuilder:)(__int128 *a1)
{
  uint64_t v1;

  outlined init with take of SageSearchClient(a1, v1 + 16);
  return v1;
}

uint64_t SearchEntityBuilder.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SearchEntityBuilder.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t outlined copy of SearchEntity?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for SearchEntityBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchEntityBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchEntityBuilder.__allocating_init(cardBuilder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t OUTLINED_FUNCTION_0_31(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_1_27()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_2_26(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return swift_beginAccess();
}

void MemoryCreationQUResult.init(parse:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = a1;
  v58 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v53 = (uint64_t)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)v48 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_3();
  v48[2] = v8;
  v9 = type metadata accessor for IntentFile();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0_3();
  v49 = v10;
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v12 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0_3();
  v55 = v13;
  OUTLINED_FUNCTION_28_17();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_31();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_2();
  v20 = v19 - v18;
  v21 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = OUTLINED_FUNCTION_1_28();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_138();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  v27 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_3_21(v27, v28, v29, v27);
  DisplayRepresentation.init(title:subtitle:image:)();
  v57 = *(int *)(v25 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int>);
  OUTLINED_FUNCTION_6_28();
  OUTLINED_FUNCTION_14_16();
  v30 = *MEMORY[0x24BDCD328];
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104);
  v32 = v55;
  v31(v55, v30, v11);
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_19_22();
  v33 = MEMORY[0x2494F42EC](v24);
  *(_QWORD *)(v2 + v57) = v33;
  v57 = v25;
  v34 = *(int *)(v25 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_138();
  v48[1] = v35;
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_14_16();
  v31(v32, v30, v54);
  OUTLINED_FUNCTION_10_25();
  OUTLINED_FUNCTION_19_22();
  v36 = v2;
  *(_QWORD *)(v2 + v34) = MEMORY[0x2494F42B0](v24);
  OUTLINED_FUNCTION_9_24();
  v37 = dispatch thunk of MemoryCreationQUParse.encode()();
  v39 = v38;
  v40 = type metadata accessor for UTType();
  OUTLINED_FUNCTION_3_21(v40, v41, v42, v40);
  outlined copy of Data._Representation(v37, v39);
  v43 = v49;
  IntentFile.init(data:filename:type:)();
  v45 = v50;
  v44 = v51;
  v46 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v43, v51);
  __swift_storeEnumTagSinglePayload(v46, 0, 1, v44);
  outlined init with copy of IntentFile?(v46, v53);
  EntityProperty.wrappedValue.setter();
  outlined destroy of IntentFile?(v46);
  swift_release();
  outlined consume of Data._Representation(v37, v39);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
  v47 = v58;
  outlined init with take of MemoryCreationQUResult(v36, v58);
  __swift_storeEnumTagSinglePayload(v47, 0, 1, v57);
  OUTLINED_FUNCTION_43_0();
}

void MemoryCreationQUResult.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  v28 = v4;
  OUTLINED_FUNCTION_28_17();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_31();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_2();
  v15 = v14 - v13;
  OUTLINED_FUNCTION_138();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  v16 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_3_21(v16, v17, v18, v16);
  DisplayRepresentation.init(title:subtitle:image:)();
  v19 = OUTLINED_FUNCTION_1_28();
  v27 = *(int *)(v19 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int>);
  OUTLINED_FUNCTION_6_28();
  OUTLINED_FUNCTION_14_16();
  v20 = *MEMORY[0x24BDCD328];
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v22 = v28;
  v21(v28, v20, v2);
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_19_22();
  v23 = MEMORY[0x2494F42EC](v15);
  *(_QWORD *)(a1 + v27) = v23;
  v24 = *(int *)(v19 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_138();
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_14_16();
  v21(v22, v20, v26);
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v24) = MEMORY[0x2494F42B0](v15);
  OUTLINED_FUNCTION_9_24();
  OUTLINED_FUNCTION_43_0();
}

uint64_t MemoryCreationQUResult.version.setter()
{
  OUTLINED_FUNCTION_1_28();
  return EntityProperty.wrappedValue.setter();
}

void static MemoryCreationQUResult.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MemoryCreationQUResult.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static MemoryCreationQUResult.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MemoryCreationQUResult.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static MemoryCreationQUResult.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static MemoryCreationQUResult.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t MemoryCreationQUResult.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_25();
  return OUTLINED_FUNCTION_57_6(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t MemoryCreationQUResult.displayRepresentation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_25();
  return OUTLINED_FUNCTION_57_6(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*MemoryCreationQUResult.displayRepresentation.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUResult.version.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_28();
  EntityProperty.wrappedValue.getter();
  return v1;
}

void MemoryCreationQUResult.version.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_28();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void MemoryCreationQUResult.$version.getter()
{
  OUTLINED_FUNCTION_1_28();
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void MemoryCreationQUResult.encodedMemoryCreationQUParse.getter()
{
  OUTLINED_FUNCTION_1_28();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void key path setter for MemoryCreationQUResult.encodedMemoryCreationQUParse : MemoryCreationQUResult(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of IntentFile?(a1, (uint64_t)v4);
  MemoryCreationQUResult.encodedMemoryCreationQUParse.setter((uint64_t)v4);
}

void MemoryCreationQUResult.encodedMemoryCreationQUParse.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_1_28();
  outlined init with copy of IntentFile?(a1, v1);
  EntityProperty.wrappedValue.setter();
  outlined destroy of IntentFile?(a1);
  OUTLINED_FUNCTION_12();
}

uint64_t type metadata accessor for MemoryCreationQUResult()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MemoryCreationQUResult;
  if (!type metadata singleton initialization cache for MemoryCreationQUResult)
    return swift_getSingletonMetadata();
  return result;
}

void MemoryCreationQUResult.encodedMemoryCreationQUParse.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_28();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void MemoryCreationQUResult.$encodedMemoryCreationQUParse.getter()
{
  OUTLINED_FUNCTION_1_28();
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
  return static TransientAppEntity.defaultQuery.getter();
}

uint64_t protocol witness for Identifiable.id.getter in conformance MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

void base witness table accessor for AppEntity in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for AppValue in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for DisplayRepresentable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for Identifiable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<MemoryCreationQUResult> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<MemoryCreationQUResult>);
}

void base witness table accessor for PersistentlyIdentifiable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for TypeDisplayRepresentable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for _IntentValue in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void base witness table accessor for InstanceDisplayRepresentable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void associated type witness table accessor for Identifiable.ID : Hashable in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<MemoryCreationQUResult> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<MemoryCreationQUResult>);
}

void base witness table accessor for CustomLocalizedStringResourceConvertible in MemoryCreationQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult, (void (*)(uint64_t))type metadata accessor for MemoryCreationQUResult);
}

void sub_2432E855C(uint64_t *a1@<X8>)
{
  *a1 = MemoryCreationQUResult.version.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432E8580()
{
  MemoryCreationQUResult.version.setter();
  OUTLINED_FUNCTION_5();
}

void sub_2432E85A0()
{
  MemoryCreationQUResult.encodedMemoryCreationQUParse.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t *initializeBufferWithCopyOfBuffer for MemoryCreationQUResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for DisplayRepresentation();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for MemoryCreationQUResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MemoryCreationQUResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MemoryCreationQUResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for MemoryCreationQUResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MemoryCreationQUResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MemoryCreationQUResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432E8888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_17_25();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432E8908(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_17_25();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
}

uint64_t type metadata completion function for MemoryCreationQUResult()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DisplayRepresentation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_28()
{
  return type metadata accessor for MemoryCreationQUResult();
}

uint64_t OUTLINED_FUNCTION_3_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_4_31()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t OUTLINED_FUNCTION_6_28()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 2;
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_10_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  return static Locale.current.getter();
}

uint64_t OUTLINED_FUNCTION_17_25()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t OUTLINED_FUNCTION_19_22()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OUTLINED_FUNCTION_26_16()
{
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_28_17()
{
  return type metadata accessor for Locale();
}

uint64_t KGDocument.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = 0;
  *((_QWORD *)&v14 + 1) = 0xE000000000000000;
  MEMORY[0x2494F5C60](70);
  v17 = v14;
  OUTLINED_FUNCTION_19_23(0x656D75636F44474BLL, 29806);
  v4 = (int *)type metadata accessor for KGDocument();
  v5 = MEMORY[0x24BEE0D00];
  v6 = MEMORY[0x24BEE0D70];
  OUTLINED_FUNCTION_10_26(*(_QWORD *)(v0 + v4[7] + 8));
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_3_22((uint64_t)&v14);
  OUTLINED_FUNCTION_0_32();
  OUTLINED_FUNCTION_10_26(*(_QWORD *)(v0 + v4[8] + 8));
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_3_22((uint64_t)&v14);
  OUTLINED_FUNCTION_0_32();
  OUTLINED_FUNCTION_10_26(*(_QWORD *)(v0 + v4[6] + 8));
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_3_22((uint64_t)&v14);
  OUTLINED_FUNCTION_0_32();
  outlined init with copy of URL?(v0 + v4[9], (uint64_t)v3);
  v7 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v7) == 1)
  {
    outlined destroy of URL?((uint64_t)v3, &demangling cache variable for type metadata for URL?);
    v14 = 0u;
    v15 = 0u;
    v16 = 0;
  }
  else
  {
    v8 = URL.path.getter();
    *((_QWORD *)&v15 + 1) = v5;
    v16 = v6;
    *(_QWORD *)&v14 = v8;
    *((_QWORD *)&v14 + 1) = v9;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v14);
  outlined destroy of URL?((uint64_t)&v14, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  v10 = (uint64_t *)(v0 + v4[10]);
  v11 = v10[1];
  if (v11)
  {
    v12 = *v10;
    *((_QWORD *)&v15 + 1) = v5;
    v16 = v6;
    *(_QWORD *)&v14 = v12;
    *((_QWORD *)&v14 + 1) = v11;
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_20();
  outlined destroy of URL?((uint64_t)&v14, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

uint64_t WebImage.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::String v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v25 = 0;
  *((_QWORD *)&v25 + 1) = 0xE000000000000000;
  MEMORY[0x2494F5C60](67);
  v28 = v25;
  v4._countAndFlagsBits = 0x67616D6920626557;
  v4._object = (void *)0xEB00000000203A65;
  String.append(_:)(v4);
  v5 = (int *)type metadata accessor for WebImage();
  v6 = OUTLINED_FUNCTION_18_16(v5[6]);
  v8 = MEMORY[0x24BEE0D00];
  v9 = MEMORY[0x24BEE0D70];
  if (v6)
    OUTLINED_FUNCTION_7_29(v6, v7);
  else
    OUTLINED_FUNCTION_8_22();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_9_25(v10, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_9_1();
  v11 = OUTLINED_FUNCTION_18_16(v5[7]);
  if (v11)
    OUTLINED_FUNCTION_7_29(v11, v12);
  else
    OUTLINED_FUNCTION_8_22();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_9_25(v13, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  v14 = OUTLINED_FUNCTION_18_16(v5[8]);
  if (v14)
    OUTLINED_FUNCTION_7_29(v14, v15);
  else
    OUTLINED_FUNCTION_8_22();
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(0x3A74786554746C61, (void *)0xE800000000000000, (uint64_t)&v25);
  OUTLINED_FUNCTION_9_25(v16, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_9_1();
  v17 = OUTLINED_FUNCTION_18_16(v5[9]);
  if (v17)
    OUTLINED_FUNCTION_7_29(v17, v18);
  else
    OUTLINED_FUNCTION_8_22();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_9_25(v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  outlined init with copy of URL?(v0 + v5[5], (uint64_t)v3);
  v20 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v20) == 1)
  {
    outlined destroy of URL?((uint64_t)v3, &demangling cache variable for type metadata for URL?);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
  }
  else
  {
    v21 = URL.path.getter();
    *((_QWORD *)&v26 + 1) = v8;
    v27 = v9;
    *(_QWORD *)&v25 = v21;
    *((_QWORD *)&v25 + 1) = v22;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v3, v20);
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v25);
  OUTLINED_FUNCTION_9_25(v23, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

uint64_t GeoLocation.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  double v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  Swift::String v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  __int128 v307;
  __int128 v308;
  int v309;
  unsigned int v310;
  void *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  char v320;
  __int16 v321;
  char v322;
  int v323;
  char v324;
  uint64_t v325;
  unint64_t v326;
  __int16 v327;
  char v328;
  __int128 v329;
  __int128 v330;
  Swift::OpaquePointer_optional v331;

  v1 = *(_QWORD *)(v0 + 8);
  v194 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 56);
  v329 = *(_OWORD *)(v0 + 40);
  v330 = v5;
  v6 = *(_DWORD *)(v0 + 72);
  v7 = *(_DWORD *)(v0 + 76);
  v9 = *(void **)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v250 = *(_QWORD *)(v0 + 112);
  v269 = *(_QWORD *)(v0 + 104);
  v297 = *(_QWORD *)(v0 + 128);
  v298 = *(_QWORD *)(v0 + 136);
  v299 = *(_QWORD *)(v0 + 120);
  v296 = *(_DWORD *)(v0 + 144);
  v11 = *(_BYTE *)(v0 + 148);
  v328 = *(_BYTE *)(v0 + 151);
  v327 = *(_WORD *)(v0 + 149);
  HIDWORD(v231) = *(_DWORD *)(v0 + 152);
  v300 = *(_BYTE *)(v0 + 156);
  v301 = v11;
  MEMORY[0x2494F5C60](293);
  v325 = 0;
  v326 = 0xE000000000000000;
  v12._countAndFlagsBits = 0xD000000000000016;
  v12._object = (void *)0x800000024335F1B0;
  String.append(_:)(v12);
  v13 = MEMORY[0x24BEE0D00];
  v14 = MEMORY[0x24BEE0D70];
  v15 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_32(v15, v16, v17, v18, v19, v20, v21, v22, v1, v194, v213, v231, v250, v269);
  OUTLINED_FUNCTION_1_29(v23, v24, v25, v26, v27, v28, v29, v30, v176, v195, v214, v232, v251, v270);
  v31._countAndFlagsBits = 0x6461202020200A2CLL;
  v31._object = (void *)0xEF203A7373657264;
  String.append(_:)(v31);
  v303 = v4;
  v288 = v4;
  v32 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_32(v32, v33, v34, v35, v36, v37, v38, v39, v177, v196, v215, v233, v252, v271);
  OUTLINED_FUNCTION_1_29(v40, v41, v42, v43, v44, v45, v46, v47, v178, v197, v216, v234, v253, v272);
  OUTLINED_FUNCTION_5_32((uint64_t)",\n    latitude: ");
  v48 = MEMORY[0x24BEE14E8];
  v49 = MEMORY[0x24BEE1558];
  OUTLINED_FUNCTION_4_32(v50, v51, v52, v53, v54, v55, v56, v57, v179, v198, v217, v235, v254, v273);
  OUTLINED_FUNCTION_1_29(v58, v59, v60, v61, v62, v63, v64, v65, v180, v199, v218, v236, v255, v274);
  OUTLINED_FUNCTION_13_26((uint64_t)",\n    longitude: ");
  v305 = v48;
  v306 = v49;
  v302 = __PAIR64__(HIDWORD(v3), v7);
  OUTLINED_FUNCTION_4_32(v66, v67, v68, v69, v70, v71, v72, v73, v181, v200, v219, v237, v256, v275);
  OUTLINED_FUNCTION_1_29(v74, v75, v76, v77, v78, v79, v80, v81, v182, v201, v220, v238, v257, v276);
  OUTLINED_FUNCTION_13_26((uint64_t)",\n    telephone: ");
  v331.value._rawValue = v9;
  LLMFormatter.StringInterpolation.appendInterpolation(names:)(v331);
  v82._countAndFlagsBits = 0x6577202020200A2CLL;
  v82._object = (void *)0xEF203A6574697362;
  String.append(_:)(v82);
  if (v10)
  {
    v305 = v13;
    v306 = v14;
    v302 = v8;
    v303 = v10;
  }
  else
  {
    OUTLINED_FUNCTION_6_29();
  }
  v83 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_32(v83, v84, v85, v86, v87, v88, v89, v90, v183, v202, v8, v239, v258, v277);
  OUTLINED_FUNCTION_12_23(v91, &demangling cache variable for type metadata for CustomStringConvertible?, v92, v93, v94, v95, v96, v97, v184, v203, v221, v240, v259, v278, v288, v2);
  OUTLINED_FUNCTION_5_32((uint64_t)",\n    category: ");
  v98 = v260;
  v99 = HIDWORD(v241);
  if (v299)
  {
    v305 = v13;
    v306 = v14;
    v302 = v260;
    v303 = v299;
  }
  else
  {
    OUTLINED_FUNCTION_6_29();
  }
  v100 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_32(v100, v101, v102, v103, v104, v105, v106, v107, v185, v204, v222, v241, v260, v279);
  OUTLINED_FUNCTION_12_23(v108, &demangling cache variable for type metadata for CustomStringConvertible?, v109, v110, v111, v112, v113, v114, v186, v205, v223, v242, v261, v280, v289, v292);
  OUTLINED_FUNCTION_36_3(0xD000000000000013, (uint64_t)",\n    subcategory: ");
  if (v298)
  {
    v305 = v13;
    v306 = v14;
    v302 = v297;
    v303 = v298;
  }
  else
  {
    OUTLINED_FUNCTION_6_29();
  }
  v115 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_32(v115, v116, v117, v118, v119, v120, v121, v122, v187, v206, v224, v243, v262, v281);
  OUTLINED_FUNCTION_12_23(v123, &demangling cache variable for type metadata for CustomStringConvertible?, v124, v125, v126, v127, v128, v129, v188, v207, v225, v244, v263, v282, v290, v293);
  OUTLINED_FUNCTION_5_32((uint64_t)",\n    openTime: ");
  v139 = MEMORY[0x24BEE44F0];
  v140 = MEMORY[0x24BEE4548];
  if ((v301 & 1) != 0)
  {
    v138 = OUTLINED_FUNCTION_6_29();
  }
  else
  {
    v305 = MEMORY[0x24BEE44F0];
    v306 = MEMORY[0x24BEE4548];
    LODWORD(v302) = v296;
  }
  OUTLINED_FUNCTION_4_32(v130, v131, v132, v133, v134, v135, v136, v137, v189, v208, v226, v245, v264, v283, v138);
  OUTLINED_FUNCTION_12_23(v141, &demangling cache variable for type metadata for CustomStringConvertible?, v142, v143, v144, v145, v146, v147, v190, v209, v227, v246, v265, v284, v291, v294);
  OUTLINED_FUNCTION_36_3(0xD000000000000011, (uint64_t)",\n    closeTime: ");
  if ((v300 & 1) != 0)
  {
    v156 = OUTLINED_FUNCTION_6_29();
  }
  else
  {
    v305 = v139;
    v306 = v140;
    LODWORD(v302) = v99;
  }
  OUTLINED_FUNCTION_4_32(v148, v149, v150, v151, v152, v153, v154, v155, v191, v210, v228, v247, v266, v285, v156);
  OUTLINED_FUNCTION_1_29(v157, v158, v159, v160, v161, v162, v163, v164, v192, v211, v229, v248, v267, v286);
  v165._countAndFlagsBits = 0x617473202020200ALL;
  v165._object = (void *)0xED0000203A737574;
  String.append(_:)(v165);
  v307 = v329;
  v304 = v295;
  v308 = v330;
  v309 = v6;
  v310 = v7;
  v311 = v9;
  v312 = v230;
  v313 = v10;
  v314 = v287;
  v315 = v98;
  v316 = v299;
  v317 = v297;
  v318 = v298;
  v319 = v296;
  v320 = v301;
  v322 = v328;
  v321 = v327;
  v323 = v99;
  v324 = v300;
  v305 = v13;
  v306 = v14;
  v302 = GeoLocation.openNow.getter();
  v303 = v166;
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&v302);
  OUTLINED_FUNCTION_1_29(v167, v168, v169, v170, v171, v172, v173, v174, v193, v212, v230, v249, v268, v287);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

uint64_t WebAnswer.llmConsumableDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;

  *(_QWORD *)&v24 = 0;
  *((_QWORD *)&v24 + 1) = 0xE000000000000000;
  MEMORY[0x2494F5C60](34);
  v27 = v24;
  OUTLINED_FUNCTION_19_23(0x77736E6120626557, 29285);
  v2 = v0[2];
  v1 = v0[3];
  v3 = MEMORY[0x24BEE0D00];
  v4 = MEMORY[0x24BEE0D70];
  *((_QWORD *)&v25 + 1) = MEMORY[0x24BEE0D00];
  v26 = MEMORY[0x24BEE0D70];
  *(_QWORD *)&v24 = v2;
  *((_QWORD *)&v24 + 1) = v1;
  v5 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_15_24(v5, v6, v7, v8, v9, v10, v11, v12, v24);
  outlined destroy of URL?((uint64_t)&v24, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  v13 = v0[5];
  if (v13)
  {
    v14 = v0[4];
    *((_QWORD *)&v25 + 1) = v3;
    v26 = v4;
    *(_QWORD *)&v24 = v14;
    *((_QWORD *)&v24 + 1) = v13;
  }
  else
  {
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
  }
  v15 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_15_24(v15, v16, v17, v18, v19, v20, v21, v22, v24);
  outlined destroy of URL?((uint64_t)&v24, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

void OUTLINED_FUNCTION_0_32()
{
  Swift::String v0;

  v0._countAndFlagsBits = 8238;
  v0._object = (void *)0xE200000000000000;
  String.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_1_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t *v14;
  va_list va;

  va_start(va, a14);
  return outlined destroy of URL?((uint64_t)va, v14);
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_22(uint64_t a1)
{
  uint64_t *v1;

  return outlined destroy of URL?(a1, v1);
}

void OUTLINED_FUNCTION_4_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)va);
}

void OUTLINED_FUNCTION_5_32(uint64_t a1@<X8>)
{
  Swift::String v1;

  v1._object = (void *)((a1 - 32) | 0x8000000000000000);
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
}

double OUTLINED_FUNCTION_6_29()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_7_29@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *a2;
  *(_QWORD *)(v4 - 88) = v2;
  *(_QWORD *)(v4 - 80) = v3;
  *(_QWORD *)(v4 - 112) = v5;
  *(_QWORD *)(v4 - 104) = result;
  return result;
}

double OUTLINED_FUNCTION_8_22()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 80) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_25(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return outlined destroy of URL?(v2 - 112, a2);
}

uint64_t OUTLINED_FUNCTION_10_26(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_11_20()
{
  uint64_t v0;

  LLMFormatter.StringInterpolation.appendInterpolation(_:)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_12_23(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  return outlined destroy of URL?((uint64_t)va, a2);
}

void OUTLINED_FUNCTION_13_26(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v2;

  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  v2._countAndFlagsBits = v1;
  String.append(_:)(v2);
}

uint64_t OUTLINED_FUNCTION_14_17()
{
  return static LLMFormatter.sanitize(_:)();
}

void OUTLINED_FUNCTION_15_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&a9);
}

void OUTLINED_FUNCTION_17_26()
{
  uint64_t v0;

  LLMFormatter.StringInterpolation.appendInterpolation(_:)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_18_16@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8);
}

void OUTLINED_FUNCTION_19_23(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFF0000FFFFLL | 0xEC000000203A0000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t FlightDesignator.code.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  uint64_t v5;

  v1 = *v0;
  v2 = (void *)v0[1];
  v5 = v0[2];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  return v5;
}

uint64_t DataDetectorsController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DataDetectorsController.init()();
  return v0;
}

uint64_t DataDetectorResults.phoneNumbers.getter()
{
  return swift_bridgeObjectRetain();
}

void DataDetectorResults.phoneNumbers.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*DataDetectorResults.phoneNumbers.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t DataDetectorResults.addresses.getter()
{
  return swift_bridgeObjectRetain();
}

void DataDetectorResults.addresses.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*DataDetectorResults.addresses.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t DataDetectorResults.links.getter()
{
  return swift_bridgeObjectRetain();
}

void DataDetectorResults.links.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*DataDetectorResults.links.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t DataDetectorResults.properNames.getter()
{
  return swift_bridgeObjectRetain();
}

void DataDetectorResults.properNames.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*DataDetectorResults.properNames.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t DataDetectorResults.flightDesignators.getter()
{
  return swift_bridgeObjectRetain();
}

void DataDetectorResults.flightDesignators.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*DataDetectorResults.flightDesignators.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void DataDetectorResults.description.getter()
{
  _StringGuts.grow(_:)(83);
  OUTLINED_FUNCTION_55_9(0x756E20656E6F6850, 0x7265626Du);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_53_17();
}

void sub_2432E9740(Swift::String a1)
{
  Swift::String v1;

  OUTLINED_FUNCTION_26_17(a1);
  OUTLINED_FUNCTION_47();
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0x736572646461202CLL;
  v1._object = (void *)0xED0000203A736573;
  String.append(_:)(v1);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_53_17();
}

void sub_2432E9788(Swift::String a1)
{
  OUTLINED_FUNCTION_26_17(a1);
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_55_9(0x7265706F7270202CLL, 0x656D614Eu);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_53_17();
}

uint64_t sub_2432E97C0(Swift::String a1)
{
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;

  OUTLINED_FUNCTION_26_17(a1);
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_56_0();
  v1._countAndFlagsBits = 0x3A736B6E696C202CLL;
  v1._object = (void *)0xE900000000000020;
  String.append(_:)(v1);
  v2 = type metadata accessor for URL();
  v3 = swift_bridgeObjectRetain();
  v8._countAndFlagsBits = MEMORY[0x2494F5E4C](v3, v2);
  OUTLINED_FUNCTION_26_17(v8);
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_80_0();
  v4._object = (void *)0x800000024335F2B0;
  v4._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v4);
  v5 = swift_bridgeObjectRetain();
  v9._countAndFlagsBits = MEMORY[0x2494F5E4C](v5, &type metadata for FlightDesignator);
  OUTLINED_FUNCTION_26_17(v9);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_121();
  return v7;
}

uint64_t DataDetectorResults.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x6D754E656E6F6870 && a2 == 0xEC00000073726562;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6573736572646461 && a2 == 0xE900000000000073;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736B6E696CLL && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x614E7265706F7270 && a2 == 0xEB0000000073656DLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x800000024335F310)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t DataDetectorResults.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2432E9B00 + 4 * byte_243358CA0[a1]))(0x6D754E656E6F6870, 0xEC00000073726562);
}

uint64_t sub_2432E9B00()
{
  return 0x6573736572646461;
}

uint64_t sub_2432E9B1C()
{
  return 0x736B6E696CLL;
}

uint64_t sub_2432E9B30()
{
  return 0x614E7265706F7270;
}

unint64_t sub_2432E9B50()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DataDetectorResults.CodingKeys()
{
  unsigned __int8 *v0;

  return DataDetectorResults.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DataDetectorResults.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = DataDetectorResults.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DataDetectorResults.CodingKeys()
{
  lazy protocol witness table accessor for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DataDetectorResults.CodingKeys()
{
  lazy protocol witness table accessor for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void DataDetectorResults.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_65_7();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DataDetectorResults.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  _sSaySSGSayxGSEsSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  OUTLINED_FUNCTION_4_33();
  if (!v0)
  {
    OUTLINED_FUNCTION_4_33();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [URL]);
    lazy protocol witness table accessor for type [URL] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [URL] and conformance <A> [A]);
    OUTLINED_FUNCTION_63_8();
    OUTLINED_FUNCTION_4_33();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [FlightDesignator]);
    lazy protocol witness table accessor for type [FlightDesignator] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [FlightDesignator] and conformance <A> [A]);
    OUTLINED_FUNCTION_63_8();
  }
  OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_1_1();
}

void DataDetectorResults.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v1;
  a1[2] = v1;
  a1[3] = v1;
  a1[4] = v1;
}

void DataDetectorResults.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_65_7();
  v12 = v11;
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DataDetectorResults.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_2();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  lazy protocol witness table accessor for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    _sSaySSGSayxGSEsSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_6_30();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_30();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [URL]);
    v16 = lazy protocol witness table accessor for type [URL] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [URL] and conformance <A> [A]);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_30();
    if (v16)
    {
      OUTLINED_FUNCTION_1_30();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_96_0();
    }
    else
    {
      OUTLINED_FUNCTION_76_0();
      OUTLINED_FUNCTION_6_30();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [FlightDesignator]);
      lazy protocol witness table accessor for type [FlightDesignator] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [FlightDesignator] and conformance <A> [A]);
      v18 = v17;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_6_30();
      OUTLINED_FUNCTION_1_30();
      if (!v18)
      {
        OUTLINED_FUNCTION_4_7();
        swift_bridgeObjectRelease();
        *v14 = a10;
        v14[1] = a10;
        v14[2] = a10;
        v14[3] = a10;
        v14[4] = a10;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        goto LABEL_4;
      }
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_96_0();
      OUTLINED_FUNCTION_47();
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_2_17();
LABEL_4:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_1_1();
}

uint64_t default argument 0 of DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 1 of DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 2 of DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 3 of DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 4 of DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t DataDetectorResults.init(phoneNumbers:addresses:links:properNames:flightDesignators:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void protocol witness for Decodable.init(from:) in conformance DataDetectorResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  DataDetectorResults.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance DataDetectorResults()
{
  DataDetectorResults.encode(to:)();
}

id DataDetectorsController.scannerConfig.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t DataDetectorsController.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2B378]), sel_initWithScannerType_passiveIntent_, 0, 1);
  return v0;
}

unint64_t lazy protocol witness table accessor for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys;
  if (!lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DataDetectorResults.CodingKeys, &unk_2513D2118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys;
  if (!lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DataDetectorResults.CodingKeys, &unk_2513D2118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys;
  if (!lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DataDetectorResults.CodingKeys, &unk_2513D2118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys;
  if (!lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DataDetectorResults.CodingKeys, &unk_2513D2118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DataDetectorResults.CodingKeys and conformance DataDetectorResults.CodingKeys);
  }
  return result;
}

void lazy protocol witness table accessor for type [FlightDesignator] and conformance <A> [A](uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [FlightDesignator]);
    v7 = v5();
    atomic_store(MEMORY[0x2494F6CA4](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_59_0();
}

unint64_t lazy protocol witness table accessor for type FlightDesignator and conformance FlightDesignator()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator;
  if (!lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator, &type metadata for FlightDesignator);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator;
  if (!lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator, &type metadata for FlightDesignator);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator;
  if (!lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator, &type metadata for FlightDesignator);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator and conformance FlightDesignator);
  }
  return result;
}

void DataDetectorsController.scan(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  unint64_t v23;
  __int128 v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  id v70;
  NSObject *v71;
  NSObject *v72;
  uint64_t v73;
  os_log_type_t v74;
  _DWORD *v75;
  Swift::String v76;
  uint8_t *v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  size_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _DWORD *v102;
  void *v103;
  id v104;
  NSObject *v105;
  _QWORD *v106;
  char *v107;
  void (*v108)(NSObject *, char *, uint64_t);
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  __int128 v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  Swift::Int v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  NSObject *v126;
  id v127[3];

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v4 = v3;
  v106 = v5;
  v127[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v115 = v8 - v7;
  v113 = (char *)type metadata accessor for URL();
  v9 = *((_QWORD *)v113 - 1);
  v10 = MEMORY[0x24BDAC7A8](v113);
  v107 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = ((char *)&v102 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v112 = (uint64_t)&v102 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v102 - v17;
  v19 = (char *)String.count.getter();
  v20 = (void *)objc_opt_self();
  v21 = (void *)MEMORY[0x2494F5BB8](v4, v2);
  v22 = objc_msgSend(v20, sel_scanString_range_configuration_, v21, 0, v19, *(_QWORD *)(v0 + 16));

  type metadata accessor for DDScannerResult();
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v123 = MEMORY[0x24BEE4B08];
  v124 = MEMORY[0x24BEE4B08];
  v121 = MEMORY[0x24BEE4B08];
  v122 = MEMORY[0x24BEE4B08];
  v120 = MEMORY[0x24BEE4B08];
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_47_2();
  }
  else
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v26 = v115;
  if (!v25)
  {
    OUTLINED_FUNCTION_47_2();
    v91 = MEMORY[0x24BEE4B08];
    v89 = MEMORY[0x24BEE4B08];
    v90 = MEMORY[0x24BEE4B08];
    v87 = MEMORY[0x24BEE4B08];
    v88 = MEMORY[0x24BEE4B08];
    goto LABEL_65;
  }
  if (v25 < 1)
    __break(1u);
  v27 = 0;
  v119 = v23 & 0xC000000000000001;
  *(_QWORD *)&v24 = 136315394;
  v110 = v24;
  v109 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v24 = 136315138;
  v114 = v24;
  v105 = v14;
  v116 = v18;
  v117 = v23;
  v118 = v25;
  v111 = v9;
  while (2)
  {
    if (v119)
      v28 = (id)MEMORY[0x2494F62E4](v27, v23);
    else
      v28 = *(id *)(v23 + 8 * v27 + 32);
    v29 = v28;
    v30 = objc_msgSend(v28, sel_category);
    switch((int)v30)
    {
      case 1:
        v31 = OUTLINED_FUNCTION_43_15((uint64_t)v30, sel_url);
        if (v31)
        {
          v32 = v31;
          v33 = v112;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          v22 = *(NSObject **)(v9 + 32);
          v34 = v33;
          v19 = v113;
          ((void (*)(uint64_t, uint64_t, char *))v22)(v26, v34, v113);
          __swift_storeEnumTagSinglePayload(v26, 0, 1, (uint64_t)v19);
          if (__swift_getEnumTagSinglePayload(v26, 1, (uint64_t)v19) != 1)
          {
            v35 = (uint64_t)v113;
            ((void (*)(char *, uint64_t, char *))v22)(v18, v26, v113);
            if (one-time initialization token for search != -1)
              swift_once();
            v36 = OUTLINED_FUNCTION_13();
            __swift_project_value_buffer(v36, (uint64_t)static Logging.search);
            v37 = v111;
            v108 = *(void (**)(NSObject *, char *, uint64_t))(v111 + 16);
            v108(v105, v18, v35);
            v14 = Logger.logObject.getter();
            v38 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v14, v38))
            {
              v39 = specialized static UnsafeMutablePointer.allocate(capacity:)();
              v125 = (id)specialized static UnsafeMutablePointer.allocate(capacity:)();
              *(_DWORD *)v39 = v114;
              _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
              v40 = dispatch thunk of CustomStringConvertible.description.getter();
              getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, (uint64_t *)&v125);
              *(_QWORD *)(v39 + 4) = v42;
              OUTLINED_FUNCTION_36_0();
              OUTLINED_FUNCTION_21_17();
              _os_log_impl(&dword_24315F000, v14, v38, "Found link: %s", (uint8_t *)v39, 0xCu);
              swift_arrayDestroy();
              specialized UnsafeMutablePointer.deallocate()();
            }
            v85 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
            OUTLINED_FUNCTION_21_17();

            v19 = v107;
            v18 = v116;
            v108(v107, v116, v35);
            v22 = &v122;
            v86 = v112;
            specialized Set._Variant.insert(_:)(v112, v19);

            v85(v86, v35);
            OUTLINED_FUNCTION_21_17();
            v26 = v115;
            v9 = v111;
            goto LABEL_61;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v26, 1, 1, (uint64_t)v113);
        }

        outlined destroy of URL?(v26);
        goto LABEL_62;
      case 2:
        v125 = 0;
        objc_msgSend(v29, sel_getPhoneValue_label_, &v125, 0);
        v43 = v125;
        if (v125
          && (v125 = 0,
              v126 = 0,
              v44 = v43,
              OUTLINED_FUNCTION_60_11(),
              v22,
              (v14 = v126) != 0))
        {
          v45 = (uint64_t)v125;
          if (one-time initialization token for search != -1)
            swift_once();
          v46 = OUTLINED_FUNCTION_13();
          v47 = __swift_project_value_buffer(v46, (uint64_t)static Logging.search);
          swift_bridgeObjectRetain_n();
          Logger.logObject.getter();
          v48 = OUTLINED_FUNCTION_51_2();
          if (OUTLINED_FUNCTION_31(v48))
          {
            v49 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v125 = (id)specialized static UnsafeMutablePointer.allocate(capacity:)();
            *(_DWORD *)v49 = v114;
            swift_bridgeObjectRetain();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, (unint64_t)v14, (uint64_t *)&v125);
            *(_QWORD *)(v49 + 4) = v50;
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_24_18(&dword_24315F000, v47, (os_log_type_t)v19, "Found phone number: %s");
            OUTLINED_FUNCTION_11_21();
            specialized UnsafeMutablePointer.deallocate()();
          }

          OUTLINED_FUNCTION_102_0();
          v22 = &v124;
          specialized Set._Variant.insert(_:)((Swift::Int *)&v125, v45, (Swift::Int)v14);

          swift_bridgeObjectRelease();
          v25 = v118;
        }
        else
        {

        }
        goto LABEL_60;
      case 3:
        v51 = OUTLINED_FUNCTION_43_15((uint64_t)v30, sel_value);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_61_11();
        if (one-time initialization token for search != -1)
          swift_once();
        v52 = OUTLINED_FUNCTION_13();
        __swift_project_value_buffer(v52, (uint64_t)static Logging.search);
        OUTLINED_FUNCTION_12_24();
        Logger.logObject.getter();
        v53 = OUTLINED_FUNCTION_51_2();
        if (OUTLINED_FUNCTION_31(v53))
        {
          specialized static UnsafeMutablePointer.allocate(capacity:)();
          v54 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          OUTLINED_FUNCTION_14_18(v54);
          OUTLINED_FUNCTION_35_13();
          OUTLINED_FUNCTION_32_10(v55);
          OUTLINED_FUNCTION_24_18(&dword_24315F000, v51, (os_log_type_t)v19, "Found address: %s");
          OUTLINED_FUNCTION_11_21();
          specialized UnsafeMutablePointer.deallocate()();
        }

        OUTLINED_FUNCTION_8_23();
        v22 = &v123;
        goto LABEL_46;
      case 5:
        v125 = 0;
        v127[0] = 0;
        objc_msgSend(v29, sel_getFlightNumber_airline_, &v125, v127);
        v14 = v127[0];
        v43 = v125;
        if (!v127[0])
        {
          v84 = v125;

          goto LABEL_59;
        }
        v125 = 0;
        v126 = 0;
        v19 = (char *)v127[0];
        v22 = v43;
        static String._conditionallyBridgeFromObjectiveC(_:result:)();

        v69 = (Swift::Int)v126;
        if (!v126)
        {

LABEL_55:
          v18 = v116;
          goto LABEL_59;
        }
        if (!v22)
        {

          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
        v70 = v125;
        v125 = 0;
        v126 = 0;
        v71 = v22;
        OUTLINED_FUNCTION_60_11();

        v72 = v126;
        if (v126)
        {
          v108 = (void (*)(NSObject *, char *, uint64_t))v125;
          if (one-time initialization token for search != -1)
            swift_once();
          v73 = OUTLINED_FUNCTION_13();
          __swift_project_value_buffer(v73, (uint64_t)static Logging.search);
          OUTLINED_FUNCTION_12_24();
          swift_bridgeObjectRetain_n();
          v19 = (char *)Logger.logObject.getter();
          v74 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled((os_log_t)v19, v74))
          {
            v75 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
            v102 = v75;
            v103 = (void *)specialized static UnsafeMutablePointer.allocate(capacity:)();
            v127[0] = v103;
            *v75 = v114;
            v104 = v70;
            v125 = v70;
            v126 = v69;
            swift_bridgeObjectRetain();
            v76._countAndFlagsBits = (uint64_t)v108;
            v76._object = v72;
            String.append(_:)(v76);
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v125, (unint64_t)v126, (uint64_t *)v127);
            v77 = (uint8_t *)v102;
            *(_QWORD *)(v102 + 1) = v78;
            OUTLINED_FUNCTION_102_0();
            OUTLINED_FUNCTION_8_23();
            OUTLINED_FUNCTION_36_0();
            _os_log_impl(&dword_24315F000, (os_log_t)v19, v74, "Found flight: %s", v77, 0xCu);
            swift_arrayDestroy();
            specialized UnsafeMutablePointer.deallocate()();
          }

          OUTLINED_FUNCTION_102_0();
          OUTLINED_FUNCTION_8_23();
          v26 = v115;
          v22 = &v120;
          specialized Set._Variant.insert(_:)((Swift::Int *)&v125, (Swift::Int)v108, (Swift::Int)v72, (Swift::Int)v70, v69);

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
        v18 = v116;
        v25 = v118;
        v9 = v111;
LABEL_59:

LABEL_60:
LABEL_61:
        v23 = v117;
LABEL_62:
        if (v25 != ++v27)
          continue;
        OUTLINED_FUNCTION_47_2();
        v87 = v123;
        v88 = v124;
        v89 = v121;
        v90 = v122;
        v91 = v120;
LABEL_65:
        specialized _copyCollectionToContiguousArray<A>(_:)(v88);
        v93 = v92;
        OUTLINED_FUNCTION_56_0();
        specialized _copyCollectionToContiguousArray<A>(_:)(v87);
        v95 = v94;
        OUTLINED_FUNCTION_80_0();
        v96 = specialized _copyCollectionToContiguousArray<A>(_:)(v90);
        OUTLINED_FUNCTION_121();
        specialized _copyCollectionToContiguousArray<A>(_:)(v89);
        v98 = v97;
        OUTLINED_FUNCTION_36_0();
        specialized _copyCollectionToContiguousArray<A>(_:)(v91);
        v100 = v99;
        swift_bridgeObjectRelease();
        v101 = v106;
        *v106 = v93;
        v101[1] = v95;
        v101[2] = v96;
        v101[3] = v98;
        v101[4] = v100;
        OUTLINED_FUNCTION_43_0();
        return;
      case 7:
        v79 = OUTLINED_FUNCTION_43_15((uint64_t)v30, sel_value);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_61_11();
        if (one-time initialization token for search != -1)
          swift_once();
        v80 = OUTLINED_FUNCTION_13();
        __swift_project_value_buffer(v80, (uint64_t)static Logging.search);
        OUTLINED_FUNCTION_12_24();
        Logger.logObject.getter();
        v81 = OUTLINED_FUNCTION_51_2();
        if (OUTLINED_FUNCTION_31(v81))
        {
          specialized static UnsafeMutablePointer.allocate(capacity:)();
          v82 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          OUTLINED_FUNCTION_14_18(v82);
          OUTLINED_FUNCTION_35_13();
          OUTLINED_FUNCTION_32_10(v83);
          OUTLINED_FUNCTION_24_18(&dword_24315F000, v79, (os_log_type_t)v19, "Found proper name: %s");
          OUTLINED_FUNCTION_11_21();
          specialized UnsafeMutablePointer.deallocate()();
        }

        OUTLINED_FUNCTION_8_23();
        v22 = &v121;
LABEL_46:
        specialized Set._Variant.insert(_:)((Swift::Int *)&v125, (Swift::Int)v14, v25);

        swift_bridgeObjectRelease();
        goto LABEL_47;
      default:
        if (one-time initialization token for search != -1)
          swift_once();
        v56 = OUTLINED_FUNCTION_13();
        v22 = __swift_project_value_buffer(v56, (uint64_t)static Logging.search);
        v57 = v29;
        Logger.logObject.getter();
        v58 = OUTLINED_FUNCTION_51_2();
        if (os_log_type_enabled(v22, v58))
        {
          v59 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v125 = (id)specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_DWORD *)v59 = v110;
          LODWORD(v127[0]) = objc_msgSend(v57, sel_category);
          type metadata accessor for DDResultCategory(0);
          v60 = String.init<A>(describing:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, (uint64_t *)&v125);
          *(_QWORD *)(v59 + 4) = v62;

          v63 = OUTLINED_FUNCTION_121();
          *(_WORD *)(v59 + 12) = 2080;
          v64 = OUTLINED_FUNCTION_43_15(v63, sel_value);
          v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v67 = v66;

          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v67, (uint64_t *)&v125);
          *(_QWORD *)(v59 + 14) = v68;

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24315F000, v22, v58, "Found result of unhandled category: %s, value: %s", (uint8_t *)v59, 0x16u);
          swift_arrayDestroy();
          specialized UnsafeMutablePointer.deallocate()();
        }

LABEL_47:
        v25 = v118;
        goto LABEL_62;
    }
  }
}

OmniSearch::FlightDesignator __swiftcall FlightDesignator.init(number:airline:)(Swift::String number, Swift::String airline)
{
  Swift::String *v2;
  OmniSearch::FlightDesignator result;

  *v2 = number;
  v2[1] = airline;
  result.airline = airline;
  result.number = number;
  return result;
}

uint64_t DataDetectorsController.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DataDetectorsController.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t FlightDesignator.number.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_4_7();
  return v1;
}

uint64_t FlightDesignator.airline.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_4_7();
  return v1;
}

uint64_t FlightDesignator.hash(into:)()
{
  OUTLINED_FUNCTION_46_0();
  String.hash(into:)();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_4_7();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t static FlightDesignator.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return result;
}

uint64_t FlightDesignator.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7265626D756ELL && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C726961 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FlightDesignator.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656E696C726961;
  else
    return 0x7265626D756ELL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance FlightDesignator.CodingKeys()
{
  char *v0;

  return FlightDesignator.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance FlightDesignator.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = FlightDesignator.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance FlightDesignator.CodingKeys()
{
  lazy protocol witness table accessor for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance FlightDesignator.CodingKeys()
{
  lazy protocol witness table accessor for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void FlightDesignator.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_65_7();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<FlightDesignator.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_1();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  lazy protocol witness table accessor for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_1_7();
  if (!v0)
    OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_1_1();
}

Swift::Int FlightDesignator.hashValue.getter()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_4_7();
  String.hash(into:)();
  OUTLINED_FUNCTION_36_0();
  return Hasher._finalize()();
}

void FlightDesignator.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_65_7();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<FlightDesignator.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    OUTLINED_FUNCTION_2_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_29_18();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = OUTLINED_FUNCTION_29_18();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v14 = v10;
    OUTLINED_FUNCTION_22_20(v13);
    *v5 = v7;
    v5[1] = v9;
    v5[2] = v14;
    v5[3] = v12;
    OUTLINED_FUNCTION_4_7();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance FlightDesignator()
{
  FlightDesignator.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance FlightDesignator()
{
  FlightDesignator.encode(to:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance FlightDesignator()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void _sSaySSGSayxGSEsSERzlWlTm_0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    v7 = v5;
    atomic_store(MEMORY[0x2494F6CA4](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_59_0();
}

unint64_t lazy protocol witness table accessor for type [URL] and conformance <A> [A](uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  result = OUTLINED_FUNCTION_89_4(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [URL]);
    v8 = _s10Foundation3URLVACSEAAWlTm_0(v6);
    result = MEMORY[0x2494F6CA4](v5, v7, &v8);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t type metadata accessor for DDScannerResult()
{
  unint64_t result;

  result = lazy cache variable for type metadata for DDScannerResult;
  if (!lazy cache variable for type metadata for DDScannerResult)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for DDScannerResult);
  }
  return result;
}

uint64_t specialized UnsafeMutablePointer.assign(repeating:count:)(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(Swift::Int *a1, Swift::Int a2, Swift::Int a3, Swift::Int a4, Swift::Int a5)
{
  uint64_t *v5;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  Swift::Int *v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = (Swift::Int *)(*(_QWORD *)(*v28 + 48) + 32 * v13);
    v25 = v24[1];
    v26 = v24[2];
    v27 = v24[3];
    *a1 = *v24;
    a1[1] = v25;
    a1[2] = v26;
    a1[3] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for URL();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v3;
    v27 = a1;
    v28 = ~v12;
    v29 = v7;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v18 = v14;
      v19 = v17;
      v17(v9, *(_QWORD *)(v14 + 48) + v16 * v13, v6);
      _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v9, v6);
      if ((v20 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v18;
      v17 = v19;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v22 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v30, v6);
    v19(v27, *(_QWORD *)(*v26 + 48) + v16 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v22 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v17(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t specialized Set._Variant.insert(_:)(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  Swift::Int *v15;
  Swift::Int v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_76_0();
  String.hash(into:)();
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_42_0();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (OUTLINED_FUNCTION_7_22() & 1) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_80_0();
      OUTLINED_FUNCTION_47();
      v15 = (Swift::Int *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      OUTLINED_FUNCTION_42_0();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (OUTLINED_FUNCTION_7_22() & 1) != 0)
        goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_47();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  OUTLINED_FUNCTION_46_0();
  specialized _NativeSet.insertNew(_:at:isUnique:)(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

unint64_t lazy protocol witness table accessor for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys;
  if (!lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator.CodingKeys, &unk_2513D2088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys;
  if (!lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator.CodingKeys, &unk_2513D2088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys;
  if (!lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator.CodingKeys, &unk_2513D2088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys;
  if (!lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightDesignator.CodingKeys, &unk_2513D2088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightDesignator.CodingKeys and conformance FlightDesignator.CodingKeys);
  }
  return result;
}

uint64_t destroy for DataDetectorResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DataDetectorResults(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DataDetectorResults(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DataDetectorResults(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataDetectorResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DataDetectorResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataDetectorResults()
{
  return &type metadata for DataDetectorResults;
}

uint64_t type metadata accessor for DataDetectorsController()
{
  return objc_opt_self();
}

uint64_t method lookup function for DataDetectorsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataDetectorsController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DataDetectorsController.scan(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

ValueMetadata *type metadata accessor for FlightDesignator()
{
  return &type metadata for FlightDesignator;
}

uint64_t storeEnumTagSinglePayload for FlightDesignator.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2432EC114 + 4 * byte_243358CAA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2432EC148 + 4 * byte_243358CA5[v4]))();
}

uint64_t sub_2432EC148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432EC150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432EC158);
  return result;
}

uint64_t sub_2432EC164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432EC16CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2432EC170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432EC178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for FlightDesignator.CodingKeys()
{
  return &unk_2513D2088;
}

uint64_t storeEnumTagSinglePayload for DataDetectorResults.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2432EC1E0 + 4 * byte_243358CB4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2432EC214 + 4 * byte_243358CAF[v4]))();
}

uint64_t sub_2432EC214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432EC21C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432EC224);
  return result;
}

uint64_t sub_2432EC230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432EC238);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2432EC23C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432EC244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for DataDetectorResults.CodingKeys()
{
  return &unk_2513D2118;
}

uint64_t specialized Set._Variant.insert(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_18_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for SearchResultType();
  v7 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  v11 = *v1;
  _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
  swift_bridgeObjectRetain();
  v29 = v3;
  v12 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  v15 = v11;
  v16 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v26 = v1;
    v27 = v5;
    v28 = ~v13;
    v17 = v7[9];
    v18 = (void (*)(_QWORD, _QWORD, _QWORD))v7[2];
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v10, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      v22 = (void (*)(uint64_t, uint64_t))v7[1];
      v22(v10, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v28;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v1 = v26;
        v5 = v27;
        v23 = v7;
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_47_2();
    v22(v29, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = (void (*)(_QWORD, _QWORD, _QWORD))v7[2];
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18(v10, v29, v6);
    v30 = *v1;
    *v1 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)(v10, v14, isUniquelyReferenced_nonNull_native);
    *v1 = v30;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_80_3(v5, v29, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v23[4]);
    return 1;
  }
}

uint64_t specialized _NativeSet.resize(capacity:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<FlightDesignator>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      v21 = v17[3];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      result = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) == 0)
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v24);
          if (v29 != -1)
          {
            v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      v30 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v25);
      *v30 = v18;
      v30[1] = v19;
      v30[2] = v20;
      v30[3] = v21;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v32)
        goto LABEL_32;
      v14 = v33[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v32)
          goto LABEL_32;
        v14 = v33[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v32)
            goto LABEL_32;
          v14 = v33[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v32)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v31 = 1 << *(_BYTE *)(v2 + 32);
              if (v31 > 63)
                specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(v31 + 63) >> 6, v33);
              else
                *v33 = -1 << v31;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v33[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v32)
                  goto LABEL_32;
                v14 = v33[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      result = Hasher._finalize()();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void specialized _NativeSet.resize(capacity:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_2();
  v46 = v1;
  v47 = v2;
  v4 = v3;
  v5 = v0;
  v8 = OUTLINED_FUNCTION_37_12(v6, v7);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - v9;
  v11 = (_QWORD *)*v0;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  v12 = static _SetStorage.resize(original:capacity:move:)();
  if (v11[2])
  {
    OUTLINED_FUNCTION_34_16();
    v44 = v11 + 7;
    OUTLINED_FUNCTION_57_10();
    v15 = v14 & v13;
    v42 = v0;
    v43 = (unint64_t)(v16 + 63) >> 6;
    v17 = v12 + 56;
    swift_retain();
    v18 = 0;
    if (!v15)
      goto LABEL_4;
LABEL_3:
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    for (i = v19 | (v18 << 6); ; i = v27 + (v18 << 6))
    {
      v28 = v11;
      v29 = v11[6];
      v30 = *(_QWORD *)(v45 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 32);
      v31(v10, v29 + v30 * i, v8);
      OUTLINED_FUNCTION_47_15();
      dispatch thunk of Hashable._rawHashValue(seed:)();
      OUTLINED_FUNCTION_51_14();
      if (((v34 << v33) & ~*(_QWORD *)(v17 + 8 * v32)) == 0)
      {
        OUTLINED_FUNCTION_179_0();
        while (++v37 != v38 || (v36 & 1) == 0)
        {
          v39 = v37 == v38;
          if (v37 == v38)
            v37 = 0;
          v36 |= v39;
          if (*(_QWORD *)(v17 + 8 * v37) != -1)
          {
            OUTLINED_FUNCTION_63_16();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_11();
LABEL_27:
      *(_QWORD *)(v17 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
      v31((char *)(*(_QWORD *)(v12 + 48) + v35 * v30), (unint64_t)v10, v8);
      ++*(_QWORD *)(v12 + 16);
      v11 = v28;
      if (v15)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v18, 1))
        goto LABEL_35;
      if (v18 + 1 >= v43)
        goto LABEL_29;
      OUTLINED_FUNCTION_56_11();
      v18 = v21;
      if (!v22)
      {
        v18 = v21 + 1;
        if (v21 + 1 >= v43)
          goto LABEL_29;
        if (!v44[v18])
        {
          v18 = v21 + 2;
          if (v21 + 2 >= v43)
            goto LABEL_29;
          if (!v44[v18])
          {
            if (v21 + 3 >= v43)
            {
LABEL_29:
              swift_release();
              v5 = v42;
              OUTLINED_FUNCTION_34_16();
              if (v40 > 63)
                specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(v40 + 63) >> 6, v44);
              else
                *v44 = -1 << v40;
              v11[2] = 0;
              break;
            }
            OUTLINED_FUNCTION_56_11();
            if (!v24)
            {
              while (1)
              {
                v18 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_36;
                if (v18 >= v43)
                  goto LABEL_29;
                ++v23;
                if (v44[v18])
                  goto LABEL_17;
              }
            }
            v18 = v23;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_44_9();
      v15 = v26 & v25;
    }
  }
  swift_release();
  *v5 = v12;
  OUTLINED_FUNCTION_43_0();
}

Swift::Int specialized _NativeSet.insertNew(_:at:isUnique:)(Swift::Int result, Swift::Int a2, Swift::Int a3, Swift::Int a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  Swift::Int *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_21;
  if ((a6 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v13 > v12)
    {
      result = (Swift::Int)specialized _NativeSet.copy()();
      goto LABEL_21;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v14 = *v6;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  result = Hasher._finalize()();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    do
    {
      v19 = (_QWORD *)(v18 + 32 * a5);
      v20 = v19[2];
      v21 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4)
          goto LABEL_24;
        result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) != 0)
          goto LABEL_24;
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_21:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (Swift::Int *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_24:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = type metadata accessor for URL();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v11 > v10)
    {
      specialized _NativeSet.copy()();
      goto LABEL_12;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v12 = *v3;
  _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = type metadata accessor for SearchResultType();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v11 > v10)
    {
      specialized _NativeSet.copy()();
      goto LABEL_12;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v12 = *v3;
  _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      _s10Foundation3URLVACSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int specialized _NativeSet.insertNew(_:at:isUnique:)(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  Swift::Int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  Swift::Int *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v10 > v9)
    {
      result = (Swift::Int)specialized _NativeSet.copy()();
      goto LABEL_22;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  result = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (Swift::Int *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *specialized _NativeSet.copy()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<FlightDesignator>);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * i);
    *v24 = *v20;
    v24[1] = v21;
    v24[2] = v22;
    v24[3] = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void specialized _NativeSet.copy()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v3 = v0;
  v5 = v4(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - v7;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  v9 = (_QWORD *)*v0;
  v10 = static _SetStorage.copy(original:)();
  if (!v9[2])
  {
    swift_release();
LABEL_30:
    *v3 = v10;
    OUTLINED_FUNCTION_43_0();
    return;
  }
  v31 = v3;
  OUTLINED_FUNCTION_34_16();
  v12 = v9 + 7;
  v14 = (unint64_t)(v13 + 63) >> 6;
  if ((_QWORD *)v10 != v9 || v11 >= &v9[v14 + 7])
    memmove(v11, v9 + 7, 8 * v14);
  v16 = 0;
  *(_QWORD *)(v10 + 16) = v9[2];
  OUTLINED_FUNCTION_34_16();
  v18 = v9[7];
  v19 = -1;
  if (v17 < 64)
    v19 = ~(-1 << v17);
  v20 = v19 & v18;
  v21 = (unint64_t)(v17 + 63) >> 6;
  if ((v19 & v18) == 0)
    goto LABEL_12;
LABEL_11:
  v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v22 | (v16 << 6); ; i = v28 + (v16 << 6))
  {
    v29 = *(_QWORD *)(v6 + 72) * i;
    OUTLINED_FUNCTION_80_3((uint64_t)v8, v9[6] + v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_80_3(*(_QWORD *)(v10 + 48) + v29, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    if (v20)
      goto LABEL_11;
LABEL_12:
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v21)
      goto LABEL_28;
    ++v16;
    if (!v12[v24])
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v21)
        goto LABEL_28;
      if (!v12[v16])
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v21)
          goto LABEL_28;
        if (!v12[v16])
          break;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_44_9();
    v20 = v27 & v26;
  }
  v25 = v24 + 3;
  if (v25 >= v21)
  {
LABEL_28:
    swift_release();
    v3 = v31;
    goto LABEL_30;
  }
  if (v12[v25])
  {
    v16 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v21)
      goto LABEL_28;
    ++v25;
    if (v12[v16])
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

uint64_t specialized _NativeSet.copyAndResize(capacity:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<FlightDesignator>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v8 + 8 * v23);
        if (v28 != -1)
        {
          v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v24);
    *v29 = v17;
    v29[1] = v18;
    v29[2] = v19;
    v29[3] = v20;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v31)
      goto LABEL_32;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v31)
        goto LABEL_32;
      v14 = *(_QWORD *)(v30 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v31)
          goto LABEL_32;
        v14 = *(_QWORD *)(v30 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v31)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v30 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v31)
      goto LABEL_32;
    v14 = *(_QWORD *)(v30 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    result = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t _s10Foundation3URLVACSEAAWlTm_0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = OUTLINED_FUNCTION_89_4(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3(255);
    result = MEMORY[0x2494F6CA4](v5, v6);
    atomic_store(result, v1);
  }
  return result;
}

void specialized _NativeSet.copyAndResize(capacity:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_18_2();
  v41 = v1;
  v42 = v2;
  v4 = v3;
  v5 = v0;
  v8 = OUTLINED_FUNCTION_37_12(v6, v7);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  v13 = static _SetStorage.resize(original:capacity:move:)();
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_release();
LABEL_31:
    *v5 = v13;
    OUTLINED_FUNCTION_43_0();
    return;
  }
  OUTLINED_FUNCTION_34_16();
  v38 = v0;
  v39 = v12 + 56;
  OUTLINED_FUNCTION_57_10();
  v16 = v15 & v14;
  v40 = (unint64_t)(v17 + 63) >> 6;
  v18 = v13 + 56;
  swift_retain();
  v19 = 0;
  if (!v16)
    goto LABEL_4;
LABEL_3:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v20 | (v19 << 6); ; i = v28 + (v19 << 6))
  {
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v29 * i, v8);
    OUTLINED_FUNCTION_47_15();
    dispatch thunk of Hashable._rawHashValue(seed:)();
    OUTLINED_FUNCTION_51_14();
    if (((v32 << v31) & ~*(_QWORD *)(v18 + 8 * v30)) == 0)
    {
      OUTLINED_FUNCTION_179_0();
      while (++v35 != v36 || (v34 & 1) == 0)
      {
        v37 = v35 == v36;
        if (v35 == v36)
          v35 = 0;
        v34 |= v37;
        if (*(_QWORD *)(v18 + 8 * v35) != -1)
        {
          OUTLINED_FUNCTION_63_16();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    OUTLINED_FUNCTION_48_11();
LABEL_27:
    *(_QWORD *)(v18 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v13 + 48) + v33 * v29, v11, v8);
    ++*(_QWORD *)(v13 + 16);
    if (v16)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v19, 1))
      goto LABEL_33;
    if (v19 + 1 >= v40)
      goto LABEL_29;
    OUTLINED_FUNCTION_56_11();
    v19 = v22;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_29;
      if (!*(_QWORD *)(v39 + 8 * v19))
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v40)
          goto LABEL_29;
        if (!*(_QWORD *)(v39 + 8 * v19))
          break;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_44_9();
    v16 = v27 & v26;
  }
  if (v22 + 3 >= v40)
  {
LABEL_29:
    swift_release_n();
    v5 = v38;
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_56_11();
  if (v25)
  {
    v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v40)
      goto LABEL_29;
    ++v24;
    if (*(_QWORD *)(v39 + 8 * v19))
      goto LABEL_17;
  }
LABEL_34:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_1_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_33()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_6_30()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_8_23()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_14_18(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *v1 = *(_OWORD *)(v2 - 240);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_21_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_20@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_24_18(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void OUTLINED_FUNCTION_26_17(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_29_18()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_32_10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_35_13()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_37_12(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

id OUTLINED_FUNCTION_43_15(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

unint64_t OUTLINED_FUNCTION_47_15()
{
  uint64_t v0;

  return _s10Foundation3URLVACSEAAWlTm_0(*(_QWORD *)(v0 - 96));
}

void OUTLINED_FUNCTION_53_17()
{
  JUMPOUT(0x2494F5E4CLL);
}

void OUTLINED_FUNCTION_55_9(uint64_t a1, unsigned int a2)
{
  unint64_t v2;

  v2 = a2 | 0xEF203A7300000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_60_11()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

void OUTLINED_FUNCTION_61_11()
{
  void *v0;

}

uint64_t LatencyProfiler.__allocating_init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  LatencyProfiler.init(_:)(a1, a2);
  return v4;
}

_QWORD *LatencyProfiler.init(_:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v3 = v2;
  v2[2] = mach_absolute_time();
  v2[3] = a1;
  v2[4] = a2;
  v6 = one-time initialization token for search;
  OUTLINED_FUNCTION_91_0();
  if (v6 != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_91_0();
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v12 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v10 = 136315138;
    OUTLINED_FUNCTION_91_0();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v8, v9, "LP - started %s", v10, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease_n();
  return v3;
}

Swift::Void __swiftcall LatencyProfiler.finish()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v7;
  double v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  mach_timebase_info info;
  uint64_t v20[2];

  v3 = v0;
  v20[1] = *MEMORY[0x24BDAC8D0];
  v4 = (id)mach_absolute_time();
  info = 0;
  mach_timebase_info(&info);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = (unint64_t)v4 >= v5;
  v7 = (unint64_t)v4 - v5;
  if (!v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!is_mul_ok(v7, info.numer))
    goto LABEL_14;
  if (!info.denom)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = (double)(v7 * info.numer / info.denom) / 1000000.0;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_10;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, (uint64_t)v8);
  v10 = objc_msgSend(v4, sel_stringFromNumber_, v9);

  if (!v10)
    goto LABEL_13;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v1 = v11;

  if (one-time initialization token for search != -1)
    goto LABEL_19;
LABEL_10:
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v20[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v15 = 136315394;
    v18 = v2;
    v17 = *(_QWORD *)(v3 + 24);
    v16 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v16, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v1, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v13, v14, "LP - finished %s in %s ms", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_2_28();
LABEL_13:

}

uint64_t LatencyProfiler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LatencyProfiler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LatencyProfiler()
{
  return objc_opt_self();
}

uint64_t method lookup function for LatencyProfiler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LatencyProfiler.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of LatencyProfiler.finish()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  return swift_release_n();
}

Swift::Void __swiftcall NSMutableAttributedString.updateWithExpansionStringsArray(attributedEntityType:substringToValues:updateForNoExpansions:)(Swift::String attributedEntityType, Swift::OpaquePointer substringToValues, Swift::Bool updateForNoExpansions)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::Int location;
  Swift::Int length;
  Swift::Bool is_nil;
  void *v26;
  Class isa;
  char v28;
  uint64_t v29;
  __C::_NSRange_optional v30;

  OUTLINED_FUNCTION_0_33();
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      OUTLINED_FUNCTION_3_23();
      goto LABEL_23;
    }
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_70_5();
    if (v9 == v10)
      goto LABEL_28;
    v6 = v8;
    if (!*(_QWORD *)(v29 + 8 * v8))
    {
      v6 = v8 + 1;
      OUTLINED_FUNCTION_21_9();
      if (v9 == v10)
        goto LABEL_28;
      OUTLINED_FUNCTION_34_6();
      if (!v12)
      {
        v6 = v11 + 2;
        OUTLINED_FUNCTION_21_9();
        if (v9 == v10)
          goto LABEL_28;
        OUTLINED_FUNCTION_34_6();
        if (!v13)
          break;
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_4_34();
LABEL_23:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v17 = *v16;
    v18 = (void *)v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    v21 = OUTLINED_FUNCTION_12_7(v20, sel_string);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v22._countAndFlagsBits = v17;
    v22._object = v18;
    v30 = String.nsRangeWithCompleteTokenMatch(of:)(v22);
    location = v30.value.location;
    length = v30.value.length;
    is_nil = v30.is_nil;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_2();
    if (!is_nil && ((v28 & 1) != 0 || *(_QWORD *)(v19 + 16)))
    {
      v26 = (void *)MEMORY[0x2494F5BB8]();
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_47();
      objc_msgSend(v4, sel_addAttribute_value_range_, v26, isa, location, length);

    }
    else
    {
      OUTLINED_FUNCTION_47();
    }
  }
  OUTLINED_FUNCTION_70_5();
  if (v9 == v10)
  {
LABEL_28:
    OUTLINED_FUNCTION_1_31();
    return;
  }
  if (*(_QWORD *)(v29 + 8 * v14))
  {
    v6 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    OUTLINED_FUNCTION_21_9();
    if (v9 == v10)
      goto LABEL_28;
    v14 = v15 + 1;
    if (*(_QWORD *)(v29 + 8 * v6))
      goto LABEL_22;
  }
LABEL_30:
  __break(1u);
}

Swift::Void __swiftcall NSMutableAttributedString.updateWithExpansionString(attributedEntityType:substringToValues:updateForNoExpansions:)(Swift::String attributedEntityType, Swift::OpaquePointer substringToValues, Swift::Bool updateForNoExpansions)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::Int location;
  Swift::Int length;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  __C::_NSRange_optional v31;

  OUTLINED_FUNCTION_0_33();
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      OUTLINED_FUNCTION_3_23();
      goto LABEL_23;
    }
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    OUTLINED_FUNCTION_70_5();
    if (v9 == v10)
      goto LABEL_31;
    v6 = v8;
    if (!*(_QWORD *)(v30 + 8 * v8))
    {
      v6 = v8 + 1;
      OUTLINED_FUNCTION_21_9();
      if (v9 == v10)
        goto LABEL_31;
      OUTLINED_FUNCTION_34_6();
      if (!v12)
      {
        v6 = v11 + 2;
        OUTLINED_FUNCTION_21_9();
        if (v9 == v10)
          goto LABEL_31;
        OUTLINED_FUNCTION_34_6();
        if (!v13)
          break;
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_4_34();
LABEL_23:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v17 = *v16;
    v18 = (void *)v16[1];
    v19 = *(_QWORD **)(*(_QWORD *)(v3 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    v21 = OUTLINED_FUNCTION_12_7(v20, sel_string);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v22._countAndFlagsBits = v17;
    v22._object = v18;
    v31 = String.nsRangeWithCompleteTokenMatch(of:)(v22);
    location = v31.value.location;
    length = v31.value.length;
    LOBYTE(v17) = v31.is_nil;
    OUTLINED_FUNCTION_47_2();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0 && ((v29 & 1) != 0 || v19[2]))
    {
      v25 = (void *)MEMORY[0x2494F5BB8]();
      if (v19[2])
      {
        v26 = v19[4];
        v27 = v19[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        v26 = 0;
        v27 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v28 = (void *)MEMORY[0x2494F5BB8](v26, v27);
      OUTLINED_FUNCTION_47_2();
      objc_msgSend(v4, sel_addAttribute_value_range_, v25, v28, location, length);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_70_5();
  if (v9 == v10)
  {
LABEL_31:
    OUTLINED_FUNCTION_1_31();
    return;
  }
  if (*(_QWORD *)(v30 + 8 * v14))
  {
    v6 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    OUTLINED_FUNCTION_21_9();
    if (v9 == v10)
      goto LABEL_31;
    v14 = v15 + 1;
    if (*(_QWORD *)(v30 + 8 * v6))
      goto LABEL_22;
  }
LABEL_33:
  __break(1u);
}

Swift::Void __swiftcall NSMutableAttributedString.updateWithBool(attributedEntityType:substrings:)(Swift::String attributedEntityType, Swift::OpaquePointer substrings)
{
  void *v2;
  uint64_t v3;
  uint64_t countAndFlagsBits;
  void **v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  Swift::Int location;
  Swift::Int length;
  Swift::Bool is_nil;
  void *v15;
  Class isa;
  void *object;
  __C::_NSRange_optional v18;

  object = attributedEntityType._object;
  v3 = *((_QWORD *)substrings._rawValue + 2);
  if (v3)
  {
    countAndFlagsBits = attributedEntityType._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v6 = (void **)((char *)substrings._rawValue + 40);
    do
    {
      v7 = (uint64_t)*(v6 - 1);
      v8 = *v6;
      v9 = swift_bridgeObjectRetain();
      v10 = OUTLINED_FUNCTION_12_7(v9, sel_string);
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      v11._countAndFlagsBits = v7;
      v11._object = v8;
      v18 = String.nsRangeWithCompleteTokenMatch(of:)(v11);
      location = v18.value.location;
      length = v18.value.length;
      is_nil = v18.is_nil;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_47();
      if (!is_nil)
      {
        v15 = (void *)MEMORY[0x2494F5BB8](countAndFlagsBits, object);
        isa = Bool._bridgeToObjectiveC()().super.super.isa;
        objc_msgSend(v2, sel_addAttribute_value_range_, v15, isa, location, length);

      }
      v6 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_1_31()
{
  return swift_release();
}

id AppEntitySearchService.init(maxItemCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v6;
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;

  if (one-time initialization token for shared != -1)
    swift_once();
  v6 = (id)static LocalSearchManager.shared;
  type metadata accessor for AppEntityIndexClient();
  v4 = swift_allocObject();
  v8 = type metadata accessor for LocalSearchManager();
  v9 = &protocol witness table for LocalSearchManager;
  *(_QWORD *)&v7 = v6;
  outlined init with take of SageSearchClient(&v7, v4 + 16);
  *(_BYTE *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 4;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = a1;
  return v6;
}

uint64_t AppEntitySearchService.type.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AppEntitySearchService.indexClient.getter()
{
  return swift_retain();
}

uint64_t AppEntitySearchService.maxItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t AppEntitySearchService.search(entityRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 80) = a3;
  *(_QWORD *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a2;
  *(_BYTE *)(v5 + 136) = *(_BYTE *)v4;
  *(_OWORD *)(v5 + 96) = *(_OWORD *)(v4 + 8);
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v4 + 24);
  return swift_task_switch();
}

uint64_t AppEntitySearchService.search(entityRequest:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _QWORD *v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  if (one-time initialization token for search != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v22 = v8;
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v22);
    *(_QWORD *)(v0 + 56) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_102_0();
    _os_log_impl(&dword_24315F000, v2, v3, "Start AppEntity search with request: %s", v7, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();

  v12 = *(_QWORD *)(v0 + 112);
  v21 = *(_OWORD *)(v0 + 96);
  v13 = *(_BYTE *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v16;
  v17 = *(_OWORD *)(v0 + 72);
  *(_BYTE *)(v16 + 16) = v13;
  *(_OWORD *)(v16 + 24) = v21;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v15;
  *(_OWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 72) = v14;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
  *v18 = v0;
  v18[1] = AppEntitySearchService.search(entityRequest:);
  OUTLINED_FUNCTION_54();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  OUTLINED_FUNCTION_16_7();
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t closure #1 in AppEntitySearchService.search(entityRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v19[1] = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SearchResult], Never>);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  AppEntityIndexClient.matches(for:allowedTypes:maxItemCount:fetchFullEmailContent:completion:)(a6, a7, a8, a9, 0, (uint64_t)partial apply for closure #1 in closure #1 in LocalSearchService.search(spotlightRequest:), v17);
  return swift_release();
}

uint64_t AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = a6;
  *(_QWORD *)(v7 + 48) = a3;
  v8 = type metadata accessor for OSSignpostError();
  *(_QWORD *)(v7 + 72) = v8;
  *(_QWORD *)(v7 + 80) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 88) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v7 + 96) = OUTLINED_FUNCTION_9_4();
  v9 = type metadata accessor for OSSignpostID();
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 120) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v7 + 128) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v7 + 136) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v7 + 144) = OUTLINED_FUNCTION_9_4();
  *(_BYTE *)(v7 + 216) = *(_BYTE *)v6;
  *(_OWORD *)(v7 + 152) = *(_OWORD *)(v6 + 8);
  *(_QWORD *)(v7 + 168) = *(_QWORD *)(v6 + 24);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

uint64_t AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint64_t v29;
  uint64_t v30;

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = type metadata accessor for OSSignposter();
  *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  v3 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    v5 = OUTLINED_FUNCTION_55_1(v4);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v3, v5, "AppEntitySearchService.search", "", v4);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(_QWORD *)(v0 + 184) = OSSignpostIntervalState.init(id:isOpen:)();
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 192) = v11;
  v11(v7, v8);
  if (v10 && (v12 = *(_QWORD *)(v0 + 64), *(_QWORD *)(v12 + 16)))
  {
    v13 = *(_QWORD *)(v0 + 168);
    v14 = *(_OWORD *)(v0 + 152);
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 216);
    *(_OWORD *)(v0 + 24) = v14;
    *(_QWORD *)(v0 + 40) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v15;
    *v15 = v0;
    v15[1] = AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:);
    return AppEntitySearchService.search(entityRequest:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v12, *(_QWORD *)(v0 + 168));
  }
  else
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logging.search);
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_24315F000, v18, v19, "Allowed types is nil or empty. Returning empty [SearchResult].", v20, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    v21 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    v22 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v24 = *(_QWORD *)(v0 + 80);
      v23 = *(_QWORD *)(v0 + 88);
      v25 = *(_QWORD *)(v0 + 72);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == *MEMORY[0x24BEE7810])
      {
        v26 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 80));
        v26 = "";
      }
      v27 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      v28 = OUTLINED_FUNCTION_55_1(v27);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v21, v22, v28, "AppEntitySearchService.search", v26, v27);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v29 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 104);

    v11(v29, v30);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_6_10(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  os_signpost_id_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  v2 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x24BEE7810])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 80));
      v6 = "";
    }
    v7 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    v8 = OUTLINED_FUNCTION_55_1(v7);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v1, v2, v8, "AppEntitySearchService.search", v6, v7);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  v10 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 104);

  v9(v10, v11);
  swift_release();
  v12 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_10(v12, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

Swift::String __swiftcall AppEntitySearchService.toString(documents:)(Swift::OpaquePointer documents)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v1 = type metadata accessor for String.Encoding();
  MEMORY[0x24BDAC7A8](v1);
  if (one-time initialization token for iso8601PrettyPrinted != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
  lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A]();
  dispatch thunk of JSONEncoder.encode<A>(_:)();
  static String.Encoding.utf8.getter();
  v2 = String.init(data:encoding:)();
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    OUTLINED_FUNCTION_89_7();
  }
  else
  {
    OUTLINED_FUNCTION_89_7();
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  v6 = v4;
  v7 = (void *)v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance AppEntitySearchService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance AppEntitySearchService;
  return AppEntitySearchService.search(query:sources:allowedTypes:searchOptions:)((uint64_t)v10, v11, a3, a4, v12, a6);
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance AppEntitySearchService(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_16_7();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_6_10(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t initializeWithCopy for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AppEntitySearchService(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEntitySearchService(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEntitySearchService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEntitySearchService()
{
  return &type metadata for AppEntitySearchService;
}

uint64_t partial apply for closure #1 in AppEntitySearchService.search(entityRequest:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in AppEntitySearchService.search(entityRequest:)(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD **)(v1 + 48), *(_QWORD **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_2432F0088()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SearchResult], Never>);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 - 8));
  return swift_deallocObject();
}

void OUTLINED_FUNCTION_10_27(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

uint64_t FlightReservation.updatedStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Leg?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_44_11();
  FlightReservation.leg.getter(v0);
  v2 = type metadata accessor for FlightSnippet.Leg(0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    outlined destroy of MobileSMSDocument?(v0, &demangling cache variable for type metadata for FlightSnippet.Leg?);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    _s10OmniSearch0B6ResultVWOhTm_1(v0, type metadata accessor for FlightSnippet.Leg);
  }
  return String.init<A>(describing:)();
}

void FlightReservation.leg.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Airport?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  v7 = type metadata accessor for FlightSnippet.Airport(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_2();
  v11 = (uint64_t *)(v10 - v9);
  v42 = type metadata accessor for FlightSnippet.Leg(0);
  v36 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_2_2();
  v14 = v13 - v12;
  type metadata accessor for JSONDecodingOptions();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Flight?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_44_11();
  v17 = type metadata accessor for FlightSnippet.Flight(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_2();
  v37 = v20 - v19;
  v21 = type metadata accessor for FlightReservation(0);
  v39 = v2;
  if (!*(_QWORD *)(v2 + *(int *)(v21 + 120) + 8))
  {
    OUTLINED_FUNCTION_12_25(v1, 1);
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for FlightSnippet.Flight?);
    OUTLINED_FUNCTION_13_27(a1, 1);
    goto LABEL_23;
  }
  v22 = v21;
  v41 = v7;
  swift_bridgeObjectRetain();
  JSONDecodingOptions.init()();
  lazy protocol witness table accessor for type FlightSnippet.Flight and conformance FlightSnippet.Flight();
  Message.init(jsonString:options:)();
  OUTLINED_FUNCTION_12_25(v1, 0);
  _s10OmniSearch13FlightSnippetV0C0VWObTm_0(v1, v37, type metadata accessor for FlightSnippet.Flight);
  v23 = *(_QWORD *)(v37 + *(int *)(v17 + 20));
  OUTLINED_FUNCTION_1_4();
  v24 = *(_QWORD *)(v23 + 160);
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
  {
    OUTLINED_FUNCTION_64();
    v34 = 1;
    v35 = a1;
    goto LABEL_22;
  }
  v26 = v24 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  v27 = (_QWORD *)(v39 + *(int *)(v22 + 80));
  v40 = *(_QWORD *)(v36 + 72);
  OUTLINED_FUNCTION_64();
  while (1)
  {
    outlined init with copy of FlightSnippet.Leg(v26, v14);
    v28 = *(_QWORD *)(v14 + *(int *)(v42 + 20))
        + OBJC_IVAR____TtCVV10OmniSearch13FlightSnippet3LegP33_1432903E5DFDE0C5F6864C747BE81CE313_StorageClass__departureAirport;
    OUTLINED_FUNCTION_1_4();
    outlined init with copy of FlightSnippet.Airport?(v28, v6);
    if (__swift_getEnumTagSinglePayload(v6, 1, v41) == 1)
    {
      *v11 = 0;
      v11[1] = 0xE000000000000000;
      v11[2] = 0;
      v11[3] = 0xE000000000000000;
      v11[4] = 0;
      v11[5] = 0xE000000000000000;
      v11[8] = 0;
      v11[9] = 0xE000000000000000;
      v11[11] = 0;
      v11[12] = 0;
      v11[10] = 0;
      v11[13] = 0xE000000000000000;
      v11[14] = 0;
      v11[15] = 0xE000000000000000;
      v11[16] = 0;
      v11[17] = 0xE000000000000000;
      v11[18] = 0;
      v11[19] = 0xE000000000000000;
      v11[20] = 0;
      v11[21] = 0xE000000000000000;
      v11[22] = 0;
      v11[23] = 0xE000000000000000;
      v11[24] = 0;
      v11[25] = 0xE000000000000000;
      v11[6] = 0;
      v11[7] = 0xE000000000000000;
      UnknownStorage.init()();
      outlined destroy of MobileSMSDocument?(v6, &demangling cache variable for type metadata for FlightSnippet.Airport?);
    }
    else
    {
      _s10OmniSearch13FlightSnippetV0C0VWObTm_0(v6, (uint64_t)v11, type metadata accessor for FlightSnippet.Airport);
    }
    v30 = *v11;
    v29 = v11[1];
    OUTLINED_FUNCTION_64();
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v11, type metadata accessor for FlightSnippet.Airport);
    v31 = v27[1];
    if (!v31)
    {
      OUTLINED_FUNCTION_6_1();
      goto LABEL_17;
    }
    if (v30 == *v27 && v31 == v29)
      break;
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_6_1();
    if ((v33 & 1) != 0)
      goto LABEL_21;
LABEL_17:
    _s10OmniSearch0B6ResultVWOhTm_1(v14, type metadata accessor for FlightSnippet.Leg);
    v26 += v40;
    if (!--v25)
    {
      v34 = 1;
      v35 = a1;
      goto LABEL_22;
    }
  }
  OUTLINED_FUNCTION_6_1();
LABEL_21:
  v35 = a1;
  _s10OmniSearch13FlightSnippetV0C0VWObTm_0(v14, a1, type metadata accessor for FlightSnippet.Leg);
  v34 = 0;
LABEL_22:
  OUTLINED_FUNCTION_13_27(v35, v34);
  OUTLINED_FUNCTION_6_1();
  _s10OmniSearch0B6ResultVWOhTm_1(v37, type metadata accessor for FlightSnippet.Flight);
LABEL_23:
  OUTLINED_FUNCTION_43_0();
}

void FlightSnippet.Leg.arrivalDateComponents.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_17();
  OUTLINED_FUNCTION_17_27();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_14_19();
  OUTLINED_FUNCTION_9_26();
  OUTLINED_FUNCTION_63();
}

void FlightSnippet.Leg.departureDateComponents.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_17();
  OUTLINED_FUNCTION_17_27();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_15_25();
  OUTLINED_FUNCTION_14_19();
  OUTLINED_FUNCTION_9_26();
  OUTLINED_FUNCTION_63();
}

unint64_t lazy protocol witness table accessor for type FlightSnippet.Flight and conformance FlightSnippet.Flight()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type FlightSnippet.Flight and conformance FlightSnippet.Flight;
  if (!lazy protocol witness table cache variable for type FlightSnippet.Flight and conformance FlightSnippet.Flight)
  {
    v1 = type metadata accessor for FlightSnippet.Flight(255);
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightSnippet.Flight, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Flight and conformance FlightSnippet.Flight);
  }
  return result;
}

uint64_t outlined init with copy of FlightSnippet.Leg(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlightSnippet.Leg(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of FlightSnippet.Airport?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Airport?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void _s10OmniSearch13FlightSnippetV0C0VWObTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_5();
}

void Date.flightComponents.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for Calendar();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v4 = *(_QWORD *)(type metadata accessor for Calendar.Component() - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2433505B0;
  v8 = v7 + v6;
  OUTLINED_FUNCTION_4_35(v8, *MEMORY[0x24BDCF288]);
  OUTLINED_FUNCTION_4_35(v8 + v5, *MEMORY[0x24BDCF240]);
  OUTLINED_FUNCTION_4_35(v8 + 2 * v5, *MEMORY[0x24BDCF250]);
  OUTLINED_FUNCTION_4_35(v8 + 3 * v5, *MEMORY[0x24BDCF220]);
  OUTLINED_FUNCTION_4_35(v8 + 4 * v5, *MEMORY[0x24BDCF230]);
  OUTLINED_FUNCTION_4_35(v8 + 5 * v5, *MEMORY[0x24BDCF258]);
  OUTLINED_FUNCTION_4_35(v8 + 6 * v5, *MEMORY[0x24BDCF260]);
  specialized Set.init(_nonEmptyArrayLiteral:)(v7);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  OUTLINED_FUNCTION_43_0();
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return type metadata accessor for FlightSnippet.Leg(0);
}

uint64_t OUTLINED_FUNCTION_4_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_13_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(v2 - 144));
}

void OUTLINED_FUNCTION_14_19()
{
  Date.flightComponents.getter();
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t OUTLINED_FUNCTION_18_17()
{
  return type metadata accessor for Date();
}

uint64_t static SearchToolLLMQU.openAppWhenRun.getter()
{
  return 0;
}

uint64_t static SearchToolLLMQU.isDiscoverable.getter()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolLLMQU.isDiscoverable;
}

uint64_t static SearchToolLLMQU.isDiscoverable.setter(char a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_6();
  static SearchToolLLMQU.isDiscoverable = a1;
  return result;
}

void static SearchToolLLMQU.isDiscoverable.modify()
{
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_5();
}

uint64_t static SearchToolLLMQU.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for title != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_37_13();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolLLMQU.title);
  return OUTLINED_FUNCTION_57_6(a1, v3, v2, *(uint64_t (**)(void))(*(_QWORD *)(v2 - 8) + 16));
}

void static SearchToolLLMQU.description.getter(uint64_t a1@<X8>)
{
  static SearchToolLLMQU.description.getter(&one-time initialization token for description, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SearchToolLLMQU.description, a1);
}

void static SearchToolLLMQU.description.setter(uint64_t a1)
{
  static SearchToolLLMQU.description.setter(a1, &one-time initialization token for description, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SearchToolLLMQU.description);
}

void static SearchToolLLMQU.description.modify()
{
  uint64_t v0;

  if (one-time initialization token for description != -1)
    swift_once();
  v0 = type metadata accessor for IntentDescription();
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolLLMQU.description);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolLLMQU.query.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchToolLLMQU.query : SearchToolLLMQU@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SearchToolLLMQU.query.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void key path setter for SearchToolLLMQU.query : SearchToolLLMQU()
{
  swift_bridgeObjectRetain();
  SearchToolLLMQU.query.setter();
}

void SearchToolLLMQU.query.setter()
{
  IntentParameter.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolLLMQU.query.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  v1[4] = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQU.$query.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQU.init()(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v5 = type metadata accessor for InputConnectionBehavior();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentDialog?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String.IntentInputOptions?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_32_4();
  v12 = OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_79_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<String>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_45_14();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v12);
  v14 = type metadata accessor for String.IntentInputOptions();
  v20[0] = 0;
  v20[1] = 0;
  OUTLINED_FUNCTION_49((uint64_t)v10, v15, v16, v14);
  v17 = type metadata accessor for IntentDialog();
  OUTLINED_FUNCTION_49(v2, v18, v19, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, *MEMORY[0x24BDB6090], v5);
  *a1 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchToolLLMQU.perform()(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchToolLLMQUResult?);
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[12] = v3;
  v2[13] = v4;
  return swift_task_switch();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t SearchToolLLMQU.perform()()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (one-time initialization token for stextension != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)static Logging.stextension);
  swift_retain_n();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v10 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    IntentParameter.wrappedValue.getter();
    OUTLINED_FUNCTION_50();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0[4], v0[5], &v10);
    v0[9] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_54_14();
    _os_log_impl(&dword_24315F000, v2, v3, "SearchTool LLM QU perform() with query: %s", v4, 0xCu);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_54_14();

  type metadata accessor for OmniSearchService();
  swift_retain();
  IntentParameter.wrappedValue.getter();
  swift_release();
  v7 = v0[2];
  v6 = v0[3];
  v0[15] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[16] = v8;
  *v8 = v0;
  v8[1] = SearchToolLLMQU.perform();
  return static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(v7, v6, 0, 1, 0, 0, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  char v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  _DWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  os_log_type_t v23;
  _DWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(NSObject **)(v0 + 112);
  v3 = OBJC_IVAR____TtC10OmniSearch10LLMQUParse_parseV2;
  OUTLINED_FUNCTION_28_18();
  MemoryCreationQUParse.attributes.getter();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_28_18();
  v37 = MemoryCreationQUParse.isTrip.getter();
  OUTLINED_FUNCTION_50();
  v36 = v1;
  OUTLINED_FUNCTION_28_18();
  v4 = MemoryCreationQUParse.isOpenEndedTimeRange.getter();
  OUTLINED_FUNCTION_50();
  swift_bridgeObjectRetain();
  v5 = v2;
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_106_3();
  v35 = v4;
  if (os_log_type_enabled(v2, v6))
  {
    v7 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v38 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v7 = 136315138;
    v8 = type metadata accessor for MemoryCreationQUParseAttributes();
    v9 = swift_bridgeObjectRetain();
    v10 = MEMORY[0x2494F5E4C](v9, v8);
    v12 = v11;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v38);
    *(_QWORD *)(v0 + 64) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_104_1();
    _os_log_impl(&dword_24315F000, v5, v6, "SearchTool LLM QU returns attributes: %s", v7, 0xCu);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_104_1();

  v14 = *(void **)(v0 + 112);
  Logger.logObject.getter();
  v15 = OUTLINED_FUNCTION_106_3();
  if (OUTLINED_FUNCTION_23_5(v15))
  {
    v16 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v38 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *v16 = 136315138;
    if ((v37 & 1) != 0)
      v17 = 1702195828;
    else
      v17 = 0x65736C6166;
    if ((v37 & 1) != 0)
      v18 = 0xE400000000000000;
    else
      v18 = 0xE500000000000000;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v38);
    *(_QWORD *)(v0 + 56) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_18(&dword_24315F000, v20, v21, "SearchTool LLM QU returns isTrip: %s");
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }

  v22 = *(void **)(v0 + 112);
  Logger.logObject.getter();
  v23 = OUTLINED_FUNCTION_106_3();
  if (OUTLINED_FUNCTION_23_5(v23))
  {
    v24 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v38 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *v24 = 136315138;
    if ((v4 & 1) != 0)
      v25 = 1702195828;
    else
      v25 = 0x65736C6166;
    if ((v4 & 1) != 0)
      v26 = 0xE400000000000000;
    else
      v26 = 0xE500000000000000;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v38);
    *(_QWORD *)(v0 + 48) = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_18(&dword_24315F000, v28, v29, "SearchTool LLM QU returns isOpenEndedTimeRange: %s");
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }

  v30 = *(char **)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 96);
  v32 = *(_QWORD *)(v36 + v3);
  v33 = *(void **)&v30[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_attributedParse];
  swift_retain();
  SearchToolLLMQUResult.init(parse:attributedString:isTrip:isOpenEndedTimeRange:)(v32, v33, v37 & 1, v35 & 1, v31);
  lazy protocol witness table accessor for type SearchToolLLMQUResult? and conformance <A> A?();
  static IntentResult.result<A>(value:)();

  outlined destroy of CustomStringConvertible?(v31, &demangling cache variable for type metadata for SearchToolLLMQUResult?);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

void SearchToolLLMQUResult.init(parse:attributedString:isTrip:isOpenEndedTimeRange:)(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88[3];

  v78 = a3;
  v79 = a4;
  v85 = a2;
  v80 = a1;
  v81 = a5;
  v88[1] = *(id *)MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_1();
  v73 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)v68 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_2();
  v71 = v15 - v14;
  v16 = type metadata accessor for IntentFile();
  v83 = *(_QWORD *)(v16 - 8);
  v84 = v16;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_18_1();
  v69 = v17;
  MEMORY[0x24BDAC7A8](v18);
  v82 = (char *)v68 - v19;
  v76 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v20 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_19_24();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_2();
  type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_79_4();
  v25 = OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = OUTLINED_FUNCTION_1_32();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_78_4();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v25);
  v30 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_49(v5, v31, v32, v30);
  DisplayRepresentation.init(title:subtitle:image:)();
  v75 = *(int *)(v29 + 20);
  v87 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int>);
  OUTLINED_FUNCTION_6_28();
  OUTLINED_FUNCTION_29_19();
  v33 = *MEMORY[0x24BDCD328];
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104);
  v34 = v76;
  v74(v6, v33, v76);
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_19_22();
  v77 = MEMORY[0x2494F42EC](v28);
  *(_QWORD *)(v8 + v75) = v77;
  v35 = *(int *)(v29 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  v68[1] = "mber of the response";
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_29_19();
  v74(v6, v33, v34);
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_19_22();
  v36 = MEMORY[0x2494F42B0](v28);
  v68[2] = v35;
  *(_QWORD *)(v8 + v35) = v36;
  v37 = v8;
  v86 = v8;
  v38 = v87;
  v75 = *(int *)(v87 + 28);
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_29_19();
  OUTLINED_FUNCTION_23_24();
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_19_22();
  v70 = MEMORY[0x2494F42B0](v28);
  *(_QWORD *)(v37 + v75) = v70;
  v75 = *(int *)(v38 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_29_19();
  OUTLINED_FUNCTION_23_24();
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_19_22();
  v39 = MEMORY[0x2494F42D4](v28);
  v40 = v86;
  *(_QWORD *)(v86 + v75) = v39;
  v75 = *(int *)(v87 + 36);
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_29_19();
  OUTLINED_FUNCTION_23_24();
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_19_22();
  v41 = MEMORY[0x2494F42D4](v28);
  *(_QWORD *)(v40 + v75) = v41;
  v88[0] = (id)3;
  EntityProperty.wrappedValue.setter();
  LOBYTE(v88[0]) = v78;
  EntityProperty.wrappedValue.setter();
  LOBYTE(v88[0]) = v79;
  EntityProperty.wrappedValue.setter();
  v42 = (void *)objc_opt_self();
  v88[0] = 0;
  v43 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v85, 1, v88);
  v44 = v88[0];
  if (v43)
  {
    v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v47 = v46;

    type metadata accessor for UTType();
    OUTLINED_FUNCTION_44_19(v71);
    outlined copy of Data._Representation(v45, v47);
    v48 = v82;
    IntentFile.init(data:filename:type:)();
    v49 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v50 = (uint64_t)v72;
    v51 = v48;
    v52 = v84;
    v49(v72, v51, v84);
    __swift_storeEnumTagSinglePayload(v50, 0, 1, v52);
    outlined init with copy of IntentFile?(v50, v73);
    EntityProperty.wrappedValue.setter();
    outlined destroy of CustomStringConvertible?(v50, &demangling cache variable for type metadata for IntentFile?);
    v59 = dispatch thunk of MemoryCreationQUParse.encode()();
    v61 = v60;
    OUTLINED_FUNCTION_44_19(v71);
    outlined copy of Data._Representation(v59, v61);
    v62 = v69;
    IntentFile.init(data:filename:type:)();
    v63 = (uint64_t)v72;
    v64 = v84;
    v49(v72, v62, v84);
    __swift_storeEnumTagSinglePayload(v63, 0, 1, v64);
    outlined init with copy of IntentFile?(v63, v73);
    EntityProperty.wrappedValue.setter();
    outlined destroy of CustomStringConvertible?(v63, &demangling cache variable for type metadata for IntentFile?);
    swift_release();

    outlined consume of Data._Representation(v59, v61);
    OUTLINED_FUNCTION_106_0();
    v65 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v65((uint64_t)v62, v64);
    v65((uint64_t)v82, v64);
    v66 = v81;
    outlined init with take of SearchToolLLMQUResult(v86, v81);
    v67 = 0;
  }
  else
  {
    v53 = v44;
    v54 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for search != -1)
      swift_once();
    v55 = type metadata accessor for Logger();
    __swift_project_value_buffer(v55, (uint64_t)static Logging.search);
    v56 = Logger.logObject.getter();
    v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_24315F000, v56, v57, "Unable to encode this NSAtributedString or LLMQUParse as Data", v58, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    swift_release();
    outlined destroy of SearchToolLLMQUResult(v86);
    v67 = 1;
    v66 = v81;
  }
  __swift_storeEnumTagSinglePayload(v66, v67, 1, v87);
  OUTLINED_FUNCTION_43_0();
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolLLMQU(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = protocol witness for AppIntent.perform() in conformance SearchToolLLMQU;
  return SearchToolLLMQU.perform()(a1);
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolLLMQU()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t protocol witness for static PersistentlyIdentifiable.persistentIdentifier.getter in conformance SearchToolLLMQU()
{
  lazy protocol witness table accessor for type SearchToolLLMQU and conformance SearchToolLLMQU();
  return static AppIntent.persistentIdentifier.getter();
}

void SearchToolLLMQUResult.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_19_24();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_32_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_78_4();
  v11 = OUTLINED_FUNCTION_37_13();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_79_4();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v11);
  v13 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_49(v1, v14, v15, v13);
  DisplayRepresentation.init(title:subtitle:image:)();
  v16 = (int *)OUTLINED_FUNCTION_1_32();
  v20 = v16[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int>);
  OUTLINED_FUNCTION_6_28();
  OUTLINED_FUNCTION_30_18();
  v17 = *MEMORY[0x24BDCD328];
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
  v19 = *MEMORY[0x24BDCD328];
  v18(v2, v17, v25);
  OUTLINED_FUNCTION_2_29();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v20) = MEMORY[0x2494F42EC](v3);
  v21 = v16[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_45_14();
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_30_18();
  v18(v2, v17, v25);
  OUTLINED_FUNCTION_2_29();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v21) = MEMORY[0x2494F42B0](v3);
  v22 = v16[7];
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_212_1(v2, v19);
  OUTLINED_FUNCTION_2_29();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v22) = MEMORY[0x2494F42B0](v3);
  v23 = v16[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_212_1(v2, v19);
  OUTLINED_FUNCTION_2_29();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v23) = MEMORY[0x2494F42D4](v3);
  v24 = v16[9];
  OUTLINED_FUNCTION_45_14();
  String.LocalizationValue.init(stringLiteral:)();
  OUTLINED_FUNCTION_30_18();
  OUTLINED_FUNCTION_212_1(v2, v19);
  OUTLINED_FUNCTION_2_29();
  OUTLINED_FUNCTION_19_22();
  *(_QWORD *)(a1 + v24) = MEMORY[0x2494F42D4](v3);
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_43_0();
}

void SearchToolLLMQUResult.isTrip.setter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_34_17();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolLLMQUResult.isOpenEndedTimeRange.setter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_34_17();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolLLMQUResult.version.setter()
{
  OUTLINED_FUNCTION_1_32();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void static SearchToolLLMQUResult.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  static SearchToolLLMQU.description.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t (*)(_QWORD))MEMORY[0x24BDB6200], (uint64_t)static SearchToolLLMQUResult.typeDisplayRepresentation, a1);
}

void static SearchToolLLMQU.description.getter(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolLLMQUResult.typeDisplayRepresentation.setter(uint64_t a1)
{
  static SearchToolLLMQU.description.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t (*)(_QWORD))MEMORY[0x24BDB6200], (uint64_t)static SearchToolLLMQUResult.typeDisplayRepresentation);
}

void static SearchToolLLMQU.description.setter(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*a2 != -1)
    swift_once();
  v7 = a3(0);
  v8 = __swift_project_value_buffer(v7, a4);
  OUTLINED_FUNCTION_2_4();
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolLLMQUResult.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolLLMQUResult.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolLLMQUResult.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_25();
  return OUTLINED_FUNCTION_57_6(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t SearchToolLLMQUResult.displayRepresentation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_25();
  return OUTLINED_FUNCTION_57_6(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*SearchToolLLMQUResult.displayRepresentation.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchToolLLMQUResult.version.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_32();
  EntityProperty.wrappedValue.getter();
  return v1;
}

void SearchToolLLMQUResult.version.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_32();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.$version.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQUResult.encodedMemoryCreationQUParse.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQUResult.encodedMemoryCreationQUParse.setter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_35_14();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.encodedMemoryCreationQUParse.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_32();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.$encodedMemoryCreationQUParse.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQUResult.encodedParse.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_5();
}

void key path setter for SearchToolLLMQUResult.encodedMemoryCreationQUParse : SearchToolLLMQUResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_1();
  outlined init with copy of IntentFile?(a1, v5);
  a5(v5);
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.encodedParse.setter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_35_14();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.encodedParse.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_32();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.$encodedParse.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQUResult.isTrip.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolLLMQUResult.isTrip.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_32();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.$isTrip.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_5();
}

void SearchToolLLMQUResult.isOpenEndedTimeRange.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolLLMQUResult.isOpenEndedTimeRange.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  OUTLINED_FUNCTION_1_32();
  v1[4] = OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_12();
}

void SearchToolLLMQUResult.$isOpenEndedTimeRange.getter()
{
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_5();
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
  return static TransientAppEntity.defaultQuery.getter();
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

unint64_t lazy protocol witness table accessor for type SearchToolLLMQUResult? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type SearchToolLLMQUResult? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type SearchToolLLMQUResult? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for SearchToolLLMQUResult?);
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
    v3 = v2;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6690], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolLLMQUResult? and conformance <A> A?);
  }
  return result;
}

uint64_t type metadata accessor for SearchToolLLMQUResult()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SearchToolLLMQUResult;
  if (!type metadata singleton initialization cache for SearchToolLLMQUResult)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined destroy of SearchToolLLMQUResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchToolLLMQUResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of SearchToolLLMQUResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchToolLLMQUResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type SearchToolLLMQU and conformance SearchToolLLMQU()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU;
  if (!lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolLLMQU, &type metadata for SearchToolLLMQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU;
  if (!lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolLLMQU, &type metadata for SearchToolLLMQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU;
  if (!lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolLLMQU, &type metadata for SearchToolLLMQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolLLMQU and conformance SearchToolLLMQU);
  }
  return result;
}

uint64_t associated type witness table accessor for AppIntent.PerformResult : IntentResult in SearchToolLLMQU()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t associated type witness table accessor for AppIntent.SummaryContent : ParameterSummary in SearchToolLLMQU()
{
  lazy protocol witness table accessor for type SearchToolLLMQU and conformance SearchToolLLMQU();
  return swift_getOpaqueTypeConformance2();
}

void base witness table accessor for AppEntity in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for AppValue in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for DisplayRepresentable in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for Identifiable in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<SearchToolLLMQUResult> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<SearchToolLLMQUResult>);
}

void base witness table accessor for PersistentlyIdentifiable in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for TypeDisplayRepresentable in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for _IntentValue in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void base witness table accessor for InstanceDisplayRepresentable in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchToolLLMQUResult> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SearchToolLLMQUResult>);
}

void base witness table accessor for CustomLocalizedStringResourceConvertible in SearchToolLLMQUResult()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchToolLLMQUResult and conformance SearchToolLLMQUResult, (void (*)(uint64_t))type metadata accessor for SearchToolLLMQUResult);
}

void sub_2432F30F0(uint64_t *a1@<X8>)
{
  *a1 = SearchToolLLMQUResult.version.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432F3114()
{
  SearchToolLLMQUResult.version.setter();
  OUTLINED_FUNCTION_5();
}

void sub_2432F3134()
{
  SearchToolLLMQUResult.encodedMemoryCreationQUParse.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432F3150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolLLMQUResult.encodedMemoryCreationQUParse : SearchToolLLMQUResult(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolLLMQUResult.encodedMemoryCreationQUParse.setter);
}

void sub_2432F316C()
{
  SearchToolLLMQUResult.encodedParse.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2432F3188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolLLMQUResult.encodedMemoryCreationQUParse : SearchToolLLMQUResult(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolLLMQUResult.encodedParse.setter);
}

void sub_2432F31A4(_BYTE *a1@<X8>)
{
  char v2;

  SearchToolLLMQUResult.isTrip.getter();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_5();
}

void sub_2432F31CC()
{
  SearchToolLLMQUResult.isTrip.setter();
  OUTLINED_FUNCTION_5();
}

void sub_2432F31EC(_BYTE *a1@<X8>)
{
  char v2;

  SearchToolLLMQUResult.isOpenEndedTimeRange.getter();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_5();
}

void sub_2432F3214()
{
  SearchToolLLMQUResult.isOpenEndedTimeRange.setter();
  OUTLINED_FUNCTION_5();
}

ValueMetadata *type metadata accessor for SearchToolLLMQU()
{
  return &type metadata for SearchToolLLMQU;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchToolLLMQUResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for DisplayRepresentation();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for SearchToolLLMQUResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SearchToolLLMQUResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SearchToolLLMQUResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SearchToolLLMQUResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for SearchToolLLMQUResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for DisplayRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchToolLLMQUResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2432F3660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_17_25();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchToolLLMQUResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432F36E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_17_25();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
}

uint64_t type metadata completion function for SearchToolLLMQUResult()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DisplayRepresentation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2432F37C4()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type IntentResultContainer<SearchToolLLMQUResult?, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>, &demangling cache variable for type metadata for IntentResultContainer<SearchToolLLMQUResult?, Never, Never, Never>);
}

uint64_t OUTLINED_FUNCTION_1_32()
{
  return type metadata accessor for SearchToolLLMQUResult();
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_20()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_19_24()
{
  return type metadata accessor for Locale();
}

uint64_t OUTLINED_FUNCTION_23_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

void OUTLINED_FUNCTION_26_18(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  return static Locale.current.getter();
}

uint64_t OUTLINED_FUNCTION_30_18()
{
  return static Locale.current.getter();
}

uint64_t OUTLINED_FUNCTION_31_18()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_34_17()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_35_14()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of IntentFile?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_37_13()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_44_19(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_48_12()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_54_14()
{
  return swift_release_n();
}

uint64_t ECRClient.__allocating_init()()
{
  swift_allocObject();
  return ECRClient.init()();
}

uint64_t ECRClientPersonResult.personNames.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ECRClientPersonResult.personNames.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t ECRClientPersonResult.personIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ECRClientPersonResult.personIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ECRClientPersonResult.personIDs.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t ECRClientPersonResult.init()()
{
  return 0;
}

uint64_t ECRClient.view.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ECRClient.init()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = v0;
  type metadata accessor for ViewService();
  v2 = (void *)static ViewService.clientService.getter();
  v3 = ViewService.visualIdentifierView()();

  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t type metadata accessor for ECRClient()
{
  return objc_opt_self();
}

uint64_t ECRClient.personNameAndVisualIdentifiersWithText(_:allowPrefixSearch:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  Swift::Int *v42;
  Swift::Int v43;
  Swift::Int v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  Swift::Int v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  unint64_t v72;
  void *v73;
  id v74;
  uint64_t v75[2];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = v3;
  v6 = a2;
  v7 = a1;
  v77 = a1;
  v78 = a2;
  swift_bridgeObjectRetain();
  if ((a3 & 1) == 0)
  {
    v8._countAndFlagsBits = 32;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
    v7 = v77;
    v6 = v78;
  }
  objc_allocWithZone(MEMORY[0x24BE584E0]);
  swift_bridgeObjectRetain();
  v9 = @nonobjc GDEntityResolutionRequest.init(text:entityClassFilter:spans:mode:constraint:includeInferredNames:)(v7, v6, (uint64_t)&outlined read-only object #0 of ECRClient.personNameAndVisualIdentifiersWithText(_:allowPrefixSearch:), 0, 3, 0, 1);
  v10 = objc_allocWithZone((Class)type metadata accessor for EntityResolutionTextClient());
  v11 = EntityResolutionTextClient.init(for:viaXPC:warmup:)();
  if (v4)
  {

    OUTLINED_FUNCTION_6_1();
    return v6;
  }
  v12 = (void *)v11;
  v14 = dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forRequest:)();
  if (one-time initialization token for memoryCreationQU != -1)
LABEL_49:
    swift_once();
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logging.memoryCreationQU);
  v16 = (uint64_t *)(id)v14;
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.debug.getter();
  v57 = v9;
  v56 = v12;
  v58 = v16;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)v19 = 136315138;
    v20 = v16;
    v21 = objc_msgSend(v20, sel_description, v12, v9);
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v24 = v23;

    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v17, v18, "Fetched ECR result: %s", v19, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  v79 = MEMORY[0x24BEE4B08];
  v76 = MEMORY[0x24BEE4B08];
  v25 = objc_msgSend(v16, sel_rankedResults);
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for GDRankerResult);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v61 = v14;
  if (v14 >> 62)
  {
    OUTLINED_FUNCTION_4_7();
    v26 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_36_0();
    if (v26)
      goto LABEL_12;
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v79 + 16) || *(_QWORD *)(v76 + 16))
    {
      specialized _copyCollectionToContiguousArray<A>(_:)(v79);
      v6 = v54;
      OUTLINED_FUNCTION_80_0();
      v55 = OUTLINED_FUNCTION_4_7();
      specialized _copyCollectionToContiguousArray<A>(_:)(v55);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      OUTLINED_FUNCTION_80_0();
      OUTLINED_FUNCTION_36_0();

      return 1;
    }
    return v6;
  }
  v26 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
    goto LABEL_51;
LABEL_12:
  v27 = 0;
  v63 = v14 & 0xC000000000000001;
  v59 = (uint64_t *)(v14 + 32);
  v60 = v14 & 0xFFFFFFFFFFFFFF8;
  v12 = (void *)MEMORY[0x24BEE0D00];
  v62 = v26;
  while (1)
  {
    if (v63)
    {
      v28 = (id)MEMORY[0x2494F62E4](v27, v61);
    }
    else
    {
      if (v27 >= *(_QWORD *)(v60 + 16))
        goto LABEL_48;
      v28 = (id)v59[v27];
    }
    v29 = v28;
    v30 = __OFADD__(v27, 1);
    v31 = v27 + 1;
    if (v30)
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v14 = (unint64_t)objc_msgSend(v28, sel_rankedItems, v56, v57);
    type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for GDRankerItem);
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v65 = v29;
    v66 = v31;
    if (v32 >> 62)
      break;
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v33)
      goto LABEL_20;
LABEL_41:

    OUTLINED_FUNCTION_6_1();
    v27 = v66;
    if (v66 == v62)
      goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  v33 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_6_1();
  if (!v33)
    goto LABEL_41;
LABEL_20:
  v34 = 0;
  v71 = *(id *)(v64 + 16);
  v72 = v32 & 0xC000000000000001;
  v67 = v32 + 32;
  v68 = v32 & 0xFFFFFFFFFFFFFF8;
  v69 = v33;
  v70 = v32;
  while (1)
  {
    if (v72)
    {
      v35 = (id)MEMORY[0x2494F62E4](v34, v32);
    }
    else
    {
      if (v34 >= *(_QWORD *)(v68 + 16))
        goto LABEL_46;
      v35 = *(id *)(v67 + 8 * v34);
    }
    v9 = v35;
    v30 = __OFADD__(v34++, 1);
    if (v30)
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    result = outlined bridged method (ob) of @objc GDEntityIdentifier.stringValue.getter(objc_msgSend(v35, sel_entityID));
    if (!v36)
      break;
    v14 = (unint64_t)v36;
    v37 = (void *)MEMORY[0x2494F5BB8](result);
    OUTLINED_FUNCTION_36_0();
    v38 = objc_msgSend(v71, sel_personForIdentifier_, v37);

    if (v38)
    {
      v74 = v9;
      v39 = objc_msgSend(v38, sel_names);
      v40 = OUTLINED_FUNCTION_3_26();

      v41 = *(_QWORD *)(v40 + 16);
      if (v41)
      {
        v42 = (Swift::Int *)(v40 + 40);
        do
        {
          v43 = *(v42 - 1);
          v44 = *v42;
          swift_bridgeObjectRetain();
          v14 = (unint64_t)&v79;
          specialized Set._Variant.insert(_:)(v75, v43, v44);
          swift_bridgeObjectRelease();
          v42 += 2;
          --v41;
        }
        while (v41);
      }
      OUTLINED_FUNCTION_80_0();
      v73 = v38;
      v45 = objc_msgSend(v38, sel_visualIdentifiers);
      v46 = OUTLINED_FUNCTION_3_26();

      v47 = *(_QWORD *)(v46 + 16);
      if (v47)
      {
        lazy protocol witness table accessor for type String and conformance String();
        v48 = (uint64_t *)(v46 + 40);
        do
        {
          v49 = *v48;
          v75[0] = *(v48 - 1);
          v75[1] = v49;
          v14 = (unint64_t)v75;
          v50 = (_QWORD *)StringProtocol.components<A>(separatedBy:)();
          if (v50[2])
          {
            v51 = v50[4];
            v52 = v50[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v53 = HIBYTE(v52) & 0xF;
            if ((v52 & 0x2000000000000000) == 0)
              v53 = v51 & 0xFFFFFFFFFFFFLL;
            if (v53)
            {
              v14 = (unint64_t)&v76;
              specialized Set._Variant.insert(_:)(v75, v51, v52);
            }
          }
          swift_bridgeObjectRelease();
          v48 += 2;
          --v47;
        }
        while (v47);
      }

      swift_bridgeObjectRelease();
      v33 = v69;
      v32 = v70;
      v9 = v74;
    }

    if (v34 == v33)
      goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t ECRClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ECRClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ECRClientProtocol.personNameAndVisualIdentifiersWithText(_:allowPrefixSearch:) in conformance ECRClient()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

id @nonobjc GDEntityResolutionRequest.init(text:entityClassFilter:spans:mode:constraint:includeInferredNames:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v7;
  void *v8;
  void *v14;
  NSArray v15;
  NSArray v16;
  id v17;

  v8 = v7;
  v14 = (void *)MEMORY[0x2494F5BB8]();
  swift_bridgeObjectRelease();
  if (!a3)
  {
    v15.super.isa = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v16.super.isa = 0;
    goto LABEL_6;
  }
  v15.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for NSValue);
  v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  v17 = objc_msgSend(v8, sel_initWithText_entityClassFilter_spans_mode_constraint_includeInferredNames_, v14, v15.super.isa, v16.super.isa, a5, a6, a7 & 1);

  return v17;
}

uint64_t outlined bridged method (ob) of @objc GDEntityIdentifier.stringValue.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_stringValue);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t destroy for ECRClientPersonResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for ECRClientPersonResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_7();
  return a1;
}

_QWORD *assignWithCopy for ECRClientPersonResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ECRClientPersonResult(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ECRClientPersonResult(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ECRClientPersonResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ECRClientPersonResult()
{
  return &type metadata for ECRClientPersonResult;
}

uint64_t dispatch thunk of ECRClientProtocol.personNameAndVisualIdentifiersWithText(_:allowPrefixSearch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for ECRClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ECRClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ECRClient.personNameAndVisualIdentifiersWithText(_:allowPrefixSearch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

void RegexRouterPlusParser.init()(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Locale();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_70();
  RegexRouter.init()(a1);
  v4 = *(int *)(type metadata accessor for RegexRouterPlusParser(0) + 20);
  Locale.init(identifier:)();
  type metadata accessor for LocalParser();
  swift_allocObject();
  *(uint64_t *)((char *)a1 + v4) = LocalParser.init(testing:locale:)(0, v1);
  OUTLINED_FUNCTION_12();
}

uint64_t RequestRouting.guessLogged(for:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_14_21();
  v0[13] = v1;
  v0[14] = v2;
  v0[12] = v3;
  OUTLINED_FUNCTION_13_28(v3, v1, v2, v4, v5);
  v6 = (_QWORD *)swift_task_alloc();
  v0[15] = v6;
  v7 = OUTLINED_FUNCTION_38_5(v6);
  return OUTLINED_FUNCTION_30_6(v7, v8, v9, v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  if (one-time initialization token for search != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.info.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 112);
  if (v8)
  {
    v18 = *(_QWORD *)(v0 + 104);
    v19 = v1;
    v10 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v20 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 48) = v19;
    *(_BYTE *)(v0 + 56) = v2;
    *(_QWORD *)(v0 + 64) = v4;
    *(_QWORD *)(v0 + 72) = v3;
    swift_bridgeObjectRetain();
    v11 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v20);
    *(_QWORD *)(v0 + 80) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_102_0();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v9, &v20);
    *(_QWORD *)(v0 + 88) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v6, v7, "RequestRouter: %s for query: '%s'", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();

  v15 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)v15 = v1;
  *(_BYTE *)(v15 + 8) = v2;
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = v3;
  v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v16();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void QueryGuess.sources.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *QueryGuess.sources.setter(_QWORD *result)
{
  _QWORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*QueryGuess.sources.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t QueryGuess.isExpectingAnswer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t QueryGuess.isExpectingAnswer.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*QueryGuess.isExpectingAnswer.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t QueryGuess.info.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void QueryGuess.info.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*QueryGuess.info.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t default argument 2 of QueryGuess.init(sources:isExpectingAnswer:info:)()
{
  return 0;
}

OmniSearch::QueryGuess __swiftcall QueryGuess.init(sources:isExpectingAnswer:info:)(OmniSearch::SearchSources sources, Swift::Bool isExpectingAnswer, Swift::String info)
{
  uint64_t v3;
  OmniSearch::QueryGuess result;

  *(_QWORD *)v3 = *(_QWORD *)sources.rawValue;
  *(_BYTE *)(v3 + 8) = isExpectingAnswer;
  *(Swift::String *)(v3 + 16) = info;
  result.info = info;
  result.sources = sources;
  result.isExpectingAnswer = isExpectingAnswer;
  return result;
}

uint64_t RegexRouter.kResultsSourceRegex.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RegexRouter.kProbablyAnswerSeekingRegex.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

Swift::String_optional __swiftcall RegexRouter.resultsMatch(query:)(Swift::String query)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _DWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  uint64_t v38;
  void *v39;
  Swift::String_optional result;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _DWORD *v46;
  Swift::String v47;
  uint64_t v48;
  void *object;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;

  v47 = query;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>.Match?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>.Match);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v45 = (uint64_t)&v41 - v17;
  v18 = *v1;
  v19 = *(_QWORD *)(*v1 + 16);
  if (v19)
  {
    v41 = v9;
    v42 = v6;
    v43 = v11;
    v44 = v18;
    v48 = v5;
    v20 = v18 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v46 = *(_DWORD **)(v16 + 72);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v22 = v45;
    while (1)
    {
      v21(v22, v20, v12);
      v50 = v47;
      Regex.ignoresCase(_:)();
      lazy protocol witness table accessor for type String and conformance String();
      lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
      BidirectionalCollection<>.firstMatch<A, B>(of:)();
      OUTLINED_FUNCTION_20_21((uint64_t)v15);
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v48) != 1)
        break;
      OUTLINED_FUNCTION_20_21(v22);
      outlined destroy of Regex<Substring>.Match?((uint64_t)v4);
      v20 += (uint64_t)v46;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    v25 = v42;
    v26 = v43;
    v27 = v48;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v43, v4, v48);
    if (one-time initialization token for search != -1)
      swift_once();
    v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logging.search);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v41, v26, v27);
    v29 = Logger.logObject.getter();
    v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v47._object = (void *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      object = v47._object;
      *v31 = 136315138;
      v46 = v31 + 1;
      v47._countAndFlagsBits = (uint64_t)v31;
      swift_getKeyPath();
      Regex.Match.subscript.getter();
      swift_release();
      v32 = MEMORY[0x2494F5C48](v50._countAndFlagsBits, v50._object, v51, v52);
      v34 = v33;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, (uint64_t *)&object);
      v50._countAndFlagsBits = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_30_17();
      _os_log_impl(&dword_24315F000, v29, v30, "RegexRouter - hit results match: '%s'", (uint8_t *)v47._countAndFlagsBits, 0xCu);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }
    v36 = *(void (**)(char *, uint64_t))(v25 + 8);
    OUTLINED_FUNCTION_30_17();

    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    v23 = MEMORY[0x2494F5C48](v50._countAndFlagsBits, v50._object, v51, v52);
    v24 = v37;
    swift_bridgeObjectRelease();
    v36(v26, v27);
    OUTLINED_FUNCTION_20_21(v45);
  }
  else
  {
LABEL_6:
    v23 = 0;
    v24 = 0;
  }
  v38 = v23;
  v39 = v24;
  result.value._object = v39;
  result.value._countAndFlagsBits = v38;
  return result;
}

OmniSearch::QueryGuess __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RegexRouter.guess(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  void *v10;
  char v11;
  Swift::Int v12;
  Swift::Bool v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[2];
  OmniSearch::QueryGuess result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = v1;
  type metadata accessor for RegexRouter(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9._countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  v10 = RegexRouter.resultsMatch(query:)(v9).value._object;
  swift_bridgeObjectRelease();
  outlined init with copy of RegexRouter(v2, (uint64_t)v8);
  if (v10)
  {
    v17[0] = countAndFlagsBits;
    v17[1] = object;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    lazy protocol witness table accessor for type String and conformance String();
    lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
    v11 = BidirectionalCollection<>.contains<A>(_:)();
    v12 = outlined destroy of RegexRouter((uint64_t)v8);
    v16 = 1;
  }
  else
  {
    v12 = outlined destroy of RegexRouter((uint64_t)v8);
    if (one-time initialization token for all != -1)
      v12 = swift_once();
    v16 = static SearchSources.all;
    v11 = 1;
  }
  *(_QWORD *)v5 = v16;
  *(_BYTE *)(v5 + 8) = v11 & 1;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  result.info._object = v15;
  result.info._countAndFlagsBits = v14;
  result.sources.rawValue = v12;
  result.isExpectingAnswer = v13;
  return result;
}

uint64_t RegexRouter.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Regex<Substring>>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_243351440;
  OUTLINED_FUNCTION_0_34();
  OUTLINED_FUNCTION_0_34();
  OUTLINED_FUNCTION_0_34();
  OUTLINED_FUNCTION_0_34();
  OUTLINED_FUNCTION_0_34();
  OUTLINED_FUNCTION_0_34();
  *a1 = v5;
  type metadata accessor for RegexRouter(0);
  OUTLINED_FUNCTION_0_34();
  Regex.ignoresCase(_:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

uint64_t type metadata accessor for RegexRouterPlusParser(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for RegexRouterPlusParser);
}

uint64_t protocol witness for RequestRouting.guess(for:) in conformance RegexRouter(int a1, Swift::String a2)
{
  uint64_t v2;

  RegexRouter.guess(for:)(a2);
  return protocol witness for RequestRouting.guess(for:) in conformance RegexRouter(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t RegexRouterPlusParser.regexRouter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of RegexRouter(v1, a1);
}

uint64_t RegexRouterPlusParser.localParser.getter()
{
  type metadata accessor for RegexRouterPlusParser(0);
  return swift_retain();
}

uint64_t RegexRouterPlusParser.guess(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[17] = type metadata accessor for RegexRouter(0);
  v4[18] = swift_task_alloc();
  return OUTLINED_FUNCTION_14();
}

uint64_t RegexRouterPlusParser.guess(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t (*v12)(void);

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  object = RegexRouter.resultsMatch(query:)(*(Swift::String *)(v0 + 112)).value._object;
  swift_bridgeObjectRelease();
  outlined init with copy of RegexRouter(v2, v1);
  if (object)
  {
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 120);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    lazy protocol witness table accessor for type String and conformance String();
    lazy protocol witness table accessor for type Regex<Substring> and conformance Regex<A>();
    v5 = BidirectionalCollection<>.contains<A>(_:)();
    outlined destroy of RegexRouter(v4);
    v6 = 1;
  }
  else
  {
    outlined destroy of RegexRouter(*(_QWORD *)(v0 + 144));
    if (one-time initialization token for all != -1)
      swift_once();
    v6 = static SearchSources.all;
    v5 = 1;
  }
  v7 = v5 & 1;
  *(_BYTE *)(v0 + 169) = v5 & 1;
  *(_QWORD *)(v0 + 152) = v6;
  *(_BYTE *)(v0 + 168) = v5 & 1;
  *(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag;
  *(_QWORD *)(v0 + 48) = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
  *(_BYTE *)(v0 + 16) = 1;
  v8 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if ((v8 & 1) != 0 && (v6 & 2) != 0)
  {
    type metadata accessor for RegexRouterPlusParser(0);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = RegexRouterPlusParser.guess(for:);
    return LocalParser.guess(for:)(v0 + 56, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)v11 = v6;
    *(_BYTE *)(v11 + 8) = v7;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0xE000000000000000;
    swift_task_dealloc();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return v12();
  }
}

{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 80);
  if ((v1 & 2) != 0)
  {
    swift_bridgeObjectRelease();
    v3 = 0;
    v1 = *(_QWORD *)(v0 + 152);
    v2 = 0xE000000000000000;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRelease();
  }
  v4 = *(_BYTE *)(v0 + 169);
  v5 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)v5 = v1;
  *(_BYTE *)(v5 + 8) = v4;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  swift_task_dealloc();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v6();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = *(_BYTE *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 152);
  *(_BYTE *)(v2 + 8) = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0xE000000000000000;
  swift_task_dealloc();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_43(v3);
}

uint64_t protocol witness for RequestRouting.guess(for:) in conformance RegexRouterPlusParser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return RegexRouterPlusParser.guess(for:)(a1, a2, a3);
}

uint64_t type metadata accessor for RegexRouter(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for RegexRouter);
}

uint64_t outlined destroy of Regex<Substring>.Match?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>.Match?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of RegexRouter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RegexRouter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RegexRouter(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RegexRouter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for QueryGuess()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QueryGuess(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QueryGuess(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryGuess(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryGuess(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryGuess(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryGuess()
{
  return &type metadata for QueryGuess;
}

uint64_t dispatch thunk of RequestRouting.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RequestRouting.guess(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_14_21();
  OUTLINED_FUNCTION_13_28(v1, v2, v3, v4, v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v6;
  v7 = OUTLINED_FUNCTION_38_5(v6);
  return OUTLINED_FUNCTION_30_6(v7, v8, v9, v10, v11, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for RegexRouter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t destroy for RegexRouter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for RegexRouter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for RegexRouter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for RegexRouter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for RegexRouter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegexRouter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2432F5C8C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_102_2(*a1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_33_2((uint64_t)a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for RegexRouter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432F5CF4(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_32_2((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

void type metadata completion function for RegexRouter()
{
  unint64_t v0;

  type metadata accessor for Regex<Substring>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Regex<Substring>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Regex<Substring>)
  {
    v0 = type metadata accessor for Regex();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Regex<Substring>);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RegexRouterPlusParser(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(type metadata accessor for RegexRouter(0) + 20);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return v7;
}

uint64_t destroy for RegexRouterPlusParser(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_release();
}

_QWORD *initializeWithCopy for RegexRouterPlusParser(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for RegexRouterPlusParser(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for RegexRouterPlusParser(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *assignWithTake for RegexRouterPlusParser(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for RegexRouter(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegexRouterPlusParser()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2432F6188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RegexRouter(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_33_2(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_102_2(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    OUTLINED_FUNCTION_12();
  }
}

uint64_t storeEnumTagSinglePayload for RegexRouterPlusParser()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2432F61F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for RegexRouter(0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_32_2(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
}

uint64_t type metadata completion function for RegexRouterPlusParser()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RegexRouter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t protocol witness for RequestRouting.guess(for:) in conformance RegexRouter(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return Regex.init(_regexString:version:)();
}

uint64_t OUTLINED_FUNCTION_13_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return *(unsigned int *)(*(_QWORD *)(a5 + 16) + 4);
}

uint64_t OUTLINED_FUNCTION_20_21(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void IntentFileItem.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_46_14();
  MEMORY[0x2494F5C60](33);
  v7 = v3;
  v8 = v4;
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_12_26(23, v0);
  type metadata accessor for IntentFileItem();
  v1 = URL.absoluteString.getter();
  v5 = MEMORY[0x24BEE0D00];
  v6 = MEMORY[0x24BEE0D70];
  v3 = v1;
  v4 = v2;
  OUTLINED_FUNCTION_3_27((uint64_t)&v3);
  outlined destroy of MobileSMSDocument?((uint64_t)&v3, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_34_18();
}

void AppEntityItem.llmConsumableDescription.getter()
{
  uint64_t v0;
  _QWORD v1[7];

  OUTLINED_FUNCTION_46_14();
  MEMORY[0x2494F5C60](61);
  v1[5] = v1[0];
  v1[6] = v1[1];
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_12_26(28, v0);
  OUTLINED_FUNCTION_91_8();
  OUTLINED_FUNCTION_3_27((uint64_t)v1);
  OUTLINED_FUNCTION_76_1((uint64_t)v1);
  OUTLINED_FUNCTION_88_7(0x70797420646E6120, 0x44492065u);
  OUTLINED_FUNCTION_91_8();
  OUTLINED_FUNCTION_3_27((uint64_t)v1);
  OUTLINED_FUNCTION_76_1((uint64_t)v1);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_19_25();
}

uint64_t SearchResultItem.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  SearchResultItem.associatedValue.getter();
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

void EmailDocument.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33_15();
  MEMORY[0x2494F5C60](86);
  OUTLINED_FUNCTION_39_18(0x7266206C69616D45, 28015);
  if (*(_QWORD *)(*(_QWORD *)(v0 + 72) + 16))
  {
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v4 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_36(v4, v5);
    OUTLINED_FUNCTION_24_19(v6, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_61_12(544497952);
  v7 = type metadata accessor for EmailDocument(0);
  v8 = v0 + *(int *)(v7 + 48);
  v9 = OUTLINED_FUNCTION_78_10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v1, v8, v9);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v9);
  LLMFormatter.StringInterpolation.appendInterpolation(date:)(v1);
  outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_39_18(0x63656A627553202ELL, 14964);
  if (!*(_QWORD *)(v2 + 40))
    OUTLINED_FUNCTION_41_13();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_24_19(v10, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_43_16();
  if (!*(_QWORD *)(v2 + 56))
    OUTLINED_FUNCTION_41_13();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_24_19(v11, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  if (*(_QWORD *)(v2 + *(int *)(v7 + 72)))
    DataDetectorResults.description.getter();
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_86_14();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(0xD000000000000017, v12, v13);
  OUTLINED_FUNCTION_24_19(v14, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_12_0();
}

void MobileSMSDocument.llmConsumableDescription.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  _QWORD *v49;
  _QWORD *v50[2];
  Swift::String v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  type metadata accessor for Photo(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Photo)?);
  OUTLINED_FUNCTION_15();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50[0] = (_QWORD **)((char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD **)((char *)v50 - v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v12 = v11 - v10;
  OUTLINED_FUNCTION_31_19();
  MEMORY[0x2494F5C60](118);
  OUTLINED_FUNCTION_74_14();
  OUTLINED_FUNCTION_56_3(0xD000000000000015, (uint64_t)"A message created on ");
  v13 = (int *)type metadata accessor for MobileSMSDocument(0);
  LLMFormatter.StringInterpolation.appendInterpolation(date:)((uint64_t)v1 + v13[10]);
  OUTLINED_FUNCTION_39_18(0x6220746E6553202ELL, 14969);
  v14 = MEMORY[0x24BEE0D00];
  v15 = MEMORY[0x24BEE0D70];
  if (*(_QWORD *)(v1[8] + 16))
  {
    v52 = v1[8];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v16 = OUTLINED_FUNCTION_45_15();
    *(_QWORD *)&v54 = v14;
    *((_QWORD *)&v54 + 1) = v15;
    v52 = v16;
    *(_QWORD *)&v53 = v17;
    OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_20_22(v18, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  v19._countAndFlagsBits = 0x766965636552202ELL;
  v19._object = (void *)0xEE00207962206465;
  String.append(_:)(v19);
  if (*(_QWORD *)(v1[9] + 16))
  {
    v52 = v1[9];
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v20 = OUTLINED_FUNCTION_45_15();
    *(_QWORD *)&v54 = v14;
    *((_QWORD *)&v54 + 1) = v15;
    v52 = v20;
    *(_QWORD *)&v53 = v21;
    OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_20_22(v22, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_43_16();
  v23 = v1[7];
  if (v23)
  {
    v24 = v1[6];
    *(_QWORD *)&v54 = v14;
    *((_QWORD *)&v54 + 1) = v15;
    v52 = v24;
    *(_QWORD *)&v53 = v23;
  }
  else
  {
    OUTLINED_FUNCTION_15_26();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v25, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  outlined init with copy of URL?((uint64_t)v1 + v13[12], v12);
  v26 = type metadata accessor for URL();
  OUTLINED_FUNCTION_26_7(v12);
  if (v27)
  {
    outlined destroy of MobileSMSDocument?(v12, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_40_13();
  }
  else
  {
    *(_QWORD *)&v54 = v26;
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    v29 = OUTLINED_FUNCTION_35_15(v28);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v29, v12, v26);
  }
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(978080341, (void *)0xE400000000000000, (uint64_t)&v52);
  OUTLINED_FUNCTION_20_22(v30, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  v31 = (char *)v2 + v13[14];
  if (*(_QWORD *)v31)
  {
    v52 = *(_QWORD *)v31;
    v53 = *(_OWORD *)(v31 + 8);
    v54 = *(_OWORD *)(v31 + 24);
    DataDetectorResults.description.getter();
  }
  OUTLINED_FUNCTION_15_26();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(0xD000000000000017, (void *)0x800000024335F6B0, (uint64_t)&v52);
  OUTLINED_FUNCTION_20_22(v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  v33 = static LLMFormatter.sanitize(_:)();
  v35 = v34;
  swift_bridgeObjectRelease();
  v55 = v33;
  v56 = v35;
  v36 = *(_QWORD *)((char *)v2 + v13[13]);
  if (*(_QWORD *)(v36 + 16))
  {
    OUTLINED_FUNCTION_31_19();
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    v52 = 0xD000000000000011;
    *(_QWORD *)&v53 = 0x800000024335F6F0;
    v51._countAndFlagsBits = *(_QWORD *)(v36 + 16);
    v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_26(17, 0x800000024335F710);
    v38._countAndFlagsBits = v52;
    v38._object = (void *)v53;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v53 = 0uLL;
    v52 = v36;
    swift_bridgeObjectRetain();
    specialized EnumeratedSequence.Iterator.next()(v50[0]);
    OUTLINED_FUNCTION_87_11();
    v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Photo));
    OUTLINED_FUNCTION_26_7((uint64_t)v8);
    while (!v27)
    {
      v40 = (_QWORD *)*v8;
      outlined init with take of Photo((uint64_t)v8 + *(int *)(v39 + 48), v0);
      v50[1] = v40;
      v51._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      v51._object = v41;
      OUTLINED_FUNCTION_18_18(8250);
      countAndFlagsBits = v51._countAndFlagsBits;
      object = v51._object;
      Photo.llmConsumableDescription.getter();
      v45 = v44;
      v47 = v46;
      v51._countAndFlagsBits = countAndFlagsBits;
      v51._object = object;
      swift_bridgeObjectRetain();
      v48._countAndFlagsBits = v45;
      v48._object = v47;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      String.append(_:)(v51);
      v49 = v50[0];
      swift_bridgeObjectRelease();
      _s10OmniSearch0B6ResultVWOhTm_1(v0, type metadata accessor for Photo);
      specialized EnumeratedSequence.Iterator.next()(v49);
      OUTLINED_FUNCTION_87_11();
      v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Photo));
      OUTLINED_FUNCTION_26_7((uint64_t)v8);
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_43_0();
}

uint64_t CalendarEvent.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v105[24];
  __int128 v106;

  OUTLINED_FUNCTION_69_12();
  MEMORY[0x2494F5C60](144);
  OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_12_26(16, 0x800000024335F730);
  v1 = MEMORY[0x24BEE0D00];
  v2 = MEMORY[0x24BEE0D70];
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_70_12();
  else
    OUTLINED_FUNCTION_2_30();
  v3 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_15_24(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)v105);
  OUTLINED_FUNCTION_8_24(v11, &demangling cache variable for type metadata for CustomStringConvertible?, v12, v13, v14, v15, v16, v17, *(uint64_t *)v105);
  OUTLINED_FUNCTION_9_1();
  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_70_12();
  else
    OUTLINED_FUNCTION_2_30();
  v18 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_15_24(v18, v19, v20, v21, v22, v23, v24, v25, *(uint64_t *)v105);
  OUTLINED_FUNCTION_8_24(v26, &demangling cache variable for type metadata for CustomStringConvertible?, v27, v28, v29, v30, v31, v32, *(uint64_t *)v105);
  OUTLINED_FUNCTION_0_32();
  v33 = (int *)type metadata accessor for CalendarEvent(0);
  if (OUTLINED_FUNCTION_48_13(v33[9]))
    OUTLINED_FUNCTION_70_12();
  else
    OUTLINED_FUNCTION_2_30();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_51_15(0xD000000000000015, (uint64_t)"The event location is", *(uint64_t *)v105);
  OUTLINED_FUNCTION_8_24(v34, &demangling cache variable for type metadata for CustomStringConvertible?, v35, v36, v37, v38, v39, v40, *(uint64_t *)v105);
  v41 = OUTLINED_FUNCTION_44_20();
  OUTLINED_FUNCTION_67_16(v41 | 0x6174732000000000, 0x746120737472);
  OUTLINED_FUNCTION_85_11(v33[7]);
  v42 = OUTLINED_FUNCTION_44_20();
  OUTLINED_FUNCTION_88_7(v42 | 0x646E652000000000, 0x74612073u);
  OUTLINED_FUNCTION_85_11(v33[8]);
  OUTLINED_FUNCTION_0_32();
  if (*(_QWORD *)(*(_QWORD *)(v0 + v33[10]) + 16))
  {
    OUTLINED_FUNCTION_9_1();
    OUTLINED_FUNCTION_60_12(v43, v44, v45, v46, v47, v48, v49, v50, 0x6572632073277449, (void *)0xEF79622064657461);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v51 = OUTLINED_FUNCTION_26_19();
    *(_QWORD *)&v106 = v1;
    *((_QWORD *)&v106 + 1) = v2;
    *(_QWORD *)&v105[8] = v52;
    OUTLINED_FUNCTION_15_24(v51, v52, v53, v54, v55, v56, v57, v58, v51);
    OUTLINED_FUNCTION_8_24(v59, &demangling cache variable for type metadata for CustomStringConvertible?, v60, v61, v62, v63, v64, v65, *(uint64_t *)v105);
  }
  OUTLINED_FUNCTION_9_1();
  if (*(_QWORD *)(*(_QWORD *)(v0 + v33[11]) + 16))
  {
    strcpy(v105, "Recipients are");
    v105[15] = -18;
    OUTLINED_FUNCTION_9_1();
    OUTLINED_FUNCTION_60_12(v66, v67, v68, v69, v70, v71, v72, v73, *(uint64_t *)v105, *(void **)&v105[8]);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v74 = OUTLINED_FUNCTION_26_19();
    *(_QWORD *)&v106 = v1;
    *((_QWORD *)&v106 + 1) = v2;
    *(_QWORD *)&v105[8] = v75;
    OUTLINED_FUNCTION_15_24(v74, v75, v76, v77, v78, v79, v80, v81, v74);
    OUTLINED_FUNCTION_8_24(v82, &demangling cache variable for type metadata for CustomStringConvertible?, v83, v84, v85, v86, v87, v88, *(uint64_t *)v105);
  }
  OUTLINED_FUNCTION_0_32();
  if (OUTLINED_FUNCTION_48_13(v33[12]))
    OUTLINED_FUNCTION_70_12();
  else
    OUTLINED_FUNCTION_2_30();
  swift_bridgeObjectRetain();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(0x6F6E20746E657645, (void *)0xED0000203A736574, (uint64_t)v105);
  OUTLINED_FUNCTION_8_24(v89, &demangling cache variable for type metadata for CustomStringConvertible?, v90, v91, v92, v93, v94, v95, *(uint64_t *)v105);
  OUTLINED_FUNCTION_0_32();
  v96 = v0 + v33[14];
  if (*(_QWORD *)v96)
  {
    *(_QWORD *)v105 = *(_QWORD *)v96;
    *(_OWORD *)&v105[8] = *(_OWORD *)(v96 + 8);
    v106 = *(_OWORD *)(v96 + 24);
    DataDetectorResults.description.getter();
  }
  OUTLINED_FUNCTION_2_30();
  OUTLINED_FUNCTION_51_15(0xD000000000000017, (uint64_t)"Data detector results: ", *(uint64_t *)v105);
  OUTLINED_FUNCTION_8_24(v97, &demangling cache variable for type metadata for CustomStringConvertible?, v98, v99, v100, v101, v102, v103, *(uint64_t *)v105);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

void Photo.llmConsumableDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;

  v2 = v0;
  v3 = type metadata accessor for Photo(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33_15();
  MEMORY[0x2494F5C60](94);
  v47 = v44;
  OUTLINED_FUNCTION_67_16(0x6C616E6F73726550, 0x6F746F687020);
  v5 = v0[3];
  v6 = MEMORY[0x24BEE0D00];
  v7 = MEMORY[0x24BEE0D70];
  if (v5)
  {
    v8 = v0[2];
    *((_QWORD *)&v45 + 1) = MEMORY[0x24BEE0D00];
    v46 = MEMORY[0x24BEE0D70];
    *(_QWORD *)&v44 = v8;
    *((_QWORD *)&v44 + 1) = v5;
  }
  else
  {
    OUTLINED_FUNCTION_41_13();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_20();
  OUTLINED_FUNCTION_24_19(v9, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_9_1();
  v10 = v0[10];
  if (v10)
  {
    v11 = v2[9];
    *((_QWORD *)&v42 + 1) = v6;
    v43 = v7;
    *(_QWORD *)&v41 = v11;
    *((_QWORD *)&v41 + 1) = v10;
  }
  else
  {
    v43 = 0;
    v41 = 0u;
    v42 = 0u;
  }
  outlined init with copy of Photo((uint64_t)v2, v1);
  if (v10)
  {
    v12 = OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_89_3(v12, type metadata accessor for Photo);
    outlined init with take of SageSearchClient(&v41, (uint64_t)&v44);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 64);
    if (v13)
    {
      v14 = *(_QWORD *)(v1 + 56);
      *((_QWORD *)&v45 + 1) = v6;
      v46 = v7;
      *(_QWORD *)&v44 = v14;
      *((_QWORD *)&v44 + 1) = v13;
      OUTLINED_FUNCTION_4_7();
      v15 = swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_89_3(v15, type metadata accessor for Photo);
    }
    else
    {
      v16 = OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_89_3(v16, type metadata accessor for Photo);
      v44 = 0u;
      v45 = 0u;
      v46 = 0;
    }
    outlined destroy of MobileSMSDocument?((uint64_t)&v41, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_86_14();
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(v17, v18, v19);
  OUTLINED_FUNCTION_24_19(v20, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_0_32();
  v21 = v2[6];
  if (*(_QWORD *)(v21 + 16))
  {
    OUTLINED_FUNCTION_36_3(0xD000000000000014, (uint64_t)"The photo contains: ");
    *(_QWORD *)&v44 = v21;
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v22 = OUTLINED_FUNCTION_26_19();
    OUTLINED_FUNCTION_4_36(v22, v23);
    OUTLINED_FUNCTION_24_19(v24, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_0_32();
  v25 = *(_QWORD *)((char *)v2 + *(int *)(v3 + 52));
  if (*(_QWORD *)(v25 + 16))
  {
    OUTLINED_FUNCTION_36_3(0xD00000000000001DLL, (uint64_t)"The photo has these persons: ");
    *(_QWORD *)&v44 = v25;
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v26 = OUTLINED_FUNCTION_26_19();
    OUTLINED_FUNCTION_4_36(v26, v27);
    OUTLINED_FUNCTION_24_19(v28, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_9_1();
  v29 = *(_QWORD *)((char *)v2 + *(int *)(v3 + 48));
  if (*(_QWORD *)(v29 + 16))
  {
    OUTLINED_FUNCTION_12_26(24, 0x800000024335F7E0);
    *(_QWORD *)&v44 = v29;
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v30 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_36(v30, v31);
    OUTLINED_FUNCTION_24_19(v32, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_9_1();
  v33 = v2[4];
  if (*(_QWORD *)(v33 + 16))
  {
    OUTLINED_FUNCTION_36_3(0xD000000000000022, (uint64_t)"The photo has these key elements: ");
    *(_QWORD *)&v44 = v33;
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v34 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_36(v34, v35);
    OUTLINED_FUNCTION_24_19(v36, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_9_1();
  v37 = v2[5];
  if (*(_QWORD *)(v37 + 16))
  {
    OUTLINED_FUNCTION_12_26(24, 0x800000024335F830);
    *(_QWORD *)&v44 = v37;
    OUTLINED_FUNCTION_75_13();
    OUTLINED_FUNCTION_78_13(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v38 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_4_36(v38, v39);
    OUTLINED_FUNCTION_24_19(v40, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_7_30(46);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_12_0();
}

void NoteDocument.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_53_18();
}

#error "2432F73FC: call analysis failed (funcsize=55)"

void FileDocument.llmConsumableDescription.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_69_12();
  MEMORY[0x2494F5C60](110);
  OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_12_26(16, 0x800000024335F890);
  v0 = OUTLINED_FUNCTION_38_16();
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v0);
  v9 = MEMORY[0x24BEE0D00];
  v10 = MEMORY[0x24BEE0D70];
  if (v2)
  {
    v57 = MEMORY[0x24BEE0D00];
    v58 = MEMORY[0x24BEE0D70];
    v55 = v1;
    v56 = v2;
  }
  else
  {
    OUTLINED_FUNCTION_2_30();
  }
  OUTLINED_FUNCTION_15_24(v1, v2, v3, v4, v5, v6, v7, v8, v55);
  OUTLINED_FUNCTION_8_24(v11, &demangling cache variable for type metadata for CustomStringConvertible?, v12, v13, v14, v15, v16, v17, v55);
  OUTLINED_FUNCTION_12_26(16, 0x800000024335F8B0);
  v18 = OUTLINED_FUNCTION_38_16();
  v19 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(v18);
  if (v20)
  {
    v57 = v9;
    v58 = v10;
    v55 = v19;
    v56 = v20;
  }
  else
  {
    OUTLINED_FUNCTION_2_30();
  }
  OUTLINED_FUNCTION_15_24(v19, v20, v21, v22, v23, v24, v25, v26, v55);
  OUTLINED_FUNCTION_8_24(v27, &demangling cache variable for type metadata for CustomStringConvertible?, v28, v29, v30, v31, v32, v33, v55);
  OUTLINED_FUNCTION_17_28(0xD000000000000017, (uint64_t)". The file is of type: ");
  v34 = OUTLINED_FUNCTION_38_16();
  v35 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.kind.getter(v34);
  if (v36)
  {
    v57 = v9;
    v58 = v10;
    v55 = v35;
    v56 = v36;
  }
  else
  {
    OUTLINED_FUNCTION_2_30();
  }
  OUTLINED_FUNCTION_15_24(v35, v36, v37, v38, v39, v40, v41, v42, v55);
  OUTLINED_FUNCTION_76_1((uint64_t)&v55);
  v43._countAndFlagsBits = OUTLINED_FUNCTION_44_20() | 0x2073692000000000;
  v43._object = (void *)0xEE002074756F6261;
  String.append(_:)(v43);
  v44 = OUTLINED_FUNCTION_38_16();
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.keywords.getter(v44);
  if (v45)
    v46 = v45;
  else
    v46 = MEMORY[0x24BEE4AF8];
  v57 = OUTLINED_FUNCTION_75_13();
  OUTLINED_FUNCTION_78_13(&lazy protocol witness table cache variable for type [String] and conformance [A]);
  v58 = v47;
  OUTLINED_FUNCTION_15_24(v47, v48, v49, v50, v51, v52, v53, v54, v46);
  OUTLINED_FUNCTION_76_1((uint64_t)&v55);
  OUTLINED_FUNCTION_7_30(41);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_19_25();
}

uint64_t WalletTransaction.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  MEMORY[0x2494F5C60](166);
  OUTLINED_FUNCTION_63_17(0xD000000000000025, (uint64_t)"A transaction from your wallet. It's ");
  if (!*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_21_18();
  v1 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v1, v2);
  OUTLINED_FUNCTION_32_11(v3, &demangling cache variable for type metadata for CustomStringConvertible?, v4, v5);
  OUTLINED_FUNCTION_42_11();
  if (!*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_21_18();
  v6 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v6, v7);
  OUTLINED_FUNCTION_32_11(v8, &demangling cache variable for type metadata for CustomStringConvertible?, v9, v10);
  OUTLINED_FUNCTION_12_26(18, 0x800000024335F920);
  v11 = (int *)type metadata accessor for WalletTransaction(0);
  if (OUTLINED_FUNCTION_48_13(v11[8]))
    OUTLINED_FUNCTION_47_17();
  else
    OUTLINED_FUNCTION_21_18();
  v12 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v12, v13);
  OUTLINED_FUNCTION_32_11(v14, &demangling cache variable for type metadata for CustomStringConvertible?, v15, v16);
  OUTLINED_FUNCTION_18_18(8236);
  if (OUTLINED_FUNCTION_48_13(v11[9]))
    OUTLINED_FUNCTION_47_17();
  else
    OUTLINED_FUNCTION_21_18();
  v17 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v17, v18);
  OUTLINED_FUNCTION_32_11(v19, &demangling cache variable for type metadata for CustomStringConvertible?, v20, v21);
  OUTLINED_FUNCTION_18_18(8236);
  if (OUTLINED_FUNCTION_48_13(v11[10]))
    OUTLINED_FUNCTION_47_17();
  else
    OUTLINED_FUNCTION_21_18();
  v22 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v22, v23);
  OUTLINED_FUNCTION_32_11(v24, &demangling cache variable for type metadata for CustomStringConvertible?, v25, v26);
  OUTLINED_FUNCTION_63_17(0xD00000000000001CLL, (uint64_t)". The transaction amount is ");
  if ((*(_BYTE *)(v0 + v11[11] + 20) & 1) != 0)
  {
    v29 = OUTLINED_FUNCTION_21_18();
  }
  else
  {
    type metadata accessor for NSDecimal(0);
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type NSDecimal and conformance NSDecimal, type metadata accessor for NSDecimal);
  }
  OUTLINED_FUNCTION_16_26(v27, v28, v29);
  OUTLINED_FUNCTION_32_11(v30, &demangling cache variable for type metadata for CustomStringConvertible?, v31, v32);
  OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_48_13(v11[12]))
    OUTLINED_FUNCTION_47_17();
  else
    OUTLINED_FUNCTION_21_18();
  v33 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_26(v33, v34);
  OUTLINED_FUNCTION_32_11(v35, &demangling cache variable for type metadata for CustomStringConvertible?, v36, v37);
  OUTLINED_FUNCTION_7_30(46);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  return OUTLINED_FUNCTION_47_8();
}

void WalletPass.llmConsumableDescription.getter()
{
  OUTLINED_FUNCTION_53_18();
}

#error "2432F79A8: call analysis failed (funcsize=57)"

void Contact.llmConsumableDescription.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_69_12();
  MEMORY[0x2494F5C60](69);
  OUTLINED_FUNCTION_55_10();
  OUTLINED_FUNCTION_17_28(0xD000000000000019, (uint64_t)"Contact information for: ");
  if (v0[3])
    v61 = v0[2];
  else
    OUTLINED_FUNCTION_2_30();
  v1 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_15_24(v1, v2, v3, v4, v5, v6, v7, v8, v61);
  OUTLINED_FUNCTION_8_24(v9, &demangling cache variable for type metadata for CustomStringConvertible?, v10, v11, v12, v13, v14, v15, v62);
  OUTLINED_FUNCTION_0_32();
  if (*(_QWORD *)(v0[4] + 16))
  {
    OUTLINED_FUNCTION_67_16(0x756E20656E6F6850, 0x3A737265626DLL);
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v16 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_15_24(v16, v17, v18, v19, v20, v21, v22, v23, v16);
    OUTLINED_FUNCTION_8_24(v24, &demangling cache variable for type metadata for CustomStringConvertible?, v25, v26, v27, v28, v29, v30, v63);
  }
  OUTLINED_FUNCTION_9_1();
  if (*(_QWORD *)(v0[5] + 16))
  {
    OUTLINED_FUNCTION_12_26(17, 0x800000024335F9D0);
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v31 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_15_24(v31, v32, v33, v34, v35, v36, v37, v38, v31);
    OUTLINED_FUNCTION_8_24(v39, &demangling cache variable for type metadata for CustomStringConvertible?, v40, v41, v42, v43, v44, v45, v64);
  }
  OUTLINED_FUNCTION_9_1();
  if (*(_QWORD *)(v0[6] + 16))
  {
    OUTLINED_FUNCTION_17_28(0xD000000000000012, (uint64_t)"Physical address: ");
    OUTLINED_FUNCTION_75_13();
    OUTLINED_FUNCTION_78_13(&lazy protocol witness table cache variable for type [String] and conformance [A]);
    v46 = OUTLINED_FUNCTION_6_31();
    OUTLINED_FUNCTION_15_24(v46, v47, v48, v49, v50, v51, v52, v53, v46);
    OUTLINED_FUNCTION_8_24(v54, &demangling cache variable for type metadata for CustomStringConvertible?, v55, v56, v57, v58, v59, v60, v65);
  }
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_19_25();
}

void FlightReservation.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  Swift::String v21;
  int *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Swift::String v44;
  _OWORD v45[2];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[16];

  OUTLINED_FUNCTION_18_2();
  v2 = v0;
  v3 = type metadata accessor for Calendar();
  MEMORY[0x24BDAC7A8](v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Leg?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Flight?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v12 = v11 - v10;
  FlightReservation.resolvedFlight.getter();
  v13 = type metadata accessor for FlightSnippet.Flight(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v13);
  outlined destroy of MobileSMSDocument?(v12, &demangling cache variable for type metadata for FlightSnippet.Flight?);
  if (EnumTagSinglePayload == 1)
  {
    HIBYTE(v45[0]) = -18;
    strcpy((char *)v45, "<not resolved>");
  }
  else
  {
    FlightReservation.leg.getter(v8);
    v15 = type metadata accessor for FlightSnippet.Leg(0);
    OUTLINED_FUNCTION_26_7(v8);
    if (v16)
    {
      outlined destroy of MobileSMSDocument?(v8, &demangling cache variable for type metadata for FlightSnippet.Leg?);
      v18 = 0;
      v19 = 1;
    }
    else
    {
      v17 = *(_QWORD *)(v8 + *(int *)(v15 + 20));
      swift_beginAccess();
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_BYTE *)(v17 + 24);
      _s10OmniSearch0B6ResultVWOhTm_1(v8, type metadata accessor for FlightSnippet.Leg);
    }
    *(_QWORD *)&v46 = v18;
    BYTE8(v46) = v19;
    *(_QWORD *)&v45[0] = String.init<A>(describing:)();
    *((_QWORD *)&v45[0] + 1) = v20;
  }
  OUTLINED_FUNCTION_31_19();
  MEMORY[0x2494F5C60](121);
  OUTLINED_FUNCTION_74_14();
  v21._countAndFlagsBits = 0x20746867696C46;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22 = (int *)type metadata accessor for FlightReservation(0);
  v23 = (uint64_t *)(v2 + v22[14]);
  v24 = v23[1];
  v25 = MEMORY[0x24BEE0D00];
  v26 = MEMORY[0x24BEE0D70];
  if (v24)
  {
    v27 = *v23;
    v47 = MEMORY[0x24BEE0D00];
    v48 = MEMORY[0x24BEE0D70];
    *(_QWORD *)&v46 = v27;
    *((_QWORD *)&v46 + 1) = v24;
  }
  else
  {
    OUTLINED_FUNCTION_15_26();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_90_10();
  v28 = (uint64_t *)(v2 + v22[10]);
  v30 = *v28;
  v29 = v28[1];
  v47 = v25;
  v48 = v26;
  *(_QWORD *)&v46 = v30;
  *((_QWORD *)&v46 + 1) = v29;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_90_10();
  v31._countAndFlagsBits = 0x7374726170656420;
  v31._object = (void *)0xE900000000000020;
  String.append(_:)(v31);
  v32 = (uint64_t *)(v2 + v22[20]);
  v33 = v32[1];
  if (v33)
  {
    v34 = *v32;
    v35 = v25;
    v47 = v25;
    v48 = v26;
    *(_QWORD *)&v46 = v34;
    *((_QWORD *)&v46 + 1) = v33;
  }
  else
  {
    v35 = v25;
    OUTLINED_FUNCTION_15_26();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v36, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_61_12(544108320);
  v37 = (void *)objc_opt_self();
  v38 = objc_msgSend(v37, sel_currentCalendar);
  OUTLINED_FUNCTION_77_12();

  OUTLINED_FUNCTION_68_16();
  OUTLINED_FUNCTION_80_8();
  OUTLINED_FUNCTION_72_11();
  outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_12_26(16, 0x800000024335FA10);
  v39 = (uint64_t *)(v2 + v22[19]);
  v40 = v39[1];
  if (v40)
  {
    v41 = *v39;
    v47 = v35;
    v48 = v26;
    *(_QWORD *)&v46 = v41;
    *((_QWORD *)&v46 + 1) = v40;
  }
  else
  {
    OUTLINED_FUNCTION_15_26();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v42, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_61_12(544108320);
  v43 = objc_msgSend(v37, sel_currentCalendar);
  OUTLINED_FUNCTION_77_12();

  OUTLINED_FUNCTION_68_16();
  OUTLINED_FUNCTION_80_8();
  OUTLINED_FUNCTION_72_11();
  outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for Date?);
  v44._countAndFlagsBits = 0x7375746174732820;
  v44._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v44);
  v47 = v35;
  v48 = v26;
  v46 = v45[0];
  OUTLINED_FUNCTION_28_19();
  outlined destroy of MobileSMSDocument?((uint64_t)&v46, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_7_30(41);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_59_13();
  OUTLINED_FUNCTION_43_0();
}

void HotelReservation.llmConsumableDescription.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_18_2();
  v2 = OUTLINED_FUNCTION_76_12();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v24 - v7;
  OUTLINED_FUNCTION_31_19();
  MEMORY[0x2494F5C60](104);
  OUTLINED_FUNCTION_74_14();
  OUTLINED_FUNCTION_56_3(33, (uint64_t)"An upcoming hotel reservation at ");
  v9 = type metadata accessor for HotelReservation(0);
  v10 = OUTLINED_FUNCTION_71_14(v9);
  if (v10)
  {
    v12 = *v11;
    v25 = MEMORY[0x24BEE0D00];
    v26 = MEMORY[0x24BEE0D70];
    v24[0] = v12;
    v24[1] = v10;
  }
  else
  {
    OUTLINED_FUNCTION_15_26();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v13, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_12_26(18, 0x800000024335FA60);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_currentCalendar);
  OUTLINED_FUNCTION_49_17();

  Calendar.date(from:)();
  OUTLINED_FUNCTION_89_15();
  v16 = OUTLINED_FUNCTION_78_10();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16) == 1)
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v8, &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_40_13();
  }
  else
  {
    v25 = v16;
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v18 = OUTLINED_FUNCTION_35_15(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v18, v8, v16);
  }
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_20_22(v19, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_36_3(0xD000000000000016, (uint64_t)"; and checking out on ");
  v20 = objc_msgSend(v14, sel_currentCalendar);
  OUTLINED_FUNCTION_49_17();

  OUTLINED_FUNCTION_66_17();
  OUTLINED_FUNCTION_89_15();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v16) == 1)
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v6, &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_40_13();
  }
  else
  {
    v25 = v16;
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v22 = OUTLINED_FUNCTION_35_15(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v22, v6, v16);
  }
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_20_22(v23, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_7_30(46);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_59_13();
  OUTLINED_FUNCTION_43_0();
}

void RestaurantReservation.llmConsumableDescription.getter()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_18_2();
  v3 = OUTLINED_FUNCTION_76_12();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_44_11();
  OUTLINED_FUNCTION_31_19();
  MEMORY[0x2494F5C60](89);
  OUTLINED_FUNCTION_74_14();
  OUTLINED_FUNCTION_56_3(38, (uint64_t)"An upcoming restaurant reservation at ");
  v6 = type metadata accessor for RestaurantReservation(0);
  if (!OUTLINED_FUNCTION_71_14(v6))
    OUTLINED_FUNCTION_15_26();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v7, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_12_26(16, 0x800000024335FAD0);
  if (!*(_QWORD *)&v1[MEMORY[0x44] + 8])
    OUTLINED_FUNCTION_15_26();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_20_22(v8, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_61_12(544497952);
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
  OUTLINED_FUNCTION_49_17();

  OUTLINED_FUNCTION_66_17();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v10 = OUTLINED_FUNCTION_78_10();
  OUTLINED_FUNCTION_26_7(v0);
  if (v11)
  {
    outlined destroy of MobileSMSDocument?(v0, &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_40_13();
  }
  else
  {
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v13 = OUTLINED_FUNCTION_35_15(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v13, v0, v10);
  }
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_20_22(v14, &demangling cache variable for type metadata for CustomStringConvertible?);
  OUTLINED_FUNCTION_7_30(46);
  OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_59_13();
  OUTLINED_FUNCTION_43_0();
}

void Answer.llmConsumableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_46_14();
  MEMORY[0x2494F5C60](47);
  v13 = v9;
  v14 = v10;
  OUTLINED_FUNCTION_39_18(0x6577736E61206E41, 14962);
  v1 = type metadata accessor for Answer(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  v4 = *v2;
  v3 = v2[1];
  v11 = MEMORY[0x24BEE0D00];
  v12 = MEMORY[0x24BEE0D70];
  v9 = v4;
  v10 = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_27((uint64_t)&v9);
  OUTLINED_FUNCTION_79_10(v5);
  OUTLINED_FUNCTION_12_26(16, 0x800000024335FAF0);
  v6 = *(_QWORD *)(v0 + *(int *)(v1 + 28));
  v11 = OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_23_25(&lazy protocol witness table cache variable for type [String : String] and conformance [A : B]);
  v12 = v7;
  v9 = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_27((uint64_t)&v9);
  OUTLINED_FUNCTION_79_10(v8);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_34_18();
}

uint64_t outlined init with take of (offset: Int, element: Photo)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Photo)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of Photo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Photo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of Photo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Photo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double OUTLINED_FUNCTION_2_30()
{
  return 0.0;
}

void OUTLINED_FUNCTION_3_27(uint64_t a1)
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:)(a1);
}

void OUTLINED_FUNCTION_4_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 128) = a1;
  *(_QWORD *)(v4 - 120) = a2;
  LLMFormatter.StringInterpolation.appendInterpolation(_:)(v4 - 128);
}

uint64_t OUTLINED_FUNCTION_6_31()
{
  return BidirectionalCollection<>.joined(separator:)();
}

void OUTLINED_FUNCTION_7_30(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_8_24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  outlined destroy of MobileSMSDocument?((uint64_t)&a9, a2);
}

void OUTLINED_FUNCTION_12_26(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  String.append(_:)(*(Swift::String *)(&a2 - 1));
}

uint64_t OUTLINED_FUNCTION_13_29()
{
  return static LLMFormatter.sanitize(_:)();
}

double OUTLINED_FUNCTION_15_26()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 112) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

void OUTLINED_FUNCTION_16_26(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)va);
}

void OUTLINED_FUNCTION_17_28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_18_18(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_20_22(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2 - 144, a2);
}

double OUTLINED_FUNCTION_21_18()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_22_21()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_23_25(_QWORD *a1)
{
  uint64_t *v1;

  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](a1, v1);
}

void OUTLINED_FUNCTION_24_19(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2 - 128, a2);
}

uint64_t OUTLINED_FUNCTION_26_19()
{
  return BidirectionalCollection<>.joined(separator:)();
}

void OUTLINED_FUNCTION_27_19()
{
  uint64_t v0;

  LLMFormatter.StringInterpolation.appendInterpolation(_:)(v0 - 144);
}

void OUTLINED_FUNCTION_28_19()
{
  uint64_t v0;

  LLMFormatter.StringInterpolation.appendInterpolation(_:)(v0 - 144);
}

void OUTLINED_FUNCTION_31_19()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 144) = 0;
  *(_QWORD *)(v0 - 136) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_32_11(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  outlined destroy of MobileSMSDocument?((uint64_t)va, a2);
}

void OUTLINED_FUNCTION_33_15()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 0;
  *(_QWORD *)(v0 - 120) = 0xE000000000000000;
}

uint64_t *OUTLINED_FUNCTION_35_15(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 144));
}

id OUTLINED_FUNCTION_38_16()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1280));
}

void OUTLINED_FUNCTION_39_18(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFF0000FFFFLL | 0xEB00000000200000;
  String.append(_:)(*(Swift::String *)&a1);
}

double OUTLINED_FUNCTION_40_13()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_QWORD *)(v0 - 112) = 0;
  return result;
}

double OUTLINED_FUNCTION_41_13()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 96) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return result;
}

void OUTLINED_FUNCTION_42_11()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x2073277449202ELL;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_43_16()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x203A79646F42202ELL;
  v0._object = (void *)0xE800000000000000;
  String.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_44_20()
{
  return 1950949422;
}

uint64_t OUTLINED_FUNCTION_45_15()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t OUTLINED_FUNCTION_48_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_49_17()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

void OUTLINED_FUNCTION_51_15(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(a1, (void *)((a2 - 32) | 0x8000000000000000), (uint64_t)&a3);
}

void OUTLINED_FUNCTION_53_18()
{
  JUMPOUT(0x2494F5C60);
}

uint64_t OUTLINED_FUNCTION_59_13()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_60_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  Swift::String v10;

  v10._countAndFlagsBits = a9;
  v10._object = a10;
  String.append(_:)(v10);
}

void OUTLINED_FUNCTION_61_12(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xE400000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_63_17(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_66_17()
{
  return Calendar.date(from:)();
}

void OUTLINED_FUNCTION_67_16(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a2 & 0xFFFFFFFFFFFFLL | 0xEF20000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_68_16()
{
  return Calendar.date(from:)();
}

uint64_t OUTLINED_FUNCTION_71_14(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 60) + 8);
}

void OUTLINED_FUNCTION_72_11()
{
  uint64_t v0;

  LLMFormatter.StringInterpolation.appendInterpolation(date:)(v0);
}

void OUTLINED_FUNCTION_74_14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 144);
  *(_QWORD *)(v0 - 88) = v1;
}

uint64_t OUTLINED_FUNCTION_75_13()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_76_12()
{
  return type metadata accessor for Calendar();
}

uint64_t OUTLINED_FUNCTION_77_12()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

void OUTLINED_FUNCTION_78_13(_QWORD *a1)
{
  uint64_t *v1;

  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](a1, v1);
}

void OUTLINED_FUNCTION_79_10(uint64_t a1, ...)
{
  uint64_t *v1;
  va_list va;

  va_start(va, a1);
  outlined destroy of MobileSMSDocument?((uint64_t)va, v1);
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_85_11(uint64_t a1@<X8>)
{
  uint64_t v1;

  LLMFormatter.StringInterpolation.appendInterpolation(date:)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_87_11()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of (offset: Int, element: Photo)?(v0, v1);
}

void OUTLINED_FUNCTION_88_7(uint64_t a1, unsigned int a2)
{
  unint64_t v2;

  v2 = a2 | 0xED00002000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_89_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_90_10()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of MobileSMSDocument?(v1 - 144, v0);
}

uint64_t OUTLINED_FUNCTION_91_8()
{
  return swift_bridgeObjectRetain();
}

void AnswerSynthesisModelOnDevice.__allocating_init()()
{
  swift_allocObject();
  AnswerSynthesisModelOnDevice.init()();
  OUTLINED_FUNCTION_5();
}

uint64_t AnswerSynthesisModelOnDevice.init()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  signed int v6;

  v1 = v0;
  v2 = static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter();
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v6 = objc_msgSend(v5, sel_processIdentifier);

  Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = AnswerSynthesisModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(v2, v4, v6, 0);
  return v1;
}

uint64_t type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AnswerSynthesisModelOnDevice._ClientInfo;
  if (!type metadata singleton initialization cache for AnswerSynthesisModelOnDevice._ClientInfo)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall AnswerSynthesisModelOnDevice.prewarm()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (one-time initialization token for search != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logging.search);
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24315F000, v1, v2, "Prewarming AnswerSynthesisModelOnDevice model...", v3, 2u);
    MEMORY[0x2494F6D70](v3, -1, -1);
  }

  swift_retain();
  TokenGenerator.prewarm()();
  swift_release();
}

uint64_t AnswerSynthesisModelOnDevice.model.getter()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelOnDevice.createPromptTemplate()()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x24BDAC7A8](v0);
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter();
  OUTLINED_FUNCTION_14_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, StaticString)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24334DB60;
  *(_QWORD *)(inited + 32) = OUTLINED_FUNCTION_14_4();
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = "{{ specialToken.chat.role.system }}Based on each personal data source, return a concise ans"
                             "wer to the query (or return NO_ANSWER_FOUND_IN_SOURCE). If the query does not require an an"
                             "swer, return NO_ANSWER_NEEDED_FOR_QUERY.{{ specialToken.chat.component.turnEnd }}{{ special"
                             "Token.chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialT"
                             "oken.chat.role.assistant }}";
  *(_QWORD *)(inited + 56) = 391;
  *(_BYTE *)(inited + 64) = 2;
  Dictionary.init(dictionaryLiteral:)();
  return PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
}

uint64_t AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  OUTLINED_FUNCTION_9_7();
  return OUTLINED_FUNCTION_1_33(v4, v5, v6, v7, v2);
}

uint64_t closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(_QWORD *)(v6 - 8);
  v5[37] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(_QWORD *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(_QWORD *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(_QWORD *)(v9 - 8);
  v5[48] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(_QWORD *)(v10 - 8);
  v5[51] = swift_task_alloc();
  v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(_QWORD *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 464);
  v17 = *(_QWORD *)(v0 + 472);
  v18 = *(_QWORD *)(v0 + 480);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 392);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 424);
  *(_QWORD *)(swift_task_alloc() + 16) = v6;
  CompletionPrompt.init(_:)();
  OUTLINED_FUNCTION_55();
  static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
  *(_DWORD *)(v0 + 552) = *MEMORY[0x24BE3C3E0];
  v7 = *(void (**)(uint64_t))(v3 + 104);
  *(_QWORD *)(v0 + 496) = v7;
  v7(v4);
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  *(_QWORD *)(v0 + 504) = v8;
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 512) = v9;
  v9(v4, v5);
  *(_QWORD *)(v0 + 520) = *(_QWORD *)(v16 + 8);
  OUTLINED_FUNCTION_68_1(v2);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v15);
  GenerativeConfigurationProtocol.bindVariables(_:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_68_1(v1);
  Dictionary.init(dictionaryLiteral:)();
  GenerativeConfigurationProtocol._internalTrackingConfig(_:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_68_1(v17);
  v10 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v0 + 528) = v10;
  v11 = v10
      + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v22, v11, v21);
  GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  OUTLINED_FUNCTION_68_1(v18);
  v12 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v12);
  FunctionIdentifier.init(identifier:resourceInformation:)();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 536) = v13;
  *v13 = v0;
  v13[1] = closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:);
  return static _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadataCompletionPrompt(_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  void (*v34)(uint64_t, _QWORD, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?(v1);
  }
  else
  {
    v41 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v33 = *(_DWORD *)(v0 + 552);
    v34 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 496);
    v37 = *(_QWORD *)(v0 + 448);
    v38 = *(_QWORD *)(v0 + 488);
    v39 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 408);
    v32 = *(_QWORD *)(v0 + 392);
    v27 = *(_QWORD *)(v0 + 352);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 336);
    v30 = *(_QWORD *)(v0 + 360);
    v36 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 288);
    v42 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    v7 = v1 + *(int *)(v2 + 48);
    v8 = v5 + *(int *)(v6 + 48);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
    v9(v5, v1, v3);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v10(v8, v7, v42);
    v11 = v5 + *(int *)(v6 + 48);
    v9(v25, v5, v3);
    v10(v26, v11, v42);
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v30, v27, v29);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24334DB60;
    strcpy((char *)(inited + 32), "promptTemplate");
    *(_BYTE *)(inited + 47) = -18;
    v13 = type metadata accessor for PromptTemplate();
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    *(_QWORD *)(inited + 72) = v13;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, v14, MEMORY[0x24BE3C630]);
    *(_QWORD *)(inited + 80) = v15;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(void))(*(_QWORD *)(v13 - 8) + 16))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    OUTLINED_FUNCTION_7_11();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_24334DB60;
    *(_QWORD *)(v16 + 32) = 0xD000000000000059;
    *(_QWORD *)(v16 + 40) = 0x800000024335BF40;
    static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
    v34(v31, v33, v32);
    *(_QWORD *)(v16 + 72) = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v16 + 48));
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v35(v31, v32);
    OUTLINED_FUNCTION_7_11();
    static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_1();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v42);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v25, v3);
    v41(v38, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v37, v39);
  }
  v17 = *(_QWORD *)(v0 + 544);
  GenerativeConfigurationProtocol.functionIdentifier(_:)();
  GenerativeConfigurationProtocol._addAssetCache()();
  if (v17)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 520))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 416));
    OUTLINED_FUNCTION_16_10(*(_QWORD *)(v0 + 344));
    OUTLINED_FUNCTION_8_7();
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 528);
    v19 = *(_QWORD *)(v0 + 488);
    v20 = *(_QWORD *)(v0 + 440);
    v21 = *(_QWORD *)(v0 + 360);
    v23 = *(_QWORD *)(v0 + 336);
    v22 = *(_QWORD *)(v0 + 344);
    OUTLINED_FUNCTION_4_11(*(_QWORD *)(v0 + 432));
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v18
                                      + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo__model);
    type metadata accessor for TokenGenerator();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    OUTLINED_FUNCTION_4_11(v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    OUTLINED_FUNCTION_4_11(v19);
    OUTLINED_FUNCTION_95();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_99();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnswerSynthesisModelOnDevice.synthesize_generateGenerativeFunctionOverride()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = type metadata accessor for BindableConfiguration();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CompletionPrompt();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v13 - v9;
  CompletionPrompt.init(_:)();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  OUTLINED_FUNCTION_12_8((uint64_t)v8);
  v11 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v0)
    v1 = v11;
  OUTLINED_FUNCTION_12_8((uint64_t)v10);
  return v1;
}

uint64_t AnswerSynthesisModelOnDevice.synthesize(_:bindings:)()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v1[2] = v3;
  v1[3] = *(_QWORD *)(v3 - 8);
  v1[4] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v1[5] = v4;
  *v4 = v1;
  v4[1] = AnswerSynthesisModelServer.synthesize(_:bindings:);
  OUTLINED_FUNCTION_9_7();
  return OUTLINED_FUNCTION_1_33(v5, v6, v7, v8, v2);
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _DWORD v16[2];
  uint64_t v17;

  v5 = v4;
  v17 = a3;
  v16[1] = a4 & 1;
  v8 = type metadata accessor for CachePolicy();
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<AssetBackedLLMBundle>);
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5+ OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig, v14, v11);
  type metadata accessor for TokenGenerator();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter();
  static CachePolicy.inMemory.getter();
  GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo__model) = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)();
  return v5;
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  v2 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelOnDevice._ClientInfo.__deallocating_deinit()
{
  AnswerSynthesisModelOnDevice._ClientInfo.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.getter in conformance AnswerSynthesisModelOnDevice._ClientInfo@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.setter in conformance AnswerSynthesisModelOnDevice._ClientInfo(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch28AnswerSynthesisModelOnDeviceP33_1A1AC706E90088069DC59A42425C0CBB11_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo())()
{
  swift_beginAccess();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t protocol witness for _ClientInfoProtocol._model.getter in conformance AnswerSynthesisModelOnDevice._ClientInfo()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelOnDevice.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelOnDevice.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void protocol witness for AnswerSynthesisModelProtocol.prewarm() in conformance AnswerSynthesisModelOnDevice()
{
  AnswerSynthesisModelOnDevice.prewarm()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.createPromptTemplate() in conformance AnswerSynthesisModelOnDevice()
{
  return AnswerSynthesisModelOnDevice.createPromptTemplate()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelOnDevice()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer;
  return AnswerSynthesisModelOnDevice.synthesize(_:bindings:)();
}

uint64_t protocol witness for GenerativeModelSessionTokenGenerator.model.getter in conformance AnswerSynthesisModelOnDevice()
{
  return AnswerSynthesisModelOnDevice.model.getter();
}

uint64_t type metadata accessor for AnswerSynthesisModelOnDevice()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnswerSynthesisModelOnDevice()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnswerSynthesisModelOnDevice.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ObjC metadata update function for AnswerSynthesisModelOnDevice._ClientInfo()
{
  return type metadata accessor for AnswerSynthesisModelOnDevice._ClientInfo();
}

uint64_t type metadata completion function for AnswerSynthesisModelOnDevice._ClientInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for _ClientInfoSessionTrackingConfig();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in AnswerSynthesisModelOnDevice.synthesize_runnable(_:bindings:)(a1, a2, a3, a4, a5);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDyS2SG_SSs5NeverOTg5031_sS3SIgggo_SS3key_SS5valuetSSs5D80OIegnrzr_TR57_s10OmniSearch11GeoLocationV11descriptionSSvgS2S_SStXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v21 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v3 = specialized Dictionary.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v18 = v1;
          v19 = v4;
          v7 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v8 = *v7;
          v9 = v7[1];
          v10 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v5);
          v11 = *v10;
          v12 = (void *)v10[1];
          v20 = v8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v13._countAndFlagsBits = 8250;
          v13._object = (void *)0xE200000000000000;
          String.append(_:)(v13);
          v14._countAndFlagsBits = v11;
          v14._object = v12;
          String.append(_:)(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v21 + 16);
          if (v15 >= *(_QWORD *)(v21 + 24) >> 1)
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          *(_QWORD *)(v21 + 16) = v15 + 1;
          v16 = v21 + 16 * v15;
          *(_QWORD *)(v16 + 32) = v20;
          *(_QWORD *)(v16 + 40) = v9;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v19 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v17 = _HashTable.occupiedBucket(after:)();
          v1 = v18 - 1;
          if (v18 == 1)
            return;
          v5 = v17;
          if ((v17 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v17 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t GeoLocation.init(uid:name:address:thoroughfare:mapsCardUrl:latitude:longitude:telephone:website:photos:category:subcategory:openTime:closeTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16, uint64_t a17, int a18, char a19, int a20,char a21)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a12;
  *(float *)(a9 + 72) = a10;
  *(float *)(a9 + 76) = a11;
  *(_OWORD *)(a9 + 80) = a13;
  *(_OWORD *)(a9 + 96) = a14;
  *(_OWORD *)(a9 + 112) = a15;
  *(_QWORD *)(a9 + 128) = a16;
  *(_QWORD *)(a9 + 136) = a17;
  *(_DWORD *)(a9 + 144) = a18;
  *(_BYTE *)(a9 + 148) = a19 & 1;
  *(_DWORD *)(a9 + 152) = a20;
  *(_BYTE *)(a9 + 156) = a21 & 1;
  return result;
}

uint64_t GeoLocation.metadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char v37;
  Swift::String v38;
  Swift::String v39;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 56);
  v31 = *(void **)(v0 + 96);
  v32 = *(_QWORD *)(v0 + 88);
  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(void **)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 128);
  v36 = *(void **)(v0 + 136);
  v37 = *(_BYTE *)(v0 + 148);
  v29 = *(_BYTE *)(v0 + 156);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433596A0;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = 0x73736572646461;
  *(_QWORD *)(inited + 72) = 0xE700000000000000;
  *(_QWORD *)(inited + 80) = v3;
  *(_QWORD *)(inited + 88) = v4;
  strcpy((char *)(inited + 96), "thoroughfare");
  *(_BYTE *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(_QWORD *)(inited + 112) = v5;
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 128) = 0x647261437370616DLL;
  *(_QWORD *)(inited + 136) = 0xEB000000006C7255;
  *(_QWORD *)(inited + 144) = v30;
  *(_QWORD *)(inited + 152) = v7;
  *(_QWORD *)(inited + 160) = 0x656475746974616CLL;
  *(_QWORD *)(inited + 168) = 0xE800000000000000;
  v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_33_16();
  *(_QWORD *)(inited + 176) = 0;
  *(_QWORD *)(inited + 184) = 0xE000000000000000;
  *(_QWORD *)(inited + 192) = 0x64757469676E6F6CLL;
  *(_QWORD *)(inited + 200) = 0xE900000000000065;
  OUTLINED_FUNCTION_33_16();
  *(_QWORD *)(inited + 208) = 0;
  *(_QWORD *)(inited + 216) = 0xE000000000000000;
  *(_QWORD *)(inited + 224) = 0x6E6F6870656C6574;
  *(_QWORD *)(inited + 232) = 0xE900000000000065;
  if (v8)
    v11 = v8;
  else
    v11 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = MEMORY[0x2494F5E4C](v11, MEMORY[0x24BEE0D00]);
  OUTLINED_FUNCTION_26_20(v38);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_121();
  *(_QWORD *)(inited + 240) = 0;
  *(_QWORD *)(inited + 248) = 0xE000000000000000;
  *(_QWORD *)(inited + 256) = 0x65746973626577;
  *(_QWORD *)(inited + 264) = 0xE700000000000000;
  if (v31)
    v12 = v32;
  else
    v12 = 0;
  if (v31)
    v13 = v31;
  else
    v13 = (void *)0xE000000000000000;
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 272) = 0;
  *(_QWORD *)(inited + 280) = 0xE000000000000000;
  *(_QWORD *)(inited + 288) = 0x6F746F68506D756ELL;
  *(_QWORD *)(inited + 296) = 0xE900000000000073;
  v39._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_26_20(v39);
  OUTLINED_FUNCTION_121();
  *(_QWORD *)(inited + 304) = 0;
  *(_QWORD *)(inited + 312) = 0xE000000000000000;
  *(_QWORD *)(inited + 320) = 0x79726F6765746163;
  *(_QWORD *)(inited + 328) = 0xE800000000000000;
  if (v34)
    v15 = v33;
  else
    v15 = 0;
  if (v34)
    v16 = v34;
  else
    v16 = (void *)0xE000000000000000;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 336) = 0;
  *(_QWORD *)(inited + 344) = 0xE000000000000000;
  *(_QWORD *)(inited + 352) = 0x6765746163627573;
  *(_QWORD *)(inited + 360) = 0xEB0000000079726FLL;
  if (v36)
    v18 = v35;
  else
    v18 = 0;
  if (v36)
    v19 = v36;
  else
    v19 = (void *)0xE000000000000000;
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = v18;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 368) = 0;
  *(_QWORD *)(inited + 376) = 0xE000000000000000;
  *(_QWORD *)(inited + 384) = 0x656D69546E65706FLL;
  *(_QWORD *)(inited + 392) = 0xE800000000000000;
  if ((v37 & 1) != 0)
  {
    v21 = 0;
  }
  else
  {
    lazy protocol witness table accessor for type UInt32 and conformance UInt32();
    v21 = BinaryInteger.description.getter();
    v10 = v22;
  }
  v23 = v10;
  String.append(_:)(*(Swift::String *)&v21);
  OUTLINED_FUNCTION_80_0();
  *(_QWORD *)(inited + 400) = 0;
  *(_QWORD *)(inited + 408) = 0xE000000000000000;
  *(_QWORD *)(inited + 416) = 0x6D695465736F6C63;
  *(_QWORD *)(inited + 424) = 0xE900000000000065;
  v24 = 0xE000000000000000;
  if ((v29 & 1) != 0)
  {
    v25 = 0;
  }
  else
  {
    lazy protocol witness table accessor for type UInt32 and conformance UInt32();
    v25 = BinaryInteger.description.getter();
    v24 = v26;
  }
  v27 = v24;
  String.append(_:)(*(Swift::String *)&v25);
  OUTLINED_FUNCTION_121();
  *(_QWORD *)(inited + 432) = 0;
  *(_QWORD *)(inited + 440) = 0xE000000000000000;
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t GeoLocation.openNow.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t result;
  double v17;
  _BOOL4 v18;
  _BOOL4 v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = 0x616C696176616E75;
  v2 = type metadata accessor for Calendar();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  v7 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v21 - v12;
  if ((*(_BYTE *)(v0 + 148) & 1) != 0 || (*(_BYTE *)(v0 + 156) & 1) != 0)
    return v1;
  v14 = *(_DWORD *)(v0 + 144);
  v15 = *(_DWORD *)(v0 + 152);
  static Date.now.getter();
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  result = Date.timeIntervalSince(_:)();
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v17 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v17 < 4294967300.0)
  {
    v18 = v14 <= v17;
    v19 = v15 > v17;
    v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
    v20(v13, v7);
    if (v18 && v19)
      return 1852141679;
    else
      return 0x6465736F6C63;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t GeoLocation.uid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void GeoLocation.name.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void GeoLocation.address.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void GeoLocation.thoroughfare.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void GeoLocation.mapsCardUrl.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

float GeoLocation.latitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 72);
}

float GeoLocation.longitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 76);
}

uint64_t GeoLocation.telephone.getter()
{
  return swift_bridgeObjectRetain();
}

void GeoLocation.website.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t GeoLocation.photos.getter()
{
  return swift_bridgeObjectRetain();
}

void GeoLocation.category.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void GeoLocation.subcategory.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

unint64_t GeoLocation.openTime.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_17_29(*(unsigned int *)(v0 + 144));
}

unint64_t GeoLocation.closeTime.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_17_29(*(unsigned int *)(v0 + 152));
}

unint64_t GeoLocation.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  _QWORD v10[19];

  memcpy(v10, (const void *)(v0 + 8), 0x95uLL);
  v1 = GeoLocation.metadata.getter();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDyS2SG_SSs5NeverOTg5031_sS3SIgggo_SS3key_SS5valuetSSs5D80OIegnrzr_TR57_s10OmniSearch11GeoLocationV11descriptionSSvgS2S_SStXEfU_Tf3nnnpf_nTf1cn_n(v1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v2 = BidirectionalCollection<>.joined(separator:)();
  v4 = v3;
  OUTLINED_FUNCTION_80_0();
  v10[0] = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  v10[0] = 0x800000024335FBD0;
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  OUTLINED_FUNCTION_80_0();
  v6._countAndFlagsBits = 0x202020200A2CLL;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = v2;
  v7._object = v4;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 32010;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  return 0xD000000000000018;
}

uint64_t GeoLocation.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  char v19;

  v2 = a1 == 6580597 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6867756F726F6874 && a2 == 0xEC00000065726166;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x647261437370616DLL && a2 == 0xEB000000006C7255;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6E6F6870656C6574 && a2 == 0xE900000000000065;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x65746973626577 && a2 == 0xE700000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x736F746F6870 && a2 == 0xE600000000000000;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
                      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x6765746163627573 && a2 == 0xEB0000000079726FLL;
                        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x656D69546E65706FLL && a2 == 0xE800000000000000;
                          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0x6D695465736F6C63 && a2 == 0xE900000000000065)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
                            swift_bridgeObjectRelease();
                            if ((v19 & 1) != 0)
                              return 13;
                            else
                              return 14;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t GeoLocation.CodingKeys.init(intValue:)()
{
  return 14;
}

uint64_t GeoLocation.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2432FB2EC + 4 * byte_2433596B0[a1]))(6580597, 0xE300000000000000);
}

uint64_t sub_2432FB2EC()
{
  return 1701667182;
}

uint64_t sub_2432FB2FC()
{
  return 0x73736572646461;
}

uint64_t sub_2432FB314()
{
  return 0x6867756F726F6874;
}

uint64_t sub_2432FB334()
{
  return 0x647261437370616DLL;
}

uint64_t sub_2432FB354()
{
  return 0x656475746974616CLL;
}

uint64_t sub_2432FB36C()
{
  return 0x64757469676E6F6CLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance GeoLocation.CodingKeys()
{
  unsigned __int8 *v0;

  return GeoLocation.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance GeoLocation.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = GeoLocation.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance GeoLocation.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = GeoLocation.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance GeoLocation.CodingKeys()
{
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance GeoLocation.CodingKeys()
{
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t GeoLocation.id.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t GeoLocation.url.getter()
{
  return URL.init(string:)();
}

void GeoLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<GeoLocation.CodingKeys>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  v6 = v5 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v7)
  {
    OUTLINED_FUNCTION_12_27(1);
    OUTLINED_FUNCTION_3_28();
    OUTLINED_FUNCTION_12_27(2);
    OUTLINED_FUNCTION_3_28();
    OUTLINED_FUNCTION_12_27(3);
    OUTLINED_FUNCTION_3_28();
    OUTLINED_FUNCTION_12_27(4);
    OUTLINED_FUNCTION_3_28();
    OUTLINED_FUNCTION_23_26();
    OUTLINED_FUNCTION_23_26();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_12_27(8);
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_12_27(10);
    OUTLINED_FUNCTION_35_16();
    OUTLINED_FUNCTION_12_27(11);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_13_30();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  OUTLINED_FUNCTION_11_22();
}

void GeoLocation.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD v47[20];
  _QWORD v48[9];
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  __int16 v61;
  char v62;
  int v63;
  char v64;
  char v65;
  char v66;
  __int16 v67;
  char v68;
  char v69;
  _QWORD *v70;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<GeoLocation.CodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v6 = a1[3];
  v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v6);
  lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    OUTLINED_FUNCTION_31_20();
  }
  else
  {
    v46 = a2;
    v7 = KeyedDecodingContainer.decode(_:forKey:)();
    v36 = OUTLINED_FUNCTION_1_34();
    v9 = v8;
    outlined copy of OmniSearchError();
    v10 = OUTLINED_FUNCTION_1_34();
    v42 = v9;
    v12 = v11;
    v35 = v10;
    outlined copy of OmniSearchError();
    v41 = v12;
    v13 = OUTLINED_FUNCTION_1_34();
    v15 = v14;
    outlined copy of OmniSearchError();
    v40 = v15;
    v34 = OUTLINED_FUNCTION_1_34();
    v17 = v16;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_18_19();
    v39 = v17;
    v19 = v18;
    LOBYTE(v48[0]) = 6;
    OUTLINED_FUNCTION_18_19();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_32_12();
    v33 = v13;
    v22 = v48[0];
    LOBYTE(v48[0]) = 8;
    swift_bridgeObjectRetain();
    v32 = OUTLINED_FUNCTION_5_33();
    v38 = v22;
    v37 = v23;
    outlined copy of OmniSearchError();
    OUTLINED_FUNCTION_32_12();
    v45 = v48[0];
    swift_bridgeObjectRetain();
    v24 = OUTLINED_FUNCTION_5_33();
    v44 = v25;
    v26 = v24;
    swift_bridgeObjectRetain();
    v27 = OUTLINED_FUNCTION_5_33();
    v43 = v28;
    v29 = v27;
    LOBYTE(v48[0]) = 12;
    swift_bridgeObjectRetain();
    v31 = OUTLINED_FUNCTION_24_20();
    v69 = BYTE4(v31) & 1;
    v65 = 13;
    v30 = OUTLINED_FUNCTION_24_20();
    OUTLINED_FUNCTION_0_35();
    v66 = BYTE4(v30) & 1;
    v47[0] = v7;
    v47[1] = v36;
    v47[2] = v42;
    v47[3] = v35;
    v47[4] = v41;
    v47[5] = v33;
    v47[6] = v40;
    v47[7] = v34;
    v47[8] = v39;
    v47[9] = __PAIR64__(v21, v19);
    v47[10] = v38;
    v47[11] = v32;
    v47[12] = v37;
    v47[13] = v45;
    v47[14] = v26;
    v47[15] = v44;
    v47[16] = v29;
    v47[17] = v43;
    LODWORD(v47[18]) = v31;
    BYTE4(v47[18]) = BYTE4(v31) & 1;
    LODWORD(v47[19]) = v30;
    BYTE4(v47[19]) = BYTE4(v30) & 1;
    outlined retain of GeoLocation((uint64_t)v47);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_118_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_118_0();
    swift_bridgeObjectRelease();
    memcpy(v46, v47, 0x9DuLL);
    OUTLINED_FUNCTION_31_20();
    v48[0] = v7;
    v48[1] = v36;
    v48[2] = v42;
    v48[3] = v35;
    v48[4] = v41;
    v48[5] = v33;
    v48[6] = v40;
    v48[7] = v34;
    v48[8] = v39;
    v49 = v19;
    v50 = v21;
    v51 = v38;
    v52 = v32;
    v53 = v37;
    v54 = v45;
    v55 = v26;
    v56 = v44;
    v57 = v29;
    v58 = v43;
    v59 = v31;
    v60 = v69;
    v61 = v67;
    v62 = v68;
    v63 = v30;
    v64 = v66;
    outlined release of GeoLocation((uint64_t)v48);
  }
  OUTLINED_FUNCTION_11_22();
}

void protocol witness for Decodable.init(from:) in conformance GeoLocation(_QWORD *a1@<X0>, void *a2@<X8>)
{
  GeoLocation.init(from:)(a1, a2);
}

void protocol witness for Encodable.encode(to:) in conformance GeoLocation(_QWORD *a1)
{
  GeoLocation.encode(to:)(a1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance GeoLocation(void *__src, const void *a2)
{
  _QWORD v4[20];
  uint64_t __dst[20];

  memcpy(v4, __src, 0x9DuLL);
  memcpy(__dst, a2, 0x9DuLL);
  return specialized static SearchItem.== infix(_:_:)(v4, __dst) & 1;
}

unint64_t lazy protocol witness table accessor for type UInt32 and conformance UInt32()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UInt32 and conformance UInt32;
  if (!lazy protocol witness table cache variable for type UInt32 and conformance UInt32)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE4538], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UInt32 and conformance UInt32);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation.CodingKeys, &unk_2513D2828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation.CodingKeys, &unk_2513D2828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation.CodingKeys, &unk_2513D2828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GeoLocation.CodingKeys, &unk_2513D2828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeoLocation.CodingKeys and conformance GeoLocation.CodingKeys);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for GeoLocation(_QWORD *a1)
{
  unint64_t result;

  a1[1] = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  a1[2] = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  result = lazy protocol witness table accessor for type GeoLocation and conformance GeoLocation();
  a1[3] = result;
  return result;
}

uint64_t destroy for GeoLocation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GeoLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  LODWORD(v6) = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeoLocation(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v4;
  v5 = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v5;
  return a1;
}

void *__swift_memcpy157_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x9DuLL);
}

uint64_t assignWithTake for GeoLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoLocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 157))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 156) = 0;
    *(_DWORD *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 157) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 157) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoLocation()
{
  return &type metadata for GeoLocation;
}

uint64_t getEnumTagSinglePayload for GeoLocation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 13) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v5 = v6 - 14;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_2432FC688 + 4 * byte_2433596C3[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_2432FC6BC + 4 * byte_2433596BE[v4]))();
}

uint64_t sub_2432FC6BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432FC6C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432FC6CCLL);
  return result;
}

uint64_t sub_2432FC6D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432FC6E0);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_2432FC6E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432FC6EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for GeoLocation.CodingKeys()
{
  return &unk_2513D2828;
}

uint64_t specialized Dictionary.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_6_32()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_31()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_12_27(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_13_30()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_14_22()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_17_29@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_26()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_24_20()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_26_20(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_31_20()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 72));
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_33_16()
{
  return Float.write<A>(to:)();
}

uint64_t OUTLINED_FUNCTION_35_16()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t baseDirectoryURLCreatingIfNeeded()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  id v15;
  NSURL *v16;
  void *v17;
  void *v18;
  unsigned int v19;
  id v20;
  uint64_t result;
  id v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v28 = a1;
  v31 = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for URL.DirectoryHint();
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_70();
  v4 = OUTLINED_FUNCTION_5_2();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v26 = (id)objc_opt_self();
  v11 = objc_msgSend(v26, sel_defaultManager);
  v12 = objc_msgSend(v11, sel_URLsForDirectory_inDomains_, 5, 1);

  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  specialized Collection.first.getter(v13, v1);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v1, 1, v4) == 1)
  {
    outlined destroy of URL?(v1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v10, v1, v4);
    v29 = 0xD000000000000010;
    v30 = 0x800000024335FC40;
    OUTLINED_FUNCTION_0_36();
    lazy protocol witness table accessor for type String and conformance String();
    v27 = v10;
    URL.appending<A>(path:directoryHint:)();
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_3_29();
    v29 = 5065804;
    v30 = 0xE300000000000000;
    OUTLINED_FUNCTION_0_36();
    URL.appending<A>(path:directoryHint:)();
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_3_29();
    v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v15 = objc_msgSend(v26, sel_defaultManager);
    URL._bridgeToObjectiveC()(v16);
    v18 = v17;
    v29 = 0;
    v19 = objc_msgSend(v15, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, &v29);

    if (v19)
    {
      v20 = (id)v29;
      return ((uint64_t (*)(char *, uint64_t))v14)(v27, v4);
    }
    v22 = (id)v29;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v29 = 0;
    v30 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    OUTLINED_FUNCTION_3_29();
    v29 = 0xD00000000000002CLL;
    v30 = 0x800000024335FC60;
    swift_getErrorValue();
    v23._countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v24._countAndFlagsBits = 46;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
  }
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::String __swiftcall baseDirectoryStringCreatingIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v1 = OUTLINED_FUNCTION_5_2();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_70();
  baseDirectoryURLCreatingIfNeeded()(v0);
  v3 = URL.absoluteString.getter();
  v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t one-time initialization function for baseDirectory()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = type metadata accessor for URL();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  baseDirectoryURLCreatingIfNeeded()((uint64_t)v3);
  v4 = URL.absoluteString.getter();
  v6 = v5;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Paths.baseDirectory = v4;
  unk_25728FAC0 = v6;
  return result;
}

uint64_t *Paths.baseDirectory.unsafeMutableAddressor()
{
  if (one-time initialization token for baseDirectory != -1)
    swift_once();
  return &static Paths.baseDirectory;
}

uint64_t static Paths.baseDirectory.getter()
{
  uint64_t v0;

  if (one-time initialization token for baseDirectory != -1)
    swift_once();
  v0 = static Paths.baseDirectory;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for baseDirectoryURL()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for URL();
  __swift_allocate_value_buffer(v0, static Paths.baseDirectoryURL);
  v1 = __swift_project_value_buffer(v0, (uint64_t)static Paths.baseDirectoryURL);
  return baseDirectoryURLCreatingIfNeeded()(v1);
}

uint64_t Paths.baseDirectoryURL.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for baseDirectoryURL != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_5_2();
  return __swift_project_value_buffer(v0, (uint64_t)static Paths.baseDirectoryURL);
}

uint64_t static Paths.baseDirectoryURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for baseDirectoryURL != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_5_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Paths.baseDirectoryURL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ValueMetadata *type metadata accessor for Paths()
{
  return &type metadata for Paths;
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

id SFCard.init(data:)(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  if (a2 >> 60 == 15)
    return 0;
  v4 = objc_allocWithZone(MEMORY[0x24BE850A0]);
  outlined copy of Data._Representation(a1, a2);
  @nonobjc _SFPBCard.init(data:)(a1, a2);
  if (!v5)
  {
    OUTLINED_FUNCTION_50_16();
    return 0;
  }
  v6 = v5;
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithProtobuf_, v5);
  OUTLINED_FUNCTION_50_16();

  if (v7)
  return v7;
}

uint64_t SFCard.data.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE850A0]), sel_initWithFacade_, v0);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_data);
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

uint64_t SFCard.snippetPluginModel.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (SFCard.isEmpty.getter() || (v2 = SFCard.data.getter(), v3 >> 60 == 15))
  {
    v4 = type metadata accessor for RGPluginModel();
    v5 = (uint64_t)a1;
    v6 = 1;
  }
  else
  {
    *a1 = v2;
    a1[1] = v3;
    v7 = *MEMORY[0x24BE52520];
    v8 = type metadata accessor for RGPluginModel();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
    v5 = (uint64_t)a1;
    v6 = 0;
    v4 = v8;
  }
  return __swift_storeEnumTagSinglePayload(v5, v6, 1, v4);
}

void static EntityCardBuilding.cardForEntities(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t i;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_2();
  v17 = v16 - v15;
  v65 = type metadata accessor for SearchResultType();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_0_3();
  v63 = v18;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = MEMORY[0x24BEE4AF8];
  if (v19)
  {
    v60 = v13;
    v59 = v9;
    swift_bridgeObjectRetain();
    v61 = MEMORY[0x24BEE4AF8];
    v21 = (_QWORD *)(a1 + 56);
    v62 = v5;
    while (1)
    {
      v67 = v19;
      v22 = *v21;
      v23 = v21[1];
      v24 = v21[2];
      v66 = v21;
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      OUTLINED_FUNCTION_15_11();
      EntityProperty.wrappedValue.getter();
      OUTLINED_FUNCTION_17_9();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_9_8();
      OUTLINED_FUNCTION_75_0();
      v68 = v24;
      swift_release();
      OUTLINED_FUNCTION_11_5();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_48_8();
      swift_release();
      OUTLINED_FUNCTION_50();
      (*(void (**)(uint64_t, uint64_t))(v64 + 88))(v63, v65);
      OUTLINED_FUNCTION_94_5();
      if (v28)
        break;
      OUTLINED_FUNCTION_94_5();
      if (!v28)
      {
        OUTLINED_FUNCTION_94_5();
        if (v34)
        {
          OUTLINED_FUNCTION_75();
          OUTLINED_FUNCTION_73_7();
          OUTLINED_FUNCTION_119_3();
          OUTLINED_FUNCTION_7_12();
          OUTLINED_FUNCTION_15_5();
          OUTLINED_FUNCTION_0_11();
          OUTLINED_FUNCTION_24_21();
          OUTLINED_FUNCTION_7_12();
          OUTLINED_FUNCTION_23_27();
          OUTLINED_FUNCTION_9_27();
          OUTLINED_FUNCTION_22_23();
          v35 = v60;
          EntityProperty.wrappedValue.getter();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_4_12();
          OUTLINED_FUNCTION_75_0();
          OUTLINED_FUNCTION_9_8();
          OUTLINED_FUNCTION_17_9();
          OUTLINED_FUNCTION_3_6();
          OUTLINED_FUNCTION_39_0();
          OUTLINED_FUNCTION_11_5();
          OUTLINED_FUNCTION_48_8();
          OUTLINED_FUNCTION_39_11();
          OUTLINED_FUNCTION_38_11();
          v36 = type metadata accessor for SearchSpotlightEntity(0);
          OUTLINED_FUNCTION_6_33(v36);
          if (v28)
          {
            v26 = v60;
            v27 = &demangling cache variable for type metadata for SearchSpotlightEntity?;
            goto LABEL_23;
          }
          *((_QWORD *)&v70 + 1) = v23;
          v41 = &lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity;
          v30 = type metadata accessor for SearchSpotlightEntity;
          v42 = type metadata accessor for SearchSpotlightEntity;
          v43 = &protocol conformance descriptor for SearchSpotlightEntity;
        }
        else
        {
          OUTLINED_FUNCTION_94_5();
          if (!v39)
          {
            v71 = 0;
            v69 = 0u;
            v70 = 0u;
            (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
            goto LABEL_26;
          }
          OUTLINED_FUNCTION_75();
          OUTLINED_FUNCTION_73_7();
          OUTLINED_FUNCTION_119_3();
          OUTLINED_FUNCTION_7_12();
          OUTLINED_FUNCTION_15_5();
          OUTLINED_FUNCTION_7_12();
          OUTLINED_FUNCTION_24_21();
          OUTLINED_FUNCTION_0_11();
          OUTLINED_FUNCTION_23_27();
          OUTLINED_FUNCTION_9_27();
          OUTLINED_FUNCTION_22_23();
          v35 = v59;
          EntityProperty.wrappedValue.getter();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_4_12();
          OUTLINED_FUNCTION_75_0();
          OUTLINED_FUNCTION_3_6();
          OUTLINED_FUNCTION_17_9();
          OUTLINED_FUNCTION_9_8();
          OUTLINED_FUNCTION_39_0();
          OUTLINED_FUNCTION_11_5();
          OUTLINED_FUNCTION_48_8();
          OUTLINED_FUNCTION_39_11();
          OUTLINED_FUNCTION_38_11();
          v40 = type metadata accessor for SearchAnswerEntity(0);
          OUTLINED_FUNCTION_6_33(v40);
          if (v28)
          {
            v26 = v59;
            v27 = &demangling cache variable for type metadata for SearchAnswerEntity?;
LABEL_23:
            outlined destroy of MobileSMSDocument?(v26, v27);
            v71 = 0;
            v69 = 0u;
            v70 = 0u;
LABEL_36:
            outlined destroy of MobileSMSDocument?((uint64_t)&v69, &demangling cache variable for type metadata for AppEntity?);
            v72 = 0u;
            v73 = 0u;
            v74 = 0;
            goto LABEL_37;
          }
          *((_QWORD *)&v70 + 1) = v68;
          v41 = &lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity;
          v30 = type metadata accessor for SearchAnswerEntity;
          v42 = type metadata accessor for SearchAnswerEntity;
          v43 = &protocol conformance descriptor for SearchAnswerEntity;
        }
        lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(v41, v42, (uint64_t)v43);
        v32 = OUTLINED_FUNCTION_77_8(v44);
        v33 = v35;
        goto LABEL_25;
      }
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_73_7();
      OUTLINED_FUNCTION_119_3();
      OUTLINED_FUNCTION_7_12();
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_15_5();
      OUTLINED_FUNCTION_24_21();
      OUTLINED_FUNCTION_7_12();
      OUTLINED_FUNCTION_23_27();
      OUTLINED_FUNCTION_9_27();
      OUTLINED_FUNCTION_22_23();
      EntityProperty.wrappedValue.getter();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_9_8();
      OUTLINED_FUNCTION_17_9();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_11_5();
      OUTLINED_FUNCTION_48_8();
      OUTLINED_FUNCTION_39_11();
      OUTLINED_FUNCTION_38_11();
      v29 = type metadata accessor for SearchGlobalEntity();
      OUTLINED_FUNCTION_6_33(v29);
      if (v28)
      {
        v26 = v17;
        v27 = &demangling cache variable for type metadata for SearchGlobalEntity?;
        goto LABEL_23;
      }
      *((_QWORD *)&v70 + 1) = v22;
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (uint64_t (*)(uint64_t))MEMORY[0x24BE6E2C0], MEMORY[0x24BE6E250]);
      v38 = OUTLINED_FUNCTION_77_8(v37);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v38, v17, v22);
LABEL_26:
      if (!*((_QWORD *)&v70 + 1))
        goto LABEL_36;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CardRepresentable);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v74 = 0;
        v72 = 0u;
        v73 = 0u;
LABEL_37:
        outlined destroy of MobileSMSDocument?((uint64_t)&v72, &demangling cache variable for type metadata for CardRepresentable?);
        OUTLINED_FUNCTION_3_6();
        OUTLINED_FUNCTION_75_0();
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_84_7();
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_155_1();
        OUTLINED_FUNCTION_61_5();
        OUTLINED_FUNCTION_47_12();
        OUTLINED_FUNCTION_48_8();
        OUTLINED_FUNCTION_39_11();
LABEL_38:
        swift_release();
        goto LABEL_39;
      }
      v45 = *((_QWORD *)&v73 + 1);
      if (!*((_QWORD *)&v73 + 1))
        goto LABEL_37;
      v46 = v74;
      __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
      v47 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
      if (!v47)
      {
        swift_release();
        OUTLINED_FUNCTION_75_0();
        swift_release();
        OUTLINED_FUNCTION_84_7();
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_155_1();
        OUTLINED_FUNCTION_61_5();
        OUTLINED_FUNCTION_47_12();
        OUTLINED_FUNCTION_48_8();
        OUTLINED_FUNCTION_39_11();
        goto LABEL_38;
      }
      outlined bridged method (ob) of @objc SFCard.cardSections.getter(v47);
      v49 = v48;
      swift_release();
      OUTLINED_FUNCTION_75_0();
      swift_release();
      OUTLINED_FUNCTION_84_7();
      OUTLINED_FUNCTION_154_0();
      OUTLINED_FUNCTION_155_1();
      OUTLINED_FUNCTION_61_5();
      OUTLINED_FUNCTION_47_12();
      OUTLINED_FUNCTION_48_8();
      OUTLINED_FUNCTION_39_11();
      OUTLINED_FUNCTION_38_11();
      if (v49)
      {
        v50 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v61 = v52;
        }
        v51 = *(_QWORD *)(v61 + 16);
        if (v51 >= *(_QWORD *)(v61 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v61 = v53;
        }
        *(_QWORD *)(v61 + 16) = v51 + 1;
        *(_QWORD *)(v61 + 8 * v51 + 32) = v49;
        goto LABEL_40;
      }
LABEL_39:
      v50 = v67;
LABEL_40:
      v21 = v66 + 11;
      v19 = v50 - 1;
      if (!v19)
      {
        swift_bridgeObjectRelease();
        v54 = v61;
        v20 = MEMORY[0x24BEE4AF8];
        goto LABEL_45;
      }
    }
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_73_7();
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_7_12();
    swift_retain();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_7_12();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_0_11();
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_75_0();
    swift_release();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_47_12();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_11();
    OUTLINED_FUNCTION_38_11();
    v25 = type metadata accessor for SearchAppEntity(0);
    if (__swift_getEnumTagSinglePayload(v62, 1, v25) == 1)
    {
      v26 = v62;
      v27 = &demangling cache variable for type metadata for SearchAppEntity?;
      goto LABEL_23;
    }
    *((_QWORD *)&v70 + 1) = v25;
    v30 = type metadata accessor for SearchAppEntity;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
    v32 = OUTLINED_FUNCTION_77_8(v31);
    v33 = v62;
LABEL_25:
    outlined init with take of SearchResult(v33, (uint64_t)v32, v30);
    goto LABEL_26;
  }
  v54 = MEMORY[0x24BEE4AF8];
LABEL_45:
  *(_QWORD *)&v72 = v20;
  v55 = *(_QWORD *)(v54 + 16);
  if (v55)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v55; ++i)
    {
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE84D80]), sel_init);
  OUTLINED_FUNCTION_35_17((uint64_t)v57, v58, (unint64_t *)&lazy cache variable for type metadata for SFCardSection, 0x24BE84D88, (SEL *)&selRef_setCardSections_);
  OUTLINED_FUNCTION_43_0();
}

{
  static EntityCardBuilding.cardForEntities(_:)(a1);
}

void SFCard.init(cardSections:)()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  OUTLINED_FUNCTION_35_17((uint64_t)v0, v1, (unint64_t *)&lazy cache variable for type metadata for SFCardSection, 0x24BE84D88, (SEL *)&selRef_setCardSections_);
  OUTLINED_FUNCTION_5();
}

void EntityCardBuilder.cardForSearchResult(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  NSObject *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL8 v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  NSObject *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;

  v2 = type metadata accessor for SearchResultType();
  v90 = *(_QWORD *)(v2 - 8);
  v91 = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  v89 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  v93 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_15();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v92 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v94 = (char *)&v85 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v85 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v85 - v16;
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_2();
  v21 = v20 - v19;
  v22 = type metadata accessor for Answer(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_2();
  v26 = v25 - v24;
  v99 = 0;
  v27 = SearchResultItem.experience.getter();
  if (v27)
  {
    v28 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 128))(v27);
    OUTLINED_FUNCTION_50();
    if (v28)
    {
      if (!SFCard.isEmpty.getter())
      {
        v99 = v28;
        goto LABEL_12;
      }

    }
  }
  v29 = *(void **)(a1 + *(int *)(v93 + 20));
  if (v29)
  {
    v30 = v29;
    v31 = EntityCardBuilder.cardForCSItem(_:)(v30);

    v99 = v31;
LABEL_12:
    v33 = (uint64_t)v94;
    goto LABEL_13;
  }
  outlined init with copy of SearchResult(a1, v21, type metadata accessor for SearchResultItem);
  if (swift_getEnumCaseMultiPayload() != 15)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(v21, type metadata accessor for SearchResultItem);
    goto LABEL_12;
  }
  outlined init with take of SearchResult(v21, v26, type metadata accessor for Answer);
  specialized Collection.first.getter(*(_QWORD *)(v26 + *(int *)(v22 + 32)), v7);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v93);
  v33 = (uint64_t)v94;
  if (EnumTagSinglePayload == 1)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(v26, type metadata accessor for Answer);
    outlined destroy of MobileSMSDocument?(v7, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    outlined init with take of SearchResult(v7, (uint64_t)v17, type metadata accessor for SearchResult);
    v84 = (void *)EntityCardBuilder.cardForSearchResult(_:)(v17);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v17, type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOhTm_1(v26, type metadata accessor for Answer);

    v99 = v84;
  }
LABEL_13:
  if (one-time initialization token for search != -1)
    swift_once();
  v34 = type metadata accessor for Logger();
  v35 = __swift_project_value_buffer(v34, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(a1, (uint64_t)v15, type metadata accessor for SearchResult);
  outlined init with copy of SearchResult(a1, v33, type metadata accessor for SearchResult);
  v36 = Logger.logObject.getter();
  v37 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v36, (os_log_type_t)v37))
  {
    v38 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v39 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v96 = v39;
    *(_DWORD *)v38 = 134218754;
    OUTLINED_FUNCTION_1_4();
    v87 = v39;
    v88 = v35;
    v86 = v37;
    v85 = v36;
    if (v99 && (outlined bridged method (ob) of @objc SFCard.cardSections.getter(v99), v40))
    {
      OUTLINED_FUNCTION_45_16();
      if (v42)
        v43 = _CocoaArrayWrapper.endIndex.getter();
      else
        v43 = *(_QWORD *)(v41 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = 0;
    }
    v97 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 12) = 2080;
    v45 = v89;
    SearchResultItem.type.getter();
    v46 = SearchResultType.rawValue.getter();
    v48 = v47;
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v45, v91);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, &v96);
    v97 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v50 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_18(v50, type metadata accessor for SearchResult);
    *(_WORD *)(v38 + 22) = 2080;
    if (v99)
    {
      outlined bridged method (ob) of @objc SFCard.cardSections.getter(v99);
      v52 = (uint64_t)v94;
      if (v51)
      {
        v53 = v51;
        OUTLINED_FUNCTION_45_16();
        if (v55)
          v56 = _CocoaArrayWrapper.endIndex.getter();
        else
          v56 = *(_QWORD *)(v54 + 16);
        v57 = v86;
        v58 = v85;
        if (v56)
        {
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v53 & 0xC000000000000001) == 0, v53);
          if ((v53 & 0xC000000000000001) != 0)
            v59 = (id)MEMORY[0x2494F62E4](0, v53);
          else
            v59 = *(id *)(v53 + 32);
          v60 = (uint64_t)v59;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v60 = 0;
        }
LABEL_34:
        v97 = v60;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SFCardSection?);
        v61 = String.init<A>(describing:)();
        OUTLINED_FUNCTION_43_17(v61, v62);
        OUTLINED_FUNCTION_14_23(v63);
        OUTLINED_FUNCTION_121();
        *(_WORD *)(v38 + 32) = 2080;
        v64 = *(void **)(v52 + *(int *)(v93 + 20));
        if (v64)
          outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentType.getter(objc_msgSend(v64, sel_attributeSet));
        else
          v65 = 0;
        v97 = (uint64_t)v64;
        v98 = v65;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
        v66 = String.init<A>(describing:)();
        OUTLINED_FUNCTION_43_17(v66, v67);
        OUTLINED_FUNCTION_14_23(v68);
        OUTLINED_FUNCTION_121();
        _s10OmniSearch0B6ResultVWOhTm_1(v52, type metadata accessor for SearchResult);
        _os_log_impl(&dword_24315F000, v58, v57, "[VISUAL] Card has %ld cardSections for SearchResult: %s, first cardSection: %s, CSSI contentType: %s", (uint8_t *)v38, 0x2Au);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }
      v60 = 0;
    }
    else
    {
      v60 = 0;
      v52 = (uint64_t)v94;
    }
    v57 = v86;
    v58 = v85;
    goto LABEL_34;
  }
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v15, type metadata accessor for SearchResult);
  _s10OmniSearch0B6ResultVWOhTm_1(v33, type metadata accessor for SearchResult);

  v44 = (uint64_t)v92;
  OUTLINED_FUNCTION_1_4();
  if (v99)
  {
    v69 = v99;
    outlined bridged method (pb) of @objc SFCard.cardSections.getter(v69);
    if (v70)
    {
      OUTLINED_FUNCTION_45_16();
      if (v72)
        v73 = _CocoaArrayWrapper.endIndex.getter();
      else
        v73 = *(_QWORD *)(v71 + 16);

      OUTLINED_FUNCTION_121();
      if (v73)
        goto LABEL_48;
    }
    else
    {

    }
  }
  outlined init with copy of SearchResult(a1, v44, type metadata accessor for SearchResult);
  v74 = Logger.logObject.getter();
  v75 = static os_log_type_t.error.getter();
  v76 = os_log_type_enabled(v74, v75);
  if (v76)
  {
    v77 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v96 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v77 = 136315138;
    v78 = v89;
    SearchResultItem.type.getter();
    v79 = SearchResultType.rawValue.getter();
    v81 = v80;
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v78, v91);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v81, &v96);
    v95 = v82;
    OUTLINED_FUNCTION_33_17();
    v83 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_18(v83, type metadata accessor for SearchResult);
    _os_log_impl(&dword_24315F000, v74, v75, "[VISUAL] Card is empty or nil unexpectedly for SearchResult: %s", v77, 0xCu);
    OUTLINED_FUNCTION_48_14();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_47_18(v76, type metadata accessor for SearchResult);

LABEL_48:
  OUTLINED_FUNCTION_43_0();
}

BOOL SFCard.isEmpty.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  outlined bridged method (pb) of @objc SFCard.cardSections.getter(v0);
  if (!v1)
    return 1;
  OUTLINED_FUNCTION_45_16();
  if (v3)
    v4 = _CocoaArrayWrapper.endIndex.getter();
  else
    v4 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v4 < 1;
}

id EntityCardBuilder.cardForCSItem(_:)(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48[3];
  uint64_t v49;

  v2 = objc_msgSend((id)objc_opt_self(), sel_resultBuilderForItem_, a1);
  if (one-time initialization token for search != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  v4 = a1;
  v5 = v2;
  v6 = v4;
  v7 = v5;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v47[0] = v46;
    *(_DWORD *)v10 = 136315906;
    swift_getObjectType();
    v11 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v47);
    v48[0] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v6);
    if (v15)
    {
      v16 = v15;
    }
    else
    {
      v14 = 0x4E574F4E4B4E55;
      v16 = 0xE700000000000000;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, v47);
    v48[0] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentType.getter(objc_msgSend(v6, sel_attributeSet));
    v48[0] = v18;
    v48[1] = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    v20 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v47);
    v48[0] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2080;
    v48[0] = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentTypeTree.getter(objc_msgSend(v6, sel_attributeSet));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]?);
    v23 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v47);
    v48[0] = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v8, v9, "CSSI builder: %s for item bundleID: %s, contentType: %s, contentTypeTree:%s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v46, -1, -1);
    MEMORY[0x2494F6D70](v10, -1, -1);

  }
  else
  {

  }
  v26 = objc_msgSend(v7, sel_buildInlineCardSections);
  v27 = type metadata accessor for SFCardSection(0, (unint64_t *)&lazy cache variable for type metadata for SFCardSection);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v49 = v28;
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v29 = v7;
    v30 = SSPhotosResultBuilder.buildPhotoCardSection()();
    if (v30)
    {
      v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_24334DB70;
      *(_QWORD *)(v32 + 32) = v31;
      v48[0] = v32;
      specialized Array._endMutation()();
      v33 = v48[0];
      swift_bridgeObjectRelease();

      v49 = v33;
    }
    else
    {

    }
  }
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v48[0] = v37;
    *(_DWORD *)v36 = 136315138;
    swift_beginAccess();
    v38 = swift_bridgeObjectRetain();
    v39 = MEMORY[0x2494F5E4C](v38, v27);
    v41 = v40;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v34, v35, "[VISUAL] Got Spotlight SFCardSection: %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v37, -1, -1);
    MEMORY[0x2494F6D70](v36, -1, -1);
  }

  swift_beginAccess();
  v42 = v49;
  v43 = objc_allocWithZone(MEMORY[0x24BE84D80]);
  swift_bridgeObjectRetain();
  v44 = objc_msgSend(v43, sel_init);
  outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(v42, v44, (unint64_t *)&lazy cache variable for type metadata for SFCardSection, 0x24BE84D88, (SEL *)&selRef_setCardSections_);

  swift_bridgeObjectRelease();
  return v44;
}

id SSPhotosResultBuilder.buildPhotoCardSection()()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSArray v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  id v26;
  __int128 v28;
  uint64_t v29;

  v1 = objc_msgSend(v0, sel_buildHorizontallyScrollingCardSection);
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (v2 && (v3 = v2, (v4 = objc_msgSend(v2, sel_thumbnail)) != 0))
  {
    v5 = v4;
    objc_msgSend(v4, sel_setSize_, 0.0, 0.0);
    v6 = OUTLINED_FUNCTION_42_12(objc_allocWithZone(MEMORY[0x24BE84DC0]));
    v7 = OUTLINED_FUNCTION_42_12(objc_allocWithZone(MEMORY[0x24BE84DC8]));
    objc_msgSend(v6, sel_setCollectionStyle_, v7);
    v8 = OUTLINED_FUNCTION_42_12(objc_allocWithZone(MEMORY[0x24BE84E70]));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v9 = OUTLINED_FUNCTION_106_4();
    *(_OWORD *)(v9 + 16) = xmmword_24334DB70;
    *(_QWORD *)(v9 + 32) = v5;
    OUTLINED_FUNCTION_37_14();
    v10 = v5;
    outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(v29, v8, &lazy cache variable for type metadata for SFImage, 0x24BE84E60, (SEL *)&selRef_setImages_);
    v11 = v8;
    v12 = objc_msgSend(v3, sel_command);
    OUTLINED_FUNCTION_40_14((uint64_t)v12, sel_setCommand_);

    v13 = v11;
    v14 = objc_msgSend(v3, sel_previewCommand);
    OUTLINED_FUNCTION_40_14((uint64_t)v14, sel_setPreviewCommand_);

    v15 = v13;
    v16 = v1;
    if (outlined bridged method (ob) of @objc SFCardSection.previewButtonItems.getter(v3))
    {
      type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for SFButtonItem);
      v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v17.super.isa = 0;
    }
    objc_msgSend(v15, sel_setPreviewButtonItems_, v17.super.isa, 1, 3);

    v25 = OUTLINED_FUNCTION_106_4();
    *(_OWORD *)(v25 + 16) = v28;
    *(_QWORD *)(v25 + 32) = v15;
    OUTLINED_FUNCTION_37_14();
    v26 = v15;
    outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(v29, v6, (unint64_t *)&lazy cache variable for type metadata for SFCardSection, 0x24BE84D88, (SEL *)&selRef_setCardSections_);

  }
  else
  {

    if (one-time initialization token for fedSearch != -1)
      swift_once();
    v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logging.fedSearch);
    v19 = v0;
    v20 = Logger.logObject.getter();
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v23 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v22 = 138412290;
      v24 = v19;
      OUTLINED_FUNCTION_33_17();
      *v23 = v19;

      _os_log_impl(&dword_24315F000, v20, v21, "[VISUAL] Failed to get photo visual from spotlight, builder: %@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_48_14();
      specialized UnsafeMutablePointer.deallocate()();
    }

    return 0;
  }
  return v6;
}

void protocol witness for EntityCardBuilding.cardForSearchResult(_:) in conformance EntityCardBuilder(uint64_t a1)
{
  EntityCardBuilder.cardForSearchResult(_:)(a1);
}

double SearchEntity.defaultThumbnailSize.getter()
{
  return 60.0;
}

void outlined bridged method (pb) of @objc SFCard.cardSections.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_cardSections);
  if (v1)
  {
    v2 = v1;
    type metadata accessor for SFCardSection(0, (unint64_t *)&lazy cache variable for type metadata for SFCardSection);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_5();
}

uint64_t outlined bridged method (ob) of @objc SFCardSection.previewButtonItems.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_previewButtonItems);

  if (!v2)
    return 0;
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for SFButtonItem);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  Class isa;

  type metadata accessor for SFCardSection(0, a3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_121();
  objc_msgSend(a2, *a5, isa);

}

void outlined bridged method (mbnn) of @objc SFCard.cardSections.setter(uint64_t a1, void *a2)
{
  outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(a1, a2, (unint64_t *)&lazy cache variable for type metadata for SFCardSection, 0x24BE84D88, (SEL *)&selRef_setCardSections_);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentTypeTree.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_contentTypeTree);

  if (!v2)
    return 0;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t dispatch thunk of static EntityCardBuilding.cardForEntities(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EntityCardBuilding.cardForSearchResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for EntityCardBuilder()
{
  return &type metadata for EntityCardBuilder;
}

uint64_t OUTLINED_FUNCTION_6_33(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_9_27()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_14_23(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_22_23()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_23_27()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_24_21()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_33_17()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_35_17(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  void *v6;

  outlined bridged method (mbnn) of @objc SFImagesCardSection.images.setter(v5, v6, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_37_14()
{
  return specialized Array._endMutation()();
}

id OUTLINED_FUNCTION_40_14(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id OUTLINED_FUNCTION_42_12(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

void OUTLINED_FUNCTION_43_17(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 128));
}

void OUTLINED_FUNCTION_47_18(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_14()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_50_16()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data?(v1, v0);
}

void MemoryCreationQUNetworkService.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)MEMORY[0x2494F5BB8](0x6361426D6C6C4E50, 0xEC000000646E656BLL);
  v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (v4)
  {
    OUTLINED_FUNCTION_133_5();
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;

    if (v5 == v1 && v7 == v0)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      v10 = 0;
      goto LABEL_15;
    }
    v9 = OUTLINED_FUNCTION_72_12();
    swift_bridgeObjectRelease();
    v10 = 0;
    if ((v9 & 1) != 0)
      goto LABEL_15;
  }
  v11 = OUTLINED_FUNCTION_195_1();
  v12 = (void *)MEMORY[0x2494F5BB8](0x6B636142434D4E50, 0xEB00000000646E65);
  v13 = objc_msgSend(v11, sel_stringForKey_, v12);

  if (v13)
  {
    OUTLINED_FUNCTION_133_5();
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v16 = v15;

    if (v14 != v1 || v16 != v0)
    {
      v18 = OUTLINED_FUNCTION_72_12();
      OUTLINED_FUNCTION_121();
      v10 = v18 ^ 1;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v10 = 1;
LABEL_15:
  v19 = OUTLINED_FUNCTION_195_1();
  OUTLINED_FUNCTION_138();
  v20 = (void *)MEMORY[0x2494F5BB8](0xD000000000000011);
  v21 = objc_msgSend(v19, sel_stringForKey_, v20);

  if (!v21)
  {
LABEL_22:
    v26 = 1;
    goto LABEL_23;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v24 = v23;

  if (v22 == 49 && v24 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  OUTLINED_FUNCTION_121();
LABEL_23:
  OUTLINED_FUNCTION_150_5();
  MemoryCreationQUNetworkService.init(useThimble:useTemplate:)(v10 & 1, v26 & 1);
  OUTLINED_FUNCTION_43_0();
}

uint64_t MemoryCreationQUNetworkService.useThimble.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MemoryCreationQUNetworkService.useTemplate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MemoryCreationQUNetworkService.modelVersion.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_4();
  return *(_QWORD *)(v0 + 24);
}

void MemoryCreationQUNetworkService.modelVersion.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUNetworkService.modelVersion.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

void MemoryCreationQUNetworkService.modelID.getter()
{
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_172_1();
}

void MemoryCreationQUNetworkService.modelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0();
}

void MemoryCreationQUNetworkService.modelID.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

void MemoryCreationQUNetworkService.promptTemplateID.getter()
{
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_172_1();
}

void MemoryCreationQUNetworkService.promptTemplateID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0();
}

void MemoryCreationQUNetworkService.promptTemplateID.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t MemoryCreationQUNetworkService.samplingParameters.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_87_12();
  v0 = OUTLINED_FUNCTION_6_5();
  return v1(v0);
}

uint64_t MemoryCreationQUNetworkService.model.getter()
{
  OUTLINED_FUNCTION_1_4();
  return swift_retain();
}

void MemoryCreationQUNetworkService.model.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model);
  OUTLINED_FUNCTION_2_6();
  *v3 = a1;
  swift_release();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUNetworkService.model.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t MemoryCreationQUNetworkService.modelOnBehalfOfPID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  OUTLINED_FUNCTION_1_4();
  return *(_QWORD *)v1;
}

void MemoryCreationQUNetworkService.modelOnBehalfOfPID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  OUTLINED_FUNCTION_51_0();
}

void MemoryCreationQUNetworkService.modelOnBehalfOfPID.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

const char *MemoryCreationQUNetworkService.userPromptKey.unsafeMutableAddressor()
{
  return "userPrompt";
}

uint64_t static MemoryCreationQUNetworkService.userPromptKey.getter()
{
  return 0x6D6F725072657375;
}

const char *MemoryCreationQUNetworkService.namesPromptKey.unsafeMutableAddressor()
{
  return "names";
}

uint64_t static MemoryCreationQUNetworkService.namesPromptKey.getter()
{
  return 0x73656D616ELL;
}

const char *MemoryCreationQUNetworkService.currentTimePromptKey.unsafeMutableAddressor()
{
  return "currentTime";
}

uint64_t static MemoryCreationQUNetworkService.currentTimePromptKey.getter()
{
  return 0x54746E6572727563;
}

char **MemoryCreationQUNetworkService.fallbackPromptTemplateV2.unsafeMutableAddressor()
{
  return &static MemoryCreationQUNetworkService.fallbackPromptTemplateV2;
}

const char *static MemoryCreationQUNetworkService.fallbackPromptTemplateV2.getter()
{
  return "{{ specialToken.chat.role.system.default }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.u"
         "ser }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.assistant }}";
}

char **MemoryCreationQUNetworkService.fallbackPromptTemplateV3.unsafeMutableAddressor()
{
  return &static MemoryCreationQUNetworkService.fallbackPromptTemplateV3;
}

const char *static MemoryCreationQUNetworkService.fallbackPromptTemplateV3.getter()
{
  return "{{ specialToken.chat.role.system }}You are an expert in query understanding for a photo library. Your task is t"
         "o transform the given natural language prompt into a structured JSON format. You must follow the instructions b"
         "elow:<n> - Ensure music artist names are specifically marked as a music artist, not simply as a \"who\".<n> - I"
         "dentify named locations like landmarks, business addresses, cities, and countries, and tag them as a \"where\" "
         "rather than a \"what\".<n> - Annotate any mention of a holiday or festival name immediately followed by a year "
         "as a \"when\".<n> - Restrict \"what\" categories to only the following options: Anniversary, Birthday, Breakfas"
         "t, Concert, Dinner, Diving, Hiking, Holiday Event, Lunch, Wedding.<n> - Please treat all queries as case-insens"
         "itive and provide the same response if the meaning of the queries is the same.<n> - The photo library contains "
         "a list of names for reference: [{{ names }}]. The query may include names that are not in this list.{{ specialT"
         "oken.chat.component.turnEnd }}{{ specialToken.chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.t"
         "urnEnd }}{{ specialToken.chat.role.assistant }}";
}

uint64_t one-time initialization function for responseSanitizer()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for StringResponseSanitizer.DefaultableGuardrails();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StringResponseSanitizer.DefaultableOverrides();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StringResponseSanitizer();
  __swift_allocate_value_buffer(v8, static MemoryCreationQUNetworkService.responseSanitizer);
  __swift_project_value_buffer(v8, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  v9 = type metadata accessor for StringResponseSanitizer.Overrides();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE3C460], v4);
  v10 = type metadata accessor for StringResponseSanitizer.Guardrails();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE3C470], v0);
  return StringResponseSanitizer.init(overrides:guardrails:)();
}

uint64_t MemoryCreationQUNetworkService.responseSanitizer.unsafeMutableAddressor()
{
  return Logging.searchSignposter.unsafeMutableAddressor(&one-time initialization token for responseSanitizer, (uint64_t (*)(_QWORD))MEMORY[0x24BE3C4A8], (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
}

uint64_t static MemoryCreationQUNetworkService.responseSanitizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static SearchTool.authenticationPolicy.getter(&one-time initialization token for responseSanitizer, (uint64_t (*)(_QWORD))MEMORY[0x24BE3C4A8], (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer, a1);
}

uint64_t one-time initialization function for renderedPromptSanitizer()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableGuardrails();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableOverrides();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StringRenderedPromptSanitizer();
  __swift_allocate_value_buffer(v8, static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  __swift_project_value_buffer(v8, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  v9 = type metadata accessor for StringRenderedPromptSanitizer.Overrides();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE3C520], v4);
  v10 = type metadata accessor for StringRenderedPromptSanitizer.Guardrails();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE3C530], v0);
  return StringRenderedPromptSanitizer.init(overrides:guardrails:)();
}

uint64_t MemoryCreationQUNetworkService.renderedPromptSanitizer.unsafeMutableAddressor()
{
  return Logging.searchSignposter.unsafeMutableAddressor(&one-time initialization token for renderedPromptSanitizer, (uint64_t (*)(_QWORD))MEMORY[0x24BE3C560], (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
}

uint64_t static MemoryCreationQUNetworkService.renderedPromptSanitizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static SearchTool.authenticationPolicy.getter(&one-time initialization token for renderedPromptSanitizer, (uint64_t (*)(_QWORD))MEMORY[0x24BE3C560], (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer, a1);
}

uint64_t MemoryCreationQUNetworkService.__allocating_init(useThimble:useTemplate:)(int a1, int a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_150_5();
  MemoryCreationQUNetworkService.init(useThimble:useTemplate:)(a1, a2);
  return v4;
}

void MemoryCreationQUNetworkService.init(useThimble:useTemplate:)(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[8];
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v5 = v2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SamplingStrategy?);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v39[-v12];
  v14 = OUTLINED_FUNCTION_87_12();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_63_1();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model) = 0;
  v16 = v5 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  *(_BYTE *)(v5 + 16) = a1;
  v45 = a2;
  *(_BYTE *)(v5 + 17) = a2;
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()();
  v18 = v49;
  v17 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  v19 = MEMORY[0x2494F4F58](v18, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) + 8) + 8));
  v21 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  *(_QWORD *)(v5 + 48) = 0xD000000000000035;
  *(_QWORD *)(v5 + 56) = 0x8000000243360210;
  *(_QWORD *)(v5 + 24) = 2;
  if ((a1 & 1) == 0)
  {
    OUTLINED_FUNCTION_36_0();
    v21 = 0x8000000243360250;
    v19 = 0xD00000000000001DLL;
  }
  *(_QWORD *)(v5 + 32) = v19;
  *(_QWORD *)(v5 + 40) = v21;
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_13();
  v23 = __swift_project_value_buffer(v22, (uint64_t)static Logging.memoryCreationQU);
  swift_retain_n();
  Logger.logObject.getter();
  v24 = OUTLINED_FUNCTION_69_13();
  if (OUTLINED_FUNCTION_31(v24))
  {
    v25 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v42 = v11;
    v26 = v25;
    v40 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v47 = v40;
    *(_DWORD *)v26 = 136315650;
    if ((a1 & 1) != 0)
      v27 = 1702195828;
    else
      v27 = 0x65736C6166;
    v43 = v4;
    v44 = v13;
    if ((a1 & 1) != 0)
      v28 = 0xE400000000000000;
    else
      v28 = 0xE500000000000000;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v47);
    v48[0] = v29;
    HIDWORD(v41) = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    if ((v45 & 1) != 0)
      v30 = 1702195828;
    else
      v30 = 0x65736C6166;
    if ((v45 & 1) != 0)
      v31 = 0xE400000000000000;
    else
      v31 = 0xE500000000000000;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v47);
    v48[0] = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    OUTLINED_FUNCTION_1_4();
    v33 = *(_QWORD *)(v5 + 32);
    v34 = *(_QWORD *)(v5 + 40);
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v47);
    v46 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_312_0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v23, (os_log_type_t)v19, "LLM QU: useTbl: %s useTemplate: %s modelID: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_312_0();
  static SamplingStrategy.topK(_:)();
  v36 = type metadata accessor for SamplingStrategy();
  OUTLINED_FUNCTION_125_7(v36, v37, v38, v36);
  OUTLINED_FUNCTION_176_1();
  if ((a1 & 1) != 0)
  {
    LOBYTE(v42) = 1;
    v40 = MEMORY[0x24BEE4B08];
    v41 = 0;
  }
  else
  {
    LOBYTE(v42) = 0;
    v40 = MEMORY[0x24BEE4B08];
    v41 = 1;
  }
  v39[0] = 0;
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  outlined destroy of MobileSMSDocument?((uint64_t)v13, &demangling cache variable for type metadata for SamplingStrategy?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters, v3, v14);
  OUTLINED_FUNCTION_43_0();
}

Swift::Void __swiftcall MemoryCreationQUNetworkService.prewarm(originatorPID:)(Swift::Int originatorPID)
{
  MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(originatorPID);
  swift_release();
}

uint64_t MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  float *v9;
  uint64_t v10;
  os_log_type_t v11;
  float *v12;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  OUTLINED_FUNCTION_1_4();
  if ((*(_BYTE *)(v4 + 8) & 1) == 0
    && *(_QWORD *)v4 == a1
    && (v4 = v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model,
        OUTLINED_FUNCTION_1_4(),
        (v5 = *(_QWORD *)v4) != 0))
  {
    v6 = one-time initialization token for memoryCreationQU;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.memoryCreationQU);
    OUTLINED_FUNCTION_50_2();
    v8 = OUTLINED_FUNCTION_69_13();
    if (OUTLINED_FUNCTION_31(v8))
    {
      v9 = (float *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_68_17(v9, 3.852e-34);
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v6, (os_log_type_t)v2, "Model for PID %ld already prewarmed, no need to prewarm again", (uint8_t *)v9);
      specialized UnsafeMutablePointer.deallocate()();
    }

  }
  else
  {
    if (one-time initialization token for memoryCreationQU != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v10, (uint64_t)static Logging.memoryCreationQU);
    OUTLINED_FUNCTION_50_2();
    v11 = OUTLINED_FUNCTION_69_13();
    if (os_log_type_enabled((os_log_t)v4, v11))
    {
      v12 = (float *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_68_17(v12, 3.852e-34);
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v4, v11, "Prewarming model for PID %ld", (uint8_t *)v12);
      specialized UnsafeMutablePointer.deallocate()();
    }

    v5 = MemoryCreationQUNetworkService.createAndCacheModel(onBehalfOfPID:)(a1);
    TokenGenerator.prewarm()();
  }
  return v5;
}

uint64_t MemoryCreationQUNetworkService.createAndCacheModel(onBehalfOfPID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v2 = v1;
  v4 = type metadata accessor for CachePolicy();
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x24BDAC7A8](v6);
  type metadata accessor for TokenGenerator();
  swift_beginAccess();
  type metadata accessor for LLMBundle();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type LLMBundle and conformance LLMBundle, (uint64_t (*)(uint64_t))MEMORY[0x24BE68860], MEMORY[0x24BE68858]);
  swift_bridgeObjectRetain();
  ResourceBundleIdentifier.init(stringLiteral:)();
  static CachePolicy.inMemory.getter();
  GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
  v7 = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)();
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_model);
  swift_beginAccess();
  *v8 = v7;
  swift_retain();
  swift_release();
  v9 = v2 + OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_modelOnBehalfOfPID;
  swift_beginAccess();
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 8) = 0;
  return v7;
}

uint64_t MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 416) = a6;
  *(_QWORD *)(v8 + 424) = v7;
  *(_BYTE *)(v8 + 504) = a7;
  *(_QWORD *)(v8 + 400) = a4;
  *(_QWORD *)(v8 + 408) = a5;
  *(_QWORD *)(v8 + 384) = a2;
  *(_QWORD *)(v8 + 392) = a3;
  *(_QWORD *)(v8 + 376) = a1;
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

uint64_t MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:)()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  signed int v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)();

  if ((*(_BYTE *)(v1 + 504) & 1) != 0)
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v4 = -[NSObject processIdentifier](v0, sel_processIdentifier);

    v3 = v4;
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 416);
  }
  *(_QWORD *)(v1 + 432) = v3;
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_13();
  *(_QWORD *)(v1 + 440) = __swift_project_value_buffer(v5, (uint64_t)static Logging.memoryCreationQU);
  OUTLINED_FUNCTION_50_2();
  v6 = OUTLINED_FUNCTION_69_13();
  if (OUTLINED_FUNCTION_82_14(v6))
  {
    v7 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v7 = 134217984;
    *(_QWORD *)(v1 + 368) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v0, v2, "Calling LLM QU parse on behalf of PID: %ld", v7);
    specialized UnsafeMutablePointer.deallocate()();
  }

  v8 = *(_QWORD *)(v1 + 424);
  v9 = MemoryCreationQUNetworkService.prewarmReturningModel(originatorPID:)(v3);
  *(_QWORD *)(v1 + 448) = v9;
  OUTLINED_FUNCTION_1_4();
  v10 = *(_QWORD *)(v8 + 24);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 456) = v11;
  *v11 = v1;
  if (v10 == 3)
  {
    v12 = v1 + 224;
    v13 = MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:);
  }
  else
  {
    v12 = v1 + 120;
    v13 = MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:);
  }
  v11[1] = v13;
  return MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:)(v12, *(_QWORD *)(v1 + 384), *(_QWORD *)(v1 + 392), *(_QWORD *)(v1 + 400), *(_QWORD *)(v1 + 408), v9);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 464) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  __n128 *v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_135_6();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_61_13(v0[20].n128_u64[0], v0[14], v0[15], v0[16], v0[17], v0[18], v0[19]);
  return OUTLINED_FUNCTION_43(v1);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 472) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_135_6();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_61_13(*(_QWORD *)(v0 + 216), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152), *(__n128 *)(v0 + 168), *(__n128 *)(v0 + 184), *(__n128 *)(v0 + 200));
  return OUTLINED_FUNCTION_43(v1);
}

{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (void *)v0[58];
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[58];
    v7 = v0[53];
    v8 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v9 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v8 = 134218242;
    v10 = *(_QWORD *)(v7 + 24);
    swift_release();
    v0[44] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v8 + 12) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[45] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v9 = v12;

    _os_log_impl(&dword_24315F000, v4, v5, "Error while calling LLM QU parse with model version %ld: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  v13 = (void *)v0[58];
  swift_release_n();

  v14 = v0[54];
  MemoryCreationQUNetworkService.setModelIDsForOlderModelVersions()();
  v0[60] = MemoryCreationQUNetworkService.createAndCacheModel(onBehalfOfPID:)(v14);
  v15 = (_QWORD *)swift_task_alloc();
  v0[61] = v15;
  *v15 = v0;
  v15[1] = MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:);
  OUTLINED_FUNCTION_90();
  return MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:)(v16, v17, v18, v19, v20, v21);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 496) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  void *v0;
  __n128 *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_177_2();

  OUTLINED_FUNCTION_135_6();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_61_13(v1[7].n128_u64[0], v1[1], v1[2], v1[3], v1[4], v1[5], v1[6]);
  return OUTLINED_FUNCTION_43(v2);
}

{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_177_2();

  swift_release();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[136] = v6;
  v7[135] = a6;
  v7[134] = a5;
  v7[133] = a4;
  v7[132] = a3;
  v7[131] = a2;
  v7[130] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  v7[137] = OUTLINED_FUNCTION_18_5();
  v8 = type metadata accessor for PromptTemplate();
  v7[138] = v8;
  v7[139] = *(_QWORD *)(v8 - 8);
  v7[140] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:)()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *object;
  os_log_type_t v36;
  uint8_t *v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v2 = *(NSObject **)(v0 + 1088);
  v3 = OUTLINED_FUNCTION_13();
  v4 = __swift_project_value_buffer(v3, (uint64_t)static Logging.memoryCreationQU);
  v5 = v4;
  *(_QWORD *)(v0 + 1128) = v4;
  swift_retain();
  OUTLINED_FUNCTION_84_10();
  v6 = OUTLINED_FUNCTION_69_13();
  v7 = OUTLINED_FUNCTION_82_14(v6);
  v8 = *(_QWORD *)(v0 + 1088);
  if (v7)
  {
    v9 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v9 = 134217984;
    OUTLINED_FUNCTION_1_4();
    *(_QWORD *)(v0 + 1032) = *(_QWORD *)(v8 + 24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v2, v1, "Calling LLM QU parse with model version %ld", v9);
    specialized UnsafeMutablePointer.deallocate()();
  }
  swift_release();

  v10 = *(_QWORD *)(v0 + 1088);
  v11 = *(_QWORD *)(v0 + 1056);
  v12 = *(_QWORD *)(v0 + 1048);
  v13 = MemoryCreationQUNetworkService.formatNames(personNames:petNames:)(*(Swift::OpaquePointer *)(v0 + 1064), *(Swift::OpaquePointer *)(v0 + 1072));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433505A0;
  *(_QWORD *)(inited + 32) = 0x6D6F725072657375;
  *(_QWORD *)(inited + 40) = 0xEA00000000007470;
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = 0x73656D616ELL;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  *(Swift::String *)(inited + 80) = v13;
  *(_QWORD *)(inited + 96) = 0x54746E6572727563;
  *(_QWORD *)(inited + 104) = 0xEB00000000656D69;
  *(_QWORD *)(inited + 112) = 0;
  *(_QWORD *)(inited + 120) = 0xE000000000000000;
  OUTLINED_FUNCTION_4_7();
  v15 = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)(v0 + 1136) = v15;
  if (*(_BYTE *)(v10 + 16) == 1)
  {
    v16 = *(_QWORD *)(v0 + 1088);
    if (*(_BYTE *)(v16 + 17) == 1)
    {
      v17 = OUTLINED_FUNCTION_84_10();
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_24315F000, v17, v18, "Calling LLM QU parse with template", v19, 2u);
        specialized UnsafeMutablePointer.deallocate()();
      }
      v20 = *(_QWORD **)(v0 + 1088);

      OUTLINED_FUNCTION_1_4();
      v21 = v20[3];
      if (v21 == 3)
        v22 = "{{ specialToken.chat.role.system }}You are an expert in query understanding for a photo library. Your task"
              " is to transform the given natural language prompt into a structured JSON format. You must follow the inst"
              "ructions below:<n> - Ensure music artist names are specifically marked as a music artist, not simply as a "
              "\"who\".<n> - Identify named locations like landmarks, business addresses, cities, and countries, and tag "
              "them as a \"where\" rather than a \"what\".<n> - Annotate any mention of a holiday or festival name immedi"
              "ately followed by a year as a \"when\".<n> - Restrict \"what\" categories to only the following options: A"
              "nniversary, Birthday, Breakfast, Concert, Dinner, Diving, Hiking, Holiday Event, Lunch, Wedding.<n> - Plea"
              "se treat all queries as case-insensitive and provide the same response if the meaning of the queries is th"
              "e same.<n> - The photo library contains a list of names for reference: [{{ names }}]. The query may includ"
              "e names that are not in this list.{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.user "
              "}}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.assistant }}";
      else
        v22 = "{{ specialToken.chat.role.system.default }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.r"
              "ole.user }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.assistant }}";
      if (v21 == 3)
        v23 = 1147;
      else
        v23 = 212;
      static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingID.getter();
      OUTLINED_FUNCTION_1_4();
      v24 = v20[6];
      v25 = v20[7];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, StaticString)>);
      v26 = swift_initStackObject();
      *(_OWORD *)(v26 + 16) = xmmword_24334DB60;
      *(_QWORD *)(v26 + 32) = v24;
      *(_QWORD *)(v26 + 40) = v25;
      *(_QWORD *)(v26 + 48) = v22;
      *(_QWORD *)(v26 + 56) = v23;
      *(_BYTE *)(v26 + 64) = 2;
      swift_bridgeObjectRetain_n();
      Dictionary.init(dictionaryLiteral:)();
      PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
      *(_QWORD *)(v0 + 864) = &type metadata for FeatureFlag;
      *(_QWORD *)(v0 + 872) = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
      *(_BYTE *)(v0 + 840) = 4;
      v27 = isFeatureEnabled(_:)();
      __swift_destroy_boxed_opaque_existential_1(v0 + 840);
      v28 = (_QWORD *)swift_task_alloc();
      if ((v27 & 1) != 0)
      {
        *(_QWORD *)(v0 + 1144) = v28;
        *v28 = v0;
        v28[1] = MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:);
        OUTLINED_FUNCTION_90();
        return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(v29, v30, v31, v32, v33);
      }
      else
      {
        *(_QWORD *)(v0 + 1160) = v28;
        *v28 = v0;
        v28[1] = MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:);
        OUTLINED_FUNCTION_90();
        return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(v49, v50, v51, v52);
      }
    }
    OUTLINED_FUNCTION_1_4();
    object = MemoryCreationQUNetworkService.generatePrompt(version:promptBindings:)(*(_QWORD *)(v16 + 24), (Swift::OpaquePointer)v15)._object;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 1056);
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_4_7();
    object = *(void **)(v0 + 1056);
  }
  *(_QWORD *)(v0 + 1192) = object;
  OUTLINED_FUNCTION_84_10();
  v36 = OUTLINED_FUNCTION_69_13();
  if (OUTLINED_FUNCTION_31(v36))
  {
    v37 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v37 = 0;
    _os_log_impl(&dword_24315F000, (os_log_t)v16, v5, "Calling LLM QU parse without template", v37, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  *(_QWORD *)(v0 + 904) = &type metadata for FeatureFlag;
  *(_QWORD *)(v0 + 912) = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
  *(_BYTE *)(v0 + 880) = 4;
  v38 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 880);
  v39 = (_QWORD *)swift_task_alloc();
  if ((v38 & 1) != 0)
  {
    *(_QWORD *)(v0 + 1200) = v39;
    *v39 = v0;
    v39[1] = MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:);
    OUTLINED_FUNCTION_90();
    return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(v40, v41, v42, v43, v44);
  }
  else
  {
    *(_QWORD *)(v0 + 1216) = v39;
    *v39 = v0;
    v39[1] = MemoryCreationQUNetworkService.parseHelper(_:personNames:petNames:quModel:);
    OUTLINED_FUNCTION_90();
    return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(v45, v46, v47, v48);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_101_3(v2);
  *(_QWORD *)(v0 + 1152) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 1112));
  OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_101_3(v4);
  v3[146] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v3[147] = v0;
    v3[148] = v2;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 1168);
  MemoryCreationQUModelResponse.init(jsonString:)(*(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1176), v0 + 248);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 1112));
  if (v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1040);
    v4 = *(_QWORD *)(v0 + 344);
    v11 = *(_OWORD *)(v0 + 328);
    v9 = *(_OWORD *)(v0 + 280);
    v10 = *(_OWORD *)(v0 + 312);
    v7 = *(_OWORD *)(v0 + 264);
    v8 = *(_OWORD *)(v0 + 296);
    v6 = *(_OWORD *)(v0 + 248);
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(_OWORD *)(v3 + 32) = v9;
    *(_OWORD *)(v3 + 48) = v8;
    *(_OWORD *)(v3 + 64) = v10;
    *(_OWORD *)(v3 + 80) = v11;
    *(_QWORD *)(v3 + 96) = v4;
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  }
  return v2();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 1112));
  OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_101_3(v2);
  *(_QWORD *)(v0 + 1208) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_101_3(v4);
  v3[153] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v3[154] = v0;
    v3[155] = v2;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 1224);
  MemoryCreationQUModelResponse.init(jsonString:)(*(_QWORD *)(v0 + 1240), *(_QWORD *)(v0 + 1232), v0 + 456);
  if (v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_95();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1040);
    v4 = *(_QWORD *)(v0 + 552);
    v11 = *(_OWORD *)(v0 + 536);
    v9 = *(_OWORD *)(v0 + 488);
    v10 = *(_OWORD *)(v0 + 520);
    v7 = *(_OWORD *)(v0 + 472);
    v8 = *(_OWORD *)(v0 + 504);
    v6 = *(_OWORD *)(v0 + 456);
    swift_task_dealloc();
    OUTLINED_FUNCTION_95();
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(_OWORD *)(v3 + 32) = v9;
    *(_OWORD *)(v3 + 48) = v8;
    *(_OWORD *)(v3 + 64) = v10;
    *(_OWORD *)(v3 + 80) = v11;
    *(_QWORD *)(v3 + 96) = v4;
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  }
  return OUTLINED_FUNCTION_48_15(v2);
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_95();
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v0 + 8));
}

#error "243301234: call analysis failed (funcsize=97)"

#error "2433015A8: call analysis failed (funcsize=82)"

uint64_t MemoryCreationQUNetworkService.setModelIDsForOlderModelVersions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()();
  v3 = v9;
  v2 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v4 = MEMORY[0x2494F4F58](v3, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 8) + 8));
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = 0xD000000000000035;
  *(_QWORD *)(v1 + 56) = 0x8000000243360210;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = 2;
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v6 = 0x8000000243360250;
    v4 = 0xD00000000000001DLL;
  }
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v6;
  return swift_bridgeObjectRelease();
}

Swift::String __swiftcall MemoryCreationQUNetworkService.formatNames(personNames:petNames:)(Swift::OpaquePointer personNames, Swift::OpaquePointer petNames)
{
  uint64_t v2;
  void *v3;
  Swift::String result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  BidirectionalCollection<>.joined(separator:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_172_1();
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_140_3(a1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 128) = v5;
  v6 = OUTLINED_FUNCTION_178_2(v5);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(v6, v7, v2, v3, v1);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(a1, v3, a2, a3);
}

Swift::String __swiftcall MemoryCreationQUNetworkService.generatePrompt(version:promptBindings:)(Swift::Int version, Swift::OpaquePointer promptBindings)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  v3 = Dictionary.init(dictionaryLiteral:)();
  v4 = StaticString.description.getter();
  v6 = MemoryCreationQUNetworkService.render(prompt:with:)(v4, v5, v3);
  v8 = v7;
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_121();
  MemoryCreationQUNetworkService.render(prompt:with:)(v6, v8, (uint64_t)promptBindings._rawValue);
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_6_5();
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_140_3(a1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 128) = v5;
  v6 = OUTLINED_FUNCTION_178_2(v5);
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(v6, v7, v3, v2, v1);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_101_3(v3);
  swift_task_dealloc();
  if (!v1)
    memcpy(*(void **)(v0 + 120), (const void *)(v0 + 16), 0x68uLL);
  return OUTLINED_FUNCTION_16_25(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer;
  return closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(a1, a2, v3, a3);
}

uint64_t MemoryCreationQUNetworkService.render(prompt:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  int64_t v21;

  v20 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v16 = *v15;
    v17 = (void *)v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 8224032;
    v19._object = (void *)0xE300000000000000;
    String.append(_:)(v19);
    lazy protocol witness table accessor for type String and conformance String();
    a1 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v12 >= v21)
      goto LABEL_21;
    v13 = *(_QWORD *)(v20 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v21)
        goto LABEL_21;
      v13 = *(_QWORD *)(v20 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v21)
          goto LABEL_21;
        v13 = *(_QWORD *)(v20 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_18:
    v7 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v21)
  {
LABEL_21:
    swift_release();
    return a1;
  }
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v21)
      goto LABEL_21;
    v13 = *(_QWORD *)(v20 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_138();
  return MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()((uint64_t)closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride(), v0);
}

void closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()()
{
  closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()();
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2[5];

  OUTLINED_FUNCTION_137_7();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_50_1();
  v2[3] = type metadata accessor for BindableVariable();
  v2[4] = MEMORY[0x24BE7AC48];
  __swift_allocate_boxed_opaque_existential_1Tm(v2);
  BindableVariable.init(name:)();
  OUTLINED_FUNCTION_64_12();
  OUTLINED_FUNCTION_174_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  v1 = (__n128 *)OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_44_21(v1, (__n128)xmmword_24334DB60);
  OUTLINED_FUNCTION_63_18();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v4[29] = v5;
  v4[30] = *(_QWORD *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(_QWORD *)(v6 - 8);
  v4[37] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v4[38] = v7;
  v4[39] = *(_QWORD *)(v7 - 8);
  v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(_QWORD *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v4[46] = v9;
  v4[47] = *(_QWORD *)(v9 - 8);
  v4[48] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v4[49] = v10;
  v4[50] = *(_QWORD *)(v10 - 8);
  v4[51] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[52] = v11;
  v4[53] = *(_QWORD *)(v11 - 8);
  v4[54] = swift_task_alloc();
  v12 = type metadata accessor for CompletionPrompt();
  v4[55] = v12;
  v4[56] = *(_QWORD *)(v12 - 8);
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  return swift_task_switch();
}

#error "2433021D8: call analysis failed (funcsize=119)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 568) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  __n128 *v17;
  uint64_t v18;
  __n128 *inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t (*v121)(uint64_t, _QWORD, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v1 = *(_QWORD *)(v0 + 256);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  OUTLINED_FUNCTION_36_16(v1);
  if (v2)
  {
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    v127 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 544);
    v121 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 528);
    v120 = *(_DWORD *)(v0 + 608);
    v111 = *(_QWORD *)(v0 + 512);
    v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    OUTLINED_FUNCTION_148_4();
    v105 = v4;
    v108 = v3;
    v5 = *(_QWORD *)(v0 + 352);
    OUTLINED_FUNCTION_122_7();
    v129 = v6;
    v131 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 288);
    v82 = *(_QWORD *)(v0 + 200);
    OUTLINED_FUNCTION_29_20();
    OUTLINED_FUNCTION_45_17();
    OUTLINED_FUNCTION_105_13();
    OUTLINED_FUNCTION_70_13(v131, v1);
    v8 = _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_43_18(v8, v9, v10, v11, v12, v13, v14, v15, v58, v64, v70, v76);
    OUTLINED_FUNCTION_80_3(v131, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    v16 = (__n128 *)OUTLINED_FUNCTION_168_2();
    v17 = OUTLINED_FUNCTION_103_10(v16, (__n128)xmmword_24334DB60);
    OUTLINED_FUNCTION_102_8(v17, MEMORY[0x24BE7AD80], v59, v65, v71, v77, v82, v87);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    v18 = MEMORY[0x24BEE0D10];
    OUTLINED_FUNCTION_57_11();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_123_8(inited, v20, v21, v22, v23, v24, v25, v26, v60, v66, v72, v78, v83, v88, v27);
    OUTLINED_FUNCTION_110_8(v28, v29);
    v30 = OUTLINED_FUNCTION_104_8(v105, v100, v114);
    OUTLINED_FUNCTION_98_8(v30, v31, v32, v33, v34, v35, v36, v37, v61, v67, v73, v79, v84, v89, v0 + 16, v94, v97, v100, v0 + 104,
      v105,
      v108,
      v111,
      (uint64_t)v114,
      v117,
      v120,
      v121);
    OUTLINED_FUNCTION_167_2();
    v38 = OUTLINED_FUNCTION_196_3();
    OUTLINED_FUNCTION_141_5(v38, v39, v40, v41, v42, v43, v44, v45, v62, v68, v74, v80, v85, v90, v92, v95, v98, v101, v103,
      v106,
      v109,
      v112,
      v115,
      v118,
      v122,
      v124,
      v7,
      v127);
    OUTLINED_FUNCTION_57_11();
    OUTLINED_FUNCTION_65_15();
    OUTLINED_FUNCTION_47_2();
    OUTLINED_FUNCTION_36_0();
    v46 = OUTLINED_FUNCTION_96_11(v126);
    OUTLINED_FUNCTION_116_10(v46, v47, v48, v49, v50, v51, v52, v53, v63, v69, v75, v81, v86, v91, v93, v96, v99, v102, v104,
      v107,
      v110,
      v113,
      v116,
      v119,
      v123,
      v125,
      v126,
      v128,
      v129);
    OUTLINED_FUNCTION_42_13();
    OUTLINED_FUNCTION_80_3((uint64_t)v16, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 32));
  }
  v54 = *(_QWORD *)(v0 + 568);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_30_20();
  if (v54)
  {
    v55 = *(_QWORD *)(v0 + 496);
    OUTLINED_FUNCTION_67_17(*(_QWORD *)(v0 + 456));
    OUTLINED_FUNCTION_49_18();
    OUTLINED_FUNCTION_67_17(v55);
    swift_task_dealloc();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    swift_task_dealloc();
    OUTLINED_FUNCTION_161_4();
    OUTLINED_FUNCTION_160_4();
    OUTLINED_FUNCTION_159_4();
    OUTLINED_FUNCTION_158_4();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_97_11();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_112_6();
  OUTLINED_FUNCTION_74_15();
  OUTLINED_FUNCTION_187_4();
  *(_QWORD *)(v0 + 576) = swift_task_alloc();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BEB8000]);
  OUTLINED_FUNCTION_194_2((uint64_t)closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:));
  OUTLINED_FUNCTION_97_11();
  return GenerativeConfigurationRunnable<>.run(returning:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_101_3(v4);
  v3[73] = v1;
  swift_task_dealloc();
  v5 = v3[30];
  if (!v1)
  {
    v3[74] = v0;
    v3[75] = v2;
  }
  OUTLINED_FUNCTION_40(v5);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_53_19();
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 440);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 336));
  v1(v2, v3);
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 592));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_84_12();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_12_28();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_192_1();
  return OUTLINED_FUNCTION_52_13(v1);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_84_12();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_12_28();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_192_1();
  return OUTLINED_FUNCTION_52_13(v1);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding_generateGenerativeFunctionOverride()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_138();
  return MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()((uint64_t)closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride(), v0);
}

void sub_243302938()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_81_11();
  OUTLINED_FUNCTION_56_5();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[40] = a4;
  v5[41] = a5;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  v5[42] = *a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v5[43] = v6;
  v5[44] = *(_QWORD *)(v6 - 8);
  v5[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[46] = swift_task_alloc();
  v5[47] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[48] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[49] = v7;
  v5[50] = *(_QWORD *)(v7 - 8);
  v5[51] = swift_task_alloc();
  v8 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[52] = v8;
  v5[53] = *(_QWORD *)(v8 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[55] = swift_task_alloc();
  v9 = type metadata accessor for FunctionIdentifier();
  v5[56] = v9;
  v5[57] = *(_QWORD *)(v9 - 8);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v5[60] = v10;
  v5[61] = *(_QWORD *)(v10 - 8);
  v5[62] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v5[63] = v11;
  v5[64] = *(_QWORD *)(v11 - 8);
  v5[65] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[66] = v12;
  v5[67] = *(_QWORD *)(v12 - 8);
  v5[68] = swift_task_alloc();
  v13 = type metadata accessor for CompletionPrompt();
  v5[69] = v13;
  v5[70] = *(_QWORD *)(v13 - 8);
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  return swift_task_switch();
}

#error "243302D38: call analysis failed (funcsize=124)"

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 680) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  __n128 *inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t (*v119)(uint64_t, _QWORD, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v1 = *(_QWORD *)(v0 + 368);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  OUTLINED_FUNCTION_36_16(v1);
  if (v2)
  {
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    v125 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 656);
    v119 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 640);
    v118 = *(_DWORD *)(v0 + 704);
    v109 = *(_QWORD *)(v0 + 624);
    v112 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 632);
    v128 = *(_QWORD *)(v0 + 560);
    v101 = *(_QWORD *)(v0 + 544);
    v106 = *(_QWORD *)(v0 + 528);
    v3 = *(_QWORD *)(v0 + 464);
    v62 = *(_QWORD *)(v0 + 456);
    v68 = *(_QWORD *)(v0 + 448);
    v74 = *(_QWORD *)(v0 + 472);
    v127 = *(_QWORD *)(v0 + 424);
    v129 = *(_QWORD *)(v0 + 408);
    v4 = *(_QWORD *)(v0 + 400);
    v80 = *(_QWORD *)(v0 + 312);
    OUTLINED_FUNCTION_29_20();
    OUTLINED_FUNCTION_45_17();
    OUTLINED_FUNCTION_105_13();
    OUTLINED_FUNCTION_70_13(v129, v1);
    v5 = _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_43_18(v5, v6, v7, v8, v9, v10, v11, v12, v56, v62, v68, v74);
    OUTLINED_FUNCTION_80_3(v129, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    v13 = (__n128 *)OUTLINED_FUNCTION_168_2();
    v14 = OUTLINED_FUNCTION_103_10(v13, (__n128)xmmword_24334DB60);
    OUTLINED_FUNCTION_102_8(v14, MEMORY[0x24BE7AD80], v57, v63, v69, v75, v80, v85);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    v15 = MEMORY[0x24BEE0D10];
    OUTLINED_FUNCTION_57_11();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_123_8(inited, v17, v18, v19, v20, v21, v22, v23, v58, v64, v70, v76, v81, v86, v24);
    OUTLINED_FUNCTION_110_8(v25, v26);
    v27 = OUTLINED_FUNCTION_104_8(v101, v98, v112);
    OUTLINED_FUNCTION_98_8(v27, v28, v29, v30, v31, v32, v33, v34, v59, v65, v71, v77, v82, v87, v0 + 120, v92, v95, v98, v101,
      v0 + 208,
      v106,
      v109,
      (uint64_t)v112,
      v115,
      v118,
      v119);
    OUTLINED_FUNCTION_167_2();
    v35 = OUTLINED_FUNCTION_196_3();
    OUTLINED_FUNCTION_141_5(v35, v36, v37, v38, v39, v40, v41, v42, v60, v66, v72, v78, v83, v88, v90, v93, v96, v99, v102,
      v104,
      v107,
      v110,
      v113,
      v116,
      v120,
      v122,
      v4,
      v125);
    OUTLINED_FUNCTION_57_11();
    OUTLINED_FUNCTION_65_15();
    OUTLINED_FUNCTION_47_2();
    OUTLINED_FUNCTION_36_0();
    v43 = OUTLINED_FUNCTION_96_11(v124);
    OUTLINED_FUNCTION_116_10(v43, v44, v45, v46, v47, v48, v49, v50, v61, v67, v73, v79, v84, v89, v91, v94, v97, v100, v103,
      v105,
      v108,
      v111,
      v114,
      v117,
      v121,
      v123,
      v124,
      v126,
      v127);
    OUTLINED_FUNCTION_42_13();
    OUTLINED_FUNCTION_80_3((uint64_t)v13, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 32));
  }
  v51 = *(_QWORD *)(v0 + 680);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_30_20();
  if (v51)
  {
    v52 = *(_QWORD *)(v0 + 608);
    OUTLINED_FUNCTION_67_17(*(_QWORD *)(v0 + 568));
    OUTLINED_FUNCTION_49_18();
    OUTLINED_FUNCTION_67_17(v52);
    swift_task_dealloc();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    swift_task_dealloc();
    OUTLINED_FUNCTION_161_4();
    OUTLINED_FUNCTION_160_4();
    OUTLINED_FUNCTION_159_4();
    OUTLINED_FUNCTION_158_4();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_97_11();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_83_6();
  OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_189_4();
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 688) = v54;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BE3BDC0]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse();
  *v54 = v0;
  v54[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_97_11();
  return GenerativeConfigurationRunnable<>.run<A>(type:returning:)();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_101_3(v2);
  *(_QWORD *)(v0 + 696) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 352));
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 552);
  OUTLINED_FUNCTION_132_3();
  v4 = *(_QWORD *)(v0 + 296);
  OUTLINED_FUNCTION_16_10(v5);
  v1(v2, v3);
  v13 = OUTLINED_FUNCTION_191_2();
  v14 = v6;
  v11 = *(_OWORD *)(v0 + 80);
  v12 = *(_OWORD *)(v0 + 64);
  v10 = *(_OWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_123();
  swift_task_dealloc();
  *(_OWORD *)v4 = v15;
  *(_OWORD *)(v4 + 16) = v14;
  *(__n128 *)(v4 + 32) = v13;
  *(_OWORD *)(v4 + 48) = v12;
  *(_OWORD *)(v4 + 64) = v11;
  *(_OWORD *)(v4 + 80) = v10;
  *(_QWORD *)(v4 + 96) = v7;
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v8();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_84_12();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 456));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_192_1();
  return OUTLINED_FUNCTION_48_15(v1);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_84_12();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 456));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_192_1();
  return OUTLINED_FUNCTION_48_15(v1);
}

void closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  uint64_t v0;
  __n128 *v1;

  OUTLINED_FUNCTION_137_7();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_63_1();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_64_12();
  OUTLINED_FUNCTION_174_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  v1 = (__n128 *)OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_44_21(v1, (__n128)xmmword_24334DB60);
  OUTLINED_FUNCTION_63_18();
}

void sub_243303514()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_81_11();
  OUTLINED_FUNCTION_56_5();
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_138();
  return MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()((uint64_t)closure #1 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride(), v0);
}

void closure #1 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride()()
{
  closure #1 in MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[26] = a3;
  v4[27] = a4;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v4[29] = v5;
  v4[30] = *(_QWORD *)(v5 - 8);
  v4[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v4[32] = swift_task_alloc();
  v4[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v4[34] = swift_task_alloc();
  v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v4[35] = v6;
  v4[36] = *(_QWORD *)(v6 - 8);
  v4[37] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v4[38] = v7;
  v4[39] = *(_QWORD *)(v7 - 8);
  v4[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v4[41] = swift_task_alloc();
  v8 = type metadata accessor for FunctionIdentifier();
  v4[42] = v8;
  v4[43] = *(_QWORD *)(v8 - 8);
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v4[46] = v9;
  v4[47] = *(_QWORD *)(v9 - 8);
  v4[48] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v4[49] = v10;
  v4[50] = *(_QWORD *)(v10 - 8);
  v4[51] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v4[52] = v11;
  v4[53] = *(_QWORD *)(v11 - 8);
  v4[54] = swift_task_alloc();
  v12 = type metadata accessor for CompletionPrompt();
  v4[55] = v12;
  v4[56] = *(_QWORD *)(v12 - 8);
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_94_2();
  v17 = *(_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(OUTLINED_FUNCTION_29_5() + 16) = v3;
  OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_95();
  *(_QWORD *)(v0 + 520) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(_QWORD *)(v0 + 528) = OUTLINED_FUNCTION_87_12();
  OUTLINED_FUNCTION_169_3();
  *(_QWORD *)(v0 + 536) = v4;
  OUTLINED_FUNCTION_71_8(v2, v4);
  v5 = *MEMORY[0x24BE3C3E0];
  *(_DWORD *)(v0 + 624) = v5;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104);
  *(_QWORD *)(v0 + 544) = v6;
  OUTLINED_FUNCTION_107_7(v2, v5, v6);
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  *(_QWORD *)(v0 + 552) = v7;
  OUTLINED_FUNCTION_120_8();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  *(_QWORD *)(v0 + 560) = v8;
  OUTLINED_FUNCTION_151_4(v8);
  *(_QWORD *)(v0 + 568) = *(_QWORD *)(v17 + 8);
  OUTLINED_FUNCTION_180_2();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v18);
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_148_2();
  if (one-time initialization token for responseSanitizer != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_129_5();
  v10 = OUTLINED_FUNCTION_15_28(v9, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_127_5(v10, *MEMORY[0x24BE3C3E8]);
  OUTLINED_FUNCTION_100_9();
  OUTLINED_FUNCTION_60_13();
  OUTLINED_FUNCTION_148_2();
  if (one-time initialization token for renderedPromptSanitizer != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 384);
  v13 = OUTLINED_FUNCTION_145_5();
  OUTLINED_FUNCTION_14_24(v13, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_107_7(v12, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 104));
  OUTLINED_FUNCTION_17_30();
  OUTLINED_FUNCTION_90_11(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_212_0();
  v14 = OUTLINED_FUNCTION_144_4();
  OUTLINED_FUNCTION_32_13(v14);
  OUTLINED_FUNCTION_33_18();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v15;
  *v15 = v0;
  v15[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:);
  OUTLINED_FUNCTION_66_18();
  return OUTLINED_FUNCTION_2_32();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 584) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *inited;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  unint64_t v29;
  uint64_t v30;
  __n128 *v31;
  __n128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  unsigned int v49;
  void (*v50)(uint64_t, _QWORD, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  OUTLINED_FUNCTION_36_16(v1);
  if (v3)
  {
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    v52 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v50 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 544);
    v49 = *(_DWORD *)(v0 + 624);
    v47 = *(_QWORD *)(v0 + 528);
    v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
    v54 = *(_QWORD *)(v0 + 472);
    OUTLINED_FUNCTION_148_4();
    v45 = v5;
    v46 = v4;
    v6 = *(_QWORD *)(v0 + 352);
    OUTLINED_FUNCTION_122_7();
    v53 = v7;
    v8 = *(_QWORD *)(v0 + 304);
    v57 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 288);
    v51 = v9;
    v11 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v43 = *(_QWORD *)(v0 + 192);
    v44 = *(_QWORD *)(v0 + 200) + v12;
    v13 = v1 + *(int *)(v2 + 48);
    v14 = v10 + *(int *)(v11 + 48);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v15(v10, v1, v8);
    v16 = *(_QWORD *)(v9 + 32);
    OUTLINED_FUNCTION_70_13(v14, v13);
    v17 = v10 + *(int *)(v11 + 48);
    v15(v56, v10, v8);
    OUTLINED_FUNCTION_70_13(v57, v17);
    v18 = _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    OUTLINED_FUNCTION_43_18(v18, v19, v20, v21, v22, v23, v24, v25, v39, v40, v41, v42);
    OUTLINED_FUNCTION_80_3(v57, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = (__n128 *)swift_initStackObject();
    v27 = OUTLINED_FUNCTION_28_20(inited, (__n128)xmmword_24334DB60);
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    inited[4].n128_u64[1] = v27;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, v28, MEMORY[0x24BE3C630]);
    inited[5].n128_u64[0] = v29;
    OUTLINED_FUNCTION_156_4();
    OUTLINED_FUNCTION_80_3(v30, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    OUTLINED_FUNCTION_56_12();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    v31 = (__n128 *)swift_initStackObject();
    v32 = OUTLINED_FUNCTION_170_3(v31, (__n128)xmmword_24334DB60);
    OUTLINED_FUNCTION_110_8((uint64_t)v32, v33);
    OUTLINED_FUNCTION_104_8(v45, v44, v48);
    v50(v45, v49, v46);
    v31[4].n128_u64[1] = v47;
    OUTLINED_FUNCTION_156_4();
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v52(v45, v46);
    v34 = OUTLINED_FUNCTION_56_12();
    OUTLINED_FUNCTION_142_4();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_96_11(v51);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v8);
    OUTLINED_FUNCTION_42_13();
    OUTLINED_FUNCTION_80_3(v34, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
  }
  v35 = *(_QWORD *)(v0 + 584);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_30_20();
  if (v35)
  {
    v36 = *(_QWORD *)(v0 + 512);
    OUTLINED_FUNCTION_67_17(*(_QWORD *)(v0 + 456));
    OUTLINED_FUNCTION_49_18();
    OUTLINED_FUNCTION_67_17(v36);
    swift_task_dealloc();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_161_4();
    OUTLINED_FUNCTION_160_4();
    OUTLINED_FUNCTION_159_4();
    OUTLINED_FUNCTION_158_4();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_86_15();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_112_6();
  OUTLINED_FUNCTION_74_15();
  OUTLINED_FUNCTION_187_4();
  *(_QWORD *)(v0 + 592) = swift_task_alloc();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BEB8000]);
  OUTLINED_FUNCTION_194_2((uint64_t)closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:));
  OUTLINED_FUNCTION_86_15();
  return GenerativeConfigurationRunnable<>.run(returning:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_101_3(v4);
  v3[75] = v1;
  swift_task_dealloc();
  v5 = v3[30];
  if (!v1)
  {
    v3[76] = v0;
    v3[77] = v2;
  }
  OUTLINED_FUNCTION_40(v5);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  OUTLINED_FUNCTION_104_4();
  v1 = *(void (**)(uint64_t))(v0 + 568);
  OUTLINED_FUNCTION_16_10(*(_QWORD *)(v0 + 344));
  v2 = OUTLINED_FUNCTION_6_5();
  v1(v2);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 608));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_19();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_193_2();
  return OUTLINED_FUNCTION_58_12(v1);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_19();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_193_2();
  return OUTLINED_FUNCTION_58_12(v1);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding_generateGenerativeFunctionOverride()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_138();
  return MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()((uint64_t)closure #1 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate_generateGenerativeFunctionOverride(), v0);
}

uint64_t MemoryCreationQUNetworkService.parseWithLLMQU_generateGenerativeFunctionOverride()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;

  v47 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  v44 = v4 - v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v8 = v7 - v6;
  v9 = type metadata accessor for BindableConfiguration();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  type metadata accessor for CompletionPrompt();
  OUTLINED_FUNCTION_65_1();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)&v40 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v43 = (char *)&v40 - v23;
  v24 = v40;
  CompletionPrompt.init(_:)();
  v40 = v24;
  OUTLINED_FUNCTION_138();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  OUTLINED_FUNCTION_4_11((uint64_t)v17);
  if (one-time initialization token for responseSanitizer != -1)
    swift_once();
  v25 = type metadata accessor for StringResponseSanitizer();
  v26 = __swift_project_value_buffer(v25, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v8, v26, v25);
  v27 = *MEMORY[0x24BE3C3E8];
  v29 = v41;
  v28 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 104))(v8, v27, v42);
  GenerativeConfigurationProtocol.responseSanitizer(_:)();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v8, v28);
  OUTLINED_FUNCTION_4_11((uint64_t)v20);
  if (one-time initialization token for renderedPromptSanitizer != -1)
    swift_once();
  v30 = type metadata accessor for StringRenderedPromptSanitizer();
  v31 = __swift_project_value_buffer(v30, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  v32 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v44, v31, v30);
  v34 = v45;
  v33 = v46;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 104))(v32, v27, v46);
  v35 = (uint64_t)v43;
  v36 = (uint64_t)v48;
  GenerativeConfigurationProtocol.renderedPromptSanitizer(_:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  OUTLINED_FUNCTION_4_11(v36);
  v37 = v40;
  v38 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v37)
    v36 = v38;
  OUTLINED_FUNCTION_4_11(v35);
  return v36;
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[40] = a4;
  v5[41] = a5;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  v5[42] = *a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v5[43] = v6;
  v5[44] = *(_QWORD *)(v6 - 8);
  v5[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[46] = swift_task_alloc();
  v5[47] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[48] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[49] = v7;
  v5[50] = *(_QWORD *)(v7 - 8);
  v5[51] = swift_task_alloc();
  v8 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[52] = v8;
  v5[53] = *(_QWORD *)(v8 - 8);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[55] = swift_task_alloc();
  v9 = type metadata accessor for FunctionIdentifier();
  v5[56] = v9;
  v5[57] = *(_QWORD *)(v9 - 8);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringRenderedPromptSanitizer>);
  v5[60] = v10;
  v5[61] = *(_QWORD *)(v10 - 8);
  v5[62] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<StringResponseSanitizer>);
  v5[63] = v11;
  v5[64] = *(_QWORD *)(v11 - 8);
  v5[65] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[66] = v12;
  v5[67] = *(_QWORD *)(v12 - 8);
  v5[68] = swift_task_alloc();
  v13 = type metadata accessor for CompletionPrompt();
  v5[69] = v13;
  v5[70] = *(_QWORD *)(v13 - 8);
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  v5[77] = swift_task_alloc();
  v5[78] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_94_2();
  v17 = *(_QWORD *)(v0 + 560);
  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(OUTLINED_FUNCTION_29_5() + 16) = v3;
  OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_95();
  *(_QWORD *)(v0 + 632) = OBJC_IVAR____TtC10OmniSearch30MemoryCreationQUNetworkService_samplingParameters;
  *(_QWORD *)(v0 + 640) = OUTLINED_FUNCTION_87_12();
  OUTLINED_FUNCTION_169_3();
  *(_QWORD *)(v0 + 648) = v4;
  OUTLINED_FUNCTION_71_8(v1, v4);
  v5 = *MEMORY[0x24BE3C3E0];
  *(_DWORD *)(v0 + 720) = v5;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  *(_QWORD *)(v0 + 656) = v6;
  OUTLINED_FUNCTION_107_7(v1, v5, v6);
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  *(_QWORD *)(v0 + 664) = v7;
  OUTLINED_FUNCTION_120_8();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 672) = v8;
  OUTLINED_FUNCTION_151_4(v8);
  *(_QWORD *)(v0 + 680) = *(_QWORD *)(v17 + 8);
  OUTLINED_FUNCTION_180_2();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v18);
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_148_2();
  if (one-time initialization token for responseSanitizer != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_117_5();
  v10 = OUTLINED_FUNCTION_15_28(v9, (uint64_t)static MemoryCreationQUNetworkService.responseSanitizer);
  OUTLINED_FUNCTION_127_5(v10, *MEMORY[0x24BE3C3E8]);
  OUTLINED_FUNCTION_100_9();
  OUTLINED_FUNCTION_60_13();
  OUTLINED_FUNCTION_148_2();
  if (one-time initialization token for renderedPromptSanitizer != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = OUTLINED_FUNCTION_145_5();
  OUTLINED_FUNCTION_14_24(v13, (uint64_t)static MemoryCreationQUNetworkService.renderedPromptSanitizer);
  OUTLINED_FUNCTION_107_7(v12, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 104));
  OUTLINED_FUNCTION_17_30();
  OUTLINED_FUNCTION_90_11(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_212_0();
  v14 = OUTLINED_FUNCTION_144_4();
  OUTLINED_FUNCTION_32_13(v14);
  OUTLINED_FUNCTION_33_18();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 688) = v15;
  *v15 = v0;
  v15[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  OUTLINED_FUNCTION_66_18();
  return OUTLINED_FUNCTION_2_32();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 696) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  unint64_t v12;
  uint64_t v13;
  __n128 *inited;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  unsigned int v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 368);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  OUTLINED_FUNCTION_36_16(v1);
  if (v2)
  {
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  }
  else
  {
    v41 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 656);
    v32 = *(_DWORD *)(v0 + 720);
    v30 = *(_QWORD *)(v0 + 640);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
    v37 = *(_QWORD *)(v0 + 584);
    v38 = *(_QWORD *)(v0 + 624);
    v39 = *(_QWORD *)(v0 + 552);
    v40 = *(_QWORD *)(v0 + 560);
    v28 = *(_QWORD *)(v0 + 544);
    v29 = *(_QWORD *)(v0 + 528);
    v3 = *(_QWORD *)(v0 + 464);
    v24 = *(_QWORD *)(v0 + 448);
    v25 = *(_QWORD *)(v0 + 472);
    v22 = *(_QWORD *)(v0 + 432);
    v23 = *(_QWORD *)(v0 + 456);
    v36 = *(_QWORD *)(v0 + 424);
    v4 = *(_QWORD *)(v0 + 416);
    v42 = *(_QWORD *)(v0 + 408);
    v34 = *(_QWORD *)(v0 + 400);
    v6 = *(_QWORD *)(v0 + 376);
    v5 = *(_QWORD *)(v0 + 384);
    v26 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 632);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
    v7(v5, v1, v4);
    OUTLINED_FUNCTION_45_17();
    v8 = v5 + *(int *)(v6 + 48);
    v7(v22, v5, v4);
    OUTLINED_FUNCTION_70_13(v42, v8);
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    OUTLINED_FUNCTION_80_3(v25, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    v9 = (__n128 *)OUTLINED_FUNCTION_168_2();
    v10 = OUTLINED_FUNCTION_28_20(v9, (__n128)xmmword_24334DB60);
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    v9[4].n128_u64[1] = v10;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, v11, MEMORY[0x24BE3C630]);
    v9[5].n128_u64[0] = v12;
    OUTLINED_FUNCTION_156_4();
    OUTLINED_FUNCTION_80_3(v13, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    OUTLINED_FUNCTION_56_12();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    inited = (__n128 *)swift_initStackObject();
    v15 = OUTLINED_FUNCTION_170_3(inited, (__n128)xmmword_24334DB60);
    OUTLINED_FUNCTION_110_8((uint64_t)v15, v16);
    OUTLINED_FUNCTION_104_8(v28, v27, v31);
    v33(v28, v32, v29);
    inited[4].n128_u64[1] = v30;
    OUTLINED_FUNCTION_156_4();
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v35(v28, v29);
    OUTLINED_FUNCTION_56_12();
    OUTLINED_FUNCTION_142_4();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_96_11(v34);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v22, v4);
    v41(v38, v39);
    OUTLINED_FUNCTION_80_3(v38, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32));
  }
  v17 = *(_QWORD *)(v0 + 696);
  OUTLINED_FUNCTION_51_16();
  OUTLINED_FUNCTION_30_20();
  if (v17)
  {
    v18 = *(_QWORD *)(v0 + 624);
    OUTLINED_FUNCTION_67_17(*(_QWORD *)(v0 + 568));
    OUTLINED_FUNCTION_49_18();
    OUTLINED_FUNCTION_67_17(v18);
    swift_task_dealloc();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_161_4();
    OUTLINED_FUNCTION_160_4();
    OUTLINED_FUNCTION_159_4();
    OUTLINED_FUNCTION_158_4();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_103_2();
    OUTLINED_FUNCTION_86_15();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_83_6();
  OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_189_4();
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 704) = v20;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BE3BDC0]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse();
  *v20 = v0;
  v20[1] = closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_86_15();
  return GenerativeConfigurationRunnable<>.run<A>(type:returning:)();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_101_3(v2);
  *(_QWORD *)(v0 + 712) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 352));
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 552);
  OUTLINED_FUNCTION_132_3();
  v4 = *(_QWORD *)(v0 + 296);
  OUTLINED_FUNCTION_16_10(v5);
  v1(v2, v3);
  v13 = OUTLINED_FUNCTION_191_2();
  v14 = v6;
  v11 = *(_OWORD *)(v0 + 80);
  v12 = *(_OWORD *)(v0 + 64);
  v10 = *(_OWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_123();
  swift_task_dealloc();
  *(_OWORD *)v4 = v15;
  *(_OWORD *)(v4 + 16) = v14;
  *(__n128 *)(v4 + 32) = v13;
  *(_OWORD *)(v4 + 48) = v12;
  *(_OWORD *)(v4 + 64) = v11;
  *(_OWORD *)(v4 + 80) = v10;
  *(_QWORD *)(v4 + 96) = v7;
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v8();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_19();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 456));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_4_39();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_193_2();
  return OUTLINED_FUNCTION_58_12(v1);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_53_19();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 456));
  OUTLINED_FUNCTION_20_23();
  OUTLINED_FUNCTION_4_39();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_193_2();
  return OUTLINED_FUNCTION_58_12(v1);
}

void closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4[5];

  OUTLINED_FUNCTION_137_7();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_50_1();
  v1 = type metadata accessor for PromptTemplate();
  v4[3] = v1;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680], MEMORY[0x24BE3C630]);
  v4[4] = v2;
  __swift_allocate_boxed_opaque_existential_1Tm(v4);
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 16))();
  OUTLINED_FUNCTION_64_12();
  OUTLINED_FUNCTION_174_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  v3 = (__n128 *)OUTLINED_FUNCTION_31_21();
  OUTLINED_FUNCTION_44_21(v3, (__n128)xmmword_24334DB60);
  OUTLINED_FUNCTION_63_18();
}

void sub_24330524C()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_81_11();
  OUTLINED_FUNCTION_56_5();
}

void MemoryCreationQUNetworkService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_87_12();
  OUTLINED_FUNCTION_31_2(v0);
  swift_release();
  OUTLINED_FUNCTION_5();
}

uint64_t MemoryCreationQUNetworkService.__deallocating_deinit()
{
  MemoryCreationQUNetworkService.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for MemoryCreationQUNetworkServiceProtocol.prewarm(originatorPID:) in conformance MemoryCreationQUNetworkService(Swift::Int a1)
{
  MemoryCreationQUNetworkService.prewarm(originatorPID:)(a1);
}

uint64_t protocol witness for MemoryCreationQUNetworkServiceProtocol.parse(_:personNames:petNames:originatorPID:) in conformance MemoryCreationQUNetworkService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v13;
  _QWORD *v14;

  *(_QWORD *)(v7 + 120) = a1;
  v13 = a7 & 1;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 128) = v14;
  *v14 = v7;
  v14[1] = MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:);
  return MemoryCreationQUNetworkService.parse(_:personNames:petNames:originatorPID:)(v7 + 16, a2, a3, a4, a5, a6, v13);
}

uint64_t outlined retain of MemoryCreationQUModelResponse(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined copy of MemoryCreationQUModelResponseMusic?(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t dispatch thunk of MemoryCreationQUNetworkServiceProtocol.prewarm(originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MemoryCreationQUNetworkServiceProtocol.parse(_:personNames:petNames:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 16) + *(_QWORD *)(a9 + 16));
  v16 = a7 & 1;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v19(a1, a2, a3, a4, a5, a6, v16, a8, a9);
}

uint64_t ObjC metadata update function for MemoryCreationQUNetworkService()
{
  return type metadata accessor for MemoryCreationQUNetworkService();
}

uint64_t type metadata accessor for MemoryCreationQUNetworkService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MemoryCreationQUNetworkService;
  if (!type metadata singleton initialization cache for MemoryCreationQUNetworkService)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for MemoryCreationQUNetworkService()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SamplingParameters();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MemoryCreationQUNetworkService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MemoryCreationQUNetworkService.__allocating_init(useThimble:useTemplate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)()
{
  closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)();
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)()
{
  closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)();
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplateAndConstrainedDecoding(promptTemplate:bindings:quModel:)()
{
  partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUUsingTemplate(promptTemplate:bindings:quModel:)();
}

void partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQUConstrainedDecoding(prompt:quModel:)()
{
  partial apply for closure #1 in closure #2 in MemoryCreationQUNetworkService.parseWithLLMQU(prompt:quModel:)();
}

uint64_t OUTLINED_FUNCTION_2_32()
{
  return static _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadataCompletionPrompt(_:)();
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_28()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = __swift_project_value_buffer(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t OUTLINED_FUNCTION_15_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = __swift_project_value_buffer(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t OUTLINED_FUNCTION_17_30()
{
  return GenerativeConfigurationProtocol.renderedPromptSanitizer(_:)();
}

uint64_t OUTLINED_FUNCTION_20_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_28_20(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  strcpy((char *)&a1[2], "promptTemplate");
  a1[2].n128_u8[15] = -18;
  return type metadata accessor for PromptTemplate();
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_30_20()
{
  return GenerativeConfigurationProtocol._addAssetCache()();
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_32_13(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_33_18()
{
  return FunctionIdentifier.init(identifier:resourceInformation:)();
}

void OUTLINED_FUNCTION_35_18()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_42_13()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 120))(v0, *(_QWORD *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_43_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 8))(a12, a11);
}

uint64_t OUTLINED_FUNCTION_44_21(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = a2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)a1 + v5, v3, v2);
}

uint64_t OUTLINED_FUNCTION_45_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 32))(v2, v1, *(_QWORD *)(v3 - 96));
}

uint64_t OUTLINED_FUNCTION_46_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)v14 = a9;
  *(_OWORD *)(v14 + 16) = a10;
  *(_OWORD *)(v14 + 32) = a12;
  *(_OWORD *)(v14 + 48) = a11;
  *(_OWORD *)(v14 + 64) = a13;
  *(_OWORD *)(v14 + 80) = a14;
  *(_QWORD *)(v14 + 96) = v15;
  return *(_QWORD *)(v16 + 8);
}

uint64_t OUTLINED_FUNCTION_48_15(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_49_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return CompletionPrompt.init(_:)();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return GenerativeConfigurationProtocol.functionIdentifier(_:)();
}

uint64_t OUTLINED_FUNCTION_52_13(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_54_16(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_57_11()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_58_12(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_60_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_61_13@<X0>(unint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, __n128 a6@<Q4>, __n128 a7@<Q5>)
{
  __n128 *v7;
  uint64_t v8;

  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  v7[4] = a6;
  v7[5] = a7;
  v7[6].n128_u64[0] = a1;
  return *(_QWORD *)(v8 + 8);
}

void OUTLINED_FUNCTION_63_18()
{
  JUMPOUT(0x2494F59B4);
}

uint64_t OUTLINED_FUNCTION_64_12()
{
  return static CustomPromptBuilder.buildExpression(_:)();
}

uint64_t OUTLINED_FUNCTION_65_15()
{
  return static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
}

uint64_t OUTLINED_FUNCTION_67_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_68_17(float *a1, float a2)
{
  *a1 = a2;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_69_13()
{
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_70_13(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_71_15()
{
  uint64_t v0;

  return outlined release of MemoryCreationQUModelResponse(v0);
}

uint64_t OUTLINED_FUNCTION_72_12()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_74_15()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 184) = v1;
  return GenerativeConfigurationProtocol.with<A>(model:)();
}

uint64_t OUTLINED_FUNCTION_79_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 288) = v1;
  return GenerativeConfigurationProtocol.with<A>(model:)();
}

uint64_t OUTLINED_FUNCTION_81_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL OUTLINED_FUNCTION_82_14(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_83_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);

  return v1(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 552));
}

uint64_t OUTLINED_FUNCTION_87_12()
{
  return type metadata accessor for SamplingParameters();
}

uint64_t OUTLINED_FUNCTION_90_11@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_95_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_96_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_98_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned int a25,uint64_t (*a26)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v26;

  return a26(v26, a25, a21);
}

uint64_t OUTLINED_FUNCTION_99_6()
{
  return GenerativeConfigurationProtocol.responseSanitizer(_:)();
}

uint64_t OUTLINED_FUNCTION_100_9()
{
  return GenerativeConfigurationProtocol.responseSanitizer(_:)();
}

uint64_t OUTLINED_FUNCTION_102_8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  a1[9] = v9;
  a1[10] = a2;
  a1[6] = a8;
  *(_QWORD *)(v8 + 56) = a7;
  return swift_bridgeObjectRetain();
}

__n128 *OUTLINED_FUNCTION_103_10(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x74706D6F7270;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_105_13()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(*(_QWORD *)(v3 - 112), v0, v2);
}

uint64_t OUTLINED_FUNCTION_107_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_108_11()
{
  uint64_t v0;

  return outlined retain of MemoryCreationQUModelResponse(v0);
}

uint64_t OUTLINED_FUNCTION_109_8()
{
  return GenerativeConfigurationProtocol.bindVariables(_:)();
}

uint64_t OUTLINED_FUNCTION_110_8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 32) = a2;
  *(_QWORD *)(result + 40) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_112_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);

  return v1(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
}

uint64_t OUTLINED_FUNCTION_116_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a29 + 8))(v29, a26);
}

uint64_t OUTLINED_FUNCTION_117_5()
{
  return type metadata accessor for StringResponseSanitizer();
}

uint64_t OUTLINED_FUNCTION_120_8()
{
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

void OUTLINED_FUNCTION_122_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 320);
}

__n128 OUTLINED_FUNCTION_123_8(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15)
{
  __n128 result;

  result = a15;
  a1[1] = a15;
  return result;
}

uint64_t OUTLINED_FUNCTION_125_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  __swift_storeEnumTagSinglePayload(v4, 0, 1, a4);
  return outlined init with copy of SamplingStrategy?(v4, v5);
}

uint64_t OUTLINED_FUNCTION_127_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_128_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_129_5()
{
  return type metadata accessor for StringResponseSanitizer();
}

uint64_t OUTLINED_FUNCTION_130_4()
{
  return GenerativeConfigurationProtocol.samplingParameters(_:)();
}

void OUTLINED_FUNCTION_132_3()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[48];
  *(_QWORD *)(v1 - 112) = v0[51];
  *(_QWORD *)(v1 - 104) = v2;
  v3 = v0[45];
  *(_QWORD *)(v1 - 96) = v0[46];
  *(_QWORD *)(v1 - 88) = v3;
}

uint64_t OUTLINED_FUNCTION_135_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_137_7()
{
  return type metadata accessor for Prompt();
}

uint64_t OUTLINED_FUNCTION_140_3(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_141_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t, uint64_t))
{
  uint64_t v28;
  uint64_t v29;

  return a28(v28, v29);
}

uint64_t OUTLINED_FUNCTION_142_4()
{
  return static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
}

uint64_t OUTLINED_FUNCTION_144_4()
{
  return type metadata accessor for FunctionIdentifier.ResourceInformation();
}

uint64_t OUTLINED_FUNCTION_145_5()
{
  return type metadata accessor for StringRenderedPromptSanitizer();
}

void OUTLINED_FUNCTION_148_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 448);
  *(_QWORD *)(v1 - 136) = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v1 - 128) = v2;
}

uint64_t OUTLINED_FUNCTION_150_5()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_151_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_152_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;

  return a11(v11, v12);
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_156_4()
{
  uint64_t *v0;

  __swift_allocate_boxed_opaque_existential_1Tm(v0);
}

uint64_t OUTLINED_FUNCTION_158_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_159_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_160_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_161_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_165_2@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

void OUTLINED_FUNCTION_167_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 72) = v2;
  __swift_allocate_boxed_opaque_existential_1Tm(v1);
}

uint64_t OUTLINED_FUNCTION_168_2()
{
  return swift_initStackObject();
}

__n128 *OUTLINED_FUNCTION_170_3(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void *OUTLINED_FUNCTION_171_1(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x68uLL);
}

uint64_t OUTLINED_FUNCTION_174_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_177_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_178_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_180_2()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_181_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_187_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_188_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_189_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

__n128 OUTLINED_FUNCTION_191_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 - 128) = *(_OWORD *)(v0 + 16);
  return *(__n128 *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_192_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_193_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_194_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 232);
}

id OUTLINED_FUNCTION_195_1()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2091));
}

uint64_t OUTLINED_FUNCTION_196_3()
{
  return static _OverrideConfigurationHelper.samplingParameters(_:)();
}

uint64_t WebAnswer.init(id:answer:attributionTitle:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v9;

  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  v9 = (uint64_t)a8 + *(int *)(OUTLINED_FUNCTION_2_33() + 28);
  return outlined init with take of URL?(a7, v9);
}

uint64_t type metadata accessor for WebAnswer()
{
  uint64_t result;

  result = type metadata singleton initialization cache for WebAnswer;
  if (!type metadata singleton initialization cache for WebAnswer)
    return swift_getSingletonMetadata();
  return result;
}

void WebAnswer.id.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_5();
}

void WebAnswer.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*WebAnswer.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void WebAnswer.answer.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_5();
}

void WebAnswer.answer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*WebAnswer.answer.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void WebAnswer.attributionTitle.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_5();
}

void WebAnswer.attributionTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*WebAnswer.attributionTitle.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t WebAnswer.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_33() + 28);
  return outlined init with copy of URL?(v3, a1);
}

uint64_t WebAnswer.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_33() + 28);
  return outlined assign with take of URL?(a1, v3);
}

uint64_t (*WebAnswer.url.modify())(_QWORD)
{
  OUTLINED_FUNCTION_2_33();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t WebAnswer.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x726577736E61 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000024335DBA0
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 7107189 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t WebAnswer.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_243306478 + 4 * byte_243359A90[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_243306478()
{
  return 0x726577736E61;
}

unint64_t sub_24330648C()
{
  return 0xD000000000000010;
}

uint64_t sub_2433064A8()
{
  return 7107189;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance WebAnswer.CodingKeys()
{
  unsigned __int8 *v0;

  return WebAnswer.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance WebAnswer.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = WebAnswer.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance WebAnswer.CodingKeys()
{
  lazy protocol witness table accessor for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance WebAnswer.CodingKeys()
{
  lazy protocol witness table accessor for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t WebAnswer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<WebAnswer.CodingKeys>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_1_7();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_7();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    type metadata accessor for WebAnswer();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebAnswer.CodingKeys, &unk_2513D2A68);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebAnswer.CodingKeys, &unk_2513D2A68);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebAnswer.CodingKeys, &unk_2513D2A68);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys;
  if (!lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WebAnswer.CodingKeys, &unk_2513D2A68);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys);
  }
  return result;
}

uint64_t WebAnswer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v22 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<WebAnswer.CodingKeys>);
  MEMORY[0x24BDAC7A8](v23);
  v7 = type metadata accessor for WebAnswer();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_1();
  v2[4] = 0;
  v2[5] = 0;
  v9 = (uint64_t)v2 + *(int *)(v8 + 28);
  v10 = type metadata accessor for URL();
  v25 = v9;
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  v11 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  lazy protocol witness table accessor for type WebAnswer.CodingKeys and conformance WebAnswer.CodingKeys();
  v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
  {
    v15 = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    swift_bridgeObjectRelease();
    return outlined destroy of URL?(v15);
  }
  else
  {
    v13 = (uint64_t)v6;
    v14 = v22;
    v30 = 0;
    *v2 = OUTLINED_FUNCTION_3_30();
    v2[1] = v16;
    v29 = 1;
    v2[2] = OUTLINED_FUNCTION_3_30();
    v2[3] = v17;
    v28 = 2;
    v26 = 0;
    v2[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v2[5] = v18;
    v27 = 3;
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_28_12();
    v19 = (uint64_t)v24;
    outlined assign with take of URL?(v13, v25);
    outlined init with copy of WebAnswer((uint64_t)v2, v14);
    __swift_destroy_boxed_opaque_existential_1(v19);
    return outlined destroy of WebAnswer((uint64_t)v2);
  }
}

uint64_t outlined init with copy of WebAnswer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebAnswer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of WebAnswer(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebAnswer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for WebAnswer(_QWORD *a1)
{
  uint64_t result;

  a1[1] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebAnswer and conformance WebAnswer, (uint64_t (*)(uint64_t))type metadata accessor for WebAnswer, (uint64_t)&protocol conformance descriptor for WebAnswer);
  a1[2] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebAnswer and conformance WebAnswer, (uint64_t (*)(uint64_t))type metadata accessor for WebAnswer, (uint64_t)&protocol conformance descriptor for WebAnswer);
  result = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type WebAnswer and conformance WebAnswer, (uint64_t (*)(uint64_t))type metadata accessor for WebAnswer, (uint64_t)&protocol conformance descriptor for WebAnswer);
  a1[3] = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance WebAnswer@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebAnswer.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance WebAnswer(_QWORD *a1)
{
  return WebAnswer.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebAnswer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for WebAnswer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for URL();
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for WebAnswer(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  }
  return a1;
}

_QWORD *assignWithCopy for WebAnswer(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for WebAnswer(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for WebAnswer(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebAnswer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243307080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WebAnswer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_243307104(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

void type metadata completion function for WebAnswer()
{
  unint64_t v0;

  type metadata accessor for URL?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for WebAnswer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_243307238 + 4 * byte_243359A99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24330726C + 4 * byte_243359A94[v4]))();
}

uint64_t sub_24330726C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243307274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24330727CLL);
  return result;
}

uint64_t sub_243307288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243307290);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_243307294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24330729C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for WebAnswer.CodingKeys()
{
  return &unk_2513D2A68;
}

uint64_t OUTLINED_FUNCTION_2_33()
{
  return type metadata accessor for WebAnswer();
}

uint64_t OUTLINED_FUNCTION_3_30()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t Collection.at(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];

  v2 = OUTLINED_FUNCTION_0_37();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v15[-v4];
  dispatch thunk of Collection.indices.getter();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_0_37();
  swift_getAssociatedConformanceWitness();
  v6 = Sequence<>.contains(_:)();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read();
    v9 = v8;
    v10 = OUTLINED_FUNCTION_1_35();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v9, v10);
    v7(v15, 0);
    v11 = a1;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = OUTLINED_FUNCTION_1_35();
    v11 = a1;
    v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_1_35()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t _sScg7addTask8priority9operationyScPSg_xyYaKYAcntF10OmniSearch10QueryGuessV_s5Error_pTg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[4];
  _QWORD v18[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TaskPriority?(a1, (uint64_t)v9);
  v10 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v9, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v11 = dispatch thunk of Actor.unownedExecutor.getter();
    v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = *v4;
  v15 = (_QWORD *)(v13 | v11);
  if (v13 | v11)
  {
    v18[0] = 0;
    v18[1] = 0;
    v15 = v18;
    v18[2] = v11;
    v18[3] = v13;
  }
  v17[1] = 1;
  v17[2] = v15;
  v17[3] = v14;
  swift_task_create();
  return swift_release();
}

void _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySSGSaySdGG_10OmniSearch15LabelConfidenceVs5NeverOTg504_s10f23Search7QUParseV16intenti7SayAA05H21E0VGvgAFSS_Sdt_tXEfU_Tf1cn_nTm(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  if (v8 >= v7)
    v9 = *(_QWORD *)(a1 + 16);
  else
    v9 = *(_QWORD *)(a2 + 16);
  v31 = MEMORY[0x24BEE4AF8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v28 = v8;
  v29 = v7;
  v26 = a2;
  v27 = a1;
  v25 = v9;
  if (v9)
  {
    v10 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_0();
    v11 = (uint64_t *)(a1 + 40);
    v12 = v8;
    v13 = v9;
    while (v7)
    {
      if (!v12)
        goto LABEL_23;
      v14 = *v11;
      v30 = *(v11 - 1);
      v15 = *v10;
      OUTLINED_FUNCTION_50_18();
      if (v4 >= v2 >> 1)
        OUTLINED_FUNCTION_52_14();
      *(_QWORD *)(v31 + 16) = v3;
      v16 = (_QWORD *)(v31 + 24 * v4);
      --v12;
      v16[4] = v30;
      v16[5] = v14;
      v16[6] = v15;
      --v7;
      ++v10;
      v11 += 2;
      if (!--v13)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_0();
LABEL_13:
    v18 = v28;
    v17 = v29;
    if (v29 <= v28)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v19 = v25;
    v20 = (uint64_t *)(v27 + 16 * v25 + 40);
    while (v19 < v17)
    {
      if (v18 == v19)
        goto LABEL_21;
      if (v19 >= v18)
        goto LABEL_25;
      v21 = *(v20 - 1);
      v22 = *v20;
      v23 = *(_QWORD *)(v26 + 32 + 8 * v19);
      OUTLINED_FUNCTION_50_18();
      if (v4 >= v2 >> 1)
        OUTLINED_FUNCTION_52_14();
      ++v19;
      *(_QWORD *)(v31 + 16) = v3;
      v24 = (_QWORD *)(v31 + 24 * v4);
      v24[4] = v21;
      v24[5] = v22;
      v24[6] = v23;
      v20 += 2;
      v18 = v28;
      v17 = v29;
      if (v29 == v19)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void LocalParser.__allocating_init(testing:locale:)(char a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8();
  LocalParser.init(testing:locale:)(a1, a2);
  OUTLINED_FUNCTION_12();
}

uint64_t LocalParser.guess(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t LocalParser.guess(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = LocalParser.guess(for:);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_54();
    return OUTLINED_FUNCTION_42();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

id LocalParser.manager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t LocalParser.init(testing:locale:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433505B0;
  v7 = MEMORY[0x24BEE0D00];
  OUTLINED_FUNCTION_1_36();
  v8 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 72) = a1;
  OUTLINED_FUNCTION_1_36();
  v9 = type metadata accessor for Locale();
  *(_QWORD *)(inited + 168) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_1, a2, v9);
  OUTLINED_FUNCTION_1_36();
  *(_QWORD *)(inited + 240) = v8;
  *(_BYTE *)(inited + 216) = 1;
  OUTLINED_FUNCTION_1_36();
  *(_QWORD *)(inited + 312) = v8;
  *(_BYTE *)(inited + 288) = 1;
  OUTLINED_FUNCTION_1_36();
  *(_QWORD *)(inited + 384) = v7;
  *(_QWORD *)(inited + 360) = 0xD000000000000014;
  *(_QWORD *)(inited + 368) = 0x800000024335DA20;
  OUTLINED_FUNCTION_1_36();
  *(_QWORD *)(inited + 456) = v7;
  *(_QWORD *)(inited + 432) = 0xD000000000000014;
  *(_QWORD *)(inited + 440) = 0x800000024335DA20;
  OUTLINED_FUNCTION_1_36();
  *(_QWORD *)(inited + 528) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 504) = 1;
  *(_QWORD *)(v3 + 16) = Dictionary.init(dictionaryLiteral:)();
  objc_allocWithZone(MEMORY[0x24BE7BE98]);
  v12 = OUTLINED_FUNCTION_4_7();
  *(_QWORD *)(v3 + 24) = @nonobjc QPQueryParserManager.init(options:)(v12);
  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v13, (uint64_t)static Logging.search);
    v14 = OUTLINED_FUNCTION_50_2();
    v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v16 = 0;
      specialized UnsafeMutablePointer.deallocate()();
    }

  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v9);
  return v3;
}

Swift::Void __swiftcall LocalParser.prewarm()()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v2 = v0;
  if (one-time initialization token for search != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  v4 = OUTLINED_FUNCTION_50_2();
  v5 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_31(v5))
  {
    v6 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_24315F000, v4, v1, "LocalParser: Initiated prewarm", v6, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  objc_msgSend(*(id *)(v2 + 24), sel_preheat);
}

uint64_t LocalParser.parse(text:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t LocalParser.parse(text:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for QUParse?);
  *v5 = v0;
  v5[1] = LocalParser.parse(text:);
  OUTLINED_FUNCTION_54();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in LocalParser.parse(text:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v7 = (uint64_t *)swift_allocObject();
  v7[3] = 0;
  v7[4] = 0;
  v7[2] = 0;
  v10 = a2 + 16;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(void **)(v10 + 8);
  aBlock[4] = partial apply for closure #1 in closure #1 in LocalParser.parse(text:);
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [AnyHashable : Any], @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  aBlock[3] = &block_descriptor_6;
  v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  outlined bridged method (mbgbgnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)(a3, a4, v8, (uint64_t)v11, v9);
  swift_bridgeObjectRelease();
  _Block_release(v11);
  swift_beginAccess();
  outlined copy of QUParse?(v7[2]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<QUParse?, Never>);
  CheckedContinuation.resume(returning:)();
  return swift_release();
}

void closure #1 in closure #1 in LocalParser.parse(text:)(uint64_t a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  static QUParse.makeFrom(parse:)(a1, (uint64_t)v9);
  v5 = v9[0];
  if (v9[0])
  {
    v7 = v9[1];
    v6 = v9[2];
    swift_beginAccess();
    v8 = a3[2];
    a3[2] = v5;
    a3[3] = v7;
    a3[4] = v6;
    outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(v8);
    *a2 = 1;
  }
}

double static QUParse.makeFrom(parse:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  Class isa;
  id v27;
  id v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _DWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _QWORD v41[5];

  v41[4] = *MEMORY[0x24BDAC8D0];
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter((uint64_t)&v39, a1);
  outlined destroy of AnyHashable((uint64_t)&v39);
  if (!v41[3])
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v41, &demangling cache variable for type metadata for Any?);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    if (one-time initialization token for search != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_13();
    v6 = __swift_project_value_buffer(v5, (uint64_t)static Logging.search);
    OUTLINED_FUNCTION_104_0();
    Logger.logObject.getter();
    v7 = OUTLINED_FUNCTION_80();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_QWORD *)&v39 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *v8 = 136315138;
      swift_bridgeObjectRetain();
      v9 = Dictionary.description.getter();
      v11 = v10;
      OUTLINED_FUNCTION_121();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, (uint64_t *)&v39);
      v41[0] = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_102_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_22(&dword_24315F000, v6, v7, "QUParse: Missing parse output %s");
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_102_0();
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_64();
  specialized Dictionary.subscript.getter(0xD000000000000014, 0x800000024335B050, 0x74754F555150516BLL);
  OUTLINED_FUNCTION_6_1();
  if (!*((_QWORD *)&v40 + 1))
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v39, &demangling cache variable for type metadata for Any?);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[String : Any]]);
  if (!swift_dynamicCast())
  {
LABEL_13:
    v4 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v4 = v41[0];
LABEL_14:
  v14 = *(_QWORD *)(v4 + 16);
  if (v14)
  {
    v38 = a2;
    v41[0] = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    for (i = 0; i != v14; ++i)
    {
      v16 = *(_QWORD *)(v4 + 8 * i + 32);
      OUTLINED_FUNCTION_104_0();
      v17 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000015, 0x8000000243360470);
      if ((v18 & 1) != 0)
      {
        v19 = v17;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v21 = *(_QWORD *)(v16 + 24);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v21);
        v22 = v16;
        swift_bridgeObjectRelease();
        outlined init with take of Any((_OWORD *)(*(_QWORD *)(v16 + 56) + 32 * v19), &v39);
        _NativeDictionary._delete(at:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
        v22 = v16;
      }
      outlined destroy of CustomStringConvertible?((uint64_t)&v39, &demangling cache variable for type metadata for Any?);
      OUTLINED_FUNCTION_6_1();
      v23 = v41[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v23 = v41[0];
      }
      v24 = *(_QWORD *)(v23 + 16);
      if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v23 = v41[0];
      }
      *(_QWORD *)(v23 + 16) = v24 + 1;
      *(_QWORD *)(v23 + 8 * v24 + 32) = v22;
    }
    OUTLINED_FUNCTION_121();
    a2 = v38;
  }
  else
  {
    OUTLINED_FUNCTION_121();
    v23 = MEMORY[0x24BEE4AF8];
  }
  *((_QWORD *)&v40 + 1) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[String : Any]]);
  *(_QWORD *)&v39 = v23;
  specialized Dictionary.subscript.setter((uint64_t)&v39, 0xD000000000000014, 0x800000024335B050);
  v25 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_23_0();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_56_0();
  *(_QWORD *)&v39 = 0;
  v27 = objc_msgSend(v25, sel_dataWithJSONObject_options_error_, isa, 1, &v39);

  v28 = (id)v39;
  if (v27)
  {
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type QUParse and conformance QUParse();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_68_18();
    swift_release();
    v37 = v40;
    result = *(double *)&v39;
    *(_OWORD *)a2 = v39;
    *(_QWORD *)(a2 + 16) = v37;
    return result;
  }
  v29 = v28;
  v30 = _convertNSErrorToError(_:)();

  swift_willThrow();
  if (one-time initialization token for search != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_13();
  v32 = __swift_project_value_buffer(v31, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_71_16();
  OUTLINED_FUNCTION_71_16();
  Logger.logObject.getter();
  v33 = OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_31(v33))
  {
    v34 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v35 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *v34 = 138412290;
    OUTLINED_FUNCTION_71_16();
    v36 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v39 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v35 = v36;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_26();
    OUTLINED_FUNCTION_19_26();
    OUTLINED_FUNCTION_31_22(&dword_24315F000, v32, v30, "QUParse: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_48_14();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_19_26();
  OUTLINED_FUNCTION_19_26();
  OUTLINED_FUNCTION_19_26();
  swift_bridgeObjectRelease();
LABEL_33:
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return result;
}

uint64_t LocalParser.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t LocalParser.__deallocating_deinit()
{
  LocalParser.deinit();
  return swift_deallocClassInstance();
}

uint64_t *LocalParser.kParserTimeout.unsafeMutableAddressor()
{
  return &static LocalParser.kParserTimeout;
}

uint64_t static LocalParser.kParserTimeout.getter()
{
  OUTLINED_FUNCTION_7_21();
  return static LocalParser.kParserTimeout;
}

uint64_t static LocalParser.kParserTimeout.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_beginAccess();
  static LocalParser.kParserTimeout = a1;
  *(_QWORD *)algn_25728F3C8 = a2;
  return result;
}

void static LocalParser.kParserTimeout.modify()
{
  swift_beginAccess();
  OUTLINED_FUNCTION_5();
}

uint64_t closure #1 in LocalParser.guess(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in LocalParser.guess(for:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_36_17();
  v6 = (_QWORD *)OUTLINED_FUNCTION_8();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v6[5] = v4;
  v6[6] = v3;
  swift_retain();
  OUTLINED_FUNCTION_23_0();
  _sScg7addTask8priority9operationyScPSg_xyYaKYAcntF10OmniSearch10QueryGuessV_s5Error_pTg5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in LocalParser.guess(for:), (uint64_t)v6);
  OUTLINED_FUNCTION_72_13();
  OUTLINED_FUNCTION_36_17();
  v7 = (_QWORD *)OUTLINED_FUNCTION_8();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v2;
  _sScg7addTask8priority9operationyScPSg_xyYaKYAcntF10OmniSearch10QueryGuessV_s5Error_pTg5(v1, (uint64_t)&async function pointer to partial apply for closure #2 in closure #1 in LocalParser.guess(for:), (uint64_t)v7);
  OUTLINED_FUNCTION_72_13();
  v8 = (_QWORD *)swift_task_alloc();
  v0[13] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ThrowingTaskGroup<QueryGuess, Error>);
  *v8 = v0;
  v8[1] = closure #1 in LocalParser.guess(for:);
  OUTLINED_FUNCTION_54();
  return ThrowingTaskGroup.next(isolation:)();
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_101_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_BYTE *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 16);
    v6 = **(_QWORD **)(v0 + 56);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    MEMORY[0x2494F5FB4](v6, &type metadata for QueryGuess, v7, MEMORY[0x24BEE3F20]);
    *(_QWORD *)v2 = v5;
    *(_BYTE *)(v2 + 8) = v4 & 1;
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v1;
    OUTLINED_FUNCTION_104();
  }
  else
  {
    lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
    v8 = OUTLINED_FUNCTION_74_4();
    *v9 = 0xD000000000000028;
    v9[1] = 0x80000002433604C0;
    OUTLINED_FUNCTION_49_19(v8, (uint64_t)v9);
    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t partial apply for closure #1 in LocalParser.guess(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_112(v10);
  *v11 = v3;
  v11[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return closure #1 in LocalParser.guess(for:)(a1, a2, v6, v7, v9, v8);
}

uint64_t closure #1 in closure #1 in LocalParser.guess(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return LocalParser.guessWaitingForParse(for:)(a1, a5, a6);
}

uint64_t LocalParser.guessWaitingForParse(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t);

  v4[15] = a2;
  v4[16] = a3;
  v4[14] = a1;
  v9 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 112)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 112));
  v7 = (_QWORD *)swift_task_alloc();
  v4[17] = v7;
  *v7 = v4;
  v7[1] = LocalParser.guessWaitingForParse(for:);
  return v9(v4 + 2, a2, a3);
}

uint64_t LocalParser.guessWaitingForParse(for:)()
{
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0[2];
  if (v1)
  {
    v2 = v0[3];
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_115();
    _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySSGSaySdGG_10OmniSearch15LabelConfidenceVs5NeverOTg504_s10f23Search7QUParseV16intenti7SayAA05H21E0VGvgAFSS_Sdt_tXEfU_Tf1cn_nTm(v1, v2);
    v4 = v3;
    OUTLINED_FUNCTION_6_1();
    swift_bridgeObjectRelease();
    outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(v1);
    if (v4[2])
    {
      v6 = v4[4];
      v5 = v4[5];
      OUTLINED_FUNCTION_64();
    }
    else
    {
      v6 = 0;
      v5 = 0xE000000000000000;
    }
    OUTLINED_FUNCTION_36_0();
    if (one-time initialization token for instantAnswer != -1)
      swift_once();
    v13 = static IntentGroups.instantAnswer;
    v14 = *(_QWORD *)(static IntentGroups.instantAnswer + 16);
    if (v14)
    {
      lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_23_0();
      v15 = v14 - 1;
      v16 = (uint64_t *)(v13 + 40);
      do
      {
        v17 = v15;
        v19 = *(v16 - 1);
        v18 = *v16;
        v0[5] = v6;
        v0[6] = v5;
        v0[7] = v19;
        v0[8] = v18;
        LOBYTE(v14) = OUTLINED_FUNCTION_17_31();
        if ((v14 & 1) != 0)
          break;
        v15 = v17 - 1;
        v16 += 2;
      }
      while (v17);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
    }
    if (one-time initialization token for maybeGlobal != -1)
      swift_once();
    v20 = static IntentGroups.maybeGlobal;
    v21 = *(_QWORD *)(static IntentGroups.maybeGlobal + 16);
    if (v21)
    {
      lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_23_0();
      v22 = (uint64_t *)(v20 + 40);
      while (1)
      {
        v24 = *(v22 - 1);
        v23 = *v22;
        v0[9] = v6;
        v0[10] = v5;
        v0[11] = v24;
        v0[12] = v23;
        if ((OUTLINED_FUNCTION_17_31() & 1) != 0)
          break;
        v22 += 2;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_6_1();
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      if (one-time initialization token for all != -1)
        swift_once();
      v25 = static SearchSources.all;
    }
    else
    {
LABEL_20:
      v25 = 1;
    }
    v26 = v0[14];
    *(_QWORD *)v26 = v25;
    *(_BYTE *)(v26 + 8) = v14 & 1;
    *(_QWORD *)(v26 + 16) = v6;
    *(_QWORD *)(v26 + 24) = v5;
    v12 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v8 = v0[15];
    v7 = (void *)v0[16];
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    String.append(_:)(v9);
    OUTLINED_FUNCTION_7_30(39);
    lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
    v10 = OUTLINED_FUNCTION_74_4();
    *v11 = 0xD000000000000025;
    v11[1] = 0x80000002433604F0;
    OUTLINED_FUNCTION_49_19(v10, (uint64_t)v11);
    v12 = (uint64_t (*)(void))v0[1];
  }
  return v12();
}

uint64_t closure #2 in closure #1 in LocalParser.guess(for:)()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = type metadata accessor for ContinuousClock();
  v0[6] = v1;
  v0[7] = *(_QWORD *)(v1 - 8);
  v0[8] = swift_task_alloc();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  OUTLINED_FUNCTION_7_21();
  v2 = static LocalParser.kParserTimeout;
  v1 = *(_QWORD *)algn_25728F3C8;
  ContinuousClock.init()();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&async function pointer to specialized Clock.sleep(for:tolerance:)
                                                                        + async function pointer to specialized Clock.sleep(for:tolerance:));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = closure #2 in closure #1 in LocalParser.guess(for:);
  return v5(v2, v1, 0, 0, 1);
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[7] + 8))(v2[8], v2[6]);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
    OUTLINED_FUNCTION_50_2();
    v4 = OUTLINED_FUNCTION_80();
    if (OUTLINED_FUNCTION_31(v4))
    {
      v5 = (_DWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v6 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *v5 = 136315138;
      v11 = v6;
      v7 = Duration.description.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v11);
      *(_QWORD *)(v2 + 40) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_22(&dword_24315F000, v0, v1, "LocalParser: QU timeout (>%s)");
      OUTLINED_FUNCTION_48_14();
      specialized UnsafeMutablePointer.deallocate()();
    }

  }
  type metadata accessor for CancellationError();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CancellationError and conformance CancellationError, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
  OUTLINED_FUNCTION_74_4();
  CancellationError.init()();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

void QUParse.intentConfidence.getter()
{
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_33_19();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_59_0();
}

uint64_t *IntentGroups.instantAnswer.unsafeMutableAddressor()
{
  if (one-time initialization token for instantAnswer != -1)
    swift_once();
  return &static IntentGroups.instantAnswer;
}

uint64_t *IntentGroups.maybeGlobal.unsafeMutableAddressor()
{
  if (one-time initialization token for maybeGlobal != -1)
    swift_once();
  return &static IntentGroups.maybeGlobal;
}

uint64_t protocol witness for RequestRouting.prewarm() in conformance LocalParser()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

uint64_t protocol witness for RequestRouting.guess(for:) in conformance LocalParser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return LocalParser.guess(for:)(a1, a2, a3);
}

void one-time initialization function for instantAnswer()
{
  static IntentGroups.instantAnswer = (uint64_t)&outlined read-only object #0 of one-time initialization function for instantAnswer;
}

uint64_t static IntentGroups.instantAnswer.getter()
{
  return static PostProcessingFilter.allowedList.getter(&one-time initialization token for instantAnswer);
}

void one-time initialization function for maybeGlobal()
{
  static IntentGroups.maybeGlobal = (uint64_t)&outlined read-only object #0 of one-time initialization function for maybeGlobal;
}

uint64_t static IntentGroups.maybeGlobal.getter()
{
  return static PostProcessingFilter.allowedList.getter(&one-time initialization token for maybeGlobal);
}

void LabelConfidence.label.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5();
}

void QUTokenInfo.token.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_5();
}

uint64_t QUTokenInfo.argScores.getter()
{
  return swift_bridgeObjectRetain();
}

void QUTokenInfo.argConfidence.getter()
{
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_33_19();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_59_0();
}

OmniSearch::QUTokenInfo::CodingKeys_optional __swiftcall QUTokenInfo.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &outlined read-only object #0 of QUTokenInfo.CodingKeys.init(rawValue:);
  return (OmniSearch::QUTokenInfo::CodingKeys_optional)QUTokenInfo.CodingKeys.init(rawValue:)(rawValue, v1);
}

OmniSearch::QUTokenInfo::CodingKeys_optional __swiftcall QUTokenInfo.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::QUTokenInfo::CodingKeys_optional)3;
}

void QUTokenInfo.CodingKeys.rawValue.getter(char a1)
{
  if (!a1)
    OUTLINED_FUNCTION_138();
}

void QUTokenInfo.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    OUTLINED_FUNCTION_138();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance QUTokenInfo.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance QUTokenInfo.CodingKeys()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance QUTokenInfo.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance QUTokenInfo.CodingKeys(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

OmniSearch::QUTokenInfo::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance QUTokenInfo.CodingKeys@<W0>(Swift::String *a1@<X0>, OmniSearch::QUTokenInfo::CodingKeys_optional *a2@<X8>)
{
  OmniSearch::QUTokenInfo::CodingKeys_optional result;

  result.value = QUTokenInfo.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance QUTokenInfo.CodingKeys(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;

  QUTokenInfo.CodingKeys.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void protocol witness for CodingKey.stringValue.getter in conformance QUTokenInfo.CodingKeys()
{
  char *v0;

  QUTokenInfo.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::QUTokenInfo::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance QUTokenInfo.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::QUTokenInfo::CodingKeys_optional *a2@<X8>)
{
  OmniSearch::QUTokenInfo::CodingKeys_optional result;

  result.value = QUTokenInfo.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance QUTokenInfo.CodingKeys()
{
  lazy protocol witness table accessor for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance QUTokenInfo.CodingKeys()
{
  lazy protocol witness table accessor for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void QUTokenInfo.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<QUTokenInfo.CodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    OUTLINED_FUNCTION_2_17();
  }
  else
  {
    LOBYTE(v10) = 0;
    v6 = KeyedDecodingContainer.decode(_:forKey:)();
    v8 = v7;
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_69_14(&lazy protocol witness table cache variable for type [String] and conformance <A> [A], v9, MEMORY[0x24BEE0D38]);
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_54_17();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Double]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [Double] and conformance <A> [A], &demangling cache variable for type metadata for [Double], MEMORY[0x24BEE1400]);
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_54_17();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_7_32();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_96_0();
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v10;
    a2[3] = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_36_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_1();
}

OmniSearch::QUTokenInfo __swiftcall QUTokenInfo.init(token:argLabels:argScores:)(Swift::String token, Swift::OpaquePointer argLabels, Swift::OpaquePointer argScores)
{
  uint64_t v3;
  OmniSearch::QUTokenInfo result;

  *(Swift::String *)v3 = token;
  *(Swift::OpaquePointer *)(v3 + 16) = argLabels;
  *(Swift::OpaquePointer *)(v3 + 24) = argScores;
  result.token = token;
  result.argScores = argScores;
  result.argLabels = argLabels;
  return result;
}

void protocol witness for Decodable.init(from:) in conformance QUTokenInfo(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  QUTokenInfo.init(from:)(a1, a2);
}

uint64_t QUParse.intents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t QUParse.intentScores.getter()
{
  return swift_bridgeObjectRetain();
}

OmniSearch::QUParse::CodingKeys_optional __swiftcall QUParse.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &outlined read-only object #0 of QUParse.CodingKeys.init(rawValue:);
  return (OmniSearch::QUParse::CodingKeys_optional)QUTokenInfo.CodingKeys.init(rawValue:)(rawValue, v1);
}

unint64_t QUTokenInfo.CodingKeys.init(rawValue:)(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  OUTLINED_FUNCTION_6_1();
  if (v5 >= 3)
    return 3;
  else
    return v5;
}

OmniSearch::QUParse::CodingKeys_optional __swiftcall QUParse.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::QUParse::CodingKeys_optional)3;
}

void QUParse.CodingKeys.rawValue.getter(char a1)
{
  if (!a1)
    OUTLINED_FUNCTION_138();
}

void QUParse.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    OUTLINED_FUNCTION_138();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance QUParse.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance QUParse.CodingKeys()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance QUParse.CodingKeys()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance QUParse.CodingKeys(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

OmniSearch::QUParse::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance QUParse.CodingKeys@<W0>(Swift::String *a1@<X0>, OmniSearch::QUParse::CodingKeys_optional *a2@<X8>)
{
  OmniSearch::QUParse::CodingKeys_optional result;

  result.value = QUParse.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance QUParse.CodingKeys(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;

  QUParse.CodingKeys.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void protocol witness for CodingKey.stringValue.getter in conformance QUParse.CodingKeys()
{
  char *v0;

  QUParse.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::QUParse::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance QUParse.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::QUParse::CodingKeys_optional *a2@<X8>)
{
  OmniSearch::QUParse::CodingKeys_optional result;

  result.value = QUParse.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance QUParse.CodingKeys()
{
  lazy protocol witness table accessor for type QUParse.CodingKeys and conformance QUParse.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance QUParse.CodingKeys()
{
  lazy protocol witness table accessor for type QUParse.CodingKeys and conformance QUParse.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void QUParse.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<QUParse.CodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type QUParse.CodingKeys and conformance QUParse.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    OUTLINED_FUNCTION_2_17();
  }
  else
  {
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_69_14(&lazy protocol witness table cache variable for type [String] and conformance <A> [A], v6, MEMORY[0x24BEE0D38]);
    OUTLINED_FUNCTION_54_17();
    OUTLINED_FUNCTION_66_19();
    OUTLINED_FUNCTION_22_21();
    v8 = OUTLINED_FUNCTION_69_14(&lazy protocol witness table cache variable for type [Double] and conformance <A> [A], v7, MEMORY[0x24BEE1400]);
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_54_17();
    OUTLINED_FUNCTION_66_19();
    if (v8)
    {
      OUTLINED_FUNCTION_0_20();
      OUTLINED_FUNCTION_118_0();
      OUTLINED_FUNCTION_2_17();
      OUTLINED_FUNCTION_118_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [QUTokenInfo]);
      lazy protocol witness table accessor for type [QUTokenInfo] and conformance <A> [A]();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_54_17();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      OUTLINED_FUNCTION_0_20();
      OUTLINED_FUNCTION_117();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_118_0();
      *a2 = v9;
      a2[1] = v9;
      a2[2] = v9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_96_0();
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_1_1();
}

OmniSearch::QUParse __swiftcall QUParse.init(intents:intentScores:tokenInfo:)(Swift::OpaquePointer intents, Swift::OpaquePointer intentScores, Swift::OpaquePointer tokenInfo)
{
  Swift::OpaquePointer *v3;
  OmniSearch::QUParse result;

  v3->_rawValue = intents._rawValue;
  v3[1]._rawValue = intentScores._rawValue;
  v3[2]._rawValue = tokenInfo._rawValue;
  result.tokenInfo = tokenInfo;
  result.intentScores = intentScores;
  result.intents = intents;
  return result;
}

void protocol witness for Decodable.init(from:) in conformance QUParse(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  QUParse.init(from:)(a1, a2);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> LabelConfidence.debugDescription.getter(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_7_30(40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = OUTLINED_FUNCTION_8();
  v3 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v2 + 16) = xmmword_24334DB60;
  v4 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(double *)(v2 + 32) = a1;
  v5._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v5);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_7_30(41);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LabelConfidence()
{
  double *v0;
  uint64_t result;

  result = *(_QWORD *)v0;
  LabelConfidence.debugDescription.getter(v0[2]);
  return result;
}

uint64_t QUTokenInfo.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v8;

  v1 = v0[2];
  v2 = v0[3];
  v8 = *v0;
  OUTLINED_FUNCTION_64();
  v3._countAndFlagsBits = 8250;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySSGSaySdGG_10OmniSearch15LabelConfidenceVs5NeverOTg504_s10f23Search7QUParseV16intenti7SayAA05H21E0VGvgAFSS_Sdt_tXEfU_Tf1cn_nTm(v1, v2);
  v5 = v4;
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  v6._countAndFlagsBits = MEMORY[0x2494F5E4C](v5, &type metadata for LabelConfidence);
  String.append(_:)(v6);
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_6_1();
  return v8;
}

uint64_t QUParse.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v20 = v0[1];
    v21 = *v0;
    v22 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_23_0();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v5 = v3 + 56;
    do
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_117();
      v6 = String.init<A>(describing:)();
      v8 = v7;
      v9 = *(_QWORD *)(v22 + 16);
      if (v9 >= *(_QWORD *)(v22 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v22 + 16) = v9 + 1;
      v10 = v22 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v8;
      v5 += 32;
      --v4;
    }
    while (v4);
    OUTLINED_FUNCTION_56_0();
    v2 = v20;
    v1 = v21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v11 = BidirectionalCollection<>.joined(separator:)();
  v13 = v12;
  OUTLINED_FUNCTION_121();
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_23_0();
  _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySSGSaySdGG_10OmniSearch15LabelConfidenceVs5NeverOTg504_s10f23Search7QUParseV16intenti7SayAA05H21E0VGvgAFSS_Sdt_tXEfU_Tf1cn_nTm(v1, v2);
  v16 = v15;
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  v17 = MEMORY[0x2494F5E4C](v16, &type metadata for LabelConfidence);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_7_30(32);
  v18._countAndFlagsBits = 2314;
  v18._object = (void *)0xE200000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return v17;
}

id @nonobjc QPQueryParserManager.init(options:)(uint64_t a1)
{
  void *v1;
  NSDictionary v2;
  id v3;

  if (a1)
  {
    v2.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.isa = 0;
  }
  v3 = objc_msgSend(v1, sel_initWithOptions_, v2.super.isa);

  return v3;
}

uint64_t partial apply for closure #1 in LocalParser.parse(text:)(uint64_t a1)
{
  uint64_t *v1;

  return closure #1 in LocalParser.parse(text:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t specialized Clock.sleep(for:tolerance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t specialized Clock.sleep(for:tolerance:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  type metadata accessor for ContinuousClock();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type ContinuousClock and conformance ContinuousClock, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  dispatch thunk of Clock.now.getter();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type ContinuousClock.Instant and conformance ContinuousClock.Instant, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  MEMORY[0x2494F63C8](v0 + 5, v2, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v5;
  v5(v1, v2);
  v6 = (_QWORD *)swift_task_alloc();
  v0[13] = v6;
  *v6 = v0;
  v6[1] = specialized Clock.sleep(for:tolerance:);
  return dispatch thunk of Clock.sleep(until:tolerance:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_54();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

void specialized Dictionary._Variant.removeValue(forKey:)()
{
  char v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_15_29();
  OUTLINED_FUNCTION_51_17();
  OUTLINED_FUNCTION_55_11();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_65_16();
    OUTLINED_FUNCTION_32_14();
    v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, CSSearchableItem>);
    OUTLINED_FUNCTION_27_20(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_30_21();
    type metadata accessor for CSSearchableItem();
    OUTLINED_FUNCTION_73_12();
    OUTLINED_FUNCTION_64_13();
  }
  OUTLINED_FUNCTION_28_21();
}

{
  char v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_15_29();
  OUTLINED_FUNCTION_51_17();
  OUTLINED_FUNCTION_55_11();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_65_16();
    OUTLINED_FUNCTION_32_14();
    v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [String]>);
    OUTLINED_FUNCTION_27_20(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_30_21();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_73_12();
    OUTLINED_FUNCTION_64_13();
  }
  OUTLINED_FUNCTION_28_21();
}

double specialized Dictionary._Variant.removeValue(forKey:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  Swift::Int v12;
  double result;
  uint64_t v14;

  v4 = v3;
  OUTLINED_FUNCTION_23_0();
  v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  LOBYTE(a2) = v9;
  OUTLINED_FUNCTION_56_0();
  if ((a2 & 1) != 0)
  {
    v10 = OUTLINED_FUNCTION_65_16();
    v14 = *v4;
    v11 = *v4;
    *v4 = 0x8000000000000000;
    v12 = *(_QWORD *)(v11 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v12);
    swift_bridgeObjectRelease();
    outlined init with take of Any((_OWORD *)(*(_QWORD *)(v14 + 56) + 32 * v8), a3);
    _NativeDictionary._delete(at:)();
    *v4 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type QUParse and conformance QUParse()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUParse and conformance QUParse;
  if (!lazy protocol witness table cache variable for type QUParse and conformance QUParse)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUParse, &type metadata for QUParse);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUParse and conformance QUParse);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUTokenInfo.CodingKeys, &type metadata for QUTokenInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUTokenInfo.CodingKeys, &type metadata for QUTokenInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUTokenInfo.CodingKeys, &type metadata for QUTokenInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUTokenInfo.CodingKeys, &type metadata for QUTokenInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUTokenInfo.CodingKeys and conformance QUTokenInfo.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type QUParse.CodingKeys and conformance QUParse.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUParse.CodingKeys, &type metadata for QUParse.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUParse.CodingKeys, &type metadata for QUParse.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUParse.CodingKeys, &type metadata for QUParse.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys;
  if (!lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUParse.CodingKeys, &type metadata for QUParse.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUParse.CodingKeys and conformance QUParse.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [QUTokenInfo] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type [QUTokenInfo] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [QUTokenInfo] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [QUTokenInfo]);
    v2 = lazy protocol witness table accessor for type QUTokenInfo and conformance QUTokenInfo();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [QUTokenInfo] and conformance <A> [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type QUTokenInfo and conformance QUTokenInfo()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type QUTokenInfo and conformance QUTokenInfo;
  if (!lazy protocol witness table cache variable for type QUTokenInfo and conformance QUTokenInfo)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for QUTokenInfo, &type metadata for QUTokenInfo);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QUTokenInfo and conformance QUTokenInfo);
  }
  return result;
}

uint64_t type metadata accessor for LocalParser()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalParser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalParser.__allocating_init(testing:locale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocalParser.prewarm()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LocalParser.parse(text:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 112)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 112));
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_112(v8);
  *v9 = v4;
  v9[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v11(a1, a2, a3);
}

void type metadata accessor for IntentGroups()
{
  OUTLINED_FUNCTION_103_0();
}

void initializeBufferWithCopyOfBuffer for LabelConfidence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5();
}

_QWORD *assignWithCopy for LabelConfidence(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for LabelConfidence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for LabelConfidence()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for QUTokenInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for QUTokenInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for QUTokenInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QUTokenInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for QUTokenInfo()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for QUTokenInfo.CodingKeys()
{
  OUTLINED_FUNCTION_103_0();
}

void initializeBufferWithCopyOfBuffer for QUParse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_7();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_12();
}

void type metadata accessor for QUParse()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t storeEnumTagSinglePayload for QUTokenInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24330ADB4 + 4 * byte_243359CA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24330ADE8 + 4 * byte_243359CA0[v4]))();
}

uint64_t sub_24330ADE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24330ADF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24330ADF8);
  return result;
}

uint64_t sub_24330AE04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24330AE0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24330AE10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24330AE18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for QUParse.CodingKeys()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t sub_24330AE30()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LocalParser.parse(text:)(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;

  closure #1 in closure #1 in LocalParser.parse(text:)(a1, a2, v2);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void outlined bridged method (mbgbgnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  Class isa;

  v7 = (void *)MEMORY[0x2494F5BB8]();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a5, sel_enumerateSpotlightResultsForString_options_withBlock_, v7, isa, a4);

}

uint64_t outlined copy of QUParse?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24330AF48()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in LocalParser.guess(for:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[6];
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_112(v4);
  v6 = OUTLINED_FUNCTION_53_20(v5);
  return closure #1 in closure #1 in LocalParser.guess(for:)(v6, v7, v8, v1, v2, v3);
}

uint64_t sub_24330AFE8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in LocalParser.guess(for:)()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_53_20(v1);
  return closure #2 in closure #1 in LocalParser.guess(for:)();
}

unint64_t type metadata accessor for CSSearchableItem()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CSSearchableItem;
  if (!lazy cache variable for type metadata for CSSearchableItem)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CSSearchableItem);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_7_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_29()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_29()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return StringProtocol.contains<A>(_:)();
}

void OUTLINED_FUNCTION_19_26()
{
  void *v0;

}

BOOL OUTLINED_FUNCTION_27_20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Swift::Bool v10;
  Swift::Int v11;

  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_31_22(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void OUTLINED_FUNCTION_32_14()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_33_19()
{
  uint64_t v0;
  uint64_t v1;

  _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySSGSaySdGG_10OmniSearch15LabelConfidenceVs5NeverOTg504_s10f23Search7QUParseV16intenti7SayAA05H21E0VGvgAFSS_Sdt_tXEfU_Tf1cn_nTm(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_49_19(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_50_18()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_51_17()
{
  uint64_t v0;
  uint64_t v1;

  return specialized __RawDictionaryStorage.find<A>(_:)(v1, v0);
}

void OUTLINED_FUNCTION_52_14()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_53_20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_55_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_64_13()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_65_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_66_19()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_68_18()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

uint64_t OUTLINED_FUNCTION_69_14(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return lazy protocol witness table accessor for type [String] and conformance <A> [A](a1, v3, a3);
}

id OUTLINED_FUNCTION_71_16()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_72_13()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of CustomStringConvertible?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  return _NativeDictionary._delete(at:)();
}

void SearchEntity.init(_:)()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_60_9();
  v6 = MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_127_6(v6, v7, v8, v9, v10, v11, v12, v13, v30);
  v14 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_40_15(v14);
  v15 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_40_15(v15);
  v16 = OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_40_15(v16);
  v17 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_40_15(v17);
  v18 = OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_40_15(v18);
  v19 = v0 + *(int *)(v3 + 44);
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_163_4(v19);
  OUTLINED_FUNCTION_163_4(v0 + *(int *)(v3 + 48));
  v2(v0);
  v20 = OUTLINED_FUNCTION_95_0();
  outlined init with copy of SearchResult(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
  OUTLINED_FUNCTION_211_2(v22, v23, v24, v25, v26, v27, v28, v29, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
    v42);
}

void sub_24330B334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  OUTLINED_FUNCTION_59_3(v1);
  v3 = *(_QWORD *)(v2 - 96);
  v4 = *(_OWORD *)(v2 - 160);
  v5 = *(_OWORD *)(v2 - 144);
  v6 = *(_OWORD *)(v2 - 128);
  v7 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)v0 = *(_OWORD *)(v2 - 176);
  *(_OWORD *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_OWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v0 + 80) = v3;
  OUTLINED_FUNCTION_43_0();
}

uint64_t type metadata accessor for SearchEntity.Builder()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SearchEntity.Builder;
  if (!type metadata singleton initialization cache for SearchEntity.Builder)
    return swift_getSingletonMetadata();
  return result;
}

void SearchEntity.type.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchEntity.card.getter()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  v1 = *((_QWORD *)v0 + 10);
  v2 = v0[1];
  v8 = *v0;
  v9 = v2;
  v3 = v0[3];
  v10 = v0[2];
  v11 = v3;
  v12 = v0[4];
  v13 = v1;
  SearchEntity.representedEntity.getter();
  if (!v15)
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v14, &demangling cache variable for type metadata for AppEntity?);
    v8 = 0u;
    v9 = 0u;
    *(_QWORD *)&v10 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CardRepresentable);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)&v10 = 0;
    v8 = 0u;
    v9 = 0u;
    goto LABEL_7;
  }
  v4 = *((_QWORD *)&v9 + 1);
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_7:
    outlined destroy of MobileSMSDocument?((uint64_t)&v8, &demangling cache variable for type metadata for CardRepresentable?);
    return 0;
  }
  v5 = v10;
  __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  return v6;
}

void SearchEntity.displayRepresentation.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  _QWORD v80[6];

  OUTLINED_FUNCTION_18_2();
  a19 = v21;
  a20 = v22;
  v66 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_127_1((uint64_t)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v26);
  v61 = (uint64_t)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = OUTLINED_FUNCTION_126_5();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v28);
  v60 = (char *)v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_25_0(v30, (uint64_t)&a10);
  v57 = v31;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_13_2((uint64_t)v56 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v34);
  v35 = v20[1];
  v36 = v20[2];
  v37 = v20[3];
  v38 = v20[4];
  v39 = v20[5];
  v40 = v20[6];
  v41 = v20[7];
  v43 = v20[8];
  v42 = v20[9];
  v44 = v20[10];
  v45 = *v20;
  v67 = *v20;
  v68 = v35;
  v65 = v36;
  v69 = v36;
  v70 = v37;
  v64 = v37;
  v63 = v38;
  v71 = v38;
  v72 = v39;
  v73 = v40;
  v74 = v41;
  v75 = v43;
  v76 = v42;
  v77 = v44;
  SearchEntity.representedEntity.getter();
  if (v79)
  {
    outlined init with take of SageSearchClient(&v78, (uint64_t)v80);
    __swift_project_boxed_opaque_existential_1(v80, v80[3]);
    dispatch thunk of InstanceDisplayRepresentable.displayRepresentation.getter();
    OUTLINED_FUNCTION_156_5();
  }
  else
  {
    outlined destroy of MobileSMSDocument?((uint64_t)&v78, &demangling cache variable for type metadata for AppEntity?);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v46);
    v56[0] = v45;
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_145_1();
    OUTLINED_FUNCTION_145_1();
    OUTLINED_FUNCTION_145_1();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_1_11();
    v47 = v56[1];
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_115_6();
    OUTLINED_FUNCTION_115_6();
    OUTLINED_FUNCTION_115_6();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_115_6();
    v48 = SearchResultType.rawValue.getter();
    v50 = v49;
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v47, v58);
    v51._countAndFlagsBits = v48;
    v51._object = v50;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v51);
    swift_bridgeObjectRelease();
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v52);
    LocalizedStringResource.init(stringInterpolation:)();
    __swift_storeEnumTagSinglePayload(v61, 1, 1, v59);
    v53 = type metadata accessor for DisplayRepresentation.Image();
    OUTLINED_FUNCTION_49(v62, v54, v55, v53);
    DisplayRepresentation.init(title:subtitle:image:)();
  }
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchEntity.asNLGEntity.getter@<X0>(void *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD __src[19];
  _BYTE v29[24];
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v11 = v1[8];
  v10 = v1[9];
  v12 = v1[10];
  __src[0] = *v1;
  __src[1] = v3;
  __src[2] = v4;
  __src[3] = v5;
  __src[4] = v6;
  __src[5] = v7;
  __src[6] = v8;
  __src[7] = v9;
  __src[8] = v11;
  __src[9] = v10;
  v16 = v12;
  v17 = v10;
  __src[10] = v12;
  SearchEntity.representedEntity.getter();
  if (!v30)
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v29, &demangling cache variable for type metadata for AppEntity?);
    v19 = 0u;
    v20 = 0u;
    v21 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchNLGEntityConvertible);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
LABEL_7:
    outlined destroy of MobileSMSDocument?((uint64_t)&v19, &demangling cache variable for type metadata for SearchNLGEntityConvertible?);
    SearchNLGEntity.init()();
  }
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_7;
  outlined init with take of SageSearchClient(&v19, (uint64_t)v31);
  v13 = v33;
  v15 = v32;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 8))(__src, v15, v13);
  *(_QWORD *)&v19 = v2;
  *((_QWORD *)&v19 + 1) = v3;
  *(_QWORD *)&v20 = v4;
  *((_QWORD *)&v20 + 1) = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v9;
  v25 = v11;
  v26 = v17;
  v27 = v16;
  SearchEntity.representedEntity.getter();
  outlined assign with take of SearchResult?((uint64_t)v29, (uint64_t)&__src[14], &demangling cache variable for type metadata for AppEntity?);
  memcpy(a1, __src, 0x98uLL);
  return OUTLINED_FUNCTION_156_5();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchEntity.validateParameters()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  v68 = (char *)v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = OUTLINED_FUNCTION_23_2();
  v62 = type metadata accessor for SearchSpotlightEntity(v3);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  v67 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_2();
  v64 = type metadata accessor for SearchGlobalEntity();
  v61 = *(_QWORD *)(v64 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_127_1((uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  v74 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_23_2();
  v69 = type metadata accessor for SearchAppEntity(v12);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0_3();
  v63 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0_3();
  v17 = OUTLINED_FUNCTION_13_2(v16);
  v58 = type metadata accessor for SearchAnswerEntity(v17);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_2((uint64_t)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = type metadata accessor for SearchResultType();
  v75 = *(_QWORD *)(v77 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_0_3();
  v76 = v21;
  v22 = *v0;
  v80 = v0[1];
  v24 = v0[2];
  v23 = v0[3];
  v78 = v22;
  v79 = v24;
  v26 = v0[4];
  v25 = v0[5];
  v27 = v0[6];
  v28 = v0[8];
  v81 = v0[9];
  v29 = v0[10];
  swift_retain();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_10_8();
  swift_retain();
  v30 = v76;
  EntityProperty.wrappedValue.getter();
  v71 = v29;
  OUTLINED_FUNCTION_17_9();
  swift_release();
  v70 = v28;
  swift_release();
  swift_release();
  v73 = v27;
  OUTLINED_FUNCTION_4_12();
  v72 = v25;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_9_8();
  v31 = v77;
  swift_release();
  swift_release();
  v32 = v75;
  swift_release();
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v30, v31);
  if (v33 == *MEMORY[0x24BE6E218])
  {
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_2_8();
    v65 = v23;
    OUTLINED_FUNCTION_5_9();
    v66 = v26;
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_15_5();
    EntityProperty.wrappedValue.getter();
    swift_release();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_69();
    swift_release();
    OUTLINED_FUNCTION_84_7();
    swift_release();
    OUTLINED_FUNCTION_169_4();
    OUTLINED_FUNCTION_17_9();
    v34 = OUTLINED_FUNCTION_136_4();
    if (__swift_getEnumTagSinglePayload(v34, v35, v69) == 1)
    {
      v36 = &demangling cache variable for type metadata for SearchAppEntity?;
      v37 = v74;
LABEL_17:
      outlined destroy of MobileSMSDocument?(v37, v36);
      lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
      v53 = OUTLINED_FUNCTION_74_4();
      OUTLINED_FUNCTION_44_6(v53, v54);
      return;
    }
    v43 = type metadata accessor for SearchAppEntity;
    v44 = v63;
    OUTLINED_FUNCTION_107_8(v74);
    SearchAppEntity.validateParameters()();
LABEL_8:
    _s10OmniSearch0B6ResultVWOhTm_1(v44, v43);
    return;
  }
  v38 = (uint64_t)v67;
  v39 = (uint64_t)v68;
  if (v33 == *MEMORY[0x24BE6E1F0])
  {
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_5_9();
    v66 = v26;
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_18_8();
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_69();
    swift_release();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_228_3();
    OUTLINED_FUNCTION_169_4();
    OUTLINED_FUNCTION_95_12();
    v40 = OUTLINED_FUNCTION_87_13();
    v41 = v64;
    if (__swift_getEnumTagSinglePayload(v40, v42, v64) != 1)
    {
      v47 = v61;
      v48 = v60;
      v49 = OUTLINED_FUNCTION_1_5();
      v50(v49);
      SearchGlobalEntity.validateParameters()();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v41);
      return;
    }
    v36 = &demangling cache variable for type metadata for SearchGlobalEntity?;
    goto LABEL_16;
  }
  if (v33 == *MEMORY[0x24BE6E220])
  {
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_2_8();
    v65 = v23;
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_5_9();
    v38 = v39;
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_84_7();
    OUTLINED_FUNCTION_228_3();
    OUTLINED_FUNCTION_169_4();
    OUTLINED_FUNCTION_95_12();
    v45 = OUTLINED_FUNCTION_87_13();
    if (__swift_getEnumTagSinglePayload(v45, v46, v62) != 1)
    {
      v43 = type metadata accessor for SearchSpotlightEntity;
      v44 = v59;
      OUTLINED_FUNCTION_107_8(v39);
      SearchSpotlightEntity.validateParameters()();
      goto LABEL_8;
    }
    v36 = &demangling cache variable for type metadata for SearchSpotlightEntity?;
LABEL_16:
    v37 = v38;
    goto LABEL_17;
  }
  if (v33 == *MEMORY[0x24BE6E1E8])
  {
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_2_8();
    v65 = v23;
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_146_7();
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_84_7();
    OUTLINED_FUNCTION_228_3();
    OUTLINED_FUNCTION_169_4();
    OUTLINED_FUNCTION_95_12();
    v51 = OUTLINED_FUNCTION_87_13();
    if (__swift_getEnumTagSinglePayload(v51, v52, v58) != 1)
    {
      v43 = type metadata accessor for SearchAnswerEntity;
      v44 = v57[1];
      OUTLINED_FUNCTION_107_8(v38);
      SearchAnswerEntity.validateParameters()();
      goto LABEL_8;
    }
    v36 = &demangling cache variable for type metadata for SearchAnswerEntity?;
    goto LABEL_16;
  }
  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  v55 = OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_44_6(v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v76, v77);
}

void SearchEntity.globalResult.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.init(result:card:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_60_9();
  v8 = MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_127_6(v8, v9, v10, v11, v12, v13, v14, v15, v37);
  v16 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_16_23(v16);
  v17 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_16_23(v17);
  v18 = OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_16_23(v18);
  v19 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_16_23(v19);
  v20 = OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_16_23(v20);
  v21 = v0 + *(int *)(v5 + 44);
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_78_14(v21);
  OUTLINED_FUNCTION_78_14(v0 + *(int *)(v5 + 48));
  closure #1 in SearchEntity.init(result:card:)(v0, v4, v2, v22, v23, v24, v25, v26, v38, v40, v42, v44, v46, v48, v50, v2, v53, v4, v56,
    v58);
  v27 = OUTLINED_FUNCTION_95_0();
  outlined init with copy of SearchResult(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
  OUTLINED_FUNCTION_211_2(v29, v30, v31, v32, v33, v34, v35, v36, v39, v41, v43, v45, v47, v49, v51, v52, v54, v55, v57,
    v59);
}

void sub_24330C444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_1_9(v1);
  v3 = *(_QWORD *)(v2 - 176);
  v4 = *(_QWORD *)(v2 - 168);
  v5 = *(_QWORD *)(v2 - 160);
  v6 = *(_QWORD *)(v2 - 152);
  v7 = *(_QWORD *)(v2 - 144);
  v8 = *(_QWORD *)(v2 - 136);
  v10 = *(_QWORD *)(v2 - 128);
  v9 = *(_QWORD *)(v2 - 120);
  v11 = *(_QWORD *)(v2 - 112);
  v12 = *(_QWORD *)(v2 - 104);
  v13 = *(_QWORD *)(v2 - 96);
  *(_QWORD *)(v2 - 216) = v12;
  *(_QWORD *)(v2 - 208) = v11;
  *(_QWORD *)(v2 - 192) = v13;
  if (v3)
  {
    *(_QWORD *)(v2 - 176) = v3;
    *(_QWORD *)(v2 - 168) = v4;
    *(_QWORD *)(v2 - 160) = v5;
    *(_QWORD *)(v2 - 152) = v6;
    *(_QWORD *)(v2 - 144) = v7;
    *(_QWORD *)(v2 - 136) = v8;
    *(_QWORD *)(v2 - 128) = v10;
    *(_QWORD *)(v2 - 120) = v9;
    *(_QWORD *)(v2 - 112) = v11;
    *(_QWORD *)(v2 - 104) = v12;
    *(_QWORD *)(v2 - 96) = v13;
    *(_QWORD *)(v2 - 224) = v3;
    *(_QWORD *)(v2 - 240) = v0;
    v14 = (uint64_t *)(*(_QWORD *)(v2 - 184) + *(int *)(type metadata accessor for SearchResult(0) + 24));
    v15 = *v14;
    *(_QWORD *)(v2 - 256) = v14[1];
    *(_QWORD *)(v2 - 248) = v15;
    OUTLINED_FUNCTION_86_16();
    outlined copy of SearchEntity?(v16);
    OUTLINED_FUNCTION_64();
    *(_QWORD *)(v2 - 232) = v8;
    SearchEntity.associatedQuery.setter();
    v8 = *(_QWORD *)(v2 - 232);

    v0 = *(_QWORD **)(v2 - 240);
    v3 = *(_QWORD *)(v2 - 224);
    OUTLINED_FUNCTION_86_16();
    outlined consume of SearchEntity?(v17);
  }
  else
  {

  }
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v2 - 184), type metadata accessor for SearchResult);
  *v0 = v3;
  v0[1] = v4;
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v8;
  v0[6] = v10;
  v0[7] = v9;
  v18 = *(_QWORD *)(v2 - 216);
  v0[8] = *(_QWORD *)(v2 - 208);
  v0[9] = v18;
  v0[10] = *(_QWORD *)(v2 - 192);
  OUTLINED_FUNCTION_43_0();
}

void SearchEntity.source.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchEntity.source.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchEntity.source.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$source.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void key path setter for SearchEntity.type : SearchEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[5];
  uint64_t v12;

  v4 = type metadata accessor for SearchResultType();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  v10 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  v11[3] = v10;
  v11[4] = *(_OWORD *)(a2 + 64);
  v12 = v8;
  SearchEntity.type.setter((uint64_t)v6);
}

void SearchEntity.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = OUTLINED_FUNCTION_148_1();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_80_3(v1, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_120_9(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_63();
}

void SearchEntity.type.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$type.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.appEntity.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.appEntity.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.appEntity.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$appEntity.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void key path setter for SearchEntity.appEntity : SearchEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_186_3(a1, v6);
  a6(v6);
  OUTLINED_FUNCTION_63();
}

void SearchEntity.globalResult.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.globalResult.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$globalResult.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.spotlightResult.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.spotlightResult.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.spotlightResult.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$spotlightResult.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.answer.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.answer.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.answer.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$answer.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.intentFile.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.intentFile.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.intentFile.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$intentFile.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.experienceFile.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void key path getter for SearchEntity.type : SearchEntity(__n128 *a1)
{
  __n128 v1;
  void (*v2)(__n128);

  v1 = OUTLINED_FUNCTION_97_12(a1);
  v2(v1);
  OUTLINED_FUNCTION_40_1();
}

void SearchEntity.experienceFile.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_41_14();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchEntity.experienceFile.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$experienceFile.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchEntity.supportedTypeIdentifiersForExport.getter()
{
  uint64_t v1;

  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchEntity.supportedTypeIdentifiersForExport : SearchEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SearchEntity.supportedTypeIdentifiersForExport.getter();
  *a1 = result;
  return result;
}

void key path setter for SearchEntity.supportedTypeIdentifiersForExport : SearchEntity()
{
  swift_bridgeObjectRetain();
  SearchEntity.supportedTypeIdentifiersForExport.setter();
}

void SearchEntity.supportedTypeIdentifiersForExport.setter()
{
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchEntity.supportedTypeIdentifiersForExport.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$supportedTypeIdentifiersForExport.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchEntity.experienceSourceType.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  swift_retain();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  swift_release();
  OUTLINED_FUNCTION_17_9();
  return swift_release();
}

void SearchEntity.associatedQuery.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchEntity.associatedQuery : SearchEntity(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SearchEntity.associatedQuery.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for SearchEntity.associatedQuery : SearchEntity()
{
  swift_bridgeObjectRetain();
  SearchEntity.associatedQuery.setter();
}

void SearchEntity.associatedQuery.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t EnumTagSinglePayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_18_2();
  v9 = OUTLINED_FUNCTION_55_12();
  v7 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_3();
  v6 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_168_3();
  v8 = v3;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_109_9();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_9_8();
  swift_release();
  swift_release();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v9);
  if ((_DWORD)EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_75_3(EnumTagSinglePayload, &demangling cache variable for type metadata for SearchGlobalEntity?);
  }
  else
  {
    v5 = OUTLINED_FUNCTION_184_2(v6, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    OUTLINED_FUNCTION_75_3(v5, &demangling cache variable for type metadata for SearchGlobalEntity?);
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_15_5();
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_120_4();
    OUTLINED_FUNCTION_87_6();
    SearchGlobalEntity.associatedQuery.setter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v9);
  }
  OUTLINED_FUNCTION_43_0();
}

void (*SearchEntity.associatedQuery.modify(_QWORD *a1))(void **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v4 = v1[1];
  v3[4] = *v1;
  v6 = v1[2];
  v5 = v1[3];
  v3[5] = v4;
  v3[6] = v6;
  v8 = v1[4];
  v7 = v1[5];
  v3[7] = v5;
  v3[8] = v8;
  v10 = v1[6];
  v9 = v1[7];
  v3[9] = v7;
  v3[10] = v10;
  v12 = v1[8];
  v11 = v1[9];
  v3[11] = v9;
  v3[12] = v12;
  v13 = v1[10];
  v3[13] = v11;
  v3[14] = v13;
  swift_retain();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_10_8();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  swift_release();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  swift_release();
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return SearchEntity.associatedQuery.modify;
}

void SearchEntity.associatedQuery.modify(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_204_2();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_149_4();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_204_2();
    OUTLINED_FUNCTION_149_4();
  }
  free(v2);
}

void SearchEntity.$associatedQuery.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.snippetPluginModel.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = SearchEntity.card.getter();
  if (v2)
  {
    v4 = (id)v2;
    SFCard.snippetPluginModel.getter(a1);

  }
  else
  {
    v3 = type metadata accessor for RGPluginModel();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 1, 1, v3);
  }
}

void SearchEntity.representedEntity.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  OUTLINED_FUNCTION_18_2();
  v62 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_128_8(v9, v53);
  v10 = OUTLINED_FUNCTION_148_1();
  v11 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  v67 = v11;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_168_3();
  v13 = *v0;
  v64 = v0[1];
  v14 = v64;
  v65 = v15;
  v16 = v0[2];
  v17 = v0[3];
  v69 = v13;
  v70 = v16;
  v18 = v0[4];
  v19 = v0[5];
  v20 = v0[6];
  v22 = v0[8];
  v21 = v0[9];
  swift_retain();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_198_2();
  v23 = v65;
  EntityProperty.wrappedValue.getter();
  v59 = v14;
  OUTLINED_FUNCTION_9_8();
  v58 = v21;
  swift_release();
  v60 = v22;
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  v61 = v20;
  OUTLINED_FUNCTION_69();
  v68 = v19;
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  swift_release();
  v24 = v66;
  swift_release();
  v25 = v67;
  swift_release();
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v23, v24);
  if (v26 == *MEMORY[0x24BE6E218])
  {
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_2_8();
    v54 = v17;
    OUTLINED_FUNCTION_1_11();
    v57 = v18;
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_0_11();
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_38_11();
    OUTLINED_FUNCTION_155_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_17_9();
    v27 = OUTLINED_FUNCTION_81_12();
    v28 = OUTLINED_FUNCTION_136_4();
    OUTLINED_FUNCTION_22_2(v28, v29, v27);
    if (!v30)
    {
      *(_QWORD *)(v62 + 24) = v27;
      OUTLINED_FUNCTION_172_2(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
      OUTLINED_FUNCTION_73_13(v38);
      v40 = v39;
      v41 = (uint64_t)v63;
LABEL_9:
      OUTLINED_FUNCTION_11_17(v41, v40);
      goto LABEL_21;
    }
    v31 = &demangling cache variable for type metadata for SearchAppEntity?;
    v32 = (uint64_t)v63;
LABEL_15:
    outlined destroy of MobileSMSDocument?(v32, v31);
    v43 = v62;
    *(_OWORD *)v62 = 0u;
    *(_OWORD *)(v43 + 16) = 0u;
    *(_QWORD *)(v43 + 32) = 0;
    goto LABEL_21;
  }
  v33 = v25;
  v34 = (uint64_t)v55;
  v35 = (uint64_t)v56;
  if (v26 != *MEMORY[0x24BE6E1F0])
  {
    if (v26 != *MEMORY[0x24BE6E220])
    {
      if (v26 != *MEMORY[0x24BE6E1E8])
      {
        v50 = (_OWORD *)v62;
        *(_QWORD *)(v62 + 32) = 0;
        *v50 = 0u;
        v50[1] = 0u;
        OUTLINED_FUNCTION_187_5(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
        goto LABEL_21;
      }
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_15_5();
      OUTLINED_FUNCTION_2_8();
      v54 = v17;
      OUTLINED_FUNCTION_1_11();
      v57 = v18;
      OUTLINED_FUNCTION_10_8();
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_1_11();
      OUTLINED_FUNCTION_12_9();
      OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_5_9();
      OUTLINED_FUNCTION_15_5();
      EntityProperty.wrappedValue.getter();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_13_8();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_38_11();
      OUTLINED_FUNCTION_155_1();
      OUTLINED_FUNCTION_188_5();
      OUTLINED_FUNCTION_9_8();
      OUTLINED_FUNCTION_17_9();
      v46 = OUTLINED_FUNCTION_61_14();
      OUTLINED_FUNCTION_22_2(v35, 1, v46);
      v47 = v62;
      if (v30)
      {
        outlined destroy of MobileSMSDocument?(v35, &demangling cache variable for type metadata for SearchAnswerEntity?);
        *(_OWORD *)v47 = 0u;
        *(_OWORD *)(v47 + 16) = 0u;
        *(_QWORD *)(v47 + 32) = 0;
        goto LABEL_21;
      }
      *(_QWORD *)(v62 + 24) = v46;
      OUTLINED_FUNCTION_172_2(&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity);
      OUTLINED_FUNCTION_73_13(v51);
      v40 = v52;
      v41 = v35;
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_2_8();
    v54 = v17;
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_10_8();
    swift_retain();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_0_11();
    v36 = v34;
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_69();
    swift_release();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_155_1();
    OUTLINED_FUNCTION_188_5();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_17_9();
    v42 = OUTLINED_FUNCTION_68_19();
    OUTLINED_FUNCTION_22_2(v34, 1, v42);
    if (!v30)
    {
      *(_QWORD *)(v62 + 24) = v42;
      OUTLINED_FUNCTION_172_2(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
      OUTLINED_FUNCTION_73_13(v48);
      v40 = v49;
      v41 = v34;
      goto LABEL_9;
    }
    v31 = &demangling cache variable for type metadata for SearchSpotlightEntity?;
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_1_11();
  v57 = v18;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_11();
  v36 = v53;
  OUTLINED_FUNCTION_109_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_188_5();
  OUTLINED_FUNCTION_9_8();
  swift_release();
  v37 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_22_2(v36, 1, v37);
  if (v30)
  {
    v31 = &demangling cache variable for type metadata for SearchGlobalEntity?;
LABEL_14:
    v32 = v36;
    goto LABEL_15;
  }
  *(_QWORD *)(v62 + 24) = v37;
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
  OUTLINED_FUNCTION_73_13(v44);
  OUTLINED_FUNCTION_184_2(v45, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32));
LABEL_21:
  OUTLINED_FUNCTION_43_0();
}

void SearchEntity.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[16];

  OUTLINED_FUNCTION_18_2();
  v5[8] = v0;
  v1 = type metadata accessor for UUID();
  v5[10] = *(_QWORD *)(v1 - 8);
  v5[11] = v1;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v2);
  v5[9] = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_126_5();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  v5[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_100_10();
  OUTLINED_FUNCTION_43_4();
}

void sub_24330DAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchResultType>);
  *(_QWORD *)(v2 - 168) = a1;
  swift_retain();
  OUTLINED_FUNCTION_139_4();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, (void (*)(uint64_t))MEMORY[0x24BE6E228]);
  *(_QWORD *)(v2 - 104) = MEMORY[0x2494F4298](v1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAppEntity?>);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_50_19();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_76_13();
}

void sub_24330DB74(uint64_t a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchGlobalEntity?>);
  *(_QWORD *)(v1 - 176) = a1;
  swift_retain();
  OUTLINED_FUNCTION_56_13();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
  OUTLINED_FUNCTION_76_13();
}

void sub_24330DBBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchSpotlightEntity?>);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_50_19();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_76_13();
}

void sub_24330DC10()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAnswerEntity?>);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_58_10();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
  OUTLINED_FUNCTION_76_13();
}

void sub_24330DC50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_70_14();
  MEMORY[0x2494F42B0](v1);
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  MEMORY[0x2494F42B0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_43_4();
}

void sub_24330DCC8()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_50_19();
  OUTLINED_FUNCTION_43_4();
}

void sub_24330DCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  swift_retain();
  OUTLINED_FUNCTION_81_2();
  *(_QWORD *)(v6 - 112) = MEMORY[0x2494F42C8](v5);
  swift_retain_n();
  OUTLINED_FUNCTION_0_11();
  swift_retain();
  OUTLINED_FUNCTION_1_11();
  v8 = *(_QWORD *)(v6 - 152);
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_15_5();
  v9 = *(_QWORD *)(v6 - 160);
  OUTLINED_FUNCTION_7_12();
  *(_QWORD *)(v6 - 208) = v2;
  OUTLINED_FUNCTION_10_8();
  *(_QWORD *)(v6 - 200) = v3;
  OUTLINED_FUNCTION_5_9();
  *(_QWORD *)(v6 - 184) = v4;
  OUTLINED_FUNCTION_2_8();
  *(_QWORD *)(v6 - 192) = a1;
  OUTLINED_FUNCTION_12_9();
  v10 = *(_QWORD *)(v6 - 136);
  UUID.init()();
  v11 = UUID.uuidString.getter();
  v13 = v12;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 128) + 8))(v10, *(_QWORD *)(v6 - 120));
  *(_QWORD *)(v6 - 96) = v11;
  *(_QWORD *)(v6 - 88) = v13;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_11_5();
  v14 = v9;
  swift_release();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69();
  v15 = *(_QWORD *)(v6 - 176);
  OUTLINED_FUNCTION_13_8();
  swift_release();
  v16 = *(_QWORD *)(v6 - 168);
  OUTLINED_FUNCTION_4_12();
  *(_QWORD *)(v6 - 96) = 0;
  *(_QWORD *)(v6 - 88) = 0xE000000000000000;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  v17 = *(_QWORD *)(v6 - 192);
  OUTLINED_FUNCTION_17_9();
  v18 = *(_QWORD *)(v6 - 184);
  OUTLINED_FUNCTION_75_0();
  v19 = *(_QWORD *)(v6 - 200);
  OUTLINED_FUNCTION_11_5();
  v20 = *(_QWORD *)(v6 - 208);
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  v21 = *(_QWORD *)(v6 - 104);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_4_12();
  v22 = *(_QWORD **)(v6 - 144);
  *v22 = v16;
  v22[1] = v21;
  v22[2] = v15;
  v22[3] = v8;
  v22[4] = v1;
  v22[5] = v14;
  v22[6] = v20;
  v22[7] = v19;
  v22[8] = v18;
  v22[9] = v17;
  v22[10] = *(_QWORD *)(v6 - 112);
  OUTLINED_FUNCTION_43_0();
}

void SearchEntity.id.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

uint64_t SearchEntity.Builder.init()@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = OUTLINED_FUNCTION_28_22();
  *a1 = 0u;
  a1[1] = 0u;
  v3 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_16_23(v3);
  v4 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_16_23(v4);
  v5 = OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_16_23(v5);
  v6 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_16_23(v6);
  v7 = OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_16_23(v7);
  v8 = (uint64_t)a1 + *(int *)(v2 + 44);
  v9 = OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_78_14(v8);
  return OUTLINED_FUNCTION_32_2((uint64_t)a1 + *(int *)(v2 + 48), 1, 1, v9);
}

void SearchEntity.init(builder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[42];

  OUTLINED_FUNCTION_18_2();
  a19 = v20;
  a20 = v21;
  v48[29] = v22;
  v48[18] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_127_1((uint64_t)v48 - v26);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v29);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v35);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v38);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v39);
  v48[13] = (char *)v48 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_25_0(v41, (uint64_t)&a16);
  v48[14] = v42;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v45);
  v48[15] = (char *)v48 - v46;
  OUTLINED_FUNCTION_126_5();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_3_1();
  v48[23] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_100_10();
  OUTLINED_FUNCTION_92_4();
}

void sub_24330E188()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchResultType>);
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_172_2(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
  MEMORY[0x2494F4298](v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAppEntity?>);
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_50_19();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_77_13();
}

void sub_24330E218()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchGlobalEntity?>);
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_56_13();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
  OUTLINED_FUNCTION_77_13();
}

void sub_24330E258()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchSpotlightEntity?>);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_50_19();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_77_13();
}

void sub_24330E2AC(uint64_t a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAnswerEntity?>);
  *(_QWORD *)(v1 - 224) = a1;
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_58_10();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
  OUTLINED_FUNCTION_77_13();
}

void sub_24330E2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_70_14();
  MEMORY[0x2494F42B0](v0);
  swift_retain();
  OUTLINED_FUNCTION_69_5();
  v2 = MEMORY[0x2494F42B0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  *(_QWORD *)(v1 - 208) = v2;
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_92_4();
}

void sub_24330E370()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_50_19();
  OUTLINED_FUNCTION_92_4();
}

void sub_24330E3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  void *v36;
  void (*v37)(uint64_t, uint64_t, void *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  *(_QWORD *)(v9 - 200) = a1;
  swift_retain();
  OUTLINED_FUNCTION_81_2();
  v10 = MEMORY[0x2494F42C8](v3);
  v11 = *(_QWORD **)(v9 - 184);
  v12 = v11[1];
  *(_QWORD *)(v9 - 216) = v8;
  *(_QWORD *)(v9 - 192) = v2;
  *(_QWORD *)(v9 - 248) = v6;
  *(_QWORD *)(v9 - 240) = v7;
  *(_QWORD *)(v9 - 232) = v10;
  if (!v12)
  {
    v14 = v11;
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_116_11();
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = (uint64_t)v14;
    v25 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v25, (uint64_t)static Logging.search);
    v26 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v26))
    {
      *(_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)() = 0;
      v29 = "Attempting to create SearchEntity without id";
LABEL_17:
      OUTLINED_FUNCTION_106_10(&dword_24315F000, v27, v28, v29);
LABEL_18:
      specialized UnsafeMutablePointer.deallocate()();
    }
LABEL_19:
    v32 = *(_QWORD *)(v9 - 272);
    goto LABEL_20;
  }
  *(_QWORD *)(v9 - 176) = **(_QWORD **)(v9 - 184);
  *(_QWORD *)(v9 - 168) = v12;
  swift_retain_n();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_12_9();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_13_8();
  *(_QWORD *)(v9 - 256) = v4;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 264) = v5;
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_5();
  v13 = *(_QWORD *)(v9 - 184);
  v14 = *(void **)(v13 + 24);
  if (!v14)
  {
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_12();
    swift_release();
    OUTLINED_FUNCTION_116_11();
    OUTLINED_FUNCTION_9_8();
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = *(_QWORD *)(v9 - 184);
    v30 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v30, (uint64_t)static Logging.search);
    v31 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v31))
    {
      *(_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)() = 0;
      v29 = "Attempting to create SearchEntity without source";
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  *(_QWORD *)(v9 - 176) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v9 - 168) = v14;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  swift_retain();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_210_1();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_39_0();
  v15 = *(_QWORD *)(v9 - 224);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  swift_release();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_11_5();
  v16 = OUTLINED_FUNCTION_28_22();
  v17 = *(_QWORD *)(v9 - 312);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(*(_QWORD *)(v9 - 184) + *(int *)(v16 + 24), v17, &demangling cache variable for type metadata for SearchResultType?);
  v14 = *(void **)(v9 - 280);
  OUTLINED_FUNCTION_22_2(v17, 1, (uint64_t)v14);
  if (v18)
  {
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_17_9();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_11_5();
    *(_QWORD *)(v9 - 280) = v1;
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_116_11();
    v19 = swift_release();
    OUTLINED_FUNCTION_79_3(v19, &demangling cache variable for type metadata for SearchResultType?);
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = *(_QWORD *)(v9 - 184);
    v21 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v21, (uint64_t)static Logging.search);
    v22 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v22))
    {
      *(_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)() = 0;
      OUTLINED_FUNCTION_106_10(&dword_24315F000, v23, v24, "Attempting to create SearchEntity without type");
      goto LABEL_18;
    }
    v32 = *(_QWORD *)(v9 - 272);
LABEL_20:

    _s10OmniSearch0B6ResultVWOhTm_1(v20, (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
    swift_release();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_13_8();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_38_11();
    OUTLINED_FUNCTION_155_1();
    *(_QWORD *)(v32 + 80) = 0;
    *(_OWORD *)(v32 + 48) = 0u;
    *(_OWORD *)(v32 + 64) = 0u;
    *(_OWORD *)(v32 + 16) = 0u;
    *(_OWORD *)(v32 + 32) = 0u;
    *(_OWORD *)v32 = 0u;
    goto LABEL_21;
  }
  v33 = *(_QWORD *)(v9 - 304);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32);
  *(_QWORD *)(v9 - 408) = v16;
  v35 = *(_QWORD *)(v9 - 296);
  OUTLINED_FUNCTION_89_11(v35, v17, v34);
  v36 = v14;
  v37 = *(void (**)(uint64_t, uint64_t, void *))(v33 + 16);
  v38 = *(_QWORD *)(v9 - 400);
  v39 = v35;
  v40 = v36;
  v37(v38, v39, v36);
  v37(*(_QWORD *)(v9 - 320), v38, v40);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_15_5();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_201_2();
  v42 = *(uint64_t (**)(uint64_t, _QWORD))(v41 + 8);
  *(_QWORD *)(v9 - 304) = v42;
  OUTLINED_FUNCTION_194_3(v38, v42);
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_50();
  swift_release();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_4_12();
  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_110_9();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v43, v44, &demangling cache variable for type metadata for SearchSpotlightEntity?);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v15, *(_QWORD *)(v9 - 384), &demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_75();
  swift_retain();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_75();
  swift_retain();
  OUTLINED_FUNCTION_98_9();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v15, &demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_50();
  v45 = *(_QWORD *)(v9 - 248);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_110_9();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v46, v47, &demangling cache variable for type metadata for SearchGlobalEntity?);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v15, *(_QWORD *)(v9 - 368), &demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_2_8();
  swift_retain();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v15, &demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_17_9();
  swift_release();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_110_9();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v48, v49, &demangling cache variable for type metadata for SearchAnswerEntity?);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v15, *(_QWORD *)(v9 - 352), &demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_98_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_5_9();
  v50 = *(_QWORD *)(v9 - 256);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_12_9();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v15, &demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_39_0();
  swift_release();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_110_9();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v51, v52, &demangling cache variable for type metadata for SearchAppEntity?);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v15, *(_QWORD *)(v9 - 336), &demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_98_9();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v15, &demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_39_0();
  v53 = v45;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_75_0();
  v54 = *(_QWORD *)(v9 - 184);
  OUTLINED_FUNCTION_180_3();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v55, v56, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_110_9();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v57, v58, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_15_5();
  v59 = v53;
  swift_retain();
  v60 = *(_QWORD *)(v9 - 264);
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v50, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  v61 = v59;
  OUTLINED_FUNCTION_13_8();
  v62 = *(_QWORD *)(v9 - 224);
  OUTLINED_FUNCTION_50();
  v63 = *(_QWORD *)(v9 - 248);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_118_5();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v54 + v64, v50, &demangling cache variable for type metadata for IntentFile?);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v50, v15, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  v65 = v63;
  swift_retain();
  v66 = v62;
  swift_retain();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_18_8();
  v67 = *(_QWORD *)(v9 - 208);
  OUTLINED_FUNCTION_75();
  v68 = *(_QWORD *)(v9 - 256);
  OUTLINED_FUNCTION_10_8();
  v69 = *(_QWORD *)(v9 - 200);
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_7_12();
  EntityProperty.wrappedValue.setter();
  outlined destroy of MobileSMSDocument?(v50, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_50();
  v70 = v60;
  OUTLINED_FUNCTION_17_9();
  v71 = v61;
  OUTLINED_FUNCTION_75_0();
  v72 = v66;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_3_6();
  v73 = *(_QWORD *)(v9 - 240);
  OUTLINED_FUNCTION_75_0();
  v74 = *(_QWORD *)(v9 - 192);
  OUTLINED_FUNCTION_69();
  v75 = *(_QWORD *)(v9 - 216);
  OUTLINED_FUNCTION_4_12();
  *(_QWORD *)(v9 - 176) = v75;
  *(_QWORD *)(v9 - 168) = v74;
  *(_QWORD *)(v9 - 160) = v73;
  *(_QWORD *)(v9 - 152) = v65;
  *(_QWORD *)(v9 - 144) = v72;
  *(_QWORD *)(v9 - 136) = v71;
  *(_QWORD *)(v9 - 128) = v70;
  *(_QWORD *)(v9 - 120) = v67;
  *(_QWORD *)(v9 - 112) = v68;
  *(_QWORD *)(v9 - 104) = v69;
  v76 = *(_QWORD *)(v9 - 232);
  *(_QWORD *)(v9 - 96) = v76;
  swift_retain();
  OUTLINED_FUNCTION_1_11();
  v77 = v73;
  swift_retain();
  OUTLINED_FUNCTION_0_11();
  v78 = v72;
  swift_retain();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_198_2();
  OUTLINED_FUNCTION_15_5();
  *(_QWORD *)(v9 - 176) = SearchEntity.validTypeIdentifiers.getter();
  OUTLINED_FUNCTION_210_1();
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v9 - 184), (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
  OUTLINED_FUNCTION_201_2();
  v79();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  v80 = v67;
  OUTLINED_FUNCTION_7_6();
  v81 = v70;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  v82 = v78;
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  v83 = *(_QWORD *)(v9 - 192);
  OUTLINED_FUNCTION_7_6();
  v84 = *(_QWORD *)(v9 - 216);
  OUTLINED_FUNCTION_7_6();
  v85 = *(_QWORD **)(v9 - 272);
  *v85 = v84;
  v85[1] = v83;
  v85[2] = v77;
  v85[3] = v65;
  v85[4] = v82;
  v85[5] = v71;
  v85[6] = v81;
  v85[7] = v80;
  v86 = *(_QWORD *)(v9 - 200);
  v85[8] = v68;
  v85[9] = v86;
  v85[10] = v76;
LABEL_21:
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchEntity.validTypeIdentifiers.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t EnumTagSinglePayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  _BYTE v51[24];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  OUTLINED_FUNCTION_18_2();
  v73 = v1;
  v74 = v2;
  v59 = OUTLINED_FUNCTION_55_12();
  v53 = *(_QWORD *)(v59 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_127_1((uint64_t)&v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0_3();
  v58 = v6;
  v57 = OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_127_1((uint64_t)&v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  v56 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_127_1((uint64_t)&v51[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_127_1((uint64_t)&v51[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v15 = v0[1];
  v69 = *v0;
  v70 = v15;
  v16 = v0[2];
  v64 = v0[3];
  v17 = v0[5];
  v67 = v0[4];
  v68 = v16;
  v18 = v0[7];
  v66 = v0[6];
  v20 = v0[8];
  v19 = v0[9];
  v21 = v0[10];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[String]>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433505A0;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_175_1();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  v23 = v54;
  EntityProperty.wrappedValue.getter();
  v60 = v21;
  OUTLINED_FUNCTION_69();
  v61 = v19;
  OUTLINED_FUNCTION_13_8();
  v62 = v20;
  OUTLINED_FUNCTION_17_9();
  v63 = v18;
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  v65 = v17;
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_131_5();
  swift_release();
  OUTLINED_FUNCTION_224_3();
  OUTLINED_FUNCTION_227_2();
  OUTLINED_FUNCTION_223_3();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v55);
  if ((_DWORD)EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_35_5(EnumTagSinglePayload, &demangling cache variable for type metadata for SearchAnswerEntity?);
    v25 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_153_3(v23, (uint64_t)&v71);
    OUTLINED_FUNCTION_35_5(v26, &demangling cache variable for type metadata for SearchAnswerEntity?);
    v25 = SearchAnswerEntity.validTypeIdentifiers.getter();
    OUTLINED_FUNCTION_59_3(v17);
  }
  *(_QWORD *)(inited + 32) = v25;
  OUTLINED_FUNCTION_222_1();
  OUTLINED_FUNCTION_175_1();
  swift_retain();
  v27 = v64;
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  v28 = (uint64_t)v56;
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_224_3();
  OUTLINED_FUNCTION_227_2();
  OUTLINED_FUNCTION_223_3();
  v29 = __swift_getEnumTagSinglePayload(v28, 1, v57);
  if ((_DWORD)v29)
  {
    OUTLINED_FUNCTION_145_2(v29, &demangling cache variable for type metadata for SearchSpotlightEntity?);
    v30 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_153_3(v28, (uint64_t)&v72);
    OUTLINED_FUNCTION_145_2(v31, &demangling cache variable for type metadata for SearchSpotlightEntity?);
    v30 = SearchSpotlightEntity.validTypeIdentifiers.getter();
    OUTLINED_FUNCTION_59_3(v27);
  }
  *(_QWORD *)(inited + 40) = v30;
  OUTLINED_FUNCTION_222_1();
  OUTLINED_FUNCTION_175_1();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_225_2();
  swift_retain();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_7_12();
  v32 = v58;
  OUTLINED_FUNCTION_109_9();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_227_2();
  OUTLINED_FUNCTION_223_3();
  v33 = __swift_getEnumTagSinglePayload(v32, 1, v59);
  if ((_DWORD)v33)
  {
    OUTLINED_FUNCTION_35_5(v33, &demangling cache variable for type metadata for SearchGlobalEntity?);
    v34 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v35 = v53;
    v36 = v52;
    v37 = OUTLINED_FUNCTION_80_3(v52, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
    OUTLINED_FUNCTION_35_5(v37, &demangling cache variable for type metadata for SearchGlobalEntity?);
    v34 = SearchGlobalEntity.validTypeIdentifiers.getter();
    OUTLINED_FUNCTION_120_9(v36, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  }
  *(_QWORD *)(inited + 48) = v34;
  v38 = MEMORY[0x24BEE4AF8];
  v39 = 32;
  while (1)
  {
    v40 = *(_QWORD *)(inited + v39);
    v41 = *(_QWORD *)(v40 + 16);
    v42 = *(_QWORD *)(v38 + 16);
    if (__OFADD__(v42, v41))
      break;
    OUTLINED_FUNCTION_46_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v42 + v41 > *(_QWORD *)(v38 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v38 = v43;
    }
    if (*(_QWORD *)(v40 + 16))
    {
      v44 = *(_QWORD *)(v38 + 16);
      if ((*(_QWORD *)(v38 + 24) >> 1) - v44 < v41)
        goto LABEL_30;
      v45 = v38 + 16 * v44 + 32;
      if (v40 + 32 < v45 + 16 * v41 && v45 < v40 + 32 + 16 * v41)
        goto LABEL_32;
      swift_arrayInitWithCopy();
      if (v41)
      {
        v47 = *(_QWORD *)(v38 + 16);
        v48 = __OFADD__(v47, v41);
        v49 = v47 + v41;
        if (v48)
          goto LABEL_31;
        *(_QWORD *)(v38 + 16) = v49;
      }
    }
    else if (v41)
    {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v39 += 8;
    if (v39 == 56)
    {
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      return v38;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void SearchEntity.Builder.id.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.source.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.source.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchEntity.Builder.source.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 24), v2, &demangling cache variable for type metadata for SearchResultType?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.type.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 24), &demangling cache variable for type metadata for SearchResultType?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.type.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.globalResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 28), v2, &demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.globalResult.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 28), &demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.globalResult.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.spotlightResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 32), v2, &demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.spotlightResult.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 32), &demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.spotlightResult.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.answer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 36), v2, &demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.answer.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 36), &demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.answer.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.appEntity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 40), v2, &demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.appEntity.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 40), &demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.appEntity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.intentFile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 44), v2, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.intentFile.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 44), &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.intentFile.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.experienceFile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 48), v2, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

void SearchEntity.Builder.experienceFile.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 48), &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchEntity.Builder.experienceFile.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_22();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchEntity.Builder.init(id:source:type:globalResult:spotlightResult:answer:appEntity:intentFile:experienceFile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;

  OUTLINED_FUNCTION_18_2();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  *v31 = v33;
  v31[1] = v34;
  v31[2] = v35;
  v31[3] = v36;
  v37 = (int *)OUTLINED_FUNCTION_28_22();
  outlined init with take of URL?(v30, (uint64_t)v32 + v37[6], &demangling cache variable for type metadata for SearchResultType?);
  outlined init with take of URL?(v28, (uint64_t)v32 + v37[7], &demangling cache variable for type metadata for SearchGlobalEntity?);
  outlined init with take of URL?(v26, (uint64_t)v32 + v37[8], &demangling cache variable for type metadata for SearchSpotlightEntity?);
  outlined init with take of URL?(v24, (uint64_t)v32 + v37[9], &demangling cache variable for type metadata for SearchAnswerEntity?);
  outlined init with take of URL?(a21, (uint64_t)v32 + v37[10], &demangling cache variable for type metadata for SearchAppEntity?);
  outlined init with take of URL?(a22, (uint64_t)v32 + v37[11], &demangling cache variable for type metadata for IntentFile?);
  outlined init with take of URL?(a23, (uint64_t)v32 + v37[12], &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_43_0();
}

void SearchEntity.id.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchEntity.source : SearchEntity(__n128 *a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v3;
  uint64_t (*v4)(__n128);
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_97_12(a1);
  *a2 = v4(v3);
  a2[1] = v5;
  OUTLINED_FUNCTION_40_1();
}

uint64_t key path setter for SearchEntity.source : SearchEntity(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  OUTLINED_FUNCTION_46_0();
  return a5(v6, v7);
}

void SearchEntity.id.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchEntity.$id.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void static SearchEntity.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchEntity.typeDisplayRepresentation);
  swift_beginAccess();
  OUTLINED_FUNCTION_89_11(a1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_51_0();
}

void static SearchEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_89_11(v3, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  swift_endAccess();
  v4 = OUTLINED_FUNCTION_6_5();
  v5(v4);
  OUTLINED_FUNCTION_51_0();
}

void static SearchEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static SearchEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchEntity.Query.entities(for:)()
{
  uint64_t v0;

  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchEntity.Query.entities(for:)();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type SearchEntity.Query and conformance SearchEntity.Query();
  *v1 = v0;
  v1[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return EntityQuery.results()();
}

uint64_t (*static SearchEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t static SearchEntity.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  BOOL v73;
  char v74;
  char v75;
  _QWORD *v76;
  _QWORD *v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  void (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD v182[4];
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[3];
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD v193[5];
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;

  OUTLINED_FUNCTION_18_2();
  v200 = v0;
  v201 = v1;
  v188 = v2;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_25_0(v5, (uint64_t)&v181);
  v153 = v6;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v8);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IntentFile?, IntentFile?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_34_1();
  v158 = v14;
  v161 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v16);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchAnswerEntity?, SearchAnswerEntity?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v18);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v21);
  v23 = OUTLINED_FUNCTION_13_2((uint64_t)&v151 - v22);
  v166 = type metadata accessor for SearchSpotlightEntity(v23);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v25);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchSpotlightEntity?, SearchSpotlightEntity?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_34_1();
  v169 = v31;
  v32 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_25_0(v32, (uint64_t)&v194);
  v168 = v33;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v35);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchGlobalEntity?, SearchGlobalEntity?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_34_1();
  v42 = OUTLINED_FUNCTION_13_2(v41);
  v177 = type metadata accessor for SearchAppEntity(v42);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_127_1((uint64_t)&v151 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchAppEntity?, SearchAppEntity?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v46);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v49);
  v179 = (char *)&v151 - v50;
  v51 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_25_0(v51, (uint64_t)&v199);
  v180 = v52;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v55);
  v56 = *v4;
  v193[4] = v4[1];
  v194 = v56;
  v57 = v4[2];
  v58 = v4[3];
  v59 = v4[4];
  v60 = v4[5];
  v62 = v4[6];
  v61 = v4[7];
  v63 = v4[8];
  v64 = v4[9];
  v65 = v4[10];
  v66 = (_QWORD *)*v188;
  v195 = v188[1];
  v196 = v66;
  v67 = v188[3];
  v68 = v188[4];
  v192 = v188[2];
  v193[0] = v68;
  v193[2] = v188[5];
  v193[3] = v67;
  v193[1] = v188[6];
  v69 = v188[7];
  v190 = v188[8];
  v191 = v69;
  v70 = v188[9];
  v188 = (_QWORD *)v188[10];
  v189 = v70;
  swift_retain();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_87_2();
  v182[2] = v65;
  OUTLINED_FUNCTION_50();
  v182[3] = v64;
  OUTLINED_FUNCTION_17_9();
  v183 = v63;
  OUTLINED_FUNCTION_13_8();
  v184 = v61;
  OUTLINED_FUNCTION_11_5();
  v185[0] = v62;
  OUTLINED_FUNCTION_69();
  v185[1] = v60;
  OUTLINED_FUNCTION_3_6();
  v185[2] = v59;
  OUTLINED_FUNCTION_9_8();
  v186 = v58;
  OUTLINED_FUNCTION_75_0();
  v187 = v57;
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_120_4();
  OUTLINED_FUNCTION_87_6();
  v71 = v198;
  v182[0] = v197;
  OUTLINED_FUNCTION_174_2();
  OUTLINED_FUNCTION_133_6();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  v72 = v188;
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_8();
  swift_release();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_82_15();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_197_2();
  v73 = v73 && v71 == v72;
  if (v73)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v74 = OUTLINED_FUNCTION_9_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    v75 = 0;
    if ((v74 & 1) == 0)
      return v75 & 1;
  }
  OUTLINED_FUNCTION_75();
  swift_retain();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_39_0();
  swift_release();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_4_12();
  swift_release();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_120_4();
  OUTLINED_FUNCTION_50();
  v76 = v198;
  v182[0] = v197;
  v77 = v196;
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_7_12();
  swift_retain();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_175_1();
  OUTLINED_FUNCTION_222_1();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_87_2();
  swift_release();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  swift_release();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_197_2();
  if (v73 && v76 == v77)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v79 = OUTLINED_FUNCTION_9_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    v75 = 0;
    if ((v79 & 1) == 0)
      return v75 & 1;
  }
  OUTLINED_FUNCTION_162_4();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_12_9();
  v80 = v186;
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_90_12();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_174_2();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  swift_retain();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_224_3();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_82_15();
  OUTLINED_FUNCTION_95_12();
  v81 = v182[1];
  v82 = specialized == infix<A>(_:_:)();
  v83 = *(void (**)(void))(v180 + 8);
  OUTLINED_FUNCTION_180_3();
  v83();
  ((void (*)(uint64_t, uint64_t))v83)(v81, v80);
  if ((v82 & 1) == 0)
    goto LABEL_47;
  OUTLINED_FUNCTION_162_4();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  v84 = v185[0];
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_90_12();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_174_2();
  OUTLINED_FUNCTION_133_6();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  v85 = v190;
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_146_7();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_17_9();
  v86 = (uint64_t)v179;
  swift_release();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_82_15();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_118_5();
  v87 = v178;
  v89 = v178 + v88;
  OUTLINED_FUNCTION_60_3(v86);
  v90 = OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_113_6(v90, v91);
  v92 = OUTLINED_FUNCTION_136_4();
  v93 = v177;
  OUTLINED_FUNCTION_22_2(v92, v94, v177);
  if (v73)
  {
    OUTLINED_FUNCTION_76_1(v84);
    OUTLINED_FUNCTION_76_1(v86);
    OUTLINED_FUNCTION_22_2(v89, 1, v93);
    if (v73)
    {
      outlined destroy of MobileSMSDocument?(v87, &demangling cache variable for type metadata for SearchAppEntity?);
      goto LABEL_26;
    }
LABEL_24:
    v96 = &demangling cache variable for type metadata for (SearchAppEntity?, SearchAppEntity?);
    v97 = v87;
    goto LABEL_46;
  }
  OUTLINED_FUNCTION_202_2(v87, &demangling cache variable for type metadata for SearchAppEntity?, (uint64_t)&v195);
  OUTLINED_FUNCTION_22_2(v89, 1, v93);
  if (v95)
  {
    OUTLINED_FUNCTION_111_6(v84);
    OUTLINED_FUNCTION_111_6(v86);
    _s10OmniSearch0B6ResultVWOhTm_1(v85, type metadata accessor for SearchAppEntity);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_155_4(v89, (uint64_t)v193);
  v98 = OUTLINED_FUNCTION_95_0();
  v100 = static SearchAppEntity.== infix(_:_:)(v98, v99);
  OUTLINED_FUNCTION_59_3(v93);
  OUTLINED_FUNCTION_54_18(v84);
  OUTLINED_FUNCTION_54_18(v86);
  OUTLINED_FUNCTION_59_3(v85);
  OUTLINED_FUNCTION_54_18(v87);
  if ((v100 & 1) == 0)
    goto LABEL_47;
LABEL_26:
  OUTLINED_FUNCTION_162_4();
  swift_retain();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_90_12();
  OUTLINED_FUNCTION_39_0();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_120_4();
  OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_174_2();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_225_2();
  OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  v101 = v191;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_7_12();
  v102 = v171;
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  v103 = v174;
  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_118_5();
  v104 = v172;
  v106 = v172 + v105;
  OUTLINED_FUNCTION_113_6(v103, v172);
  OUTLINED_FUNCTION_113_6(v102, v106);
  v107 = v173;
  OUTLINED_FUNCTION_22_2(v104, 1, v173);
  if (v73)
  {
    OUTLINED_FUNCTION_76_1(v102);
    OUTLINED_FUNCTION_76_1(v103);
    v108 = OUTLINED_FUNCTION_22_2(v106, 1, v107);
    if (v73)
    {
      OUTLINED_FUNCTION_145_2(v108, &demangling cache variable for type metadata for SearchGlobalEntity?);
      goto LABEL_36;
    }
LABEL_34:
    v96 = &demangling cache variable for type metadata for (SearchGlobalEntity?, SearchGlobalEntity?);
LABEL_45:
    v97 = v104;
    goto LABEL_46;
  }
  OUTLINED_FUNCTION_119_5(v104, &demangling cache variable for type metadata for SearchGlobalEntity?, (uint64_t)&v192);
  OUTLINED_FUNCTION_22_2(v106, 1, v107);
  if (v109)
  {
    OUTLINED_FUNCTION_111_6(v102);
    OUTLINED_FUNCTION_111_6(v103);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v101, v107);
    goto LABEL_34;
  }
  v110 = v168;
  v111 = v163;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 32))(v163, v106, v107);
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
  v112 = dispatch thunk of static Equatable.== infix(_:_:)();
  v113 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v113(v111, v107);
  OUTLINED_FUNCTION_76_1(v102);
  OUTLINED_FUNCTION_76_1(v103);
  v113(v101, v107);
  OUTLINED_FUNCTION_76_1(v104);
  if ((v112 & 1) == 0)
    goto LABEL_47;
LABEL_36:
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_0_11();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  v114 = v183;
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_90_12();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_50();
  swift_release();
  OUTLINED_FUNCTION_155_1();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_15_5();
  swift_retain();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  v115 = v191;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_50();
  v116 = v169;
  swift_release();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_82_15();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_118_5();
  v104 = v167;
  v118 = v167 + v117;
  OUTLINED_FUNCTION_113_6(v116, v167);
  OUTLINED_FUNCTION_113_6(v114, v118);
  v119 = v166;
  OUTLINED_FUNCTION_22_2(v104, 1, v166);
  if (!v73)
  {
    OUTLINED_FUNCTION_119_5(v104, &demangling cache variable for type metadata for SearchSpotlightEntity?, (uint64_t)v185);
    OUTLINED_FUNCTION_22_2(v118, 1, v119);
    if (!v121)
    {
      v123 = v157;
      outlined init with take of SearchResult(v118, v157, type metadata accessor for SearchSpotlightEntity);
      v124 = static SearchSpotlightEntity.== infix(_:_:)();
      OUTLINED_FUNCTION_59_3(v123);
      OUTLINED_FUNCTION_54_18(v114);
      OUTLINED_FUNCTION_54_18(v116);
      OUTLINED_FUNCTION_59_3(v115);
      OUTLINED_FUNCTION_54_18(v104);
      if ((v124 & 1) == 0)
        goto LABEL_47;
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_111_6(v114);
    OUTLINED_FUNCTION_111_6(v116);
    _s10OmniSearch0B6ResultVWOhTm_1(v115, type metadata accessor for SearchSpotlightEntity);
    goto LABEL_44;
  }
  OUTLINED_FUNCTION_76_1(v114);
  OUTLINED_FUNCTION_76_1(v116);
  v120 = OUTLINED_FUNCTION_22_2(v118, 1, v119);
  if (!v73)
  {
LABEL_44:
    v96 = &demangling cache variable for type metadata for (SearchSpotlightEntity?, SearchSpotlightEntity?);
    goto LABEL_45;
  }
  OUTLINED_FUNCTION_145_2(v120, &demangling cache variable for type metadata for SearchSpotlightEntity?);
LABEL_50:
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_15_5();
  swift_retain();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_90_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_155_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_133_6();
  OUTLINED_FUNCTION_225_2();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_10_8();
  v125 = v191;
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_7_12();
  v126 = v160;
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_8();
  v127 = v164;
  swift_release();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_82_15();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_118_5();
  v128 = v162;
  v130 = v162 + v129;
  OUTLINED_FUNCTION_60_3(v127);
  v131 = v128;
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v126, v130, &demangling cache variable for type metadata for SearchAnswerEntity?);
  v132 = OUTLINED_FUNCTION_136_4();
  v133 = v161;
  OUTLINED_FUNCTION_22_2(v132, v134, v161);
  if (v73)
  {
    OUTLINED_FUNCTION_76_1(v126);
    v131 = v162;
    outlined destroy of MobileSMSDocument?(v127, &demangling cache variable for type metadata for SearchAnswerEntity?);
    v135 = OUTLINED_FUNCTION_22_2(v130, 1, v133);
    if (v73)
    {
      OUTLINED_FUNCTION_75_3(v135, &demangling cache variable for type metadata for SearchAnswerEntity?);
LABEL_60:
      OUTLINED_FUNCTION_162_4();
      OUTLINED_FUNCTION_1_11();
      OUTLINED_FUNCTION_10_8();
      OUTLINED_FUNCTION_5_9();
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_7_12();
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_12_9();
      v139 = v183;
      OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_15_5();
      OUTLINED_FUNCTION_90_12();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_13_8();
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_9_8();
      OUTLINED_FUNCTION_17_9();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_11_5();
      OUTLINED_FUNCTION_120_4();
      OUTLINED_FUNCTION_87_6();
      OUTLINED_FUNCTION_1_11();
      OUTLINED_FUNCTION_133_6();
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_10_8();
      OUTLINED_FUNCTION_7_12();
      OUTLINED_FUNCTION_12_9();
      OUTLINED_FUNCTION_75();
      v140 = v191;
      OUTLINED_FUNCTION_5_9();
      OUTLINED_FUNCTION_1_11();
      OUTLINED_FUNCTION_15_5();
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_115_3();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_13_8();
      OUTLINED_FUNCTION_9_8();
      v141 = v158;
      swift_release();
      OUTLINED_FUNCTION_17_9();
      OUTLINED_FUNCTION_82_15();
      OUTLINED_FUNCTION_95_12();
      OUTLINED_FUNCTION_118_5();
      v142 = v155;
      v144 = v155 + v143;
      OUTLINED_FUNCTION_186_3(v141, v155);
      OUTLINED_FUNCTION_186_3(v139, v144);
      v145 = v156;
      OUTLINED_FUNCTION_22_2(v142, 1, v156);
      if (v73)
      {
        outlined destroy of MobileSMSDocument?(v139, &demangling cache variable for type metadata for IntentFile?);
        outlined destroy of MobileSMSDocument?(v141, &demangling cache variable for type metadata for IntentFile?);
        v146 = OUTLINED_FUNCTION_22_2(v144, 1, v145);
        if (v73)
        {
          OUTLINED_FUNCTION_79_3(v146, &demangling cache variable for type metadata for IntentFile?);
          v75 = 1;
          return v75 & 1;
        }
      }
      else
      {
        OUTLINED_FUNCTION_119_5(v142, &demangling cache variable for type metadata for IntentFile?, (uint64_t)&v176);
        OUTLINED_FUNCTION_22_2(v144, 1, v145);
        v148 = v153;
        if (!v147)
        {
          v149 = v152;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 32))(v152, v144, v145);
          lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type IntentFile and conformance IntentFile, (void (*)(uint64_t))MEMORY[0x24BDB4F20]);
          v75 = dispatch thunk of static Equatable.== infix(_:_:)();
          v150 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
          v150(v149, v145);
          OUTLINED_FUNCTION_111_6(v139);
          OUTLINED_FUNCTION_111_6(v158);
          v150(v140, v145);
          OUTLINED_FUNCTION_111_6(v142);
          return v75 & 1;
        }
        OUTLINED_FUNCTION_111_6(v139);
        OUTLINED_FUNCTION_111_6(v158);
        OUTLINED_FUNCTION_187_5(*(uint64_t (**)(uint64_t, uint64_t))(v148 + 8));
      }
      v96 = &demangling cache variable for type metadata for (IntentFile?, IntentFile?);
      v97 = v142;
      goto LABEL_46;
    }
  }
  else
  {
    OUTLINED_FUNCTION_202_2(v131, &demangling cache variable for type metadata for SearchAnswerEntity?, (uint64_t)v182);
    OUTLINED_FUNCTION_22_2(v130, 1, v133);
    if (!v136)
    {
      OUTLINED_FUNCTION_155_4(v130, (uint64_t)&v178);
      OUTLINED_FUNCTION_95_0();
      static SearchAnswerEntity.== infix(_:_:)();
      v138 = v137;
      OUTLINED_FUNCTION_59_3(v126);
      OUTLINED_FUNCTION_54_18(v126);
      OUTLINED_FUNCTION_54_18(v127);
      OUTLINED_FUNCTION_59_3(v125);
      OUTLINED_FUNCTION_54_18(v131);
      if ((v138 & 1) == 0)
        goto LABEL_47;
      goto LABEL_60;
    }
    OUTLINED_FUNCTION_111_6(v126);
    OUTLINED_FUNCTION_111_6(v127);
    _s10OmniSearch0B6ResultVWOhTm_1(v125, type metadata accessor for SearchAnswerEntity);
  }
  v96 = &demangling cache variable for type metadata for (SearchAnswerEntity?, SearchAnswerEntity?);
  v97 = v131;
LABEL_46:
  outlined destroy of MobileSMSDocument?(v97, v96);
LABEL_47:
  v75 = 0;
  return v75 & 1;
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchEntity()
{
  SearchEntity.validateParameters()();
}

void protocol witness for Identifiable.id.getter in conformance SearchEntity(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SearchEntity.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchEntity()
{
  lazy protocol witness table accessor for type SearchEntity and conformance SearchEntity();
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchEntity()
{
  lazy protocol witness table accessor for type SearchEntity and conformance SearchEntity();
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

void SearchEntity.init(result:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v3 = (int *)OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_15();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (_OWORD *)((char *)&v45 - v8);
  type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_3_1();
  v47 = v2;
  outlined init with copy of SearchResult(v2, v0, v11);
  *v9 = 0u;
  v9[1] = 0u;
  v12 = (uint64_t)v9 + v3[6];
  v13 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_49(v12, v14, v15, v13);
  v16 = (uint64_t)v9 + v3[7];
  v17 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_49(v16, v18, v19, v17);
  v20 = (uint64_t)v9 + v3[8];
  v21 = OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_49(v20, v22, v23, v21);
  v24 = (uint64_t)v9 + v3[9];
  v25 = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_49(v24, v26, v27, v25);
  v28 = (uint64_t)v9 + v3[10];
  v29 = OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_49(v28, v30, v31, v29);
  v32 = (uint64_t)v9 + v3[11];
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_164_3(v32);
  OUTLINED_FUNCTION_164_3((uint64_t)v9 + v3[12]);
  closure #1 in SearchEntity.init(result:card:)((uint64_t)v9, v0, 0, v33, v34, v35, v36, v37, v45, v46, v47, v48, v49, v50, v0, v52, v53, v54, v55,
    v56);
  outlined init with copy of SearchResult((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchEntity.Builder);
  SearchEntity.init(builder:)((uint64_t)v7, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55,
    v56);
}

void sub_2433117A0()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, v1);
  v5 = *(_QWORD *)(v3 - 168);
  v4 = *(_QWORD *)(v3 - 160);
  v6 = *(_QWORD *)(v3 - 152);
  v7 = *(_QWORD *)(v3 - 144);
  v8 = *(_QWORD *)(v3 - 136);
  v9 = *(_QWORD *)(v3 - 128);
  v10 = *(_QWORD *)(v3 - 120);
  v11 = *(_QWORD *)(v3 - 112);
  v12 = *(_QWORD *)(v3 - 104);
  *(_QWORD *)(v3 - 192) = *(_QWORD *)(v3 - 96);
  *(_QWORD *)(v3 - 184) = v12;
  *(_QWORD *)(v3 - 200) = *(_QWORD *)(v3 - 88);
  if (v5)
  {
    *(_QWORD *)(v3 - 168) = v5;
    *(_QWORD *)(v3 - 160) = v4;
    *(_QWORD *)(v3 - 152) = v6;
    *(_QWORD *)(v3 - 144) = v7;
    *(_QWORD *)(v3 - 136) = v8;
    *(_QWORD *)(v3 - 128) = v9;
    *(_QWORD *)(v3 - 120) = v10;
    *(_QWORD *)(v3 - 112) = v11;
    v13 = *(_QWORD *)(v3 - 192);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 96) = v13;
    *(_QWORD *)(v3 - 88) = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v3 - 224) = v11;
    *(_QWORD *)(v3 - 216) = v6;
    swift_bridgeObjectRetain();
    v11 = *(_QWORD *)(v3 - 224);
    v6 = *(_QWORD *)(v3 - 216);
    SearchEntity.associatedQuery.setter();
  }
  OUTLINED_FUNCTION_1_9(*(_QWORD *)(v3 - 176));
  OUTLINED_FUNCTION_1_9(*(_QWORD *)(v3 - 208));
  *v0 = v5;
  v0[1] = v4;
  v0[2] = v6;
  v0[3] = v7;
  v0[4] = v8;
  v0[5] = v9;
  v0[6] = v10;
  v0[7] = v11;
  v14 = *(_QWORD *)(v3 - 192);
  v0[8] = *(_QWORD *)(v3 - 184);
  v0[9] = v14;
  v0[10] = *(_QWORD *)(v3 - 200);
  OUTLINED_FUNCTION_43_0();
}

void closure #1 in SearchEntity.init(result:card:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  void *v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD v125[48];
  char *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  OUTLINED_FUNCTION_18_2();
  a19 = v22;
  a20 = v23;
  v134 = v24;
  v26 = v25;
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v30);
  v31 = type metadata accessor for URL();
  OUTLINED_FUNCTION_25_0(v31, (uint64_t)&v137);
  v125[26] = v32;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v34);
  v125[25] = type metadata accessor for IntentFileItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v36);
  type metadata accessor for AppEntityItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v37);
  v125[39] = (char *)v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125[18] = OUTLINED_FUNCTION_61_14();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_0_3();
  v43 = OUTLINED_FUNCTION_13_2(v42);
  v125[36] = type metadata accessor for Answer(v43);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v46);
  v125[33] = (char *)v125 - v47;
  v48 = OUTLINED_FUNCTION_55_12();
  OUTLINED_FUNCTION_25_0(v48, (uint64_t)&a11);
  v125[9] = v49;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v51);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_127_1(v55);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_127_1((uint64_t)v125 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v59);
  v60 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
  OUTLINED_FUNCTION_25_0(v60, (uint64_t)&v133);
  v125[15] = v61;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_13_2((uint64_t)v125 - v64);
  v125[12] = type metadata accessor for GlobalItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v66);
  v68 = OUTLINED_FUNCTION_13_2((uint64_t)v125 - v67);
  type metadata accessor for RestaurantReservation(v68);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_3_1();
  type metadata accessor for HotelReservation(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_127_1((uint64_t)v125 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_34_1();
  v125[43] = v74;
  v75 = OUTLINED_FUNCTION_23_2();
  type metadata accessor for FlightReservation(v75);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_127_1(v77);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_0_3();
  v125[42] = v79;
  v125[47] = OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v82);
  OUTLINED_FUNCTION_34_1();
  v125[45] = v83;
  v84 = OUTLINED_FUNCTION_23_2();
  v129 = type metadata accessor for SearchResultItem(v84);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_0_3();
  v130 = v86;
  v87 = OUTLINED_FUNCTION_148_1();
  v132 = *(_QWORD *)(v87 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v88);
  v126 = (char *)v125 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = OUTLINED_FUNCTION_23_2();
  v131 = type metadata accessor for SearchResult(v90);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v91);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v93);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v94);
  OUTLINED_FUNCTION_31_0();
  v125[44] = v95;
  MEMORY[0x24BDAC7A8](v96);
  v98 = (char *)v125 - v97;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v99);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_189_5();
  OUTLINED_FUNCTION_142_5();
  v100 = OUTLINED_FUNCTION_171_2(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 32));
  v102 = v101;
  OUTLINED_FUNCTION_156_5();
  swift_bridgeObjectRelease();
  *v28 = v100;
  v28[1] = v102;
  OUTLINED_FUNCTION_189_5();
  OUTLINED_FUNCTION_142_5();
  v103 = OUTLINED_FUNCTION_171_2(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48));
  v105 = v104;
  OUTLINED_FUNCTION_156_5();
  swift_bridgeObjectRelease();
  v28[2] = v103;
  v28[3] = v105;
  SearchResultItem.type.getter();
  v133 = v87;
  __swift_storeEnumTagSinglePayload(v20, 0, 1, v87);
  v106 = OUTLINED_FUNCTION_28_22();
  v127 = (uint64_t)v28 + *(int *)(v106 + 24);
  outlined assign with take of SearchResult?(v20, v127, &demangling cache variable for type metadata for SearchResultType?);
  if (one-time initialization token for search != -1)
    swift_once();
  v107 = OUTLINED_FUNCTION_13();
  v108 = __swift_project_value_buffer(v107, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(v26, (uint64_t)v98, type metadata accessor for SearchResult);
  v109 = (uint64_t)v134;
  v110 = v134;
  v125[46] = v108;
  v111 = Logger.logObject.getter();
  v112 = static os_log_type_t.info.getter();
  v113 = os_log_type_enabled(v111, v112);
  v128 = v110;
  if (v113)
  {
    v125[2] = v26;
    v125[3] = v106;
    v114 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v136 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v114 = 134218242;
    v125[4] = v28;
    if (v109)
    {
      v115 = v128;
      outlined bridged method (pb) of @objc SFCard.cardSections.getter(v128);
      if (v116)
      {
        if (v116 >> 62)
          v109 = _CocoaArrayWrapper.endIndex.getter();
        else
          v109 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);

        OUTLINED_FUNCTION_36_0();
      }
      else
      {

        v109 = 0;
      }
    }
    else
    {
      v115 = v128;
    }
    v135 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v114 + 12) = 2080;
    v118 = v126;
    SearchResultItem.type.getter();
    v119 = SearchResultType.rawValue.getter();
    v121 = v120;
    (*(void (**)(char *, uint64_t))(v132 + 8))(v118, v133);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v119, v121, &v136);
    v135 = v122;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v123 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_124_0(v123, type metadata accessor for SearchResult);
    _os_log_impl(&dword_24315F000, v111, v112, "[VISUAL] Create SearchEntity with %ld cardSection(s) for searchResult: %s", (uint8_t *)v114, 0x16u);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_124_0(v117, type metadata accessor for SearchResult);
  outlined init with copy of SearchResult(v26, v130, type metadata accessor for SearchResultItem);
  v124 = (char *)&loc_2433120BC + dword_243312E24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t closure #1 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;

  v8 = *a2;
  v7 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v7;
  v9 = FlightReservation.answer.getter();
  v11 = v10;
  swift_bridgeObjectRelease();
  a1[2] = v9;
  a1[3] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchAnswerEntity.SourceDocument>);
  v12 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24334DB60;
  v16 = (_QWORD *)(v15 + v14);
  v17 = (int *)type metadata accessor for FlightReservation(0);
  v18 = v17[9];
  v19 = (uint64_t *)((char *)a2 + v17[8]);
  v21 = *v19;
  v20 = v19[1];
  v22 = *(uint64_t *)((char *)a2 + v18);
  v23 = *(uint64_t *)((char *)a2 + v18 + 8);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)a2 + v17[5], (uint64_t)v16 + *(int *)(v12 + 24), &demangling cache variable for type metadata for URL?);
  *v16 = v21;
  v16[1] = v20;
  v16[2] = v22;
  v16[3] = v23;
  a1[6] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = FlightReservation.metadata.getter();
  swift_bridgeObjectRelease();
  a1[7] = v24;
  v25 = (int *)type metadata accessor for SearchAnswerEntity.Builder(0);
  v26 = (uint64_t)a1 + v25[10];
  outlined destroy of MobileSMSDocument?(v26, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchResult(a3, v26, type metadata accessor for SearchResult);
  v27 = type metadata accessor for SearchResult(0);
  __swift_storeEnumTagSinglePayload(v26, 0, 1, v27);
  FlightReservation.llmConsumableDescription.getter();
  v29 = v28;
  v31 = v30;
  v32 = (_QWORD *)((char *)a1 + v25[13]);
  swift_bridgeObjectRelease();
  *v32 = v29;
  v32[1] = v31;
  v33 = v25[11];
  v34 = *(void **)((char *)a1 + v33);
  *(_QWORD *)((char *)a1 + v33) = a4;
  v35 = a4;

  v36 = *(void **)(a3 + *(int *)(v27 + 20));
  if (v36)
  {
    v37 = v36;
    CSSearchableItem.title.getter();
    v39 = v38;
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  result = swift_bridgeObjectRelease();
  a1[4] = v39;
  a1[5] = v41;
  return result;
}

uint64_t closure #2 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v68;

  v8 = *a2;
  v7 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v7;
  v66 = (int *)type metadata accessor for SearchAnswerEntity.Builder(0);
  v9 = (uint64_t)a1 + v66[10];
  outlined destroy of MobileSMSDocument?(v9, &demangling cache variable for type metadata for SearchResult?);
  v68 = a3;
  outlined init with copy of SearchResult(a3, v9, type metadata accessor for SearchResult);
  v64 = type metadata accessor for SearchResult(0);
  v65 = v9;
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v64);
  v10 = type metadata accessor for HotelReservation(0);
  v11 = (int *)v10;
  v12 = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = specialized Collection.first.getter(v12);
    v15 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = v13;
    a1[3] = v15;
  }
  else
  {
    v16 = (uint64_t *)((char *)a2 + *(int *)(v10 + 60));
    v18 = *v16;
    v17 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = v18;
    a1[3] = v17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24335A0A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x800000024335CEE0;
  v20 = (uint64_t *)((char *)a2 + v11[10]);
  v63 = v20[1];
  *(_QWORD *)(inited + 48) = *v20;
  *(_QWORD *)(inited + 56) = v63;
  strcpy((char *)(inited + 64), "hotelUnderName");
  *(_BYTE *)(inited + 79) = -18;
  v21 = (uint64_t *)((char *)a2 + v11[11]);
  v22 = v21[1];
  *(_QWORD *)(inited + 80) = *v21;
  *(_QWORD *)(inited + 88) = v22;
  *(_QWORD *)(inited + 96) = 0xD000000000000016;
  *(_QWORD *)(inited + 104) = 0x800000024335CF00;
  v23 = (uint64_t *)((char *)a2 + v11[19]);
  v24 = v23[1];
  *(_QWORD *)(inited + 112) = *v23;
  *(_QWORD *)(inited + 120) = v24;
  *(_QWORD *)(inited + 128) = 0xD000000000000017;
  *(_QWORD *)(inited + 136) = 0x800000024335CF20;
  v25 = (uint64_t *)((char *)a2 + v11[20]);
  v26 = v25[1];
  *(_QWORD *)(inited + 144) = *v25;
  *(_QWORD *)(inited + 152) = v26;
  *(_QWORD *)(inited + 160) = 0xD000000000000017;
  *(_QWORD *)(inited + 168) = 0x800000024335CF40;
  v27 = (uint64_t *)((char *)a2 + v11[15]);
  v28 = v27[1];
  *(_QWORD *)(inited + 176) = *v27;
  *(_QWORD *)(inited + 184) = v28;
  *(_QWORD *)(inited + 192) = 0xD000000000000019;
  *(_QWORD *)(inited + 200) = 0x800000024335CF60;
  v29 = (uint64_t *)((char *)a2 + v11[16]);
  v30 = v29[1];
  *(_QWORD *)(inited + 208) = *v29;
  *(_QWORD *)(inited + 216) = v30;
  *(_QWORD *)(inited + 224) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 232) = 0x800000024335CF80;
  v31 = (uint64_t *)((char *)a2 + v11[17]);
  v32 = v31[1];
  *(_QWORD *)(inited + 240) = *v31;
  *(_QWORD *)(inited + 248) = v32;
  *(_QWORD *)(inited + 256) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 264) = 0x800000024335CFA0;
  v33 = (uint64_t *)((char *)a2 + v11[18]);
  v34 = v33[1];
  *(_QWORD *)(inited + 272) = *v33;
  *(_QWORD *)(inited + 280) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v35 = Dictionary.init(dictionaryLiteral:)();
  v36 = specialized Dictionary.compactMapValues<A>(_:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[7] = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchAnswerEntity.SourceDocument>);
  v37 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  v38 = *(unsigned __int8 *)(*(_QWORD *)(v37 - 8) + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24334DB60;
  v41 = (_QWORD *)(v40 + v39);
  v42 = v11[9];
  v43 = (uint64_t *)((char *)a2 + v11[8]);
  v45 = *v43;
  v44 = v43[1];
  v47 = *(uint64_t *)((char *)a2 + v42);
  v46 = *(uint64_t *)((char *)a2 + v42 + 8);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)a2 + v11[5], (uint64_t)v41 + *(int *)(v37 + 24), &demangling cache variable for type metadata for URL?);
  *v41 = v45;
  v41[1] = v44;
  v41[2] = v47;
  v41[3] = v46;
  a1[6] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  HotelReservation.llmConsumableDescription.getter();
  v49 = v48;
  v51 = v50;
  v52 = (_QWORD *)((char *)a1 + v66[13]);
  swift_bridgeObjectRelease();
  *v52 = v49;
  v52[1] = v51;
  outlined destroy of MobileSMSDocument?(v65, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchResult(v68, v65, type metadata accessor for SearchResult);
  __swift_storeEnumTagSinglePayload(v65, 0, 1, v64);
  v53 = v66[11];
  v54 = *(void **)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = a4;
  v55 = a4;

  v56 = *(void **)(v68 + *(int *)(v64 + 20));
  if (v56)
  {
    v57 = v56;
    CSSearchableItem.title.getter();
    v59 = v58;
    v61 = v60;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v59 = 0;
    v61 = 0;
  }
  result = swift_bridgeObjectRelease();
  a1[4] = v59;
  a1[5] = v61;
  return result;
}

uint64_t closure #3 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v66;

  v8 = *a2;
  v7 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v7;
  v64 = (int *)type metadata accessor for SearchAnswerEntity.Builder(0);
  v9 = (uint64_t)a1 + v64[10];
  outlined destroy of MobileSMSDocument?(v9, &demangling cache variable for type metadata for SearchResult?);
  v66 = a3;
  outlined init with copy of SearchResult(a3, v9, type metadata accessor for SearchResult);
  v62 = type metadata accessor for SearchResult(0);
  v63 = v9;
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v62);
  v10 = type metadata accessor for RestaurantReservation(0);
  v11 = (int *)v10;
  v12 = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = specialized Collection.first.getter(v12);
    v15 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = v13;
    a1[3] = v15;
  }
  else
  {
    v16 = (uint64_t *)((char *)a2 + *(int *)(v10 + 60));
    v18 = *v16;
    v17 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = v18;
    a1[3] = v17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433505B0;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  *(_QWORD *)(inited + 40) = 0x800000024335CFC0;
  v20 = (uint64_t *)((char *)a2 + v11[10]);
  v21 = v20[1];
  *(_QWORD *)(inited + 48) = *v20;
  *(_QWORD *)(inited + 56) = v21;
  *(_QWORD *)(inited + 64) = 0xD000000000000013;
  *(_QWORD *)(inited + 72) = 0x800000024335CFE0;
  v22 = (uint64_t *)((char *)a2 + v11[11]);
  v23 = v22[1];
  *(_QWORD *)(inited + 80) = *v22;
  *(_QWORD *)(inited + 88) = v23;
  *(_QWORD *)(inited + 96) = 0xD000000000000019;
  *(_QWORD *)(inited + 104) = 0x800000024335D000;
  v24 = (uint64_t *)((char *)a2 + v11[18]);
  v25 = v24[1];
  *(_QWORD *)(inited + 112) = *v24;
  *(_QWORD *)(inited + 120) = v25;
  *(_QWORD *)(inited + 128) = 0xD000000000000013;
  *(_QWORD *)(inited + 136) = 0x800000024335D020;
  v26 = (uint64_t *)((char *)a2 + v11[13]);
  v27 = v26[1];
  *(_QWORD *)(inited + 144) = *v26;
  *(_QWORD *)(inited + 152) = v27;
  *(_QWORD *)(inited + 160) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 168) = 0x800000024335D040;
  v28 = (uint64_t *)((char *)a2 + v11[15]);
  v29 = v28[1];
  *(_QWORD *)(inited + 176) = *v28;
  *(_QWORD *)(inited + 184) = v29;
  *(_QWORD *)(inited + 192) = 0xD000000000000021;
  *(_QWORD *)(inited + 200) = 0x800000024335D060;
  v30 = (uint64_t *)((char *)a2 + v11[16]);
  v31 = v30[1];
  *(_QWORD *)(inited + 208) = *v30;
  *(_QWORD *)(inited + 216) = v31;
  *(_QWORD *)(inited + 224) = 0xD00000000000001FLL;
  *(_QWORD *)(inited + 232) = 0x800000024335D090;
  v32 = (uint64_t *)((char *)a2 + v11[17]);
  v33 = v32[1];
  *(_QWORD *)(inited + 240) = *v32;
  *(_QWORD *)(inited + 248) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v34 = Dictionary.init(dictionaryLiteral:)();
  v35 = specialized Dictionary.compactMapValues<A>(_:)(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[7] = v35;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchAnswerEntity.SourceDocument>);
  v36 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  v37 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24334DB60;
  v40 = (_QWORD *)(v39 + v38);
  v41 = v11[9];
  v42 = (uint64_t *)((char *)a2 + v11[8]);
  v44 = *v42;
  v43 = v42[1];
  v46 = *(uint64_t *)((char *)a2 + v41);
  v45 = *(uint64_t *)((char *)a2 + v41 + 8);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)a2 + v11[5], (uint64_t)v40 + *(int *)(v36 + 24), &demangling cache variable for type metadata for URL?);
  *v40 = v44;
  v40[1] = v43;
  v40[2] = v46;
  v40[3] = v45;
  a1[6] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  RestaurantReservation.llmConsumableDescription.getter();
  v48 = v47;
  v50 = v49;
  v51 = (_QWORD *)((char *)a1 + v64[13]);
  swift_bridgeObjectRelease();
  *v51 = v48;
  v51[1] = v50;
  outlined destroy of MobileSMSDocument?(v63, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchResult(v66, v63, type metadata accessor for SearchResult);
  __swift_storeEnumTagSinglePayload(v63, 0, 1, v62);
  v52 = v64[11];
  v53 = *(void **)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = a4;
  v54 = a4;

  v55 = *(void **)(v66 + *(int *)(v62 + 20));
  if (v55)
  {
    v56 = v55;
    CSSearchableItem.title.getter();
    v58 = v57;
    v60 = v59;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v58 = 0;
    v60 = 0;
  }
  result = swift_bridgeObjectRelease();
  a1[4] = v58;
  a1[5] = v60;
  return result;
}

uint64_t closure #4 in closure #1 in SearchEntity.init(result:card:)()
{
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.id.setter();
  type metadata accessor for GlobalItem();
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.domain.setter();
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.text.setter();
  return SearchGlobalEntity.Builder.lowConfidenceKnowledge.setter();
}

void closure #5 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1, _QWORD *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchResult(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v76 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  v70 = *(_QWORD *)(v13 - 8);
  v71 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v75 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x24BDAC7A8](v15);
  v66 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v17 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v18;
  a1[1] = v17;
  v67 = (int *)type metadata accessor for Answer(0);
  v68 = a2;
  v19 = (_QWORD *)((char *)a2 + v67[6]);
  v21 = *v19;
  v20 = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v21;
  a1[3] = v20;
  v65 = type metadata accessor for SearchAnswerEntity.Builder(0);
  v22 = (uint64_t)a1 + *(int *)(v65 + 40);
  outlined destroy of MobileSMSDocument?(v22, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchResult(a3, v22, type metadata accessor for SearchResult);
  __swift_storeEnumTagSinglePayload(v22, 0, 1, v10);
  v72 = v10;
  v23 = *(void **)(a3 + *(int *)(v10 + 20));
  if (v23)
  {
    v24 = v23;
    CSSearchableItem.title.getter();
    v26 = v25;
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  swift_bridgeObjectRelease();
  a1[4] = v26;
  a1[5] = v28;
  v29 = *(_QWORD *)((char *)v68 + v67[8]);
  v30 = *(_QWORD *)(v29 + 16);
  v31 = MEMORY[0x24BEE4AF8];
  if (v30)
  {
    v63 = a1;
    v64 = a4;
    v80 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v32 = *(unsigned __int8 *)(v11 + 80);
    v62 = v29;
    v33 = v29 + ((v32 + 32) & ~v32);
    v69 = *(_QWORD *)(v11 + 72);
    do
    {
      v34 = v76;
      outlined init with copy of SearchResult(v33, v76, type metadata accessor for SearchResult);
      v35 = *(void **)(v34 + *(int *)(v72 + 20));
      if (v35 && (v36 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(v35), v37))
      {
        v38 = v37;
        v74 = v36;
      }
      else
      {
        swift_bridgeObjectRelease();
        v74 = 0;
        v38 = 0xE000000000000000;
      }
      v39 = v76;
      SearchResultItem.associatedValue.getter();
      v41 = v78;
      v40 = v79;
      __swift_project_boxed_opaque_existential_1(v77, v78);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 32))(v41, v40);
      v44 = v43;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      SearchResultItem.associatedValue.getter();
      v45 = v78;
      v46 = v79;
      __swift_project_boxed_opaque_existential_1(v77, v78);
      v47 = (uint64_t)v73;
      (*(void (**)(uint64_t, uint64_t))(v46 + 40))(v45, v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      v48 = v75;
      *v75 = v74;
      v48[1] = v38;
      v48[2] = v42;
      v48[3] = v44;
      outlined init with take of URL?(v47, (uint64_t)v48 + *(int *)(v71 + 24), &demangling cache variable for type metadata for URL?);
      _s10OmniSearch0B6ResultVWOhTm_1(v39, type metadata accessor for SearchResult);
      v31 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v31 = v80;
      }
      v49 = *(_QWORD *)(v31 + 16);
      if (v49 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v31 = v80;
      }
      *(_QWORD *)(v31 + 16) = v49 + 1;
      outlined init with take of SearchResult((uint64_t)v75, v31+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v49, type metadata accessor for SearchAnswerEntity.SourceDocument);
      v33 += v69;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    a1 = v63;
    a4 = v64;
  }
  swift_bridgeObjectRelease();
  a1[6] = v31;
  v50 = *(_QWORD *)((char *)v68 + v67[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = v50;
  Answer.llmConsumableDescription.getter();
  v52 = v51;
  v54 = v53;
  v55 = v65;
  v56 = (_QWORD *)((char *)a1 + *(int *)(v65 + 52));
  swift_bridgeObjectRelease();
  *v56 = v52;
  v56[1] = v54;
  v57 = swift_bridgeObjectRetain();
  v58 = v66;
  IntentFile.init(experiences:)(v57, v66);
  outlined assign with take of SearchResult?(v58, (uint64_t)a1 + *(int *)(v55 + 36), &demangling cache variable for type metadata for IntentFile?);
  v59 = *(int *)(v55 + 44);
  v60 = *(void **)((char *)a1 + v59);
  v61 = a4;

  *(_QWORD *)((char *)a1 + v59) = a4;
}

void static SearchEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_18_2();
  v63 = v1;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchAnswerEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v62 = (uint64_t)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchGlobalEntity>);
  v5 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  v61 = v5;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_1();
  v56 = v10;
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_34_1();
  v57 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchSpotlightEntity>);
  v14 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  v54 = v14;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_128_8(v16, v49[0]);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>);
  v65 = *(_QWORD *)(v17 - 8);
  v66 = v17;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_18_1();
  v52 = v19;
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_34_1();
  v64 = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchAnswerEntity>);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_70();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchAnswerEntity>>);
  v25 = *(_QWORD *)(v24 - 8);
  v49[2] = v24;
  v50 = v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v49 - v29;
  OUTLINED_FUNCTION_61_14();
  v31 = lazy protocol witness table accessor for type SearchEntity and conformance SearchEntity();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
  OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_200_1(&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, SearchAnswerEntity> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchAnswerEntity>);
  TransferRepresentation.exportingCondition(_:)();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v22);
  OUTLINED_FUNCTION_80_3((uint64_t)v30, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
  OUTLINED_FUNCTION_68_19();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  v32 = v51;
  v49[1] = v31;
  OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_200_1(&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, SearchSpotlightEntity> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchSpotlightEntity>);
  v34 = v52;
  v33 = v53;
  TransferRepresentation.exportingCondition(_:)();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v32, v33);
  v35 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v64, v34, v66);
  OUTLINED_FUNCTION_55_12();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
  OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_200_1(&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, SearchGlobalEntity> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchGlobalEntity>);
  v36 = v56;
  TransferRepresentation.exportingCondition(_:)();
  v37 = OUTLINED_FUNCTION_1_5();
  v38(v37);
  v40 = v57;
  v39 = v58;
  v41 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v57, v36, v59);
  v42 = v62 + *(int *)(v67 + 48);
  v43 = v62 + *(int *)(v67 + 64);
  v44 = v50;
  OUTLINED_FUNCTION_80_3(v62, (uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v46 = v42;
  v47 = v64;
  v48 = v66;
  OUTLINED_FUNCTION_184_2(v46, v64, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v43, v40, v41);
  TupleTransferRepresentation.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v47, v48);
  OUTLINED_FUNCTION_120_9((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  OUTLINED_FUNCTION_43_0();
}

uint64_t specialized implicit closure #1 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16[6];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v16[0] = (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - v6;
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[4];
  v11 = a1[6];
  v12 = a1[7];
  v19 = a1[8];
  v16[2] = v8;
  swift_retain();
  v16[1] = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  v18 = v10;
  swift_retain();
  swift_retain();
  v16[5] = v11;
  swift_retain();
  v16[3] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  v13 = type metadata accessor for SearchAnswerEntity(0);
  result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v13);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v15 = v16[0];
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v7, v16[0], &demangling cache variable for type metadata for SearchAnswerEntity?);
    outlined init with take of SearchResult(v15, v17, type metadata accessor for SearchAnswerEntity);
    outlined destroy of MobileSMSDocument?((uint64_t)v7, &demangling cache variable for type metadata for SearchAnswerEntity?);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

BOOL closure #1 in static SearchEntity.transferRepresentation.getter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = a1[1];
  v12 = *a1;
  v10 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = (uint64_t)v10;
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v6 = type metadata accessor for SearchAnswerEntity(0);
  v7 = __swift_getEnumTagSinglePayload(v5, 1, v6) != 1;
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for SearchAnswerEntity?);
  return v7;
}

uint64_t specialized implicit closure #2 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[9];
  uint64_t v20;
  char *v21;

  v20 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v19[0] = (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)v19 - v6;
  v7 = a1[1];
  v9 = a1[4];
  v8 = a1[5];
  v11 = a1[6];
  v10 = a1[7];
  v12 = a1[8];
  v19[3] = *a1;
  swift_retain();
  v19[1] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v19[8] = v8;
  swift_retain();
  v19[7] = v11;
  swift_retain();
  v19[5] = v10;
  swift_retain();
  v19[2] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = (uint64_t)v21;
  v19[4] = v9;
  EntityProperty.wrappedValue.getter();
  v14 = v13;
  v15 = type metadata accessor for SearchSpotlightEntity(0);
  result = __swift_getEnumTagSinglePayload(v13, 1, v15);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = v13;
    v18 = v19[0];
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v17, v19[0], &demangling cache variable for type metadata for SearchSpotlightEntity?);
    outlined init with take of SearchResult(v18, v20, type metadata accessor for SearchSpotlightEntity);
    outlined destroy of MobileSMSDocument?(v14, &demangling cache variable for type metadata for SearchSpotlightEntity?);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

BOOL closure #2 in static SearchEntity.transferRepresentation.getter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = a1[1];
  v12 = *a1;
  v10 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = (uint64_t)v10;
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v6 = type metadata accessor for SearchSpotlightEntity(0);
  v7 = __swift_getEnumTagSinglePayload(v5, 1, v6) != 1;
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for SearchSpotlightEntity?);
  return v7;
}

uint64_t specialized implicit closure #3 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v20 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - v6;
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v14 = a1[6];
  v13 = a1[7];
  v15 = a1[8];
  v30 = a1[9];
  v23 = v8;
  swift_retain();
  v21 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = v11;
  swift_retain();
  v28 = v12;
  swift_retain();
  v26 = v14;
  swift_retain();
  v25 = v13;
  swift_retain();
  v22 = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  v24 = v10;
  EntityProperty.wrappedValue.getter();
  v16 = type metadata accessor for SearchGlobalEntity();
  result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v18 = v20;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v7, v20, &demangling cache variable for type metadata for SearchGlobalEntity?);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v27, v18, v16);
    outlined destroy of MobileSMSDocument?((uint64_t)v7, &demangling cache variable for type metadata for SearchGlobalEntity?);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

BOOL closure #3 in static SearchEntity.transferRepresentation.getter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = a1[1];
  v12 = *a1;
  v10 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = (uint64_t)v10;
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v6 = type metadata accessor for SearchGlobalEntity();
  v7 = __swift_getEnumTagSinglePayload(v5, 1, v6) != 1;
  outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for SearchGlobalEntity?);
  return v7;
}

void SearchEntity.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD v58[5];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[6];

  OUTLINED_FUNCTION_18_2();
  a19 = v21;
  a20 = v22;
  v23 = OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_25_0(v23, (uint64_t)&a16);
  v55 = v24;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_127_1((uint64_t)v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = v20[1];
  v28 = v20[2];
  v29 = v20[3];
  v31 = v20[4];
  v30 = v20[5];
  v32 = v20[6];
  v33 = v20[7];
  v34 = v20[8];
  v35 = v20[9];
  v36 = v20[10];
  v54 = *v20;
  *(_QWORD *)&v59 = v54;
  *((_QWORD *)&v59 + 1) = v27;
  v56 = v28;
  v60 = v28;
  v61 = v29;
  v62 = v31;
  v63 = v30;
  v64 = v32;
  v65 = v33;
  v66 = v34;
  v67 = v35;
  v68 = v36;
  swift_retain();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_7_12();
  EntityProperty.wrappedValue.getter();
  v48[1] = v36;
  OUTLINED_FUNCTION_9_8();
  v48[2] = v35;
  OUTLINED_FUNCTION_4_12();
  v48[3] = v34;
  OUTLINED_FUNCTION_39_0();
  v49 = v33;
  OUTLINED_FUNCTION_69();
  v50 = v32;
  OUTLINED_FUNCTION_13_8();
  v51 = v30;
  OUTLINED_FUNCTION_75_0();
  v52 = v31;
  OUTLINED_FUNCTION_17_9();
  v53 = v29;
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_115_6();
  OUTLINED_FUNCTION_11_5();
  v37 = v54;
  swift_release();
  v38 = v57;
  SearchEntity.entityForType(_:)(v57, v69);
  OUTLINED_FUNCTION_194_3((uint64_t)v38, *(uint64_t (**)(uint64_t, _QWORD))(v55 + 8));
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v69, (uint64_t)&v59, &demangling cache variable for type metadata for Encodable?);
  if (v61)
  {
    v39 = v49;
    v40 = v50;
    v41 = v51;
    v42 = v52;
    v43 = v53;
    v44 = v56;
    outlined init with take of SageSearchClient(&v59, (uint64_t)v58);
    SearchEntity.oms_jsonString(from:)(v58);
    if (!v45)
    {
      *(_QWORD *)&v59 = v37;
      *((_QWORD *)&v59 + 1) = v27;
      v60 = v44;
      v61 = v43;
      v62 = v42;
      v63 = v41;
      v64 = v40;
      v65 = v39;
      OUTLINED_FUNCTION_58_13();
    }
    OUTLINED_FUNCTION_205_2();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  else
  {
    OUTLINED_FUNCTION_54_18((uint64_t)&v59);
    *(_QWORD *)&v59 = v37;
    *((_QWORD *)&v59 + 1) = v27;
    OUTLINED_FUNCTION_201_2();
    v60 = v47;
    v61 = v46;
    v62 = v52;
    v63 = v51;
    v64 = v50;
    v65 = v49;
    OUTLINED_FUNCTION_58_13();
    OUTLINED_FUNCTION_205_2();
  }
  outlined destroy of MobileSMSDocument?((uint64_t)v69, &demangling cache variable for type metadata for Encodable?);
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_43_0();
}

void SearchEntity.entityForType(_:)(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int EnumTagSinglePayload;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;

  v60 = a2;
  v61 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SearchResultType();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v2;
  v17 = v2[1];
  v18 = v2[2];
  v19 = v2[3];
  v20 = v2[5];
  v58 = v2[6];
  v59 = v20;
  v21 = v2[7];
  v56 = v2[8];
  v57 = v21;
  v22 = v2[9];
  v23 = (char *)v2[10];
  v55 = v22;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v61, v12);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  v25 = *MEMORY[0x24BE6E218];
  v53 = v17;
  v54 = v16;
  if (v24 == v25)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    v49[1] = v19;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v26 = (uint64_t)v52;
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v27 = type metadata accessor for SearchAppEntity(0);
    if (__swift_getEnumTagSinglePayload(v26, 1, v27) == 1)
    {
      v28 = &demangling cache variable for type metadata for SearchAppEntity?;
      v29 = v26;
LABEL_12:
      outlined destroy of MobileSMSDocument?(v29, v28);
      v39 = v60;
      *(_OWORD *)v60 = 0u;
      *((_OWORD *)v39 + 1) = 0u;
      v39[4] = 0;
      return;
    }
    v32 = v60;
    v60[3] = v27;
    v33 = (void (*)(uint64_t))type metadata accessor for SearchAppEntity;
    lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
    v32[4] = v34;
    __swift_allocate_boxed_opaque_existential_1Tm(v32);
    v36 = v35;
    v37 = v26;
    goto LABEL_21;
  }
  v61 = v11;
  if (v24 == *MEMORY[0x24BE6E1F0])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v30 = (uint64_t)v51;
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v31 = type metadata accessor for SearchGlobalEntity();
    if (__swift_getEnumTagSinglePayload(v30, 1, v31) != 1)
    {
      v40 = v60;
      v60[3] = v31;
      lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
      v40[4] = v41;
      __swift_allocate_boxed_opaque_existential_1Tm(v40);
      (*(void (**)(void))(*(_QWORD *)(v31 - 8) + 32))();
      return;
    }
    v28 = &demangling cache variable for type metadata for SearchGlobalEntity?;
LABEL_11:
    v29 = v30;
    goto LABEL_12;
  }
  v52 = v23;
  if (v24 == *MEMORY[0x24BE6E220])
  {
    swift_retain();
    swift_retain();
    v49[0] = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v30 = (uint64_t)v50;
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v38 = type metadata accessor for SearchSpotlightEntity(0);
    if (__swift_getEnumTagSinglePayload(v30, 1, v38) == 1)
    {
      v28 = &demangling cache variable for type metadata for SearchSpotlightEntity?;
      goto LABEL_11;
    }
    v44 = v60;
    v60[3] = v38;
    v45 = &lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity;
    v33 = (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity;
  }
  else
  {
    if (v24 != *MEMORY[0x24BE6E1E8])
    {
      v46 = v60;
      v60[4] = 0;
      *(_OWORD *)v46 = 0u;
      *((_OWORD *)v46 + 1) = 0u;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return;
    }
    swift_retain();
    swift_retain();
    v49[0] = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v30 = (uint64_t)v61;
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v42 = type metadata accessor for SearchAnswerEntity(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, 1, v42);
    v44 = v60;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of MobileSMSDocument?(v30, &demangling cache variable for type metadata for SearchAnswerEntity?);
      *(_OWORD *)v44 = 0u;
      *((_OWORD *)v44 + 1) = 0u;
      v44[4] = 0;
      return;
    }
    v60[3] = v42;
    v45 = &lazy protocol witness table cache variable for type SearchAnswerEntity and conformance SearchAnswerEntity;
    v33 = (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity;
  }
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(v45, v33);
  v44[4] = v47;
  __swift_allocate_boxed_opaque_existential_1Tm(v44);
  v36 = v48;
  v37 = v30;
LABEL_21:
  outlined init with take of SearchResult(v37, v36, (uint64_t (*)(_QWORD))v33);
}

uint64_t SearchEntity.oms_jsonString(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for String.Encoding();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for JSONEncoder.OutputFormatting();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  v6 = v5;
  static String.Encoding.utf8.getter();
  v7 = String.init(data:encoding:)();
  outlined consume of Data._Representation(v4, v6);
  swift_release();
  return v7;
}

uint64_t SearchEntity.defaultDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;

  v1 = type metadata accessor for SearchResultType();
  v2 = *(_QWORD *)(v1 - 8);
  v18 = v1;
  v19 = v2;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[6];
  v21 = v0[7];
  v22 = v5;
  v10 = v0[9];
  v23 = v0[8];
  v24 = v10;
  v17[1] = v0[10];
  v17[2] = v7;
  v26 = 0;
  v27 = 0xE000000000000000;
  v11._countAndFlagsBits = 91;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17[4] = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v20 = v6;
  swift_release();
  swift_release();
  v12 = v18;
  _print_unlocked<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v12);
  v13._countAndFlagsBits = 539828317;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17[3] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 93;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return v26;
}

void AppEntity.propertyDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  _BYTE v17[32];
  __int128 v18;
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;

  OUTLINED_FUNCTION_18_2();
  v2 = v1;
  v3 = type metadata accessor for Mirror();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_70();
  *((_QWORD *)&v21 + 1) = v2;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v20);
  OUTLINED_FUNCTION_80_3(v5, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  OUTLINED_FUNCTION_7_12();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  OUTLINED_FUNCTION_9_8();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  if (*((_QWORD *)&v22 + 1))
  {
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      v18 = v20;
      v19[0] = v21;
      v19[1] = v22;
      v7 = v20;
      outlined init with copy of Any((uint64_t)v19, (uint64_t)v17);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      outlined destroy of MobileSMSDocument?((uint64_t)&v18, &demangling cache variable for type metadata for (label: String?, value: Any));
      if (*((_QWORD *)&v7 + 1))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_265_0();
          v6 = v9;
        }
        v8 = *(_QWORD *)(v6 + 16);
        if (v8 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          OUTLINED_FUNCTION_265_0();
          v6 = v10;
        }
        *(_QWORD *)(v6 + 16) = v8 + 1;
        *(_OWORD *)(v6 + 16 * v8 + 32) = v7;
      }
      dispatch thunk of _AnyIteratorBoxBase.next()();
    }
    while (*((_QWORD *)&v22 + 1));
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_50();
  *(_QWORD *)&v20 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
  v11 = BidirectionalCollection<>.joined(separator:)();
  v13 = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v20 = swift_getDynamicType();
  swift_getMetatypeMetadata();
  *(_QWORD *)&v20 = String.init<A>(describing:)();
  *((_QWORD *)&v20 + 1) = v14;
  v15._countAndFlagsBits = 2314;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = v11;
  v16._object = v13;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_0();
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type SearchEntity.Query and conformance SearchEntity.Query()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntity.Query, &type metadata for SearchEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntity.Query, &type metadata for SearchEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntity.Query, &type metadata for SearchEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntity.Query, &type metadata for SearchEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchEntity()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SearchEntity>);
}

uint64_t associated type witness table accessor for Transferable.Representation : TransferRepresentation in SearchEntity()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_243316628(__n128 *a1@<X0>, _QWORD *a2@<X8>)
{
  key path getter for SearchEntity.source : SearchEntity(a1, a2);
}

uint64_t sub_243316644(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.source : SearchEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchEntity.source.setter);
}

void sub_243316660(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_243316680(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_24331669C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for SearchAppEntity?, SearchEntity.appEntity.setter);
}

void sub_2433166C0(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_2433166DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for SearchGlobalEntity?, SearchEntity.globalResult.setter);
}

void sub_243316700(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_24331671C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for SearchSpotlightEntity?, SearchEntity.spotlightResult.setter);
}

void sub_243316740(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_24331675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for SearchAnswerEntity?, SearchEntity.answer.setter);
}

void sub_243316780(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_24331679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for IntentFile?, SearchEntity.intentFile.setter);
}

void sub_2433167C0(__n128 *a1)
{
  key path getter for SearchEntity.type : SearchEntity(a1);
}

void sub_2433167DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for IntentFile?, SearchEntity.experienceFile.setter);
}

void sub_243316810(__n128 *a1@<X0>, _QWORD *a2@<X8>)
{
  key path getter for SearchEntity.source : SearchEntity(a1, a2);
}

uint64_t sub_24331682C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.source : SearchEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchEntity.id.setter);
}

uint64_t dispatch thunk of ValidatableEntity.validateParameters()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for SearchEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for SearchEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for SearchEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEntity()
{
  return &type metadata for SearchEntity;
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int *v97;
  _BYTE *v98;
  char *v99;
  _BYTE *v100;
  int *__dst;
  char *__dsta;
  int *__dstb;
  _QWORD *v104;
  _QWORD *v105;
  int *v106;
  _QWORD *v107;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for SearchResultType();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v15 = v6[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)v3 + v15;
    v18 = type metadata accessor for SearchGlobalEntity();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v20 = v6[8];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)v3 + v20);
    v23 = type metadata accessor for SearchSpotlightEntity(0);
    v106 = v6;
    v107 = v4;
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      __dst = (int *)v23;
      v25 = v22[1];
      *v21 = *v22;
      v21[1] = v25;
      v26 = v22 + 2;
      v27 = v22[3];
      swift_bridgeObjectRetain();
      if (v27 >> 60 == 15)
      {
        *((_OWORD *)v21 + 1) = *(_OWORD *)v26;
      }
      else
      {
        v28 = *v26;
        outlined copy of Data._Representation(*v26, v27);
        v21[2] = v28;
        v21[3] = v27;
      }
      v29 = v22[5];
      v21[4] = v22[4];
      v21[5] = v29;
      v30 = v22[7];
      v21[6] = v22[6];
      v21[7] = v30;
      v31 = v22[9];
      v21[8] = v22[8];
      v21[9] = v31;
      v32 = __dst[11];
      v99 = (char *)v21;
      v33 = (char *)v21 + v32;
      v34 = (char *)v22 + v32;
      v35 = type metadata accessor for SearchResult(0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
      {
        type metadata accessor for SearchResultItem(0);
        v37 = (char *)&loc_243316F24 + 4 * word_24335A0B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      v6 = v106;
      v4 = v107;
      v38 = __dst[12];
      v39 = &v99[v38];
      v40 = (uint64_t *)((char *)v22 + v38);
      v41 = v40[1];
      *(_QWORD *)v39 = *v40;
      *((_QWORD *)v39 + 1) = v41;
      *(_QWORD *)&v99[__dst[13]] = *(uint64_t *)((char *)v22 + __dst[13]);
      swift_bridgeObjectRetain();
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, (uint64_t)__dst);
    }
    v42 = v6[9];
    v43 = (_QWORD *)((char *)v4 + v42);
    v44 = (_QWORD *)((char *)v3 + v42);
    v45 = type metadata accessor for SearchAnswerEntity(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v104 = v3;
      v47 = (int *)v45;
      v48 = v44[1];
      *v43 = *v44;
      v43[1] = v48;
      v49 = v44[3];
      v43[2] = v44[2];
      v43[3] = v49;
      v50 = v44;
      v51 = v44[4];
      v52 = v44[5];
      v43[4] = v51;
      v43[5] = v52;
      v53 = v50[7];
      v43[6] = v50[6];
      v43[7] = v53;
      v97 = v47;
      v98 = v43;
      v54 = v47[12];
      v100 = v50;
      __dsta = (char *)v43 + v54;
      v55 = (char *)v50 + v54;
      v56 = type metadata accessor for SearchResult(0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
      {
        type metadata accessor for SearchResultItem(0);
        v58 = (char *)&loc_243318F98 + 4 * word_24335A0D0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(__dsta, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      v6 = v106;
      v4 = v107;
      v59 = v97[13];
      v60 = &v98[v59];
      v61 = &v100[v59];
      v62 = *((_QWORD *)v61 + 1);
      if (v62 >> 60 == 15)
      {
        *(_OWORD *)v60 = *(_OWORD *)v61;
      }
      else
      {
        v63 = *(_QWORD *)v61;
        outlined copy of Data._Representation(*(_QWORD *)v61, *((_QWORD *)v61 + 1));
        *(_QWORD *)v60 = v63;
        *((_QWORD *)v60 + 1) = v62;
      }
      v98[v97[14]] = v100[v97[14]];
      v64 = v97[15];
      v65 = &v98[v64];
      v66 = &v100[v64];
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      *(_QWORD *)&v98[v97[16]] = *(_QWORD *)&v100[v97[16]];
      swift_bridgeObjectRetain();
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, (uint64_t)v97);
      v3 = v104;
    }
    v68 = v6[10];
    v69 = (_QWORD *)((char *)v4 + v68);
    v70 = (_QWORD *)((char *)v3 + v68);
    v71 = type metadata accessor for SearchAppEntity(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      __dstb = (int *)v71;
      v105 = v3;
      v73 = v70[1];
      *v69 = *v70;
      v69[1] = v73;
      v74 = v70[3];
      v69[2] = v70[2];
      v69[3] = v74;
      v75 = v70[5];
      v69[4] = v70[4];
      v69[5] = v75;
      v76 = *(int *)(v71 + 36);
      v77 = (char *)v69 + v76;
      v78 = (char *)v70 + v76;
      v79 = type metadata accessor for SearchResult(0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
      {
        type metadata accessor for SearchResultItem(0);
        v81 = (char *)&loc_24331B030 + 4 * word_24335A0F0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      v6 = v106;
      v4 = v107;
      v82 = __dstb[10];
      v83 = (char *)v69 + v82;
      v84 = (char *)v70 + v82;
      v85 = *((_QWORD *)v84 + 1);
      if (v85 >> 60 == 15)
      {
        *(_OWORD *)v83 = *(_OWORD *)v84;
      }
      else
      {
        v86 = *(_QWORD *)v84;
        outlined copy of Data._Representation(*(_QWORD *)v84, *((_QWORD *)v84 + 1));
        *(_QWORD *)v83 = v86;
        *((_QWORD *)v83 + 1) = v85;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, (uint64_t)__dstb);
      v3 = v105;
    }
    v87 = v6[11];
    v88 = (char *)v4 + v87;
    v89 = (char *)v3 + v87;
    v90 = type metadata accessor for IntentFile();
    if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
      __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
    }
    v92 = v6[12];
    v93 = (char *)v4 + v92;
    v94 = (char *)v3 + v92;
    if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v90))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v93, v94, v90);
      __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v90);
    }
  }
  return v4;
}

uint64_t destroy for SearchEntity.Builder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int EnumTagSinglePayload;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  int *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  void (*v240)(uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for SearchResultType();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for SearchGlobalEntity();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  v9 = type metadata accessor for SearchSpotlightEntity(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v8 + 24);
    if (v10 >> 60 != 15)
      outlined consume of Data._Representation(*(_QWORD *)(v8 + 16), v10);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v11 = v8 + *(int *)(v9 + 44);
    v12 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = (int *)type metadata accessor for EmailDocument(0);
          v14 = v11 + v13[12];
          v15 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = v11 + v13[17];
          v17 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          v18 = v13[18];
          goto LABEL_27;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = (int *)type metadata accessor for MobileSMSDocument(0);
          v20 = v11 + v19[10];
          v21 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
          v22 = v11 + v19[11];
          v23 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
          v24 = v11 + v19[12];
          if (!__swift_getEnumTagSinglePayload(v24, 1, v23))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v24, v23);
          swift_bridgeObjectRelease();
          goto LABEL_26;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v19 = (int *)type metadata accessor for CalendarEvent(0);
          v25 = v11 + v19[7];
          v26 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
          v27 = v11 + v19[8];
          if (!__swift_getEnumTagSinglePayload(v27, 1, v26))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v27, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v28 = v11 + v19[13];
          v29 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v28, 1, v29))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
LABEL_26:
          v18 = v19[14];
LABEL_27:
          if (!*(_QWORD *)(v11 + v18))
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for Photo(0);
          v31 = v11 + *(int *)(v30 + 44);
          v32 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = *(int *)(v30 + 64);
          goto LABEL_74;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v34 = (int *)type metadata accessor for NoteDocument(0);
          v35 = v11 + v34[8];
          v36 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v35, 1, v36))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
          v37 = v11 + v34[9];
          if (!__swift_getEnumTagSinglePayload(v37, 1, v36))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v37, v36);
          v33 = v34[10];
          goto LABEL_74;
        case 5u:
          swift_bridgeObjectRelease();

          v33 = *(int *)(type metadata accessor for FileDocument(0) + 24);
          goto LABEL_74;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v38 = type metadata accessor for WalletTransaction(0);
          v39 = v11 + *(int *)(v38 + 28);
          v40 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v39, 1, v40))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = *(int *)(v38 + 52);
          goto LABEL_74;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v41 = type metadata accessor for WalletPass(0);
          v42 = v11 + *(int *)(v41 + 28);
          v43 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v42, 1, v43))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          swift_bridgeObjectRelease();
          v33 = *(int *)(v41 + 36);
          goto LABEL_74;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = *(int *)(type metadata accessor for Contact(0) + 36);
          goto LABEL_74;
        case 9u:
          swift_bridgeObjectRelease();
          v44 = (int *)type metadata accessor for FlightReservation(0);
          v45 = v11 + v44[5];
          v46 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v45, 1, v46))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v47 = v11 + v44[11];
          if (!__swift_getEnumTagSinglePayload(v47, 1, v46))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v47, v46);
          v48 = v11 + v44[12];
          if (!__swift_getEnumTagSinglePayload(v48, 1, v46))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v48, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v49 = v11 + v44[15];
          v50 = type metadata accessor for DateComponents();
          v51 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8);
          v51(v49, v50);
          v51(v11 + v44[16], v50);
          v52 = v11 + v44[17];
          v53 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
          v54 = v11 + v44[18];
          if (!__swift_getEnumTagSinglePayload(v54, 1, v53))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v54, v53);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
          goto LABEL_71;
        case 0xAu:
          swift_bridgeObjectRelease();
          v56 = (int *)type metadata accessor for HotelReservation(0);
          v57 = v11 + v56[5];
          v58 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v57, 1, v58))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v59 = v11 + v56[12];
          v60 = type metadata accessor for DateComponents();
          v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8);
          v61(v59, v60);
          v61(v11 + v56[13], v60);
          v62 = v11 + v56[14];
          v63 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 0xBu:
          swift_bridgeObjectRelease();
          v64 = (int *)type metadata accessor for RestaurantReservation(0);
          v65 = v11 + v64[5];
          v66 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v65, 1, v66))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = v11 + v64[12];
          v68 = type metadata accessor for DateComponents();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
          swift_bridgeObjectRelease();
          v69 = v11 + v64[14];
          v70 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v69, 1, v70))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 0xCu:
          swift_bridgeObjectRelease();
          v71 = type metadata accessor for GlobalItem();
          v72 = v11 + *(int *)(v71 + 20);
          v73 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v72, 1, v73))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v74 = (uint64_t *)(v11 + *(int *)(v71 + 32));
          v75 = v74[1];
          if (v75 >> 60 != 15)
            outlined consume of Data._Representation(*v74, v75);
          v55 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_71:
          __swift_instantiateConcreteTypeFromMangledName(v55);
LABEL_72:
          swift_bridgeObjectRelease();
          break;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_74:
          v76 = v11 + v33;
          v77 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v76, 1, v77))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
          break;
        case 0xEu:
          swift_bridgeObjectRelease();
          v78 = type metadata accessor for IntentFileItem();
          v79 = v11 + *(int *)(v78 + 20);
          v80 = type metadata accessor for URL();
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v79, 1, v80);
          v82 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8);
          if (!EnumTagSinglePayload)
            v82(v79, v80);
          v82(v11 + *(int *)(v78 + 24), v80);
          break;
        case 0xFu:
          swift_bridgeObjectRelease();
          v83 = type metadata accessor for Answer(0);
          v84 = v11 + *(int *)(v83 + 20);
          v85 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v84, 1, v85))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v11 + *(int *)(v83 + 40);
          if (!__swift_getEnumTagSinglePayload(v86, 1, v85))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v86, v85);
          break;
        default:
          break;
      }

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  v87 = a1 + a2[9];
  v88 = type metadata accessor for SearchAnswerEntity(0);
  if (!__swift_getEnumTagSinglePayload(v87, 1, v88))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v89 = v87 + *(int *)(v88 + 48);
    v90 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload(v89, 1, v90))
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v91 = (int *)type metadata accessor for EmailDocument(0);
          v92 = v89 + v91[12];
          v93 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v92, v93);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v94 = v89 + v91[17];
          v95 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v94, 1, v95))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v94, v95);
          v96 = v91[18];
          goto LABEL_105;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v97 = (int *)type metadata accessor for MobileSMSDocument(0);
          v98 = v89 + v97[10];
          v99 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v98, 1, v99))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 8))(v98, v99);
          v100 = v89 + v97[11];
          v101 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v100, 1, v101))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v100, v101);
          v102 = v89 + v97[12];
          if (!__swift_getEnumTagSinglePayload(v102, 1, v101))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v102, v101);
          swift_bridgeObjectRelease();
          goto LABEL_104;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v97 = (int *)type metadata accessor for CalendarEvent(0);
          v103 = v89 + v97[7];
          v104 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v103, 1, v104))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v103, v104);
          v105 = v89 + v97[8];
          if (!__swift_getEnumTagSinglePayload(v105, 1, v104))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v105, v104);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v106 = v89 + v97[13];
          v107 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v106, 1, v107))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 8))(v106, v107);
LABEL_104:
          v96 = v97[14];
LABEL_105:
          if (!*(_QWORD *)(v89 + v96))
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_150;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v108 = type metadata accessor for Photo(0);
          v109 = v89 + *(int *)(v108 + 44);
          v110 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v109, 1, v110))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 8))(v109, v110);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = *(int *)(v108 + 64);
          goto LABEL_152;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v112 = (int *)type metadata accessor for NoteDocument(0);
          v113 = v89 + v112[8];
          v114 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v113, 1, v114))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 8))(v113, v114);
          v115 = v89 + v112[9];
          if (!__swift_getEnumTagSinglePayload(v115, 1, v114))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 8))(v115, v114);
          v111 = v112[10];
          goto LABEL_152;
        case 5u:
          swift_bridgeObjectRelease();

          v111 = *(int *)(type metadata accessor for FileDocument(0) + 24);
          goto LABEL_152;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v116 = type metadata accessor for WalletTransaction(0);
          v117 = v89 + *(int *)(v116 + 28);
          v118 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v117, 1, v118))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 8))(v117, v118);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = *(int *)(v116 + 52);
          goto LABEL_152;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v119 = type metadata accessor for WalletPass(0);
          v120 = v89 + *(int *)(v119 + 28);
          v121 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v120, 1, v121))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 8))(v120, v121);
          swift_bridgeObjectRelease();
          v111 = *(int *)(v119 + 36);
          goto LABEL_152;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = *(int *)(type metadata accessor for Contact(0) + 36);
          goto LABEL_152;
        case 9u:
          swift_bridgeObjectRelease();
          v122 = (int *)type metadata accessor for FlightReservation(0);
          v123 = v89 + v122[5];
          v124 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v123, 1, v124))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v123, v124);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v125 = v89 + v122[11];
          if (!__swift_getEnumTagSinglePayload(v125, 1, v124))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v125, v124);
          v126 = v89 + v122[12];
          if (!__swift_getEnumTagSinglePayload(v126, 1, v124))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v126, v124);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v127 = v89 + v122[15];
          v128 = type metadata accessor for DateComponents();
          v129 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 8);
          v129(v127, v128);
          v129(v89 + v122[16], v128);
          v130 = v89 + v122[17];
          v131 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v130, 1, v131))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(v130, v131);
          v132 = v89 + v122[18];
          if (!__swift_getEnumTagSinglePayload(v132, 1, v131))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(v132, v131);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v133 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
          goto LABEL_149;
        case 0xAu:
          swift_bridgeObjectRelease();
          v134 = (int *)type metadata accessor for HotelReservation(0);
          v135 = v89 + v134[5];
          v136 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v135, 1, v136))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 8))(v135, v136);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v137 = v89 + v134[12];
          v138 = type metadata accessor for DateComponents();
          v139 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 8);
          v139(v137, v138);
          v139(v89 + v134[13], v138);
          v140 = v89 + v134[14];
          v141 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v140, 1, v141))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 8))(v140, v141);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_150;
        case 0xBu:
          swift_bridgeObjectRelease();
          v142 = (int *)type metadata accessor for RestaurantReservation(0);
          v143 = v89 + v142[5];
          v144 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v143, 1, v144))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 8))(v143, v144);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v145 = v89 + v142[12];
          v146 = type metadata accessor for DateComponents();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 8))(v145, v146);
          swift_bridgeObjectRelease();
          v147 = v89 + v142[14];
          v148 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v147, 1, v148))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 8))(v147, v148);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_150;
        case 0xCu:
          swift_bridgeObjectRelease();
          v149 = type metadata accessor for GlobalItem();
          v150 = v89 + *(int *)(v149 + 20);
          v151 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v150, 1, v151))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 8))(v150, v151);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v152 = (uint64_t *)(v89 + *(int *)(v149 + 32));
          v153 = v152[1];
          if (v153 >> 60 != 15)
            outlined consume of Data._Representation(*v152, v153);
          v133 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_149:
          __swift_instantiateConcreteTypeFromMangledName(v133);
LABEL_150:
          swift_bridgeObjectRelease();
          break;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_152:
          v154 = v89 + v111;
          v155 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v154, 1, v155))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 8))(v154, v155);
          break;
        case 0xEu:
          swift_bridgeObjectRelease();
          v156 = type metadata accessor for IntentFileItem();
          v157 = v89 + *(int *)(v156 + 20);
          v158 = type metadata accessor for URL();
          v159 = __swift_getEnumTagSinglePayload(v157, 1, v158);
          v160 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 8);
          if (!v159)
            v160(v157, v158);
          v160(v89 + *(int *)(v156 + 24), v158);
          break;
        case 0xFu:
          swift_bridgeObjectRelease();
          v161 = type metadata accessor for Answer(0);
          v162 = v89 + *(int *)(v161 + 20);
          v163 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v162, 1, v163))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 8))(v162, v163);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v164 = v89 + *(int *)(v161 + 40);
          if (!__swift_getEnumTagSinglePayload(v164, 1, v163))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 8))(v164, v163);
          break;
        default:
          break;
      }

      swift_bridgeObjectRelease();
    }
    v165 = (uint64_t *)(v87 + *(int *)(v88 + 52));
    v166 = v165[1];
    if (v166 >> 60 != 15)
      outlined consume of Data._Representation(*v165, v166);
    swift_bridgeObjectRelease();
    swift_release();
  }
  v167 = a1 + a2[10];
  v168 = type metadata accessor for SearchAppEntity(0);
  if (!__swift_getEnumTagSinglePayload(v167, 1, v168))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v169 = v167 + *(int *)(v168 + 36);
    v170 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload(v169, 1, v170))
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v171 = (int *)type metadata accessor for EmailDocument(0);
          v172 = v169 + v171[12];
          v173 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 8))(v172, v173);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v174 = v169 + v171[17];
          v175 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v174, 1, v175))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 8))(v174, v175);
          v176 = v171[18];
          goto LABEL_185;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v177 = (int *)type metadata accessor for MobileSMSDocument(0);
          v178 = v169 + v177[10];
          v179 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v178, 1, v179))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 8))(v178, v179);
          v180 = v169 + v177[11];
          v181 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v180, 1, v181))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 8))(v180, v181);
          v182 = v169 + v177[12];
          if (!__swift_getEnumTagSinglePayload(v182, 1, v181))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 8))(v182, v181);
          swift_bridgeObjectRelease();
          goto LABEL_184;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v177 = (int *)type metadata accessor for CalendarEvent(0);
          v183 = v169 + v177[7];
          v184 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v183, 1, v184))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 8))(v183, v184);
          v185 = v169 + v177[8];
          if (!__swift_getEnumTagSinglePayload(v185, 1, v184))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 8))(v185, v184);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v186 = v169 + v177[13];
          v187 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v186, 1, v187))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v187 - 8) + 8))(v186, v187);
LABEL_184:
          v176 = v177[14];
LABEL_185:
          if (!*(_QWORD *)(v169 + v176))
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_230;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v188 = type metadata accessor for Photo(0);
          v189 = v169 + *(int *)(v188 + 44);
          v190 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v189, 1, v190))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 8))(v189, v190);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v191 = *(int *)(v188 + 64);
          goto LABEL_232;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v192 = (int *)type metadata accessor for NoteDocument(0);
          v193 = v169 + v192[8];
          v194 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v193, 1, v194))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 8))(v193, v194);
          v195 = v169 + v192[9];
          if (!__swift_getEnumTagSinglePayload(v195, 1, v194))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 8))(v195, v194);
          v191 = v192[10];
          goto LABEL_232;
        case 5u:
          swift_bridgeObjectRelease();

          v191 = *(int *)(type metadata accessor for FileDocument(0) + 24);
          goto LABEL_232;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v196 = type metadata accessor for WalletTransaction(0);
          v197 = v169 + *(int *)(v196 + 28);
          v198 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v197, 1, v198))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v198 - 8) + 8))(v197, v198);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v191 = *(int *)(v196 + 52);
          goto LABEL_232;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v199 = type metadata accessor for WalletPass(0);
          v200 = v169 + *(int *)(v199 + 28);
          v201 = type metadata accessor for Date();
          if (!__swift_getEnumTagSinglePayload(v200, 1, v201))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 8))(v200, v201);
          swift_bridgeObjectRelease();
          v191 = *(int *)(v199 + 36);
          goto LABEL_232;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v191 = *(int *)(type metadata accessor for Contact(0) + 36);
          goto LABEL_232;
        case 9u:
          swift_bridgeObjectRelease();
          v202 = (int *)type metadata accessor for FlightReservation(0);
          v203 = v169 + v202[5];
          v204 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v203, 1, v204))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 8))(v203, v204);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v205 = v169 + v202[11];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v204))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 8))(v205, v204);
          v206 = v169 + v202[12];
          if (!__swift_getEnumTagSinglePayload(v206, 1, v204))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 8))(v206, v204);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v207 = v169 + v202[15];
          v208 = type metadata accessor for DateComponents();
          v209 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 8);
          v209(v207, v208);
          v209(v169 + v202[16], v208);
          v210 = v169 + v202[17];
          v211 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v210, 1, v211))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 8))(v210, v211);
          v212 = v169 + v202[18];
          if (!__swift_getEnumTagSinglePayload(v212, 1, v211))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 8))(v212, v211);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v213 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
          goto LABEL_229;
        case 0xAu:
          swift_bridgeObjectRelease();
          v214 = (int *)type metadata accessor for HotelReservation(0);
          v215 = v169 + v214[5];
          v216 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v215, 1, v216))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 8))(v215, v216);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v217 = v169 + v214[12];
          v218 = type metadata accessor for DateComponents();
          v219 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v218 - 8) + 8);
          v219(v217, v218);
          v219(v169 + v214[13], v218);
          v220 = v169 + v214[14];
          v221 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v220, 1, v221))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 8))(v220, v221);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_230;
        case 0xBu:
          swift_bridgeObjectRelease();
          v222 = (int *)type metadata accessor for RestaurantReservation(0);
          v223 = v169 + v222[5];
          v224 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v223, 1, v224))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 8))(v223, v224);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v225 = v169 + v222[12];
          v226 = type metadata accessor for DateComponents();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 8))(v225, v226);
          swift_bridgeObjectRelease();
          v227 = v169 + v222[14];
          v228 = type metadata accessor for TimeZone();
          if (!__swift_getEnumTagSinglePayload(v227, 1, v228))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 8))(v227, v228);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_230;
        case 0xCu:
          swift_bridgeObjectRelease();
          v229 = type metadata accessor for GlobalItem();
          v230 = v169 + *(int *)(v229 + 20);
          v231 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v230, 1, v231))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 8))(v230, v231);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v232 = (uint64_t *)(v169 + *(int *)(v229 + 32));
          v233 = v232[1];
          if (v233 >> 60 != 15)
            outlined consume of Data._Representation(*v232, v233);
          v213 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_229:
          __swift_instantiateConcreteTypeFromMangledName(v213);
LABEL_230:
          swift_bridgeObjectRelease();
          break;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v191 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_232:
          v234 = v169 + v191;
          v235 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v234, 1, v235))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v235 - 8) + 8))(v234, v235);
          break;
        case 0xEu:
          swift_bridgeObjectRelease();
          v236 = type metadata accessor for IntentFileItem();
          v237 = v169 + *(int *)(v236 + 20);
          v238 = type metadata accessor for URL();
          v239 = __swift_getEnumTagSinglePayload(v237, 1, v238);
          v240 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 8);
          if (!v239)
            v240(v237, v238);
          v240(v169 + *(int *)(v236 + 24), v238);
          break;
        case 0xFu:
          swift_bridgeObjectRelease();
          v241 = type metadata accessor for Answer(0);
          v242 = v169 + *(int *)(v241 + 20);
          v243 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v242, 1, v243))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 8))(v242, v243);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v244 = v169 + *(int *)(v241 + 40);
          if (!__swift_getEnumTagSinglePayload(v244, 1, v243))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 8))(v244, v243);
          break;
        default:
          break;
      }

      swift_bridgeObjectRelease();
    }
    v245 = (uint64_t *)(v167 + *(int *)(v168 + 40));
    v246 = v245[1];
    if (v246 >> 60 != 15)
      outlined consume of Data._Representation(*v245, v246);
  }
  v247 = a1 + a2[11];
  v248 = type metadata accessor for IntentFile();
  if (!__swift_getEnumTagSinglePayload(v247, 1, v248))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v248 - 8) + 8))(v247, v248);
  v249 = a1 + a2[12];
  result = __swift_getEnumTagSinglePayload(v249, 1, v248);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v248 - 8) + 8))(v249, v248);
  return result;
}

_QWORD *initializeWithCopy for SearchEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  int *v92;
  _BYTE *v93;
  char *__dst;
  char *__dsta;
  int *v96;
  _BYTE *v97;
  int *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;

  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SearchResultType();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[7];
  v14 = (char *)v5 + v13;
  v15 = (char *)v4 + v13;
  v16 = type metadata accessor for SearchGlobalEntity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v18 = a3[8];
  v19 = (_QWORD *)((char *)v5 + v18);
  v20 = (_QWORD *)((char *)v4 + v18);
  v21 = type metadata accessor for SearchSpotlightEntity(0);
  v101 = v5;
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = v20[1];
    *v19 = *v20;
    v19[1] = v23;
    v24 = v20 + 2;
    v25 = v20[3];
    swift_bridgeObjectRetain();
    if (v25 >> 60 == 15)
    {
      *((_OWORD *)v19 + 1) = *(_OWORD *)v24;
    }
    else
    {
      v26 = *v24;
      outlined copy of Data._Representation(*v24, v25);
      v19[2] = v26;
      v19[3] = v25;
    }
    v27 = v20[5];
    v19[4] = v20[4];
    v19[5] = v27;
    v28 = v20[7];
    v19[6] = v20[6];
    v19[7] = v28;
    v29 = v20[9];
    v19[8] = v20[8];
    v19[9] = v29;
    __dst = (char *)v19;
    v96 = (int *)v21;
    v30 = *(int *)(v21 + 44);
    v31 = (char *)v19 + v30;
    v32 = (char *)v20 + v30;
    v33 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      type metadata accessor for SearchResultItem(0);
      v35 = (char *)&loc_24331FF44 + 4 * word_24335A170[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    v5 = v101;
    v36 = v96[12];
    v37 = &__dst[v36];
    v38 = (uint64_t *)((char *)v20 + v36);
    v39 = v38[1];
    *(_QWORD *)v37 = *v38;
    *((_QWORD *)v37 + 1) = v39;
    *(_QWORD *)&__dst[v96[13]] = *(uint64_t *)((char *)v20 + v96[13]);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, (uint64_t)v96);
  }
  v40 = a3[9];
  v41 = (_QWORD *)((char *)v5 + v40);
  v42 = (_QWORD *)((char *)v4 + v40);
  v43 = type metadata accessor for SearchAnswerEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v99 = v4;
    v45 = v42[1];
    *v41 = *v42;
    v41[1] = v45;
    v46 = v42[3];
    v41[2] = v42[2];
    v41[3] = v46;
    v47 = v42[5];
    v41[4] = v42[4];
    v41[5] = v47;
    v48 = v42[7];
    v41[6] = v42[6];
    v41[7] = v48;
    v92 = (int *)v43;
    v93 = v41;
    v49 = *(int *)(v43 + 48);
    __dsta = (char *)v41 + v49;
    v97 = v42;
    v50 = (char *)v42 + v49;
    v51 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
    {
      type metadata accessor for SearchResultItem(0);
      v53 = (char *)&loc_243322028 + 4 * word_24335A190[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    v5 = v101;
    v54 = *(int *)(v43 + 52);
    v55 = &v93[v54];
    v56 = &v97[v54];
    v57 = *((_QWORD *)v56 + 1);
    if (v57 >> 60 == 15)
    {
      *(_OWORD *)v55 = *(_OWORD *)v56;
    }
    else
    {
      v58 = *(_QWORD *)v56;
      outlined copy of Data._Representation(*(_QWORD *)v56, *((_QWORD *)v56 + 1));
      *(_QWORD *)v55 = v58;
      *((_QWORD *)v55 + 1) = v57;
    }
    v93[v92[14]] = v97[v92[14]];
    v59 = v92[15];
    v60 = &v93[v59];
    v61 = &v97[v59];
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    *(_QWORD *)&v93[v92[16]] = *(_QWORD *)&v97[v92[16]];
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, (uint64_t)v92);
    v4 = v99;
  }
  v63 = a3[10];
  v64 = (_QWORD *)((char *)v5 + v63);
  v65 = (_QWORD *)((char *)v4 + v63);
  v66 = type metadata accessor for SearchAppEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v98 = (int *)v66;
    v100 = v4;
    v68 = v65[1];
    *v64 = *v65;
    v64[1] = v68;
    v69 = v65[3];
    v64[2] = v65[2];
    v64[3] = v69;
    v70 = v65[5];
    v64[4] = v65[4];
    v64[5] = v70;
    v71 = *(int *)(v66 + 36);
    v72 = (char *)v64 + v71;
    v73 = (char *)v65 + v71;
    v74 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
    {
      type metadata accessor for SearchResultItem(0);
      v76 = (char *)&loc_2433240E0 + 4 * word_24335A1B0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    v5 = v101;
    v77 = v98[10];
    v78 = (char *)v64 + v77;
    v79 = (char *)v65 + v77;
    v80 = *((_QWORD *)v79 + 1);
    if (v80 >> 60 == 15)
    {
      *(_OWORD *)v78 = *(_OWORD *)v79;
    }
    else
    {
      v81 = *(_QWORD *)v79;
      outlined copy of Data._Representation(*(_QWORD *)v79, *((_QWORD *)v79 + 1));
      *(_QWORD *)v78 = v81;
      *((_QWORD *)v78 + 1) = v80;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, (uint64_t)v98);
    v4 = v100;
  }
  v82 = a3[11];
  v83 = (char *)v5 + v82;
  v84 = (char *)v4 + v82;
  v85 = type metadata accessor for IntentFile();
  if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
    __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
  }
  v87 = a3[12];
  v88 = (char *)v5 + v87;
  v89 = (char *)v4 + v87;
  if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v85))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v88, v89, v85);
    __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v85);
  }
  return v5;
}

_QWORD *assignWithCopy for SearchEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  int v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  int *v70;
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  int v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  int v130;
  int v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  id v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t *v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  int v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  int v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  int *__dst;
  int *__dsta;
  char *__dstb;
  int *__dstc;
  _QWORD *v176;
  _QWORD *v177;
  int *v178;

  v4 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v4[2];
  a1[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)v4 + v6;
  v9 = type metadata accessor for SearchResultType();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)v4 + v14;
  v17 = type metadata accessor for SearchGlobalEntity();
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v20 = *(_QWORD *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_13:
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)v4 + v22);
  v25 = type metadata accessor for SearchSpotlightEntity(0);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  v178 = a3;
  if (!v26)
  {
    if (v27)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v23, type metadata accessor for SearchSpotlightEntity);
      goto LABEL_19;
    }
    __dsta = (int *)v25;
    *v23 = *v24;
    v23[1] = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = v24 + 2;
    v32 = v24[3];
    if ((unint64_t)v23[3] >> 60 == 15)
    {
      if (v32 >> 60 != 15)
      {
        v33 = *v31;
        outlined copy of Data._Representation(*v31, v24[3]);
        v23[2] = v33;
        v23[3] = v32;
        goto LABEL_33;
      }
    }
    else
    {
      if (v32 >> 60 != 15)
      {
        v41 = *v31;
        outlined copy of Data._Representation(*v31, v24[3]);
        v42 = v23[2];
        v43 = v23[3];
        v23[2] = v41;
        v23[3] = v32;
        outlined consume of Data._Representation(v42, v43);
LABEL_33:
        v44 = __dsta;
        v23[4] = v24[4];
        swift_retain();
        swift_release();
        v23[5] = v24[5];
        swift_retain();
        swift_release();
        v23[6] = v24[6];
        swift_retain();
        swift_release();
        v23[7] = v24[7];
        swift_retain();
        swift_release();
        v23[8] = v24[8];
        v23[9] = v24[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v45 = __dsta[11];
        v46 = (char *)v23 + v45;
        v47 = (char *)v24 + v45;
        v48 = type metadata accessor for SearchResult(0);
        v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
        v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
        if (v49)
        {
          if (!v50)
          {
            type metadata accessor for SearchResultItem(0);
            v51 = (char *)&loc_2433267EC + 4 * word_24335A1F0[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
        }
        else
        {
          if (!v50)
          {
            if (a1 != v4)
            {
              _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v46, type metadata accessor for SearchResultItem);
              type metadata accessor for SearchResultItem(0);
              v53 = (char *)&loc_243326A14 + 4 * word_24335A210[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v57 = *(int *)(v48 + 20);
            v58 = *(void **)&v46[v57];
            v59 = *(void **)&v47[v57];
            *(_QWORD *)&v46[v57] = v59;
            v60 = v59;

            v61 = *(int *)(v48 + 24);
            v62 = &v46[v61];
            v63 = &v47[v61];
            *(_QWORD *)v62 = *(_QWORD *)v63;
            *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v44 = __dsta;
            goto LABEL_42;
          }
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v46, type metadata accessor for SearchResult);
        }
        v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_42:
        v64 = v44[12];
        v65 = (uint64_t *)((char *)v23 + v64);
        v66 = (uint64_t *)((char *)v24 + v64);
        *v65 = *v66;
        v65[1] = v66[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(uint64_t *)((char *)v23 + v44[13]) = *(uint64_t *)((char *)v24 + v44[13]);
        swift_retain();
        swift_release();
        a3 = v178;
        goto LABEL_43;
      }
      outlined destroy of Data((uint64_t)(v23 + 2));
    }
    *((_OWORD *)v23 + 1) = *(_OWORD *)v31;
    goto LABEL_33;
  }
  if (v27)
  {
LABEL_19:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_43;
  }
  __dst = (int *)v25;
  *v23 = *v24;
  v23[1] = v24[1];
  v28 = v24 + 2;
  v29 = v24[3];
  swift_bridgeObjectRetain();
  v176 = v4;
  if (v29 >> 60 == 15)
  {
    *((_OWORD *)v23 + 1) = *(_OWORD *)v28;
  }
  else
  {
    v34 = *v28;
    outlined copy of Data._Representation(*v28, v29);
    v23[2] = v34;
    v23[3] = v29;
  }
  v23[4] = v24[4];
  v23[5] = v24[5];
  v23[6] = v24[6];
  v23[7] = v24[7];
  v23[8] = v24[8];
  v23[9] = v24[9];
  v35 = __dst[11];
  v36 = (char *)v23 + v35;
  v37 = (char *)v24 + v35;
  v38 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
  {
    type metadata accessor for SearchResultItem(0);
    v40 = (char *)&loc_243326514 + 4 * word_24335A1D0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  v54 = __dst[12];
  v55 = (uint64_t *)((char *)v23 + v54);
  v56 = (uint64_t *)((char *)v24 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  *(uint64_t *)((char *)v23 + __dst[13]) = *(uint64_t *)((char *)v24 + __dst[13]);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, (uint64_t)__dst);
  v4 = v176;
LABEL_43:
  v67 = a3[9];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)v4 + v67);
  v70 = (int *)type metadata accessor for SearchAnswerEntity(0);
  v71 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, (uint64_t)v70);
  v72 = __swift_getEnumTagSinglePayload((uint64_t)v69, 1, (uint64_t)v70);
  if (!v71)
  {
    if (v72)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v68, type metadata accessor for SearchAnswerEntity);
      goto LABEL_49;
    }
    *v68 = *v69;
    swift_retain();
    swift_release();
    v68[1] = v69[1];
    swift_retain();
    swift_release();
    v68[2] = v69[2];
    swift_retain();
    swift_release();
    v68[3] = v69[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v68[4] = v69[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v68[5] = v69[5];
    swift_retain();
    swift_release();
    v68[6] = v69[6];
    swift_retain();
    swift_release();
    v68[7] = v69[7];
    swift_retain();
    swift_release();
    v78 = v70[12];
    v79 = (char *)v68 + v78;
    v80 = (char *)v69 + v78;
    v81 = type metadata accessor for SearchResult(0);
    v82 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v81);
    v83 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81);
    if (v82)
    {
      if (!v83)
      {
        type metadata accessor for SearchResultItem(0);
        v84 = (char *)&loc_24332CD38 + 4 * word_24335A250[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v83)
      {
        if (a1 != v4)
        {
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v79, type metadata accessor for SearchResultItem);
          type metadata accessor for SearchResultItem(0);
          v87 = (char *)&loc_24332D14C + 4 * word_24335A270[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v96 = *(int *)(v81 + 20);
        v97 = *(void **)&v79[v96];
        v98 = *(void **)&v80[v96];
        *(_QWORD *)&v79[v96] = v98;
        v99 = v98;

        v100 = *(int *)(v81 + 24);
        v101 = &v79[v100];
        v102 = &v80[v100];
        *(_QWORD *)v101 = *(_QWORD *)v102;
        *((_QWORD *)v101 + 1) = *((_QWORD *)v102 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_64:
        v103 = v70[13];
        v104 = (_QWORD *)((char *)v68 + v103);
        v105 = (_QWORD *)((char *)v69 + v103);
        v106 = *(_QWORD *)((char *)v69 + v103 + 8);
        a3 = v178;
        if (*(_QWORD *)((char *)v68 + v103 + 8) >> 60 == 15)
        {
          if (v106 >> 60 != 15)
          {
            v107 = *v105;
            outlined copy of Data._Representation(*v105, v106);
            *v104 = v107;
            v104[1] = v106;
LABEL_71:
            *((_BYTE *)v68 + v70[14]) = *((_BYTE *)v69 + v70[14]);
            v111 = v70[15];
            v112 = (_QWORD *)((char *)v68 + v111);
            v113 = (_QWORD *)((char *)v69 + v111);
            *v112 = *v113;
            v112[1] = v113[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v68 + v70[16]) = *(_QWORD *)((char *)v69 + v70[16]);
            swift_retain();
            swift_release();
            goto LABEL_72;
          }
        }
        else
        {
          if (v106 >> 60 != 15)
          {
            v108 = *v105;
            outlined copy of Data._Representation(*v105, v106);
            v109 = *v104;
            v110 = v104[1];
            *v104 = v108;
            v104[1] = v106;
            outlined consume of Data._Representation(v109, v110);
            goto LABEL_71;
          }
          outlined destroy of Data((uint64_t)v104);
        }
        *(_OWORD *)v104 = *(_OWORD *)v105;
        goto LABEL_71;
      }
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v79, type metadata accessor for SearchResult);
    }
    v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_64;
  }
  if (v72)
  {
LABEL_49:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_72;
  }
  *v68 = *v69;
  v68[1] = v69[1];
  v68[2] = v69[2];
  v68[3] = v69[3];
  v68[4] = v69[4];
  v68[5] = v69[5];
  v68[6] = v69[6];
  v68[7] = v69[7];
  v73 = v70[12];
  __dstb = (char *)v68 + v73;
  v74 = (char *)v69 + v73;
  v75 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
  {
    type metadata accessor for SearchResultItem(0);
    v85 = (char *)&loc_24332CF14 + 4 * word_24335A230[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(__dstb, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  a3 = v178;
  v88 = v70[13];
  v89 = (char *)v68 + v88;
  v90 = (char *)v69 + v88;
  v91 = *((_QWORD *)v90 + 1);
  if (v91 >> 60 == 15)
  {
    *(_OWORD *)v89 = *(_OWORD *)v90;
  }
  else
  {
    v92 = *(_QWORD *)v90;
    outlined copy of Data._Representation(*(_QWORD *)v90, *((_QWORD *)v90 + 1));
    *(_QWORD *)v89 = v92;
    *((_QWORD *)v89 + 1) = v91;
  }
  *((_BYTE *)v68 + v70[14]) = *((_BYTE *)v69 + v70[14]);
  v93 = v70[15];
  v94 = (_QWORD *)((char *)v68 + v93);
  v95 = (_QWORD *)((char *)v69 + v93);
  *v94 = *v95;
  v94[1] = v95[1];
  *(_QWORD *)((char *)v68 + v70[16]) = *(_QWORD *)((char *)v69 + v70[16]);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, (uint64_t)v70);
LABEL_72:
  v114 = a3[10];
  v115 = (_QWORD *)((char *)a1 + v114);
  v116 = (_QWORD *)((char *)v4 + v114);
  v117 = type metadata accessor for SearchAppEntity(0);
  v118 = __swift_getEnumTagSinglePayload((uint64_t)v115, 1, v117);
  v119 = __swift_getEnumTagSinglePayload((uint64_t)v116, 1, v117);
  if (!v118)
  {
    if (v119)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v115, type metadata accessor for SearchAppEntity);
      goto LABEL_78;
    }
    *v115 = *v116;
    swift_retain();
    swift_release();
    v115[1] = v116[1];
    swift_retain();
    swift_release();
    v115[2] = v116[2];
    swift_retain();
    swift_release();
    v115[3] = v116[3];
    swift_retain();
    swift_release();
    v115[4] = v116[4];
    v115[5] = v116[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v126 = *(int *)(v117 + 36);
    v127 = (char *)v115 + v126;
    v128 = (char *)v116 + v126;
    v129 = type metadata accessor for SearchResult(0);
    v130 = __swift_getEnumTagSinglePayload((uint64_t)v127, 1, v129);
    v131 = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129);
    if (v130)
    {
      if (!v131)
      {
        type metadata accessor for SearchResultItem(0);
        v132 = (char *)&loc_24333347C + 4 * word_24335A2B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v131)
      {
        if (a1 != v4)
        {
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v127, type metadata accessor for SearchResultItem);
          type metadata accessor for SearchResultItem(0);
          v135 = (char *)&loc_24333387C + 4 * word_24335A2D0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v141 = *(int *)(v129 + 20);
        v142 = *(void **)&v127[v141];
        v143 = *(void **)&v128[v141];
        *(_QWORD *)&v127[v141] = v143;
        v144 = v143;

        v145 = *(int *)(v129 + 24);
        v146 = &v127[v145];
        v147 = &v128[v145];
        *(_QWORD *)v146 = *(_QWORD *)v147;
        *((_QWORD *)v146 + 1) = *((_QWORD *)v147 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_93:
        v148 = *(int *)(v117 + 40);
        v149 = (_QWORD *)((char *)v115 + v148);
        v150 = (_QWORD *)((char *)v116 + v148);
        v151 = *(_QWORD *)((char *)v116 + v148 + 8);
        a3 = v178;
        if ((unint64_t)v149[1] >> 60 == 15)
        {
          if (v151 >> 60 != 15)
          {
            v152 = *v150;
            outlined copy of Data._Representation(v152, v151);
            *v149 = v152;
            v149[1] = v151;
            goto LABEL_100;
          }
        }
        else
        {
          if (v151 >> 60 != 15)
          {
            v153 = *v150;
            outlined copy of Data._Representation(v153, v151);
            v154 = *v149;
            v155 = v149[1];
            *v149 = v153;
            v149[1] = v151;
            outlined consume of Data._Representation(v154, v155);
            goto LABEL_100;
          }
          outlined destroy of Data((uint64_t)v149);
        }
        *(_OWORD *)v149 = *(_OWORD *)v150;
        goto LABEL_100;
      }
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v127, type metadata accessor for SearchResult);
    }
    v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_93;
  }
  if (v119)
  {
LABEL_78:
    v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    goto LABEL_100;
  }
  v177 = v4;
  __dstc = (int *)v117;
  *v115 = *v116;
  v115[1] = v116[1];
  v115[2] = v116[2];
  v115[3] = v116[3];
  v115[4] = v116[4];
  v115[5] = v116[5];
  v120 = *(int *)(v117 + 36);
  v121 = (char *)v115 + v120;
  v122 = (char *)v116 + v120;
  v123 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123))
  {
    type metadata accessor for SearchResultItem(0);
    v133 = (char *)&loc_24333364C + 4 * word_24335A290[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
  a3 = v178;
  v136 = __dstc[10];
  v137 = (char *)v115 + v136;
  v138 = (char *)v116 + v136;
  v139 = *((_QWORD *)v138 + 1);
  v4 = v177;
  if (v139 >> 60 == 15)
  {
    *(_OWORD *)v137 = *(_OWORD *)v138;
  }
  else
  {
    v140 = *(_QWORD *)v138;
    outlined copy of Data._Representation(*(_QWORD *)v138, *((_QWORD *)v138 + 1));
    *(_QWORD *)v137 = v140;
    *((_QWORD *)v137 + 1) = v139;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, (uint64_t)__dstc);
LABEL_100:
  v156 = a3[11];
  v157 = (char *)a1 + v156;
  v158 = (char *)v4 + v156;
  v159 = type metadata accessor for IntentFile();
  v160 = __swift_getEnumTagSinglePayload((uint64_t)v157, 1, v159);
  v161 = __swift_getEnumTagSinglePayload((uint64_t)v158, 1, v159);
  if (v160)
  {
    if (!v161)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
      __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v159);
      goto LABEL_106;
    }
    goto LABEL_105;
  }
  v162 = *(_QWORD *)(v159 - 8);
  if (v161)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v157, v159);
LABEL_105:
    v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    goto LABEL_106;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 24))(v157, v158, v159);
LABEL_106:
  v164 = a3[12];
  v165 = (char *)a1 + v164;
  v166 = (char *)v4 + v164;
  v167 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v164, 1, v159);
  v168 = __swift_getEnumTagSinglePayload((uint64_t)v166, 1, v159);
  if (!v167)
  {
    v169 = *(_QWORD *)(v159 - 8);
    if (!v168)
    {
      (*(void (**)(char *, char *, uint64_t))(v169 + 24))(v165, v166, v159);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v169 + 8))(v165, v159);
    goto LABEL_111;
  }
  if (v168)
  {
LABEL_111:
    v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v165, v166, v159);
  __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v159);
  return a1;
}

_OWORD *initializeWithTake for SearchEntity.Builder(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for SearchResultType();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for SearchGlobalEntity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[8];
  v18 = (_OWORD *)((char *)a1 + v17);
  v19 = (_OWORD *)((char *)a2 + v17);
  v20 = (int *)type metadata accessor for SearchSpotlightEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, (uint64_t)v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = v19[1];
    *v18 = *v19;
    v18[1] = v22;
    v23 = v19[3];
    v18[2] = v19[2];
    v18[3] = v23;
    v18[4] = v19[4];
    v24 = v20[11];
    v25 = (char *)v18 + v24;
    v26 = (char *)v19 + v24;
    v27 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      type metadata accessor for SearchResultItem(0);
      v29 = (char *)&loc_243339BC8 + 4 * word_24335A2F0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    *(_OWORD *)((char *)v18 + v20[12]) = *(_OWORD *)((char *)v19 + v20[12]);
    *(_QWORD *)((char *)v18 + v20[13]) = *(_QWORD *)((char *)v19 + v20[13]);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, (uint64_t)v20);
  }
  v30 = a3[9];
  v31 = (_OWORD *)((char *)a1 + v30);
  v32 = (_OWORD *)((char *)a2 + v30);
  v33 = (int *)type metadata accessor for SearchAnswerEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    *v31 = *v32;
    *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    *(_OWORD *)((char *)v31 + 24) = *(_OWORD *)((char *)v32 + 24);
    *(_OWORD *)((char *)v31 + 40) = *(_OWORD *)((char *)v32 + 40);
    *((_QWORD *)v31 + 7) = *((_QWORD *)v32 + 7);
    v35 = v33[12];
    v36 = (char *)v31 + v35;
    v37 = (char *)v32 + v35;
    v38 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
    {
      type metadata accessor for SearchResultItem(0);
      v40 = (char *)&loc_24333AEBC + 4 * word_24335A310[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    *(_OWORD *)((char *)v31 + v33[13]) = *(_OWORD *)((char *)v32 + v33[13]);
    *((_BYTE *)v31 + v33[14]) = *((_BYTE *)v32 + v33[14]);
    *(_OWORD *)((char *)v31 + v33[15]) = *(_OWORD *)((char *)v32 + v33[15]);
    *(_QWORD *)((char *)v31 + v33[16]) = *(_QWORD *)((char *)v32 + v33[16]);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, (uint64_t)v33);
  }
  v41 = a3[10];
  v42 = (_OWORD *)((char *)a1 + v41);
  v43 = (_OWORD *)((char *)a2 + v41);
  v44 = type metadata accessor for SearchAppEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = v43[1];
    *v42 = *v43;
    v42[1] = v46;
    v42[2] = v43[2];
    v47 = *(int *)(v44 + 36);
    v48 = (char *)v42 + v47;
    v49 = (char *)v43 + v47;
    v50 = type metadata accessor for SearchResult(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
    {
      type metadata accessor for SearchResultItem(0);
      v52 = (char *)&loc_24333C3F8 + 4 * word_24335A330[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    *(_OWORD *)((char *)v42 + *(int *)(v44 + 40)) = *(_OWORD *)((char *)v43 + *(int *)(v44 + 40));
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
  }
  v53 = a3[11];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = type metadata accessor for IntentFile();
  if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
  }
  v58 = a3[12];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v56))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v59, v60, v56);
    __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v56);
  }
  return a1;
}

_QWORD *assignWithTake for SearchEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  int v28;
  int v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  int v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  int *v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  int v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  int v110;
  int v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  int v124;
  int v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  int v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SearchResultType();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for SearchGlobalEntity();
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v22 = *(_QWORD *)(v19 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v17, v18, v19);
LABEL_13:
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = (int *)type metadata accessor for SearchSpotlightEntity(0);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, (uint64_t)v27);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27);
  if (!v28)
  {
    if (v29)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v25, type metadata accessor for SearchSpotlightEntity);
      goto LABEL_19;
    }
    v38 = v26[1];
    *v25 = *v26;
    v25[1] = v38;
    swift_bridgeObjectRelease();
    v39 = v26 + 2;
    v40 = v25[3];
    if (v40 >> 60 != 15)
    {
      v41 = v26[3];
      if (v41 >> 60 != 15)
      {
        v43 = v25[2];
        v25[2] = *v39;
        v25[3] = v41;
        outlined consume of Data._Representation(v43, v40);
LABEL_28:
        v25[4] = v26[4];
        swift_release();
        v25[5] = v26[5];
        swift_release();
        v25[6] = v26[6];
        swift_release();
        v25[7] = v26[7];
        swift_release();
        v44 = v26[9];
        v25[8] = v26[8];
        v25[9] = v44;
        swift_bridgeObjectRelease();
        v45 = v27[11];
        v46 = (char *)v25 + v45;
        v47 = (char *)v26 + v45;
        v48 = type metadata accessor for SearchResult(0);
        v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
        v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
        if (v49)
        {
          if (!v50)
          {
            type metadata accessor for SearchResultItem(0);
            v51 = (char *)&loc_24333E07C + 4 * word_24335A370[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
        }
        else
        {
          if (!v50)
          {
            if (a1 != a2)
            {
              _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v46, type metadata accessor for SearchResultItem);
              type metadata accessor for SearchResultItem(0);
              v53 = (char *)&loc_24333E1E4 + 4 * word_24335A390[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v54 = *(int *)(v48 + 20);
            v55 = *(void **)&v46[v54];
            *(_QWORD *)&v46[v54] = *(_QWORD *)&v47[v54];

            v56 = *(int *)(v48 + 24);
            v57 = &v46[v56];
            v58 = &v47[v56];
            v60 = *(_QWORD *)v58;
            v59 = *((_QWORD *)v58 + 1);
            *(_QWORD *)v57 = v60;
            *((_QWORD *)v57 + 1) = v59;
            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v46, type metadata accessor for SearchResult);
        }
        v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_37:
        v61 = v27[12];
        v62 = (_QWORD *)((char *)v25 + v61);
        v63 = (_QWORD *)((char *)v26 + v61);
        v65 = *v63;
        v64 = v63[1];
        *v62 = v65;
        v62[1] = v64;
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v25 + v27[13]) = *(_QWORD *)((char *)v26 + v27[13]);
        swift_release();
        goto LABEL_38;
      }
      outlined destroy of Data((uint64_t)(v25 + 2));
    }
    *((_OWORD *)v25 + 1) = *(_OWORD *)v39;
    goto LABEL_28;
  }
  if (v29)
  {
LABEL_19:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_38;
  }
  v30 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v30;
  v31 = *((_OWORD *)v26 + 3);
  *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  *((_OWORD *)v25 + 3) = v31;
  *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
  v32 = v27[11];
  v33 = (char *)v25 + v32;
  v34 = (char *)v26 + v32;
  v35 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    type metadata accessor for SearchResultItem(0);
    v42 = (char *)&loc_24333DEC0 + 4 * word_24335A350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  *(_OWORD *)((char *)v25 + v27[12]) = *(_OWORD *)((char *)v26 + v27[12]);
  *(_QWORD *)((char *)v25 + v27[13]) = *(_QWORD *)((char *)v26 + v27[13]);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
LABEL_38:
  v66 = a3[9];
  v67 = (_QWORD *)((char *)a1 + v66);
  v68 = (_QWORD *)((char *)a2 + v66);
  v69 = (int *)type metadata accessor for SearchAnswerEntity(0);
  v70 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, (uint64_t)v69);
  v71 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, (uint64_t)v69);
  if (!v70)
  {
    if (v71)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v67, type metadata accessor for SearchAnswerEntity);
      goto LABEL_44;
    }
    *v67 = *v68;
    swift_release();
    v67[1] = v68[1];
    swift_release();
    v67[2] = v68[2];
    swift_release();
    v67[3] = v68[3];
    swift_bridgeObjectRelease();
    v67[4] = v68[4];
    swift_bridgeObjectRelease();
    v67[5] = v68[5];
    swift_release();
    v67[6] = v68[6];
    swift_release();
    v67[7] = v68[7];
    swift_release();
    v78 = v69[12];
    v79 = (char *)v67 + v78;
    v80 = (char *)v68 + v78;
    v81 = type metadata accessor for SearchResult(0);
    v82 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v81);
    v83 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81);
    if (v82)
    {
      if (!v83)
      {
        type metadata accessor for SearchResultItem(0);
        v84 = (char *)&loc_243341C28 + 4 * word_24335A3D0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v83)
      {
        if (a1 != a2)
        {
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v79, type metadata accessor for SearchResultItem);
          type metadata accessor for SearchResultItem(0);
          v87 = (char *)&loc_243341EAC + 4 * word_24335A3F0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v88 = *(int *)(v81 + 20);
        v89 = *(void **)&v79[v88];
        *(_QWORD *)&v79[v88] = *(_QWORD *)&v80[v88];

        v90 = *(int *)(v81 + 24);
        v91 = &v79[v90];
        v92 = &v80[v90];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        *(_QWORD *)v91 = v94;
        *((_QWORD *)v91 + 1) = v93;
        swift_bridgeObjectRelease();
LABEL_55:
        v95 = v69[13];
        v96 = (_QWORD *)((char *)v67 + v95);
        v97 = (_QWORD *)((char *)v68 + v95);
        v98 = *(_QWORD *)((char *)v67 + v95 + 8);
        if (v98 >> 60 != 15)
        {
          v99 = v97[1];
          if (v99 >> 60 != 15)
          {
            v100 = *v96;
            *v96 = *v97;
            v96[1] = v99;
            outlined consume of Data._Representation(v100, v98);
            goto LABEL_60;
          }
          outlined destroy of Data((uint64_t)v96);
        }
        *(_OWORD *)v96 = *(_OWORD *)v97;
LABEL_60:
        *((_BYTE *)v67 + v69[14]) = *((_BYTE *)v68 + v69[14]);
        v101 = v69[15];
        v102 = (_QWORD *)((char *)v67 + v101);
        v103 = (_QWORD *)((char *)v68 + v101);
        v105 = *v103;
        v104 = v103[1];
        *v102 = v105;
        v102[1] = v104;
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v67 + v69[16]) = *(_QWORD *)((char *)v68 + v69[16]);
        swift_release();
        goto LABEL_61;
      }
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v79, type metadata accessor for SearchResult);
    }
    v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_55;
  }
  if (v71)
  {
LABEL_44:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_61;
  }
  *(_OWORD *)v67 = *(_OWORD *)v68;
  v67[2] = v68[2];
  *(_OWORD *)(v67 + 3) = *(_OWORD *)(v68 + 3);
  *(_OWORD *)(v67 + 5) = *(_OWORD *)(v68 + 5);
  v67[7] = v68[7];
  v72 = v69[12];
  v73 = (char *)v67 + v72;
  v74 = (char *)v68 + v72;
  v75 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
  {
    type metadata accessor for SearchResultItem(0);
    v85 = (char *)&loc_243341D44 + 4 * word_24335A3B0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  *(_OWORD *)((char *)v67 + v69[13]) = *(_OWORD *)((char *)v68 + v69[13]);
  *((_BYTE *)v67 + v69[14]) = *((_BYTE *)v68 + v69[14]);
  *(_OWORD *)((char *)v67 + v69[15]) = *(_OWORD *)((char *)v68 + v69[15]);
  *(_QWORD *)((char *)v67 + v69[16]) = *(_QWORD *)((char *)v68 + v69[16]);
  __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, (uint64_t)v69);
LABEL_61:
  v106 = a3[10];
  v107 = (_QWORD *)((char *)a1 + v106);
  v108 = (_QWORD *)((char *)a2 + v106);
  v109 = type metadata accessor for SearchAppEntity(0);
  v110 = __swift_getEnumTagSinglePayload((uint64_t)v107, 1, v109);
  v111 = __swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109);
  if (!v110)
  {
    if (v111)
    {
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v107, type metadata accessor for SearchAppEntity);
      goto LABEL_67;
    }
    *v107 = *v108;
    swift_release();
    v107[1] = v108[1];
    swift_release();
    v107[2] = v108[2];
    swift_release();
    v107[3] = v108[3];
    swift_release();
    v119 = v108[5];
    v107[4] = v108[4];
    v107[5] = v119;
    swift_bridgeObjectRelease();
    v120 = *(int *)(v109 + 36);
    v121 = (char *)v107 + v120;
    v122 = (char *)v108 + v120;
    v123 = type metadata accessor for SearchResult(0);
    v124 = __swift_getEnumTagSinglePayload((uint64_t)v121, 1, v123);
    v125 = __swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123);
    if (v124)
    {
      if (!v125)
      {
        type metadata accessor for SearchResultItem(0);
        v126 = (char *)&loc_243345E14 + 4 * word_24335A430[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v125)
      {
        if (a1 != a2)
        {
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v121, type metadata accessor for SearchResultItem);
          type metadata accessor for SearchResultItem(0);
          v129 = (char *)&loc_243346098 + 4 * word_24335A450[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v130 = *(int *)(v123 + 20);
        v131 = *(void **)&v121[v130];
        *(_QWORD *)&v121[v130] = *(_QWORD *)&v122[v130];

        v132 = *(int *)(v123 + 24);
        v133 = &v121[v132];
        v134 = &v122[v132];
        v136 = *(_QWORD *)v134;
        v135 = *((_QWORD *)v134 + 1);
        *(_QWORD *)v133 = v136;
        *((_QWORD *)v133 + 1) = v135;
        swift_bridgeObjectRelease();
LABEL_78:
        v137 = *(int *)(v109 + 40);
        v138 = (_QWORD *)((char *)v107 + v137);
        v139 = (_QWORD *)((char *)v108 + v137);
        v140 = v138[1];
        if (v140 >> 60 != 15)
        {
          v141 = v139[1];
          if (v141 >> 60 != 15)
          {
            v142 = *v138;
            *v138 = *v139;
            v138[1] = v141;
            outlined consume of Data._Representation(v142, v140);
            goto LABEL_83;
          }
          outlined destroy of Data((uint64_t)v138);
        }
        *(_OWORD *)v138 = *(_OWORD *)v139;
        goto LABEL_83;
      }
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v121, type metadata accessor for SearchResult);
    }
    v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_78;
  }
  if (v111)
  {
LABEL_67:
    v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    goto LABEL_83;
  }
  v112 = *((_OWORD *)v108 + 1);
  *(_OWORD *)v107 = *(_OWORD *)v108;
  *((_OWORD *)v107 + 1) = v112;
  *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
  v113 = *(int *)(v109 + 36);
  v114 = (char *)v107 + v113;
  v115 = (char *)v108 + v113;
  v116 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v116))
  {
    type metadata accessor for SearchResultItem(0);
    v127 = (char *)&loc_243345F30 + 4 * word_24335A410[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  *(_OWORD *)((char *)v107 + *(int *)(v109 + 40)) = *(_OWORD *)((char *)v108 + *(int *)(v109 + 40));
  __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v109);
LABEL_83:
  v143 = a3[11];
  v144 = (char *)a1 + v143;
  v145 = (char *)a2 + v143;
  v146 = type metadata accessor for IntentFile();
  v147 = __swift_getEnumTagSinglePayload((uint64_t)v144, 1, v146);
  v148 = __swift_getEnumTagSinglePayload((uint64_t)v145, 1, v146);
  if (v147)
  {
    if (!v148)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
      __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v146);
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  v149 = *(_QWORD *)(v146 - 8);
  if (v148)
  {
    (*(void (**)(char *, uint64_t))(v149 + 8))(v144, v146);
LABEL_88:
    v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(char *, char *, uint64_t))(v149 + 40))(v144, v145, v146);
LABEL_89:
  v151 = a3[12];
  v152 = (char *)a1 + v151;
  v153 = (char *)a2 + v151;
  v154 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v151, 1, v146);
  v155 = __swift_getEnumTagSinglePayload((uint64_t)v153, 1, v146);
  if (!v154)
  {
    v156 = *(_QWORD *)(v146 - 8);
    if (!v155)
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 40))(v152, v153, v146);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v156 + 8))(v152, v146);
    goto LABEL_94;
  }
  if (v155)
  {
LABEL_94:
    v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v152, v153, v146);
  __swift_storeEnumTagSinglePayload((uint64_t)v152, 0, 1, v146);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEntity.Builder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243349D10(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    OUTLINED_FUNCTION_53_11();
    if (v12)
    {
      v10 = v9;
      v11 = a3[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
      OUTLINED_FUNCTION_53_11();
      if (v12)
      {
        v10 = v13;
        v11 = a3[7];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
        OUTLINED_FUNCTION_53_11();
        if (v14)
        {
          v10 = v15;
          v11 = a3[8];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
          OUTLINED_FUNCTION_53_11();
          if (v16)
          {
            v10 = v17;
            v11 = a3[9];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
            OUTLINED_FUNCTION_53_11();
            if (v18)
            {
              v10 = v19;
              v11 = a3[10];
            }
            else
            {
              v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
              v11 = a3[11];
            }
          }
        }
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEntity.Builder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_243349E40(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    OUTLINED_FUNCTION_12();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
    OUTLINED_FUNCTION_52_11();
    if (v10)
    {
      v8 = v7;
      v9 = a4[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
      OUTLINED_FUNCTION_52_11();
      if (v10)
      {
        v8 = v11;
        v9 = a4[7];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
        OUTLINED_FUNCTION_52_11();
        if (v12)
        {
          v8 = v13;
          v9 = a4[8];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
          OUTLINED_FUNCTION_52_11();
          if (v14)
          {
            v8 = v15;
            v9 = a4[9];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
            OUTLINED_FUNCTION_52_11();
            if (v16)
            {
              v8 = v17;
              v9 = a4[10];
            }
            else
            {
              v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
              v9 = a4[11];
            }
          }
        }
      }
    }
    OUTLINED_FUNCTION_32_2(a1 + v9, a2, a2, v8);
  }
}

void type metadata completion function for SearchEntity.Builder()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchResultType?, (void (*)(uint64_t))MEMORY[0x24BE6E228]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchGlobalEntity?, (void (*)(uint64_t))MEMORY[0x24BE6E2C0]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchSpotlightEntity?, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchAnswerEntity?, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
        if (v3 <= 0x3F)
        {
          type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchAppEntity?, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
          if (v4 <= 0x3F)
          {
            type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for IntentFile?, (void (*)(uint64_t))MEMORY[0x24BDB4F20]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for SearchEntity.Query()
{
  return &type metadata for SearchEntity.Query;
}

void sub_24334A0B4()
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type TupleTransferRepresentation<SearchEntity, (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchAnswerEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>)> and conformance TupleTransferRepresentation<A, B>, &demangling cache variable for type metadata for TupleTransferRepresentation<SearchEntity, (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchAnswerEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>)>);
}

void partial apply for closure #5 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1)
{
  uint64_t v1;

  closure #5 in closure #1 in SearchEntity.init(result:card:)(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t partial apply for closure #4 in closure #1 in SearchEntity.init(result:card:)()
{
  return closure #4 in closure #1 in SearchEntity.init(result:card:)();
}

uint64_t partial apply for closure #3 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1)
{
  uint64_t v1;

  return closure #3 in closure #1 in SearchEntity.init(result:card:)(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t partial apply for closure #2 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1)
{
  uint64_t v1;

  return closure #2 in closure #1 in SearchEntity.init(result:card:)(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t partial apply for closure #1 in closure #1 in SearchEntity.init(result:card:)(_QWORD *a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in SearchEntity.init(result:card:)(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_28_22()
{
  return type metadata accessor for SearchEntity.Builder();
}

uint64_t OUTLINED_FUNCTION_40_15(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_41_14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_50_19()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_54_18(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_55_12()
{
  return type metadata accessor for SearchGlobalEntity();
}

uint64_t OUTLINED_FUNCTION_56_13()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_58_13()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 352);
  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v0 - 344);
  *(_QWORD *)(v0 - 144) = v1;
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 360);
  return SearchEntity.defaultDescription.getter();
}

uint64_t OUTLINED_FUNCTION_61_14()
{
  return type metadata accessor for SearchAnswerEntity(0);
}

uint64_t OUTLINED_FUNCTION_68_19()
{
  return type metadata accessor for SearchSpotlightEntity(0);
}

uint64_t OUTLINED_FUNCTION_70_14()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_71_17(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_73_13(uint64_t a1)
{
  uint64_t *v1;

  v1[4] = a1;
  __swift_allocate_boxed_opaque_existential_1Tm(v1);
}

void OUTLINED_FUNCTION_76_13()
{
  JUMPOUT(0x2494F42A4);
}

void OUTLINED_FUNCTION_77_13()
{
  JUMPOUT(0x2494F42A4);
}

uint64_t OUTLINED_FUNCTION_78_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_79_12(float a1)
{
  float *v1;

  *v1 = a1;
  SearchResultItem.type.getter();
}

uint64_t OUTLINED_FUNCTION_81_12()
{
  return type metadata accessor for SearchAppEntity(0);
}

uint64_t OUTLINED_FUNCTION_82_15()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_90_12()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_92_7()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_94_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_95_12()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_97_12(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_98_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_100_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_106_10(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

void OUTLINED_FUNCTION_107_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_109_9()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_111_8()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_115_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_116_11()
{
  return swift_release();
}

void OUTLINED_FUNCTION_119_5(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_120_9@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_124_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 160) + 104))(v2, a2, *(_QWORD *)(v3 - 152));
}

uint64_t OUTLINED_FUNCTION_126_5()
{
  return type metadata accessor for LocalizedStringResource();
}

double OUTLINED_FUNCTION_127_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _OWORD *v10;
  double result;

  v10 = (_OWORD *)((char *)&a9 - v9);
  result = 0.0;
  *v10 = 0u;
  v10[1] = 0u;
  return result;
}

void OUTLINED_FUNCTION_128_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_130_5(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_131_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_133_6()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_134_5()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_136_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_139_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

_QWORD *OUTLINED_FUNCTION_142_5()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

void OUTLINED_FUNCTION_149_4()
{
  SearchEntity.associatedQuery.setter();
}

void OUTLINED_FUNCTION_153_3(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, *(_QWORD *)(a2 - 256), v2);
}

void OUTLINED_FUNCTION_155_4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_156_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_162_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_163_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_164_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_165_3()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  outlined init with copy of SearchResult(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_169_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_171_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_172_2(_QWORD *a1)
{
  void (*v1)(uint64_t);

  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(a1, v1);
}

BOOL OUTLINED_FUNCTION_173_2(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_174_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_175_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_177_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t OUTLINED_FUNCTION_181_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a2;
  *(_QWORD *)(v2 - 120) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_182_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of SearchResult(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_184_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_186_3(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_187_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_188_5()
{
  return swift_release();
}

void OUTLINED_FUNCTION_189_5()
{
  SearchResultItem.associatedValue.getter();
}

uint64_t OUTLINED_FUNCTION_190_4()
{
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_191_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of SearchResult(v4, v3, a3);
}

id OUTLINED_FUNCTION_192_2()
{
  uint64_t v0;

  return *(id *)(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_193_3()
{
  return ProxyRepresentation.init(exporting:)();
}

uint64_t OUTLINED_FUNCTION_194_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 280));
}

uint64_t OUTLINED_FUNCTION_197_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 296);
}

uint64_t OUTLINED_FUNCTION_198_2()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_200_1(_QWORD *a1, uint64_t *a2)
{
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](a1, a2);
}

void OUTLINED_FUNCTION_202_2(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_203_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_210_1()
{
  return EntityProperty.wrappedValue.setter();
}

void OUTLINED_FUNCTION_211_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  SearchEntity.init(builder:)(v20, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t OUTLINED_FUNCTION_217_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_222_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_223_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_224_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_225_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_227_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_228_3()
{
  return swift_release();
}

uint64_t static TransientAppEntity.defaultQuery.getter()
{
  return MEMORY[0x24BDB4B68]();
}

uint64_t TransientAppEntity.id.getter()
{
  return MEMORY[0x24BDB4B70]();
}

uint64_t static AppEntity.defaultResolverSpecification.getter()
{
  return MEMORY[0x24BDB4DB8]();
}

uint64_t static AppIntent.description.getter()
{
  return MEMORY[0x24BDB4DF8]();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return MEMORY[0x24BDB4E08]();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return MEMORY[0x24BDB4E10]();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return MEMORY[0x24BDB4E60]();
}

uint64_t static AppIntent.persistentIdentifier.getter()
{
  return MEMORY[0x24BDB4E68]();
}

uint64_t IntentFile.data.getter()
{
  return MEMORY[0x24BDB4EE8]();
}

uint64_t IntentFile.init(data:filename:type:)()
{
  return MEMORY[0x24BDB4EF0]();
}

uint64_t IntentFile.init(fileURL:filename:type:)()
{
  return MEMORY[0x24BDB4F08]();
}

uint64_t type metadata accessor for IntentFile()
{
  return MEMORY[0x24BDB4F20]();
}

uint64_t EntityQuery.suggestedEntities()()
{
  return MEMORY[0x24BDB4F88]();
}

uint64_t EntityQuery.results()()
{
  return MEMORY[0x24BDB4F98]();
}

uint64_t IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)()
{
  return MEMORY[0x24BDB5000]();
}

uint64_t IntentDialog.init(stringLiteral:)()
{
  return MEMORY[0x24BDB5010]();
}

uint64_t IntentDialog.init<A, B>(from:)()
{
  return MEMORY[0x24BDB5018]();
}

uint64_t type metadata accessor for IntentDialog()
{
  return MEMORY[0x24BDB5028]();
}

uint64_t static IntentResult.result<A>(value:snippetModel:dialog:)()
{
  return MEMORY[0x24BDB51A8]();
}

uint64_t static IntentResult.result<A>(value:)()
{
  return MEMORY[0x24BDB51B0]();
}

uint64_t SpotlightKeys.description.getter()
{
  return MEMORY[0x24BDB5238]();
}

uint64_t type metadata accessor for SpotlightKeys()
{
  return MEMORY[0x24BDB5250]();
}

uint64_t EntityProperty.wrappedValue.modify()
{
  return MEMORY[0x24BDB52C8]();
}

uint64_t EntityProperty.wrappedValue.getter()
{
  return MEMORY[0x24BDB52D0]();
}

uint64_t EntityProperty.wrappedValue.setter()
{
  return MEMORY[0x24BDB52D8]();
}

uint64_t EntityProperty.projectedValue.getter()
{
  return MEMORY[0x24BDB52E0]();
}

uint64_t EntityProperty<>.init(title:)()
{
  return MEMORY[0x24BDB52F0]();
}

{
  return MEMORY[0x24BDB52F8]();
}

{
  return MEMORY[0x24BDB5300]();
}

{
  return MEMORY[0x24BDB5310]();
}

{
  return MEMORY[0x24BDB5328]();
}

{
  return MEMORY[0x24BDB5330]();
}

{
  return MEMORY[0x24BDB5338]();
}

{
  return MEMORY[0x24BDB5340]();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return MEMORY[0x24BDB5458]();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return MEMORY[0x24BDB5460]();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return MEMORY[0x24BDB5468]();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return MEMORY[0x24BDB5470]();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return MEMORY[0x24BDB5518]();
}

uint64_t IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)()
{
  return MEMORY[0x24BDB5580]();
}

uint64_t IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)()
{
  return MEMORY[0x24BDB5588]();
}

uint64_t IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)()
{
  return MEMORY[0x24BDB5598]();
}

uint64_t type metadata accessor for IntentDescription()
{
  return MEMORY[0x24BDB5800]();
}

uint64_t IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)()
{
  return MEMORY[0x24BDB5808]();
}

uint64_t static _DialogBuilderEntity.buildBlock(_:)()
{
  return MEMORY[0x24BDB5D30]();
}

uint64_t static _DialogBuilderEntity.buildExpression(_:)()
{
  return MEMORY[0x24BDB5D38]();
}

uint64_t DisplayRepresentation.init(stringLiteral:)()
{
  return MEMORY[0x24BDB5D40]();
}

uint64_t type metadata accessor for DisplayRepresentation.Image()
{
  return MEMORY[0x24BDB5DB0]();
}

uint64_t DisplayRepresentation.title.getter()
{
  return MEMORY[0x24BDB5DC0]();
}

uint64_t DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)()
{
  return MEMORY[0x24BDB5DC8]();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return MEMORY[0x24BDB5DD8]();
}

uint64_t type metadata accessor for DisplayRepresentation()
{
  return MEMORY[0x24BDB5DF0]();
}

uint64_t DynamicOptionsProvider.defaultResult()()
{
  return MEMORY[0x24BDB5EF0]();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return MEMORY[0x24BDB5F00]();
}

uint64_t IntentParameterSummary.init(_:table:)()
{
  return MEMORY[0x24BDB5F50]();
}

uint64_t ParameterSummaryString.init(stringLiteral:)()
{
  return MEMORY[0x24BDB6010]();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return MEMORY[0x24BDB6098]();
}

uint64_t static ParameterSummaryBuilder.buildBlock<A>(_:)()
{
  return MEMORY[0x24BDB60A0]();
}

uint64_t static ParameterSummaryBuilder.buildExpression<A>(_:)()
{
  return MEMORY[0x24BDB60A8]();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return MEMORY[0x24BDB6168]();
}

uint64_t type metadata accessor for _GeneratedContentOptions()
{
  return MEMORY[0x24BDB6188]();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return MEMORY[0x24BDB61F8]();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return MEMORY[0x24BDB6200]();
}

uint64_t type metadata accessor for _GeneratedContentFallback()
{
  return MEMORY[0x24BDB6218]();
}

uint64_t type metadata accessor for IntentAuthenticationPolicy()
{
  return MEMORY[0x24BDB6270]();
}

uint64_t type metadata accessor for EquatableComparisonOperator()
{
  return MEMORY[0x24BDB6310]();
}

uint64_t dispatch thunk of InstanceDisplayRepresentable.displayRepresentation.getter()
{
  return MEMORY[0x24BDB63A8]();
}

uint64_t InstanceDisplayRepresentable.localizedStringResource.getter()
{
  return MEMORY[0x24BDB63B0]();
}

uint64_t ParameterSummaryWhenCondition.init<A, B>(_:_:_:_:otherwise:)()
{
  return MEMORY[0x24BDB6450]();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t JSONDecoder.init()()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t static JSONEncoder.OutputFormatting.sortedKeys.getter()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t static JSONEncoder.OutputFormatting.prettyPrinted.getter()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t type metadata accessor for JSONEncoder.OutputFormatting()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t dispatch thunk of JSONEncoder.outputFormatting.setter()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t type metadata accessor for JSONEncoder.KeyEncodingStrategy()
{
  return MEMORY[0x24BDCB300]();
}

uint64_t dispatch thunk of JSONEncoder.keyEncodingStrategy.setter()
{
  return MEMORY[0x24BDCB318]();
}

uint64_t type metadata accessor for JSONEncoder.DateEncodingStrategy()
{
  return MEMORY[0x24BDCB360]();
}

uint64_t dispatch thunk of JSONEncoder.dateEncodingStrategy.setter()
{
  return MEMORY[0x24BDCB378]();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t dispatch thunk of JSONEncoder.__allocating_init()()
{
  return MEMORY[0x24BDCB3F8]();
}

uint64_t JSONEncoder.init()()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return MEMORY[0x24BDCB620]();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t DateComponents.day.setter()
{
  return MEMORY[0x24BDCBCE0]();
}

uint64_t DateComponents.year.getter()
{
  return MEMORY[0x24BDCBD18]();
}

uint64_t DateComponents.year.setter()
{
  return MEMORY[0x24BDCBD28]();
}

uint64_t DateComponents.month.setter()
{
  return MEMORY[0x24BDCBD48]();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t type metadata accessor for DateComponents()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t _convertNSErrorToError(_:)()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return MEMORY[0x24BDCD320]();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return MEMORY[0x24BDCD340]();
}

uint64_t LocalizedStringResource.init(stringInterpolation:)()
{
  return MEMORY[0x24BDCD348]();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return MEMORY[0x24BDCD380]();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return MEMORY[0x24BDCD3B0]();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t URL.absoluteString.getter()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t URL.pathComponents.getter()
{
  return MEMORY[0x24BDCD830]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
  MEMORY[0x24BDCD8D0](retstr);
}

uint64_t static URL.== infix(_:_:)()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t URL.path.getter()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t URL.query.getter()
{
  return MEMORY[0x24BDCDA18]();
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x24BDCDAC0]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x24BDCDCA0]();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  v1 = MEMORY[0x24BDCDCA8](options);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t static Date.distantPast.getter()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t static Date.distantFuture.getter()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return MEMORY[0x24BDCE330]();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)MEMORY[0x24BDCE5D8]();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t static Date.== infix(_:_:)()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t static Date.now.getter()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t Date.init()()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t type metadata accessor for Date()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t Locale.init(identifier:)()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t Locale.identifier.getter()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t static Locale.current.getter()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t type metadata accessor for Locale()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t Calendar.startOfDay(for:)()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t Calendar.date(from:)()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t static Calendar.current.getter()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t Calendar.timeZone.getter()
{
  return MEMORY[0x24BDCF1C8]();
}

uint64_t Calendar.timeZone.setter()
{
  return MEMORY[0x24BDCF1D0]();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t Calendar.component(_:from:)()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t type metadata accessor for Calendar()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t IndexSet.init(integersIn:)()
{
  return MEMORY[0x24BDCF338]();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
  MEMORY[0x24BDCF368](retstr);
}

uint64_t type metadata accessor for IndexSet()
{
  return MEMORY[0x24BDCF428]();
}

uint64_t TimeZone.init(identifier:)()
{
  return MEMORY[0x24BDCF490]();
}

uint64_t TimeZone.init(abbreviation:)()
{
  return MEMORY[0x24BDCF4B0]();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)MEMORY[0x24BDCF4D8]();
}

uint64_t static TimeZone.current.getter()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t type metadata accessor for TimeZone()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_LegacySnippet.OneOf_Snippet()
{
  return MEMORY[0x24BE6FB60]();
}

uint64_t Apple_Parsec_Siri_Legacy_LegacySnippet.snippet.getter()
{
  return MEMORY[0x24BE6FB70]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_LegacySnippet()
{
  return MEMORY[0x24BE6FB78]();
}

uint64_t Mapspb_Hours.openTime.getter()
{
  return MEMORY[0x24BE6FF88]();
}

uint64_t Mapspb_Hours.closeTime.getter()
{
  return MEMORY[0x24BE6FF90]();
}

uint64_t type metadata accessor for Mapspb_Hours()
{
  return MEMORY[0x24BE6FF98]();
}

uint64_t Locationpb_Location.lat.getter()
{
  return MEMORY[0x24BE6FFA8]();
}

uint64_t Locationpb_Location.lon.getter()
{
  return MEMORY[0x24BE6FFB0]();
}

uint64_t type metadata accessor for Locationpb_Location()
{
  return MEMORY[0x24BE6FFB8]();
}

uint64_t Searchfoundation_URL.address.getter()
{
  return MEMORY[0x24BE6FFC8]();
}

uint64_t type metadata accessor for Searchfoundation_URL()
{
  return MEMORY[0x24BE6FFD8]();
}

uint64_t Searchfoundation_Card.cardSections.getter()
{
  return MEMORY[0x24BE6FFE8]();
}

uint64_t Searchfoundation_Card.cardSections.setter()
{
  return MEMORY[0x24BE6FFF0]();
}

uint64_t Searchfoundation_Card.entityIdentifier.getter()
{
  return MEMORY[0x24BE6FFF8]();
}

uint64_t Searchfoundation_Card.resultIdentifier.getter()
{
  return MEMORY[0x24BE70000]();
}

uint64_t Searchfoundation_Card.source.setter()
{
  return MEMORY[0x24BE70010]();
}

uint64_t type metadata accessor for Searchfoundation_Card()
{
  return MEMORY[0x24BE70018]();
}

uint64_t Searchfoundation_Text.text.getter()
{
  return MEMORY[0x24BE70028]();
}

uint64_t type metadata accessor for Searchfoundation_Text()
{
  return MEMORY[0x24BE70030]();
}

uint64_t Searchfoundation_Image.urlImage.getter()
{
  return MEMORY[0x24BE70038]();
}

uint64_t Searchfoundation_Image.hasURLImage.getter()
{
  return MEMORY[0x24BE70040]();
}

uint64_t type metadata accessor for Searchfoundation_Image()
{
  return MEMORY[0x24BE70048]();
}

uint64_t Searchfoundation_Punchout.urls.getter()
{
  return MEMORY[0x24BE70070]();
}

uint64_t type metadata accessor for Searchfoundation_Punchout()
{
  return MEMORY[0x24BE70080]();
}

uint64_t Searchfoundation_RichText.formattedTextPieces.getter()
{
  return MEMORY[0x24BE70088]();
}

uint64_t type metadata accessor for Searchfoundation_RichText()
{
  return MEMORY[0x24BE70090]();
}

uint64_t Searchfoundation_URLImage.hasURLValue.getter()
{
  return MEMORY[0x24BE70098]();
}

uint64_t Searchfoundation_URLImage.urlValue.getter()
{
  return MEMORY[0x24BE700A0]();
}

uint64_t type metadata accessor for Searchfoundation_URLImage()
{
  return MEMORY[0x24BE700A8]();
}

uint64_t Mapspb_LocalSearchBusiness.subcategory.getter()
{
  return MEMORY[0x24BE700B0]();
}

uint64_t Mapspb_LocalSearchBusiness.openingHours.getter()
{
  return MEMORY[0x24BE700B8]();
}

uint64_t Mapspb_LocalSearchBusiness.placeCardURL.getter()
{
  return MEMORY[0x24BE700C0]();
}

uint64_t Mapspb_LocalSearchBusiness.thoroughfare.getter()
{
  return MEMORY[0x24BE700C8]();
}

uint64_t Mapspb_LocalSearchBusiness.uid.getter()
{
  return MEMORY[0x24BE700D0]();
}

uint64_t Mapspb_LocalSearchBusiness.url.getter()
{
  return MEMORY[0x24BE700D8]();
}

uint64_t Mapspb_LocalSearchBusiness.name.getter()
{
  return MEMORY[0x24BE700E0]();
}

uint64_t Mapspb_LocalSearchBusiness.photos.getter()
{
  return MEMORY[0x24BE700E8]();
}

uint64_t Mapspb_LocalSearchBusiness.address.getter()
{
  return MEMORY[0x24BE700F0]();
}

uint64_t Mapspb_LocalSearchBusiness.category.getter()
{
  return MEMORY[0x24BE700F8]();
}

uint64_t Mapspb_LocalSearchBusiness.location.getter()
{
  return MEMORY[0x24BE70100]();
}

uint64_t Mapspb_LocalSearchBusiness.telephone.getter()
{
  return MEMORY[0x24BE70108]();
}

uint64_t type metadata accessor for Mapspb_LocalSearchBusiness()
{
  return MEMORY[0x24BE70110]();
}

uint64_t type metadata accessor for Searchfoundation_CardSource()
{
  return MEMORY[0x24BE70160]();
}

uint64_t Searchfoundation_CardSection.resultIdentifier.getter()
{
  return MEMORY[0x24BE70168]();
}

uint64_t Searchfoundation_CardSection.type.getter()
{
  return MEMORY[0x24BE70178]();
}

uint64_t Searchfoundation_CardSection.value.getter()
{
  return MEMORY[0x24BE70190]();
}

uint64_t Searchfoundation_CardSection.hasValue.getter()
{
  return MEMORY[0x24BE701A8]();
}

uint64_t type metadata accessor for Searchfoundation_CardSection()
{
  return MEMORY[0x24BE701B0]();
}

uint64_t Searchfoundation_FormattedText.hasText.getter()
{
  return MEMORY[0x24BE701D0]();
}

uint64_t Searchfoundation_FormattedText.isEmphasized.getter()
{
  return MEMORY[0x24BE701D8]();
}

uint64_t Searchfoundation_FormattedText.text.getter()
{
  return MEMORY[0x24BE701E0]();
}

uint64_t type metadata accessor for Searchfoundation_FormattedText()
{
  return MEMORY[0x24BE701E8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_PodView.OneOf_Pod()
{
  return MEMORY[0x24BE70290]();
}

uint64_t Apple_Parsec_Siri_Legacy_PodView.pod.getter()
{
  return MEMORY[0x24BE702A0]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_PodView()
{
  return MEMORY[0x24BE702A8]();
}

uint64_t type metadata accessor for Searchfoundation_CardSectionType()
{
  return MEMORY[0x24BE702D0]();
}

uint64_t Searchfoundation_GridCardSection.cardSections.getter()
{
  return MEMORY[0x24BE702E0]();
}

uint64_t type metadata accessor for Searchfoundation_GridCardSection()
{
  return MEMORY[0x24BE702E8]();
}

uint64_t Apple_Parsec_Siri_Legacy_ImagePod.images.getter()
{
  return MEMORY[0x24BE70370]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_ImagePod()
{
  return MEMORY[0x24BE70378]();
}

uint64_t Searchfoundation_CardSectionValue.descriptionCardSection.getter()
{
  return MEMORY[0x24BE70380]();
}

uint64_t Searchfoundation_CardSectionValue.verticalLayoutCardSection.getter()
{
  return MEMORY[0x24BE70388]();
}

uint64_t Searchfoundation_CardSectionValue.attributionFooterCardSection.getter()
{
  return MEMORY[0x24BE703A8]();
}

uint64_t Searchfoundation_CardSectionValue.hasVerticalLayoutCardSection.getter()
{
  return MEMORY[0x24BE703B0]();
}

uint64_t Searchfoundation_CardSectionValue.gridCardSection.getter()
{
  return MEMORY[0x24BE703B8]();
}

uint64_t Searchfoundation_CardSectionValue.hasGridCardSection.getter()
{
  return MEMORY[0x24BE703C0]();
}

uint64_t Searchfoundation_CardSectionValue.richTitleCardSection.getter()
{
  return MEMORY[0x24BE703C8]();
}

uint64_t type metadata accessor for Searchfoundation_CardSectionValue()
{
  return MEMORY[0x24BE703D8]();
}

uint64_t Apple_Parsec_Siri_Legacy_SummaryPod.imageResource.getter()
{
  return MEMORY[0x24BE703F8]();
}

uint64_t Apple_Parsec_Siri_Legacy_SummaryPod.hasImageResource.getter()
{
  return MEMORY[0x24BE70400]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_SummaryPod()
{
  return MEMORY[0x24BE70408]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity()
{
  return MEMORY[0x24BE70440]();
}

uint64_t Searchfoundation_RichTitleCardSection.titleImage.getter()
{
  return MEMORY[0x24BE70688]();
}

uint64_t Searchfoundation_RichTitleCardSection.richSubtitle.getter()
{
  return MEMORY[0x24BE70690]();
}

uint64_t Searchfoundation_RichTitleCardSection.title.getter()
{
  return MEMORY[0x24BE70698]();
}

uint64_t Searchfoundation_RichTitleCardSection.subtitle.getter()
{
  return MEMORY[0x24BE706A0]();
}

uint64_t type metadata accessor for Searchfoundation_RichTitleCardSection()
{
  return MEMORY[0x24BE706A8]();
}

uint64_t Apple_Parsec_Siri_Context_ClientEntity.sageAppEntity.modify()
{
  return MEMORY[0x24BE706B0]();
}

uint64_t Apple_Parsec_Siri_Context_ClientEntity.sageAppEntity.setter()
{
  return MEMORY[0x24BE706B8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity.ClientEntityType()
{
  return MEMORY[0x24BE706C8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity.ClientEntitySource()
{
  return MEMORY[0x24BE706D8]();
}

uint64_t Apple_Parsec_Siri_Context_ClientEntity.type.setter()
{
  return MEMORY[0x24BE706E0]();
}

uint64_t Apple_Parsec_Siri_Context_ClientEntity.source.setter()
{
  return MEMORY[0x24BE706E8]();
}

uint64_t Apple_Parsec_Siri_Context_ClientEntity.init()()
{
  return MEMORY[0x24BE706F0]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity()
{
  return MEMORY[0x24BE706F8]();
}

uint64_t Apple_Parsec_Siri_Context_FlightEntity.flightCode.setter()
{
  return MEMORY[0x24BE70708]();
}

uint64_t Apple_Parsec_Siri_Context_FlightEntity.departureAirport.setter()
{
  return MEMORY[0x24BE70710]();
}

uint64_t Apple_Parsec_Siri_Context_FlightEntity.departureTimestamp.setter()
{
  return MEMORY[0x24BE70718]();
}

uint64_t Apple_Parsec_Siri_Context_FlightEntity.init()()
{
  return MEMORY[0x24BE70720]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_FlightEntity()
{
  return MEMORY[0x24BE70728]();
}

uint64_t Apple_Parsec_Siri_Context_ResultEntity.usoEntity.getter()
{
  return MEMORY[0x24BE70730]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_ResultEntity()
{
  return MEMORY[0x24BE70758]();
}

uint64_t Apple_Parsec_Siri_Legacy_ImageResource.resourceURL.getter()
{
  return MEMORY[0x24BE70768]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_ImageResource()
{
  return MEMORY[0x24BE70770]();
}

uint64_t Apple_Parsec_Siri_Context_SageAppEntity.flightEntity.setter()
{
  return MEMORY[0x24BE70800]();
}

uint64_t Apple_Parsec_Siri_Context_SageAppEntity.init()()
{
  return MEMORY[0x24BE70808]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Context_SageAppEntity()
{
  return MEMORY[0x24BE70810]();
}

uint64_t Apple_Parsec_Siri_V2alpha_CasinoSnippet.hasCardData.getter()
{
  return MEMORY[0x24BE708C0]();
}

uint64_t Apple_Parsec_Siri_V2alpha_CasinoSnippet.cardData.getter()
{
  return MEMORY[0x24BE708C8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_CasinoSnippet()
{
  return MEMORY[0x24BE708D0]();
}

uint64_t Searchfoundation_DescriptionCardSection.attributionURL.getter()
{
  return MEMORY[0x24BE708D8]();
}

uint64_t Searchfoundation_DescriptionCardSection.attributionText.getter()
{
  return MEMORY[0x24BE708E0]();
}

uint64_t Searchfoundation_DescriptionCardSection.descriptionText.getter()
{
  return MEMORY[0x24BE708E8]();
}

uint64_t type metadata accessor for Searchfoundation_DescriptionCardSection()
{
  return MEMORY[0x24BE708F0]();
}

uint64_t Apple_Parsec_Siri_V2alpha_SageExperience.appEntities.getter()
{
  return MEMORY[0x24BE70910]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_SageExperience()
{
  return MEMORY[0x24BE70918]();
}

uint64_t Apple_Parsec_Siri_Legacy_ImageLinkedAnswer.hasImageResource.getter()
{
  return MEMORY[0x24BE70A08]();
}

uint64_t Apple_Parsec_Siri_Legacy_ImageLinkedAnswer.imageResource.getter()
{
  return MEMORY[0x24BE70A10]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_ImageLinkedAnswer()
{
  return MEMORY[0x24BE70A18]();
}

uint64_t Searchfoundation_VerticalLayoutCardSection.hasThumbnail.getter()
{
  return MEMORY[0x24BE70A80]();
}

uint64_t Searchfoundation_VerticalLayoutCardSection.thumbnail.getter()
{
  return MEMORY[0x24BE70A88]();
}

uint64_t type metadata accessor for Searchfoundation_VerticalLayoutCardSection()
{
  return MEMORY[0x24BE70A90]();
}

uint64_t Apple_Parsec_Siri_V2alpha_GeoObjectComponent.geoObject.getter()
{
  return MEMORY[0x24BE70B70]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_GeoObjectComponent()
{
  return MEMORY[0x24BE70B78]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent.OneOf_Component()
{
  return MEMORY[0x24BE70C68]();
}

uint64_t Apple_Parsec_Siri_V2alpha_ExperienceComponent.component.getter()
{
  return MEMORY[0x24BE70C80]();
}

uint64_t Apple_Parsec_Siri_V2alpha_ExperienceComponent.init()()
{
  return MEMORY[0x24BE70C88]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent()
{
  return MEMORY[0x24BE70C90]();
}

uint64_t Searchfoundation_AttributionFooterCardSection.leadingAttribution.getter()
{
  return MEMORY[0x24BE70CC8]();
}

uint64_t Searchfoundation_AttributionFooterCardSection.leadingAttributionPunchout.getter()
{
  return MEMORY[0x24BE70CD0]();
}

uint64_t type metadata accessor for Searchfoundation_AttributionFooterCardSection()
{
  return MEMORY[0x24BE70CD8]();
}

uint64_t Apple_Parsec_Siri_V2alpha_AudioClientComponent.init()()
{
  return MEMORY[0x24BE70D30]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent()
{
  return MEMORY[0x24BE70D38]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent.OneOf_Component()
{
  return MEMORY[0x24BE70F10]();
}

uint64_t Apple_Parsec_Siri_V2alpha_DomainObjectComponent.component.getter()
{
  return MEMORY[0x24BE70F20]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent()
{
  return MEMORY[0x24BE70F28]();
}

uint64_t Apple_Parsec_Siri_Legacy_GeneralKnowledgeSnippet.pods.getter()
{
  return MEMORY[0x24BE70F98]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_Legacy_GeneralKnowledgeSnippet()
{
  return MEMORY[0x24BE70FA0]();
}

uint64_t Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent.compactSnippet.getter()
{
  return MEMORY[0x24BE70FD8]();
}

uint64_t Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent.perResultLayoutDetails.getter()
{
  return MEMORY[0x24BE70FE0]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent()
{
  return MEMORY[0x24BE70FE8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet()
{
  return MEMORY[0x24BE71018]();
}

uint64_t Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.snippet.getter()
{
  return MEMORY[0x24BE71028]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails()
{
  return MEMORY[0x24BE71030]();
}

uint64_t Apple_Parsec_Siri_V2alpha_RenderedDialogComponent.print.getter()
{
  return MEMORY[0x24BE710B0]();
}

uint64_t Apple_Parsec_Siri_V2alpha_RenderedDialogComponent.speak.getter()
{
  return MEMORY[0x24BE710B8]();
}

uint64_t type metadata accessor for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent()
{
  return MEMORY[0x24BE710C0]();
}

uint64_t SnippetPluginModel.data.getter()
{
  return MEMORY[0x24BEAA5E0]();
}

uint64_t ProtobufBuilder.serializedData()()
{
  return MEMORY[0x24BEAB8F0]();
}

uint64_t type metadata accessor for Response()
{
  return MEMORY[0x24BEAD3D0]();
}

uint64_t isFeatureEnabled(_:)()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t dispatch thunk of FeatureFlagsKey.domain.getter()
{
  return MEMORY[0x24BE30BF0]();
}

uint64_t dispatch thunk of FeatureFlagsKey.feature.getter()
{
  return MEMORY[0x24BE30BF8]();
}

uint64_t static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisID.getter()
{
  return MEMORY[0x24BE67F60]();
}

uint64_t static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter()
{
  return MEMORY[0x24BE67F70]();
}

uint64_t static Catalog.ResourceBundle.TokenGeneration.LLM.PhotosMemoriesCreationQueryUnderstandingID.getter()
{
  return MEMORY[0x24BE67FB0]();
}

uint64_t static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  return MEMORY[0x24BE68148]();
}

uint64_t dispatch thunk of CatalogResource.id.getter()
{
  return MEMORY[0x24BE68320]();
}

uint64_t ResourceBundleIdentifier.init(stringLiteral:)()
{
  return MEMORY[0x24BE68688]();
}

uint64_t type metadata accessor for LLMBundle()
{
  return MEMORY[0x24BE68860]();
}

uint64_t Siri_Nlu_External_UserDialogAct.init()()
{
  return MEMORY[0x24BE9C820]();
}

uint64_t type metadata accessor for Siri_Nlu_External_UserDialogAct()
{
  return MEMORY[0x24BE9C828]();
}

uint64_t InputOrigin.init(rawValue:)()
{
  return MEMORY[0x24BEA8A38]();
}

uint64_t type metadata accessor for InputOrigin()
{
  return MEMORY[0x24BEA8A48]();
}

uint64_t DeviceRestrictions.init(rawValue:)()
{
  return MEMORY[0x24BEA8D38]();
}

uint64_t SearchResultType.rawValue.getter()
{
  return MEMORY[0x24BE6E210]();
}

uint64_t type metadata accessor for SearchResultType()
{
  return MEMORY[0x24BE6E228]();
}

uint64_t SearchGlobalEntity.experienceFile.setter()
{
  return MEMORY[0x24BE6E258]();
}

uint64_t SearchGlobalEntity.associatedQuery.setter()
{
  return MEMORY[0x24BE6E260]();
}

uint64_t SearchGlobalEntity.init(overridePayload:)()
{
  return MEMORY[0x24BE6E268]();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchGlobalEntity.validateParameters()()
{
  MEMORY[0x24BE6E278]();
}

uint64_t SearchGlobalEntity.validTypeIdentifiers.getter()
{
  return MEMORY[0x24BE6E280]();
}

uint64_t SearchGlobalEntity.text.getter()
{
  return MEMORY[0x24BE6E288]();
}

uint64_t SearchGlobalEntity.domain.getter()
{
  return MEMORY[0x24BE6E290]();
}

uint64_t SearchGlobalEntity.init(entity:domain:isLowConfidenceKnowledge:)()
{
  return MEMORY[0x24BE6E298]();
}

uint64_t SearchGlobalEntity.Builder.lowConfidenceKnowledge.setter()
{
  return MEMORY[0x24BE6E2A0]();
}

uint64_t SearchGlobalEntity.Builder.id.setter()
{
  return MEMORY[0x24BE6E2A8]();
}

uint64_t SearchGlobalEntity.Builder.text.setter()
{
  return MEMORY[0x24BE6E2B0]();
}

uint64_t SearchGlobalEntity.Builder.domain.setter()
{
  return MEMORY[0x24BE6E2B8]();
}

uint64_t type metadata accessor for SearchGlobalEntity()
{
  return MEMORY[0x24BE6E2C0]();
}

uint64_t SearchGlobalEntity.init(_:)()
{
  return MEMORY[0x24BE6E2E0]();
}

uint64_t type metadata accessor for SearchTransferabilityError.Code()
{
  return MEMORY[0x24BE6E2F8]();
}

uint64_t SearchTransferabilityError.init(code:sourceResultType:targetTransferType:)()
{
  return MEMORY[0x24BE6E300]();
}

uint64_t type metadata accessor for SearchTransferabilityError()
{
  return MEMORY[0x24BE6E308]();
}

uint64_t static ExperienceProviding<>.experienceTransferableRepresentation()()
{
  return MEMORY[0x24BE6E318]();
}

uint64_t ExperienceProviding.experiences.getter()
{
  return MEMORY[0x24BE6E320]();
}

uint64_t MemoryCreationQUParse.attributes.getter()
{
  return MEMORY[0x24BE6E328]();
}

uint64_t MemoryCreationQUParse.isOpenEndedTimeRange.getter()
{
  return MEMORY[0x24BE6E330]();
}

uint64_t MemoryCreationQUParse.init(query:attributes:isTrip:isOpenEndedTimeRange:sortOrder:)()
{
  return MEMORY[0x24BE6E338]();
}

uint64_t MemoryCreationQUParse.query.getter()
{
  return MEMORY[0x24BE6E340]();
}

uint64_t dispatch thunk of MemoryCreationQUParse.encode()()
{
  return MEMORY[0x24BE6E348]();
}

uint64_t MemoryCreationQUParse.isTrip.getter()
{
  return MEMORY[0x24BE6E350]();
}

uint64_t type metadata accessor for MemoryCreationQUParse()
{
  return MEMORY[0x24BE6E358]();
}

uint64_t type metadata accessor for MemoryCreationQUParseSortOrder()
{
  return MEMORY[0x24BE6E380]();
}

uint64_t MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)()
{
  return MEMORY[0x24BE6E390]();
}

uint64_t MemoryCreationQUParseAttributes.attributeKey.getter()
{
  return MEMORY[0x24BE6E398]();
}

uint64_t MemoryCreationQUParseAttributes.expansionDateValues.getter()
{
  return MEMORY[0x24BE6E3A0]();
}

uint64_t MemoryCreationQUParseAttributes.expansionStringValues.getter()
{
  return MEMORY[0x24BE6E3A8]();
}

uint64_t MemoryCreationQUParseAttributes.range.getter()
{
  return MEMORY[0x24BE6E3B0]();
}

uint64_t type metadata accessor for MemoryCreationQUParseAttributes()
{
  return MEMORY[0x24BE6E3B8]();
}

uint64_t TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)()
{
  return MEMORY[0x24BE3BDA8]();
}

{
  return MEMORY[0x24BE3BDB0]();
}

Swift::Void __swiftcall TokenGenerator.prewarm()()
{
  MEMORY[0x24BEB8028]();
}

uint64_t type metadata accessor for TokenGenerator()
{
  return MEMORY[0x24BEB8040]();
}

uint64_t static CachePolicy.inMemory.getter()
{
  return MEMORY[0x24BEB80B0]();
}

uint64_t type metadata accessor for CachePolicy()
{
  return MEMORY[0x24BEB80B8]();
}

uint64_t static SamplingStrategy.topK(_:)()
{
  return MEMORY[0x24BEB82B0]();
}

uint64_t type metadata accessor for SamplingStrategy()
{
  return MEMORY[0x24BEB82F0]();
}

uint64_t SamplingParameters.speculativeSampling.setter()
{
  return MEMORY[0x24BEB8310]();
}

uint64_t SamplingParameters.tokenHealing.setter()
{
  return MEMORY[0x24BEB8330]();
}

uint64_t SamplingParameters.promptLookupDraftSteps.setter()
{
  return MEMORY[0x24BEB8368]();
}

uint64_t SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)()
{
  return MEMORY[0x24BEB8378]();
}

uint64_t type metadata accessor for SamplingParameters()
{
  return MEMORY[0x24BEB8388]();
}

uint64_t DataRepresentation.init(exportedContentType:exporting:)()
{
  return MEMORY[0x24BDC5038]();
}

uint64_t ProxyRepresentation.init(exporting:)()
{
  return MEMORY[0x24BDC5088]();
}

uint64_t TransferRepresentation.exportingCondition(_:)()
{
  return MEMORY[0x24BDC50D0]();
}

uint64_t TupleTransferRepresentation.init(_:)()
{
  return MEMORY[0x24BDC50E8]();
}

uint64_t static _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadataCompletionPrompt(_:)()
{
  return MEMORY[0x24BE3C3B8]();
}

uint64_t GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)()
{
  return MEMORY[0x24BE3BDD0]();
}

uint64_t type metadata accessor for GenerativeModelSessionConfiguration()
{
  return MEMORY[0x24BE3BDD8]();
}

uint64_t type metadata accessor for StringResponseSanitizer.Guardrails()
{
  return MEMORY[0x24BE3C450]();
}

uint64_t type metadata accessor for StringResponseSanitizer.DefaultableOverrides()
{
  return MEMORY[0x24BE3C468]();
}

uint64_t type metadata accessor for StringResponseSanitizer.DefaultableGuardrails()
{
  return MEMORY[0x24BE3C478]();
}

uint64_t type metadata accessor for StringResponseSanitizer.Overrides()
{
  return MEMORY[0x24BE3C488]();
}

uint64_t StringResponseSanitizer.init(overrides:guardrails:)()
{
  return MEMORY[0x24BE3C490]();
}

uint64_t type metadata accessor for StringResponseSanitizer()
{
  return MEMORY[0x24BE3C4A8]();
}

uint64_t static _OverrideConfigurationHelper.samplingParameters(_:)()
{
  return MEMORY[0x24BEB8618]();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizer.Guardrails()
{
  return MEMORY[0x24BE3C510]();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizer.DefaultableOverrides()
{
  return MEMORY[0x24BE3C528]();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizer.DefaultableGuardrails()
{
  return MEMORY[0x24BE3C538]();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizer.Overrides()
{
  return MEMORY[0x24BE3C548]();
}

uint64_t StringRenderedPromptSanitizer.init(overrides:guardrails:)()
{
  return MEMORY[0x24BE3C550]();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizer()
{
  return MEMORY[0x24BE3C560]();
}

uint64_t _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)()
{
  return MEMORY[0x24BE3C570]();
}

uint64_t type metadata accessor for _ClientInfoSessionTrackingConfig()
{
  return MEMORY[0x24BE3C588]();
}

uint64_t static RGPluginModel.bundleName.getter()
{
  return MEMORY[0x24BE52508]();
}

uint64_t type metadata accessor for RGPluginModel()
{
  return MEMORY[0x24BE52530]();
}

uint64_t Regex.init(_regexString:version:)()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t Regex.firstMatch(in:)()
{
  return MEMORY[0x24BEE73C8]();
}

uint64_t Regex.ignoresCase(_:)()
{
  return MEMORY[0x24BEE73E0]();
}

uint64_t Regex.Match.subscript.getter()
{
  return MEMORY[0x24BEE7408]();
}

{
  return MEMORY[0x24BEE7410]();
}

uint64_t Regex.Match.output.getter()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t type metadata accessor for Regex()
{
  return MEMORY[0x24BEE7450]();
}

uint64_t static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)()
{
  return MEMORY[0x24BE3AEC0]();
}

uint64_t static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)()
{
  return MEMORY[0x24BE3AEC8]();
}

uint64_t _GenerativeFunctionInternals_Metadata.functionIdentifier.getter()
{
  return MEMORY[0x24BE3AED8]();
}

uint64_t type metadata accessor for _GenerativeFunctionInternals_Metadata()
{
  return MEMORY[0x24BE3AEE8]();
}

uint64_t type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt()
{
  return MEMORY[0x24BE3AF08]();
}

uint64_t GenerativeConfigurationRunnable<>.run(returning:)()
{
  return MEMORY[0x24BE3AF58]();
}

uint64_t GenerativeConfigurationRunnable<>.run<A>(type:returning:)()
{
  return MEMORY[0x24BE3AF78]();
}

uint64_t ViewService.visualIdentifierView()()
{
  return MEMORY[0x24BE58090]();
}

uint64_t static ViewService.clientService.getter()
{
  return MEMORY[0x24BE581A0]();
}

uint64_t type metadata accessor for ViewService()
{
  return MEMORY[0x24BE581A8]();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forRequest:)()
{
  return MEMORY[0x24BE583B0]();
}

uint64_t EntityResolutionTextClient.init(for:viaXPC:warmup:)()
{
  return MEMORY[0x24BE583B8]();
}

uint64_t type metadata accessor for EntityResolutionTextClient()
{
  return MEMORY[0x24BE583C0]();
}

uint64_t Google_Protobuf_Timestamp.init(date:)()
{
  return MEMORY[0x24BE5B978]();
}

uint64_t type metadata accessor for Google_Protobuf_Timestamp()
{
  return MEMORY[0x24BE5B990]();
}

uint64_t type metadata accessor for Google_Protobuf_Any()
{
  return MEMORY[0x24BE5BDE8]();
}

uint64_t UnknownStorage.traverse<A>(visitor:)()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t UnknownStorage.init()()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t type metadata accessor for UnknownStorage()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t JSONDecodingOptions.init()()
{
  return MEMORY[0x24BE5BF90]();
}

uint64_t type metadata accessor for JSONDecodingOptions()
{
  return MEMORY[0x24BE5BF98]();
}

uint64_t JSONEncodingOptions.init()()
{
  return MEMORY[0x24BE5BFA8]();
}

uint64_t type metadata accessor for JSONEncodingOptions()
{
  return MEMORY[0x24BE5BFB0]();
}

uint64_t BinaryDecodingOptions.init()()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t type metadata accessor for BinaryDecodingOptions()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t _MessageImplementationBase.isEqualTo(message:)()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t Enum.hash(into:)()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)()
{
  return MEMORY[0x24BE5C0C8]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt64Field(value:)()
{
  return MEMORY[0x24BE5C0D8]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)()
{
  return MEMORY[0x24BE5C108]();
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt32Field(value:)()
{
  return MEMORY[0x24BE5C130]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t Message.jsonString(options:)()
{
  return MEMORY[0x24BE5C188]();
}

uint64_t Message.init(jsonString:options:)()
{
  return MEMORY[0x24BE5C190]();
}

uint64_t Message.init(jsonUTF8Data:options:)()
{
  return MEMORY[0x24BE5C1A0]();
}

uint64_t Message.init(unpackingAny:extensions:options:)()
{
  return MEMORY[0x24BE5C1A8]();
}

uint64_t Message.isInitialized.getter()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t Message.init(serializedData:extensions:partial:options:)()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t Message.serializedData(partial:)()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t Message.debugDescription.getter()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t Message.hash(into:)()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t static Message.with(_:)()
{
  return MEMORY[0x24BE5C1F0]();
}

uint64_t Message.merge(serializedData:extensions:partial:options:)()
{
  return MEMORY[0x24BE5C1F8]();
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2B0]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t type metadata accessor for _NameMap.NameDescription()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t _NameMap.init(dictionaryLiteral:)()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t type metadata accessor for _NameMap()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t SageSearch.init()()
{
  return MEMORY[0x24BE945D0]();
}

uint64_t type metadata accessor for SageSearch()
{
  return MEMORY[0x24BE945D8]();
}

uint64_t dispatch thunk of Experience.queryConfidence.getter()
{
  return MEMORY[0x24BE94670]();
}

uint64_t dispatch thunk of Experience.associatedEntities.getter()
{
  return MEMORY[0x24BE94678]();
}

uint64_t type metadata accessor for Experience()
{
  return MEMORY[0x24BE94680]();
}

uint64_t dispatch thunk of PommesResponse.experiences.getter()
{
  return MEMORY[0x24BE946F0]();
}

uint64_t PommesResponse.metadataDomainName.getter()
{
  return MEMORY[0x24BE946F8]();
}

uint64_t PommesResponse.isLowConfidenceKnowledgeResult.getter()
{
  return MEMORY[0x24BE94708]();
}

uint64_t AudioExperience.__allocating_init(pluginId:audioClientComponent:queryConfidenceScore:usoGraphData:isGlideEligible:)()
{
  return MEMORY[0x24BE94720]();
}

uint64_t type metadata accessor for AudioExperience()
{
  return MEMORY[0x24BE94728]();
}

uint64_t dispatch thunk of GenericExperience.sageExperience.getter()
{
  return MEMORY[0x24BE94748]();
}

uint64_t GenericExperience.init(components:queryConfidenceScore:userDialogAct:renderOptions:)()
{
  return MEMORY[0x24BE94750]();
}

uint64_t GenericExperience.components.getter()
{
  return MEMORY[0x24BE94758]();
}

uint64_t type metadata accessor for GenericExperience()
{
  return MEMORY[0x24BE94760]();
}

uint64_t PommesRenderOptions.__allocating_init()()
{
  return MEMORY[0x24BE94768]();
}

uint64_t type metadata accessor for PommesRenderOptions()
{
  return MEMORY[0x24BE94770]();
}

uint64_t UTType.init(exportedAs:conformingTo:)()
{
  return MEMORY[0x24BEE6188]();
}

uint64_t UTType.identifier.getter()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t static UTType.emailMessage.getter()
{
  return MEMORY[0x24BEE61D0]();
}

uint64_t static UTType.calendarEvent.getter()
{
  return MEMORY[0x24BEE61E0]();
}

UTType __swiftcall UTType._bridgeToObjectiveC()()
{
  return (UTType)MEMORY[0x24BEE6238]();
}

uint64_t static UTType.data.getter()
{
  return MEMORY[0x24BEE62A8]();
}

uint64_t static UTType.contact.getter()
{
  return MEMORY[0x24BEE6340]();
}

uint64_t static UTType.message.getter()
{
  return MEMORY[0x24BEE6358]();
}

uint64_t static UTType.plainText.getter()
{
  return MEMORY[0x24BEE63B0]();
}

uint64_t type metadata accessor for UTType()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t UTType.init(_:)()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)()
{
  return MEMORY[0x24BE3C660]();
}

{
  return MEMORY[0x24BE3C668]();
}

uint64_t type metadata accessor for PromptTemplate()
{
  return MEMORY[0x24BE3C680]();
}

uint64_t GeneratedValues.extract<A>(field:)()
{
  return MEMORY[0x24BE3B558]();
}

{
  return MEMORY[0x24BE3B560]();
}

uint64_t type metadata accessor for GeneratedValues()
{
  return MEMORY[0x24BE3B568]();
}

uint64_t FunctionIdentifier.init(identifier:resourceInformation:)()
{
  return MEMORY[0x24BE3B6C8]();
}

uint64_t type metadata accessor for FunctionIdentifier.ResourceInformation()
{
  return MEMORY[0x24BE3B6F0]();
}

uint64_t type metadata accessor for FunctionIdentifier()
{
  return MEMORY[0x24BE3B708]();
}

uint64_t Schema.Field.init<A>(name:type:)()
{
  return MEMORY[0x24BE3B978]();
}

{
  return MEMORY[0x24BE3B980]();
}

uint64_t type metadata accessor for Schema.Field()
{
  return MEMORY[0x24BE3B988]();
}

uint64_t Schema.init(fields:)()
{
  return MEMORY[0x24BE3B998]();
}

uint64_t type metadata accessor for Schema()
{
  return MEMORY[0x24BE3B9A0]();
}

uint64_t OSSignpostID.init(log:)()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t OSSignposter.init(logger:)()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t OSSignposter.logHandle.getter()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t type metadata accessor for OSSignposter()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t type metadata accessor for TypeIdentifier.PrimitiveTypeIdentifier()
{
  return MEMORY[0x24BEB9CD8]();
}

uint64_t type metadata accessor for TypeIdentifier()
{
  return MEMORY[0x24BEB9D20]();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return MEMORY[0x24BEE5438]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t DispatchQoS.QoSClass.rawValue.getter()
{
  return MEMORY[0x24BEE54A8]();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t DispatchQoS.qosClass.getter()
{
  return MEMORY[0x24BEE54F8]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t type metadata accessor for CompletionPrompt()
{
  return MEMORY[0x24BE7A7E0]();
}

uint64_t CompletionPrompt.init(_:)()
{
  return MEMORY[0x24BE7A808]();
}

uint64_t static CustomPromptBuilder.buildBlock(_:)()
{
  return MEMORY[0x24BE7A900]();
}

uint64_t static CustomPromptBuilder.buildExpression(_:)()
{
  return MEMORY[0x24BE7A908]();
}

uint64_t type metadata accessor for Prompt()
{
  return MEMORY[0x24BE7AB88]();
}

uint64_t BindableVariable.init(name:)()
{
  return MEMORY[0x24BE7AC30]();
}

uint64_t type metadata accessor for BindableVariable()
{
  return MEMORY[0x24BE7AC50]();
}

uint64_t BindableConfiguration.init(name:)()
{
  return MEMORY[0x24BE7AC70]();
}

uint64_t type metadata accessor for BindableConfiguration()
{
  return MEMORY[0x24BE7AC80]();
}

uint64_t GenerativeConfigurationProtocol._addAssetCache()()
{
  return MEMORY[0x24BE3C8C8]();
}

uint64_t GenerativeConfigurationProtocol.functionIdentifier(_:)()
{
  return MEMORY[0x24BE3BA58]();
}

uint64_t GenerativeConfigurationProtocol._internalTrackingConfig(_:)()
{
  return MEMORY[0x24BE3BA68]();
}

uint64_t GenerativeConfigurationProtocol.renderedPromptSanitizer(_:)()
{
  return MEMORY[0x24BE3C338]();
}

uint64_t GenerativeConfigurationProtocol.responseSanitizer(_:)()
{
  return MEMORY[0x24BE3C340]();
}

uint64_t GenerativeConfigurationProtocol.samplingParameters(_:)()
{
  return MEMORY[0x24BEB8698]();
}

{
  return MEMORY[0x24BEB86A0]();
}

uint64_t GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)()
{
  return MEMORY[0x24BE3C8E0]();
}

uint64_t GenerativeConfigurationProtocol.with<A>(model:modelType:)()
{
  return MEMORY[0x24BE3B078]();
}

uint64_t GenerativeConfigurationProtocol.with<A>(model:)()
{
  return MEMORY[0x24BE3B080]();
}

uint64_t GenerativeConfigurationProtocol.bindVariables(_:)()
{
  return MEMORY[0x24BE7ACF8]();
}

uint64_t Array.init()()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t CancellationError.init()()
{
  return MEMORY[0x24BEE67F8]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x24BDCF808]();
}

uint64_t static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t Dictionary.description.getter()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x24BEE0618]();
}

Swift::String __swiftcall Character.lowercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BEE0680]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t Character.hash(into:)()
{
  return MEMORY[0x24BEE06E0]();
}

uint64_t BidirectionalCollection<>.firstMatch<A, B>(of:)()
{
  return MEMORY[0x24BEE75B8]();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return MEMORY[0x24BEE75F0]();
}

uint64_t BidirectionalCollection<>.contains<A>(_:)()
{
  return MEMORY[0x24BEE7600]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t type metadata accessor for String.IntentInputOptions()
{
  return MEMORY[0x24BDB6620]();
}

uint64_t String.init(contentsOf:encoding:)()
{
  return MEMORY[0x24BDCF870]();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return MEMORY[0x24BDCF8D8]();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
  MEMORY[0x24BDCF910](a1._countAndFlagsBits, a1._object);
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
  MEMORY[0x24BDCF930](a1._countAndFlagsBits, a1._object);
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return MEMORY[0x24BDCF938]();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return MEMORY[0x24BDCF948]();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return MEMORY[0x24BDCF978]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x24BDCF9E0]();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t String.init(data:encoding:)()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t String.init(format:_:)()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t static String.Encoding.utf8.getter()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t type metadata accessor for String.Encoding()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x24BEE09F0]();
}

{
  return MEMORY[0x24BEE09F8]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BEE0A08]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x24BEE0A50]();
}

Swift::String __swiftcall String.splitByCapitalLetters()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BE6E3C8]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall String.reserveCapacity(_:)(Swift::Int a1)
{
  MEMORY[0x24BEE0A70](a1);
}

uint64_t String.UnicodeScalarView.append<A>(contentsOf:)()
{
  return MEMORY[0x24BEE0A98]();
}

uint64_t String.UnicodeScalarView.append(_:)()
{
  return MEMORY[0x24BEE0AA0]();
}

uint64_t static String._fromUTF8Repairing(_:)()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t String.init(stringInterpolation:)()
{
  return MEMORY[0x24BEE0AE0]();
}

uint64_t String.text.getter()
{
  return MEMORY[0x24BE3BAA8]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t String.count.getter()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t String.index(_:offsetBy:)()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x24BEE0BB0]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x24BEE0BC0](a1._countAndFlagsBits, a1._object);
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = MEMORY[0x24BEE0C00]();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t String.UTF8View._foreignDistance(from:to:)()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t String.distance(from:to:)()
{
  return MEMORY[0x24BEE0C60]();
}

uint64_t String.UTF16View.count.getter()
{
  return MEMORY[0x24BEE0C90]();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t String.subscript.getter()
{
  return MEMORY[0x24BEE0D98]();
}

{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t String.init<A>(_:)()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t Sequence.enumerated()()
{
  return MEMORY[0x24BEE0E48]();
}

uint64_t Sequence.sorted(by:)()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t Sequence<>.min()()
{
  return MEMORY[0x24BEE0F10]();
}

uint64_t Sequence<>.contains(_:)()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t Sequence<>.joined(separator:)()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x24BEE1000]();
}

{
  return MEMORY[0x24BEE1058]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x24BEE1080]();
}

{
  return MEMORY[0x24BEE10D8]();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x24BEE1110]();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)MEMORY[0x24BDCFBA8]();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCFBC0]();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t Array.startIndex.getter()
{
  return MEMORY[0x24BEE1118]();
}

uint64_t Array.description.getter()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t specialized Array._endMutation()()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return MEMORY[0x24BEE1190]();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t Array.count.getter()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t Array.append(_:)()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t Array.endIndex.getter()
{
  return MEMORY[0x24BEE1220]();
}

Swift::Void __swiftcall Array.formIndex(after:)(Swift::Int *after)
{
  MEMORY[0x24BEE1230](after);
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t static Array<A>.== infix(_:_:)()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t Array.subscript.getter()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t type metadata accessor for Bool.IntentDisplayName()
{
  return MEMORY[0x24BDB6650]();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x24BDCFC08]();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t type metadata accessor for CancellationError()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t TaskGroup.makeAsyncIterator()()
{
  return MEMORY[0x24BEE6860]();
}

uint64_t TaskGroup.Iterator.next(isolation:)()
{
  return MEMORY[0x24BEE6888]();
}

uint64_t _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t TaskPriority.rawValue.getter()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t type metadata accessor for TaskPriority()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t static Task<>.isCancelled.getter()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t ThrowingTaskGroup.makeAsyncIterator()()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t ThrowingTaskGroup.next(isolation:)()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF()
{
  return MEMORY[0x24BEE6BB8]();
}

Swift::Void __swiftcall ThrowingTaskGroup.cancelAll()()
{
  MEMORY[0x24BEE6BE0]();
}

uint64_t Double.write<A>(to:)()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t Float.write<A>(to:)()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t Set.description.getter()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t Set.init(minimumCapacity:)()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t RandomAccessCollection<>.indices.getter()
{
  return MEMORY[0x24BEE1890]();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t dispatch thunk of Collection.indices.getter()
{
  return MEMORY[0x24BEE18F8]();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t Collection.prefix(_:)()
{
  return MEMORY[0x24BEE19A8]();
}

uint64_t Collection.isEmpty.getter()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t Collection<>.firstIndex(of:)()
{
  return MEMORY[0x24BEE1A00]();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)()
{
  return MEMORY[0x24BEE7668]();
}

uint64_t Range<>.init(_:in:)()
{
  return MEMORY[0x24BDCFD70]();
}

uint64_t Range.contains(_:)()
{
  return MEMORY[0x24BEE1B50]();
}

uint64_t NSDictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t static SACardSnippet.makeFromCard(card:shouldGenerateAceId:)()
{
  return MEMORY[0x24BE99118]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t OS_dispatch_semaphore.wait(timeout:)()
{
  return MEMORY[0x24BEE5918]();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
  MEMORY[0x24BEE5920]();
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t type metadata accessor for OS_dispatch_queue_serial.Attributes()
{
  return MEMORY[0x24BEE5930]();
}

uint64_t OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return MEMORY[0x24BEE5948]();
}

uint64_t static NSObject.== infix(_:_:)()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t _NSRange.init<A, B>(_:in:)()
{
  return MEMORY[0x24BDD0278]();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t StringProtocol.removingPercentEncoding.getter()
{
  return MEMORY[0x24BDD0590]();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t BinaryInteger.description.getter()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t type metadata accessor for ArraySlice()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t _expectEnd<A>(of:is:)()
{
  return MEMORY[0x24BEE2378]();
}

uint64_t AnyHashable.description.getter()
{
  return MEMORY[0x24BEE2398]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x24BEE23A0](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t static _SetStorage.copy(original:)()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return MEMORY[0x24BEE2508]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
  MEMORY[0x24BEE2510](a1);
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t StaticString.description.getter()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t type metadata accessor for DecodingError()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t withTaskGroup<A, B>(of:returning:isolation:body:)()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return MEMORY[0x24BEE2938]();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
  MEMORY[0x24BEE2950](a1);
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t ContiguousArray.append(_:)()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t ContiguousArray.init()()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t ContinuousClock.init()()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t dispatch thunk of _AnySequenceBox._makeIterator()()
{
  return MEMORY[0x24BEE2B80]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x24BEE2BE0]();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return MEMORY[0x24BEE2E58](isUnique, capacity);
}

Swift::Void __swiftcall _NativeDictionary.copy()()
{
  MEMORY[0x24BEE2E68]();
}

uint64_t _NativeDictionary._delete(at:)()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE2F40]();
}

{
  return MEMORY[0x24BEE2F48]();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return MEMORY[0x24BEE2FB0]();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t dispatch thunk of _AnyIteratorBoxBase.next()()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return MEMORY[0x24BEE31D0]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x24BEE3290](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t withThrowingTaskGroup<A, B>(of:returning:isolation:body:)()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return MEMORY[0x24BEE32D8]();
}

{
  return MEMORY[0x24BEE32E0]();
}

{
  return MEMORY[0x24BEE32F8]();
}

{
  return MEMORY[0x24BEE3340]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x24BEE3350]();
}

{
  return MEMORY[0x24BEE3358]();
}

{
  return MEMORY[0x24BEE3368]();
}

{
  return MEMORY[0x24BEE3370]();
}

{
  return MEMORY[0x24BEE33C0]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t KeyedDecodingContainer.contains(_:)()
{
  return MEMORY[0x24BEE33D0]();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return MEMORY[0x24BEE3428]();
}

{
  return MEMORY[0x24BEE3430]();
}

{
  return MEMORY[0x24BEE3448]();
}

{
  return MEMORY[0x24BEE3488]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x24BEE34A0]();
}

{
  return MEMORY[0x24BEE34A8]();
}

{
  return MEMORY[0x24BEE34B8]();
}

{
  return MEMORY[0x24BEE34C0]();
}

{
  return MEMORY[0x24BEE3510]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE34D0]();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return MEMORY[0x24BEE3548](a1);
}

uint64_t _stringCompareInternal(_:_:_:_:expecting:)()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t AsyncCompactMapSequence.base.getter()
{
  return MEMORY[0x24BEE6FC8]();
}

uint64_t AsyncCompactMapSequence.Iterator.baseIterator.modify()
{
  return MEMORY[0x24BEE6FD0]();
}

uint64_t AsyncCompactMapSequence.Iterator.transform.getter()
{
  return MEMORY[0x24BEE6FE8]();
}

uint64_t AsyncCompactMapSequence.Iterator.init(_:transform:)()
{
  return MEMORY[0x24BEE7000]();
}

uint64_t AsyncCompactMapSequence.transform.getter()
{
  return MEMORY[0x24BEE7010]();
}

uint64_t AsyncCompactMapSequence.init(_:transform:)()
{
  return MEMORY[0x24BEE7028]();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t withCheckedContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x24BEE7040]();
}

Swift::Void __swiftcall DefaultStringInterpolation.appendLiteral(_:)(Swift::String a1)
{
  MEMORY[0x24BEE3948](a1._countAndFlagsBits, a1._object);
}

uint64_t DefaultStringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return MEMORY[0x24BEE3950]();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t withCheckedThrowingContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t dispatch thunk of Clock.sleep(until:tolerance:)()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t Error.localizedDescription.getter()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t Error._getEmbeddedNSError()()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t Error._code.getter()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t Error._domain.getter()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t Error._userInfo.getter()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x24BEE42E0]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
  MEMORY[0x24BEE42F8](a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
  MEMORY[0x24BEE4300](a1);
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t Mirror.init(reflecting:)()
{
  return MEMORY[0x24BEE4358]();
}

uint64_t Mirror.children.getter()
{
  return MEMORY[0x24BEE43D0]();
}

uint64_t type metadata accessor for Mirror()
{
  return MEMORY[0x24BEE43D8]();
}

uint64_t dispatch thunk of Decoder.codingPath.getter()
{
  return MEMORY[0x24BEE45E8]();
}

uint64_t dispatch thunk of Decoder.singleValueContainer()()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t dispatch thunk of Encoder.singleValueContainer()()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t Duration.description.getter()
{
  return MEMORY[0x24BEE4830]();
}

uint64_t CodingKey.description.getter()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t CodingKey.debugDescription.getter()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t _typeName(_:qualified:)()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AFIsInternalInstall()
{
  return MEMORY[0x24BE08DA8]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x24BDBB780]();
  return result;
}

uint64_t IMSPIQueryMessagesWithGUIDsAndQOS()
{
  return MEMORY[0x24BE501F8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x24BDAEC68](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x24BDB02E8](*(_QWORD *)&a1);
}

void vDSP_dotpr(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Length __N)
{
  MEMORY[0x24BDB31D0](__A, __IA, __B, __IB, __C, __N);
}

void vDSP_svesq(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
  MEMORY[0x24BDB32F0](__A, __IA, __C, __N);
}

