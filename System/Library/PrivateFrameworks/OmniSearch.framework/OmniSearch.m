uint64_t protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((int)*MEMORY[0x24BE945C8] + MEMORY[0x24BE945C8]);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = protocol witness for SageSearchClient.search(query:clientEntities:location:) in conformance SageSearch;
  return v11(a1, a2, a3, a4);
}

const char *GlobalSearchClient.kWebIndexDomain.unsafeMutableAddressor()
{
  return "web_index";
}

uint64_t static GlobalSearchClient.kWebIndexDomain.getter()
{
  return 0x65646E695F626577;
}

const char *GlobalSearchClient.kWebIndexDomainV2.unsafeMutableAddressor()
{
  return "v2_web_index";
}

uint64_t static GlobalSearchClient.kWebIndexDomainV2.getter()
{
  return 0x695F6265775F3276;
}

uint64_t one-time initialization function for webDomains()
{
  uint64_t result;

  result = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for webDomains);
  static GlobalSearchClient.webDomains = result;
  return result;
}

uint64_t *GlobalSearchClient.webDomains.unsafeMutableAddressor()
{
  if (one-time initialization token for webDomains != -1)
    swift_once();
  return &static GlobalSearchClient.webDomains;
}

uint64_t static GlobalSearchClient.webDomains.getter()
{
  if (one-time initialization token for webDomains != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void GlobalSearchClient.supportedSearchSources.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_109(a1);
}

uint64_t GlobalSearchClient.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

void default argument 0 of GlobalSearchClient.init(client:session:)(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_27();
  v3 = OUTLINED_FUNCTION_81();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for SageSearch;
  *a1 = v3;
  OUTLINED_FUNCTION_12();
}

id default argument 1 of GlobalSearchClient.init(client:session:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedSession);
}

void GlobalSearchClient.__allocating_init(client:session:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_8();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_101();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_26(v1, v2, v3);
  OUTLINED_FUNCTION_38();
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_63();
}

void GlobalSearchClient.init(client:session:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_106();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_101();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_26(v2, v3, v4);
  OUTLINED_FUNCTION_38();
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_63();
}

uint64_t GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 96) = a4;
  *(_QWORD *)(v8 + 104) = v7;
  *(_QWORD *)(v8 + 80) = a2;
  *(_QWORD *)(v8 + 88) = a3;
  *(_QWORD *)(v8 + 72) = a1;
  v11 = type metadata accessor for OSSignpostError();
  *(_QWORD *)(v8 + 112) = v11;
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 128) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 136) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 144) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 152) = OUTLINED_FUNCTION_17();
  v12 = type metadata accessor for OSSignpostID();
  *(_QWORD *)(v8 + 160) = v12;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 176) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 184) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 192) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 200) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 208) = OUTLINED_FUNCTION_17();
  v13 = OUTLINED_FUNCTION_17();
  v14 = *a5;
  *(_QWORD *)(v8 + 216) = v13;
  *(_QWORD *)(v8 + 224) = v14;
  *(_BYTE *)(v8 + 296) = *a7;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

uint64_t GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  BOOL v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(_QWORD, _QWORD, _QWORD, uint64_t);
  __int128 v31;

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = type metadata accessor for OSSignposter();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if ((OUTLINED_FUNCTION_108() & 1) != 0)
  {
    v3 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v3 = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_79();
    _os_signpost_emit_with_name_impl(&dword_24315F000, v2, v4, v5, "GlobalSearchClient.search", "", v3, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(unsigned __int8 *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v8, v9);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v0 + 240) = OSSignpostIntervalState.init(id:isOpen:)();
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v0 + 248) = v11;
  v11(v8, v9);
  *(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag;
  *(_QWORD *)(v0 + 48) = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
  *(_BYTE *)(v0 + 16) = 0;
  LOBYTE(v7) = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if ((v7 & 1) != 0
    && v6
    && (*(_QWORD *)(v0 + 72) == *(_QWORD *)(v0 + 88) ? (v12 = *(_QWORD *)(v0 + 80) == *(_QWORD *)(v0 + 96)) : (v12 = 0),
        !v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_13();
    v21 = OUTLINED_FUNCTION_28(v20, (uint64_t)static Logging.search);
    v22 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_65(v22))
    {
      v23 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v23);
      OUTLINED_FUNCTION_11(&dword_24315F000, v21, (os_log_type_t)(v0 + 16), "GlobalSearch: federating two calls");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v24 = *(_QWORD *)(v0 + 224);
    v25 = *(_QWORD *)(v0 + 104);
    v31 = *(_OWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 80);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
    v28 = swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v28;
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = v27;
    *(_QWORD *)(v28 + 32) = v26;
    *(_OWORD *)(v28 + 40) = v31;
    *(_QWORD *)(v28 + 56) = v24;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [GlobalSearchClient.QueryType : Result<[SearchResult], Error>]);
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v29;
    *v29 = v0;
    v29[1] = GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
    return withTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  else
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_13();
    v14 = OUTLINED_FUNCTION_28(v13, (uint64_t)static Logging.search);
    v15 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_65(v15))
    {
      v16 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v16);
      OUTLINED_FUNCTION_11(&dword_24315F000, v14, (os_log_type_t)(v0 + 16), "GlobalSearch: no federation - searching with rewritten query");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v17 = *(_QWORD *)(v0 + 224);

    *(_QWORD *)(v0 + 56) = v17;
    v18 = (_QWORD *)OUTLINED_FUNCTION_6();
    *(_QWORD *)(v0 + 272) = v18;
    *v18 = v0;
    v18[1] = GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
    return v30(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), MEMORY[0x24BEE4AF8], v0 + 56);
  }
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_30(&v2);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  char v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  _WORD *v13;
  os_signpost_type_t v14;
  os_signpost_id_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v19;
  NSObject *v20;
  uint64_t v21;
  _WORD *v22;
  os_signpost_type_t v23;
  os_signpost_id_t v24;
  NSObject *v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_60();
  v1 = *(_QWORD *)(v0 + 64);
  specialized Dictionary.subscript.getter(0, v1);
  OUTLINED_FUNCTION_77();
  if (v4)
    goto LABEL_7;
  v5 = v2;
  v6 = v3;
  if ((v3 & 1) == 0 || (specialized Dictionary.subscript.getter(1, v1), OUTLINED_FUNCTION_77(), v4))
  {
LABEL_6:
    outlined consume of Result<[SearchResult], Error>?(v5, v6);
LABEL_7:
    v10 = GlobalSearchClient.rankGlobalResponses(_:)();
    OUTLINED_FUNCTION_47();
    v11 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    v28 = v10;
    if ((OUTLINED_FUNCTION_52() & 1) != 0)
    {
      OUTLINED_FUNCTION_75();
      checkForErrorAndConsumeState(state:)();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_68() != *MEMORY[0x24BEE7810])
        OUTLINED_FUNCTION_46(*(_QWORD *)(v0 + 144));
      v13 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_61(v13);
      OUTLINED_FUNCTION_79();
      OUTLINED_FUNCTION_16(&dword_24315F000, v11, v14, v15, "GlobalSearchClient.search");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v12 = *(_QWORD *)(v0 + 192);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v17 = *(_QWORD *)(v0 + 160);
    OUTLINED_FUNCTION_32(v11);
    v16(v12, v17);
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_91();
    swift_task_dealloc();
    OUTLINED_FUNCTION_89();
    swift_task_dealloc();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    return OUTLINED_FUNCTION_20(v28, *(uint64_t (**)(void))(v0 + 8));
  }
  v9 = v7;
  if ((v8 & 1) == 0)
  {
    outlined consume of Result<[SearchResult], Error>?(v7, v8);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_47();
  lazy protocol witness table accessor for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError();
  swift_allocError();
  *v19 = v5;
  v19[1] = v9;
  swift_willThrow();
  v20 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_108() & 1) != 0)
  {
    OUTLINED_FUNCTION_75();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_68() != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_46(*(_QWORD *)(v0 + 152));
    v22 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_61(v22);
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_16(&dword_24315F000, v20, v23, v24, "GlobalSearchClient.search");
    specialized UnsafeMutablePointer.deallocate()();
  }
  v21 = *(_QWORD *)(v0 + 200);
  v25 = v20;
  v26 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v27 = *(_QWORD *)(v0 + 160);
  OUTLINED_FUNCTION_32(v25);
  v26(v21, v27);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89();
  swift_task_dealloc();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_19(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  _WORD *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_60();
  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_72();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_52() & 1) != 0)
  {
    OUTLINED_FUNCTION_75();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_78() != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_46(*(_QWORD *)(v1 + 136));
    v4 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_62(v4);
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_16(&dword_24315F000, v2, v5, v6, "GlobalSearchClient.search");
    specialized UnsafeMutablePointer.deallocate()();
  }
  v3 = *(_QWORD *)(v1 + 184);
  v9 = *(_QWORD *)(v1 + 280);
  v7 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
  OUTLINED_FUNCTION_36(v2);
  v7(v3, v0);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_20(v9, *(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  _WORD *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  void (*v7)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_60();
  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_72();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_52() & 1) != 0)
  {
    OUTLINED_FUNCTION_75();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_78() != *MEMORY[0x24BEE7810])
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 120) + 8))(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 112));
    v4 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_62(v4);
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_16(&dword_24315F000, v2, v5, v6, "GlobalSearchClient.search");
    specialized UnsafeMutablePointer.deallocate()();
  }
  v3 = *(_QWORD *)(v1 + 176);
  v7 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
  OUTLINED_FUNCTION_36(v2);
  v7(v3, v0);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_19(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t default argument 1 of GlobalSearchClient.search(content:entities:sources:)()
{
  return MEMORY[0x24BEE4AF8];
}

void specialized FeatureToggle<>.isEnabled.getter(char a1)
{
  _BYTE v2[24];
  ValueMetadata *v3;
  unint64_t v4;

  v3 = &type metadata for FeatureFlag;
  v4 = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
  v2[0] = a1;
  isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_94();
}

void specialized FeatureToggle<>.isEnabled.getter()
{
  _BYTE v0[24];
  ValueMetadata *v1;
  unint64_t v2;

  v1 = &type metadata for PhotosFeatureFlag;
  v2 = lazy protocol witness table accessor for type PhotosFeatureFlag and conformance PhotosFeatureFlag();
  isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  OUTLINED_FUNCTION_94();
}

uint64_t closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a3;
  v8[13] = a4;
  v8[10] = a1;
  v8[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v8[18] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v8[22] = v10;
  v8[23] = *(_QWORD *)(v10 - 8);
  v8[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v8[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);

  v1 = v0[25];
  v16 = v0[20];
  v14 = v0[21];
  v15 = v0[19];
  v2 = v0[13];
  v12 = v2;
  v3 = (_QWORD *)v0[11];
  v4 = v0[12];
  v13 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_49(v1, v5, v6, v13);
  v7 = (_QWORD *)OUTLINED_FUNCTION_8();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = v2;
  OUTLINED_FUNCTION_86(v7);
  OUTLINED_FUNCTION_64();
  swift_bridgeObjectRetain();
  _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), (uint64_t)v7);
  OUTLINED_FUNCTION_92();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v13);
  v8 = (_QWORD *)OUTLINED_FUNCTION_8();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v4;
  v8[5] = v12;
  OUTLINED_FUNCTION_86(v8);
  OUTLINED_FUNCTION_64();
  swift_bridgeObjectRetain();
  _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(v1, (uint64_t)&async function pointer to partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:), (uint64_t)v8);
  OUTLINED_FUNCTION_92();
  v0[7] = *v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)> and conformance TaskGroup<A>, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>);
  AsyncCompactMapSequence.init(_:transform:)();
  MEMORY[0x2494F65FC](v15);
  TaskGroup.makeAsyncIterator()();
  MEMORY[0x2494F662C](v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  v0[26] = MEMORY[0x24BEE4B00];
  v17 = (uint64_t (*)(uint64_t))((char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5Tu
                                        + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5Tu);
  v9 = (_QWORD *)swift_task_alloc();
  v0[27] = v9;
  v10 = OUTLINED_FUNCTION_57(v9, (uint64_t)closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:));
  return v17(v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);

  v1 = *(unsigned __int8 *)(v0 + 224);
  if (v1 == 2)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v3 = *(_QWORD **)(v0 + 80);
    OUTLINED_FUNCTION_45(*(_QWORD *)(v0 + 184));
    *v3 = v2;
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    swift_task_dealloc();
    OUTLINED_FUNCTION_99();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 208);
    v7 = *(_BYTE *)(v0 + 40) & 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v5, v7, v1 & 1, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 208) = v6;
    v9 = (_QWORD *)OUTLINED_FUNCTION_6();
    *(_QWORD *)(v0 + 216) = v9;
    v10 = OUTLINED_FUNCTION_57(v9, (uint64_t)closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:));
    return v11(v10);
  }
}

uint64_t closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 48) = v3;
  *(_BYTE *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 224) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, _QWORD *);
  uint64_t v12;

  v6[2] = v12;
  v6[4] = a1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD *))(**(int **)(*(_QWORD *)a4 + 136)
                                                                   + *(_QWORD *)(*(_QWORD *)a4 + 136));
  v9 = (_QWORD *)swift_task_alloc();
  v6[5] = v9;
  *v9 = v6;
  v9[1] = closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v11(a5, a6, MEMORY[0x24BEE4AF8], v6 + 2);
}

uint64_t closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 32) = 0;
  return OUTLINED_FUNCTION_33(v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_59();
  if (one-time initialization token for search != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_93();
  v3 = OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_31(v3))
  {
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    v4 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_29(5.7779e-34);
    v5 = OUTLINED_FUNCTION_98();
    *(_QWORD *)(v0 + 24) = v5;
    OUTLINED_FUNCTION_35();
    *v4 = v5;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_24(&dword_24315F000, v6, v7, "GlobalSearch: Encountered an error when federating with the raw query: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10();

  OUTLINED_FUNCTION_113();
  *(_BYTE *)v8 = 0;
  *(_QWORD *)(v8 + 8) = v9;
  *(_BYTE *)(v8 + 16) = v10;
  return OUTLINED_FUNCTION_22(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t _sScG7addTask8priority9operationyScPSg_xyYaYAcntF10OmniSearch06GlobalF6ClientC9QueryTypeO_s6ResultOySayAE0fK0VGs5Error_pGt_Tg5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];
  _QWORD v20[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TaskPriority?(a1, (uint64_t)v10);
  v11 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v10, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v12 = dispatch thunk of Actor.unownedExecutor.getter();
    v14 = v13;
    swift_unknownObjectRelease();
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = *v4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalSearchClient.QueryType, Result<[SearchResult], Error>));
  v17 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v12;
    v20[3] = v14;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, _QWORD *);
  uint64_t v14;

  v8[2] = v14;
  v8[4] = a1;
  v13 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD *))(**(int **)(*(_QWORD *)a4 + 136)
                                                                   + *(_QWORD *)(*(_QWORD *)a4 + 136));
  v11 = (_QWORD *)swift_task_alloc();
  v8[5] = v11;
  *v11 = v8;
  v11[1] = closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v13(a7, a8, MEMORY[0x24BEE4AF8], v8 + 2);
}

uint64_t closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 32) = 1;
  return OUTLINED_FUNCTION_33(v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_59();
  if (one-time initialization token for search != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_93();
  v3 = OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_31(v3))
  {
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    v4 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_29(5.7779e-34);
    v5 = OUTLINED_FUNCTION_98();
    *(_QWORD *)(v0 + 24) = v5;
    OUTLINED_FUNCTION_35();
    *v4 = v5;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_24(&dword_24315F000, v6, v7, "GlobalSearch: Encountered an error when federating with the rewritten query: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10();

  OUTLINED_FUNCTION_113();
  *(_BYTE *)v8 = 1;
  *(_QWORD *)(v8 + 8) = v9;
  *(_BYTE *)(v8 + 16) = v10;
  return OUTLINED_FUNCTION_22(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #3 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + 32) = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 33) = *(_BYTE *)(a2 + 16);
  return swift_task_switch();
}

uint64_t closure #3 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 33);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  *(_QWORD *)v3 = *(unsigned __int8 *)(v0 + 32);
  *(_QWORD *)(v3 + 8) = v2;
  *(_BYTE *)(v3 + 16) = v1;
  outlined copy of Result<[SearchResult], Error>(v2, v1);
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>, (GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    v6 = dispatch thunk of Actor.unownedExecutor.getter();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v3[21] = v6;
  v3[22] = v8;
  return swift_task_switch();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY0_()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 184) = OUTLINED_FUNCTION_84();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator and conformance TaskGroup<A>.Iterator, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  OUTLINED_FUNCTION_53(v1);
  return OUTLINED_FUNCTION_37();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ1_()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_30(&v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 184))(v2 + 16, 0);
  return OUTLINED_FUNCTION_42();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY2_()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v2 == 2)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v1, v3);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    *(_BYTE *)(v0 + 48) = v2 & 1;
    *(_QWORD *)(v0 + 56) = v1;
    *(_BYTE *)(v0 + 64) = v3 & 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v7, v8);
    v9 = (int *)MEMORY[0x2494F6614](v8);
    *(_QWORD *)(v0 + 200) = v10;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
    v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)v9 + *v9);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ4_;
    return v12(v0 + 96, v0 + 48);
  }
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY3_()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t))(v0 + 184))(v0 + 16, 1);
  OUTLINED_FUNCTION_104();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TQ4_()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = v3;
  OUTLINED_FUNCTION_30(&v3);
  OUTLINED_FUNCTION_50();
  outlined consume of Result<[SearchResult], Error>(*(id *)(v1 + 56), *(_BYTE *)(v1 + 64));
  return OUTLINED_FUNCTION_42();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFScGy10OmniSearch06GlobalJ6ClientC9QueryTypeO_s6ResultOySayAK0jO0VGs5Error_pGtG_AO_AVtTg5TY5_()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  if (v1 == 2)
  {
    *(_QWORD *)(v0 + 184) = OUTLINED_FUNCTION_84();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
    lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator and conformance TaskGroup<A>.Iterator, &demangling cache variable for type metadata for TaskGroup<(GlobalSearchClient.QueryType, Result<[SearchResult], Error>)>.Iterator);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    OUTLINED_FUNCTION_53(v2);
    return OUTLINED_FUNCTION_37();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(unsigned __int8 *)(v0 + 112);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v1, v4, v5);
  }
}

id specialized Dictionary.subscript.getter(char a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = specialized __RawDictionaryStorage.find<A>(_:)(a1 & 1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a2 + 56) + 16 * v3;
  v6 = *(id *)v5;
  outlined copy of Result<[SearchResult], Error>(*(id *)v5, *(_BYTE *)(v5 + 8));
  return v6;
}

void specialized Dictionary.subscript.getter(char a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = OUTLINED_FUNCTION_48(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = OUTLINED_FUNCTION_48(a1, a2), (v5 & 1) != 0))
    return *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v4);
  else
    return 4;
}

void specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = OUTLINED_FUNCTION_48(a1, a2);
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  }
  OUTLINED_FUNCTION_5();
}

{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_48(a1, a2);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_5();
}

{
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a3 + 16) && (v3 = OUTLINED_FUNCTION_48(a1, a2), (v4 & 1) != 0))
  {
    v5 = OUTLINED_FUNCTION_58(v3);
    OUTLINED_FUNCTION_23(v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_5();
  }
}

void specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_5();
}

{
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 16) && (v2 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v3 & 1) != 0))
  {
    v4 = OUTLINED_FUNCTION_58(v2);
    OUTLINED_FUNCTION_23(v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_5();
  }
}

{
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 16) && (v2 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v3 & 1) != 0))
  {
    v4 = OUTLINED_FUNCTION_58(v2);
    OUTLINED_FUNCTION_23(v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_5();
  }
}

void default argument 2 of GlobalSearchClient.search(content:entities:sources:)(_QWORD *a1@<X8>)
{
  default argument 2 of GlobalSearchClient.search(content:entities:sources:)(&one-time initialization token for all, &static SearchSources.all, a1);
}

uint64_t GlobalSearchClient.search(content:entities:sources:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a3;
  v5[8] = v4;
  v5[5] = a1;
  v5[6] = a2;
  v5[9] = *a4;
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

uint64_t GlobalSearchClient.search(content:entities:sources:)()
{
  uint64_t v0;
  id v1;
  double v2;
  char v3;
  double v4;
  double v5;
  char v6;
  double v7;
  double v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t (*v20)(_QWORD, _QWORD, _QWORD, id, uint64_t, uint64_t);

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, 37.322998, -122.032182);
  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.globalSearchLocationLatitude.getter();
  if ((v3 & 1) == 0)
  {
    v4 = v2;
    static NSUserDefaults.globalSearchLocationLongitude.getter();
    if ((v6 & 1) == 0)
    {
      v7 = v5;
      v8 = v5;
      if (v4 != 0.0 || v5 != 0.0)
      {
        if (one-time initialization token for search != -1)
          swift_once();
        v9 = OUTLINED_FUNCTION_13();
        v10 = OUTLINED_FUNCTION_28(v9, (uint64_t)static Logging.search);
        v11 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_DWORD *)v12 = 134218240;
          *(double *)(v0 + 24) = v4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v12 + 12) = 2048;
          *(double *)(v0 + 32) = v7;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl(&dword_24315F000, v10, v11, "GlobalSearch: location override found, using location from user defaults: (%f, %f)", (uint8_t *)v12, 0x16u);
          specialized UnsafeMutablePointer.deallocate()();
        }

        v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v4, v8);
        v1 = v13;
      }
    }
  }
  *(_QWORD *)(v0 + 80) = v1;
  v14 = *(_QWORD **)(v0 + 64);
  v15 = v14[7];
  v16 = v14[8];
  __swift_project_boxed_opaque_existential_1(v14 + 4, v15);
  v20 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, id, uint64_t, uint64_t))(**(int **)(v16 + 8) + *(_QWORD *)(v16 + 8));
  v17 = v1;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v18;
  *v18 = v0;
  v18[1] = GlobalSearchClient.search(content:entities:sources:);
  return v20(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v1, v15, v16);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v8;

  v1 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 72);
  v5 = v1;
  v6 = GlobalSearchClient.handleResponse(_:associatedQuery:sources:)(v5, v3, v4, &v8);

  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v6);
}

uint64_t GlobalSearchClient.search(content:entities:sources:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_QWORD *)(v4 + 104) = a1;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

uint64_t GlobalSearchClient.search(content:entities:sources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  os_log_type_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_59();

  if (one-time initialization token for search != -1)
    swift_once();
  v13 = *(void **)(v12 + 96);
  v14 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_93();
  v15 = OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_31(v15))
  {
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    v16 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_29(5.7779e-34);
    v17 = OUTLINED_FUNCTION_98();
    *(_QWORD *)(v12 + 16) = v17;
    OUTLINED_FUNCTION_35();
    *v16 = v17;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_24(&dword_24315F000, v18, v19, "GlobalSearch encountered an error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10();
  v20 = *(void **)(v12 + 80);

  swift_willThrow();
  OUTLINED_FUNCTION_90();
  return v21(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

unint64_t GlobalSearchClient.handleResponse(_:associatedQuery:sources:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];

  v62[1] = *MEMORY[0x24BDAC8D0];
  v7 = *a4;
  v8 = PommesResponse.metadataDomainName.getter();
  v10 = v9;
  if ((PommesResponse.isLowConfidenceKnowledgeResult.getter() & 1) == 0 && (v7 & 8) == 0)
  {
    if (one-time initialization token for webDomains != -1)
      swift_once();
    specialized Set.contains(_:)(v8, v10, static GlobalSearchClient.webDomains);
    if ((v11 & 1) != 0)
    {
      if (one-time initialization token for search != -1)
        swift_once();
      v12 = OUTLINED_FUNCTION_13();
      v13 = __swift_project_value_buffer(v12, (uint64_t)static Logging.search);
      OUTLINED_FUNCTION_64();
      Logger.logObject.getter();
      v14 = OUTLINED_FUNCTION_80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        v62[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_DWORD *)v15 = 136315138;
        OUTLINED_FUNCTION_64();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, v62);
        OUTLINED_FUNCTION_85(v16, v17, v18, v19, v20, v21, v22, v23, v59, v60, v61, v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24315F000, v13, v14, "GlobalSearch: Filtering out web index domain: %s", v15, 0xCu);
        OUTLINED_FUNCTION_34();
        specialized UnsafeMutablePointer.deallocate()();
      }

      swift_bridgeObjectRelease_n();
      return MEMORY[0x24BEE4AF8];
    }
  }
  v24 = dispatch thunk of PommesResponse.experiences.getter();
  if (!(v24 >> 62))
  {
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_22:
    swift_bridgeObjectRelease();
    v26 = 0;
    goto LABEL_23;
  }
  if (!_CocoaArrayWrapper.endIndex.getter())
    goto LABEL_22;
LABEL_12:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v24 & 0xC000000000000001) == 0, v24);
  if ((v24 & 0xC000000000000001) != 0)
    v25 = (id)MEMORY[0x2494F62E4](0, v24);
  else
    v25 = *(id *)(v24 + 32);
  v26 = v25;
  OUTLINED_FUNCTION_47();
  type metadata accessor for GenericExperience();
  if (!OUTLINED_FUNCTION_102())
  {
    type metadata accessor for AudioExperience();
    if (OUTLINED_FUNCTION_102())
    {
      v29 = v26;
      static GlobalSearchResponseProcessor.makeAudioItem(experience:domain:)();
      goto LABEL_18;
    }
LABEL_23:
    OUTLINED_FUNCTION_47();
    if (one-time initialization token for search != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v31, (uint64_t)static Logging.search);
    v32 = v26;
    v33 = a1;
    v34 = v32;
    v35 = v33;
    v36 = Logger.logObject.getter();
    v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      v38 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v39 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v40 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v62[0] = v40;
      *(_DWORD *)v38 = 138412546;
      if (v26)
      {
        HIDWORD(v59) = v37;
        v48 = v34;
      }
      else
      {
        OUTLINED_FUNCTION_85(v40, v41, v42, v43, v44, v45, v46, v47, v59, v60, v61, 0);
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v39 = v26;

      *(_WORD *)(v38 + 12) = 2080;
      v49 = PommesResponse.metadataDomainName.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v62);
      OUTLINED_FUNCTION_85(v51, v52, v53, v38 + 22, v54, v55, v56, v57, v59, v60, v61, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24315F000, v36, (os_log_type_t)v37, "GlobalSearch: unhandled experience %@ for domain %s", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }

    return MEMORY[0x24BEE4AF8];
  }
  v27 = v26;
  PommesResponse.isLowConfidenceKnowledgeResult.getter();
  static GlobalSearchResponseProcessor.makeGenericItem(experience:domain:lowConfidenceKnowledge:)();
LABEL_18:
  v30 = v28;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d108Search06GlobalB6ClientC14handleResponse33_CBFB0104A61350AC63CE0898BEF4DA38LL_15associatedQuery7sourcesSayAA0kF59VG015SiriInformationB006PommesF0C_SSAA0B7SourcesVtFA2IXEfU_SSTf1cn_n(v30, a2, a3);
  OUTLINED_FUNCTION_97();

  return v10;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch0E6ResultVG_AHs5NeverOTg504_s10d108Search06GlobalB6ClientC14handleResponse33_CBFB0104A61350AC63CE0898BEF4DA38LL_15associatedQuery7sourcesSayAA0kF59VG015SiriInformationB006PommesF0C_SSAA0B7SourcesVtFA2IXEfU_SSTf1cn_n(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a2;
  v18 = type metadata accessor for SearchResult(0);
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v16 = v3;
    v20 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v10 = v20;
    v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v17;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      outlined init with copy of SearchResult(v11, (uint64_t)v8, type metadata accessor for SearchResult);
      v13 = &v8[*(int *)(v18 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)v13 = v19;
      *((_QWORD *)v13 + 1) = a3;
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      if (v14 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      outlined init with take of SearchResult((uint64_t)v8, v10 + v17 + v14 * v12, type metadata accessor for SearchResult);
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v10;
}

uint64_t GlobalSearchClient.rankGlobalResponses(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unsigned __int8 v17;
  char v18;
  unsigned __int8 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  _WORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  _WORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_71();
  v2 = v0 - v1;
  MEMORY[0x24BDAC7A8]();
  v4 = ((char *)&v63 - v3);
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_71();
  v7 = v5 - v6;
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v63 - v8;
  v10 = type metadata accessor for GlobalItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_71();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8]();
  v15 = (char *)&v63 - v14;
  OUTLINED_FUNCTION_103(0);
  OUTLINED_FUNCTION_77();
  if (v18)
    goto LABEL_6;
  v19 = v17;
  if ((v17 & 1) != 0)
    goto LABEL_5;
  v65 = v13;
  v66 = v15;
  v20 = v16;
  specialized Collection.first.getter((uint64_t)v16, (uint64_t)v4);
  v21 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v21) != 1)
  {
    v64 = v20;
    outlined init with copy of SearchResult((uint64_t)v4, (uint64_t)v9, type metadata accessor for SearchResultItem);
    outlined destroy of SearchResult((uint64_t)v4, type metadata accessor for SearchResult);
    if (swift_getEnumCaseMultiPayload() != 12)
    {
      OUTLINED_FUNCTION_111();
      outlined destroy of SearchResult((uint64_t)v9, type metadata accessor for SearchResultItem);
      goto LABEL_6;
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
    swift_bridgeObjectRelease();
    outlined init with take of SearchResult((uint64_t)v9, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    OUTLINED_FUNCTION_103(1);
    OUTLINED_FUNCTION_77();
    if (!v18)
    {
      v27 = v39;
      if ((v40 & 1) == 0)
      {
        specialized Collection.first.getter(v39, v2);
        if (__swift_getEnumTagSinglePayload(v2, 1, v21) == 1)
        {
          outlined destroy of SearchResult?(v2, &demangling cache variable for type metadata for SearchResult?);
        }
        else
        {
          outlined init with copy of SearchResult(v2, v7, type metadata accessor for SearchResultItem);
          outlined destroy of SearchResult(v2, type metadata accessor for SearchResult);
          if (swift_getEnumCaseMultiPayload() != 12)
          {
            OUTLINED_FUNCTION_110();
            outlined destroy of SearchResult(v7, type metadata accessor for SearchResultItem);
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
          v41 = v65;
          outlined init with take of SearchResult(v7, v65, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
          v42 = (uint64_t)v66;
          if (one-time initialization token for webDomains != -1)
            swift_once();
          v43 = static GlobalSearchClient.webDomains;
          v44 = (uint64_t *)(v42 + *(int *)(v10 + 28));
          v45 = *v44;
          v46 = v44[1];
          swift_bridgeObjectRetain();
          specialized Set.contains(_:)(v45, v46, v43);
          v38 = v47;
          OUTLINED_FUNCTION_47();
          if ((v38 & 1) != 0)
          {
            v48 = static GlobalSearchClient.webDomains;
            v49 = (uint64_t *)(v41 + *(int *)(v10 + 28));
            v50 = *v49;
            v51 = v49[1];
            swift_bridgeObjectRetain();
            specialized Set.contains(_:)(v50, v51, v48);
            v38 = v52;
            swift_bridgeObjectRelease();
            if ((v38 & 1) == 0)
            {
              OUTLINED_FUNCTION_111();
              if (one-time initialization token for search != -1)
                swift_once();
              v58 = OUTLINED_FUNCTION_13();
              OUTLINED_FUNCTION_28(v58, (uint64_t)static Logging.search);
              v59 = OUTLINED_FUNCTION_66();
              if (OUTLINED_FUNCTION_21(v59))
              {
                v60 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
                OUTLINED_FUNCTION_51(v60);
                OUTLINED_FUNCTION_7(&dword_24315F000, v61, v62, "GlobalSearch: received a web search result using the raw query, falling back to rewritten query's response");
                specialized UnsafeMutablePointer.deallocate()();
              }

              outlined destroy of SearchResult(v41, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
              outlined destroy of SearchResult((uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
              return v27;
            }
          }
          outlined destroy of SearchResult(v41, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
        }
      }
      OUTLINED_FUNCTION_110();
    }
LABEL_33:
    if (one-time initialization token for search != -1)
      swift_once();
    v53 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v53, (uint64_t)static Logging.search);
    v54 = OUTLINED_FUNCTION_66();
    if (OUTLINED_FUNCTION_21(v54))
    {
      v55 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v55);
      OUTLINED_FUNCTION_7(&dword_24315F000, v56, v57, "GlobalSearch: returning raw query's response");
      specialized UnsafeMutablePointer.deallocate()();
    }

    outlined destroy of SearchResult((uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    return (uint64_t)v64;
  }
  outlined destroy of SearchResult?((uint64_t)v4, &demangling cache variable for type metadata for SearchResult?);
  v16 = v20;
LABEL_5:
  outlined consume of Result<[SearchResult], Error>?(v16, v19);
LABEL_6:
  if (one-time initialization token for search != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_28(v22, (uint64_t)static Logging.search);
  v23 = OUTLINED_FUNCTION_66();
  if (os_log_type_enabled(v4, v23))
  {
    v24 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_24315F000, v4, v23, "GlobalSearch: no global search result found using the raw query", v24, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_103(1);
  OUTLINED_FUNCTION_77();
  if (!v18)
  {
    v27 = (uint64_t)v25;
    if ((v26 & 1) == 0)
    {
      Logger.logObject.getter();
      v28 = OUTLINED_FUNCTION_66();
      if (OUTLINED_FUNCTION_21(v28))
      {
        v29 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        OUTLINED_FUNCTION_51(v29);
        OUTLINED_FUNCTION_7(&dword_24315F000, v30, v31, "GlobalSearch: global result found using the rewritten query");
        specialized UnsafeMutablePointer.deallocate()();
      }

      return v27;
    }
    outlined consume of Result<[SearchResult], Error>?(v25, v26);
  }
  v32 = (void *)Logger.logObject.getter();
  v33 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_21(v33))
  {
    v34 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_51(v34);
    OUTLINED_FUNCTION_7(&dword_24315F000, v35, v36, "GlobalSearch: no global result found using either raw or rewritten query");
    specialized UnsafeMutablePointer.deallocate()();
  }

  return MEMORY[0x24BEE4AF8];
}

uint64_t GlobalSearchClient.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return v0;
}

uint64_t GlobalSearchClient.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t protocol witness for SearchService.type.getter in conformance GlobalSearchClient()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 24);
}

void protocol witness for SearchService.supportedSearchSources.getter in conformance GlobalSearchClient(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t protocol witness for SearchService.prewarm() in conformance GlobalSearchClient()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance GlobalSearchClient(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v7 + 128)
                                                                                              + *(_QWORD *)(**(_QWORD **)v7 + 128));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance GlobalSearchClient;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t protocol witness for SearchService.search(query:sources:allowedTypes:searchOptions:) in conformance GlobalSearchClient(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_41(v4, *(uint64_t (**)(void))(v2 + 8));
}

BOOL static GlobalSearchClient.QueryType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void GlobalSearchClient.QueryType.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_5();
}

void GlobalSearchClient.QueryType.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_107();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance GlobalSearchClient.QueryType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static GlobalSearchClient.QueryType.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance GlobalSearchClient.QueryType()
{
  char *v0;

  GlobalSearchClient.QueryType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance GlobalSearchClient.QueryType(uint64_t a1)
{
  char *v1;

  GlobalSearchClient.QueryType.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance GlobalSearchClient.QueryType()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_107();
}

uint64_t default argument 0 of GlobalResolutionService.init(globalSearch:)()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;

  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_81();
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  type metadata accessor for GlobalSearchClient();
  v1 = OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  *(_QWORD *)(v1 + 72) = v0;
  return v1;
}

void default argument 1 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t *a1@<X8>)
{
  default argument 1 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)((uint64_t (*)(_QWORD))type metadata accessor for ResultHydrator, ResultHydrator.__allocating_init(), (uint64_t)&protocol witness table for ResultHydrator, a1);
}

uint64_t default argument 3 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)()
{
  return 28261;
}

void default argument 1 of OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_83();
  v1 = type metadata accessor for SearchResultRanker();
  v2 = OUTLINED_FUNCTION_8();
  v0[3] = v1;
  v0[4] = (uint64_t)&protocol witness table for SearchResultRanker;
  *v0 = v2;
  OUTLINED_FUNCTION_5();
}

void default argument 2 of OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;

  OUTLINED_FUNCTION_83();
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_70();
  v3 = type metadata accessor for RegexRouterPlusParser(0);
  v0[3] = v3;
  v0[4] = (uint64_t)&protocol witness table for RegexRouterPlusParser;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  RegexRouter.init()(boxed_opaque_existential_1);
  v5 = *(int *)(v3 + 20);
  Locale.init(identifier:)();
  type metadata accessor for LocalParser();
  OUTLINED_FUNCTION_8();
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v5) = LocalParser.init(testing:locale:)(0, v1);
  OUTLINED_FUNCTION_12();
}

uint64_t default argument 4 of OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)()
{
  return 10;
}

uint64_t default argument 3 of OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)@<X0>(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static AnswerSynthesisController.shared;
  type metadata accessor for ResultHydrator();
  swift_retain();
  v3 = ResultHydrator.__allocating_init()();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_81();
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  type metadata accessor for GlobalSearchClient();
  v5 = OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4(v5, v6, v7, v8, v9, v10, v11, v12, v18, v19);
  *(_QWORD *)(v5 + 72) = v4;
  v13 = type metadata accessor for GlobalResolutionService();
  v14 = (_QWORD *)OUTLINED_FUNCTION_8();
  v14[3] = 0;
  v14[4] = 0;
  v14[2] = v5;
  v20 = v13;
  v21 = &protocol witness table for GlobalResolutionService;
  *(_QWORD *)&v19 = v14;
  v15 = type metadata accessor for AnswerComposer();
  v16 = OUTLINED_FUNCTION_8();
  result = specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)((uint64_t)v2, v3, (uint64_t)&v19, 28261, 0xE200000000000000, v16);
  a1[3] = v15;
  a1[4] = (uint64_t)&protocol witness table for AnswerComposer;
  *a1 = result;
  return result;
}

_QWORD *default argument 2 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  __int128 v14;

  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_81();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  type metadata accessor for GlobalSearchClient();
  v3 = OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
  *(_QWORD *)(v3 + 72) = v2;
  v11 = type metadata accessor for GlobalResolutionService();
  result = (_QWORD *)OUTLINED_FUNCTION_8();
  result[3] = 0;
  result[4] = 0;
  result[2] = v3;
  a1[3] = v11;
  a1[4] = &protocol witness table for GlobalResolutionService;
  *a1 = result;
  return result;
}

void default argument 3 of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)(_QWORD *a1@<X8>)
{
  default argument 2 of GlobalSearchClient.search(content:entities:sources:)(&one-time initialization token for allExceptWebIndex, &static SearchSources.allExceptWebIndex, a1);
}

void default argument 2 of GlobalSearchClient.search(content:entities:sources:)(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  OUTLINED_FUNCTION_5();
}

void *default argument 4 of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)@<X0>(void *a1@<X8>)
{
  _BYTE v3[136];
  _WORD __src[72];

  _s10OmniSearch0B7ContextVSgWOi0_(v3);
  __src[0] = 0;
  outlined init with take of SearchContext?((uint64_t)v3, (uint64_t)&__src[4]);
  return memcpy(a1, __src, 0x90uLL);
}

void default argument 3 of FlightReservation.init(flightNumber:flightCarrierCode:bundleId:flightDepartureDateComponents:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_49((uint64_t)v4, v6, v7, v5);
  v8 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_49(v0, v9, v10, v8);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  OUTLINED_FUNCTION_12();
}

uint64_t default argument 0 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static AnswerSynthesisController.shared;
  a1[3] = type metadata accessor for AnswerSynthesisController();
  a1[4] = &protocol witness table for AnswerSynthesisController;
  *a1 = v2;
  return swift_retain();
}

void default argument 0 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(uint64_t *a1@<X8>)
{
  default argument 1 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)((uint64_t (*)(_QWORD))type metadata accessor for MemoryCreationQUNetworkService, (uint64_t (*)(void))MemoryCreationQUNetworkService.__allocating_init(), (uint64_t)&protocol witness table for MemoryCreationQUNetworkService, a1);
}

void default argument 1 of AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1(0);
  v8 = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = v8;
  OUTLINED_FUNCTION_12();
}

void default argument 1 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_83();
  v1 = type metadata accessor for ECRClient();
  OUTLINED_FUNCTION_8();
  v2 = ECRClient.init()();
  if (v2)
  {
    v0[3] = v1;
    v0[4] = (uint64_t)&protocol witness table for ECRClient;
    *v0 = v2;
  }
  else
  {
    v0[4] = 0;
    OUTLINED_FUNCTION_114();
  }
  OUTLINED_FUNCTION_12();
}

void default argument 2 of MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)()
{
  uint64_t *v0;
  uint64_t Parser;
  uint64_t v2;

  OUTLINED_FUNCTION_83();
  Parser = type metadata accessor for PhotosQueryParser();
  v2 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v2 + 16) = objc_msgSend((id)objc_opt_self(), sel_spotlightManager);
  v0[3] = Parser;
  v0[4] = (uint64_t)&protocol witness table for PhotosQueryParser;
  *v0 = v2;
  OUTLINED_FUNCTION_12();
}

id default argument 0 of AppEntityIndexClient.init(searchAgent:)@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = (id)static LocalSearchManager.shared;
  a1[3] = type metadata accessor for LocalSearchManager();
  a1[4] = &protocol witness table for LocalSearchManager;
  *a1 = v3;
  return v3;
}

void specialized thunk for @escaping @callee_guaranteed (@guaranteed String, @in_guaranteed SearchResult, @guaranteed [SearchResultType]) -> (@unowned Bool)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _BYTE *a4@<X8>)
{
  *a4 = applySubStringMatchFiltering(answer:document:supportedDomain:)(*(_QWORD *)a1, *(void **)(a1 + 8), a2, *a3) & 1;
  OUTLINED_FUNCTION_5();
}

void default argument 0 of Array<A>.createValidEntities(cardBuilder:)(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for EntityCardBuilder;
  *(_QWORD *)(a1 + 32) = &protocol witness table for EntityCardBuilder;
}

uint64_t default argument 0 of Array<A>.primaryEntities(maxLen:)()
{
  return 0;
}

uint64_t default argument 1 of JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)()
{
  OUTLINED_FUNCTION_83();
  type metadata accessor for JSONEncoder.OutputFormatting();
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting, (void (*)(uint64_t))MEMORY[0x24BDCB2A8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [JSONEncoder.OutputFormatting]);
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type [JSONEncoder.OutputFormatting] and conformance [A], &demangling cache variable for type metadata for [JSONEncoder.OutputFormatting]);
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t default argument 2 of JSONEncoder.init(dateEncodingStrategy:outputFormatting:keyEncodingStrategy:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BDCB2F0];
  v3 = type metadata accessor for JSONEncoder.KeyEncodingStrategy();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void default argument 2 of AnswerSynthesisRequest.init(query:documents:charLimit:)()
{
  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.answerSynthesisTokenLimitDevice.getter();
  OUTLINED_FUNCTION_5();
}

void protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey()
{
  uint64_t *v0;

  specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance NSAttributedStringKey()
{
  uint64_t *v0;

  specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(*v0, MEMORY[0x24BEE0CD8]);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance NSAttributedStringKey()
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance NSAttributedStringKey()
{
  return specialized == infix<A>(_:_:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance NSAttributedStringKey@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = MEMORY[0x2494F5BB8](*a1, a1[1]);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = NSAttributedStringKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSAttributedStringKey()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t specialized static UnsafeMutablePointer.allocate(capacity:)()
{
  return swift_slowAlloc();
}

uint64_t closure #1 in osLogInternal(_:log:type:)(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void specialized UnsafeMutablePointer.deallocate()()
{
  JUMPOUT(0x2494F6D70);
}

_BYTE **closure #1 in OSLogArguments.append(_:)(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t specialized _SwiftNewtypeWrapper<>.hash(into:)()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TQ0_;
  return v5(v2 + 16);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TQ0_()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v1 = *v0;
  v7 = v1;
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *v0;
  OUTLINED_FUNCTION_30(&v7);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)(v2 + 8) = v4;
  *(_BYTE *)(v2 + 16) = v5;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t specialized GlobalSearchClient.init(client:session:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a4;
  v13 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  *(_QWORD *)(a3 + 16) = 10;
  *(_BYTE *)(a3 + 24) = 2;
  outlined init with take of SageSearchClient(&v11, a3 + 32);
  *(_QWORD *)(a3 + 72) = a2;
  return a3;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag;
  if (!lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag;
  if (!lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FeatureFlag and conformance FeatureFlag);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2494F6C8C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_106();
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_112(v10);
  *v11 = v3;
  v11[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v2, v0, v4, v5, v6, v7, v9, v8);
}

void outlined consume of Result<[SearchResult], Error>?(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    outlined consume of Result<[SearchResult], Error>(a1, a2 & 1);
}

void outlined consume of Result<[SearchResult], Error>(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError;
  if (!lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GlobalSearchClient.GlobalSearchError, &type metadata for GlobalSearchClient.GlobalSearchError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalSearchClient.GlobalSearchError and conformance GlobalSearchClient.GlobalSearchError);
  }
  return result;
}

unint64_t type metadata accessor for NSUserDefaults()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSUserDefaults;
  if (!lazy cache variable for type metadata for NSUserDefaults)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUserDefaults);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for GlobalSearchClient()
{
  return objc_opt_self();
}

uint64_t outlined init with take of SageSearchClient(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void _s10OmniSearch0B7ContextVSgWOi0_(void *a1)
{
  bzero(a1, 0x88uLL);
}

uint64_t outlined init with take of SearchContext?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchContext?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2494F6C98](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType;
  if (!lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for GlobalSearchClient.QueryType, &type metadata for GlobalSearchClient.QueryType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GlobalSearchClient.QueryType and conformance GlobalSearchClient.QueryType);
  }
  return result;
}

uint64_t dispatch thunk of SageSearchClient.search(query:clientEntities:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = dispatch thunk of SageSearchClient.search(query:clientEntities:location:);
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of SageSearchClient.search(query:clientEntities:location:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2();
  return OUTLINED_FUNCTION_41(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t method lookup function for GlobalSearchClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GlobalSearchClient.__allocating_init(client:session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of GlobalSearchClient.prewarm()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v7 + 128)
                                                                                              + *(_QWORD *)(*(_QWORD *)v7 + 128));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = dispatch thunk of GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of GlobalSearchClient.search(content:entities:sources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = dispatch thunk of GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v11(a1, a2, a3, a4);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GlobalSearchClient.QueryType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalSearchClient.QueryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243166CDC + 4 * byte_24334D3E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243166D10 + 4 * byte_24334D3E0[v4]))();
}

uint64_t sub_243166D10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243166D18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243166D20);
  return result;
}

uint64_t sub_243166D2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243166D34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243166D38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243166D40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for GlobalSearchClient.QueryType(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *destructiveInjectEnumTag for GlobalSearchClient.QueryType(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GlobalSearchClient.QueryType()
{
  return &type metadata for GlobalSearchClient.QueryType;
}

void destroy for GlobalSearchClient.GlobalSearchError(id *a1)
{

}

_QWORD *initializeBufferWithCopyOfBuffer for GlobalSearchClient.GlobalSearchError(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  *a1 = v4;
  v6 = *(void **)(a2 + 8);
  v7 = v6;
  a1[1] = v6;
  return a1;
}

uint64_t assignWithCopy for GlobalSearchClient.GlobalSearchError(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = v7;
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for GlobalSearchClient.GlobalSearchError(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalSearchClient.GlobalSearchError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalSearchClient.GlobalSearchError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTag for GlobalSearchClient.GlobalSearchError()
{
  return 0;
}

ValueMetadata *type metadata accessor for GlobalSearchClient.GlobalSearchError()
{
  return &type metadata for GlobalSearchClient.GlobalSearchError;
}

void type metadata accessor for DDResultCategory(uint64_t a1)
{
  type metadata accessor for DDResultCategory(a1, &lazy cache variable for type metadata for DDResultCategory);
}

void type metadata accessor for SPResponseKind(uint64_t a1)
{
  type metadata accessor for DDResultCategory(a1, &lazy cache variable for type metadata for SPResponseKind);
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NSDecimal(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NSDecimal(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for NSDecimal(uint64_t a1)
{
  type metadata accessor for DDResultCategory(a1, &lazy cache variable for type metadata for NSDecimal);
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t lazy protocol witness table accessor for type PhotosFeatureFlag and conformance PhotosFeatureFlag()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag;
  if (!lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for PhotosFeatureFlag, &type metadata for PhotosFeatureFlag);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag;
  if (!lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for PhotosFeatureFlag, &type metadata for PhotosFeatureFlag);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhotosFeatureFlag and conformance PhotosFeatureFlag);
  }
  return result;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

void outlined init with copy of SearchResult(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_76(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_5();
}

void outlined init with take of SearchResult(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_76(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_5();
}

void outlined destroy of SearchResult(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_45(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_5();
}

id outlined copy of Result<[SearchResult], Error>(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t partial apply for closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_18(v1);
  OUTLINED_FUNCTION_90();
  return closure #1 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v2, v3, v4, v5, v6, v7);
}

void outlined destroy of SearchResult?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_45(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_5();
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_67();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  OUTLINED_FUNCTION_18(v1);
  OUTLINED_FUNCTION_90();
  return closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_2();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

void lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_100();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t outlined init with copy of TaskPriority?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24316729C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_112(v5);
  *v6 = v2;
  v6[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5Tu))(a1, v4);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t getEnumTagSinglePayload for _NSRange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _NSRange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  type metadata accessor for DDResultCategory(a1, &lazy cache variable for type metadata for _NSRange);
}

void type metadata accessor for NSAttributedStringKey(uint64_t a1)
{
  type metadata accessor for DDResultCategory(a1, &lazy cache variable for type metadata for NSAttributedStringKey);
}

void type metadata accessor for DDResultCategory(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void base witness table accessor for RawRepresentable in NSAttributedStringKey()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

void lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_100();
  }
  OUTLINED_FUNCTION_5();
}

void base witness table accessor for _HasCustomAnyHashableRepresentation in NSAttributedStringKey()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

void base witness table accessor for Equatable in NSAttributedStringKey()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  char v3;

  v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  uint64_t result;

  result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v1 = MEMORY[0x2494F5BB8](v0);
  swift_bridgeObjectRelease();
  return v1;
}

void specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2(v3);
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_5();
}

void LatencyProfiler.startTime.setter()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_2()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v10;

  *(_QWORD *)&a10 = v10;
  *(_QWORD *)(a1 + 16) = 10;
  *(_BYTE *)(a1 + 24) = 2;
  return outlined init with take of SageSearchClient(&a10, a1 + 32);
}

uint64_t OUTLINED_FUNCTION_6()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_10()
{
  void *v0;

}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_13()
{
  return type metadata accessor for Logger();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_16(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  const char *v5;
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, v5, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v4;
  a1[1] = v1;
  *(_QWORD *)(v5 + 16) = v3;
  return v2;
}

uint64_t OUTLINED_FUNCTION_19(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_20(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

BOOL OUTLINED_FUNCTION_21(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_22(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_23(uint64_t a1, uint64_t a2)
{
  return outlined init with copy of Any(a1, a2);
}

void OUTLINED_FUNCTION_24(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_25()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_26@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_27()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return Logger.logObject.getter();
}

id OUTLINED_FUNCTION_29(float a1)
{
  float *v1;
  void *v2;

  *v1 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_31(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_32(void *a1@<X8>)
{

}

uint64_t OUTLINED_FUNCTION_33@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 8) = a1;
  *(_BYTE *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t OUTLINED_FUNCTION_34()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_35()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_36(void *a1@<X8>)
{

}

uint64_t OUTLINED_FUNCTION_37()
{
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

uint64_t OUTLINED_FUNCTION_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return specialized GlobalSearchClient.init(client:session:)(v4, v0, v1, v2, v3);
}

id OUTLINED_FUNCTION_39()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_41(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_42()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_43(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_44()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_45@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_46(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 120) + 8))(a1, *(_QWORD *)(v1 + 112));
}

uint64_t OUTLINED_FUNCTION_47()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_48(uint64_t a1, uint64_t a2)
{
  return specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_release();
}

_WORD *OUTLINED_FUNCTION_51(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_52()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_53(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_56()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_57@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_58(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + 56) + 32 * a1;
}

uint64_t OUTLINED_FUNCTION_61(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_62(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_65(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_66()
{
  return static os_log_type_t.info.getter();
}

uint64_t OUTLINED_FUNCTION_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_72()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_73()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_75()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_76(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_80()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return SageSearch.init()();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return type metadata accessor for SageSearch();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84()
{
  return AsyncCompactMapSequence.Iterator.baseIterator.modify();
}

char *OUTLINED_FUNCTION_85(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_86(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[6] = v1;
  a1[7] = v3;
  a1[8] = v4;
  a1[9] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_87()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_92()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of SearchResult?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_93()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_95()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_96@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_97()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_98()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t OUTLINED_FUNCTION_99()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_100()
{
  JUMPOUT(0x2494F6CA4);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_dynamicCastClass();
}

id OUTLINED_FUNCTION_103(char a1)
{
  uint64_t v1;

  return specialized Dictionary.subscript.getter(a1, v1);
}

uint64_t OUTLINED_FUNCTION_104()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_105()
{
  return 20;
}

uint64_t OUTLINED_FUNCTION_108()
{
  return OS_os_log.signpostsEnabled.getter();
}

void OUTLINED_FUNCTION_109(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

void OUTLINED_FUNCTION_110()
{
  void *v0;
  unsigned __int8 v1;

  outlined consume of Result<[SearchResult], Error>?(v0, v1);
}

void OUTLINED_FUNCTION_111()
{
  unsigned __int8 v0;
  uint64_t v1;

  outlined consume of Result<[SearchResult], Error>?(*(void **)(v1 - 104), v0);
}

uint64_t OUTLINED_FUNCTION_112(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

double OUTLINED_FUNCTION_114()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[40];
  uint64_t v50;

  v37 = a5;
  v38 = a8;
  v44 = a1;
  v45 = a2;
  v36 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v46 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v41 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v40 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v35 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v32 - v19;
  v42 = v8;
  v21 = a6;
  v22 = dispatch thunk of Collection.count.getter();
  if (!v22)
    return static Array._allocateUninitialized(_:)();
  v23 = v22;
  v33 = v16;
  v50 = Array.init()();
  v43 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v23);
  v34 = v20;
  result = dispatch thunk of Collection.startIndex.getter();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v47 = v21;
    v25 = v41;
    v26 = v34;
    while (1)
    {
      v27 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read();
      (*(void (**)(char *))(v12 + 16))(v25);
      v27(v49, 0);
      v28 = v48;
      v44(v25, v46);
      if (v28)
        break;
      v48 = 0;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v23)
      {
        v29 = v39;
        v30 = v35;
        v31 = v33;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v26, v33);
        _expectEnd<A>(of:is:)();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        return v50;
      }
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v33);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38, v46, v37);
  }
  return result;
}

void Array<A>.argmin()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Optional();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for Array();
  OUTLINED_FUNCTION_21_0();
}

uint64_t sub_24316808C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  Sequence<>.min()();
  if (__swift_getEnumTagSinglePayload(v4, 1, v0) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v0);
    *(_QWORD *)(v7 - 104) = v1;
    OUTLINED_FUNCTION_21_0();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  return 0;
}

void Array<A>.argminN(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >= 1)
  {
    if (MEMORY[0x2494F5EAC](a2, a3) >= a1)
    {
      type metadata accessor for Array();
      OUTLINED_FUNCTION_20_0();
    }
    specialized _copyCollectionToContiguousArray<A>(_:)(0, a1);
  }
  OUTLINED_FUNCTION_12_0();
}

uint64_t closure #1 in Array<A>.argminN(_:)()
{
  swift_getTupleTypeMetadata2();
  return dispatch thunk of static Comparable.< infix(_:_:)() & 1;
}

uint64_t partial apply for closure #1 in Array<A>.argminN(_:)()
{
  return closure #1 in Array<A>.argminN(_:)() & 1;
}

uint64_t closure #2 in Array<A>.argminN(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = (char *)&v16 - v8;
  v10 = *(int *)(v7 + 48);
  v11 = &v9[v10];
  v12 = (char *)a1 + v10;
  v13 = *a1;
  *(_QWORD *)v9 = v13;
  v14 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v9[v10], v12, a2);
  *a3 = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, a2);
}

uint64_t partial apply for closure #2 in Array<A>.argminN(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return closure #2 in Array<A>.argminN(_:)(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t Array.asyncReduce<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v7[11] = *(_QWORD *)(a7 - 8);
  v7[12] = swift_task_alloc();
  v9 = *(_QWORD *)(a6 - 8);
  v7[13] = v9;
  v7[14] = *(_QWORD *)(v9 + 64);
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  return OUTLINED_FUNCTION_14();
}

void Array.asyncReduce<A>(_:_:)()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 16))(v0[4], v0[5], v0[10]);
  OUTLINED_FUNCTION_23_0();
  v0[2] = Array.startIndex.getter();
  OUTLINED_FUNCTION_22_0();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  v2 = v0[10];
  v3 = v0[11];
  v4 = v0[4];
  (*(void (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[15], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  OUTLINED_FUNCTION_22_0();
}

uint64_t Array.asyncReduce<A>(_:_:)()
{
  swift_task_dealloc();
  return OUTLINED_FUNCTION_14();
}

void Array.elements(at:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
  OUTLINED_FUNCTION_20_0();
}

uint64_t sub_2431687D0()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t closure #1 in Array.elements(at:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Array();
  MEMORY[0x2494F6CA4](MEMORY[0x24BEE12D8], v4);
  RandomAccessCollection<>.indices.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Range<Int>);
  if ((Range.contains(_:)() & 1) != 0)
  {
    Array.subscript.getter();
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v5, 1, a1);
}

_QWORD *specialized _copyCollectionToContiguousArray<A>(_:)(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;
  _QWORD v7[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = (uint64_t)result;
    if (v2 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
      v5 = (_QWORD *)OUTLINED_FUNCTION_13_0();
      v6 = _swift_stdlib_malloc_size(v5);
      v5[2] = v2;
      v5[3] = 2 * ((uint64_t)(v6 - 32) / 8);
    }
    result = specialized Sequence._copySequenceContents(initializing:)(v7, v5 + 4, v2, v4, a2);
    if (result == (_QWORD *)v2)
      return v5;
  }
  __break(1u);
  return result;
}

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v5)
    goto LABEL_14;
  if (v5 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
    v8 = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
    v9 = *(_QWORD *)(v8 + 72);
    v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v11 = (_QWORD *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    if (v9)
    {
      if (v12 - v10 != 0x8000000000000000 || v9 != -1)
      {
        v11[2] = v5;
        v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_12:
  if (v4 != a3)
  {
    v14 = type metadata accessor for SearchResult(0);
    specialized UnsafeMutablePointer.initialize(from:count:)(a2 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a3, v5, (unint64_t)v11+ ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80)));
LABEL_14:
    OUTLINED_FUNCTION_12_0();
    return;
  }
LABEL_18:
  __break(1u);
}

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<FlightDesignator>);
    v1 = (const void *)OUTLINED_FUNCTION_13_0();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_10_0(v2 - 32);
    specialized Sequence._copySequenceContents(initializing:)(v3, v4, v5, v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_17_0();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_4_0();
}

{
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v1 = (const void *)OUTLINED_FUNCTION_13_0();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_10_0(v2 - 32);
    specialized Sequence._copySequenceContents(initializing:)(v3, v4, v5, v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_17_0();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_4_0();
}

size_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<URL>);
  v3 = *(_QWORD *)(type metadata accessor for URL() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = specialized Sequence._copySequenceContents(initializing:)(&v10, (uint64_t)v6 + v5, v1, a1);
      outlined consume of Set<FlightDesignator>.Iterator._Variant();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t partial apply for closure #1 in Array.elements(at:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in Array.elements(at:)(*(_QWORD *)(v1 + 16), a1);
}

_QWORD *specialized Sequence._copySequenceContents(initializing:)(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (_QWORD *)a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a5 == a4)
    {
LABEL_5:
      a3 = 0;
      goto LABEL_6;
    }
    if (a5 >= a4)
    {
      if (a5 <= a4)
      {
LABEL_17:
        __break(1u);
LABEL_18:
        v5 = a5;
        a3 = a5 - a4;
      }
      else
      {
        v6 = a3 - 1;
        v5 = a4 + 1;
        while (1)
        {
          *a2 = v5 - 1;
          if (!v6)
            break;
          if (a5 == v5)
            goto LABEL_18;
          ++a2;
          --v6;
          v7 = v5 >= a4 && v5 < a5;
          ++v5;
          if (!v7)
            goto LABEL_17;
        }
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    v24 = *v23;
    v25 = v23[1];
    *v11 = v22;
    v11[1] = v21;
    v11[2] = v24;
    v11[3] = v25;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_23_0();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = OUTLINED_FUNCTION_23_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t outlined consume of Set<FlightDesignator>.Iterator._Variant()
{
  return swift_release();
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a4;
  v16 = *(_QWORD *)(a4 + 56);
  v15 = a4 + 56;
  v14 = v16;
  v17 = -1 << *(_BYTE *)(v15 - 24);
  v35 = a1;
  v36 = v17;
  v18 = -v17;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v20 = v19 & v14;
  v43 = a2;
  if (!a2)
  {
    v21 = 0;
    v22 = 0;
LABEL_39:
    v32 = v35;
    v33 = ~v36;
    *v35 = v40;
    v32[1] = v15;
    v32[2] = v33;
    v32[3] = v21;
    v32[4] = v20;
    return v22;
  }
  if (!v41)
  {
    v21 = 0;
    v22 = 0;
    goto LABEL_39;
  }
  if (v41 < 0)
    goto LABEL_41;
  v21 = 0;
  v22 = 0;
  v37 = v15;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v23 = v39;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v25 = v24 | (v21 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v11 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v40 + 48) + v29 * v25, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    v42 = v22 + 1;
    v30 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v31 = v43;
    v30(v23, v9, v10);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v31, v23, v10);
    v22 = v42;
    if (v42 == v41)
    {
      v22 = v41;
      v15 = v37;
      goto LABEL_39;
    }
    v43 = v31 + v29;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v21 + 2;
      ++v21;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v21 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v21 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v21 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v21 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
          v20 = 0;
LABEL_38:
          outlined destroy of URL?((uint64_t)v9);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v21 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1[13] + 16))(v1[16], v1[8]+ ((*(unsigned __int8 *)(v1[13] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1[13] + 80))+ *(_QWORD *)(v1[13] + 72) * v0, v1[9]);
}

uint64_t OUTLINED_FUNCTION_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_2_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2[16];
  v5 = v2[13];
  v6 = v2[9];
  v2[3] = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v1 + 8, v6);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t OUTLINED_FUNCTION_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 96);
}

void OUTLINED_FUNCTION_10_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return swift_task_alloc();
}

BOOL OUTLINED_FUNCTION_15_0()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return outlined consume of Set<FlightDesignator>.Iterator._Variant();
}

void OUTLINED_FUNCTION_18_0()
{
  JUMPOUT(0x2494F5ED0);
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_20_0()
{
  JUMPOUT(0x2494F6CA4);
}

void OUTLINED_FUNCTION_21_0()
{
  JUMPOUT(0x2494F6CA4);
}

void OUTLINED_FUNCTION_22_0()
{
  JUMPOUT(0x2494F5EC4);
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return swift_bridgeObjectRetain();
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Int v6;
  uint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_106();
    OUTLINED_FUNCTION_49_0();
    String.hash(into:)();
    v6 = OUTLINED_FUNCTION_35_0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    OUTLINED_FUNCTION_42_0();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != v4 || v11[1] != v3) && (OUTLINED_FUNCTION_58_0() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_42_0();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == v4 && v16[1] == v3)
              break;
            if ((OUTLINED_FUNCTION_58_0() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_42_0();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void SearchResultRanker.rankResults(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  char v55;
  uint8_t *v56;
  os_signpost_id_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint8_t *v75;
  uint64_t *v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(_QWORD);
  NSObject *v113;
  unint64_t v114;
  unint64_t isa;
  NSObject *v116;
  NSObject *v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  Class v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  unint64_t v137;
  Class v139;
  BOOL v140;
  objc_class *v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  __int128 v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  os_log_type_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  void (*v164)(uint64_t, uint64_t);
  uint8_t *v165;
  os_signpost_id_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(NSObject *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  NSObject *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  __int128 v191;
  uint64_t *v192;
  uint64_t v193;
  __int128 v194;
  uint64_t i;
  uint64_t v196;
  uint64_t *v197;
  NSObject *v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;

  v178 = a1;
  v174 = type metadata accessor for GlobalItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18_1();
  v181 = v2;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v3);
  v186 = (uint64_t)&v167 - v4;
  v172 = type metadata accessor for OSSignpostError();
  v5 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  OUTLINED_FUNCTION_18_1();
  v169 = v6;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v7);
  v168 = (char *)&v167 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  v189 = (char *)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
  OUTLINED_FUNCTION_15();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (unint64_t)&v167 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_31_0();
  v197 = v16;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_31_0();
  v185 = v18;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v19);
  v184 = ((char *)&v167 - v20);
  i = type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_18_1();
  v182 = v22;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t)&v167 - v24;
  *(_QWORD *)&v191 = OUTLINED_FUNCTION_77_0();
  v199 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  OUTLINED_FUNCTION_18_1();
  v198 = v26;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_31_0();
  v193 = v28;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_31_0();
  v187 = v30;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_31_0();
  v179 = v32;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_31_0();
  v190 = v34;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_31_0();
  v171 = v36;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_31_0();
  *(_QWORD *)&v194 = v38;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (uint64_t)&v167 - v40;
  v180 = type metadata accessor for OSSignpostID();
  v42 = *(_QWORD *)(v180 - 8);
  MEMORY[0x24BDAC7A8](v180);
  OUTLINED_FUNCTION_18_1();
  v173 = v43;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_31_0();
  v170 = v45;
  OUTLINED_FUNCTION_17_1();
  v47 = MEMORY[0x24BDAC7A8](v46);
  v49 = (uint64_t)&v167 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = ((char *)&v167 - v50);
  if (one-time initialization token for searchSignposter == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v52 = type metadata accessor for OSSignposter();
    v53 = __swift_project_value_buffer(v52, (uint64_t)static Logging.searchSignposter);
    OSSignposter.logHandle.getter();
    OSSignpostID.init(log:)();
    v175 = v53;
    v54 = OSSignposter.logHandle.getter();
    LODWORD(v192) = static os_signpost_type_t.begin.getter();
    v55 = OS_os_log.signpostsEnabled.getter();
    v196 = v9;
    if ((v55 & 1) != 0)
    {
      v56 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v56 = 0;
      v57 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl(&dword_24315F000, v54, (os_signpost_type_t)v192, v57, "SearchResultRanker.rankResults", "", v56, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    v58 = v49;
    v49 = v180;
    (*(void (**)(uint64_t, NSObject *, uint64_t))(v42 + 16))(v58, v51, v180);
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    v177 = OSSignpostIntervalState.init(id:isOpen:)();
    v176 = *(void (**)(NSObject *, uint64_t))(v42 + 8);
    v176(v51, v49);
    v59 = MEMORY[0x24BEE4AF8];
    v201 = MEMORY[0x24BEE4AF8];
    v60 = v178;
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.getter(1, v60);
    v183 = v5;
    v192 = (uint64_t *)v15;
    if (!v61)
    {
      v49 = v60;
      v188 = v59;
      v25 = (uint64_t)v198;
      v68 = v60;
      v69 = v186;
      goto LABEL_41;
    }
    v200 = v59;
    v42 = *(_QWORD *)(v61 + 16);
    v188 = v61;
    swift_bridgeObjectRetain();
    if (!v42)
      break;
    v15 = 0;
    v5 = v190;
    v62 = v188;
    while (v15 < *(_QWORD *)(v62 + 16))
    {
      v51 = ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80));
      v49 = *(_QWORD *)(v199 + 72);
      outlined init with copy of SearchResult((uint64_t)v51 + v62 + v49 * v15, v41, type metadata accessor for SearchResult);
      outlined init with copy of SearchResult(v41, v25, type metadata accessor for SearchResultItem);
      v63 = swift_getEnumCaseMultiPayload() - 9;
      v64 = type metadata accessor for HotelReservation;
      switch(v63)
      {
        case 0:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          swift_bridgeObjectRelease();
          v64 = type metadata accessor for FlightReservation;
          goto LABEL_12;
        case 1:
          goto LABEL_12;
        case 2:
          v64 = type metadata accessor for RestaurantReservation;
          goto LABEL_12;
        case 6:
          v64 = type metadata accessor for Answer;
LABEL_12:
          _s10OmniSearch0B6ResultVWOhTm_0(v25, v64);
          outlined init with take of SearchResult(v41, v194, type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v65 = v200;
          v67 = *(_QWORD *)(v200 + 16);
          v66 = *(_QWORD *)(v200 + 24);
          if (v67 >= v66 >> 1)
          {
            OUTLINED_FUNCTION_86_0(v66);
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v65 = v200;
          }
          *(_QWORD *)(v65 + 16) = v67 + 1;
          outlined init with take of SearchResult(v194, (uint64_t)v51 + v65 + v67 * v49, type metadata accessor for SearchResult);
          v9 = v196;
          v5 = v190;
          break;
        default:
          _s10OmniSearch0B6ResultVWOhTm_0(v25, type metadata accessor for SearchResultItem);
          _s10OmniSearch0B6ResultVWOhTm_0(v41, type metadata accessor for SearchResult);
          break;
      }
      ++v15;
      v62 = v188;
      if (v42 == v15)
      {
        v59 = v200;
        goto LABEL_22;
      }
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
  }
  v5 = v190;
LABEL_22:
  swift_bridgeObjectRelease();
  v25 = (uint64_t)v198;
  v69 = v186;
  if (*(_QWORD *)(v59 + 16))
  {
    i = v59;
    OUTLINED_FUNCTION_6_1();
    if (one-time initialization token for search != -1)
      swift_once();
    v70 = type metadata accessor for Logger();
    v71 = __swift_project_value_buffer(v70, (uint64_t)static Logging.search);
    v72 = OUTLINED_FUNCTION_83_0(v71);
    v73 = static os_log_type_t.debug.getter();
    v74 = os_log_type_enabled(v72, v73);
    v51 = v184;
    v49 = v185;
    if (v74)
    {
      v75 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_24315F000, v72, v73, "Ranker: Returning early with answers.", v75, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    v76 = *(uint64_t **)(i + 16);
    swift_retain();
    v15 = 0;
    v41 = (uint64_t)type metadata accessor for SearchResult;
    *(_QWORD *)&v77 = 134218242;
    v194 = v77;
    v193 = MEMORY[0x24BEE4AD8] + 8;
    v42 = v171;
    v25 = v5;
    v197 = v76;
    while (1)
    {
      if ((uint64_t *)v15 == v76)
      {
        v78 = 1;
        v15 = (unint64_t)v76;
      }
      else
      {
        if (v15 >= *(_QWORD *)(i + 16))
          goto LABEL_139;
        LOBYTE(v5) = v15 + 1;
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_78_0();
        outlined init with copy of SearchResult(v79, v80, (uint64_t (*)(_QWORD))v41);
        v81 = v49 + *(int *)(v9 + 48);
        *(_QWORD *)v49 = v15;
        outlined init with take of SearchResult((uint64_t)v72, v81, (uint64_t (*)(_QWORD))v41);
        v78 = 0;
        ++v15;
        v25 = v190;
      }
      OUTLINED_FUNCTION_88_0(v49, v78);
      outlined init with take of (offset: Int, element: SearchResult)?(v49, (uint64_t)v51);
      if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v9) == 1)
        break;
      outlined init with take of SearchResult((uint64_t)v51 + *(int *)(v9 + 48), v42, (uint64_t (*)(_QWORD))v41);
      outlined init with copy of SearchResult(v42, v25, (uint64_t (*)(_QWORD))v41);
      v72 = v198;
      v82 = Logger.logObject.getter();
      v5 = v41;
      v83 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        v200 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        OUTLINED_FUNCTION_70_0(*(float *)&v194);
        v85 = SearchResult.debugDescription.getter();
        OUTLINED_FUNCTION_68_0(v85, v86);
        *(_QWORD *)(v84 + 14) = v87;
        OUTLINED_FUNCTION_36_0();
        OUTLINED_FUNCTION_66_0();
        OUTLINED_FUNCTION_67_0(&dword_24315F000, v82, v83, "SearchResultRanker Rank %ld: %s");
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_66_0();
      _s10OmniSearch0B6ResultVWOhTm_0(v42, (uint64_t (*)(_QWORD))v5);
      v51 = v184;
      v49 = v185;
      v76 = v197;
      v41 = v5;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_37_0();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
    {
      swift_retain();
      v89 = (uint64_t)v168;
      checkForErrorAndConsumeState(state:)();
      OUTLINED_FUNCTION_75_0();
      v90 = v183;
      if (OUTLINED_FUNCTION_62_0(v89, *(uint64_t (**)(uint64_t, _QWORD))(v183 + 88)) == *MEMORY[0x24BEE7810])
        goto LABEL_127;
      (*(void (**)(uint64_t, NSObject *))(v90 + 8))(v89, v72);
      goto LABEL_130;
    }
    goto LABEL_128;
  }
  swift_release();
  v68 = v178;
  swift_bridgeObjectRetain();
  specialized __RawDictionaryStorage.find<A>(_:)(1);
  v92 = v91;
  swift_bridgeObjectRelease();
  v49 = v68;
  if ((v92 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v200 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SearchType, [SearchResult]>);
    OUTLINED_FUNCTION_48_0();
    v49 = v200;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
    lazy protocol witness table accessor for type SearchType and conformance SearchType();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_36_0();
    swift_bridgeObjectRelease();
  }
LABEL_41:
  specialized Dictionary.subscript.getter(2, v68);
  v94 = v174;
  if (v93)
  {
    v184 = v49;
    v95 = *(_QWORD *)(v93 + 16);
    *(_QWORD *)&v194 = v93;
    if (v95)
    {
      v96 = (*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80);
      v97 = v93 + v96;
      v185 = MEMORY[0x24BEE4AF8];
      v51 = type metadata accessor for GlobalItem;
      v5 = *(_QWORD *)(v199 + 72);
      v98 = v182;
      while (1)
      {
        outlined init with copy of SearchResult(v97, v98, type metadata accessor for SearchResultItem);
        if (swift_getEnumCaseMultiPayload() != 12)
          break;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        swift_bridgeObjectRelease();
        outlined init with take of SearchResult(v98, v69, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
        if (one-time initialization token for webDomains != -1)
          swift_once();
        v99 = static GlobalSearchClient.webDomains;
        v100 = (uint64_t *)(v69 + *(int *)(v94 + 28));
        v101 = v94;
        v102 = *v100;
        v103 = v100[1];
        swift_bridgeObjectRetain();
        specialized Set.contains(_:)(v102, v103, v99);
        LOBYTE(v99) = v104;
        v105 = v186;
        swift_bridgeObjectRelease();
        v106 = v181;
        outlined init with copy of SearchResult(v105, v181, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
        if ((v99 & 1) == 0)
        {
          OUTLINED_FUNCTION_79_0(v106);
          v94 = v101;
LABEL_56:
          v111 = v105;
          v112 = (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem;
LABEL_57:
          _s10OmniSearch0B6ResultVWOhTm_0(v111, v112);
          outlined init with copy of SearchResult(v97, v187, type metadata accessor for SearchResult);
          v113 = v201;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v113 = v116;
          }
          isa = (unint64_t)v113[2].isa;
          v114 = (unint64_t)v113[3].isa;
          if (isa >= v114 >> 1)
          {
            OUTLINED_FUNCTION_86_0(v114);
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v113 = v117;
          }
          v113[2].isa = (Class)(isa + 1);
          outlined init with take of SearchResult(v187, (uint64_t)v113 + v96 + isa * v5, type metadata accessor for SearchResult);
          v201 = v113;
          v69 = v186;
          goto LABEL_62;
        }
        v107 = *(_BYTE *)(v106 + *(int *)(v101 + 36));
        OUTLINED_FUNCTION_79_0(v106);
        v94 = v101;
        if ((v107 & 1) != 0)
          goto LABEL_56;
        outlined init with copy of SearchResult(v97, v179, type metadata accessor for SearchResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v108 = v185;
        }
        else
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v108 = v118;
        }
        v110 = *(_QWORD *)(v108 + 16);
        v109 = *(_QWORD *)(v108 + 24);
        if (v110 >= v109 >> 1)
        {
          OUTLINED_FUNCTION_86_0(v109);
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v108 = v119;
        }
        *(_QWORD *)(v108 + 16) = v110 + 1;
        v185 = v108;
        outlined init with take of SearchResult(v179, v108 + v96 + v110 * v5, type metadata accessor for SearchResult);
        v69 = v186;
        OUTLINED_FUNCTION_79_0(v186);
LABEL_62:
        v97 += v5;
        --v95;
        v98 = v182;
        if (!v95)
          goto LABEL_67;
      }
      v111 = v98;
      v112 = type metadata accessor for SearchResultItem;
      goto LABEL_57;
    }
    v185 = MEMORY[0x24BEE4AF8];
LABEL_67:
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v184;
    OUTLINED_FUNCTION_46_0();
    specialized __RawDictionaryStorage.find<A>(_:)(2);
    v121 = v120;
    OUTLINED_FUNCTION_80_0();
    if ((v121 & 1) != 0)
    {
      swift_isUniquelyReferenced_nonNull_native();
      v200 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SearchType, [SearchResult]>);
      OUTLINED_FUNCTION_48_0();
      v49 = v200;
      v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
      lazy protocol witness table accessor for type SearchType and conformance SearchType();
      OUTLINED_FUNCTION_53_0();
      OUTLINED_FUNCTION_36_0();
      swift_bridgeObjectRelease();
    }
    v25 = (uint64_t)v198;
  }
  else
  {
    v185 = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v188 + 16))
    specialized Array.append<A>(contentsOf:)();
  else
    swift_bridgeObjectRelease();
  v15 = v49 + 64;
  v122 = 1 << *(_BYTE *)(v49 + 32);
  v123 = -1;
  if (v122 < 64)
    v123 = ~(-1 << v122);
  v42 = v123 & *(_QWORD *)(v49 + 64);
  v9 = (unint64_t)(v122 + 63) >> 6;
  OUTLINED_FUNCTION_46_0();
  v41 = 0;
  if (v42)
  {
LABEL_76:
    v124 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v125 = v124 | (v41 << 6);
    goto LABEL_93;
  }
  while (1)
  {
    v126 = v41 + 1;
    if (__OFADD__(v41, 1))
      goto LABEL_137;
    if (v126 >= v9)
      break;
    v127 = *(_QWORD *)(v15 + 8 * v126);
    ++v41;
    if (v127)
      goto LABEL_92;
    v41 = v126 + 1;
    if (v126 + 1 >= v9)
      break;
    v127 = *(_QWORD *)(v15 + 8 * v41);
    if (v127)
      goto LABEL_92;
    v41 = v126 + 2;
    if (v126 + 2 >= v9)
      break;
    v127 = *(_QWORD *)(v15 + 8 * v41);
    if (v127)
      goto LABEL_92;
    v41 = v126 + 3;
    if (v126 + 3 >= v9)
      break;
    v127 = *(_QWORD *)(v15 + 8 * v41);
    if (v127)
      goto LABEL_92;
    v128 = v126 + 4;
    if (v128 >= v9)
      break;
    v127 = *(_QWORD *)(v15 + 8 * v128);
    if (!v127)
    {
      while (1)
      {
        v41 = v128 + 1;
        if (__OFADD__(v128, 1))
          goto LABEL_140;
        if (v41 >= v9)
          goto LABEL_110;
        v127 = *(_QWORD *)(v15 + 8 * v41);
        ++v128;
        if (v127)
          goto LABEL_92;
      }
    }
    v41 = v128;
LABEL_92:
    v42 = (v127 - 1) & v127;
    v125 = __clz(__rbit64(v127)) + (v41 << 6);
LABEL_93:
    v5 = v49;
    v129 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 8 * v125);
    v25 = *(_QWORD *)(v129 + 16);
    v51 = v201;
    v49 = (uint64_t)v201[2].isa;
    if (__OFADD__(v49, v25))
    {
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    OUTLINED_FUNCTION_23_0();
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (v130 = (unint64_t)v51[3].isa >> 1, v130 < v49 + v25))
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v51 = v131;
      v130 = (unint64_t)v131[3].isa >> 1;
    }
    if (*(_QWORD *)(v129 + 16))
    {
      v132 = v51[2].isa;
      if (v130 - (uint64_t)v132 < v25)
        goto LABEL_134;
      v133 = (*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80);
      v134 = *(_QWORD *)(v199 + 72);
      v135 = (char *)v51 + v133 + v134 * (_QWORD)v132;
      v136 = v129 + v133;
      v137 = v129 + v133 + v134 * v25;
      if (v136 < (unint64_t)&v135[v134 * v25] && (unint64_t)v135 < v137)
      {
        OUTLINED_FUNCTION_0_0();
        OUTLINED_FUNCTION_9_0();
        OUTLINED_FUNCTION_7_1();
        __break(1u);
        JUMPOUT(0x24316ADF4);
      }
      swift_arrayInitWithCopy();
      if (v25)
      {
        v139 = v51[2].isa;
        v140 = __OFADD__(v139, v25);
        v141 = (Class)((char *)v139 + v25);
        if (v140)
          goto LABEL_136;
        v51[2].isa = v141;
      }
    }
    else if (v25)
    {
      goto LABEL_133;
    }
    OUTLINED_FUNCTION_56_0();
    v201 = v51;
    v25 = (uint64_t)v198;
    v49 = v5;
    if (v42)
      goto LABEL_76;
  }
LABEL_110:
  swift_release();
  if (*(_QWORD *)(v185 + 16))
  {
    swift_bridgeObjectRetain();
    specialized Array.append<A>(contentsOf:)();
  }
  v184 = v49;
  v15 = v183;
  v9 = v196;
  if (one-time initialization token for search != -1)
    swift_once();
  v142 = type metadata accessor for Logger();
  v143 = __swift_project_value_buffer(v142, (uint64_t)static Logging.search);
  v144 = OUTLINED_FUNCTION_83_0(v143);
  v145 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v144, v145))
  {
    v146 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v146 = 0;
    _os_log_impl(&dword_24315F000, v144, v145, "Ranker: after ranking:", v146, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  v147 = (uint64_t)v201[2].isa;
  *(_QWORD *)&v194 = v201;
  swift_bridgeObjectRetain();
  v41 = 0;
  *(_QWORD *)&v148 = 134218242;
  v191 = v148;
  v190 = MEMORY[0x24BEE4AD8] + 8;
  for (i = v147; ; v147 = i)
  {
    v149 = v197;
    v42 = v193;
    if (v41 == v147)
    {
      v150 = 1;
      v41 = v147;
      v151 = (uint64_t)v192;
      v5 = (uint64_t)type metadata accessor for SearchResult;
    }
    else
    {
      v5 = (uint64_t)type metadata accessor for SearchResult;
      if ((unint64_t)v41 >= *(_QWORD *)(v194 + 16))
        goto LABEL_138;
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_78_0();
      outlined init with copy of SearchResult(v152, v153, type metadata accessor for SearchResult);
      v151 = (uint64_t)v192;
      v154 = (uint64_t)v192 + *(int *)(v9 + 48);
      *v192 = v41;
      v155 = (uint64_t)v149;
      v149 = v197;
      outlined init with take of SearchResult(v155, v154, type metadata accessor for SearchResult);
      v150 = 0;
      ++v41;
    }
    OUTLINED_FUNCTION_88_0(v151, v150);
    outlined init with take of (offset: Int, element: SearchResult)?(v151, (uint64_t)v149);
    if (__swift_getEnumTagSinglePayload((uint64_t)v149, 1, v9) == 1)
      break;
    v49 = *v149;
    outlined init with take of SearchResult((uint64_t)v149 + *(int *)(v9 + 48), v42, type metadata accessor for SearchResult);
    outlined init with copy of SearchResult(v42, v25, type metadata accessor for SearchResult);
    v51 = Logger.logObject.getter();
    v156 = v25;
    v157 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v51, v157))
    {
      v158 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v200 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_70_0(*(float *)&v191);
      v159 = SearchResult.debugDescription.getter();
      OUTLINED_FUNCTION_68_0(v159, v160);
      *(_QWORD *)(v158 + 14) = v161;
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_69_0();
      OUTLINED_FUNCTION_67_0(&dword_24315F000, v51, v157, "SearchResultRanker Rank %ld: %s");
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_69_0();
    _s10OmniSearch0B6ResultVWOhTm_0(v42, type metadata accessor for SearchResult);
    v25 = v156;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  i = (uint64_t)v201;
  swift_bridgeObjectRelease();
  v88 = OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_37_0();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    swift_retain();
    v162 = v169;
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_75_0();
    if (OUTLINED_FUNCTION_62_0(v162, *(uint64_t (**)(uint64_t, _QWORD))(v15 + 88)) == *MEMORY[0x24BEE7810])
    {
LABEL_127:
      v163 = "[Error] Interval already ended";
      goto LABEL_131;
    }
    (*(void (**)(uint64_t, uint64_t *))(v15 + 8))(v162, v149);
LABEL_130:
    v163 = "";
LABEL_131:
    v165 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v165 = 0;
    v166 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_24315F000, v88, (os_signpost_type_t)v5, v166, "SearchResultRanker.rankResults", v163, v165, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }
LABEL_128:
  v164 = (void (*)(uint64_t, uint64_t))v176;

  v164(v9, v180);
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_43_0();
}

void specialized Array.append(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v3 = *(_QWORD *)(*v1 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3);
  v4 = *v1;
  *(_QWORD *)(*v1 + 16) = v3 + 1;
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_74_0();
  outlined init with take of SearchResult(a1, v4 + v5 + *(_QWORD *)(v6 + 72) * v3, type metadata accessor for SearchResult);
  *v1 = v4;
  OUTLINED_FUNCTION_63();
}

void specialized Array.append<A>(contentsOf:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_81_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_64_0() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v2 + 16);
  v8 = (*(_QWORD *)(v2 + 24) >> 1) - v7;
  OUTLINED_FUNCTION_77_0();
  if (v8 < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_74_0();
  specialized UnsafeMutablePointer.initialize(from:count:)(v0 + v10, v3, v2 + v10 + *(_QWORD *)(v9 + 72) * v7);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_6_1();
    *v1 = v2;
    OUTLINED_FUNCTION_63();
    return;
  }
  v11 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v11, v3);
  v12 = v11 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_81_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_64_0() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v2 + 16);
  if ((*(_QWORD *)(v2 + 24) >> 1) - v7 < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v0 + 32, v3, v2 + 16 * v7 + 32);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_6_1();
    *v1 = v2;
    OUTLINED_FUNCTION_63();
    return;
  }
  v8 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v8, v3);
  v9 = v8 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  specialized Array.append<A>(contentsOf:)();
}

{
  void (*v0)(uint64_t);
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_106();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = *v1;
  if (*v1 >> 62)
  {
    OUTLINED_FUNCTION_23_0();
    v6 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_56_0();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  v5 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v5;
  v6 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v6 = 1;
  }
  if (v5 >> 62)
    goto LABEL_25;
  v10 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v10 <= v7)
      v10 = v7;
    OUTLINED_FUNCTION_23_0();
    v5 = MEMORY[0x2494F62F0](v6, v10, 1, v5);
    swift_bridgeObjectRelease();
    *v1 = v5;
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    v11 = OUTLINED_FUNCTION_52_0(v9);
    v0(v11);
    if (v12 >= v4)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_23_0();
    v10 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_56_0();
  }
  if (v12 < 1)
    goto LABEL_20;
  OUTLINED_FUNCTION_84_0();
  if (!v15)
  {
    *(_QWORD *)(v13 + 16) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_0();
    return;
  }
  __break(1u);
}

void specialized Array.append<A>(contentsOf:)(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    OUTLINED_FUNCTION_46_0();
    v5 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_80_0();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    OUTLINED_FUNCTION_46_0();
    v4 = MEMORY[0x2494F62F0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    v10 = OUTLINED_FUNCTION_52_0(v8);
    specialized Array._copyContents(initializing:)(v10, v11, a1);
    if (v12 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_46_0();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_80_0();
  }
  if (v12 < 1)
    goto LABEL_20;
  OUTLINED_FUNCTION_84_0();
  if (!v15)
  {
    *(_QWORD *)(v13 + 16) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_0();
    return;
  }
  __break(1u);
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v13 = *(_QWORD *)(a1 + 16);
  v14 = *v8;
  v15 = *(_QWORD *)(*v8 + 16);
  v16 = v15 + v13;
  if (__OFADD__(v15, v13))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = a1;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v17 = *(_QWORD *)(v14 + 24) >> 1, v17 < v16))
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v14 = v18;
    v17 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v19 = *(_QWORD *)(v14 + 16);
  v20 = v17 - v19;
  a1 = specialized Sequence._copySequenceContents(initializing:)((uint64_t)v54, (_QWORD *)(v14 + 32 * v19 + 32), v17 - v19, v9);
  if (a1 < v13)
    goto LABEL_12;
  if (a1)
  {
    v23 = *(_QWORD *)(v14 + 16);
    v24 = __OFADD__(v23, a1);
    v25 = v23 + a1;
    if (v24)
    {
      __break(1u);
      goto LABEL_43;
    }
    *(_QWORD *)(v14 + 16) = v25;
  }
  if (a1 != v20)
  {
LABEL_10:
    outlined consume of Set<FlightDesignator>.Iterator._Variant();
    *v8 = v14;
    return;
  }
LABEL_13:
  v11 = *(_QWORD *)(v14 + 16);
  v52 = v54[0];
  v21 = v55;
  v48 = v54[1];
  v22 = v56;
  if (!v57)
  {
LABEL_43:
    v41 = v22 + 1;
    if (__OFADD__(v22, 1))
      goto LABEL_62;
    v46 = (unint64_t)(v21 + 64) >> 6;
    if (v41 >= v46)
      goto LABEL_10;
    v44 = v21;
    v26 = v22 + 1;
    if (!*(_QWORD *)(v48 + 8 * v41))
    {
      v26 = v22 + 2;
      if (v22 + 2 >= v46)
        goto LABEL_10;
      if (!*(_QWORD *)(v48 + 8 * v26))
      {
        v26 = v22 + 3;
        if (v22 + 3 >= v46)
          goto LABEL_10;
        if (!*(_QWORD *)(v48 + 8 * v26))
        {
          v26 = v22 + 4;
          if (v22 + 4 >= v46)
            goto LABEL_10;
          if (!*(_QWORD *)(v48 + 8 * v26))
          {
            v26 = v22 + 5;
            if (v22 + 5 >= v46)
              goto LABEL_10;
            if (!*(_QWORD *)(v48 + 8 * v26))
            {
              v42 = v22 + 6;
              do
              {
                if (v42 >= v46)
                  goto LABEL_10;
              }
              while (!*(_QWORD *)(v48 + 8 * v42++));
              v26 = v42 - 1;
            }
          }
        }
      }
    }
    OUTLINED_FUNCTION_65_0();
    goto LABEL_15;
  }
  v9 = (v57 - 1) & v57;
  v26 = v56;
  v44 = v55;
  v46 = (unint64_t)(v55 + 64) >> 6;
LABEL_15:
  OUTLINED_FUNCTION_41_0(a1, a2, v21, v22, a5, a6, a7, a8, v44, v46, v48, v50, v52);
  swift_bridgeObjectRetain();
  v27 = OUTLINED_FUNCTION_76_0();
  while (1)
  {
    v34 = *(_QWORD *)(v14 + 24) >> 1;
    v35 = v11 + 1;
    if (v34 < v11 + 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v14 = v27;
      v34 = *(_QWORD *)(v27 + 24) >> 1;
    }
    if (v11 < v34)
      break;
LABEL_40:
    *(_QWORD *)(v14 + 16) = v11;
  }
  v51 = v14 + 32;
  while (1)
  {
    v36 = (_QWORD *)(v51 + 32 * v11);
    *v36 = v16;
    v36[1] = v12;
    v36[2] = v13;
    v36[3] = v10;
    ++v11;
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_37;
    }
    v37 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v37 >= v47)
      goto LABEL_41;
    if (!*(_QWORD *)(v49 + 8 * v37))
    {
      if (v26 + 2 >= v47)
        goto LABEL_41;
      if (!*(_QWORD *)(v49 + 8 * (v26 + 2)))
      {
        if (v26 + 3 >= v47)
          goto LABEL_41;
        if (!*(_QWORD *)(v49 + 8 * (v26 + 3)))
        {
          if (v26 + 4 >= v47)
            goto LABEL_41;
          if (!*(_QWORD *)(v49 + 8 * (v26 + 4)))
          {
            if (v26 + 5 >= v47)
              goto LABEL_41;
            if (!*(_QWORD *)(v49 + 8 * (v26 + 5)))
            {
              v38 = v26 + 6;
              while (v38 < v47)
              {
                if (*(_QWORD *)(v49 + 8 * v38++))
                  goto LABEL_36;
              }
LABEL_41:
              *(_QWORD *)(v14 + 16) = v11;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_36:
    OUTLINED_FUNCTION_65_0();
    v26 = v40;
LABEL_37:
    OUTLINED_FUNCTION_41_0(v27, v35, v28, v29, v30, v31, v32, v33, v45, v47, v49, v51, v53);
    if (v11 >= v34)
    {
      swift_bridgeObjectRetain();
      v27 = OUTLINED_FUNCTION_76_0();
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    v27 = OUTLINED_FUNCTION_76_0();
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t SearchResultRanker.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SearchResultRanker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t SearchResultRanker.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SearchResultRanker.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t protocol witness for SearchResultRanking.rankResults(_:) in conformance SearchResultRanker()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 80))();
}

void specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

{
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

{
  uint64_t *v0;
  uint64_t v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *v0 = v3;
  }
  OUTLINED_FUNCTION_63();
}

void specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t a1)
{
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1);
}

{
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1);
}

{
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1);
}

{
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1);
}

{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    OUTLINED_FUNCTION_86_0(v2);
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)v1 = v3;
  }
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(_QWORD);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);

  OUTLINED_FUNCTION_4_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_13_1();
      if (v6)
      {
        __break(1u);
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_57_0();
  if (v4)
  {
    OUTLINED_FUNCTION_11_1(v8, v9, v10, v11, v12);
    v1(0);
    v13 = (const void *)OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_71_0(v13);
    if (v3)
    {
      OUTLINED_FUNCTION_54_0();
      v15 = v15 && v3 == -1;
      if (!v15)
      {
        OUTLINED_FUNCTION_19_1(v14 / v3);
        goto LABEL_13;
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_82_0();
    __break(1u);
    return;
  }
LABEL_13:
  v1(0);
  OUTLINED_FUNCTION_32_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_73_0(v16);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_27_0();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v17, v18, v19, v20, v21);
  }
  OUTLINED_FUNCTION_34_0();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_27_0();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v13, v14, v15, v16, v17);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;

  OUTLINED_FUNCTION_4_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_13_1();
      if (v6)
      {
        __break(1u);
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_57_0();
  if (v4)
  {
    OUTLINED_FUNCTION_11_1(v8, v9, v10, v11, v12);
    __swift_instantiateConcreteTypeFromMangledName(v1);
    v13 = (const void *)OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_71_0(v13);
    if (v3)
    {
      OUTLINED_FUNCTION_54_0();
      v15 = v15 && v3 == -1;
      if (!v15)
      {
        OUTLINED_FUNCTION_19_1(v14 / v3);
        goto LABEL_13;
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_82_0();
    __break(1u);
    return;
  }
LABEL_13:
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_32_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_73_0(v16);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_27_0();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v17, v18, v19, v20, v21);
  }
  OUTLINED_FUNCTION_34_0();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    OUTLINED_FUNCTION_24_0(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    OUTLINED_FUNCTION_24_0(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    OUTLINED_FUNCTION_24_0(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    OUTLINED_FUNCTION_24_0(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  OUTLINED_FUNCTION_4_1();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_13_1();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v2)
  {
    OUTLINED_FUNCTION_11_1(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_13_0();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_16_1(v12 - 32);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_1();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_27_0();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v13, v14, v15, v16, v17);
  }
  OUTLINED_FUNCTION_63();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_13_1();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchOverride>);
    v11 = (char *)OUTLINED_FUNCTION_8();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63_0(v12 - 32);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v9, (unint64_t)v13, a4);
  }
  OUTLINED_FUNCTION_63();
}

{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_13_1();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntity>);
    v11 = (char *)OUTLINED_FUNCTION_8();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_63_0(v12 - 32);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0, v9, (unint64_t)v13, a4);
  }
  OUTLINED_FUNCTION_63();
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (answerSynthesisRequest: AnswerSynthesisRequest, processedSearchEntities: [SearchResult]));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (taskIndex: Int, preprocessedEntities: [SearchResult]));
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnswerSynthesisResult?);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_11_1(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_23_1();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_51_0();
    return;
  }
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_0();
LABEL_11:
  OUTLINED_FUNCTION_7_1();
  __break(1u);
}

{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
    goto LABEL_11;
  }
  v6 = a4 + 8 * a1 + 32;
  if (v6 >= a3 + 8 * v5 || v6 + 8 * v5 <= a3)
  {
    OUTLINED_FUNCTION_11_1(a1, a2, a3, a4, a5);
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_29_0();
    return;
  }
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_0();
LABEL_11:
  OUTLINED_FUNCTION_7_1();
  __break(1u);
}

{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
    goto LABEL_11;
  }
  v6 = a4 + 32 * a1 + 32;
  if (v6 >= a3 + 32 * v5 || v6 + 32 * v5 <= a3)
  {
    OUTLINED_FUNCTION_11_1(a1, a2, a3, a4, a5);
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_29_0();
    return;
  }
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_0();
LABEL_11:
  OUTLINED_FUNCTION_7_1();
  __break(1u);
}

void specialized _ArrayBuffer._copyContents(subRange:initializing:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
    goto LABEL_11;
  }
  a5(0);
  OUTLINED_FUNCTION_23_1();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_60_0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_51_0();
    return;
  }
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_0();
LABEL_11:
  OUTLINED_FUNCTION_7_1();
  __break(1u);
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_9_0();
  }
  result = OUTLINED_FUNCTION_7_1();
  __break(1u);
  return result;
}

{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (v3 = a1 + 32 * a2 > a3) : (v3 = 0), v3))
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, String));
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 160 * a2 <= a1 || a1 + 160 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                               - 8)
                   + 72)
       * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for MemoryCreationQUParseAttributes();
    return swift_arrayInitWithCopy();
  }
  return result;
}

{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 88 * a2 <= a1 || a1 + 88 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2, a3);
}

{
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    OUTLINED_FUNCTION_106();
    v7 = *(_QWORD *)(*(_QWORD *)(v6(0) - 8) + 72) * v3;
    v8 = a3 + v7;
    v9 = v4 + v7;
    if (v8 <= v4 || v9 <= a3)
    {
      OUTLINED_FUNCTION_28_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_9_0();
  }
  result = OUTLINED_FUNCTION_7_1();
  __break(1u);
  return result;
}

uint64_t outlined init with take of (offset: Int, element: SearchResult)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[4 * a2] <= __src || &__src[4 * a2] <= __dst))
    return memcpy(__dst, __src, 4 * a2);
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[8 * a2] <= __src || &__src[8 * a2] <= __dst))
    return memcpy(__dst, __src, 8 * a2);
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[16 * a2] <= __src || &__src[16 * a2] <= __dst))
    return memcpy(__dst, __src, 16 * a2);
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      type metadata accessor for SFCardSection(0, v3);
      OUTLINED_FUNCTION_28_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_9_0();
  }
  result = OUTLINED_FUNCTION_7_1();
  __break(1u);
  return result;
}

{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    OUTLINED_FUNCTION_106();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(v5);
      OUTLINED_FUNCTION_28_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_9_0();
  }
  result = OUTLINED_FUNCTION_7_1();
  __break(1u);
  return result;
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      __swift_instantiateConcreteTypeFromMangledName(v3);
      OUTLINED_FUNCTION_28_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_9_0();
  }
  result = OUTLINED_FUNCTION_7_1();
  __break(1u);
  return result;
}

uint64_t implicit closure #1 in OSLogInterpolation.appendInterpolation(_:align:privacy:)(uint64_t (*a1)(void))
{
  return a1();
}

void closure #1 in OSLogArguments.append(_:)(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = a4();
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, a3);
  v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  OUTLINED_FUNCTION_36_0();
  *a1 = v8;
  OUTLINED_FUNCTION_59_0();
}

void getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t ObjectType;

  v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v10, 0, 0, 1, a1, a2);
  if (v6)
  {
    v7 = v6;
    ObjectType = swift_getObjectType();
    v10[0] = v7;
    v8 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v10, *a3);
      *a3 = v8 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v10[0] = a1;
    v10[1] = a2;
    v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v10, *a3);
      *a3 = v9 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  OUTLINED_FUNCTION_29_0();
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  Swift::Int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = String.UTF8View._foreignCount()();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void specialized closure #1 in OSLogArguments.append<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t v6;

  a4(&v6);
  v5 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  OUTLINED_FUNCTION_59_0();
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@unowned Int)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;

  OUTLINED_FUNCTION_49_0();
  String.hash(into:)();
  v4 = OUTLINED_FUNCTION_35_0();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(char a1)
{
  char v2;
  Swift::Int v3;

  v2 = a1 & 1;
  OUTLINED_FUNCTION_49_0();
  Hasher._combine(_:)(a1 & 1);
  v3 = OUTLINED_FUNCTION_35_0();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v2, v3);
}

{
  Swift::Int v2;

  OUTLINED_FUNCTION_49_0();
  String.hash(into:)();
  OUTLINED_FUNCTION_36_0();
  v2 = OUTLINED_FUNCTION_35_0();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for SearchResultType();
  lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x24BE6E238]);
  v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v4);
}

{
  Swift::Int v2;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  v2 = OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_56_0();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

uint64_t specialized __RawDictionaryStorage.find<A>(_:)()
{
  Swift::Int v0;

  OUTLINED_FUNCTION_49_0();
  Hasher._combine(_:)(0);
  v0 = OUTLINED_FUNCTION_35_0();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v0);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x6867696C746F7073;
          v8 = 0xE900000000000074;
        }
        else
        {
          v8 = 0xE600000000000000;
          v7 = 0x6C61626F6C67;
        }
      }
      else
      {
        v8 = 0xE600000000000000;
        v7 = 0x797469746E65;
      }
      if (a1)
      {
        v9 = a1 == 1 ? 0x6867696C746F7073 : 0x6C61626F6C67;
        v10 = a1 == 1 ? 0xE900000000000074 : 0xE600000000000000;
      }
      else
      {
        v10 = 0xE600000000000000;
        v9 = 0x797469746E65;
      }
      if (v7 == v9 && v8 == v10)
        break;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = type metadata accessor for SearchResultType();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType((unint64_t *)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x24BE6E240]);
      v14 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      outlined init with copy of AnyHashable(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2494F626C](v9, a1);
      outlined destroy of AnyHashable((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
            break;
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

unint64_t lazy protocol witness table accessor for type SearchType and conformance SearchType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchType and conformance SearchType;
  if (!lazy protocol witness table cache variable for type SearchType and conformance SearchType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchType, &type metadata for SearchType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchType and conformance SearchType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchType and conformance SearchType;
  if (!lazy protocol witness table cache variable for type SearchType and conformance SearchType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchType, &type metadata for SearchType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchType and conformance SearchType);
  }
  return result;
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

{
  _QWORD *v0;
  uint64_t v1;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *v0 = v1;
}

void _s10OmniSearch0B6ResultVWOhTm_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_5();
}

uint64_t dispatch thunk of SearchResultRanking.rankResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SearchResultRanker()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchResultRanker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchResultRanker.rankResults(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of SearchResultRanker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(_QWORD *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  _QWORD *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

{
  uint64_t *v3;
  char *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = v4;
}

_QWORD *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(_QWORD *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String)>);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(_QWORD);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  const void *v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_20_1();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_13_1();
      if (v8)
        goto LABEL_19;
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_57_0();
  if (v6)
  {
    OUTLINED_FUNCTION_11_1(v10, v11, v12, v13, v14);
    v2(0);
    v15 = (const void *)OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_71_0(v15);
    if (v5)
    {
      OUTLINED_FUNCTION_54_0();
      v17 = v17 && v5 == -1;
      if (!v17)
      {
        OUTLINED_FUNCTION_19_1(v16 / v5);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  v2(0);
  OUTLINED_FUNCTION_32_0();
  v20 = v0 + v19;
  if ((v3 & 1) != 0)
  {
    v1(v20, v4);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v20, v4, v18);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_43_0();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_20_1();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_13_1();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    OUTLINED_FUNCTION_11_1(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_8();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_19_1((uint64_t)(v13 - 32) / 40);
  }
  v14 = OUTLINED_FUNCTION_38_0();
  if ((v2 & 1) != 0)
  {
    v1(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v14, v15);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_12_0();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_20_1();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_13_1();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    OUTLINED_FUNCTION_11_1(v7, v8, v9, v10, v11);
    v12 = (const void *)OUTLINED_FUNCTION_13_0();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_16_1(v13 - 32);
  }
  v14 = OUTLINED_FUNCTION_38_0();
  if ((v2 & 1) != 0)
  {
    v1(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v14, v15);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_63();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_20_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_13_1();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v4)
  {
    OUTLINED_FUNCTION_11_1(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_13_0();
    v14 = _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_16_1(v14 - 32);
  }
  v15 = OUTLINED_FUNCTION_38_0();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_63();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_20_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_13_1();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  OUTLINED_FUNCTION_8_0();
  if (v4)
  {
    OUTLINED_FUNCTION_11_1(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_8();
    v14 = _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_19_1((uint64_t)(v14 - 32) / 24);
  }
  v15 = OUTLINED_FUNCTION_38_0();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_12_0();
}

char *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GeoLocation>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntity>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const void *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_13_1();
      if (v7)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_1_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (!v10)
  {
    v14 = (const void *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SearchResult)>);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                  - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (const void *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_23;
  OUTLINED_FUNCTION_63_0(v15 - v13);
LABEL_18:
  v17 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                                       - 8)
                           + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = a4 + v18;
  if ((a1 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v19, v9);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v19, v9, (unint64_t)v14 + v18);
  }
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_12_0();
}

Swift::Int specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)()
{
  Swift::Int v0;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  v0 = OUTLINED_FUNCTION_35_0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t specialized Array._copyContents(initializing:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void (*v10)(uint64_t *, _QWORD);
  void (*v11)(uint64_t *, _QWORD);
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFCardSection] and conformance [A](&lazy protocol witness table cache variable for type [MemoryCreationQUParseAttributes] and conformance [A], &demangling cache variable for type metadata for [MemoryCreationQUParseAttributes]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MemoryCreationQUParseAttributes]);
            specialized protocol witness for Collection.subscript.read in conformance [A]();
            v11 = v10;
            v13 = *v12;
            swift_retain();
            v11(&v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void (*v10)(uint64_t *, _QWORD);
  void (*v11)(uint64_t *, _QWORD);
  id *v12;
  id v13;
  uint64_t v14;

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFCardSection] and conformance [A](&lazy protocol witness table cache variable for type [SFResultSection] and conformance [A], &demangling cache variable for type metadata for [SFResultSection]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SFResultSection]);
            specialized protocol witness for Collection.subscript.read in conformance [A]();
            v11 = v10;
            v13 = *v12;
            v11(&v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void (*v10)(uint64_t *, _QWORD);
  void (*v11)(uint64_t *, _QWORD);
  id *v12;
  id v13;
  uint64_t v14;

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          lazy protocol witness table accessor for type [SFCardSection] and conformance [A](&lazy protocol witness table cache variable for type [SFCardSection] and conformance [A], &demangling cache variable for type metadata for [SFCardSection]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SFCardSection]);
            specialized protocol witness for Collection.subscript.read in conformance [A]();
            v11 = v10;
            v13 = *v12;
            v11(&v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        specialized UnsafeMutablePointer.initialize(from:count:)((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized == infix<A>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
    v5 = 1;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_36_0();
  return v5 & 1;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = EntityType.rawValue.getter();
  v2 = v1;
  if (v0 == EntityType.rawValue.getter() && v2 == v3)
    OUTLINED_FUNCTION_4_24();
  else
    LOBYTE(v0) = OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_36_0();
  return v0 & 1;
}

{
  char v0;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for SearchResultType();
  lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType();
  OUTLINED_FUNCTION_16_21();
  OUTLINED_FUNCTION_16_21();
  if (v5 == v3 && v6 == v4)
    OUTLINED_FUNCTION_4_24();
  else
    v0 = OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_36_0();
  return v0 & 1;
}

void lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for SearchResultType();
    atomic_store(MEMORY[0x2494F6CA4](a2, v4), a1);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t type metadata accessor for SFCardSection(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t outlined init with copy of AnyHashable(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t outlined destroy of AnyHashable(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void lazy protocol witness table accessor for type [SFCardSection] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2494F6CA4](MEMORY[0x24BEE12E0], v3), a1);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_11_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

void OUTLINED_FUNCTION_16_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

void OUTLINED_FUNCTION_19_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t OUTLINED_FUNCTION_24_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return specialized Array._endMutation()();
}

Swift::Int OUTLINED_FUNCTION_35_0()
{
  return Hasher._finalize()();
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return *(_QWORD *)(*(_QWORD *)(a13 + 48) + 16 * v13 + 8);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return swift_arrayInitWithCopy();
}

BOOL OUTLINED_FUNCTION_48_0()
{
  Swift::Bool v0;
  Swift::Int v1;

  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_52_0@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8 * *(_QWORD *)(a1 + 16) + 32;
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_62_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 344));
}

void OUTLINED_FUNCTION_63_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_66_0()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_0(v1, v0);
}

void OUTLINED_FUNCTION_67_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

void OUTLINED_FUNCTION_68_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 104));
}

void OUTLINED_FUNCTION_69_0()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_0(v1, v0);
}

void OUTLINED_FUNCTION_70_0(float a1)
{
  uint64_t v1;
  uint64_t v2;

  *(float *)v2 = a1;
  *(_QWORD *)(v2 + 4) = v1;
  *(_WORD *)(v2 + 12) = 2080;
}

size_t OUTLINED_FUNCTION_71_0(const void *ptr)
{
  return _swift_stdlib_malloc_size(ptr);
}

uint64_t OUTLINED_FUNCTION_73_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1 + a1, v3);
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return type metadata accessor for SearchResult(0);
}

void OUTLINED_FUNCTION_79_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_83_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return OSSignposter.logHandle.getter();
}

BOOL OUTLINED_FUNCTION_86_0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_88_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t IntentFileItem.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IntentFileItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_7_2() + 20);
  return outlined init with copy of URL?(v3, a1);
}

uint64_t type metadata accessor for IntentFileItem()
{
  uint64_t result;

  result = type metadata singleton initialization cache for IntentFileItem;
  if (!type metadata singleton initialization cache for IntentFileItem)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t IntentFileItem.contentUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_7_2() + 24);
  v4 = OUTLINED_FUNCTION_5_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

BOOL static IntentFileItem.CodingKeys.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void IntentFileItem.CodingKeys.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t IntentFileItem.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7107189 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x55746E65746E6F63 && a2 == 0xEA00000000006C72)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t IntentFileItem.CodingKeys.init(intValue:)()
{
  return 3;
}

Swift::Int IntentFileItem.CodingKeys.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

uint64_t IntentFileItem.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t IntentFileItem.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 7107189;
  return 0x55746E65746E6F63;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance IntentFileItem.CodingKeys(char *a1, char *a2)
{
  return static IntentFileItem.CodingKeys.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance IntentFileItem.CodingKeys()
{
  unsigned __int8 *v0;

  return IntentFileItem.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance IntentFileItem.CodingKeys(uint64_t a1)
{
  unsigned __int8 *v1;

  IntentFileItem.CodingKeys.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance IntentFileItem.CodingKeys()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance IntentFileItem.CodingKeys()
{
  char *v0;

  return IntentFileItem.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance IntentFileItem.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = IntentFileItem.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance IntentFileItem.CodingKeys()
{
  return IntentFileItem.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance IntentFileItem.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = IntentFileItem.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance IntentFileItem.CodingKeys()
{
  lazy protocol witness table accessor for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance IntentFileItem.CodingKeys()
{
  lazy protocol witness table accessor for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void IntentFileItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<IntentFileItem.CodingKeys>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for IntentFileItem();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    OUTLINED_FUNCTION_4_2();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_4_2();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_1_1();
}

unint64_t lazy protocol witness table accessor for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for IntentFileItem.CodingKeys, &unk_2513C8870);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for IntentFileItem.CodingKeys, &unk_2513C8870);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for IntentFileItem.CodingKeys, &unk_2513C8870);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for IntentFileItem.CodingKeys, &unk_2513C8870);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys);
  }
  return result;
}

void IntentFileItem.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = type metadata accessor for URL();
  v15 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_2();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<IntentFileItem.CodingKeys>);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_3_1();
  v10 = type metadata accessor for IntentFileItem();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_2();
  v13 = (uint64_t *)(v12 - v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type IntentFileItem.CodingKeys and conformance IntentFileItem.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    OUTLINED_FUNCTION_6_2();
  }
  else
  {
    *v13 = KeyedDecodingContainer.decode(_:forKey:)();
    v13[1] = v14;
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    outlined init with take of URL?(v9, (uint64_t)v13 + *(int *)(v10 + 20));
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_0_1();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))((char *)v13 + *(int *)(v10 + 24), v5, v17);
    outlined init with copy of IntentFileItem((uint64_t)v13, a2);
    OUTLINED_FUNCTION_6_2();
    outlined destroy of IntentFileItem((uint64_t)v13);
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of IntentFileItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntentFileItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of IntentFileItem(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IntentFileItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t IntentFileItem.init(id:url:contentUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;

  *a5 = a1;
  a5[1] = a2;
  v8 = OUTLINED_FUNCTION_7_2();
  outlined init with take of URL?(a3, (uint64_t)a5 + *(int *)(v8 + 20));
  v9 = (char *)a5 + *(int *)(v8 + 24);
  v10 = OUTLINED_FUNCTION_5_2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a4, v10);
}

uint64_t instantiation function for generic protocol witness table for IntentFileItem(_QWORD *a1)
{
  uint64_t result;

  a1[1] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type IntentFileItem and conformance IntentFileItem, (uint64_t (*)(uint64_t))type metadata accessor for IntentFileItem, (uint64_t)&protocol conformance descriptor for IntentFileItem);
  a1[2] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type IntentFileItem and conformance IntentFileItem, (uint64_t (*)(uint64_t))type metadata accessor for IntentFileItem, (uint64_t)&protocol conformance descriptor for IntentFileItem);
  result = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type IntentFileItem and conformance IntentFileItem, (uint64_t (*)(uint64_t))type metadata accessor for IntentFileItem, (uint64_t)&protocol conformance descriptor for IntentFileItem);
  a1[3] = result;
  return result;
}

uint64_t lazy protocol witness table accessor for type URL and conformance URL(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2494F6CA4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void protocol witness for Decodable.init(from:) in conformance IntentFileItem(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  IntentFileItem.init(from:)(a1, a2);
}

void protocol witness for Encodable.encode(to:) in conformance IntentFileItem(_QWORD *a1)
{
  IntentFileItem.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for IntentFileItem(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
    }
    else
    {
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v14(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      v14(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
    }
  }
  return v4;
}

uint64_t destroy for IntentFileItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  if (!EnumTagSinglePayload)
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v4, v5);
    v8 = v10;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v5);
}

char *initializeWithCopy for IntentFileItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v12(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    v12(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  return a1;
}

char *assignWithCopy for IntentFileItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (v11)
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = *(_QWORD *)(v9 - 8);
    }
    else
    {
      v13 = *(_QWORD *)(v9 - 8);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  else
  {
    v13 = *(_QWORD *)(v9 - 8);
    if (v11)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v9);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v7, v8, v9);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *initializeWithTake for IntentFileItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v11(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  }
  return a1;
}

char *assignWithTake for IntentFileItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (v12)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = *(_QWORD *)(v10 - 8);
    }
    else
    {
      v14 = *(_QWORD *)(v10 - 8);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
  }
  else
  {
    v14 = *(_QWORD *)(v10 - 8);
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v10);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v8, v9, v10);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntentFileItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2431716BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_5_2();
      v10 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for IntentFileItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243171760(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_5_2();
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for IntentFileItem()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for URL?();
  if (v0 <= 0x3F)
  {
    type metadata accessor for URL();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for URL?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for URL?)
  {
    type metadata accessor for URL();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for URL?);
  }
}

uint64_t getEnumTagSinglePayload for IntentFileItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IntentFileItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2431719AC + 4 * byte_24334D7BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2431719E0 + 4 * byte_24334D7B8[v4]))();
}

uint64_t sub_2431719E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431719E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431719F0);
  return result;
}

uint64_t sub_2431719FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243171A04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_243171A08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243171A10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for IntentFileItem.CodingKeys(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void *type metadata accessor for IntentFileItem.CodingKeys()
{
  return &unk_2513C8870;
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return type metadata accessor for URL();
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return type metadata accessor for IntentFileItem();
}

uint64_t LLMFormatter.StringInterpolation.resolvedOutput.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LLMFormatter.StringInterpolation.resolvedOutput.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

OmniSearch::LLMFormatter::StringInterpolation __swiftcall LLMFormatter.StringInterpolation.init(literalCapacity:interpolationCount:)(Swift::Int literalCapacity, Swift::Int interpolationCount)
{
  Swift::Int v2;
  BOOL v3;
  OmniSearch::LLMFormatter::StringInterpolation result;

  v2 = 10 * interpolationCount;
  if ((unsigned __int128)(interpolationCount * (__int128)10) >> 64 != (10 * interpolationCount) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  v3 = __OFADD__(literalCapacity, v2);
  literalCapacity += v2;
  if (v3)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  MEMORY[0x2494F5C60](literalCapacity);
  literalCapacity = 0;
  interpolationCount = 0xE000000000000000;
LABEL_6:
  result.resolvedOutput._object = (void *)interpolationCount;
  result.resolvedOutput._countAndFlagsBits = literalCapacity;
  return result;
}

void LLMFormatter.StringInterpolation.appendInterpolation(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;

  outlined init with copy of CustomStringConvertible?(a1, (uint64_t)&v8, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v9)
  {
    outlined init with take of SageSearchClient(&v8, (uint64_t)v10);
    v1 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v2 = dispatch thunk of CustomStringConvertible.description.getter();
    v4 = v3;
    swift_bridgeObjectRelease();
    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v6 = __swift_project_boxed_opaque_existential_1(v10, v11);
      MEMORY[0x24BDAC7A8](v6);
      OUTLINED_FUNCTION_3_1();
      (*(void (**)(uint64_t))(v7 + 16))(v1);
      v13._countAndFlagsBits = String.init<A>(describing:)();
      OUTLINED_FUNCTION_8_1(v13);
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v8, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
}

void LLMFormatter.StringInterpolation.appendInterpolation(_:if:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  outlined init with copy of CustomStringConvertible?(a3, (uint64_t)&v17, &demangling cache variable for type metadata for CustomStringConvertible?);
  if (v18)
  {
    outlined init with take of SageSearchClient((__int128 *)&v17._countAndFlagsBits, (uint64_t)v19);
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v5 = dispatch thunk of CustomStringConvertible.description.getter();
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      v9 = __swift_project_boxed_opaque_existential_1(v19, v20);
      MEMORY[0x24BDAC7A8](v9);
      OUTLINED_FUNCTION_2_2();
      (*(void (**)(uint64_t))(v12 + 16))(v11 - v10);
      v13 = String.init<A>(describing:)();
      v15 = v14;
      v17._countAndFlagsBits = a1;
      v17._object = a2;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_9_1();
      v16._countAndFlagsBits = v13;
      v16._object = v15;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_1(v17);
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v17, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_12_0();
}

Swift::Void __swiftcall LLMFormatter.StringInterpolation.appendInterpolation(_:names:)(Swift::String _, Swift::OpaquePointer_optional names)
{
  void *rawValue;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (names.value._rawValue)
  {
    rawValue = names.value._rawValue;
    if (*((_QWORD *)names.value._rawValue + 2))
    {
      v6 = _;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_9_1();
      OUTLINED_FUNCTION_8_1(v6);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String], MEMORY[0x24BEE12B0]);
      v3 = OUTLINED_FUNCTION_0_2();
      OUTLINED_FUNCTION_2_3(v3, v4, MEMORY[0x24BEE0D00], v5, (uint64_t)rawValue, (uint64_t)v6._object, v7, v8, v9);
      outlined destroy of CustomStringConvertible?((uint64_t)&v6, &demangling cache variable for type metadata for CustomStringConvertible?);
    }
  }
  OUTLINED_FUNCTION_7_3();
}

Swift::Void __swiftcall LLMFormatter.StringInterpolation.appendInterpolation(names:)(Swift::OpaquePointer_optional names)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[5];

  if (names.value._rawValue && *((_QWORD *)names.value._rawValue + 2))
  {
    v4[0] = (uint64_t)names.value._rawValue;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String], MEMORY[0x24BEE12B0]);
    v1 = OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_2_3(v1, v2, MEMORY[0x24BEE0D00], v3, v4[0], v4[1], v4[2], v4[3], v4[4]);
    outlined destroy of CustomStringConvertible?((uint64_t)v4, &demangling cache variable for type metadata for CustomStringConvertible?);
  }
  OUTLINED_FUNCTION_7_3();
}

void LLMFormatter.StringInterpolation.appendInterpolation(date:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_70();
  v5 = type metadata accessor for Date();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_1();
  outlined init with copy of CustomStringConvertible?(a1, v1, &demangling cache variable for type metadata for Date?);
  if (__swift_getEnumTagSinglePayload(v1, 1, v5) == 1)
  {
    v7 = &demangling cache variable for type metadata for Date?;
    v8 = (_QWORD *)v1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v1, v5);
    v9 = static LLMFormatter.dateFormatter.getter();
    isa = Date._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v9, sel_stringFromDate_, isa);

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v14 = v13;

    v15[3] = MEMORY[0x24BEE0D00];
    v15[4] = MEMORY[0x24BEE0D70];
    v15[0] = v12;
    v15[1] = v14;
    LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
    v7 = &demangling cache variable for type metadata for CustomStringConvertible?;
    v8 = v15;
  }
  outlined destroy of CustomStringConvertible?((uint64_t)v8, v7);
  OUTLINED_FUNCTION_12_0();
}

void outlined init with copy of CustomStringConvertible?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_5();
}

void outlined destroy of CustomStringConvertible?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_5();
}

uint64_t static LLMFormatter.string(from:)()
{
  id v0;
  Class isa;
  id v2;
  uint64_t v3;

  v0 = static LLMFormatter.dateFormatter.getter();
  isa = Date._bridgeToObjectiveC()().super.isa;
  v2 = objc_msgSend(v0, sel_stringFromDate_, isa);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t protocol witness for StringInterpolationProtocol.init(literalCapacity:interpolationCount:) in conformance LLMFormatter.StringInterpolation@<X0>(Swift::Int a1@<X0>, Swift::Int a2@<X1>, OmniSearch::LLMFormatter::StringInterpolation *a3@<X8>)
{
  uint64_t result;
  OmniSearch::LLMFormatter::StringInterpolation v5;

  v5 = LLMFormatter.StringInterpolation.init(literalCapacity:interpolationCount:)(a1, a2);
  result = v5.resolvedOutput._countAndFlagsBits;
  *a3 = v5;
  return result;
}

void protocol witness for StringInterpolationProtocol.appendLiteral(_:) in conformance LLMFormatter.StringInterpolation(Swift::String *a1)
{
  LLMFormatter.StringInterpolation.appendLiteral(_:)(*a1);
}

id static LLMFormatter.dateFormatter.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  Class isa;

  v1 = type metadata accessor for TimeZone();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_70();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  static TimeZone.current.getter();
  isa = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  objc_msgSend(v3, sel_setTimeZone_, isa);

  objc_msgSend(v3, sel_setDateStyle_, 2);
  objc_msgSend(v3, sel_setTimeStyle_, 3);
  return v3;
}

uint64_t static LLMFormatter.sanitize(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = type metadata accessor for CharacterSet();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_2_2();
  v4 = v3 - v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  Regex.init(_regexString:version:)();
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>, &demangling cache variable for type metadata for Regex<Substring>, MEMORY[0x24BEE7460]);
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type String and conformance String();
  v10 = StringProtocol.trimmingCharacters(in:)();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDC5108], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

void lazy protocol witness table accessor for type [String] and conformance [A](unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2494F6CA4](a3, v5), a1);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t LLMFormatter.description.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t associated type witness table accessor for StringInterpolationProtocol.StringLiteralType : _ExpressibleByBuiltinStringLiteral in LLMFormatter.StringInterpolation()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t lazy protocol witness table accessor for type LLMFormatter and conformance LLMFormatter()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter;
  if (!lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for LLMFormatter, &type metadata for LLMFormatter);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter;
  if (!lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for LLMFormatter, &type metadata for LLMFormatter);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter;
  if (!lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for LLMFormatter, &type metadata for LLMFormatter);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMFormatter and conformance LLMFormatter);
  }
  return result;
}

uint64_t protocol witness for ExpressibleByStringLiteral.init(stringLiteral:) in conformance LLMFormatter@<X0>(Swift::String *a1@<X0>, OmniSearch::LLMFormatter *a2@<X8>)
{
  uint64_t result;
  OmniSearch::LLMFormatter v4;

  v4 = LLMFormatter.init(stringLiteral:)(*a1);
  result = v4.description._countAndFlagsBits;
  *a2 = v4;
  return result;
}

unint64_t lazy protocol witness table accessor for type LLMFormatter.StringInterpolation and conformance LLMFormatter.StringInterpolation()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LLMFormatter.StringInterpolation and conformance LLMFormatter.StringInterpolation;
  if (!lazy protocol witness table cache variable for type LLMFormatter.StringInterpolation and conformance LLMFormatter.StringInterpolation)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for LLMFormatter.StringInterpolation, &type metadata for LLMFormatter.StringInterpolation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LLMFormatter.StringInterpolation and conformance LLMFormatter.StringInterpolation);
  }
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LLMFormatter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t associated type witness table accessor for ExpressibleByExtendedGraphemeClusterLiteral.ExtendedGraphemeClusterLiteralType : _ExpressibleByBuiltinExtendedGraphemeClusterLiteral in LLMFormatter()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t associated type witness table accessor for ExpressibleByUnicodeScalarLiteral.UnicodeScalarLiteralType : _ExpressibleByBuiltinUnicodeScalarLiteral in LLMFormatter()
{
  return MEMORY[0x24BEE0D88];
}

ValueMetadata *type metadata accessor for LLMFormatter()
{
  return &type metadata for LLMFormatter;
}

_QWORD *initializeBufferWithCopyOfBuffer for LLMFormatter.StringInterpolation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LLMFormatter.StringInterpolation()
{
  return swift_bridgeObjectRelease();
}

void assignWithCopy for LLMFormatter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5();
}

_QWORD *assignWithTake for LLMFormatter.StringInterpolation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LLMFormatter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LLMFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LLMFormatter.StringInterpolation()
{
  return &type metadata for LLMFormatter.StringInterpolation;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return BidirectionalCollection<>.joined(separator:)();
}

void OUTLINED_FUNCTION_2_3(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  a8 = a3;
  a9 = v9;
  a5 = a1;
  a6 = a2;
  LLMFormatter.StringInterpolation.appendInterpolation(_:)((uint64_t)&a5);
}

void OUTLINED_FUNCTION_8_1(Swift::String a1)
{
  String.append(_:)(a1);
}

void OUTLINED_FUNCTION_9_1()
{
  Swift::String v0;

  v0._countAndFlagsBits = 32;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

void specialized Collection.first.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    String.subscript.getter();
  else
    OUTLINED_FUNCTION_103_0();
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized Collection.first.getter(a1, type metadata accessor for SearchResult, a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for ExtractedResult, a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE70758], a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE6E380], a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], a2);
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = a2(0);
  if (v6)
  {
    OUTLINED_FUNCTION_20_2();
    outlined init with copy of SearchResult(a1 + v8, a3, a2);
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v9, 1, v7);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = a2(0);
  v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v8, 1, v7);
}

double specialized Collection.first.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    outlined init with copy of IMSPIMessageProtocol(a1 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t specialized Collection.first.getter(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t result;
  int v8;
  int v9;

  v2 = specialized Dictionary.Values.startIndex.getter(a1);
  v4 = v3;
  v6 = v5;
  result = specialized Dictionary.Values.endIndex.getter(a1);
  if (((v6 | v9) & 1) != 0)
    goto LABEL_7;
  if (v4 != v8)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (v2 == result)
    return 0;
  else
    return specialized Dictionary.Values.subscript.getter(v2, v4, 0, a1);
}

void static GlobalSearchResponseProcessor.makeGenericItem(experience:domain:lowConfidenceKnowledge:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_18_2();
  v24 = v2;
  v25 = v3;
  v5 = v4;
  v7 = v6;
  v26 = OUTLINED_FUNCTION_42_1();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_62_1();
  v10 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  if (v14)
  {
    v15 = v14;
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_80_0();
    specialized Collection.first.getter(v15, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], v1);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_2(v1, 1, v10);
    if (!v16)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v1, v10);
      static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
      v20 = static GlobalSearchResponseProcessor.makeSFCard(card:)();
      v21 = static GlobalSearchResponseProcessor.makeGlobalItems(experience:domain:lowConfidenceKnowledge:)((uint64_t)v7, v5, v25, v24 & 1);
      v22 = v20;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch10GlobalItemVG_AF0E6ResultVs5NeverOTg504_s10d8Search06f89B17ResponseProcessorO15makeGenericItem10experience6domain22lowConfidenceKnowledgeSayAA0B6H58VG015SiriInformationB00G10ExperienceC_SSSbtFZAiA0cH0VXEfU_0xyE00P10ExperienceCSo6SFCardCSgTf1cn_n(v21, v7, v20);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v26);
      OUTLINED_FUNCTION_69_1((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_56_0();
      goto LABEL_9;
    }
    outlined destroy of SearchResult?(v1, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v17 = OUTLINED_FUNCTION_13();
  v22 = OUTLINED_FUNCTION_28(v17, (uint64_t)static Logging.search);
  v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v19 = 0;
    OUTLINED_FUNCTION_19_2(&dword_24315F000, v22, v18, "No layout snippet in GenericExperience", v19);
    specialized UnsafeMutablePointer.deallocate()();
  }
LABEL_9:

  OUTLINED_FUNCTION_43_0();
}

void static GlobalSearchResponseProcessor.makeAudioItem(experience:domain:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;

  OUTLINED_FUNCTION_18_2();
  v34 = v5;
  v35 = v4;
  v37 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_62_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_16_2();
  v36 = type metadata accessor for SearchResultItem(v12);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
  v33 = type metadata accessor for SearchResult(0);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24334DB60;
  v17 = v16 + v15;
  v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
               + 48);
  UUID.init()();
  v18 = UUID.uuidString.getter();
  v20 = v19;
  OUTLINED_FUNCTION_69_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v21 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_49((uint64_t)v10, v22, v23, v21);
  v24 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
  OUTLINED_FUNCTION_49(v3, v25, v26, v24);
  v27 = v34;
  swift_bridgeObjectRetain();
  GlobalItem.init(id:domain:url:text:parsecEntity:lowConfidenceKnowledge:)(v18, v20, v35, v27, (uint64_t)v10, 0, 0, v3, v1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24334DB70;
  type metadata accessor for DialogExperience();
  swift_allocObject();
  *(_QWORD *)(v28 + 32) = DialogExperience.init(_:card:)(v37);
  v38 = v28;
  specialized Array._endMutation()();
  *(_QWORD *)((char *)v1 + v32) = v38;
  swift_storeEnumTagMultiPayload();
  v29 = v33;
  v30 = (_QWORD *)(v17 + *(int *)(v33 + 24));
  *v30 = 0;
  v30[1] = 0;
  outlined init with take of SearchResult((uint64_t)v1, v17, type metadata accessor for SearchResultItem);
  *(_QWORD *)(v17 + *(int *)(v29 + 20)) = 0;
  OUTLINED_FUNCTION_43_0();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10OmniSearch10GlobalItemVG_AF0E6ResultVs5NeverOTg504_s10d8Search06f89B17ResponseProcessorO15makeGenericItem10experience6domain22lowConfidenceKnowledgeSayAA0B6H58VG015SiriInformationB00G10ExperienceC_SSSbtFZAiA0cH0VXEfU_0xyE00P10ExperienceCSo6SFCardCSgTf1cn_n(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = type metadata accessor for SearchResult(0);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v26 = a2;
    v27 = a3;
    v22 = v3;
    v31 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v11 = v31;
    v12 = *(_QWORD *)(type metadata accessor for GlobalItem() - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v25 = *(_QWORD *)(v12 + 72);
    v24 = xmmword_24334DB70;
    v14 = v27;
    do
    {
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
                   + 48);
      outlined init with copy of SearchResult(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v24;
      type metadata accessor for DialogExperience();
      swift_allocObject();
      v23 = v14;
      v17 = v26;
      *(_QWORD *)(v16 + 32) = DialogExperience.init(_:card:)(v17);
      v30 = v16;
      specialized Array._endMutation()();
      *(_QWORD *)&v9[v15] = v30;
      type metadata accessor for SearchResultItem(0);
      swift_storeEnumTagMultiPayload();
      v18 = v29;
      v19 = &v9[*(int *)(v29 + 24)];
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = 0;
      *(_QWORD *)&v9[*(int *)(v18 + 20)] = 0;
      v31 = v11;
      v20 = *(_QWORD *)(v11 + 16);
      if (v20 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v11 = v31;
      }
      *(_QWORD *)(v11 + 16) = v20 + 1;
      outlined init with take of SearchResult((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v20, type metadata accessor for SearchResult);
      v13 += v25;
      --v10;
    }
    while (v10);

    a3 = v23;
  }
  else
  {

    v11 = MEMORY[0x24BEE4AF8];
  }

  return v11;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[5];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v70 = a2;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v16);
  v69 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID();
  v67 = *(_QWORD *)(v18 - 8);
  v68 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v63 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for GlobalItem();
  v66 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v64 = (_QWORD *)((char *)v56 - v25);
  MEMORY[0x24BDAC7A8](v24);
  v62 = (uint64_t)v56 - v26;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v71 = a3;
    v56[4] = v7;
    v28 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v60 = v29;
    v61 = v28;
    v59 = *(_QWORD *)(v29 + 72);
    if ((a5 & 0x2000000000000000) != 0)
      v31 = HIBYTE(a5) & 0xF;
    else
      v31 = a4 & 0xFFFFFFFFFFFFLL;
    v56[1] = a1;
    swift_bridgeObjectRetain();
    v56[2] = a7;
    v56[3] = a5;
    if (v31)
      v32 = a5;
    else
      v32 = a7;
    if (v31)
      v33 = a4;
    else
      v33 = a6;
    v57 = v33;
    v58 = v32;
    v34 = MEMORY[0x24BEE4AF8];
    v35 = type metadata accessor for GlobalItem;
    v36 = (uint64_t)v69;
    v37 = (uint64_t)v65;
    do
    {
      v73 = v27;
      v38 = v63;
      UUID.init()();
      v39 = UUID.uuidString.getter();
      v72 = v40;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v68);
      v41 = type metadata accessor for URL();
      __swift_storeEnumTagSinglePayload(v36, 1, 1, v41);
      v42 = v35;
      v43 = v34;
      v44 = v58;
      swift_bridgeObjectRetain();
      v45 = v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v37, v30, v61);
      __swift_storeEnumTagSinglePayload(v37, 0, 1, v45);
      v46 = v71;
      swift_bridgeObjectRetain();
      v47 = v64;
      v48 = v44;
      v34 = v43;
      v35 = v42;
      GlobalItem.init(id:domain:url:text:parsecEntity:lowConfidenceKnowledge:)(v39, v72, v70, v46, v36, v57, v48, v37, v64, 0);
      v49 = (uint64_t)v47;
      v50 = v62;
      outlined init with take of SearchResult(v49, v62, (uint64_t (*)(_QWORD))v42);
      outlined init with take of SearchResult(v50, (uint64_t)v23, (uint64_t (*)(_QWORD))v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v34 = v53;
      }
      v51 = *(_QWORD *)(v34 + 16);
      v52 = v73;
      if (v51 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v34 = v54;
      }
      *(_QWORD *)(v34 + 16) = v51 + 1;
      outlined init with take of SearchResult((uint64_t)v23, v34+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v51, (uint64_t (*)(_QWORD))v35);
      v30 += v59;
      v27 = v52 - 1;
    }
    while (v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v34;
}

unint64_t static GlobalSearchResponseProcessor.processRenderedDialog(experience:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = type metadata accessor for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_0();
  if (!static GlobalSearchResponseProcessor.parseExperience(experience:)())
  {
    v8 = OUTLINED_FUNCTION_41_1(v0);
    goto LABEL_5;
  }
  v6 = v5;
  swift_bridgeObjectRetain();
  v7 = OUTLINED_FUNCTION_95_0();
  outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(v7);
  specialized Collection.first.getter(v6, (uint64_t (*)(_QWORD))MEMORY[0x24BE710C0], v0);
  OUTLINED_FUNCTION_80_0();
  v8 = OUTLINED_FUNCTION_22_2(v0, 1, v3);
  if (v9)
  {
LABEL_5:
    OUTLINED_FUNCTION_99_0(v8, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent?);
    return 0xD00000000000003FLL;
  }
  v10 = OUTLINED_FUNCTION_88_1(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  v11 = MEMORY[0x2494F4EBC](v10);
  MEMORY[0x2494F4EC8]();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return v11;
}

uint64_t static GlobalSearchResponseProcessor.parseExperience(experience:)()
{
  double v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  dispatch thunk of Experience.queryConfidence.getter();
  if (v0 != 1.0)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_24315F000, v8, v9, "Received low confidence Pegasus response", v10, 2u);
      MEMORY[0x2494F6D70](v10, -1, -1);
    }

    return 0;
  }
  v1 = GenericExperience.components.getter();
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v11 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent() - 8);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  do
  {
    closure #1 in static GlobalSearchResponseProcessor.collatePegasusComponents(components:)(v4, &v13, &v12, (uint64_t)&v11);
    v4 += v5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_18_2();
  v57 = v2;
  v58 = v3;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_42_1();
  v56 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_1();
  v55 = v10;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_34_1();
  v53 = v12;
  OUTLINED_FUNCTION_23_2();
  v13 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_50_1();
  v15 = type metadata accessor for Apple_Parsec_Siri_V2alpha_CasinoSnippet();
  v47 = *(_QWORD *)(v15 - 8);
  v48 = v15;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_51_1(v17, v43[0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Searchfoundation_Card?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_71();
  v21 = v19 - v20;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_34_1();
  v46 = v23;
  v49 = v5;
  v24 = MEMORY[0x2494F4E80]();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v43[1] = v24;
    v44 = v7;
    OUTLINED_FUNCTION_20_2();
    v28 = v26 + v27;
    v29 = *(_QWORD *)(v1 + 72);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain();
    v30 = MEMORY[0x24BEE4AF8];
    v51 = v13;
    v52 = v8;
    v50 = v29;
    do
    {
      v54(v0, v28, v13);
      closure #1 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)(v0, v21);
      OUTLINED_FUNCTION_60_1();
      OUTLINED_FUNCTION_22_2(v21, 1, v8);
      if (v31)
      {
        outlined destroy of SearchResult?(v21, &demangling cache variable for type metadata for Searchfoundation_Card?);
      }
      else
      {
        OUTLINED_FUNCTION_94_0(v53, v21);
        OUTLINED_FUNCTION_94_0(v55, v53);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_97_0();
          v30 = v38;
        }
        v33 = *(_QWORD *)(v30 + 16);
        if (v33 >= *(_QWORD *)(v30 + 24) >> 1)
        {
          OUTLINED_FUNCTION_97_0();
          v30 = v39;
        }
        *(_QWORD *)(v30 + 16) = v33 + 1;
        OUTLINED_FUNCTION_10_2();
        v36 = v30 + v34 + *(_QWORD *)(v35 + 72) * v33;
        v8 = v52;
        OUTLINED_FUNCTION_94_0(v36, v37);
        v29 = v50;
        v13 = v51;
      }
      v28 += v29;
      --v25;
    }
    while (v25);
    OUTLINED_FUNCTION_102_0();
    v7 = v44;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x24BEE4AF8];
  }
  Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent.compactSnippet.getter();
  static GlobalSearchResponseProcessor.makeCard(casinoSnippet:)(v45, v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v48);
  v40 = OUTLINED_FUNCTION_22_2(v46, 1, v8);
  if (v31)
  {
    OUTLINED_FUNCTION_99_0(v40, &demangling cache variable for type metadata for Searchfoundation_Card?);
    MEMORY[0x24BDAC7A8](v41);
    v43[-2] = v30;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_Card and conformance Searchfoundation_Card, (uint64_t (*)(uint64_t))MEMORY[0x24BE70018], MEMORY[0x24BE70008]);
    static Message.with(_:)();
    return OUTLINED_FUNCTION_26_0();
  }
  else
  {
    OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_88_1(v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
  }
}

id static GlobalSearchResponseProcessor.makeSFCard(card:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;

  OUTLINED_FUNCTION_42_1();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_Card and conformance Searchfoundation_Card, (uint64_t (*)(uint64_t))MEMORY[0x24BE70018], MEMORY[0x24BE70008]);
  v0 = Message.serializedData(partial:)();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x24BE850A0]);
  outlined copy of Data._Representation(v0, v2);
  @nonobjc _SFPBCard.init(data:)(v0, v2);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE84D80]), sel_initWithProtobuf_, v4);

    OUTLINED_FUNCTION_106_0();
  }
  else
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v7, (uint64_t)static Logging.search);
    v8 = OUTLINED_FUNCTION_80();
    if (OUTLINED_FUNCTION_31(v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v9 = 0;
      OUTLINED_FUNCTION_19_2(&dword_24315F000, v3, OS_LOG_TYPE_DEFAULT, "Failed to initialize _SFPBCard from serialized data", v9);
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_106_0();

    return 0;
  }
  return v6;
}

uint64_t static GlobalSearchResponseProcessor.makeGlobalItems(experience:domain:lowConfidenceKnowledge:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;

  v93 = a4;
  v94 = a2;
  v95 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  MEMORY[0x24BDAC7A8](v5);
  v86 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v7);
  v87 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for UUID();
  v89 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v88 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KGDocument?);
  MEMORY[0x24BDAC7A8](v10);
  v85 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for KGDocument();
  MEMORY[0x24BDAC7A8](v84);
  v83 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WebAnswer?);
  MEMORY[0x24BDAC7A8](v13);
  v90 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WebAnswer();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_SageExperience?);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Apple_Parsec_Siri_V2alpha_SageExperience();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = static GlobalSearchResponseProcessor.processRenderedDialog(experience:)();
  v27 = v26;
  v92 = v28;
  v30 = v29;
  dispatch thunk of GenericExperience.sageExperience.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21) == 1)
  {
    v31 = v90;
    v80 = v17;
    v81 = v25;
    v82 = v30;
    v32 = v93;
    outlined destroy of SearchResult?((uint64_t)v20, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_SageExperience?);
    v40 = v95;
    v41 = v94 == 0x77736E615F626577 && v95 == 0xEA00000000007265;
    if (v41 || (v42 = v94, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      static GlobalSearchResponseProcessor.makeWebAnswer(experience:)(a1, v33, v34, v35, v36, v37, v38, v39, v79, (uint64_t)v80, v81, v82, v83, v84, v85, v86, v87, v88, v89,
        v90);
      specialized Collection.first.getter(v43, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer, v31);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v31, 1, v15) == 1)
      {
        outlined destroy of SearchResult?(v31, &demangling cache variable for type metadata for WebAnswer?);
      }
      else
      {
        v48 = (uint64_t)v80;
        outlined init with take of SearchResult(v31, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for WebAnswer);
        v49 = *(_QWORD *)(v48 + 16);
        v50 = *(_QWORD *)(v48 + 24);
        v51 = HIBYTE(v50) & 0xF;
        if ((v50 & 0x2000000000000000) == 0)
          v51 = v49 & 0xFFFFFFFFFFFFLL;
        if (v51)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          outlined destroy of KGDocument();
          v52 = v32;
          v54 = v86;
          v53 = v87;
          v55 = v88;
          v56 = v89;
          v57 = v52;
LABEL_35:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GlobalItem>);
          v68 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GlobalItem() - 8) + 80);
          v69 = (v68 + 32) & ~v68;
          v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_24334DB60;
          v70 = (_QWORD *)(v47 + v69);
          UUID.init()();
          v71 = UUID.uuidString.getter();
          v72 = v55;
          v74 = v73;
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v72, v91);
          v75 = type metadata accessor for URL();
          __swift_storeEnumTagSinglePayload(v53, 1, 1, v75);
          v76 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
          __swift_storeEnumTagSinglePayload(v54, 1, 1, v76);
          v77 = v95;
          swift_bridgeObjectRetain();
          GlobalItem.init(id:domain:url:text:parsecEntity:lowConfidenceKnowledge:)(v71, v74, v94, v77, v53, v49, v50, v54, v70, v57 & 1);
          return v47;
        }
        outlined destroy of KGDocument();
      }
      v54 = v86;
      v53 = v87;
      v55 = v88;
      v59 = v82;
    }
    else
    {
      v58 = v42 == 26475 && v40 == 0xE200000000000000;
      v54 = v86;
      v53 = v87;
      v55 = v88;
      v59 = v82;
      if (!v58 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        goto LABEL_29;
    }
    static GlobalSearchResponseProcessor.makeKnowledge(experience:)(a1, v33, v34, v35, v36, v37, v38, v39, v79, (uint64_t)v80, v81, v82, v83, v84, v85, v86, v87, v88, v89,
      v90);
    v60 = v85;
    specialized Collection.first.getter(v61, (uint64_t (*)(_QWORD))type metadata accessor for KGDocument, v85);
    swift_bridgeObjectRelease();
    v62 = v84;
    if (__swift_getEnumTagSinglePayload(v60, 1, v84) == 1)
    {
      outlined destroy of SearchResult?(v60, &demangling cache variable for type metadata for KGDocument?);
    }
    else
    {
      v63 = v60;
      v64 = v83;
      outlined init with take of SearchResult(v63, v83, (uint64_t (*)(_QWORD))type metadata accessor for KGDocument);
      v65 = (uint64_t *)(v64 + *(int *)(v62 + 24));
      v49 = *v65;
      v50 = v65[1];
      v66 = HIBYTE(v50) & 0xF;
      if ((v50 & 0x2000000000000000) == 0)
        v66 = v49 & 0xFFFFFFFFFFFFLL;
      if (v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        outlined destroy of KGDocument();
LABEL_34:
        v57 = v93;
        v56 = v89;
        goto LABEL_35;
      }
      outlined destroy of KGDocument();
    }
LABEL_29:
    v67 = HIBYTE(v27) & 0xF;
    v49 = v81;
    if ((v27 & 0x2000000000000000) == 0)
      v67 = v81 & 0xFFFFFFFFFFFFLL;
    if (v67)
    {
      swift_bridgeObjectRelease();
      v50 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
      v50 = v59;
      v49 = v92;
    }
    goto LABEL_34;
  }
  v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  v45 = MEMORY[0x2494F4D54](v44);
  v46 = v95;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = specialized Sequence.compactMap<A>(_:)(v45, v94, v46, v25, v27, v92, v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v47;
}

void static GlobalSearchResponseProcessor.makeWebImages(experience:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  _WORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  void (*v75)(uint64_t, uint64_t);
  _QWORD *v76;
  uint64_t v77;
  uint64_t *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  os_log_type_t v95;
  _WORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_92_0();
  v3 = type metadata accessor for UUID();
  v135 = *(_QWORD *)(v3 - 8);
  v136 = v3;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_51_1(v5, v123);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (id: String, url: URL?));
  v128 = *(_QWORD *)(v139 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_71();
  v9 = v7 - v8;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_31_0();
  v138 = v11;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_34_1();
  v137 = v13;
  OUTLINED_FUNCTION_23_2();
  v14 = type metadata accessor for WebImage();
  v141 = *(_QWORD *)(v14 - 8);
  v142 = (int *)v14;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_71();
  v18 = (uint64_t *)(v16 - v17);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_34_1();
  v129 = v20;
  OUTLINED_FUNCTION_23_2();
  v21 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  v133 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Searchfoundation_Card?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v23);
  v130 = (uint64_t)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = OUTLINED_FUNCTION_33_0();
  v143 = *(_QWORD *)(v25 - 8);
  v144 = v25;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_71();
  v29 = v27 - v28;
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_34_1();
  v131 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_61_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_18_1();
  v132 = v35;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_34_1();
  v140 = v37;
  v38 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  v39 = (char *)MEMORY[0x24BEE4AF8];
  if (v38)
  {
    v40 = v38;
    v127 = v9;
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_80_0();
    v41 = *(_QWORD *)(v40 + 16);
    if (v41)
    {
      specialized Collection.first.getter(v40, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], v0);
      v42 = OUTLINED_FUNCTION_22_2(v0, 1, v21);
      if (v47)
      {
        v43 = &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?;
        v44 = v0;
      }
      else
      {
        v45 = MEMORY[0x2494F4E80](v42);
        v126 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
        v126(v0, v21);
        specialized Collection.first.getter(v45, (uint64_t (*)(_QWORD))MEMORY[0x24BE71030], v1);
        OUTLINED_FUNCTION_80_0();
        v46 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails();
        OUTLINED_FUNCTION_22_2(v1, 1, v46);
        if (!v47)
        {
          v125 = v18;
          v57 = v140;
          Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.snippet.getter();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v1, v46);
          v58 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet();
          OUTLINED_FUNCTION_22_2(v57, 1, v58);
          if (!v59)
          {
            v60 = v132;
            outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v57, v132, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
            v124 = *(_QWORD *)(v58 - 8);
            v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 88))(v60, v58);
            if (v61 == *MEMORY[0x24BE71000])
            {
              v123 = v58;
              v62 = *(_QWORD *)(v40 + 16);
              if (v62)
              {
                v145 = v39;
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                OUTLINED_FUNCTION_10_2();
                v39 = (char *)(v40 + v63);
                v136 = *(_QWORD *)(v64 + 72);
                v65 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 16);
                do
                {
                  v65(v2, v39, v21);
                  static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
                  v126(v2, v21);
                  v66 = (uint64_t)v145;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    v66 = (uint64_t)v145;
                  }
                  v68 = *(_QWORD *)(v66 + 16);
                  v67 = *(_QWORD *)(v66 + 24);
                  if (v68 >= v67 >> 1)
                  {
                    OUTLINED_FUNCTION_77_1(v67);
                    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    v66 = (uint64_t)v145;
                  }
                  *(_QWORD *)(v66 + 16) = v68 + 1;
                  OUTLINED_FUNCTION_10_2();
                  (*(void (**)(unint64_t, uint64_t))(v70 + 32))(v66 + v69 + *(_QWORD *)(v70 + 72) * v68, v29);
                  v145 = (_QWORD *)v66;
                  v39 += v136;
                  --v62;
                }
                while (v62);
                OUTLINED_FUNCTION_47();
              }
              else
              {
                OUTLINED_FUNCTION_47();
                v66 = MEMORY[0x24BEE4AF8];
              }
              v89 = v130;
              specialized Collection.first.getter(v66, (uint64_t (*)(_QWORD))MEMORY[0x24BE70018], v130);
              OUTLINED_FUNCTION_36_0();
              v90 = v144;
              v91 = OUTLINED_FUNCTION_22_2(v89, 1, v144);
              v92 = v123;
              if (!v47)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32))(v131, v89, v90);
                v99 = static GlobalSearchResponseProcessor.parseCardForURL(card:)();
                v100 = v99;
                v101 = *(_QWORD *)(v99 + 16);
                if (v101)
                {
                  v145 = (_QWORD *)MEMORY[0x24BEE4AF8];
                  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  v102 = v129;
                  OUTLINED_FUNCTION_10_2();
                  v104 = v100 + v103;
                  v106 = *(_QWORD *)(v105 + 72);
                  v134 = v100;
                  v135 = v106;
                  v107 = v145;
                  v108 = v137;
                  do
                  {
                    v136 = v101;
                    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v104, (uint64_t)v108, &demangling cache variable for type metadata for (id: String, url: URL?));
                    v109 = v138;
                    v110 = v139;
                    v111 = *(int *)(v139 + 48);
                    v112 = (uint64_t)v138 + v111;
                    v113 = (uint64_t)v108 + v111;
                    v115 = *v108;
                    v114 = v108[1];
                    *v138 = *v108;
                    v109[1] = v114;
                    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v108 + v111, (uint64_t)v109 + v111, &demangling cache variable for type metadata for URL?);
                    v116 = v127 + *(int *)(v110 + 48);
                    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v113, v116, &demangling cache variable for type metadata for URL?);
                    *v102 = v115;
                    v102[1] = v114;
                    v117 = v142;
                    outlined init with take of URL?(v116, (uint64_t)v102 + v142[5], &demangling cache variable for type metadata for URL?);
                    OUTLINED_FUNCTION_84_1(v117[6]);
                    OUTLINED_FUNCTION_84_1(v117[7]);
                    OUTLINED_FUNCTION_84_1(v117[8]);
                    OUTLINED_FUNCTION_84_1(v117[9]);
                    OUTLINED_FUNCTION_91_0();
                    outlined destroy of SearchResult?(v112, &demangling cache variable for type metadata for URL?);
                    outlined destroy of SearchResult?((uint64_t)v108, &demangling cache variable for type metadata for (id: String, url: URL?));
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      OUTLINED_FUNCTION_47_1();
                      v107 = v145;
                    }
                    v119 = v107[2];
                    v118 = v107[3];
                    v120 = v136;
                    if (v119 >= v118 >> 1)
                    {
                      OUTLINED_FUNCTION_77_1(v118);
                      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                      v107 = v145;
                    }
                    v107[2] = v119 + 1;
                    OUTLINED_FUNCTION_53_1();
                    outlined init with take of SearchResult((uint64_t)v102, v121 + v122 * v119, (uint64_t (*)(_QWORD))type metadata accessor for WebImage);
                    v104 += v135;
                    v101 = v120 - 1;
                  }
                  while (v101);
                  v92 = v123;
                  v90 = v144;
                }
                (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v131, v90);
                OUTLINED_FUNCTION_80_0();
                (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v132, v92);
LABEL_59:
                outlined destroy of SearchResult?(v140, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
                goto LABEL_18;
              }
              OUTLINED_FUNCTION_78_1(v91, &demangling cache variable for type metadata for Searchfoundation_Card?);
              v93 = v140;
              if (one-time initialization token for search != -1)
                swift_once();
              v94 = OUTLINED_FUNCTION_13();
              OUTLINED_FUNCTION_28(v94, (uint64_t)static Logging.search);
              v95 = OUTLINED_FUNCTION_48_1();
              if (OUTLINED_FUNCTION_21(v95))
              {
                v96 = (_WORD *)OUTLINED_FUNCTION_5_3();
                OUTLINED_FUNCTION_51(v96);
                OUTLINED_FUNCTION_7(&dword_24315F000, v97, v98, "No SFCard found in the web_image layout snippet component");
                specialized UnsafeMutablePointer.deallocate()();
              }

              OUTLINED_FUNCTION_45_0();
              v56 = v93;
              goto LABEL_17;
            }
            if (v61 == *MEMORY[0x24BE71008])
            {
              v123 = v58;
              OUTLINED_FUNCTION_10_2();
              v72 = v40 + v71;
              v144 = *(_QWORD *)(v73 + 72);
              v145 = v39;
              v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
              swift_bridgeObjectRetain();
              v75 = v126;
              do
              {
                v74(v2, v72, v21);
                static GlobalSearchResponseProcessor.makeLegacySnippet(layoutSnippet:)(v2);
                v75(v2, v21);
                specialized Array.append<A>(contentsOf:)();
                v72 += v144;
                --v41;
              }
              while (v41);
              OUTLINED_FUNCTION_102_0();
              v76 = v145;
              v77 = v145[2];
              v78 = v125;
              if (v77)
              {
                v145 = v39;
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                v79 = v76 + 5;
                do
                {
                  OUTLINED_FUNCTION_91_0();
                  v80 = v134;
                  UUID.init()();
                  v81 = UUID.uuidString.getter();
                  v83 = v82;
                  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v80, v136);
                  v84 = v142;
                  URL.init(string:)();
                  swift_bridgeObjectRelease();
                  *v78 = v81;
                  v78[1] = v83;
                  OUTLINED_FUNCTION_93_0(v84[6]);
                  OUTLINED_FUNCTION_93_0(v84[7]);
                  OUTLINED_FUNCTION_93_0(v84[8]);
                  OUTLINED_FUNCTION_93_0(v84[9]);
                  v85 = v145;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    OUTLINED_FUNCTION_47_1();
                    v85 = v145;
                  }
                  v86 = v85[2];
                  if (v86 >= v85[3] >> 1)
                  {
                    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    v85 = v145;
                  }
                  v79 += 2;
                  v85[2] = v86 + 1;
                  OUTLINED_FUNCTION_53_1();
                  outlined init with take of SearchResult((uint64_t)v78, v87 + v88 * v86, (uint64_t (*)(_QWORD))type metadata accessor for WebImage);
                  --v77;
                }
                while (v77);
              }
              OUTLINED_FUNCTION_56_0();
              (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v132, v123);
              goto LABEL_59;
            }
            OUTLINED_FUNCTION_47();
            OUTLINED_FUNCTION_45_0();
            v57 = v140;
LABEL_12:
            if (one-time initialization token for search != -1)
              swift_once();
            v51 = OUTLINED_FUNCTION_13();
            OUTLINED_FUNCTION_28(v51, (uint64_t)static Logging.search);
            v52 = OUTLINED_FUNCTION_48_1();
            if (OUTLINED_FUNCTION_21(v52))
            {
              v53 = (_WORD *)OUTLINED_FUNCTION_5_3();
              OUTLINED_FUNCTION_51(v53);
              OUTLINED_FUNCTION_7(&dword_24315F000, v54, v55, "Unsupported web_image snippet type");
              specialized UnsafeMutablePointer.deallocate()();
            }

            v56 = v57;
LABEL_17:
            outlined destroy of SearchResult?(v56, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
            goto LABEL_18;
          }
LABEL_11:
          OUTLINED_FUNCTION_47();
          goto LABEL_12;
        }
        v43 = &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails?;
        v44 = v1;
      }
      outlined destroy of SearchResult?(v44, v43);
      v48 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet();
      v57 = v140;
      OUTLINED_FUNCTION_49(v140, v49, v50, v48);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_47();
  }
LABEL_18:
  OUTLINED_FUNCTION_43_0();
}

uint64_t static GlobalSearchResponseProcessor.parseCardForURL(card:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (**v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, void (**)(char *, uint64_t), uint64_t);
  char v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, void (**)(char *, uint64_t), uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (id: String, url: URL?)?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (id: String, url: URL?));
  v64 = *(_QWORD *)(v71 - 8);
  v3 = MEMORY[0x24BDAC7A8](v71);
  v70 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v63 = (uint64_t)&v57 - v5;
  v6 = type metadata accessor for Searchfoundation_GridCardSection();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Searchfoundation_CardSectionValue();
  v62 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Searchfoundation_CardSection();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v57 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (void (**)(char *, uint64_t))((char *)&v57 - v18);
  v20 = Searchfoundation_Card.cardSections.getter();
  v21 = *(_QWORD *)(v20 + 16);
  v65 = v2;
  v73 = v12;
  if (v21)
  {
    v61 = v8;
    v22 = *(unsigned __int8 *)(v12 + 80);
    v57 = v20;
    v66 = (v22 + 32) & ~v22;
    v23 = v20 + v66;
    v74 = *(_QWORD *)(v12 + 72);
    v69 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v12 + 16);
    v24 = MEMORY[0x24BEE4AF8];
    v68 = v17;
    while (1)
    {
      v25 = v69;
      v69((char *)v19, (void (**)(char *, uint64_t))v23, v11);
      v26 = Searchfoundation_CardSection.hasValue.getter();
      v25(v17, v19, v11);
      if ((v26 & 1) != 0)
      {
        v67 = v24;
        Searchfoundation_CardSection.value.getter();
        v27 = Searchfoundation_CardSectionValue.hasGridCardSection.getter();
        v28 = *(void (**)(char *, uint64_t))(v62 + 8);
        v29 = v17;
        v30 = v11;
        v31 = v61;
        v28(v10, v61);
        v32 = *(void (**)(char *, uint64_t))(v73 + 8);
        v33 = v29;
        v34 = v30;
        v32(v33, v30);
        if ((v27 & 1) != 0)
        {
          Searchfoundation_CardSection.value.getter();
          v35 = v58;
          Searchfoundation_CardSectionValue.gridCardSection.getter();
          v28(v10, v31);
          v36 = Searchfoundation_GridCardSection.cardSections.getter();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v60);
        }
        else
        {
          v36 = MEMORY[0x24BEE4AF8];
        }
        v11 = v34;
        v24 = v67;
      }
      else
      {
        v32 = *(void (**)(char *, uint64_t))(v73 + 8);
        v32(v17, v11);
        v36 = MEMORY[0x24BEE4AF8];
      }
      v32((char *)v19, v11);
      v37 = *(_QWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v24 + 16);
      v17 = (char *)(v38 + v37);
      if (__OFADD__(v38, v37))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v17 > *(_QWORD *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v39;
      }
      v17 = v68;
      if (*(_QWORD *)(v36 + 16))
      {
        v40 = *(_QWORD *)(v24 + 16);
        if ((*(_QWORD *)(v24 + 24) >> 1) - v40 < v37)
          goto LABEL_42;
        v41 = v24 + v66 + v40 * v74;
        if (v36 + v66 < v41 + v37 * v74 && v41 < v36 + v66 + v37 * v74)
          goto LABEL_44;
        swift_arrayInitWithCopy();
        if (v37)
        {
          v43 = *(_QWORD *)(v24 + 16);
          v44 = __OFADD__(v43, v37);
          v45 = v43 + v37;
          if (v44)
            goto LABEL_43;
          *(_QWORD *)(v24 + 16) = v45;
        }
      }
      else if (v37)
      {
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      v23 += v74;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        v2 = v65;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    v19[1](v17, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_44:
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x24BEE4AF8];
LABEL_27:
    v46 = *(_QWORD *)(v24 + 16);
    v47 = v73;
    if (v46)
    {
      v48 = v24 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
      v74 = *(_QWORD *)(v73 + 72);
      v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
      swift_bridgeObjectRetain();
      v50 = MEMORY[0x24BEE4AF8];
      v51 = (uint64_t)v72;
      do
      {
        v49(v51, v48, v11);
        closure #2 in static GlobalSearchResponseProcessor.parseCardForURL(card:)(v51, v2);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v11);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v71) == 1)
        {
          outlined destroy of SearchResult?((uint64_t)v2, &demangling cache variable for type metadata for (id: String, url: URL?)?);
        }
        else
        {
          v52 = v63;
          outlined init with take of URL?((uint64_t)v2, v63, &demangling cache variable for type metadata for (id: String, url: URL?));
          outlined init with take of URL?(v52, v70, &demangling cache variable for type metadata for (id: String, url: URL?));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v50 = v54;
          }
          v53 = *(_QWORD *)(v50 + 16);
          if (v53 >= *(_QWORD *)(v50 + 24) >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v50 = v55;
          }
          *(_QWORD *)(v50 + 16) = v53 + 1;
          outlined init with take of URL?(v70, v50+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(_QWORD *)(v64 + 72) * v53, &demangling cache variable for type metadata for (id: String, url: URL?));
          v2 = v65;
          v47 = v73;
        }
        v48 += v74;
        --v46;
        v51 = (uint64_t)v72;
      }
      while (v46);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return v50;
  }
  return result;
}

uint64_t static GlobalSearchResponseProcessor.makeLegacySnippet(layoutSnippet:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  NSObject *v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;

  v2 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v86 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v78 - v6;
  v8 = type metadata accessor for Apple_Parsec_Siri_Legacy_PodView();
  v9 = *(uint8_t **)(v8 - 8);
  v87 = v8;
  v88 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_Legacy_LegacySnippet.OneOf_Snippet?);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Apple_Parsec_Siri_Legacy_GeneralKnowledgeSnippet();
  v80 = *(_QWORD *)(v15 - 8);
  v81 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v79 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails?);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Apple_Parsec_Siri_Legacy_LegacySnippet();
  v83 = *(_QWORD *)(v23 - 8);
  v84 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v78 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v82 = (char *)&v78 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v85 = (char *)&v78 - v29;
  v30 = MEMORY[0x2494F4E80](v28);
  specialized Collection.first.getter(v30, (uint64_t (*)(_QWORD))MEMORY[0x24BE71030], (uint64_t)v19);
  swift_bridgeObjectRelease();
  v31 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v31) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v19, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails?);
    v32 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet();
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v32);
LABEL_4:
    outlined destroy of SearchResult?((uint64_t)v22, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
LABEL_5:
    if (one-time initialization token for search != -1)
      swift_once();
    v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static Logging.search);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35(v7, a1, v2);
    v36 = Logger.logObject.getter();
    v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v88 = (uint8_t *)v3;
      v40 = v39;
      v90 = v39;
      *(_DWORD *)v38 = 136315138;
      v35(v86, (uint64_t)v7, v2);
      v41 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v90);
      v89 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v88 + 1))(v7, v2);
      _os_log_impl(&dword_24315F000, v36, v37, "InfoViewFactory invalid legacy snippet %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v40, -1, -1);
      MEMORY[0x2494F6D70](v38, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    }

    return MEMORY[0x24BEE4AF8];
  }
  Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.snippet.getter();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v19, v31);
  v33 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v33) == 1)
    goto LABEL_4;
  v46 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v22, v33) != *MEMORY[0x24BE71008])
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v33);
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v46 + 96))(v22, v33);
  v47 = v83;
  v48 = v84;
  v49 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v85, v22, v84);
  Apple_Parsec_Siri_Legacy_LegacySnippet.snippet.getter();
  v50 = type metadata accessor for Apple_Parsec_Siri_Legacy_LegacySnippet.OneOf_Snippet();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v50) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v14, &demangling cache variable for type metadata for Apple_Parsec_Siri_Legacy_LegacySnippet.OneOf_Snippet?);
    v51 = v82;
    goto LABEL_38;
  }
  v52 = *(_QWORD *)(v50 - 8);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v14, v50);
  v51 = v82;
  if (v53 != *MEMORY[0x24BE6FB58])
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v50);
LABEL_38:
    if (one-time initialization token for search == -1)
    {
LABEL_39:
      v66 = type metadata accessor for Logger();
      __swift_project_value_buffer(v66, (uint64_t)static Logging.search);
      v67 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v67(v51, v49, v48);
      v68 = Logger.logObject.getter();
      v69 = v47;
      v70 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v68, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc();
        v72 = swift_slowAlloc();
        v90 = v72;
        *(_DWORD *)v71 = 136315138;
        v88 = v71 + 4;
        v67(v78, v51, v48);
        v73 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, &v90);
        v89 = v75;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v76 = *(void (**)(char *, uint64_t))(v69 + 8);
        v76(v51, v48);
        _os_log_impl(&dword_24315F000, v68, v70, "InfoViewFactory invalid general knowledge snippet %s", v71, 0xCu);
        swift_arrayDestroy();
        v77 = v72;
        v49 = v85;
        MEMORY[0x2494F6D70](v77, -1, -1);
        MEMORY[0x2494F6D70](v71, -1, -1);
      }
      else
      {
        v76 = *(void (**)(char *, uint64_t))(v69 + 8);
        v76(v51, v48);
      }

      v76(v49, v48);
      return MEMORY[0x24BEE4AF8];
    }
LABEL_49:
    swift_once();
    goto LABEL_39;
  }
  (*(void (**)(char *, uint64_t))(v52 + 96))(v14, v50);
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v14, v81);
  v82 = (char *)Apple_Parsec_Siri_Legacy_GeneralKnowledgeSnippet.pods.getter();
  v48 = *((_QWORD *)v82 + 2);
  if (v48)
  {
    v49 = &v82[(v88[80] + 32) & ~(unint64_t)v88[80]];
    v86 = (char *)*((_QWORD *)v88 + 9);
    v54 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v88 + 2);
    swift_bridgeObjectRetain();
    v47 = 0;
    v44 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v55 = v87;
      v54(v11, v49, v87);
      closure #1 in static GlobalSearchResponseProcessor.makeLegacySnippet(layoutSnippet:)((uint64_t)v11, &v90);
      (*((void (**)(char *, uint64_t))v88 + 1))(v11, v55);
      v56 = v90;
      v57 = *(_QWORD *)(v90 + 16);
      v58 = *(_QWORD *)(v44 + 16);
      v51 = (char *)(v58 + v57);
      if (__OFADD__(v58, v57))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v51 > *(_QWORD *)(v44 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v44 = v59;
      }
      if (*(_QWORD *)(v56 + 16))
      {
        v60 = *(_QWORD *)(v44 + 16);
        if ((*(_QWORD *)(v44 + 24) >> 1) - v60 < v57)
          goto LABEL_47;
        v61 = v44 + 16 * v60 + 32;
        if (v56 + 32 < v61 + 16 * v57 && v61 < v56 + 32 + 16 * v57)
        {
          result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v57)
        {
          v63 = *(_QWORD *)(v44 + 16);
          v64 = __OFADD__(v63, v57);
          v65 = v63 + v57;
          if (v64)
            goto LABEL_48;
          *(_QWORD *)(v44 + 16) = v65;
        }
      }
      else if (v57)
      {
        goto LABEL_46;
      }
      swift_bridgeObjectRelease();
      v49 = &v86[(_QWORD)v49];
      if (!--v48)
      {
        swift_bridgeObjectRelease_n();
        v49 = v85;
        v47 = v83;
        goto LABEL_44;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  v44 = MEMORY[0x24BEE4AF8];
LABEL_44:
  (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v84);
  return v44;
}

void static GlobalSearchResponseProcessor.makeGeoLocations(experience:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  int64_t i;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[160];
  _BYTE v66[157];
  uint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_18_2();
  v2 = OUTLINED_FUNCTION_105_0();
  v3 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  v64 = v3;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18_1();
  v62 = v5;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v52 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_GeoObjectComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_16_2();
  v10 = type metadata accessor for Apple_Parsec_Siri_V2alpha_GeoObjectComponent();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0_3();
  v54 = v12;
  v13 = OUTLINED_FUNCTION_33_0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0_3();
  v59 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v16);
  v60 = OUTLINED_FUNCTION_30_1();
  v58 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0_3();
  v57 = v18;
  v19 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  v21 = MEMORY[0x24BEE4AF8];
  if (v19)
  {
    v22 = v19;
    v23 = v20;
    swift_bridgeObjectRetain();
    if (!*(_QWORD *)(v23 + 16))
    {
      outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(v22);
LABEL_34:
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_56_0();
    specialized Collection.first.getter(v22, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], v1);
    swift_bridgeObjectRelease();
    v24 = v60;
    OUTLINED_FUNCTION_22_2(v1, 1, v60);
    if (v25)
    {
      v26 = OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_78_1(v26, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
      if (one-time initialization token for search != -1)
        swift_once();
      v27 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v27, (uint64_t)static Logging.search);
      v28 = OUTLINED_FUNCTION_80();
      if (OUTLINED_FUNCTION_31(v28))
      {
        v29 = (uint8_t *)OUTLINED_FUNCTION_5_3();
        *(_WORD *)v29 = 0;
        OUTLINED_FUNCTION_19_2(&dword_24315F000, v0, (os_log_type_t)v24, "Layout snippet missing in the knowledge experience components", v29);
        specialized UnsafeMutablePointer.deallocate()();
      }

    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v57, v1, v24);
      static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
      v68 = v21;
      v30 = *(_QWORD *)(v23 + 16);
      v53 = v14;
      if (v30)
      {
        v31 = *(_QWORD *)(type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent() - 8);
        v32 = v23 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
        v33 = *(_QWORD *)(v31 + 72);
        swift_bridgeObjectRetain();
        do
        {
          closure #1 in static GlobalSearchResponseProcessor.makeGeoLocations(experience:)(v32, (uint64_t)&v68);
          v32 += v33;
          --v30;
        }
        while (v30);
        OUTLINED_FUNCTION_102_0();
        v34 = v68;
        v14 = v53;
      }
      else
      {
        OUTLINED_FUNCTION_56_0();
        v34 = MEMORY[0x24BEE4AF8];
      }
      specialized Collection.first.getter(v34, (uint64_t (*)(_QWORD))MEMORY[0x24BE70B78], (uint64_t)v0);
      v35 = v56;
      v36 = OUTLINED_FUNCTION_22_2((uint64_t)v0, 1, v56);
      if (!v25)
      {
        OUTLINED_FUNCTION_85_1(v54, (uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
        v40 = Apple_Parsec_Siri_V2alpha_GeoObjectComponent.geoObject.getter();
        v41 = v40;
        v42 = *(_QWORD *)(v40 + 16);
        if (v42)
        {
          v52[1] = v13;
          v67 = v21;
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v42, 0);
          OUTLINED_FUNCTION_10_2();
          v52[0] = v41;
          v44 = v41 + v43;
          v61 = *(_QWORD *)(v45 + 72);
          v46 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
          for (i = v42 - 1; ; --i)
          {
            v48 = v63;
            v46(v8, v44, v63);
            v46(v62, (uint64_t)v8, v48);
            GeoLocation.init(geoObject:)((uint64_t)v65);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v48);
            memcpy(v66, v65, sizeof(v66));
            v49 = v67;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v49 + 16) + 1, 1);
              v49 = v67;
            }
            v51 = *(_QWORD *)(v49 + 16);
            v50 = *(_QWORD *)(v49 + 24);
            if (v51 >= v50 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v50 > 1), v51 + 1, 1);
              v49 = v67;
            }
            *(_QWORD *)(v49 + 16) = v51 + 1;
            memcpy((void *)(v49 + 160 * v51 + 32), v66, 0x9DuLL);
            if (!i)
              break;
            v44 += v61;
          }
          swift_bridgeObjectRelease();
          v14 = v53;
          v35 = v56;
        }
        else
        {
          OUTLINED_FUNCTION_96_0();
        }
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v35);
        OUTLINED_FUNCTION_75_1(v59, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
        OUTLINED_FUNCTION_74_1();
        goto LABEL_34;
      }
      OUTLINED_FUNCTION_99_0(v36, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_GeoObjectComponent?);
      if (one-time initialization token for search != -1)
        swift_once();
      v37 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v37, (uint64_t)static Logging.search);
      v38 = OUTLINED_FUNCTION_80();
      if (OUTLINED_FUNCTION_31(v38))
      {
        v39 = (uint8_t *)OUTLINED_FUNCTION_5_3();
        *(_WORD *)v39 = 0;
        OUTLINED_FUNCTION_19_2(&dword_24315F000, v0, OS_LOG_TYPE_DEFAULT, "Geo response DomainObjectComponent missing GeoObject", v39);
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_75_1(v59, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
      OUTLINED_FUNCTION_74_1();
      swift_bridgeObjectRelease();
    }
  }
LABEL_35:
  OUTLINED_FUNCTION_43_0();
}

void closure #1 in static GlobalSearchResponseProcessor.makeGeoLocations(experience:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint8_t *v39;
  uint64_t v40;
  uint8_t *v41;
  uint8_t *v42;
  int v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a2;
  v2 = type metadata accessor for Apple_Parsec_Siri_V2alpha_GeoObjectComponent();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_DomainObjectComponent.OneOf_Component?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent.OneOf_Component();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v41 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  Apple_Parsec_Siri_V2alpha_DomainObjectComponent.component.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v8, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_DomainObjectComponent.OneOf_Component?);
    if (one-time initialization token for search != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logging.search);
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_24315F000, v21, v22, "PegasusResult component missing type", v23, 2u);
      MEMORY[0x2494F6D70](v23, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v8, v9);
    v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v24(v17, v19, v9);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v17, v9) == *MEMORY[0x24BE70F08])
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v17, v9);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v17, v2);
      v25 = v45;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v26 = *(_QWORD *)(*(_QWORD *)v25 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
      v27 = *(_QWORD *)v25;
      *(_QWORD *)(v27 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v27+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v26, v5, v2);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    }
    else
    {
      if (one-time initialization token for search != -1)
        swift_once();
      v28 = type metadata accessor for Logger();
      __swift_project_value_buffer(v28, (uint64_t)static Logging.search);
      v29 = v46;
      v24(v46, v19, v9);
      v30 = Logger.logObject.getter();
      v31 = static os_log_type_t.info.getter();
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v33 = swift_slowAlloc();
        v43 = v32;
        v34 = (uint8_t *)v33;
        v45 = swift_slowAlloc();
        v48 = v45;
        v42 = v34;
        *(_DWORD *)v34 = 136315138;
        v41 = v34 + 4;
        v24(v44, v29, v9);
        v35 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v48);
        v47 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v38 = *(void (**)(char *, uint64_t))(v10 + 8);
        v38(v29, v9);
        v39 = v42;
        _os_log_impl(&dword_24315F000, v30, (os_log_type_t)v43, "PegasusResult skipping component %s", v42, 0xCu);
        v40 = v45;
        swift_arrayDestroy();
        MEMORY[0x2494F6D70](v40, -1, -1);
        MEMORY[0x2494F6D70](v39, -1, -1);

      }
      else
      {

        v38 = *(void (**)(char *, uint64_t))(v10 + 8);
        v38(v29, v9);
      }
      v38(v19, v9);
      v38(v17, v9);
    }
  }
}

void GeoLocation.init(geoObject:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  void (*v25)(char *, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  BOOL v69;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Mapspb_Hours?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_71();
  v6 = v4 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - v8;
  v10 = type metadata accessor for Locationpb_Location();
  OUTLINED_FUNCTION_65_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v53 - v13;
  v67 = Mapspb_LocalSearchBusiness.uid.getter();
  v15 = Mapspb_LocalSearchBusiness.name.getter();
  v65 = v16;
  v66 = v15;
  v17 = Mapspb_LocalSearchBusiness.address.getter();
  v63 = v18;
  v64 = v17;
  v19 = Mapspb_LocalSearchBusiness.thoroughfare.getter();
  v61 = v20;
  v62 = v19;
  v21 = Mapspb_LocalSearchBusiness.placeCardURL.getter();
  v59 = v22;
  v60 = v21;
  Mapspb_LocalSearchBusiness.location.getter();
  Locationpb_Location.lat.getter();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v1 + 8);
  v25(v14, v10);
  Mapspb_LocalSearchBusiness.location.getter();
  Locationpb_Location.lon.getter();
  v27 = v26;
  v28 = OUTLINED_FUNCTION_95_0();
  ((void (*)(uint64_t))v25)(v28);
  v58 = Mapspb_LocalSearchBusiness.telephone.getter();
  v29 = Mapspb_LocalSearchBusiness.url.getter();
  v56 = v30;
  v57 = v29;
  v55 = Mapspb_LocalSearchBusiness.photos.getter();
  v31 = Mapspb_LocalSearchBusiness.category.getter();
  v53 = v32;
  v54 = v31;
  v33 = Mapspb_LocalSearchBusiness.subcategory.getter();
  v35 = v34;
  v36 = Mapspb_LocalSearchBusiness.openingHours.getter();
  specialized Collection.first.getter(v36, (uint64_t (*)(_QWORD))MEMORY[0x24BE6FF98], (uint64_t)v9);
  OUTLINED_FUNCTION_36_0();
  v37 = type metadata accessor for Mapspb_Hours();
  v38 = OUTLINED_FUNCTION_57_1((uint64_t)v9);
  if (v38 == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v9, &demangling cache variable for type metadata for Mapspb_Hours?);
    v39 = 0;
  }
  else
  {
    v39 = MEMORY[0x2494F4898]();
    OUTLINED_FUNCTION_69_1((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8));
  }
  v40 = Mapspb_LocalSearchBusiness.openingHours.getter();
  specialized Collection.first.getter(v40, (uint64_t (*)(_QWORD))MEMORY[0x24BE6FF98], v6);
  OUTLINED_FUNCTION_36_0();
  v41 = OUTLINED_FUNCTION_57_1(v6);
  if (v41 == 1)
  {
    v42 = OUTLINED_FUNCTION_105_0();
    v43 = OUTLINED_FUNCTION_59_1(v42);
    OUTLINED_FUNCTION_78_1(v43, &demangling cache variable for type metadata for Mapspb_Hours?);
    v44 = 0;
  }
  else
  {
    v44 = Mapspb_Hours.closeTime.getter();
    v45 = OUTLINED_FUNCTION_105_0();
    OUTLINED_FUNCTION_59_1(v45);
    OUTLINED_FUNCTION_69_1(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8));
  }
  v69 = v38 == 1;
  v68 = v41 == 1;
  v46 = v66;
  *(_QWORD *)a1 = v67;
  *(_QWORD *)(a1 + 8) = v46;
  v47 = v64;
  *(_QWORD *)(a1 + 16) = v65;
  *(_QWORD *)(a1 + 24) = v47;
  v48 = v62;
  *(_QWORD *)(a1 + 32) = v63;
  *(_QWORD *)(a1 + 40) = v48;
  v49 = v60;
  *(_QWORD *)(a1 + 48) = v61;
  *(_QWORD *)(a1 + 56) = v49;
  *(_QWORD *)(a1 + 64) = v59;
  *(_DWORD *)(a1 + 72) = v24;
  *(_DWORD *)(a1 + 76) = v27;
  v50 = v57;
  *(_QWORD *)(a1 + 80) = v58;
  *(_QWORD *)(a1 + 88) = v50;
  v51 = v55;
  *(_QWORD *)(a1 + 96) = v56;
  *(_QWORD *)(a1 + 104) = v51;
  v52 = v53;
  *(_QWORD *)(a1 + 112) = v54;
  *(_QWORD *)(a1 + 120) = v52;
  *(_QWORD *)(a1 + 128) = v33;
  *(_QWORD *)(a1 + 136) = v35;
  *(_DWORD *)(a1 + 144) = v39;
  *(_BYTE *)(a1 + 148) = v69;
  *(_DWORD *)(a1 + 152) = v44;
  *(_BYTE *)(a1 + 156) = v68;
}

void static GlobalSearchResponseProcessor.makeWebAnswer(experience:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  os_log_type_t v85;
  _WORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t);
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  Swift::String v95;
  void *object;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, _QWORD, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, _QWORD);
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD);
  uint64_t v115;
  uint64_t (*v116)(uint64_t, _QWORD);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, _QWORD);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  os_log_type_t v168;
  _WORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t countAndFlagsBits;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t *v216;
  uint64_t v217;

  OUTLINED_FUNCTION_18_2();
  a19 = v22;
  a20 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Searchfoundation_URL?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v25);
  v26 = type metadata accessor for Searchfoundation_Punchout();
  OUTLINED_FUNCTION_25_0(v26, (uint64_t)&v211);
  v186 = v27;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_0_3();
  v185 = OUTLINED_FUNCTION_81_1(v29);
  v187 = *(_QWORD *)(v185 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v31);
  v32 = type metadata accessor for Searchfoundation_AttributionFooterCardSection();
  OUTLINED_FUNCTION_25_0(v32, (uint64_t)&v206);
  v183 = v33;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v35);
  v36 = type metadata accessor for Searchfoundation_Text();
  v209 = *(_QWORD *)(v36 - 8);
  v210 = v36;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_0_3();
  v208 = v38;
  OUTLINED_FUNCTION_23_2();
  v39 = type metadata accessor for Searchfoundation_FormattedText();
  v214 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_31_0();
  v213 = v42;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_31_0();
  v215 = (char *)v44;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v172 - v46;
  v48 = type metadata accessor for Searchfoundation_RichText();
  OUTLINED_FUNCTION_25_0(v48, (uint64_t)&a14);
  v192 = v49;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v51);
  v52 = type metadata accessor for Searchfoundation_RichTitleCardSection();
  OUTLINED_FUNCTION_25_0(v52, (uint64_t)&v217);
  v189 = v53;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_0_3();
  v56 = OUTLINED_FUNCTION_82_1(v55);
  OUTLINED_FUNCTION_25_0(v56, (uint64_t)&a11);
  v191 = v57;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_0_3();
  v60 = OUTLINED_FUNCTION_80_1(v59);
  v200 = *(_QWORD *)(v60 - 8);
  v201 = v60;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_18_1();
  v199 = v62;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v63);
  v65 = (char *)&v172 - v64;
  v66 = type metadata accessor for Searchfoundation_CardSection();
  v205 = *(_QWORD *)(v66 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_0_3();
  v203 = v68;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_18_1();
  v180 = v70;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_13_2(v72);
  v73 = type metadata accessor for Searchfoundation_Card();
  OUTLINED_FUNCTION_25_0(v73, (uint64_t)&v198);
  v176 = v74;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_0_3();
  v179 = v76;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_50_1();
  v78 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  v178 = *(_QWORD *)(v78 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v79);
  OUTLINED_FUNCTION_0_3();
  v177 = v80;
  v81 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  if (!v81)
  {
LABEL_5:
    if (one-time initialization token for search == -1)
    {
LABEL_6:
      v84 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v84, (uint64_t)static Logging.search);
      v85 = OUTLINED_FUNCTION_48_1();
      if (OUTLINED_FUNCTION_21(v85))
      {
        v86 = (_WORD *)OUTLINED_FUNCTION_5_3();
        OUTLINED_FUNCTION_51(v86);
        OUTLINED_FUNCTION_7(&dword_24315F000, v87, v88, "Layout snippet missing in the web answer experience components");
        specialized UnsafeMutablePointer.deallocate()();
      }

      goto LABEL_9;
    }
LABEL_60:
    swift_once();
    goto LABEL_6;
  }
  v82 = v81;
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_26_0();
  specialized Collection.first.getter(v82, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], v20);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_22_2(v20, 1, v78);
  if (v83)
  {
    outlined destroy of SearchResult?(v20, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
    goto LABEL_5;
  }
  v212 = v21;
  v89 = OUTLINED_FUNCTION_95_0();
  v175 = v78;
  v90(v89);
  v91 = v179;
  static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
  v92 = (uint64_t *)Searchfoundation_Card.entityIdentifier.getter();
  v94 = v93;
  v95 = Data.base64EncodedString(options:)(0);
  countAndFlagsBits = v95._countAndFlagsBits;
  object = v95._object;
  outlined consume of Data._Representation((uint64_t)v92, v94);
  v97 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_49(v182, v98, v99, v97);
  v198 = *(_QWORD *)(Searchfoundation_Card.cardSections.getter() + 16);
  if (v198)
  {
    v173 = v95._object;
    v197 = v65;
    v202 = 0;
    v206 = 0;
    v207 = 0;
    OUTLINED_FUNCTION_20_2();
    v195 = v100 + v102;
    v194 = *MEMORY[0x24BE702C8];
    v211 = 0xE000000000000000;
    v188 = *MEMORY[0x24BE702C0];
    v103 = v203;
    v196 = v66;
    v193 = v100;
    while (v101 < *(_QWORD *)(v100 + 16))
    {
      v104 = *(_QWORD *)(v205 + 72);
      v204 = v101;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v205 + 16))(v103, v195 + v104 * v101, v66);
      v105 = (uint64_t)v197;
      Searchfoundation_CardSection.type.getter();
      v106 = v199;
      v107 = *(void (**)(uint64_t, _QWORD, uint64_t))(v200 + 104);
      v108 = v201;
      v107(v199, v194, v201);
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_CardSectionType and conformance Searchfoundation_CardSectionType, (uint64_t (*)(uint64_t))MEMORY[0x24BE702D0], MEMORY[0x24BE702D8]);
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_31_1();
      v110 = v216;
      v109 = v217;
      OUTLINED_FUNCTION_68_1(v106);
      OUTLINED_FUNCTION_68_1(v105);
      if ((uint64_t *)v109 == v110)
      {
        v103 = v203;
        Searchfoundation_CardSection.value.getter();
        Searchfoundation_CardSectionValue.richTitleCardSection.getter();
        v111 = OUTLINED_FUNCTION_29_1();
        OUTLINED_FUNCTION_4_3(v111, v112);
        Searchfoundation_RichTitleCardSection.richSubtitle.getter();
        v113 = OUTLINED_FUNCTION_67_1();
        OUTLINED_FUNCTION_4_3(v113, v114);
        v91 = Searchfoundation_RichText.formattedTextPieces.getter();
        v115 = OUTLINED_FUNCTION_29_1();
        OUTLINED_FUNCTION_4_3(v115, v116);
        v92 = *(uint64_t **)(v91 + 16);
        if (v92)
        {
          OUTLINED_FUNCTION_54_1();
          v118 = v91 + v117;
          v120 = *(_QWORD *)(v119 + 72);
          v121 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
          do
          {
            v121(v47, v118, v39);
            v91 = Searchfoundation_FormattedText.isEmphasized.getter();
            v121(v215, (uint64_t)v47, v39);
            if ((v91 & 1) != 0)
            {
              v122 = (uint64_t)v215;
              v91 = Searchfoundation_FormattedText.hasText.getter();
              OUTLINED_FUNCTION_44_1(v122);
              if ((v91 & 1) != 0)
              {
                OUTLINED_FUNCTION_86_1();
                v123 = v208;
                Searchfoundation_FormattedText.text.getter();
                v91 = v123;
                v206 = Searchfoundation_Text.text.getter();
                v211 = v124;
                OUTLINED_FUNCTION_66_1();
              }
            }
            else
            {
              OUTLINED_FUNCTION_44_1((uint64_t)v215);
            }
            OUTLINED_FUNCTION_44_1((uint64_t)v47);
            v118 += v120;
            v92 = (uint64_t *)((char *)v92 - 1);
          }
          while (v92);
          OUTLINED_FUNCTION_49_1();
          v103 = v203;
        }
        else
        {
          OUTLINED_FUNCTION_36_0();
        }
        v144 = *(uint64_t (**)(uint64_t, uint64_t))(v205 + 8);
        v145 = v103;
        goto LABEL_35;
      }
      v125 = v203;
      Searchfoundation_CardSection.type.getter();
      v107(v106, v188, v108);
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_31_1();
      v92 = v216;
      v91 = v217;
      OUTLINED_FUNCTION_68_1(v106);
      OUTLINED_FUNCTION_68_1(v105);
      if ((uint64_t *)v91 != v92)
      {
        v144 = *(uint64_t (**)(uint64_t, uint64_t))(v205 + 8);
        v145 = v125;
        v103 = v125;
LABEL_35:
        v66 = v196;
        goto LABEL_36;
      }
      Searchfoundation_CardSection.value.getter();
      Searchfoundation_CardSectionValue.attributionFooterCardSection.getter();
      v126 = OUTLINED_FUNCTION_67_1();
      OUTLINED_FUNCTION_4_3(v126, v127);
      Searchfoundation_AttributionFooterCardSection.leadingAttribution.getter();
      v128 = Searchfoundation_RichText.formattedTextPieces.getter();
      v129 = OUTLINED_FUNCTION_67_1();
      OUTLINED_FUNCTION_4_3(v129, v130);
      v131 = *(_QWORD *)(v128 + 16);
      v132 = v212;
      if (v131)
      {
        OUTLINED_FUNCTION_54_1();
        v134 = v128 + v133;
        v136 = *(_QWORD *)(v135 + 72);
        v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16);
        while (1)
        {
          v138 = v213;
          v137(v213, v134, v39);
          v139 = Searchfoundation_FormattedText.isEmphasized.getter();
          v137(v132, v138, v39);
          if ((v139 & 1) == 0)
            break;
          v140 = Searchfoundation_FormattedText.hasText.getter();
          OUTLINED_FUNCTION_44_1(v132);
          if ((v140 & 1) == 0)
            goto LABEL_29;
          swift_bridgeObjectRelease();
          v141 = v213;
          Searchfoundation_FormattedText.text.getter();
          v202 = Searchfoundation_Text.text.getter();
          v207 = v142;
          OUTLINED_FUNCTION_66_1();
          v143 = v141;
LABEL_30:
          OUTLINED_FUNCTION_44_1(v143);
          v134 += v136;
          --v131;
          v132 = v212;
          if (!v131)
            goto LABEL_39;
        }
        OUTLINED_FUNCTION_44_1(v132);
LABEL_29:
        v143 = v213;
        goto LABEL_30;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      Searchfoundation_AttributionFooterCardSection.leadingAttributionPunchout.getter();
      v91 = Searchfoundation_Punchout.urls.getter();
      v146 = OUTLINED_FUNCTION_29_1();
      OUTLINED_FUNCTION_4_3(v146, v147);
      v148 = v185;
      v66 = v196;
      if (*(_QWORD *)(v91 + 16))
      {
        OUTLINED_FUNCTION_10_2();
        v92 = v184;
        OUTLINED_FUNCTION_85_1((uint64_t)v184, v91 + v149, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v150 + 16));
        v151 = 0;
      }
      else
      {
        v151 = 1;
        v92 = v184;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v92, v151, 1, v148);
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_22_2((uint64_t)v92, 1, v148);
      if (!v83)
      {
        OUTLINED_FUNCTION_85_1(v181, (uint64_t)v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 32));
        Searchfoundation_URL.address.getter();
        v156 = v180;
        URL.init(string:)();
        OUTLINED_FUNCTION_36_0();
        v157 = OUTLINED_FUNCTION_95_0();
        v158(v157);
        OUTLINED_FUNCTION_4_3(v190, *(uint64_t (**)(uint64_t, _QWORD))(v183 + 8));
        v103 = v203;
        OUTLINED_FUNCTION_75_1(v203, *(uint64_t (**)(uint64_t, uint64_t))(v205 + 8));
        v91 = v182;
        v92 = &demangling cache variable for type metadata for URL?;
        OUTLINED_FUNCTION_101_0(v182);
        outlined init with take of URL?(v156, v91, &demangling cache variable for type metadata for URL?);
        goto LABEL_37;
      }
      outlined destroy of SearchResult?((uint64_t)v92, &demangling cache variable for type metadata for Searchfoundation_URL?);
      if (one-time initialization token for search != -1)
        swift_once();
      v152 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_28(v152, (uint64_t)static Logging.search);
      v153 = OUTLINED_FUNCTION_80();
      v154 = os_log_type_enabled((os_log_t)v91, v153);
      v103 = v203;
      if (v154)
      {
        v155 = (uint8_t *)OUTLINED_FUNCTION_5_3();
        *(_WORD *)v155 = 0;
        OUTLINED_FUNCTION_19_2(&dword_24315F000, v91, v153, "No URL available in the attribution footer punchout", v155);
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_4_3(v190, *(uint64_t (**)(uint64_t, _QWORD))(v183 + 8));
      v144 = *(uint64_t (**)(uint64_t, uint64_t))(v205 + 8);
      v145 = v103;
LABEL_36:
      OUTLINED_FUNCTION_75_1(v145, v144);
LABEL_37:
      v100 = v193;
      v101 = v204 + 1;
      if (v204 + 1 == v198)
      {
        swift_bridgeObjectRelease();
        object = v173;
        v160 = v206;
        v159 = v207;
        v161 = v202;
        v162 = v211;
        goto LABEL_50;
      }
    }
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
  v161 = 0;
  v159 = 0;
  v160 = 0;
  v162 = 0xE000000000000000;
LABEL_50:
  v163 = HIBYTE(v162) & 0xF;
  if ((v162 & 0x2000000000000000) == 0)
    v163 = v160 & 0xFFFFFFFFFFFFLL;
  if (v163)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<WebAnswer>);
    OUTLINED_FUNCTION_92_0();
    type metadata accessor for WebAnswer();
    v164 = OUTLINED_FUNCTION_21_1();
    *(_OWORD *)(v164 + 16) = xmmword_24334DB60;
    v165 = (uint64_t *)((char *)v92 + v164);
    v166 = v182;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v182, (uint64_t)v165 + *(int *)(v91 + 28), &demangling cache variable for type metadata for URL?);
    *v165 = countAndFlagsBits;
    v165[1] = (uint64_t)object;
    v165[2] = v160;
    v165[3] = v162;
    v165[4] = v161;
    v165[5] = v159;
    OUTLINED_FUNCTION_89_1(v166);
    OUTLINED_FUNCTION_4_3(v179, *(uint64_t (**)(uint64_t, _QWORD))(v176 + 8));
    OUTLINED_FUNCTION_4_3(v177, *(uint64_t (**)(uint64_t, _QWORD))(v178 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_56_0();
    if (one-time initialization token for search != -1)
      swift_once();
    v167 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v167, (uint64_t)static Logging.search);
    v168 = OUTLINED_FUNCTION_48_1();
    if (OUTLINED_FUNCTION_21(v168))
    {
      v169 = (_WORD *)OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_51(v169);
      OUTLINED_FUNCTION_7(&dword_24315F000, v170, v171, "No answer available in the web answer card");
      specialized UnsafeMutablePointer.deallocate()();
    }

    outlined destroy of SearchResult?(v182, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_4_3(v179, *(uint64_t (**)(uint64_t, _QWORD))(v176 + 8));
    OUTLINED_FUNCTION_4_3(v177, *(uint64_t (**)(uint64_t, _QWORD))(v178 + 8));
  }
LABEL_9:
  OUTLINED_FUNCTION_43_0();
}

void static GlobalSearchResponseProcessor.makeKnowledge(experience:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  os_log_type_t v76;
  _WORD *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, _QWORD, uint64_t);
  uint64_t v91;
  uint64_t v92;
  int *v93;
  int *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, _QWORD);
  uint64_t v101;
  int *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, _QWORD);
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t *v124;
  unint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int v162;
  void (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  int *v174;

  OUTLINED_FUNCTION_18_2();
  a19 = v22;
  a20 = v23;
  v142 = type metadata accessor for Searchfoundation_Text();
  v141 = *(_QWORD *)(v142 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v25);
  v26 = type metadata accessor for Searchfoundation_DescriptionCardSection();
  OUTLINED_FUNCTION_25_0(v26, (uint64_t)&v167);
  v139 = v27;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_0_3();
  v30 = OUTLINED_FUNCTION_81_1(v29);
  v160 = *(_QWORD *)(v30 - 8);
  v161 = v30;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v31);
  v159 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_2();
  v33 = type metadata accessor for Searchfoundation_URLImage();
  OUTLINED_FUNCTION_25_0(v33, (uint64_t)&a18);
  v153 = v34;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_13_2(v36);
  v37 = type metadata accessor for Searchfoundation_Image();
  OUTLINED_FUNCTION_25_0(v37, (uint64_t)&a15);
  v152 = v38;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_0_3();
  v41 = OUTLINED_FUNCTION_82_1(v40);
  v157 = *(_QWORD *)(v41 - 8);
  v158 = v41;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_0_3();
  v156 = v43;
  v44 = type metadata accessor for Searchfoundation_RichTitleCardSection();
  OUTLINED_FUNCTION_25_0(v44, (uint64_t)&a12);
  v150 = v45;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_0_3();
  v48 = OUTLINED_FUNCTION_80_1(v47);
  v169 = *(_QWORD *)(v48 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_71();
  v52 = v50 - v51;
  MEMORY[0x24BDAC7A8](v53);
  v55 = (char *)&v128 - v54;
  v56 = type metadata accessor for Searchfoundation_CardSection();
  v170 = *(_QWORD *)(v56 - 8);
  v171 = v56;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_0_3();
  v172 = v58;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_18_1();
  v155 = v60;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_31_0();
  v143 = v62;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_34_1();
  v154 = v64;
  v65 = (_QWORD *)OUTLINED_FUNCTION_33_0();
  v66 = *(v65 - 1);
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v67);
  v68 = OUTLINED_FUNCTION_30_1();
  v136 = *(_QWORD *)(v68 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_0_3();
  v135 = v70;
  v71 = static GlobalSearchResponseProcessor.parseExperience(experience:)();
  if (v71)
  {
    v72 = v71;
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_26_0();
    specialized Collection.first.getter(v72, (uint64_t (*)(_QWORD))MEMORY[0x24BE70FE8], v21);
    OUTLINED_FUNCTION_47();
    v73 = OUTLINED_FUNCTION_22_2(v21, 1, v68);
    if (!v74)
    {
      v133 = v66;
      v134 = v65;
      v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32);
      v131 = v68;
      v80(v135, v21, v68);
      static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)();
      v129 = Searchfoundation_Card.resultIdentifier.getter();
      v130 = v81;
      OUTLINED_FUNCTION_5_2();
      OUTLINED_FUNCTION_41_1(v154);
      OUTLINED_FUNCTION_41_1(v143);
      v132 = v20;
      if (*(_QWORD *)(Searchfoundation_Card.cardSections.getter() + 16))
      {
        v165 = v48;
        v166 = v52;
        v138 = 0;
        OUTLINED_FUNCTION_55_0();
        v137 = 0;
        OUTLINED_FUNCTION_10_2();
        v128 = v83;
        v85 = v83 + v84;
        v87 = *(_QWORD *)(v86 + 72);
        v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
        v164 = v87;
        v162 = *MEMORY[0x24BE702C8];
        v144 = *MEMORY[0x24BE702B0];
        v167 = 0xE000000000000000;
        v168 = 0xE000000000000000;
        v145 = 0xE000000000000000;
        v88 = v171;
        v89 = v172;
        do
        {
          v172 = v82;
          v163(v89, v85, v88);
          Searchfoundation_CardSection.type.getter();
          v90 = *(void (**)(uint64_t, _QWORD, uint64_t))(v169 + 104);
          v91 = (uint64_t)v55;
          v88 = v165;
          v92 = v166;
          v90(v166, v162, v165);
          lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_CardSectionType and conformance Searchfoundation_CardSectionType, (uint64_t (*)(uint64_t))MEMORY[0x24BE702D0], MEMORY[0x24BE702D8]);
          OUTLINED_FUNCTION_36_1();
          OUTLINED_FUNCTION_36_1();
          v93 = v173;
          v94 = v174;
          OUTLINED_FUNCTION_73_1(v92);
          OUTLINED_FUNCTION_73_1(v91);
          if (v94 == v93)
          {
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_86_1();
            OUTLINED_FUNCTION_64_1();
            v95 = v149;
            Searchfoundation_CardSectionValue.richTitleCardSection.getter();
            OUTLINED_FUNCTION_45(v157);
            v147 = Searchfoundation_RichTitleCardSection.title.getter();
            v167 = v96;
            v146 = Searchfoundation_RichTitleCardSection.subtitle.getter();
            v168 = v97;
            v98 = v151;
            Searchfoundation_RichTitleCardSection.titleImage.getter();
            Searchfoundation_Image.urlImage.getter();
            OUTLINED_FUNCTION_4_3(v98, *(uint64_t (**)(uint64_t, _QWORD))(v152 + 8));
            Searchfoundation_URLImage.urlValue.getter();
            v99 = OUTLINED_FUNCTION_29_1();
            OUTLINED_FUNCTION_4_3(v99, v100);
            Searchfoundation_URL.address.getter();
            OUTLINED_FUNCTION_45(v160);
            v101 = v155;
            OUTLINED_FUNCTION_98_0();
            OUTLINED_FUNCTION_26_0();
            OUTLINED_FUNCTION_4_3(v95, *(uint64_t (**)(uint64_t, _QWORD))(v150 + 8));
            OUTLINED_FUNCTION_27_1();
            v20 = (int *)&demangling cache variable for type metadata for URL?;
            OUTLINED_FUNCTION_89_1(v154);
            OUTLINED_FUNCTION_100_0(v101);
            v55 = (char *)v91;
          }
          else
          {
            Searchfoundation_CardSection.type.getter();
            v90(v92, v144, v88);
            OUTLINED_FUNCTION_36_1();
            OUTLINED_FUNCTION_36_1();
            v20 = v173;
            v102 = v174;
            OUTLINED_FUNCTION_73_1(v92);
            OUTLINED_FUNCTION_73_1(v91);
            v55 = (char *)v91;
            if (v102 == v20)
            {
              OUTLINED_FUNCTION_49_1();
              OUTLINED_FUNCTION_49_1();
              OUTLINED_FUNCTION_64_1();
              Searchfoundation_CardSectionValue.descriptionCardSection.getter();
              OUTLINED_FUNCTION_45(v157);
              v103 = v140;
              Searchfoundation_DescriptionCardSection.descriptionText.getter();
              v137 = Searchfoundation_Text.text.getter();
              v145 = v104;
              OUTLINED_FUNCTION_4_3(v103, *(uint64_t (**)(uint64_t, _QWORD))(v141 + 8));
              v138 = Searchfoundation_DescriptionCardSection.attributionText.getter();
              v148 = v105;
              Searchfoundation_DescriptionCardSection.attributionURL.getter();
              Searchfoundation_URL.address.getter();
              OUTLINED_FUNCTION_45(v160);
              v106 = v155;
              OUTLINED_FUNCTION_98_0();
              OUTLINED_FUNCTION_26_0();
              v107 = OUTLINED_FUNCTION_29_1();
              OUTLINED_FUNCTION_4_3(v107, v108);
              OUTLINED_FUNCTION_27_1();
              v20 = (int *)&demangling cache variable for type metadata for URL?;
              OUTLINED_FUNCTION_89_1(v143);
              OUTLINED_FUNCTION_100_0(v106);
            }
            else
            {
              OUTLINED_FUNCTION_27_1();
            }
          }
          v85 += v164;
          v82 = v172 - 1;
        }
        while (v172 != 1);
        OUTLINED_FUNCTION_49_1();
        v109 = v138;
        v110 = v137;
        v111 = v145;
      }
      else
      {
        swift_bridgeObjectRelease();
        v109 = 0;
        OUTLINED_FUNCTION_55_0();
        v110 = 0;
        v167 = 0xE000000000000000;
        v168 = 0xE000000000000000;
        v111 = 0xE000000000000000;
      }
      v112 = HIBYTE(v111) & 0xF;
      if ((v111 & 0x2000000000000000) == 0)
        v112 = v110 & 0xFFFFFFFFFFFFLL;
      v113 = v134;
      v114 = v133;
      if (v112)
      {
        v115 = v110;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<KGDocument>);
        OUTLINED_FUNCTION_92_0();
        type metadata accessor for KGDocument();
        v116 = OUTLINED_FUNCTION_21_1();
        *(_OWORD *)(v116 + 16) = xmmword_24334DB60;
        v117 = (_QWORD *)((char *)v113 + v116);
        v118 = v143;
        outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v143, (uint64_t)v113 + v116 + v20[5], &demangling cache variable for type metadata for URL?);
        v119 = v154;
        outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v154, (uint64_t)v113 + v116 + v20[9], &demangling cache variable for type metadata for URL?);
        v120 = v130;
        *v117 = v129;
        v117[1] = v120;
        v121 = (_QWORD *)((char *)v113 + v116 + v20[6]);
        *v121 = v115;
        v121[1] = v111;
        v122 = (_QWORD *)((char *)v113 + v116 + v20[7]);
        v123 = v167;
        *v122 = v147;
        v122[1] = v123;
        v124 = (_QWORD *)((char *)v113 + v116 + v20[8]);
        v125 = v168;
        *v124 = v146;
        v124[1] = v125;
        v126 = (_QWORD *)((char *)v113 + v116 + v20[10]);
        v127 = v148;
        *v126 = v109;
        v126[1] = v127;
        OUTLINED_FUNCTION_101_0(v118);
        OUTLINED_FUNCTION_101_0(v119);
        OUTLINED_FUNCTION_4_3((uint64_t)v132, *(uint64_t (**)(uint64_t, _QWORD))(v114 + 8));
      }
      else
      {
        OUTLINED_FUNCTION_49_1();
        OUTLINED_FUNCTION_26_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_86_1();
        OUTLINED_FUNCTION_49_1();
        outlined destroy of SearchResult?(v143, &demangling cache variable for type metadata for URL?);
        outlined destroy of SearchResult?(v154, &demangling cache variable for type metadata for URL?);
        (*(void (**)(int *, _QWORD *))(v114 + 8))(v132, v113);
      }
      OUTLINED_FUNCTION_4_3(v135, *(uint64_t (**)(uint64_t, _QWORD))(v136 + 8));
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_78_1(v73, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent?);
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v75 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_28(v75, (uint64_t)static Logging.search);
  v76 = OUTLINED_FUNCTION_48_1();
  if (OUTLINED_FUNCTION_21(v76))
  {
    v77 = (_WORD *)OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_51(v77);
    OUTLINED_FUNCTION_7(&dword_24315F000, v78, v79, "Layout snippet missing in the knowledge experience components");
    specialized UnsafeMutablePointer.deallocate()();
  }

LABEL_10:
  OUTLINED_FUNCTION_43_0();
}

uint64_t closure #2 in static GlobalSearchResponseProcessor.parseCardForURL(card:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t *v72;

  v72 = a2;
  v3 = type metadata accessor for Searchfoundation_URL();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for Searchfoundation_URLImage();
  v60 = *(void (**)(char *, uint64_t))(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Searchfoundation_Image();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v64 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for Searchfoundation_VerticalLayoutCardSection();
  v7 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Searchfoundation_CardSectionValue();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Searchfoundation_CardSection();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v70 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v55 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v55 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v55 - v20;
  v22 = Searchfoundation_CardSection.hasValue.getter();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v23(v21, a1, v11);
  if ((v22 & 1) == 0)
  {
    v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v21, v11);
    v23(v19, a1, v11);
    v27 = a1;
    goto LABEL_8;
  }
  v56 = v7;
  v24 = v68;
  Searchfoundation_CardSection.value.getter();
  v25 = Searchfoundation_CardSectionValue.hasVerticalLayoutCardSection.getter();
  v67 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v67)(v24, v69);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v21, v11);
  v23(v19, a1, v11);
  v27 = a1;
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v38 = v70;
    v26(v19, v11);
    v32 = v71;
    v23(v71, v27, v11);
LABEL_9:
    v26(v32, v11);
    v23(v38, v27, v11);
    goto LABEL_10;
  }
  v28 = v68;
  Searchfoundation_CardSection.value.getter();
  v29 = v9;
  Searchfoundation_CardSectionValue.verticalLayoutCardSection.getter();
  ((void (*)(char *, uint64_t))v67)(v28, v69);
  v30 = Searchfoundation_VerticalLayoutCardSection.hasThumbnail.getter();
  v31 = v66;
  v56 = *(_QWORD *)(v56 + 8);
  ((void (*)(char *, uint64_t))v56)(v9, v66);
  v26(v19, v11);
  v32 = v71;
  v23(v71, v27, v11);
  if ((v30 & 1) == 0)
  {
    v38 = v70;
    goto LABEL_9;
  }
  v33 = v32;
  v34 = v68;
  Searchfoundation_CardSection.value.getter();
  Searchfoundation_CardSectionValue.verticalLayoutCardSection.getter();
  ((void (*)(char *, uint64_t))v67)(v34, v69);
  v35 = v64;
  Searchfoundation_VerticalLayoutCardSection.thumbnail.getter();
  ((void (*)(char *, uint64_t))v56)(v29, v31);
  v36 = v35;
  LOBYTE(v35) = Searchfoundation_Image.hasURLImage.getter();
  v37 = v65;
  v63 = *(_QWORD *)(v63 + 8);
  ((void (*)(char *, uint64_t))v63)(v36, v65);
  v26(v33, v11);
  v38 = v70;
  v23(v70, v27, v11);
  if ((v35 & 1) == 0)
  {
LABEL_10:
    v26(v38, v11);
    v45 = v72;
    goto LABEL_11;
  }
  v39 = v68;
  v40 = v36;
  Searchfoundation_CardSection.value.getter();
  Searchfoundation_CardSectionValue.verticalLayoutCardSection.getter();
  ((void (*)(char *, uint64_t))v67)(v39, v69);
  Searchfoundation_VerticalLayoutCardSection.thumbnail.getter();
  ((void (*)(char *, uint64_t))v56)(v29, v66);
  v71 = v29;
  v41 = v38;
  v42 = v61;
  Searchfoundation_Image.urlImage.getter();
  ((void (*)(char *, uint64_t))v63)(v36, v37);
  LOBYTE(v39) = Searchfoundation_URLImage.hasURLValue.getter();
  v43 = (void (*)(char *, uint64_t))*((_QWORD *)v60 + 1);
  v44 = v62;
  v43(v42, v62);
  v26(v41, v11);
  v45 = v72;
  if ((v39 & 1) == 0)
  {
LABEL_11:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (id: String, url: URL?));
    v51 = (uint64_t)v45;
    v52 = 1;
    return __swift_storeEnumTagSinglePayload(v51, v52, 1, v53);
  }
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (id: String, url: URL?));
  v70 = (char *)v45 + *(int *)(v46 + 48);
  v60 = v43;
  *v45 = Searchfoundation_CardSection.resultIdentifier.getter();
  v45[1] = v47;
  v48 = v68;
  Searchfoundation_CardSection.value.getter();
  v49 = v71;
  Searchfoundation_CardSectionValue.verticalLayoutCardSection.getter();
  ((void (*)(char *, uint64_t))v67)(v48, v69);
  Searchfoundation_VerticalLayoutCardSection.thumbnail.getter();
  ((void (*)(char *, uint64_t))v56)(v49, v66);
  Searchfoundation_Image.urlImage.getter();
  ((void (*)(char *, uint64_t))v63)(v40, v65);
  v50 = v57;
  Searchfoundation_URLImage.urlValue.getter();
  v60(v42, v44);
  Searchfoundation_URL.address.getter();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v59);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  v51 = (uint64_t)v45;
  v52 = 0;
  v53 = v46;
  return __swift_storeEnumTagSinglePayload(v51, v52, 1, v53);
}

uint64_t closure #1 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v3 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Apple_Parsec_Siri_V2alpha_CasinoSnippet();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.snippet.getter();
  v16 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v16) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v11, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?);
  }
  else
  {
    v17 = v4;
    v18 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v11, v16) == *MEMORY[0x24BE71000])
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v11, v16);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      static GlobalSearchResponseProcessor.makeCard(casinoSnippet:)((uint64_t)v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v16);
    v4 = v17;
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logging.search);
  v21 = v4;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v22(v8, v33, v3);
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v25 = 136315138;
    v31 = v25 + 4;
    v22(v32, (uint64_t)v8, v3);
    v26 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v36);
    v35 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v3);
    _os_log_impl(&dword_24315F000, v23, v24, "InfoViewFactory non casino snippet %s", v25, 0xCu);
    v29 = v33;
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v29, -1, -1);
    MEMORY[0x2494F6D70](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v3);
  }

  v30 = type metadata accessor for Searchfoundation_Card();
  return __swift_storeEnumTagSinglePayload(v34, 1, 1, v30);
}

uint64_t static GlobalSearchResponseProcessor.makeCard(casinoSnippet:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v3 = type metadata accessor for BinaryDecodingOptions();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for Google_Protobuf_Any();
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for Searchfoundation_Card();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Apple_Parsec_Siri_V2alpha_CasinoSnippet();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  if ((Apple_Parsec_Siri_V2alpha_CasinoSnippet.hasCardData.getter() & 1) != 0)
  {
    Apple_Parsec_Siri_V2alpha_CasinoSnippet.cardData.getter();
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    BinaryDecodingOptions.init()();
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Searchfoundation_Card and conformance Searchfoundation_Card, (uint64_t (*)(uint64_t))MEMORY[0x24BE70018], MEMORY[0x24BE70008]);
    v16 = 0;
    Message.init(unpackingAny:extensions:options:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v29, v8, v5);
  }
  else
  {
    v28 = v5;
    if (one-time initialization token for search != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logging.search);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v18(v15, a1, v9);
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_QWORD *)&v30[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v27 = v21 + 4;
      v18(v13, (uint64_t)v15, v9);
      v23 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, (uint64_t *)v30);
      v32 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      _os_log_impl(&dword_24315F000, v19, v20, "InfoViewFactory casinoSnippet has no card data %s", v21, 0xCu);
      v16 = 1;
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v22, -1, -1);
      MEMORY[0x2494F6D70](v21, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);

      v16 = 1;
    }
    v5 = v28;
  }
  return __swift_storeEnumTagSinglePayload(v29, v16, 1, v5);
}

uint64_t closure #2 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for Searchfoundation_Card();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Searchfoundation_CardSource();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v26 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v22 = v10;
    v23 = v9;
    v24 = a1;
    v25 = v2;
    v13 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = *(_QWORD *)(v6 + 72);
    v29 = v6;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v28 = v14;
    v21 = a2;
    swift_bridgeObjectRetain();
    v15 = MEMORY[0x24BEE4AF8];
    do
    {
      v27(v8, v13, v5);
      v16 = Searchfoundation_Card.cardSections.getter();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v15 = v18;
      }
      v17 = *(_QWORD *)(v15 + 16);
      if (v17 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v15 = v19;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      *(_QWORD *)(v15 + 8 * v17 + 32) = v16;
      v13 += v28;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v10 = v22;
    v9 = v23;
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  specialized _copySequenceToContiguousArray<A>(_:)(v15);
  swift_bridgeObjectRelease();
  Searchfoundation_Card.cardSections.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v26, *MEMORY[0x24BE70158], v9);
  return Searchfoundation_Card.source.setter();
}

void closure #1 in static GlobalSearchResponseProcessor.makeLegacySnippet(layoutSnippet:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int EnumTagSinglePayload;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v86 = a2;
  v87 = type metadata accessor for Apple_Parsec_Siri_Legacy_PodView();
  v84 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v83 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Apple_Parsec_Siri_Legacy_ImageLinkedAnswer();
  v91 = *(uint8_t **)(v4 - 8);
  v92 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Apple_Parsec_Siri_Legacy_ImagePod();
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Apple_Parsec_Siri_Legacy_ImageResource();
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v88 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Apple_Parsec_Siri_Legacy_SummaryPod();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v75 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v78 = (char *)&v75 - v17;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_Legacy_PodView.OneOf_Pod?);
  v18 = MEMORY[0x24BDAC7A8](v79);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v75 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v75 - v22;
  v24 = a1;
  Apple_Parsec_Siri_Legacy_PodView.pod.getter();
  v25 = type metadata accessor for Apple_Parsec_Siri_Legacy_PodView.OneOf_Pod();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v85 = v23;
  if (EnumTagSinglePayload == 1)
    goto LABEL_18;
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v23, (uint64_t)v21, &demangling cache variable for type metadata for Apple_Parsec_Siri_Legacy_PodView.OneOf_Pod?);
  v27 = *(_QWORD *)(v25 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v21, v25);
  if (v28 == *MEMORY[0x24BE70280])
  {
    (*(void (**)(char *, uint64_t))(v27 + 96))(v21, v25);
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v21, v82);
    v29 = Apple_Parsec_Siri_Legacy_ImagePod.images.getter();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v32 = v91;
      v31 = v92;
      v33 = (v91[80] + 32) & ~(unint64_t)v91[80];
      v84 = v29;
      v34 = v29 + v33;
      v35 = *((_QWORD *)v91 + 9);
      v36 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v91 + 2);
      v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v87 = (uint64_t)v36;
      do
      {
        v36(v6, v34, v31);
        if ((Apple_Parsec_Siri_Legacy_ImageLinkedAnswer.hasImageResource.getter() & 1) != 0)
        {
          v38 = v88;
          Apple_Parsec_Siri_Legacy_ImageLinkedAnswer.imageResource.getter();
          v39 = Apple_Parsec_Siri_Legacy_ImageResource.resourceURL.getter();
          v41 = v40;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v38, v90);
          (*((void (**)(char *, uint64_t))v32 + 1))(v6, v92);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v37 = v44;
          }
          v42 = v37[2];
          if (v42 >= v37[3] >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v37 = v45;
          }
          v37[2] = v42 + 1;
          v43 = &v37[2 * v42];
          v43[4] = v39;
          v43[5] = v41;
          v32 = v91;
          v31 = v92;
          v36 = (void (*)(char *, unint64_t, uint64_t))v87;
        }
        else
        {
          (*((void (**)(char *, uint64_t))v32 + 1))(v6, v31);
        }
        v34 += v35;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
    goto LABEL_26;
  }
  if (v28 != *MEMORY[0x24BE70288])
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v25);
LABEL_18:
    if (one-time initialization token for search != -1)
      swift_once();
    v51 = type metadata accessor for Logger();
    __swift_project_value_buffer(v51, (uint64_t)static Logging.search);
    v53 = v83;
    v52 = v84;
    v54 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, v24, v87);
    v55 = Logger.logObject.getter();
    v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v94 = v58;
      *(_DWORD *)v57 = 136315138;
      Apple_Parsec_Siri_Legacy_PodView.pod.getter();
      v59 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, &v94);
      v93 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v87);
      _os_log_impl(&dword_24315F000, v55, v56, "Received unexpected gkSnippet pod %s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v58, -1, -1);
      MEMORY[0x2494F6D70](v57, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    }

    v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t))(v27 + 96))(v21, v25);
  v46 = v78;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v78, v21, v11);
  if ((Apple_Parsec_Siri_Legacy_SummaryPod.hasImageResource.getter() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v37 = (_QWORD *)swift_allocObject();
    *((_OWORD *)v37 + 1) = xmmword_24334DB60;
    v47 = v88;
    Apple_Parsec_Siri_Legacy_SummaryPod.imageResource.getter();
    v48 = Apple_Parsec_Siri_Legacy_ImageResource.resourceURL.getter();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v47, v90);
    v37[4] = v48;
    v37[5] = v50;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v46, v11);
LABEL_26:
    v62 = (uint64_t)v85;
    goto LABEL_27;
  }
  v63 = v11;
  if (one-time initialization token for search != -1)
    swift_once();
  v64 = type metadata accessor for Logger();
  __swift_project_value_buffer(v64, (uint64_t)static Logging.search);
  v65 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v66 = v77;
  v65(v77, v46, v63);
  v67 = Logger.logObject.getter();
  v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v92 = swift_slowAlloc();
    v94 = v92;
    *(_DWORD *)v69 = 136315138;
    v91 = v69 + 4;
    v65(v76, v66, v63);
    v70 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, &v94);
    v93 = v72;
    v46 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v73 = *(void (**)(char *, uint64_t))(v12 + 8);
    v73(v66, v63);
    _os_log_impl(&dword_24315F000, v67, v68, "SummaryPod has no image resource: %s", v69, 0xCu);
    v74 = v92;
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v74, -1, -1);
    MEMORY[0x2494F6D70](v69, -1, -1);
  }
  else
  {
    v73 = *(void (**)(char *, uint64_t))(v12 + 8);
    v73(v66, v63);
  }

  v62 = (uint64_t)v85;
  v73(v46, v63);
  v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_27:
  *v86 = v37;
  outlined destroy of SearchResult?(v62, &demangling cache variable for type metadata for Apple_Parsec_Siri_Legacy_PodView.OneOf_Pod?);
}

void closure #1 in static GlobalSearchResponseProcessor.collatePegasusComponents(components:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void (*v29)(char *, char *, uint64_t);
  int v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v74 = a2;
  v75 = a4;
  v70 = a3;
  v76 = type metadata accessor for Apple_Parsec_Siri_V2alpha_RenderedDialogComponent();
  v4 = *(_QWORD *)(v76 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Apple_Parsec_Siri_V2alpha_DomainObjectComponent();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v67 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
  v9 = *(_QWORD *)(v73 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v72 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_ExperienceComponent.OneOf_Component?);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent.OneOf_Component();
  v14 = *(uint64_t **)(v13 - 8);
  v15 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v66 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v71 = (char *)&v65 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v65 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v65 - v22;
  Apple_Parsec_Siri_V2alpha_ExperienceComponent.component.getter();
  v24 = v13;
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of SearchResult?((uint64_t)v12, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_ExperienceComponent.OneOf_Component?);
    if (one-time initialization token for search != -1)
      swift_once();
    v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logging.search);
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_24315F000, v26, v27, "PegasusResult component missing type", v28, 2u);
      MEMORY[0x2494F6D70](v28, -1, -1);
    }

    return;
  }
  ((void (*)(char *, char *, uint64_t))v14[4])(v23, v12, v13);
  v29 = (void (*)(char *, char *, uint64_t))v14[2];
  v29(v21, v23, v13);
  v30 = ((uint64_t (*)(char *, uint64_t))v14[11])(v21, v13);
  v31 = v23;
  if (v30 == *MEMORY[0x24BE70C58])
  {
    ((void (*)(char *, uint64_t))v14[12])(v21, v24);
    v32 = v76;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v21, v76);
    v33 = v31;
    v34 = v24;
    v35 = v75;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v36 = *(_QWORD *)(*(_QWORD *)v35 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
    v37 = *(_QWORD *)v35;
    *(_QWORD *)(v37 + 16) = v36 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 16))(v37+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v36, v6, v32);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
    ((void (*)(char *, uint64_t))v14[1])(v33, v34);
    return;
  }
  if (v30 == *MEMORY[0x24BE70C50])
  {
    ((void (*)(char *, uint64_t))v14[12])(v21, v24);
    v39 = v72;
    v38 = v73;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v72, v21, v73);
    v40 = v24;
    v41 = v74;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v42 = *(_QWORD *)(*v41 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v42);
    v43 = *v41;
    *(_QWORD *)(v43 + 16) = v42 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v43+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v42, v39, v38);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v39, v38);
    v44 = (void (*)(char *, uint64_t))v14[1];
LABEL_13:
    v44(v31, v40);
    return;
  }
  v45 = v14;
  if (v30 == *MEMORY[0x24BE70C38])
  {
    ((void (*)(char *, uint64_t))v14[12])(v21, v24);
    v47 = v67;
    v46 = v68;
    v48 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v21, v69);
    v40 = v24;
    v49 = v70;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v50 = *(_QWORD *)(*v49 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v50);
    v51 = *v49;
    *(_QWORD *)(v51 + 16) = v50 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 16))(v51+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v50, v47, v48);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    v44 = (void (*)(char *, uint64_t))v45[1];
    goto LABEL_13;
  }
  v52 = v24;
  if (one-time initialization token for search != -1)
    swift_once();
  v53 = type metadata accessor for Logger();
  __swift_project_value_buffer(v53, (uint64_t)static Logging.search);
  v54 = v71;
  v29(v71, v31, v24);
  v55 = Logger.logObject.getter();
  v56 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v76 = (uint64_t)v31;
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    v74 = v45;
    v75 = v58;
    v78 = v58;
    *(_DWORD *)v57 = 136315138;
    v73 = (uint64_t)(v57 + 4);
    v29(v66, v54, v52);
    v59 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, &v78);
    v77 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v62 = (void (*)(char *, uint64_t))v74[1];
    v62(v54, v52);
    _os_log_impl(&dword_24315F000, v55, v56, "PegasusResult skipping component %s", v57, 0xCu);
    v63 = v75;
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v63, -1, -1);
    MEMORY[0x2494F6D70](v57, -1, -1);

    v64 = v76;
  }
  else
  {

    v62 = (void (*)(char *, uint64_t))v45[1];
    v62(v54, v52);
    v64 = (uint64_t)v31;
  }
  v62((char *)v64, v52);
  v62(v21, v52);
}

uint64_t GlobalSearchResponseProcessor.PegasusComponents.domainObjectComponents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GlobalSearchResponseProcessor.PegasusComponents.dialogs.getter()
{
  return swift_bridgeObjectRetain();
}

void @nonobjc _SFPBCard.init(data:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  Class isa;

  if (a2 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a1, a2);
  }
  objc_msgSend(v2, sel_initWithData_, isa);

  OUTLINED_FUNCTION_12();
}

void specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_8_2();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = a1;
    OUTLINED_FUNCTION_56_1();
  }
}

{
  specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (_:_:_:));
}

{
  specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (offset: Int, element: Float));
}

{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_8_2();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
      *(_QWORD *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = a1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
    OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_56_1();
  }
}

{
  specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (String, [String]));
}

{
  specialized static Array._allocateUninitialized(_:)(a1, &demangling cache variable for type metadata for (String, CSSearchableItem));
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for SearchResult);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for Photo);
}

uint64_t outlined consume of GlobalSearchResponseProcessor.PegasusComponents?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t partial apply for closure #2 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in static GlobalSearchResponseProcessor.makeCard(layoutSnippet:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_12_2();
    result = OUTLINED_FUNCTION_8_2();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    a2(0);
    return v4;
  }
  return result;
}

void specialized static Array._allocateUninitialized(_:)(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_8_2();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = a1;
    }
    OUTLINED_FUNCTION_56_1();
  }
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2494F6CA4](a3, v5), a1);
  }
  OUTLINED_FUNCTION_5();
}

void type metadata accessor for GlobalSearchResponseProcessor()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for GlobalSearchResponseProcessor.PegasusComponents()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void initializeBufferWithCopyOfBuffer for GlobalSearchResponseProcessor.PegasusComponents(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_12();
}

_QWORD *assignWithCopy for GlobalSearchResponseProcessor.PegasusComponents(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GlobalSearchResponseProcessor.PegasusComponents(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalSearchResponseProcessor.PegasusComponents(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalSearchResponseProcessor.PegasusComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for GlobalSearchResponseProcessor.PegasusComponents()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t outlined init with copy of IMSPIMessageProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void outlined init with take of URL?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_70_1(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_5();
}

void outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_70_1(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_5();
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined consume of Data._Representation(a1, a2);
  return a1;
}

void outlined destroy of KGDocument()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_92_0();
  v2 = v1(v0);
  OUTLINED_FUNCTION_45(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_4_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_13_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return 0;
}

void OUTLINED_FUNCTION_19_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_22_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 128) + 8))(v0, *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return type metadata accessor for Apple_Parsec_Siri_V2alpha_LayoutSnippetComponent();
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return type metadata accessor for Searchfoundation_Card();
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_41_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return type metadata accessor for Searchfoundation_Card();
}

uint64_t OUTLINED_FUNCTION_44_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(*(_QWORD *)(v1 - 200), v0);
}

void OUTLINED_FUNCTION_46_1()
{
  void *v0;

}

void OUTLINED_FUNCTION_47_1()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return 0;
}

void OUTLINED_FUNCTION_51_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_54_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 376) = v0;
}

void OUTLINED_FUNCTION_55_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 336) = 0;
  *(_QWORD *)(v0 - 352) = 0;
  *(_QWORD *)(v0 - 344) = 0;
}

uint64_t OUTLINED_FUNCTION_57_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_59_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return Searchfoundation_CardSection.value.getter();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_68_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_69_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_70_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_73_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[6], v0[9]);
}

uint64_t OUTLINED_FUNCTION_75_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

BOOL OUTLINED_FUNCTION_77_1@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_78_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of SearchResult?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for Searchfoundation_CardSectionType();
}

uint64_t OUTLINED_FUNCTION_81_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for Searchfoundation_URL();
}

uint64_t OUTLINED_FUNCTION_82_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for Searchfoundation_CardSectionValue();
}

void OUTLINED_FUNCTION_84_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_85_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_88_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void OUTLINED_FUNCTION_89_1(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of SearchResult?(a1, v1);
}

id OUTLINED_FUNCTION_90_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return 0;
}

void OUTLINED_FUNCTION_93_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_94_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_97_0()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return URL.init(string:)();
}

void OUTLINED_FUNCTION_99_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of SearchResult?(v2, a2);
}

void OUTLINED_FUNCTION_100_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  outlined init with take of URL?(a1, v1, v2);
}

void OUTLINED_FUNCTION_101_0(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of SearchResult?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  return type metadata accessor for Mapspb_LocalSearchBusiness();
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(__int128 *);
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(__int128 *);
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  uint64_t v28;

  v4 = a3;
  v5 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = (uint64_t (*)(__int128 *))result;
    v9 = 0;
    v10 = a3 + 32;
    v22 = (uint64_t (*)(__int128 *))result;
    v23 = a3;
    v21 = v6;
    while (v9 < *(_QWORD *)(v4 + 16))
    {
      outlined init with copy of IMSPIMessageProtocol(v10, (uint64_t)v27);
      v5 = a2;
      v11 = v8(v27);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if ((v11 & 1) != 0)
      {
        outlined init with take of SageSearchClient(v27, (uint64_t)v24);
        v12 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v12 = v28;
        }
        v13 = *(_QWORD *)(v12 + 16);
        if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v14 = v25;
        v15 = v26;
        v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
        MEMORY[0x24BDAC7A8](v16);
        v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v19 + 16))(v18);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, (uint64_t)v18, &v28, v14, v15);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        v8 = v22;
        v4 = v23;
        v6 = v21;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        v5 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void IMSPIMessageWrapper.guid.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5();
}

void IMSPIMessageWrapper.guid.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*IMSPIMessageWrapper.guid.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void IMSPIMessageWrapper.body.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5();
}

void IMSPIMessageWrapper.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*IMSPIMessageWrapper.body.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t IMSPIMessageWrapper.init(message:)(void *a1)
{
  uint64_t v2;
  id v3;
  void *v4;

  v2 = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(a1);
  v3 = objc_msgSend(a1, sel_body);
  if (v3)
  {
    v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return v2;
}

uint64_t protocol witness for IMSPIMessageProtocol.guid.setter in conformance IMSPIMessageWrapper(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*protocol witness for IMSPIMessageProtocol.guid.modify in conformance IMSPIMessageWrapper())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t protocol witness for IMSPIMessageProtocol.body.getter in conformance IMSPIMessageWrapper()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for IMSPIMessageProtocol.body.setter in conformance IMSPIMessageWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*protocol witness for IMSPIMessageProtocol.body.modify in conformance IMSPIMessageWrapper())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t static MessageBodyManager.retrieveMessages(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[13] = a1;
  v2 = type metadata accessor for OSSignpostError();
  v1[14] = v2;
  v1[15] = *(_QWORD *)(v2 - 8);
  v1[16] = OUTLINED_FUNCTION_17();
  v1[17] = OUTLINED_FUNCTION_17();
  v3 = type metadata accessor for OSSignpostID();
  v1[18] = v3;
  v1[19] = *(_QWORD *)(v3 - 8);
  v1[20] = OUTLINED_FUNCTION_17();
  v1[21] = OUTLINED_FUNCTION_17();
  v1[22] = OUTLINED_FUNCTION_17();
  v1[23] = OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_14();
}

uint64_t static MessageBodyManager.retrieveMessages(for:)()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = type metadata accessor for OSSignposter();
  v0[24] = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  v3 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v5 = OUTLINED_FUNCTION_55_1(v4);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v3, v5, "MessageBodyManager.retrieveMessages", "", v4);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = v0[22];
  v7 = v0[23];
  v8 = v0[18];
  v9 = v0[19];
  v10 = v0[13];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v0[25] = OSSignpostIntervalState.init(id:isOpen:)();
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[26] = v11;
  v11(v7, v8);
  v12 = swift_task_alloc();
  v0[27] = v12;
  *(_QWORD *)(v12 + 16) = v10;
  v13 = (_QWORD *)swift_task_alloc();
  v0[28] = v13;
  v0[29] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [IMSPIMessage]?);
  *v13 = v0;
  v13[1] = static MessageBodyManager.retrieveMessages(for:);
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_14();
}

void static MessageBodyManager.retrieveMessages(for:)()
{
  uint64_t v0;
  os_log_type_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_signpost_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  os_signpost_id_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_signpost_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint8_t *v60;
  os_signpost_id_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v2 = *(_QWORD *)(v0 + 80);
  if (!v2)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v15, (uint64_t)static Logging.search);
    v16 = OUTLINED_FUNCTION_50_2();
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v71 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v18 = 136315394;
      OUTLINED_FUNCTION_21_2((uint64_t)"retrieveMessages(for:)", v65, v67, v69, v0 + 72);
      *(_QWORD *)(v0 + 56) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2080;
      *(_QWORD *)(v0 + 64) = 0;
      v20 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v71);
      *(_QWORD *)(v0 + 72) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17_2(&dword_24315F000, v16, v17, "%s Nothing returned from IMSPIQueryMessagesWithGUIDsAndQOS: %s", (uint8_t *)v18);
      OUTLINED_FUNCTION_15_1();
      specialized UnsafeMutablePointer.deallocate()();
    }

    v23 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    v24 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v26 = *(_QWORD *)(v0 + 120);
      v25 = *(_QWORD *)(v0 + 128);
      v27 = *(_QWORD *)(v0 + 112);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v25, v27) == *MEMORY[0x24BEE7810])
      {
        v28 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 120));
        v28 = "";
      }
      v49 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v50 = OUTLINED_FUNCTION_55_1(v49);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v23, v24, v50, "MessageBodyManager.retrieveMessages", v28, v49);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v51 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v52 = *(_QWORD *)(v0 + 160);
    v53 = *(_QWORD *)(v0 + 144);

    v51(v52, v53);
    v31 = 0;
    goto LABEL_38;
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_13();
  v4 = __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v5 = OUTLINED_FUNCTION_51_2();
  v70 = v2;
  if (OUTLINED_FUNCTION_33_1(v5))
  {
    v6 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v71 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v6 = 136315394;
    OUTLINED_FUNCTION_21_2((uint64_t)"retrieveMessages(for:)", v65, v67, v69, v2);
    *(_QWORD *)(v0 + 88) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for IMSPIMessage);
    v9 = v8;
    v10 = OUTLINED_FUNCTION_35_1();
    v11 = MEMORY[0x2494F5E4C](v10, v9);
    v13 = v12;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v71);
    *(_QWORD *)(v0 + 96) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_17_2(&dword_24315F000, v4, v1, "%s Returned from IMSPIQueryMessagesWithGUIDsAndQOS: %s", (uint8_t *)v6);
    OUTLINED_FUNCTION_15_1();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();

  if (!(v2 >> 62))
  {
    v29 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_15;
LABEL_31:
    OUTLINED_FUNCTION_47_2();
    v31 = MEMORY[0x24BEE4AF8];
LABEL_32:
    v54 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    v55 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v56 = *(_QWORD *)(v0 + 136);
      v57 = *(_QWORD *)(v0 + 112);
      v58 = *(_QWORD *)(v0 + 120);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v58 + 88))(v56, v57) == *MEMORY[0x24BEE7810])
      {
        v59 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 120));
        v59 = "";
      }
      v60 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v61 = OUTLINED_FUNCTION_55_1(v60);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v54, v55, v61, "MessageBodyManager.retrieveMessages", v59, v60);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v62 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v63 = *(_QWORD *)(v0 + 168);
    v64 = *(_QWORD *)(v0 + 144);

    v62(v63, v64);
LABEL_38:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v31);
    return;
  }
  OUTLINED_FUNCTION_35_1();
  v29 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_47_2();
  if (!v29)
    goto LABEL_31;
LABEL_15:
  v71 = MEMORY[0x24BEE4AF8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = 0;
    v68 = v0 + 16;
    v31 = v71;
    v66 = v2 & 0xC000000000000001;
    do
    {
      if (v66)
        v32 = (id)MEMORY[0x2494F62E4](v30, v2);
      else
        v32 = *(id *)(v2 + 8 * v30 + 32);
      v33 = v32;
      v34 = outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(v32);
      v36 = v35;
      v37 = objc_msgSend(v33, sel_body);
      if (v37)
      {
        v38 = v37;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v41 = v40;

      }
      else
      {
        v39 = 0;
        v41 = 0;
      }
      *(_QWORD *)(v0 + 40) = &type metadata for IMSPIMessageWrapper;
      *(_QWORD *)(v0 + 48) = &protocol witness table for IMSPIMessageWrapper;
      v42 = (_QWORD *)swift_allocObject();
      *(_QWORD *)(v0 + 16) = v42;

      v42[2] = v34;
      v42[3] = v36;
      v42[4] = v39;
      v42[5] = v41;
      v71 = v31;
      v43 = *(_QWORD *)(v31 + 16);
      if (v43 >= *(_QWORD *)(v31 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v30;
      v45 = *(_QWORD *)(v0 + 40);
      v44 = *(_QWORD *)(v0 + 48);
      v46 = __swift_mutable_project_boxed_opaque_existential_1(v68, v45);
      v47 = *(_QWORD *)(v45 - 8);
      v48 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v46, v45);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v48, &v71, v45, v44);
      __swift_destroy_boxed_opaque_existential_1(v68);
      swift_task_dealloc();
      v2 = v70;
      v31 = v71;
    }
    while (v29 != v30);
    OUTLINED_FUNCTION_47_2();
    goto LABEL_32;
  }
  __break(1u);
}

void closure #1 in static MessageBodyManager.retrieveMessages(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  Class v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v20 = a1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[IMSPIMessage]?, Never>);
  v1 = *(_QWORD *)(v19 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  MEMORY[0x24BDAC7A8](v19);
  v3 = type metadata accessor for DispatchQoS.QoSClass();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  static DispatchQoS.userInitiated.getter();
  DispatchQoS.qosClass.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  DispatchQoS.QoSClass.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v19);
  v13 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v14 + v13, (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = partial apply for closure #1 in closure #1 in static MessageBodyManager.retrieveMessages(for:);
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ();
  aBlock[3] = &block_descriptor;
  v15 = _Block_copy(aBlock);
  swift_release();
  v16 = isa;
  IMSPIQueryMessagesWithGUIDsAndQOS();

  _Block_release(v15);
}

uint64_t closure #1 in closure #1 in static MessageBodyManager.retrieveMessages(for:)(uint64_t a1)
{
  if (a1)
    specialized _arrayConditionalCast<A, B>(_:)(a1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[IMSPIMessage]?, Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static MessageBodyManager.hydrateMessageBody(origMessages:spiMessages:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  uint64_t (*v52)(uint64_t);
  os_log_type_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (**v86)(uint64_t);
  os_log_type_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  BOOL v92;
  uint64_t *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  os_log_type_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  NSObject *v184;
  os_log_type_t v185;
  uint8_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t (*v193)(uint64_t, uint64_t (*)(uint64_t));
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  NSObject *v198;
  uint64_t v199;
  __int128 v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  __int128 *v206;
  uint64_t *v207;
  __int128 v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  char *v215;
  __int128 v216;
  uint64_t v217;
  uint64_t (*v218)(uint64_t);
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t (*v225)(uint64_t);
  int *v226;
  uint64_t v227;
  uint64_t *v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t (*v234)(uint64_t);
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t (*v242)(uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MobileSMSDocument?);
  MEMORY[0x24BDAC7A8](v4);
  v225 = (uint64_t (*)(uint64_t))((char *)&v190 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for MobileSMSDocument(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v190 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (uint64_t *)((char *)&v190 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v190 - v17);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v190 - v20);
  v22 = type metadata accessor for SearchResult(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v232 = (uint64_t)&v190 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_31_0();
  v234 = (uint64_t (*)(uint64_t))v26;
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  v31 = MEMORY[0x24BDAC7A8](v30);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_9_2();
  v35 = MEMORY[0x24BDAC7A8](v34);
  v233 = (uint64_t)&v190 - v37;
  v222 = a2;
  if (a2)
  {
    v204 = v36;
    v201 = v35;
    v214 = v18;
    v207 = v15;
    if (one-time initialization token for search != -1)
      swift_once();
    v38 = OUTLINED_FUNCTION_13();
    v231 = __swift_project_value_buffer(v38, (uint64_t)static Logging.search);
    v39 = OUTLINED_FUNCTION_50_2();
    v40 = static os_log_type_t.debug.getter();
    v41 = OUTLINED_FUNCTION_10_3(v40);
    v226 = (int *)v6;
    v202 = v9;
    v205 = (uint64_t *)v12;
    v228 = v21;
    if (v41)
    {
      v42 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v43 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v240 = v43;
      *(_DWORD *)v42 = 136315138;
      OUTLINED_FUNCTION_6_3(v43, 0x800000024335B5B0, &v240);
      OUTLINED_FUNCTION_54_2(v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v39, (os_log_type_t)v18, "%s Iterate each message and optionally create new MobileSMSDocument if body is different", v42);
      OUTLINED_FUNCTION_34_2();
      specialized UnsafeMutablePointer.deallocate()();
    }

    v45 = v233;
    v46 = v234;
    v47 = *(_QWORD *)(a1 + 16);
    if (!v47)
      return MEMORY[0x24BEE4AF8];
    v48 = a1;
    v229 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v49 = a1 + v229;
    v50 = *(_QWORD *)(v23 + 72);
    v206 = &v237;
    v215 = (char *)&v237 + 8;
    v203 = v48;
    swift_bridgeObjectRetain();
    v227 = 0;
    v235 = MEMORY[0x24BEE4AF8];
    v223 = (unint64_t)"retrieveMessages(for:)";
    v210 = 0x800000024335B5B0;
    *(_QWORD *)&v51 = 136315138;
    v216 = v51;
    v209 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v51 = 136315394;
    v221 = v51;
    *(_QWORD *)&v51 = 136315395;
    v200 = v51;
    *(_QWORD *)&v51 = 136315650;
    v208 = v51;
    v52 = v225;
    v230 = v50;
    while (1)
    {
      _s10OmniSearch0B6ResultVWOcTm_0(v49, v45, type metadata accessor for SearchResult);
      v53 = v45;
      SearchResultItem.associatedValue.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
      v54 = v45;
      if (!swift_dynamicCast())
        break;
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v6);
      _s10OmniSearch0B6ResultVWObTm_0((uint64_t)v52, (uint64_t)v21, type metadata accessor for MobileSMSDocument);
      v54 = v21[7];
      if (!v54)
      {
        OUTLINED_FUNCTION_12_3();
        v82 = OUTLINED_FUNCTION_48_1();
        if (OUTLINED_FUNCTION_21(v82))
        {
          v83 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v240 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_DWORD *)v83 = v216;
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002DLL, v210, &v240);
          *(_QWORD *)(v83 + 4) = v84;
          OUTLINED_FUNCTION_29_2(&dword_24315F000, 0, v53, "%s Expected origMessage to have body. It's OK, will just preserve existing message", (uint8_t *)v83);
          swift_arrayDestroy();
          specialized UnsafeMutablePointer.deallocate()();
        }

        v45 = v233;
        _s10OmniSearch0B6ResultVWOcTm_0(v233, v224, type metadata accessor for SearchResult);
        if ((OUTLINED_FUNCTION_16_3() & 1) == 0)
        {
          OUTLINED_FUNCTION_1_3();
          v235 = v169;
        }
        OUTLINED_FUNCTION_7_4();
        if (v78)
        {
          OUTLINED_FUNCTION_3_2();
          v235 = v170;
        }
        OUTLINED_FUNCTION_5_4();
        v86 = (uint64_t (**)(uint64_t))&v245;
LABEL_56:
        OUTLINED_FUNCTION_43_1((uint64_t)*(v86 - 32), v85);
        OUTLINED_FUNCTION_42_2();
        v80 = (uint64_t)v21;
        v81 = type metadata accessor for MobileSMSDocument;
LABEL_57:
        _s10OmniSearch0B6ResultVWOhTm_1(v80, v81);
        goto LABEL_58;
      }
      v52 = (uint64_t (*)(uint64_t))&v190;
      v56 = v21[6];
      MEMORY[0x24BDAC7A8](v55);
      v58 = v57;
      *(&v190 - 2) = v57;
      OUTLINED_FUNCTION_64();
      v59 = v222;
      OUTLINED_FUNCTION_91_0();
      v60 = v59;
      v45 = v227;
      v61 = specialized _ArrayProtocol.filter(_:)((uint64_t)partial apply for closure #1 in static MessageBodyManager.hydrateMessageBody(origMessages:spiMessages:), (uint64_t)(&v190 - 4), v60);
      v46 = (uint64_t (*)(uint64_t))v61;
      v6 = *(_QWORD *)(v61 + 16);
      v227 = v45;
      if (v6 != 1)
      {
        if (v6)
        {
          OUTLINED_FUNCTION_6_1();
          v101 = v214;
          v52 = type metadata accessor for MobileSMSDocument;
          OUTLINED_FUNCTION_44_2(v58, (uint64_t)v214);
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_12_3();
          v102 = OUTLINED_FUNCTION_48_1();
          if (OUTLINED_FUNCTION_10_3(v102))
          {
            v103 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v104 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v213 = v104;
            v240 = v104;
            *(_DWORD *)v103 = v208;
            OUTLINED_FUNCTION_6_3(v104, v223 | 0x8000000000000000, &v240);
            OUTLINED_FUNCTION_27_2(v105);
            OUTLINED_FUNCTION_14_1();
            *(_WORD *)(v103 + 12) = 2048;
            OUTLINED_FUNCTION_96_0();
            *(_QWORD *)&v237 = v6;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_96_0();
            *(_WORD *)(v103 + 22) = 2080;
            v106 = *v101;
            v107 = v101[1];
            swift_bridgeObjectRetain();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v106, v107, &v240);
            *(_QWORD *)&v237 = v108;
            OUTLINED_FUNCTION_14_1();
            swift_bridgeObjectRelease();
            _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v101, type metadata accessor for MobileSMSDocument);
            _os_log_impl(&dword_24315F000, (os_log_t)v54, (os_log_type_t)v45, "%s Expected 1 match, but found %ld matches for id: %s. It's OK, will just preserve existing message", (uint8_t *)v103, 0x20u);
            OUTLINED_FUNCTION_15_1();
            specialized UnsafeMutablePointer.deallocate()();
          }
          OUTLINED_FUNCTION_102_0();
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v101, type metadata accessor for MobileSMSDocument);

          v110 = OUTLINED_FUNCTION_26_1();
          _s10OmniSearch0B6ResultVWOcTm_0(v110, v220, type metadata accessor for SearchResult);
          v111 = OUTLINED_FUNCTION_16_3();
          v21 = v228;
          v46 = v234;
          if ((v111 & 1) == 0)
          {
            OUTLINED_FUNCTION_1_3();
            v235 = v173;
          }
          OUTLINED_FUNCTION_7_4();
          if (v78)
          {
            OUTLINED_FUNCTION_3_2();
            v235 = v174;
          }
          OUTLINED_FUNCTION_5_4();
          v86 = (uint64_t (**)(uint64_t))&v244;
        }
        else
        {
          OUTLINED_FUNCTION_96_0();
          OUTLINED_FUNCTION_6_1();
          v21 = (uint64_t *)v58;
          v52 = v218;
          v46 = type metadata accessor for MobileSMSDocument;
          _s10OmniSearch0B6ResultVWOcTm_0(v58, (uint64_t)v218, type metadata accessor for MobileSMSDocument);
          OUTLINED_FUNCTION_12_3();
          v62 = OUTLINED_FUNCTION_48_1();
          if (OUTLINED_FUNCTION_10_3(v62))
          {
            v63 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v64 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v65 = (uint64_t)v52;
            v213 = v64;
            v240 = v64;
            *(_DWORD *)v63 = v221;
            OUTLINED_FUNCTION_6_3(v64, v223 | 0x8000000000000000, &v240);
            OUTLINED_FUNCTION_27_2(v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v63 + 12) = 2080;
            v68 = *(_QWORD *)v52;
            v67 = *((_QWORD *)v52 + 1);
            OUTLINED_FUNCTION_23_0();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v67, &v240);
            *(_QWORD *)&v237 = v69;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _s10OmniSearch0B6ResultVWOhTm_1(v65, type metadata accessor for MobileSMSDocument);
            OUTLINED_FUNCTION_17_2(&dword_24315F000, v54, (os_log_type_t)v45, "%s Expected matching spiMessages with id: %s. It's OK, will just preserve existing message", (uint8_t *)v63);
            OUTLINED_FUNCTION_15_1();
            specialized UnsafeMutablePointer.deallocate()();
          }
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v52, type metadata accessor for MobileSMSDocument);

          v109 = OUTLINED_FUNCTION_11_2();
          _s10OmniSearch0B6ResultVWOcTm_0(v109, v219, type metadata accessor for SearchResult);
          if ((OUTLINED_FUNCTION_16_3() & 1) == 0)
          {
            OUTLINED_FUNCTION_1_3();
            v235 = v171;
          }
          OUTLINED_FUNCTION_7_4();
          if (v78)
          {
            OUTLINED_FUNCTION_3_2();
            v235 = v172;
          }
          OUTLINED_FUNCTION_5_4();
          v86 = (uint64_t (**)(uint64_t))&v243;
        }
        goto LABEL_56;
      }
      v213 = v56;
      specialized Collection.first.getter(v61, (uint64_t)&v237);
      OUTLINED_FUNCTION_96_0();
      if (!v238)
      {
        OUTLINED_FUNCTION_6_1();
        outlined destroy of MobileSMSDocument?((uint64_t)&v237, &demangling cache variable for type metadata for IMSPIMessageProtocol?);
        OUTLINED_FUNCTION_12_3();
        v112 = OUTLINED_FUNCTION_48_1();
        v21 = (uint64_t *)v58;
        if (OUTLINED_FUNCTION_21(v112))
        {
          v113 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
          v114 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v240 = v114;
          *(_DWORD *)v113 = v216;
          OUTLINED_FUNCTION_6_3(v114, v223 | 0x8000000000000000, &v240);
          *(_QWORD *)&v237 = v115;
          OUTLINED_FUNCTION_36_2();
          OUTLINED_FUNCTION_29_2(&dword_24315F000, v54, (os_log_type_t)(&v190 - 4), "%s Expected to get first message. It's OK, will just preserve existing message", v113);
          OUTLINED_FUNCTION_34_2();
          specialized UnsafeMutablePointer.deallocate()();
        }

        v116 = OUTLINED_FUNCTION_11_2();
        _s10OmniSearch0B6ResultVWOcTm_0(v116, v217, type metadata accessor for SearchResult);
        if ((OUTLINED_FUNCTION_16_3() & 1) == 0)
        {
          OUTLINED_FUNCTION_1_3();
          v235 = v175;
        }
        OUTLINED_FUNCTION_7_4();
        if (v78)
        {
          OUTLINED_FUNCTION_3_2();
          v235 = v176;
        }
        OUTLINED_FUNCTION_5_4();
        v86 = &v242;
        goto LABEL_56;
      }
      outlined init with take of SageSearchClient(&v237, (uint64_t)&v240);
      v45 = v241;
      v52 = v242;
      v87 = __swift_project_boxed_opaque_existential_1(&v240, v241);
      v88 = (*((uint64_t (**)(uint64_t, uint64_t (*)(uint64_t)))v52 + 4))(v45, v52);
      v21 = (uint64_t *)v58;
      if (v89)
      {
        v90 = v88;
        v91 = v89;
        v92 = v88 == v213 && v89 == v54;
        v52 = type metadata accessor for MobileSMSDocument;
        if (!v92 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          v191 = v90;
          v125 = *(_QWORD *)(v58 + 8);
          v199 = *v21;
          v195 = v125;
          v126 = v21[3];
          v198 = v21[2];
          v194 = v126;
          v127 = v21[5];
          v197 = v21[4];
          v196 = v127;
          v128 = v241;
          v129 = v242;
          v192 = __swift_project_boxed_opaque_existential_1(&v240, v241);
          v193 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t)))*((_QWORD *)v129 + 4);
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_35_1();
          swift_bridgeObjectRetain();
          v193 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t)))v193(v128, v129);
          v131 = v130;
          v132 = v21[9];
          v192 = (_QWORD *)v21[8];
          v133 = v226;
          v134 = v205;
          outlined init with copy of Date?((uint64_t)v21 + v226[10], (uint64_t)v205 + v226[10], &demangling cache variable for type metadata for Date?);
          outlined init with copy of Date?((uint64_t)v21 + v133[11], (uint64_t)v134 + v133[11], &demangling cache variable for type metadata for URL?);
          outlined init with copy of Date?((uint64_t)v21 + v133[12], (uint64_t)v134 + v133[12], &demangling cache variable for type metadata for URL?);
          v135 = *(uint64_t *)((char *)v21 + v133[13]);
          v136 = (char *)v134 + v133[14];
          v137 = v195;
          *v134 = v199;
          v134[1] = v137;
          v138 = v194;
          v134[2] = (uint64_t)v198;
          v134[3] = v138;
          v139 = v196;
          v134[4] = v197;
          v134[5] = v139;
          v134[6] = (uint64_t)v193;
          v134[7] = v131;
          v6 = (uint64_t)v133;
          v134[8] = (uint64_t)v192;
          v134[9] = v132;
          *(uint64_t *)((char *)v134 + v133[13]) = v135;
          *(_OWORD *)v136 = 0u;
          *((_OWORD *)v136 + 1) = 0u;
          *((_QWORD *)v136 + 4) = 0;
          v140 = (uint64_t)v134;
          v141 = v204;
          _s10OmniSearch0B6ResultVWOcTm_0(v140, v204, type metadata accessor for MobileSMSDocument);
          type metadata accessor for SearchResultItem(0);
          swift_storeEnumTagMultiPayload();
          v142 = v201;
          v143 = (_QWORD *)(v141 + *(int *)(v201 + 24));
          *v143 = 0;
          v143[1] = 0;
          *(_QWORD *)(v141 + *(int *)(v142 + 20)) = 0;
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_35_1();
          OUTLINED_FUNCTION_23_0();
          if ((OUTLINED_FUNCTION_16_3() & 1) == 0)
          {
            OUTLINED_FUNCTION_1_3();
            v235 = v181;
          }
          v144 = (uint64_t)v202;
          v145 = *(_QWORD *)(v235 + 16);
          v146 = (uint64_t)v228;
          if (v145 >= *(_QWORD *)(v235 + 24) >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v235 = v182;
          }
          v147 = v235;
          *(_QWORD *)(v235 + 16) = v145 + 1;
          _s10OmniSearch0B6ResultVWObTm_0(v204, v147 + v229 + v145 * v230, type metadata accessor for SearchResult);
          OUTLINED_FUNCTION_44_2(v146, v144);
          v148 = OUTLINED_FUNCTION_12_3();
          v149 = static os_log_type_t.info.getter();
          v150 = v149;
          if (os_log_type_enabled(v148, v149))
          {
            v151 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v198 = v148;
            LODWORD(v199) = (_DWORD)v150;
            v152 = (uint64_t *)v144;
            v153 = v151;
            v154 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            OUTLINED_FUNCTION_53_2(v154);
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_8_3(v155);
            *(_WORD *)(v153 + 12) = 2080;
            v197 = v153 + 14;
            v157 = *v152;
            v156 = v152[1];
            OUTLINED_FUNCTION_23_0();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v157, v156, (uint64_t *)&v237);
            v236 = v158;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v152, type metadata accessor for MobileSMSDocument);
            OUTLINED_FUNCTION_17_2(&dword_24315F000, v198, (os_log_type_t)v199, "%s Replaced body of origMessage.id: %s", (uint8_t *)v153);
            OUTLINED_FUNCTION_15_1();
            specialized UnsafeMutablePointer.deallocate()();
          }
          OUTLINED_FUNCTION_45_1();

          OUTLINED_FUNCTION_91_0();
          OUTLINED_FUNCTION_12_3();
          v159 = OUTLINED_FUNCTION_51_2();
          if (os_log_type_enabled(v150, v159))
          {
            v160 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            v199 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            *(_QWORD *)&v237 = v199;
            *(_DWORD *)v160 = v200;
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_8_3(v161);
            *(_WORD *)(v160 + 12) = 2085;
            OUTLINED_FUNCTION_91_0();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v191, v91, (uint64_t *)&v237);
            v236 = v162;
            OUTLINED_FUNCTION_13_3();
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_17_2(&dword_24315F000, v150, v159, "%s retrievedMessageBody: %{sensitive}s", (uint8_t *)v160);
            OUTLINED_FUNCTION_15_1();
            specialized UnsafeMutablePointer.deallocate()();
          }

          OUTLINED_FUNCTION_102_0();
          OUTLINED_FUNCTION_64();
          OUTLINED_FUNCTION_12_3();
          v163 = OUTLINED_FUNCTION_51_2();
          if (OUTLINED_FUNCTION_33_1(v163))
          {
            v164 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            *(_QWORD *)&v237 = specialized static UnsafeMutablePointer.allocate(capacity:)();
            *(_DWORD *)v164 = v200;
            OUTLINED_FUNCTION_4_4();
            OUTLINED_FUNCTION_8_3(v165);
            *(_WORD *)(v164 + 12) = 2085;
            OUTLINED_FUNCTION_64();
            getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v213, v54, (uint64_t *)&v237);
            v236 = v166;
            OUTLINED_FUNCTION_13_3();
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_17_2(&dword_24315F000, v150, (os_log_type_t)v144, "%s origMessageBody: %{sensitive}s", (uint8_t *)v164);
            OUTLINED_FUNCTION_15_1();
            specialized UnsafeMutablePointer.deallocate()();
          }
          OUTLINED_FUNCTION_102_0();

          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v205, type metadata accessor for MobileSMSDocument);
          v45 = v233;
          _s10OmniSearch0B6ResultVWOhTm_1(v233, type metadata accessor for SearchResult);
          v52 = v225;
          v21 = v228;
          v46 = v234;
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v228, type metadata accessor for MobileSMSDocument);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
          v54 = v230;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_6_1();
        v93 = v207;
        OUTLINED_FUNCTION_44_2(v58, (uint64_t)v207);
        v94 = OUTLINED_FUNCTION_12_3();
        v95 = static os_log_type_t.info.getter();
        v45 = v95;
        if (os_log_type_enabled(v94, v95))
        {
          v96 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v213 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_QWORD *)&v237 = v213;
          *(_DWORD *)v96 = v221;
          OUTLINED_FUNCTION_4_4();
          v236 = v97;
          OUTLINED_FUNCTION_14_1();
          *(_WORD *)(v96 + 12) = 2080;
          v98 = *v93;
          v99 = v93[1];
          swift_bridgeObjectRetain();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)&v237);
          v236 = v100;
          OUTLINED_FUNCTION_14_1();
          swift_bridgeObjectRelease();
          _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v93, type metadata accessor for MobileSMSDocument);
          OUTLINED_FUNCTION_17_2(&dword_24315F000, v94, (os_log_type_t)v45, "%s Message body already identical, no need to replace it. id: %s", (uint8_t *)v96);
          OUTLINED_FUNCTION_15_1();
          specialized UnsafeMutablePointer.deallocate()();
        }
        OUTLINED_FUNCTION_45_1();

        v123 = OUTLINED_FUNCTION_26_1();
        _s10OmniSearch0B6ResultVWOcTm_0(v123, v212, type metadata accessor for SearchResult);
        v124 = OUTLINED_FUNCTION_16_3();
        v46 = v234;
        if ((v124 & 1) == 0)
        {
          OUTLINED_FUNCTION_1_3();
          v235 = v177;
        }
        OUTLINED_FUNCTION_7_4();
        if (v78)
        {
          OUTLINED_FUNCTION_3_2();
          v235 = v178;
        }
        OUTLINED_FUNCTION_5_4();
        v122 = (uint64_t *)&v239;
      }
      else
      {
        OUTLINED_FUNCTION_6_1();
        OUTLINED_FUNCTION_12_3();
        v117 = OUTLINED_FUNCTION_48_1();
        if (OUTLINED_FUNCTION_21(v117))
        {
          v118 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_QWORD *)&v237 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_DWORD *)v118 = v216;
          OUTLINED_FUNCTION_4_4();
          v236 = v119;
          OUTLINED_FUNCTION_36_2();
          OUTLINED_FUNCTION_29_2(&dword_24315F000, v54, v87, "%s Expected retrievedMessage to have body. It's OK, will just preserve existing message", v118);
          OUTLINED_FUNCTION_34_2();
          specialized UnsafeMutablePointer.deallocate()();
        }

        v120 = OUTLINED_FUNCTION_11_2();
        _s10OmniSearch0B6ResultVWOcTm_0(v120, v211, type metadata accessor for SearchResult);
        if ((OUTLINED_FUNCTION_16_3() & 1) == 0)
        {
          OUTLINED_FUNCTION_1_3();
          v235 = v179;
        }
        OUTLINED_FUNCTION_7_4();
        if (v78)
        {
          OUTLINED_FUNCTION_3_2();
          v235 = v180;
        }
        OUTLINED_FUNCTION_5_4();
        v122 = &v238;
      }
      OUTLINED_FUNCTION_43_1(*(v122 - 32), v121);
      OUTLINED_FUNCTION_42_2();
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v21, type metadata accessor for MobileSMSDocument);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
LABEL_58:
      v49 += v54;
      if (!--v47)
      {
        swift_bridgeObjectRelease();
        return v235;
      }
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 1, 1, v6);
    outlined destroy of MobileSMSDocument?((uint64_t)v52, &demangling cache variable for type metadata for MobileSMSDocument?);
    _s10OmniSearch0B6ResultVWOcTm_0(v45, (uint64_t)v46, type metadata accessor for SearchResult);
    OUTLINED_FUNCTION_12_3();
    v70 = OUTLINED_FUNCTION_48_1();
    if (os_log_type_enabled((os_log_t)v45, v70))
    {
      v71 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v72 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_53_2(v72);
      OUTLINED_FUNCTION_4_4();
      *(_QWORD *)(v71 + 4) = v73;
      *(_WORD *)(v71 + 12) = 2080;
      SearchResultItem.associatedValue.getter();
      v74 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, (uint64_t *)&v237);
      *(_QWORD *)(v71 + 14) = v76;
      swift_bridgeObjectRelease();
      _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v234, type metadata accessor for SearchResult);
      OUTLINED_FUNCTION_17_2(&dword_24315F000, v45, v70, "%s Expected item to be of type MobileSMSDocument, but got -> %s. It's OK, will just preserve existing message", (uint8_t *)v71);
      OUTLINED_FUNCTION_15_1();
      specialized UnsafeMutablePointer.deallocate()();
    }
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v46, type metadata accessor for SearchResult);

    v45 = v233;
    _s10OmniSearch0B6ResultVWOcTm_0(v233, v232, type metadata accessor for SearchResult);
    v77 = OUTLINED_FUNCTION_16_3();
    v21 = v228;
    if ((v77 & 1) == 0)
    {
      OUTLINED_FUNCTION_1_3();
      v235 = v167;
    }
    OUTLINED_FUNCTION_7_4();
    if (v78)
    {
      OUTLINED_FUNCTION_3_2();
      v235 = v168;
    }
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_43_1(v232, v79);
    v80 = v45;
    v81 = type metadata accessor for SearchResult;
    goto LABEL_57;
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v183 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v183, (uint64_t)static Logging.search);
  v184 = OUTLINED_FUNCTION_50_2();
  v185 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_10_3(v185))
  {
    v186 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v187 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v240 = v187;
    *(_DWORD *)v186 = 136315138;
    OUTLINED_FUNCTION_6_3(v187, 0x800000024335B5B0, &v240);
    OUTLINED_FUNCTION_54_2(v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v184, (os_log_type_t)v18, "%s Didn't get any messages back from IMSPIQueryMessagesWithGUIDsAndQOS, returning orig list as-is", v186);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRetain();
  return a1;
}

uint64_t closure #1 in static MessageBodyManager.hydrateMessageBody(origMessages:spiMessages:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v6)
  {
    if (v5 == *a2 && v6 == a2[1])
      v8 = 1;
    else
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t outlined bridged method (pb) of @objc IMSPIMessage.guid.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_guid);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void partial apply for closure #1 in static MessageBodyManager.retrieveMessages(for:)(uint64_t a1)
{
  closure #1 in static MessageBodyManager.retrieveMessages(for:)(a1);
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return outlined init with take of SageSearchClient(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_24317D6C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void _s10OmniSearch0B6ResultVWObTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_76(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_5();
}

void _s10OmniSearch0B6ResultVWOhTm_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_31_2(v2);
  OUTLINED_FUNCTION_5();
}

uint64_t partial apply for closure #1 in static MessageBodyManager.hydrateMessageBody(origMessages:spiMessages:)(_QWORD *a1)
{
  uint64_t v1;

  return closure #1 in static MessageBodyManager.hydrateMessageBody(origMessages:spiMessages:)(a1, *(_QWORD **)(v1 + 16)) & 1;
}

void outlined destroy of MobileSMSDocument?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_31_2(v2);
  OUTLINED_FUNCTION_5();
}

void outlined init with copy of Date?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_23_3(v3);
  OUTLINED_FUNCTION_5();
}

void _s10OmniSearch0B6ResultVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_76(a1, a2, a3);
  OUTLINED_FUNCTION_23_3(v3);
  OUTLINED_FUNCTION_5();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.guid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.guid.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.guid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.body.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of IMSPIMessageProtocol.body.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t initializeBufferWithCopyOfBuffer for IMSPIMessageWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for IMSPIMessageWrapper()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IMSPIMessageWrapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IMSPIMessageWrapper(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for IMSPIMessageWrapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IMSPIMessageWrapper(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMSPIMessageWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IMSPIMessageWrapper()
{
  return &type metadata for IMSPIMessageWrapper;
}

ValueMetadata *type metadata accessor for MessageBodyManager()
{
  return &type metadata for MessageBodyManager;
}

void type metadata accessor for IMSPIMessage(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t sub_24317DA5C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[IMSPIMessage]?, Never>);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 - 8));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in static MessageBodyManager.retrieveMessages(for:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[IMSPIMessage]?, Never>);
  return closure #1 in closure #1 in static MessageBodyManager.retrieveMessages(for:)(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void OUTLINED_FUNCTION_1_3()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_3_2()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_4_4()
{
  uint64_t v0;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002DLL, *(_QWORD *)(v0 - 288) | 0x8000000000000000, (uint64_t *)(v0 - 176));
}

void OUTLINED_FUNCTION_5_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 - 192) + 16) = v0;
}

void OUTLINED_FUNCTION_6_3(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002DLL, a2, a3);
}

uint64_t OUTLINED_FUNCTION_8_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_9_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

BOOL OUTLINED_FUNCTION_10_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_17_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_21_2(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_23_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_27_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return v1 - 176;
}

void OUTLINED_FUNCTION_29_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_31_2(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

BOOL OUTLINED_FUNCTION_33_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_40@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

void OUTLINED_FUNCTION_42_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_1(v1, v0);
}

void OUTLINED_FUNCTION_43_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s10OmniSearch0B6ResultVWObTm_0(a1, a2, v2);
}

void OUTLINED_FUNCTION_44_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s10OmniSearch0B6ResultVWOcTm_0(a1, a2, v2);
}

void OUTLINED_FUNCTION_45_1()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return static os_log_type_t.debug.getter();
}

void OUTLINED_FUNCTION_52_2(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 2u);
}

__n128 OUTLINED_FUNCTION_53_2(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 176) = a1;
  result = *(__n128 *)(v2 - 320);
  *v1 = result.n128_u32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_54_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t OUTLINED_FUNCTION_55_1(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t one-time initialization function for searchToolExportedExperiences()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = OUTLINED_FUNCTION_0_4();
  __swift_allocate_value_buffer(v3, static UTType.searchToolExportedExperiences);
  __swift_project_value_buffer(v3, (uint64_t)static UTType.searchToolExportedExperiences);
  static UTType.data.getter();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v3);
  return UTType.init(exportedAs:conformingTo:)();
}

uint64_t UTType.searchToolExportedExperiences.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for searchToolExportedExperiences != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  return __swift_project_value_buffer(v0, (uint64_t)static UTType.searchToolExportedExperiences);
}

void static UTType.searchToolExportedExperiences.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for searchToolExportedExperiences != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_0_4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static UTType.searchToolExportedExperiences);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static UTType.searchToolExportedExperiences.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for searchToolExportedExperiences != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_0_4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static UTType.searchToolExportedExperiences);
  OUTLINED_FUNCTION_2_4();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static UTType.searchToolExportedExperiences.modify())()
{
  uint64_t v0;

  if (one-time initialization token for searchToolExportedExperiences != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  __swift_project_value_buffer(v0, (uint64_t)static UTType.searchToolExportedExperiences);
  OUTLINED_FUNCTION_2_4();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return type metadata accessor for UTType();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return swift_beginAccess();
}

uint64_t one-time initialization function for typeDisplayRepresentation()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchNLGEntity.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchNLGEntity.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchAppEntity.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchSpotlightEntity.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static EntityMatch.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchContext.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchContext.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchAnswerEntity.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchAnswerEntity.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static MemoryCreationQUResult.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static MemoryCreationQUResult.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchToolLLMQUResult.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchToolLLMQUResult.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TypeDisplayRepresentation();
  __swift_allocate_value_buffer(v4, static SearchEntity.typeDisplayRepresentation);
  __swift_project_value_buffer(v4, (uint64_t)static SearchEntity.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

void static SearchNLGEntity.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchNLGEntity.typeDisplayRepresentation);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchNLGEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchNLGEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static SearchNLGEntity.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static SearchNLGEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t SearchNLGEntity.displayRepresentation.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[20];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_63_1();
  v5 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  outlined init with copy of CustomStringConvertible?((uint64_t)(v0 + 14), (uint64_t)&v16, &demangling cache variable for type metadata for AppEntity?);
  if (v17)
  {
    outlined init with take of SageSearchClient(&v16, (uint64_t)v19);
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    dispatch thunk of InstanceDisplayRepresentable.displayRepresentation.getter();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v16, &demangling cache variable for type metadata for AppEntity?);
    if (one-time initialization token for search != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logging.search);
    outlined init with copy of SearchNLGEntity(v0, v19);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315138;
      outlined init with copy of SearchNLGEntity(v19, &v16);
      v12 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v18);
      *(_QWORD *)&v16 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of SearchNLGEntity((uint64_t)v19);
      _os_log_impl(&dword_24315F000, v9, v10, "Unexpected nil representedEntity for %s", v11, 0xCu);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }
    outlined destroy of SearchNLGEntity((uint64_t)v19);

    LocalizedStringResource.init(stringLiteral:)();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v5);
    v15 = type metadata accessor for DisplayRepresentation.Image();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v15);
    return DisplayRepresentation.init(title:subtitle:image:)();
  }
}

void SearchNLGEntity.init()()
{
  uint64_t v0;

  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_14_2();
}

void sub_24317E664(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E684(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]?>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E6BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_14_2();
}

void sub_24317E6DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_26_2();
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E700(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_23_4();
}

void sub_24317E734(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  OUTLINED_FUNCTION_10_4();
  OUTLINED_FUNCTION_14_2();
}

void sub_24317E74C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_10_4();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E764(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_26_2();
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E788(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_10_4();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E7A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_13_4();
}

void sub_24317E7B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_23_4();
}

void sub_24317E7CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 88) = a1;
  OUTLINED_FUNCTION_19_3();
  *(_QWORD *)(v1 + 96) = MEMORY[0x2494F42BC](v2);
  OUTLINED_FUNCTION_10_4();
  OUTLINED_FUNCTION_14_2();
}

double sub_24317E804(uint64_t a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)(v1 + 104) = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_QWORD *)(v1 + 144) = 0;
  return result;
}

void SearchNLGEntity.documentSource.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.documentSource.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.documentSource.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$documentSource.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.title.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.title.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.title.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$title.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchNLGEntity.sentFrom.getter()
{
  uint64_t v1;

  EntityProperty.wrappedValue.getter();
  return v1;
}

void key path setter for SearchNLGEntity.sentFrom : SearchNLGEntity()
{
  swift_bridgeObjectRetain();
  SearchNLGEntity.sentFrom.setter();
}

void SearchNLGEntity.sentFrom.setter()
{
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.sentFrom.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$sentFrom.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.answer.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.answer.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.answer.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$answer.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightNumber.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightNumber.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightNumber.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$flightNumber.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightDepartureDate.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightDepartureDate.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.flightDepartureDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$flightDepartureDate.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightDepartureAirportCode.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightDepartureAirportCode.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightDepartureAirportCode.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$flightDepartureAirportCode.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightArrivalAirportCode.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightArrivalAirportCode.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightArrivalAirportCode.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$flightArrivalAirportCode.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.flightCarrier.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightCarrier.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.flightCarrier.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$flightCarrier.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.name.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.name.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.name.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$name.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.address.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.address.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.address.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$address.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.startDate.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t key path setter for SearchNLGEntity.flightDepartureDate : SearchNLGEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_63_1();
  outlined init with copy of CustomStringConvertible?(a1, v5, &demangling cache variable for type metadata for DateComponents?);
  return a5(v5);
}

void SearchNLGEntity.startDate.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.startDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$startDate.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.endDate.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.endDate.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.endDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.$endDate.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.globalSearchSummary.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain();
  a5(v6, v7);
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.globalSearchSummary.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchNLGEntity.globalSearchSummary.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchNLGEntity.documentSource.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void SearchNLGEntity.$globalSearchSummary.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchNLGEntity.representedEntity.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of CustomStringConvertible?(v1 + 112, a1, &demangling cache variable for type metadata for AppEntity?);
}

uint64_t SearchNLGEntity.representedEntity.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of AppEntity?(a1, v1 + 112);
}

uint64_t (*SearchNLGEntity.representedEntity.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance SearchNLGEntity()
{
  lazy protocol witness table accessor for type SearchNLGEntity and conformance SearchNLGEntity();
  return static TransientAppEntity.defaultQuery.getter();
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchNLGEntity()
{
  lazy protocol witness table accessor for type SearchNLGEntity and conformance SearchNLGEntity();
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchNLGEntity()
{
  lazy protocol witness table accessor for type SearchNLGEntity and conformance SearchNLGEntity();
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchNLGEntity()
{
  lazy protocol witness table accessor for type SearchNLGEntity and conformance SearchNLGEntity();
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

_QWORD *outlined init with copy of SearchNLGEntity(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for SearchNLGEntity(a2, a1);
  return a2;
}

uint64_t outlined destroy of SearchNLGEntity(uint64_t a1)
{
  destroy for SearchNLGEntity(a1);
  return a1;
}

uint64_t outlined assign with take of AppEntity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type SearchNLGEntity and conformance SearchNLGEntity()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity;
  if (!lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchNLGEntity, &type metadata for SearchNLGEntity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchNLGEntity and conformance SearchNLGEntity);
  }
  return result;
}

void associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in SearchNLGEntity()
{
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<SearchNLGEntity> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<SearchNLGEntity>, MEMORY[0x24BDB4B08]);
}

uint64_t associated type witness table accessor for Identifiable.ID : EntityIdentifierConvertible in SearchNLGEntity()
{
  return MEMORY[0x24BDB65D8];
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchNLGEntity()
{
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchNLGEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SearchNLGEntity>, MEMORY[0x24BDB6250]);
}

void sub_24317F698()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.documentSource.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F6B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.documentSource.setter);
}

void sub_24317F6D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.title.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F6F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.title.setter);
}

void sub_24317F710()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchNLGEntity.sentFrom.getter();
  OUTLINED_FUNCTION_5();
}

void sub_24317F734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.answer.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F754(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.answer.setter);
}

void sub_24317F770()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.flightNumber.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F790(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.flightNumber.setter);
}

void sub_24317F7AC()
{
  SearchNLGEntity.flightDepartureDate.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t sub_24317F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchNLGEntity.flightDepartureDate : SearchNLGEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchNLGEntity.flightDepartureDate.setter);
}

void sub_24317F7E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.flightDepartureAirportCode.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F804(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.flightDepartureAirportCode.setter);
}

void sub_24317F820()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.flightArrivalAirportCode.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F840(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.flightArrivalAirportCode.setter);
}

void sub_24317F85C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.flightCarrier.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F87C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.flightCarrier.setter);
}

void sub_24317F898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.name.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F8B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.name.setter);
}

void sub_24317F8D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.address.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F8F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.address.setter);
}

void sub_24317F910()
{
  SearchNLGEntity.startDate.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t sub_24317F92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchNLGEntity.flightDepartureDate : SearchNLGEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchNLGEntity.startDate.setter);
}

void sub_24317F948()
{
  SearchNLGEntity.endDate.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t sub_24317F964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchNLGEntity.flightDepartureDate : SearchNLGEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchNLGEntity.endDate.setter);
}

void sub_24317F980()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchNLGEntity.globalSearchSummary.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24317F9A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchNLGEntity.globalSearchSummary.setter);
}

uint64_t dispatch thunk of SearchNLGEntityConvertible.asNLGEntity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for SearchNLGEntity(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 136))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  return result;
}

_QWORD *initializeWithCopy for SearchNLGEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v15 = a2 + 14;
  v16 = a1 + 14;
  v14 = a2[17];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v14)
  {
    v11 = a2[18];
    a1[17] = v14;
    a1[18] = v11;
    (**(void (***)(_QWORD *, _QWORD *))(v14 - 8))(v16, v15);
  }
  else
  {
    v12 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v15;
    *((_OWORD *)v16 + 1) = v12;
    v16[4] = v15[4];
  }
  return a1;
}

uint64_t assignWithCopy for SearchNLGEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 136);
  if (!*(_QWORD *)(a1 + 136))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 136) = v4;
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 112, a2 + 112);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 112);
    v6 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v5;
    *(_OWORD *)(a1 + 128) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy152_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for SearchNLGEntity(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  if (*(_QWORD *)(a1 + 136))
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchNLGEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchNLGEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchNLGEntity()
{
  return &type metadata for SearchNLGEntity;
}

void *OUTLINED_FUNCTION_0_5()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_8_4(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return EntityProperty.wrappedValue.getter();
}

void OUTLINED_FUNCTION_13_4()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_14_2()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_16_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  outlined init with copy of CustomStringConvertible?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_18_3()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of CustomStringConvertible?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_23_4()
{
  JUMPOUT(0x2494F42BCLL);
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return 0x746867696C46;
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

void static NSUserDefaults.globalSearchLocationLatitude.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (one-time initialization token for _globalSearchLocationLatitude != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_18_4(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_21_3(v8, v9, v10, v11);
  OUTLINED_FUNCTION_107();
}

void static NSUserDefaults.globalSearchLocationLongitude.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (one-time initialization token for _globalSearchLocationLongitude != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_18_4(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = specialized UserDefault.wrappedValue.getter();
  OUTLINED_FUNCTION_21_3(v8, v9, v10, v11);
  OUTLINED_FUNCTION_107();
}

void static NSUserDefaults.answerSynthesisLimit.getter()
{
  if (one-time initialization token for _answerSynthesisLimit != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisLimit);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

uint64_t specialized UserDefault.wrappedValue.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v1 = (void *)v0[4];
  v2 = (void *)MEMORY[0x2494F5BB8](v0[2], v0[3]);
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  if (swift_dynamicCast())
    v0 = v5;
  else
    *(_QWORD *)&v5[0] = 0;
  return *v0;
}

{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  __int128 v6;
  _OWORD v7[2];

  v1 = (void *)v0[4];
  v2 = (void *)MEMORY[0x2494F5BB8](v0[2], v0[3]);
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast() && *((_QWORD *)&v6 + 1))
    return v6;
  v4 = *v0;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t specialized UserDefault.wrappedValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)MEMORY[0x2494F5BB8](a2, a3);
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast())
    return v9;
  else
    return a1;
}

uint64_t specialized UserDefault.wrappedValue.getter(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)MEMORY[0x2494F5BB8](a2, a3);
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  if (swift_dynamicCast() && v9 != 2)
    a1 = v9 & 1;
  return a1 & 1;
}

uint64_t specialized UserDefault.wrappedValue.getter(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  __int128 v7;
  _OWORD v8[2];

  v4 = (void *)MEMORY[0x2494F5BB8]();
  v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  return swift_dynamicCast();
}

void static NSUserDefaults.answerSynthesisLimit.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisLimit);
}

void specialized UserDefault.wrappedValue.setter()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = (void *)v0[3];
  v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  v3 = (void *)MEMORY[0x2494F5BB8](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();

}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = (void *)v0[3];
  v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  v3 = (void *)MEMORY[0x2494F5BB8](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();

}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = (void *)v0[3];
  v2 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  v3 = (void *)MEMORY[0x2494F5BB8](v0[1], v0[2]);
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();

}

void specialized UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v3 = (void *)v2[4];
  swift_bridgeObjectRetain();
  v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  v5 = (void *)MEMORY[0x2494F5BB8](v2[2], v2[3]);
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void specialized UserDefault.wrappedValue.setter(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  v3 = (void *)v2[4];
  LOBYTE(v7) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  v5 = (void *)MEMORY[0x2494F5BB8](v2[2], v2[3]);
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5, a1, v7);
  swift_unknownObjectRelease();

}

void static NSUserDefaults.answerSynthesisLimit.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisLimit != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisLimit.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

{
  specialized UserDefault.wrappedValue.setter();
  return OUTLINED_FUNCTION_13_5();
}

double one-time initialization function for _answerSynthesisLimit()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 5;
  static NSUserDefaults._answerSynthesisLimit = xmmword_24334DED0;
  qword_257288DF0 = 0x800000024335B8A0;
  unk_257288DF8 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisLimit.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisLimit != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.answerSynthesisSearchResultsPerRequest.getter()
{
  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisSearchResultsPerRequest);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisSearchResultsPerRequest.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisSearchResultsPerRequest);
}

void static NSUserDefaults.answerSynthesisSearchResultsPerRequest.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisSearchResultsPerRequest.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisSearchResultsPerRequest()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 5;
  static NSUserDefaults._answerSynthesisSearchResultsPerRequest = xmmword_24334DEE0;
  qword_257288E10 = 0x800000024335B870;
  unk_257288E18 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisSearchResultsPerRequest.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisSearchResultsPerRequest != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

uint64_t static NSUserDefaults.answerSynthesisModelType.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (one-time initialization token for _answerSynthesisModelType != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v2[0] = static NSUserDefaults._answerSynthesisModelType;
  v2[1] = *(_OWORD *)&qword_257288E30;
  v3 = qword_257288E40;
  outlined retain of UserDefault<String>((uint64_t)v2);
  v0 = specialized UserDefault.wrappedValue.getter();
  outlined release of UserDefault<String>((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.answerSynthesisModelType.setter(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for _answerSynthesisModelType != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.setter(a1, a2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisModelType.modify(_QWORD *a1)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x50uLL);
  *a1 = v2;
  if (one-time initialization token for _answerSynthesisModelType != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v3 = *(_OWORD *)&qword_257288E30;
  *v2 = static NSUserDefaults._answerSynthesisModelType;
  v2[1] = v3;
  *((_QWORD *)v2 + 4) = qword_257288E40;
  *((_QWORD *)v2 + 8) = specialized UserDefault.wrappedValue.getter();
  *((_QWORD *)v2 + 9) = v4;
  OUTLINED_FUNCTION_5();
}

void static NSUserDefaults.answerSynthesisModelType.modify(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_26_3();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_26_3();
  }
  swift_endAccess();
  free(v2);
}

void one-time initialization function for _answerSynthesisModelType()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&static NSUserDefaults._answerSynthesisModelType = 0x726576726573;
  *((_QWORD *)&static NSUserDefaults._answerSynthesisModelType + 1) = 0xE600000000000000;
  qword_257288E30 = 0xD000000000000018;
  unk_257288E38 = 0x800000024335B850;
  qword_257288E40 = v0;
}

id static NSUserDefaults.$answerSynthesisModelType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (one-time initialization token for _answerSynthesisModelType != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v2 = *((_QWORD *)&static NSUserDefaults._answerSynthesisModelType + 1);
  v3 = qword_257288E30;
  v4 = unk_257288E38;
  v7 = (id)qword_257288E40;
  v5 = qword_257288E40;
  *a1 = static NSUserDefaults._answerSynthesisModelType;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

void static NSUserDefaults.answerSynthesisTokenLimitDevice.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisTokenLimitDevice);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisTokenLimitDevice.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitDevice);
}

void static NSUserDefaults.answerSynthesisTokenLimitDevice.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitDevice.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitDevice()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 2048;
  static NSUserDefaults._answerSynthesisTokenLimitDevice = xmmword_24334DEF0;
  qword_257288E58 = 0x800000024335B830;
  unk_257288E60 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitDevice.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisTokenLimitDevice != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.answerSynthesisTokenLimitServer.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisTokenLimitServer);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisTokenLimitServer.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitServer);
}

void static NSUserDefaults.answerSynthesisTokenLimitServer.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitServer.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitServer()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 4096;
  static NSUserDefaults._answerSynthesisTokenLimitServer = xmmword_24334DF00;
  qword_257288E78 = 0x800000024335B810;
  unk_257288E80 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitServer.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisTokenLimitServer != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisTokenLimitNonUserPrompt);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt);
}

void static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitNonUserPrompt()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 200;
  static NSUserDefaults._answerSynthesisTokenLimitNonUserPrompt = xmmword_24334DF10;
  qword_257288E98 = 0x800000024335B7E0;
  unk_257288EA0 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitNonUserPrompt.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisTokenLimitNonUserPrompt != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.answerSynthesisTokenLimitOutput.getter()
{
  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._answerSynthesisTokenLimitOutput);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.answerSynthesisTokenLimitOutput.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _answerSynthesisTokenLimitOutput);
}

void static NSUserDefaults.answerSynthesisTokenLimitOutput.modify(uint64_t a1)
{
  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.answerSynthesisTokenLimitOutput.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _answerSynthesisTokenLimitOutput()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 128;
  static NSUserDefaults._answerSynthesisTokenLimitOutput = xmmword_24334DF20;
  qword_257288EB8 = 0x800000024335B7C0;
  unk_257288EC0 = v1;
  return result;
}

id static NSUserDefaults.$answerSynthesisTokenLimitOutput.getter()
{
  void *v1;

  if (one-time initialization token for _answerSynthesisTokenLimitOutput != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.globalSearchLocationLatitude.setter(uint64_t a1, char a2)
{
  static NSUserDefaults.globalSearchLocationLatitude.setter(a1, a2, &one-time initialization token for _globalSearchLocationLatitude);
}

void static NSUserDefaults.globalSearchLocationLatitude.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;

  v1 = OUTLINED_FUNCTION_25_2();
  *v0 = v1;
  if (one-time initialization token for _globalSearchLocationLatitude != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v1[8] = OUTLINED_FUNCTION_19_4();
  *((_BYTE *)v1 + 72) = v2 & 1;
  OUTLINED_FUNCTION_5();
}

void static NSUserDefaults.globalSearchLocationLatitude.modify(uint64_t a1)
{
  static NSUserDefaults.globalSearchLocationLatitude.modify(a1);
}

{
  void *v1;

  v1 = *(void **)a1;
  specialized UserDefault.wrappedValue.setter(*(_QWORD *)(*(_QWORD *)a1 + 64), *(_BYTE *)(*(_QWORD *)a1 + 72));
  swift_endAccess();
  free(v1);
}

void one-time initialization function for _globalSearchLocationLatitude()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._globalSearchLocationLatitude = 0;
  byte_257288ED0 = 1;
  qword_257288ED8 = 0xD00000000000001CLL;
  unk_257288EE0 = 0x800000024335B8E0;
  qword_257288EE8 = v0;
}

uint64_t outlined retain of UserDefault<Double?>(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t outlined release of UserDefault<Double?>(uint64_t a1)
{

  swift_bridgeObjectRelease();
  return a1;
}

id static NSUserDefaults.$globalSearchLocationLatitude.getter()
{
  void *v1;

  if (one-time initialization token for _globalSearchLocationLatitude != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_16_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.globalSearchLocationLongitude.setter(uint64_t a1, char a2)
{
  static NSUserDefaults.globalSearchLocationLatitude.setter(a1, a2, &one-time initialization token for _globalSearchLocationLongitude);
}

void static NSUserDefaults.globalSearchLocationLatitude.setter(uint64_t a1, char a2, _QWORD *a3)
{
  if (*a3 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.setter(a1, a2 & 1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.globalSearchLocationLongitude.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;

  v1 = OUTLINED_FUNCTION_25_2();
  *v0 = v1;
  if (one-time initialization token for _globalSearchLocationLongitude != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v1[8] = OUTLINED_FUNCTION_19_4();
  *((_BYTE *)v1 + 72) = v2 & 1;
  OUTLINED_FUNCTION_5();
}

void static NSUserDefaults.globalSearchLocationLongitude.modify(uint64_t a1)
{
  static NSUserDefaults.globalSearchLocationLatitude.modify(a1);
}

void one-time initialization function for _globalSearchLocationLongitude()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._globalSearchLocationLongitude = 0;
  byte_257288EF8 = 1;
  qword_257288F00 = 0xD00000000000001DLL;
  unk_257288F08 = 0x800000024335B8C0;
  qword_257288F10 = v0;
}

uint64_t outlined retain of UserDefault<String>(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t outlined release of UserDefault<String>(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

id static NSUserDefaults.$globalSearchLocationLongitude.getter()
{
  void *v1;

  if (one-time initialization token for _globalSearchLocationLongitude != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_16_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.logForEval.getter()
{
  void *v0;

  if (one-time initialization token for _logForEval != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v0 = (void *)qword_257288F30;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_8_5(v0);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.logForEval.setter(uint64_t a1)
{
  static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _logForEval);
}

void static NSUserDefaults.logForEval.modify()
{
  uint64_t v0;

  if (one-time initialization token for _logForEval != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v0 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_28_2(v0);
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.logForEval.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

{
  specialized UserDefault.wrappedValue.setter();
  return OUTLINED_FUNCTION_13_5();
}

void one-time initialization function for _logForEval()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._logForEval = 0;
  qword_257288F20 = 0x7645726F46676F6CLL;
  unk_257288F28 = 0xEA00000000006C61;
  qword_257288F30 = v0;
}

id static NSUserDefaults.$logForEval.getter()
{
  void *v1;

  if (one-time initialization token for _logForEval != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

float static NSUserDefaults.semanticSearchSleepTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  float v4;
  float v5;

  if (one-time initialization token for _semanticSearchSleepTime != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v0 = qword_257288F40;
  v1 = unk_257288F48;
  v2 = (void *)qword_257288F50;
  swift_bridgeObjectRetain();
  v3 = v2;
  specialized UserDefault.wrappedValue.getter(v0, v1, v3);
  v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static NSUserDefaults.semanticSearchSleepTime.setter()
{
  if (one-time initialization token for _semanticSearchSleepTime != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.setter();
  return OUTLINED_FUNCTION_20_3();
}

void static NSUserDefaults.semanticSearchSleepTime.modify(uint64_t a1)
{
  int v2;

  if (one-time initialization token for _semanticSearchSleepTime != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.getter(qword_257288F40, unk_257288F48, (void *)qword_257288F50);
  *(_DWORD *)(a1 + 24) = v2;
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.semanticSearchSleepTime.modify()
{
  specialized UserDefault.wrappedValue.setter();
  return OUTLINED_FUNCTION_13_5();
}

void one-time initialization function for _semanticSearchSleepTime()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._semanticSearchSleepTime = 1065353216;
  qword_257288F40 = 0x6D69547065656C73;
  unk_257288F48 = 0xE900000000000065;
  qword_257288F50 = v0;
}

id static NSUserDefaults.$semanticSearchSleepTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;

  if (one-time initialization token for _semanticSearchSleepTime != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v3 = qword_257288F40;
  v2 = unk_257288F48;
  v6 = (void *)qword_257288F50;
  v4 = qword_257288F50;
  *(_DWORD *)a1 = static NSUserDefaults._semanticSearchSleepTime;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_0_6(v6);
}

void static NSUserDefaults.postProcessingFilter.getter()
{
  void *v0;

  if (one-time initialization token for _postProcessingFilter != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v0 = (void *)qword_257288F70;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_8_5(v0);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.postProcessingFilter.setter(uint64_t a1)
{
  static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _postProcessingFilter);
}

void static NSUserDefaults.postProcessingFilter.modify()
{
  uint64_t v0;

  if (one-time initialization token for _postProcessingFilter != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v0 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_28_2(v0);
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.postProcessingFilter.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

void one-time initialization function for _postProcessingFilter()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._postProcessingFilter = 0;
  qword_257288F60 = 0xD000000000000014;
  unk_257288F68 = 0x800000024335B7A0;
  qword_257288F70 = v0;
}

id static NSUserDefaults.$postProcessingFilter.getter()
{
  void *v1;

  if (one-time initialization token for _postProcessingFilter != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.emailContentPreprocessing.getter()
{
  void *v0;

  if (one-time initialization token for _emailContentPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v0 = (void *)qword_257288F90;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_8_5(v0);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.emailContentPreprocessing.setter(uint64_t a1)
{
  static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _emailContentPreprocessing);
}

void static NSUserDefaults.emailContentPreprocessing.modify()
{
  uint64_t v0;

  if (one-time initialization token for _emailContentPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v0 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_28_2(v0);
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.emailContentPreprocessing.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

void one-time initialization function for _emailContentPreprocessing()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._emailContentPreprocessing = 0;
  qword_257288F80 = 0xD000000000000019;
  unk_257288F88 = 0x800000024335B780;
  qword_257288F90 = v0;
}

id static NSUserDefaults.$emailContentPreprocessing.getter()
{
  void *v1;

  if (one-time initialization token for _emailContentPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.smartChunkingPreprocessing.getter()
{
  void *v0;

  if (one-time initialization token for _smartChunkingPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  v0 = (void *)qword_257288FB0;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_8_5(v0);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.smartChunkingPreprocessing.setter(uint64_t a1)
{
  static NSUserDefaults.logForEval.setter(a1, &one-time initialization token for _smartChunkingPreprocessing);
}

void static NSUserDefaults.logForEval.setter(uint64_t a1, _QWORD *a2)
{
  if (*a2 != -1)
    OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.setter();
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_56_1();
}

void static NSUserDefaults.smartChunkingPreprocessing.modify()
{
  uint64_t v0;

  if (one-time initialization token for _smartChunkingPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v0 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_28_2(v0);
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.smartChunkingPreprocessing.modify()
{
  return static NSUserDefaults.logForEval.modify();
}

void one-time initialization function for _smartChunkingPreprocessing()
{
  uint64_t v0;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  static NSUserDefaults._smartChunkingPreprocessing = 0;
  qword_257288FA0 = 0xD00000000000001ALL;
  unk_257288FA8 = 0x800000024335B760;
  qword_257288FB0 = v0;
}

id static NSUserDefaults.$smartChunkingPreprocessing.getter()
{
  void *v1;

  if (one-time initialization token for _smartChunkingPreprocessing != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.smartChunksPerDocument.getter()
{
  if (one-time initialization token for _smartChunksPerDocument != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._smartChunksPerDocument);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.smartChunksPerDocument.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _smartChunksPerDocument);
}

void static NSUserDefaults.smartChunksPerDocument.modify(uint64_t a1)
{
  if (one-time initialization token for _smartChunksPerDocument != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.smartChunksPerDocument.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _smartChunksPerDocument()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  *(_QWORD *)&result = 2;
  static NSUserDefaults._smartChunksPerDocument = xmmword_24334DF30;
  qword_257288FC8 = 0x800000024335B740;
  unk_257288FD0 = v1;
  return result;
}

id static NSUserDefaults.$smartChunksPerDocument.getter()
{
  void *v1;

  if (one-time initialization token for _smartChunksPerDocument != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

void static NSUserDefaults.smartChunkingOverlap.getter()
{
  if (one-time initialization token for _smartChunkingOverlap != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_3_4(&static NSUserDefaults._smartChunkingOverlap);
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_51_0();
}

void static NSUserDefaults.smartChunkingOverlap.setter(uint64_t a1)
{
  static NSUserDefaults.answerSynthesisLimit.setter(a1, &one-time initialization token for _smartChunkingOverlap);
}

void static NSUserDefaults.answerSynthesisLimit.setter(uint64_t a1, _QWORD *a2)
{
  if (*a2 != -1)
    OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_2_6();
  specialized UserDefault.wrappedValue.setter();
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_56_1();
}

void static NSUserDefaults.smartChunkingOverlap.modify(uint64_t a1)
{
  if (one-time initialization token for _smartChunkingOverlap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_5();
}

uint64_t static NSUserDefaults.smartChunkingOverlap.modify()
{
  return static NSUserDefaults.answerSynthesisLimit.modify();
}

double one-time initialization function for _smartChunkingOverlap()
{
  double result;
  uint64_t v1;

  type metadata accessor for NSUserDefaults();
  static NSUserDefaults.makeOmniSearchUserDefaults()();
  result = 0.0;
  static NSUserDefaults._smartChunkingOverlap = xmmword_24334DF40;
  qword_257288FE8 = 0x800000024335B720;
  unk_257288FF0 = v1;
  return result;
}

id static NSUserDefaults.$smartChunkingOverlap.getter()
{
  void *v1;

  if (one-time initialization token for _smartChunkingOverlap != -1)
    swift_once();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_6(v1);
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id OUTLINED_FUNCTION_0_6(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return specialized UserDefault.wrappedValue.getter(v1, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)v0 = *(_BYTE *)v1;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_8_5(void *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  return specialized UserDefault.wrappedValue.getter(v1, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  uint64_t v0;

  return specialized UserDefault.wrappedValue.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  uint64_t v0;

  return specialized UserDefault.wrappedValue.getter(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v5;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_17_4()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_18_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, uint64_t a15)
{
  __int128 *v15;
  __int128 v16;

  v16 = v15[1];
  a13 = *v15;
  a14 = v16;
  a15 = *((_QWORD *)v15 + 4);
  return outlined retain of UserDefault<Double?>((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)v1 = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 32);
  return specialized UserDefault.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_21_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return outlined release of UserDefault<Double?>((uint64_t)va);
}

void *OUTLINED_FUNCTION_25_2()
{
  return malloc(0x49uLL);
}

void OUTLINED_FUNCTION_26_3()
{
  uint64_t v0;
  uint64_t v1;

  specialized UserDefault.wrappedValue.setter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_28_2(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  return swift_once();
}

uint64_t UserQuery.isRewritten.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;

  if (a1 == a3 && a2 == a4)
    v5 = 0;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  return v5 & 1;
}

uint64_t UserQuery.raw.getter()
{
  OUTLINED_FUNCTION_0_7();
  return OUTLINED_FUNCTION_1_5();
}

uint64_t UserQuery.rewritten.getter()
{
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_1_5();
}

OmniSearch::UserQuery __swiftcall UserQuery.init(raw:rewritten:)(Swift::String raw, Swift::String_optional rewritten)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  OmniSearch::UserQuery result;

  if (!rewritten.value._object)
    goto LABEL_6;
  v2 = HIBYTE(rewritten.value._object) & 0xF;
  if (((uint64_t)rewritten.value._object & 0x2000000000000000) == 0)
    v2 = rewritten.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRetain();
  }
  v3 = OUTLINED_FUNCTION_1_5();
  result.rewritten._object = v6;
  result.rewritten._countAndFlagsBits = v5;
  result.raw._object = v4;
  result.raw._countAndFlagsBits = v3;
  return result;
}

OmniSearch::UserQuery __swiftcall UserQuery.init(stringLiteral:)(Swift::String stringLiteral)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  OmniSearch::UserQuery result;

  OUTLINED_FUNCTION_0_7();
  v3 = OUTLINED_FUNCTION_1_5();
  v5 = v2;
  v6 = v1;
  result.rewritten._object = v6;
  result.rewritten._countAndFlagsBits = v5;
  result.raw._object = v4;
  result.raw._countAndFlagsBits = v3;
  return result;
}

unint64_t lazy protocol witness table accessor for type UserQuery and conformance UserQuery()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UserQuery and conformance UserQuery;
  if (!lazy protocol witness table cache variable for type UserQuery and conformance UserQuery)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for UserQuery, &type metadata for UserQuery);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserQuery and conformance UserQuery);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UserQuery and conformance UserQuery;
  if (!lazy protocol witness table cache variable for type UserQuery and conformance UserQuery)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for UserQuery, &type metadata for UserQuery);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserQuery and conformance UserQuery);
  }
  return result;
}

uint64_t protocol witness for ExpressibleByStringLiteral.init(stringLiteral:) in conformance UserQuery@<X0>(Swift::String *a1@<X0>, OmniSearch::UserQuery *a2@<X8>)
{
  OmniSearch::UserQuery v4;

  v4 = UserQuery.init(stringLiteral:)(*a1);
  *a2 = v4;
  return v4.raw._countAndFlagsBits;
}

uint64_t getEnumTagSinglePayload for UserQuery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserQuery()
{
  return &type metadata for UserQuery;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;

  return v0;
}

uint64_t static SearchToolControl.openAppWhenRun.getter()
{
  return 0;
}

char *SearchToolControl.assistantOnly.unsafeMutableAddressor()
{
  return &static SearchToolControl.assistantOnly;
}

uint64_t static SearchToolControl.assistantOnly.getter()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolControl.assistantOnly;
}

void static SearchToolControl.assistantOnly.setter(char a1)
{
  OUTLINED_FUNCTION_2_6();
  static SearchToolControl.assistantOnly = a1;
  OUTLINED_FUNCTION_56_1();
}

void static SearchToolControl.assistantOnly.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t one-time initialization function for title()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource();
  __swift_allocate_value_buffer(v0, static SearchToolControl.title);
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolControl.title);
  return LocalizedStringResource.init(stringLiteral:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource();
  __swift_allocate_value_buffer(v0, static SearchToolMCQU.title);
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolMCQU.title);
  return LocalizedStringResource.init(stringLiteral:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource();
  __swift_allocate_value_buffer(v0, static SearchTool.title);
  __swift_project_value_buffer(v0, (uint64_t)static SearchTool.title);
  return LocalizedStringResource.init(stringLiteral:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource();
  __swift_allocate_value_buffer(v0, static SearchToolMCGrounding.title);
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolMCGrounding.title);
  return LocalizedStringResource.init(stringLiteral:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource();
  __swift_allocate_value_buffer(v0, static SearchToolLLMQU.title);
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolLLMQU.title);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t static SearchToolControl.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for title != -1)
    swift_once();
  v2 = type metadata accessor for LocalizedStringResource();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolControl.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t one-time initialization function for description()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  v6 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for IntentDescription();
  __swift_allocate_value_buffer(v7, static SearchToolControl.description);
  __swift_project_value_buffer(v7, (uint64_t)static SearchToolControl.description);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LocalizedStringResource>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v6);
  return IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  v6 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for IntentDescription();
  __swift_allocate_value_buffer(v7, static SearchToolMCQU.description);
  __swift_project_value_buffer(v7, (uint64_t)static SearchToolMCQU.description);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LocalizedStringResource>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v6);
  return IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  v6 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for IntentDescription();
  __swift_allocate_value_buffer(v7, static SearchTool.description);
  __swift_project_value_buffer(v7, (uint64_t)static SearchTool.description);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LocalizedStringResource>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v6);
  return IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  v6 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for IntentDescription();
  __swift_allocate_value_buffer(v7, static SearchToolMCGrounding.description);
  __swift_project_value_buffer(v7, (uint64_t)static SearchToolMCGrounding.description);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LocalizedStringResource>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v6);
  return IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  v6 = type metadata accessor for LocalizedStringResource();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for IntentDescription();
  __swift_allocate_value_buffer(v7, static SearchToolLLMQU.description);
  __swift_project_value_buffer(v7, (uint64_t)static SearchToolLLMQU.description);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LocalizedStringResource>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v6);
  return IntentDescription.init(_:categoryName:searchKeywords:resultValueName:)();
}

void static SearchToolControl.description.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolControl.description);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolControl.description.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolControl.description);
  OUTLINED_FUNCTION_2_6();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolControl.description.modify()
{
  uint64_t v0;

  if (one-time initialization token for description != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_17_5();
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolControl.description);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolControl.command.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchToolControl.command : SearchToolControl@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SearchToolControl.command.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void key path setter for SearchToolControl.command : SearchToolControl()
{
  swift_bridgeObjectRetain();
  SearchToolControl.command.setter();
}

void SearchToolControl.command.setter()
{
  IntentParameter.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolControl.command.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  v1[4] = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolControl.$command.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolControl.originatorPID.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchToolControl.originatorPID : SearchToolControl@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = SearchToolControl.originatorPID.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void key path setter for SearchToolControl.originatorPID : SearchToolControl()
{
  SearchToolControl.originatorPID.setter();
}

void SearchToolControl.originatorPID.setter()
{
  IntentParameter.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolControl.originatorPID.modify()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  *v0 = v1;
  v1[4] = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolControl.$originatorPID.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

int *SearchToolControl.prewarmPID.unsafeMutableAddressor()
{
  return &static SearchToolControl.prewarmPID;
}

unint64_t static SearchToolControl.prewarmPID.getter()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolControl.prewarmPID | ((unint64_t)byte_257289054 << 32);
}

void static SearchToolControl.prewarmPID.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_2_6();
  static SearchToolControl.prewarmPID = a1;
  byte_257289054 = BYTE4(a1) & 1;
  OUTLINED_FUNCTION_56_1();
}

void static SearchToolControl.prewarmPID.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolControl.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<Int?>.IntControlStyle);
  v16 = *(_QWORD *)(v1 - 8);
  v17 = v1;
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  v15 = v3 - v2;
  v4 = type metadata accessor for InputConnectionBehavior();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentDialog?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String.IntentInputOptions?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_2();
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<String>);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_4();
  v12 = type metadata accessor for String.IntentInputOptions();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v12);
  type metadata accessor for IntentDialog();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_11_4();
  v14 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<Int?>);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_4_6();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, *MEMORY[0x24BDB5478], v17);
  OUTLINED_FUNCTION_11_4();
  result = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  *a1 = v14;
  a1[1] = result;
  return result;
}

uint64_t SearchToolControl.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *v1;
  return swift_task_switch();
}

uint64_t SearchToolControl.perform()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v28;

  v1 = (uint64_t *)(v0 + 16);
  OUTLINED_FUNCTION_75();
  swift_retain();
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_50();
  swift_release();
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v3 == 0x70756D726177 && v2 == 0xE600000000000000;
  if (v4 || (OUTLINED_FUNCTION_9_3() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)static LocalSearchManager.shared) + 0xD0))();
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static AnswerSynthesisController.shared + 160))();
    v5 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v6 = objc_msgSend(v5, sel_processIdentifier);

    OUTLINED_FUNCTION_2_6();
    static SearchToolControl.prewarmPID = v6;
    byte_257289054 = 0;
    if (one-time initialization token for stextension != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v7, (uint64_t)static Logging.stextension);
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v11 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v10 = 136315138;
      v28 = v11;
      v12 = byte_257289054;
      *(_DWORD *)(v0 + 40) = static SearchToolControl.prewarmPID;
      *(_BYTE *)(v0 + 44) = v12;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int32?);
      v13 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v28);
      *(_QWORD *)(v0 + 40) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24315F000, v8, v9, "Warming up SearchToolExtension, running on pid: %s", v10, 0xCu);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }

    *(_BYTE *)(v0 + 40) = 1;
    lazy protocol witness table accessor for type Bool and conformance Bool();
    goto LABEL_34;
  }
  if (v3 == 0xD000000000000017 && v2 == 0x800000024335B960)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_retain();
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_16_6();
    swift_release();
    OUTLINED_FUNCTION_50();
    if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    {
      if (one-time initialization token for stextension != -1)
        swift_once();
      v17 = OUTLINED_FUNCTION_13();
      __swift_project_value_buffer(v17, (uint64_t)static Logging.stextension);
      v18 = Logger.logObject.getter();
      v19 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_24315F000, v18, v19, "No originatorPID was set for perwarming MemoryCreationQU", v20, 2u);
        specialized UnsafeMutablePointer.deallocate()();
      }

      *(_BYTE *)(v0 + 16) = 0;
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 16);
      if (one-time initialization token for shared != -1)
        swift_once();
      (*(void (**)(uint64_t))(*(_QWORD *)static MemoryCreationQUController.shared + 184))(v21);
      *(_BYTE *)(v0 + 16) = 1;
    }
    lazy protocol witness table accessor for type Bool and conformance Bool();
    goto LABEL_34;
  }
  v16 = OUTLINED_FUNCTION_9_3();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_19;
  if (one-time initialization token for stextension != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v22, (uint64_t)static Logging.stextension);
  swift_retain_n();
  swift_retain_n();
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v28 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v25 = 136315138;
    OUTLINED_FUNCTION_75();
    swift_retain();
    OUTLINED_FUNCTION_16_6();
    OUTLINED_FUNCTION_50();
    swift_release();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*v1, *(_QWORD *)(v0 + 24), &v28);
    *v1 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    _os_log_impl(&dword_24315F000, v23, v24, "Unknown command sent to command intent: %s", v25, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();

  *(_BYTE *)(v0 + 16) = 0;
  lazy protocol witness table accessor for type Bool and conformance Bool();
LABEL_34:
  static IntentResult.result<A>(value:)();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolControl(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = protocol witness for AppIntent.perform() in conformance SearchToolControl;
  return SearchToolControl.perform()(a1);
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolControl()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t protocol witness for static PersistentlyIdentifiable.persistentIdentifier.getter in conformance SearchToolControl()
{
  lazy protocol witness table accessor for type SearchToolControl and conformance SearchToolControl();
  return static AppIntent.persistentIdentifier.getter();
}

unint64_t lazy protocol witness table accessor for type Bool and conformance Bool()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Bool and conformance Bool;
  if (!lazy protocol witness table cache variable for type Bool and conformance Bool)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6640], MEMORY[0x24BEE1328]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Bool and conformance Bool);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchToolControl and conformance SearchToolControl()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl;
  if (!lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolControl, &type metadata for SearchToolControl);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl;
  if (!lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolControl, &type metadata for SearchToolControl);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl;
  if (!lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolControl, &type metadata for SearchToolControl);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolControl and conformance SearchToolControl);
  }
  return result;
}

uint64_t associated type witness table accessor for AppIntent.PerformResult : IntentResult in SearchToolControl()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t associated type witness table accessor for AppIntent.SummaryContent : ParameterSummary in SearchToolControl()
{
  lazy protocol witness table accessor for type SearchToolControl and conformance SearchToolControl();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SearchToolControl()
{
  swift_release();
  return swift_release();
}

void initializeBufferWithCopyOfBuffer for SearchToolControl(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_5();
}

_QWORD *assignWithCopy for SearchToolControl(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SearchToolControl(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SearchToolControl()
{
  return &type metadata for SearchToolControl;
}

unint64_t lazy protocol witness table accessor for type IntentResultContainer<Bool, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type IntentResultContainer<Bool, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>;
  if (!lazy protocol witness table cache variable for type IntentResultContainer<Bool, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentResultContainer<Bool, Never, Never, Never>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5E60], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentResultContainer<Bool, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return type metadata accessor for IntentDescription();
}

uint64_t CodableNSSecureCoding.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_unknownObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CodableNSSecureCoding.wrappedValue.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void *CodableNSSecureCoding.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v3)
  {
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    lazy protocol witness table accessor for type Data and conformance Data();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    v8 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    outlined copy of Data._Representation(v20, v21);
    v13 = @nonobjc NSKeyedUnarchiver.init(forReadingFrom:)(v20, v21);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    objc_msgSend(v13, sel_setRequiresSecureCoding_, objc_msgSend(ObjCClassFromMetadata, sel_supportsSecureCoding));
    v14 = objc_msgSend(objc_allocWithZone((Class)ObjCClassFromMetadata), sel_initWithCoder_, v13);
    if (v14)
    {
      ObjCClassFromMetadata = v14;
      objc_msgSend(v13, sel_finishDecoding);

      v16 = OUTLINED_FUNCTION_1_6();
      OUTLINED_FUNCTION_0_8(v16, v17, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return ObjCClassFromMetadata;
    }
    v19 = type metadata accessor for CodableNSSecureCoding.Error(0, a2, a3, v15);
    MEMORY[0x2494F6CA4](&protocol conformance descriptor for CodableNSSecureCoding<A>.Error, v19);
    swift_allocError();
    swift_willThrow();

    v9 = OUTLINED_FUNCTION_1_6();
    OUTLINED_FUNCTION_0_8(v9, v10, v11);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return ObjCClassFromMetadata;
}

unint64_t lazy protocol witness table accessor for type Data and conformance Data()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Data and conformance Data;
  if (!lazy protocol witness table cache variable for type Data and conformance Data)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Data and conformance Data);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Data and conformance Data;
  if (!lazy protocol witness table cache variable for type Data and conformance Data)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Data and conformance Data);
  }
  return result;
}

uint64_t CodableNSSecureCoding.encode(to:)(_QWORD *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  uint64_t v14;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  objc_msgSend(a2, sel_encodeWithCoder_, v4);
  objc_msgSend(v4, sel_finishEncoding);
  v5 = objc_msgSend(v4, sel_encodedData);
  v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
  lazy protocol witness table accessor for type Data and conformance Data();
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();

  v9 = outlined consume of Data._Representation(v6, v8);
  return OUTLINED_FUNCTION_0_8(v9, v10, v11);
}

uint64_t static CodableNSSecureCoding.Error.== infix(_:_:)()
{
  return 1;
}

void CodableNSSecureCoding.Error.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int CodableNSSecureCoding.Error.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CodableNSSecureCoding<A>.Error()
{
  Hasher.init(_seed:)();
  CodableNSSecureCoding.Error.hash(into:)();
  return Hasher._finalize()();
}

uint64_t static CodableNSSecureCoding.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void *protocol witness for Decodable.init(from:) in conformance CodableNSSecureCoding<A>@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  void *result;

  result = CodableNSSecureCoding.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance CodableNSSecureCoding<A>(_QWORD *a1)
{
  void **v1;

  return CodableNSSecureCoding.encode(to:)(a1, *v1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CodableNSSecureCoding<A>()
{
  return static CodableNSSecureCoding.== infix(_:_:)();
}

id @nonobjc NSKeyedUnarchiver.init(forReadingFrom:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  Class isa;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v3 = v2;
  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11[0] = 0;
  v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, isa, v11);

  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  outlined consume of Data._Representation(a1, a2);
  return v7;
}

uint64_t type metadata accessor for CodableNSSecureCoding.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableNSSecureCoding.Error);
}

void base witness table accessor for Equatable in CodableNSSecureCoding<A>.Error()
{
  JUMPOUT(0x2494F6CA4);
}

uint64_t type metadata instantiation function for CodableNSSecureCoding()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for CodableNSSecureCoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableNSSecureCoding);
}

uint64_t type metadata instantiation function for CodableNSSecureCoding.Error()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for CodableNSSecureCoding.Error(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for CodableNSSecureCoding.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2431848C0 + 4 * asc_24334E130[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2431848E0 + 4 * byte_24334E135[v4]))();
}

_BYTE *sub_2431848C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2431848E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2431848E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2431848F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2431848F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243184900(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2494F6C14](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_0_8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

void AppEntityItem.id.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void AppEntityItem.bundleId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void AppEntityItem.typeId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void AppEntityItem.protocolId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t AppEntityItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_5_6() + 32);
  return outlined init with copy of URL?(v3, a1);
}

uint64_t type metadata accessor for AppEntityItem()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AppEntityItem;
  if (!type metadata singleton initialization cache for AppEntityItem)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppEntityItem.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_5_6() + 32);
  return outlined assign with take of URL?(a1, v3);
}

uint64_t outlined assign with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AppEntityItem.url.modify())()
{
  OUTLINED_FUNCTION_5_6();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t AppEntityItem.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x644965707974 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6C6F636F746F7270 && a2 == 0xEA00000000006449;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 7107189 && a2 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t AppEntityItem.CodingKeys.init(intValue:)()
{
  return 5;
}

uint64_t AppEntityItem.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_243184CE0 + 4 * byte_24334E2B8[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_243184CE0()
{
  return 0x6449656C646E7562;
}

uint64_t sub_243184CF8()
{
  return 0x644965707974;
}

uint64_t sub_243184D0C()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_243184D28()
{
  return 7107189;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppEntityItem.CodingKeys()
{
  unsigned __int8 *v0;

  return AppEntityItem.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppEntityItem.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = AppEntityItem.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AppEntityItem.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AppEntityItem.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppEntityItem.CodingKeys()
{
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppEntityItem.CodingKeys()
{
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t AppEntityItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppEntityItem.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_1_7();
  if (!v1)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_1_7();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    type metadata accessor for AppEntityItem();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityItem.CodingKeys, &unk_2513C93B0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityItem.CodingKeys, &unk_2513C93B0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityItem.CodingKeys, &unk_2513C93B0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityItem.CodingKeys, &unk_2513C93B0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys);
  }
  return result;
}

uint64_t AppEntityItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v19 = v5 - v4;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppEntityItem.CodingKeys>);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_2();
  v6 = type metadata accessor for AppEntityItem();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = (uint64_t *)(v8 - v7);
  v11 = v8 - v7 + *(int *)(v10 + 32);
  v12 = type metadata accessor for URL();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityItem.CodingKeys and conformance AppEntityItem.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return outlined destroy of URL?(v11);
  }
  else
  {
    *v9 = KeyedDecodingContainer.decode(_:forKey:)();
    v9[1] = v13;
    v9[2] = KeyedDecodingContainer.decode(_:forKey:)();
    v9[3] = v14;
    v9[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v9[5] = v15;
    v9[6] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v9[7] = v16;
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_0_9();
    outlined assign with take of URL?(v19, v11);
    outlined init with copy of AppEntityItem((uint64_t)v9, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return outlined destroy of AppEntityItem((uint64_t)v9);
  }
}

uint64_t outlined init with copy of AppEntityItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppEntityItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of AppEntityItem(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppEntityItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppEntityItem.init(id:bundleId:typeId:protocolId:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v10;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  v10 = (uint64_t)a9 + *(int *)(OUTLINED_FUNCTION_5_6() + 32);
  return outlined init with take of URL?(a10, v10);
}

uint64_t instantiation function for generic protocol witness table for AppEntityItem(_QWORD *a1)
{
  uint64_t result;

  a1[1] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem, (uint64_t (*)(uint64_t))type metadata accessor for AppEntityItem, (uint64_t)&protocol conformance descriptor for AppEntityItem);
  a1[2] = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem, (uint64_t (*)(uint64_t))type metadata accessor for AppEntityItem, (uint64_t)&protocol conformance descriptor for AppEntityItem);
  result = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type AppEntityItem and conformance AppEntityItem, (uint64_t (*)(uint64_t))type metadata accessor for AppEntityItem, (uint64_t)&protocol conformance descriptor for AppEntityItem);
  a1[3] = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppEntityItem@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppEntityItem.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppEntityItem(_QWORD *a1)
{
  return AppEntityItem.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppEntityItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    v9 = *(int *)(a3 + 32);
    v10 = (char *)a2 + v9;
    v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    v12 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t destroy for AppEntityItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for URL();
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for AppEntityItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a2 + v8;
  v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  }
  return a1;
}

_QWORD *assignWithCopy for AppEntityItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for AppEntityItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for AppEntityItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for URL();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEntityItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243185A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppEntityItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243185AD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for AppEntityItem()
{
  unint64_t v0;

  type metadata accessor for URL?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for AppEntityItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEntityItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243185C94 + 4 * byte_24334E2C2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243185CC8 + 4 * byte_24334E2BD[v4]))();
}

uint64_t sub_243185CC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243185CD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243185CD8);
  return result;
}

uint64_t sub_243185CE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243185CECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243185CF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243185CF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AppEntityItem.CodingKeys()
{
  return &unk_2513C93B0;
}

uint64_t OUTLINED_FUNCTION_0_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return type metadata accessor for AppEntityItem();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  uint64_t v0;

  return v0;
}

_QWORD *specialized Array<A>.argminN(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *result;
  uint64_t v17;

  v2 = MEMORY[0x24BEE4AF8];
  if (a1 < 1)
    return (_QWORD *)v2;
  if (*(_QWORD *)(a2 + 16) < (unint64_t)a1)
    return specialized _copyCollectionToContiguousArray<A>(_:)(0, a1);
  v4 = swift_bridgeObjectRetain();
  v17 = specialized _copySequenceToContiguousArray<A>(_:)(v4);
  specialized MutableCollection<>.sort(by:)(&v17);
  swift_bridgeObjectRelease();
  specialized Collection.prefix(_:)(a1, v17);
  v8 = v7 >> 1;
  v9 = (v7 >> 1) - v6;
  if (__OFSUB__(v7 >> 1, v6))
    goto LABEL_15;
  if (!v9)
  {
LABEL_12:
    swift_unknownObjectRelease();
    return (_QWORD *)v2;
  }
  v10 = v5;
  v11 = v6;
  v17 = v2;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v2 = v17;
    v12 = (uint64_t *)(v10 + 16 * v11);
    while (v11 < v8)
    {
      v13 = *v12;
      v17 = v2;
      v15 = *(_QWORD *)(v2 + 16);
      v14 = *(_QWORD *)(v2 + 24);
      if (v15 >= v14 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v14 > 1), v15 + 1, 1);
        v2 = v17;
      }
      *(_QWORD *)(v2 + 16) = v15 + 1;
      *(_QWORD *)(v2 + 8 * v15 + 32) = v13;
      ++v11;
      v12 += 2;
      if (v8 == v11)
        goto LABEL_12;
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
  __break(1u);
  result = (_QWORD *)swift_release();
  __break(1u);
  return result;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v16 = a2 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if ((v7 & 0x8000000000000000) == 0 && v7 < *(_QWORD *)(a2 + 16))
      {
        v8 = (uint64_t *)(v16 + 16 * v7);
        v9 = *v8;
        v10 = v8[1];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v6 = v13;
        }
        v11 = *(_QWORD *)(v6 + 16);
        if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v6 = v14;
        }
        *(_QWORD *)(v6 + 16) = v11 + 1;
        v12 = v6 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v9;
        *(_QWORD *)(v12 + 40) = v10;
      }
      ++v5;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v6;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;

  v59 = type metadata accessor for SearchResultType();
  v58 = *(_QWORD **)(v59 - 8);
  v5 = MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v41 - v7;
  v47 = type metadata accessor for ExtractedResult(0);
  v9 = *(_QWORD *)(v47 - 8);
  v10 = MEMORY[0x24BDAC7A8](v47);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v46 = (uint64_t)v41 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v45 = (uint64_t)v41 - v15;
  v51 = *(_QWORD *)(a1 + 16);
  if (!v51)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v41[2] = v2;
  v16 = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v50 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 112);
  v48 = *(_QWORD *)(v16 + 72);
  v49 = v17;
  v41[1] = a1;
  v18 = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x24BEE4AF8];
  v42 = v9;
  v43 = a2;
  v57 = v8;
  v44 = v12;
  do
  {
    v21 = v50 + v48 * v19;
    v22 = v49(v18);
    v53 = v21;
    SearchResultItem.type.getter();
    v23 = *(_QWORD *)(v22 + 16);
    v54 = v19;
    if (!v23)
    {
      swift_bridgeObjectRelease();
      v32 = (void (*)(char *, uint64_t))v58[1];
LABEL_12:
      v33 = v53;
      v32(v8, v59);
      v34 = v46;
      outlined init with copy of SearchResult(v33, v46, type metadata accessor for SearchResult);
      type metadata accessor for ExtractedInfo(0);
      swift_storeEnumTagMultiPayload();
      v35 = v45;
      outlined init with take of SearchResult(v34, v45, type metadata accessor for ExtractedResult);
      outlined init with take of SearchResult(v35, (uint64_t)v12, type metadata accessor for ExtractedResult);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v20 = v38;
      }
      v36 = v54;
      v37 = *(_QWORD *)(v20 + 16);
      if (v37 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v20 = v39;
      }
      *(_QWORD *)(v20 + 16) = v37 + 1;
      outlined init with take of SearchResult((uint64_t)v12, v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v37, type metadata accessor for ExtractedResult);
      goto LABEL_17;
    }
    v52 = v20;
    lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x24BE6E238]);
    v24 = dispatch thunk of Hashable._rawHashValue(seed:)();
    v25 = -1 << *(_BYTE *)(v22 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)(v22 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v32 = (void (*)(char *, uint64_t))v58[1];
LABEL_11:
      v12 = v44;
      v20 = v52;
      goto LABEL_12;
    }
    v56 = ~v25;
    v27 = v58[9];
    v28 = (void (*)(char *, unint64_t, uint64_t))v58[2];
    while (1)
    {
      v29 = v55;
      v30 = v59;
      v28(v55, *(_QWORD *)(v22 + 48) + v27 * v26, v59);
      lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType((unint64_t *)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x24BE6E240]);
      v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      v32 = (void (*)(char *, uint64_t))v58[1];
      v32(v29, v30);
      if ((v31 & 1) != 0)
        break;
      v26 = (v26 + 1) & v56;
      if (((*(_QWORD *)(v22 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v9 = v42;
        v8 = v57;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    v8 = v57;
    v18 = ((uint64_t (*)(char *, uint64_t))v32)(v57, v59);
    v9 = v42;
    v12 = v44;
    v20 = v52;
    v36 = v54;
LABEL_17:
    v19 = v36 + 1;
  }
  while (v19 != v51);
  swift_release();
  swift_bridgeObjectRelease();
  return v20;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v3 = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v6 = *(v5 - 1);
        v7 = *v5;
        swift_bridgeObjectRetain_n();
        v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6, v7);
        if ((v9 & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v8);
          v11 = swift_bridgeObjectRelease_n();
          MEMORY[0x2494F5E10](v11);
          if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v13;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t SmartChunkingTruncationConfig.version.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_4_7();
  return v1;
}

uint64_t SmartChunkingTruncationConfig.mode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SmartChunkingTruncationConfig.chunkingSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t SmartChunkingTruncationConfig.nonContentTokenLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

double SmartChunkingTruncationConfig.tokenFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t SmartChunkingTruncationConfig.SmartChunkingTruncationMode.value.getter(char a1)
{
  return (32 * (a1 & 1)) ^ 0x20u;
}

BOOL static SmartChunkingTruncationConfig.SmartChunkingTruncationMode.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void SmartChunkingTruncationConfig.SmartChunkingTruncationMode.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_5();
}

Swift::Int SmartChunkingTruncationConfig.SmartChunkingTruncationMode.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SmartChunkingTruncationConfig.SmartChunkingTruncationMode.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode()
{
  char *v0;

  return SmartChunkingTruncationConfig.SmartChunkingTruncationMode.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode(uint64_t a1)
{
  char *v1;

  SmartChunkingTruncationConfig.SmartChunkingTruncationMode.hash(into:)(a1, *v1);
}

void __swiftcall SmartChunkingTruncationConfig.init()(OmniSearch::SmartChunkingTruncationConfig *__return_ptr retstr)
{
  uint64_t v2;
  void *v3;
  Swift::Int v4;
  Swift::Double v5;

  OUTLINED_FUNCTION_97_1();
  static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter();
  OUTLINED_FUNCTION_80_2();
  retstr->version._countAndFlagsBits = v2;
  retstr->version._object = v3;
  retstr->mode = OmniSearch_SmartChunkingTruncationConfig_SmartChunkingTruncationMode_Char;
  retstr->chunkingSize = 700;
  retstr->nonContentTokenLimit = v4;
  OUTLINED_FUNCTION_119();
  retstr->tokenFactor = v5;
  OUTLINED_FUNCTION_5();
}

uint64_t SmartChunkingPreprocessing.universalEmbeddingClient.getter()
{
  return swift_retain();
}

uint64_t SmartChunkingPreprocessing.truncationConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  return swift_bridgeObjectRetain();
}

void SmartChunkingPreprocessing.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  OUTLINED_FUNCTION_97_1();
  static NSUserDefaults.answerSynthesisTokenLimitNonUserPrompt.getter();
  OUTLINED_FUNCTION_80_2();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = 700;
  *(_QWORD *)(a1 + 40) = v4;
  OUTLINED_FUNCTION_119();
  *(_QWORD *)(a1 + 48) = v5;
  v6 = objc_msgSend((id)objc_opt_self(), sel_service);
  type metadata accessor for UniversalEmbeddingModelClient();
  v7 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)a1 = v7;
  OUTLINED_FUNCTION_5();
}

uint64_t SmartChunkingPreprocessing.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)(v4 + 96) = a2;
  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 88) = a1;
  v5 = type metadata accessor for OSSignpostError();
  *(_QWORD *)(v4 + 112) = v5;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 128) = OUTLINED_FUNCTION_18_5();
  v6 = type metadata accessor for OSSignpostID();
  *(_QWORD *)(v4 + 136) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 152) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 160) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 168) = OUTLINED_FUNCTION_9_4();
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v3 + 48);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

uint64_t SmartChunkingPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_97_1();
  static NSUserDefaults.smartChunkingPreprocessing.getter();
  if ((v1 & 1) != 0)
  {
    if (one-time initialization token for searchSignposter != -1)
      swift_once();
    v2 = type metadata accessor for OSSignposter();
    *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v2, (uint64_t)static Logging.searchSignposter);
    OSSignposter.logHandle.getter();
    OSSignpostID.init(log:)();
    v3 = OSSignposter.logHandle.getter();
    v4 = static os_signpost_type_t.begin.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v5 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v6 = OUTLINED_FUNCTION_55_1(v5);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v3, v4, v6, "SmartChunkingPreprocessing.preprocess", "", v5);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v8, v9);
    type metadata accessor for OSSignpostIntervalState();
    OUTLINED_FUNCTION_27();
    *(_QWORD *)(v0 + 184) = OUTLINED_FUNCTION_73_2();
    v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(_QWORD *)(v0 + 192) = v14;
    v14(v8, v9);
    *(_QWORD *)(v0 + 72) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v15;
    v15[2] = v13;
    v15[3] = v0 + 16;
    v15[4] = v12;
    v15[5] = v11;
    v15[6] = v0 + 72;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v16;
    *v16 = v0;
    v16[1] = SmartChunkingPreprocessing.preprocess(data:query:);
    return withTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  else
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logging.search);
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_65(v20))
    {
      v21 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v21);
      OUTLINED_FUNCTION_26_4(&dword_24315F000, v19, v22, "SmartChunkingPreprocessing disabled.");
      specialized UnsafeMutablePointer.deallocate()();
    }

    v23 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
  }
}

{
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  v2 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  v3 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 112);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
      v7 = "";
    }
    v8 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v9 = OUTLINED_FUNCTION_55_1(v8);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v3, v9, "SmartChunkingPreprocessing.preprocess", v7, v8);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  v11 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 136);

  v10(v11, v12);
  OUTLINED_FUNCTION_50();
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = a1;
  v8 = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 + 64);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult)?);
  v7[22] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(Int, SearchResult)>.Iterator);
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = swift_task_alloc();
  v7[26] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult));
  v7[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  int EnumTagSinglePayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  v35 = *(_QWORD *)(v0 + 136) + 7;
  result = swift_bridgeObjectRetain();
  v3 = 0;
  v34 = v1;
  while (1)
  {
    if (v3 == v1)
    {
      __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 208));
      v4 = v1;
      goto LABEL_6;
    }
    if (v3 >= v1)
      break;
    v5 = *(unint64_t **)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 208);
    v4 = v3 + 1;
    v7 = *(_QWORD *)(v0 + 216) + *(int *)(v37 + 48);
    outlined init with copy of SearchResult(*(_QWORD *)(v0 + 88)+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v3, v7, type metadata accessor for SearchResult);
    v8 = (uint64_t)v5 + *(int *)(v37 + 48);
    *v5 = v3;
    outlined init with take of SearchResult(v7, v8, type metadata accessor for SearchResult);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
LABEL_6:
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 208);
    outlined init with take of URL?(*(_QWORD *)(v0 + 224), v9, &demangling cache variable for type metadata for (offset: Int, element: SearchResult)?);
    if (__swift_getEnumTagSinglePayload(v9, 1, v10) == 1)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 240) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
      TaskGroup.makeAsyncIterator()();
      v33 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v33;
      *v33 = v0;
      v33[1] = closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
      OUTLINED_FUNCTION_54();
      return TaskGroup.Iterator.next(isolation:)();
    }
    v11 = *(uint64_t **)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 152);
    v40 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 96);
    v39 = *(_QWORD *)(v0 + 104);
    v38 = *v11;
    v15 = (uint64_t)v11 + *(int *)(v37 + 48);
    v16 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v12, 1, 1, v16);
    outlined init with take of SearchResult(v15, v13, type metadata accessor for SearchResult);
    v17 = (*(unsigned __int8 *)(v36 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v18 = (v35 + v17) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    v20 = *(_OWORD *)v14;
    v21 = *(_OWORD *)(v14 + 16);
    v22 = *(_OWORD *)(v14 + 32);
    *(_QWORD *)(v19 + 80) = *(_QWORD *)(v14 + 48);
    *(_OWORD *)(v19 + 48) = v21;
    *(_OWORD *)(v19 + 64) = v22;
    *(_OWORD *)(v19 + 32) = v20;
    outlined init with take of SearchResult(v13, v19 + v17, type metadata accessor for SearchResult);
    v23 = (_QWORD *)(v19 + v18);
    *v23 = v39;
    v23[1] = v40;
    *(_QWORD *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8)) = v38;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v12, v41, &demangling cache variable for type metadata for TaskPriority?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v41, 1, v16);
    outlined retain of SmartChunkingPreprocessing(v14);
    OUTLINED_FUNCTION_4_7();
    v25 = *(_QWORD *)(v0 + 160);
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of TaskPriority?(*(_QWORD *)(v0 + 160));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v25, v16);
    }
    v3 = v4;
    if (*(_QWORD *)(v19 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v26 = dispatch thunk of Actor.unownedExecutor.getter();
      v28 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    v1 = v34;
    v29 = **(_QWORD **)(v0 + 80);
    v30 = OUTLINED_FUNCTION_8();
    *(_QWORD *)(v30 + 16) = &async function pointer to partial apply for closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
    *(_QWORD *)(v30 + 24) = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
    v31 = v28 | v26;
    if (v28 | v26)
    {
      v31 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v26;
      *(_QWORD *)(v0 + 40) = v28;
    }
    v32 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v31;
    *(_QWORD *)(v0 + 64) = v29;
    swift_task_create();
    swift_release();
    result = outlined destroy of TaskPriority?(v32);
  }
  __break(1u);
  return result;
}

{
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

void closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(unint64_t **)(v0 + 176);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v1) == 1)
  {
    v3 = *(_QWORD **)(v0 + 120);
    v4 = *(_QWORD **)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    *v4 = *v3;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v5 = *(uint64_t **)(v0 + 120);
  v6 = *v2;
  outlined init with take of SearchResult((uint64_t)v2 + *(int *)(v1 + 48), *(_QWORD *)(v0 + 144), type metadata accessor for SearchResult);
  v7 = *v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = *(_QWORD **)(v0 + 120);
  specialized _ArrayBuffer._consumeAndCreateNew()();
  v7 = v11;
  *v10 = v11;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v6 < *(_QWORD *)(v7 + 16))
  {
    outlined assign with take of SearchResult(*(_QWORD *)(v0 + 144), v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 128) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 128) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 128) + 72) * v6);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v9;
    *v9 = v0;
    v9[1] = closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
    OUTLINED_FUNCTION_54();
    TaskGroup.Iterator.next(isolation:)();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v12;
  _QWORD *v13;

  *(_QWORD *)(v8 + 104) = a5;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 96) = a1;
  v12 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v8 + 32) = v12;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a4 + 48);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 120) = v13;
  *v13 = v8;
  v13[1] = closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return SmartChunkingPreprocessing.smartChunk(_:query:)(a5, a6, a7);
}

uint64_t closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_101_1();
  v2[9] = v0;
  v2[10] = v1;
  v2[11] = v3;
  *v4 = *v0;
  v2[16] = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 128);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD **)(v0 + 96);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult));
    SmartChunkingPreprocessing.buildSearchResult(with:searchResult:)(v2, v1, v3, (uint64_t)v5 + *(int *)(v6 + 48));
    OUTLINED_FUNCTION_6_1();
    *v5 = v4;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD **)(v0 + 96);
    v10 = (uint64_t)v9
        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, SearchResult))
                 + 48);
    *v9 = v7;
    outlined init with copy of SearchResult(v8, v10, type metadata accessor for SearchResult);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SmartChunkingPreprocessing.smartChunk(_:query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 488) = a2;
  *(_QWORD *)(v4 + 496) = a3;
  *(_QWORD *)(v4 + 480) = a1;
  v5 = type metadata accessor for CharacterSet();
  *(_QWORD *)(v4 + 504) = v5;
  *(_QWORD *)(v4 + 512) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 520) = OUTLINED_FUNCTION_18_5();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  *(_QWORD *)(v4 + 528) = v6;
  *(_QWORD *)(v4 + 536) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 544) = OUTLINED_FUNCTION_18_5();
  v7 = type metadata accessor for SearchResultType();
  *(_QWORD *)(v4 + 552) = v7;
  *(_QWORD *)(v4 + 560) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 568) = OUTLINED_FUNCTION_18_5();
  v8 = type metadata accessor for OSSignpostError();
  *(_QWORD *)(v4 + 576) = v8;
  *(_QWORD *)(v4 + 584) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 592) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 600) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 608) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 616) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 624) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 632) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 640) = OUTLINED_FUNCTION_9_4();
  type metadata accessor for EmailDocument(0);
  *(_QWORD *)(v4 + 648) = OUTLINED_FUNCTION_18_5();
  *(_QWORD *)(v4 + 656) = type metadata accessor for SearchResultItem(0);
  *(_QWORD *)(v4 + 664) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 672) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 680) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 688) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 696) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 704) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 712) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 720) = OUTLINED_FUNCTION_9_4();
  v9 = type metadata accessor for OSSignpostID();
  *(_QWORD *)(v4 + 728) = v9;
  *(_QWORD *)(v4 + 736) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 744) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 752) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 760) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 768) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 776) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 784) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 792) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 800) = OUTLINED_FUNCTION_9_4();
  *(_QWORD *)(v4 + 808) = OUTLINED_FUNCTION_9_4();
  *(_OWORD *)(v4 + 816) = *(_OWORD *)v3;
  *(_QWORD *)(v4 + 832) = *(_QWORD *)(v3 + 16);
  *(_BYTE *)(v4 + 992) = *(_BYTE *)(v3 + 24);
  *(_OWORD *)(v4 + 840) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 856) = *(_QWORD *)(v3 + 48);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_58_1();
}

uint64_t SmartChunkingPreprocessing.smartChunk(_:query:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _WORD *v61;
  uint64_t v62;
  os_signpost_type_t v63;
  os_signpost_id_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  NSObject *v69;
  os_log_type_t v70;
  _WORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _WORD *v96;
  uint64_t v97;
  os_signpost_type_t v98;
  os_signpost_id_t v99;
  _WORD *v100;
  uint64_t v101;
  os_signpost_type_t v102;
  os_signpost_id_t v103;
  os_log_type_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t);
  __int128 v115;
  uint64_t v116;
  char v117;
  __int128 v118;
  uint64_t v119;

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = type metadata accessor for OSSignposter();
  *(_QWORD *)(v0 + 864) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    v3 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v3);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v4, v5, "SmartChunkingPreprocessing.smartChunk", "", v3);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(_QWORD *)(v0 + 808);
  v7 = *(_QWORD *)(v0 + 800);
  v8 = *(_QWORD *)(v0 + 736);
  v9 = *(_QWORD *)(v0 + 728);
  v10 = *(_QWORD *)(v0 + 720);
  v11 = *(_QWORD *)(v0 + 480);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  type metadata accessor for OSSignpostIntervalState();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v0 + 872) = OUTLINED_FUNCTION_73_2();
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v0 + 880) = v12;
  OUTLINED_FUNCTION_126(v6);
  outlined init with copy of SearchResult(v11, v10, type metadata accessor for SearchResultItem);
  if (swift_getEnumCaseMultiPayload())
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v13 = *(_QWORD *)(v0 + 704);
    v14 = *(_QWORD *)(v0 + 696);
    v15 = OUTLINED_FUNCTION_120();
    v16 = __swift_project_value_buffer(v15, (uint64_t)static Logging.search);
    outlined init with copy of SearchResult(v6, v13, type metadata accessor for SearchResultItem);
    outlined init with copy of SearchResult(v6, v14, type metadata accessor for SearchResultItem);
    Logger.logObject.getter();
    v17 = OUTLINED_FUNCTION_131();
    v18 = OUTLINED_FUNCTION_95_1(v17);
    v19 = *(_QWORD *)(v0 + 704);
    v20 = *(_QWORD *)(v0 + 696);
    if (v18)
    {
      v21 = *(_QWORD *)(v0 + 568);
      v107 = *(_QWORD *)(v0 + 560);
      v109 = *(_QWORD *)(v0 + 552);
      v22 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_QWORD *)&v115 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v22 = 136315394;
      SearchResultItem.associatedValue.getter();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
      OUTLINED_FUNCTION_63_2();
      v23 = __swift_destroy_boxed_opaque_existential_1(v0 + 72);
      OUTLINED_FUNCTION_87_0(v23, v24, (uint64_t *)&v115);
      *(_QWORD *)(v0 + 376) = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_1();
      _s10OmniSearch0B6ResultVWOhTm_0(v19, type metadata accessor for SearchResultItem);
      *(_WORD *)(v22 + 12) = 2080;
      SearchResultItem.type.getter();
      SearchResultType.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v21, v109);
      OUTLINED_FUNCTION_90_1();
      *(_QWORD *)(v0 + 456) = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_79_2();
      OUTLINED_FUNCTION_60_2(&dword_24315F000, v16, (os_log_type_t)v16, "SmartChunkingPreprocessing.smartChunk this item:%s type is%s, doesn't need smartChunk.");
      OUTLINED_FUNCTION_59_2();
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_102_1(*(_QWORD *)(v0 + 704));
    OUTLINED_FUNCTION_102_1(v20);

    v43 = *(_QWORD *)(v0 + 784);
    _s10OmniSearch0B6ResultVWOhTm_0(*(_QWORD *)(v0 + 720), type metadata accessor for SearchResultItem);
    OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_99_1();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
    {
      OUTLINED_FUNCTION_43_2();
      OUTLINED_FUNCTION_106_1();
      OUTLINED_FUNCTION_75_0();
      if (OUTLINED_FUNCTION_42_3() != *MEMORY[0x24BEE7810])
        OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 632));
      v61 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_17_6(v61);
      OUTLINED_FUNCTION_35_2();
      OUTLINED_FUNCTION_7_7(&dword_24315F000, v62, v63, v64, "SmartChunkingPreprocessing.smartChunk");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v65 = *(_QWORD *)(v0 + 784);
LABEL_29:
    OUTLINED_FUNCTION_53_3();
    v12(v65, v43);
    swift_release();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_67_2();
    OUTLINED_FUNCTION_66_2();
    OUTLINED_FUNCTION_62_2();
    OUTLINED_FUNCTION_65_2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v66 = OUTLINED_FUNCTION_50_3();
    return v67(v66);
  }
  outlined init with take of SearchResult(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 648), type metadata accessor for EmailDocument);
  if (one-time initialization token for search != -1)
    swift_once();
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 496);
  v29 = OUTLINED_FUNCTION_120();
  v30 = __swift_project_value_buffer(v29, (uint64_t)static Logging.search);
  *(_QWORD *)(v0 + 888) = v30;
  outlined init with copy of SearchResult(v6, v27, type metadata accessor for SearchResultItem);
  OUTLINED_FUNCTION_104_0();
  v104 = v30;
  Logger.logObject.getter();
  v31 = OUTLINED_FUNCTION_131();
  v32 = OUTLINED_FUNCTION_38_1(v31);
  v33 = *(_QWORD *)(v0 + 712);
  v34 = *(_QWORD *)(v0 + 496);
  v105 = v12;
  if (v32)
  {
    v111 = *(_QWORD *)(v0 + 488);
    v35 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_QWORD *)&v115 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v35 = 136315394;
    SearchResultItem.associatedValue.getter();
    v36 = *(_QWORD *)(v0 + 136);
    v37 = *(_QWORD *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v36);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37);
    v40 = v39;
    __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, (uint64_t *)&v115);
    *(_QWORD *)(v0 + 464) = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0(v33, type metadata accessor for SearchResultItem);
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v34, (uint64_t *)&v115);
    *(_QWORD *)(v0 + 472) = v42;
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_130();
    OUTLINED_FUNCTION_60_2(&dword_24315F000, v30, (os_log_type_t)v28, "SmartChunkingPreprocessing.smartChunk start preprocess for email item:%s, query is:%s");
    OUTLINED_FUNCTION_59_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  _s10OmniSearch0B6ResultVWOhTm_0(v33, type metadata accessor for SearchResultItem);
  OUTLINED_FUNCTION_102_0();

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 648) + 56))
  {
    v69 = Logger.logObject.getter();
    v70 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_65(v70))
    {
      v71 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v71);
      OUTLINED_FUNCTION_26_4(&dword_24315F000, v69, v72, "SmartChunkingPreprocessing.smartChunk the body of emailDocument is empty.");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v43 = *(_QWORD *)(v0 + 792);
    v73 = *(_QWORD *)(v0 + 648);

    _s10OmniSearch0B6ResultVWOhTm_0(v73, type metadata accessor for EmailDocument);
    OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
    {
      OUTLINED_FUNCTION_43_2();
      OUTLINED_FUNCTION_106_1();
      OUTLINED_FUNCTION_75_0();
      if (OUTLINED_FUNCTION_42_3() != *MEMORY[0x24BEE7810])
        OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 640));
      v96 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_17_6(v96);
      OUTLINED_FUNCTION_35_2();
      OUTLINED_FUNCTION_7_7(&dword_24315F000, v97, v98, v99, "SmartChunkingPreprocessing.smartChunk");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v65 = *(_QWORD *)(v0 + 792);
    goto LABEL_29;
  }
  v44 = *(_QWORD *)(v0 + 856);
  v45 = *(_BYTE *)(v0 + 992);
  v46 = *(_QWORD *)(v0 + 832);
  v115 = *(_OWORD *)(v0 + 816);
  v116 = v46;
  v117 = v45;
  v118 = *(_OWORD *)(v0 + 840);
  v119 = v44;
  v47 = SmartChunkingPreprocessing.splitIntoWindows(_:)();
  v48 = *(_QWORD *)(v47 + 16);
  if (v48)
  {
    v106 = *(_QWORD *)(v0 + 512);
    v108 = *(_QWORD *)(v0 + 536);
    *(_QWORD *)&v115 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v49 = (uint64_t *)(v47 + 40);
    do
    {
      v50 = *(_QWORD *)(v0 + 544);
      v51 = *(_QWORD *)(v0 + 528);
      v52 = *(_QWORD *)(v0 + 520);
      v113 = *(_QWORD *)(v0 + 504);
      v53 = *v49;
      *(_QWORD *)(v0 + 312) = *(v49 - 1);
      *(_QWORD *)(v0 + 320) = v53;
      swift_bridgeObjectRetain();
      Regex.init(_regexString:version:)();
      *(_QWORD *)(v0 + 296) = 32;
      *(_QWORD *)(v0 + 304) = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      lazy protocol witness table accessor for type String and conformance String();
      lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>, &demangling cache variable for type metadata for Regex<Substring>, MEMORY[0x24BEE7460]);
      RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v50, v51);
      v54 = *(_QWORD *)(v0 + 336);
      *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 328);
      *(_QWORD *)(v0 + 352) = v54;
      static CharacterSet.whitespaces.getter();
      lazy protocol witness table accessor for type String and conformance String();
      v55 = StringProtocol.trimmingCharacters(in:)();
      v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v52, v113);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      v58 = v115;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v58 = v115;
      }
      v59 = *(_QWORD *)(v58 + 16);
      if (v59 >= *(_QWORD *)(v58 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v58 = v115;
      }
      *(_QWORD *)(v58 + 16) = v59 + 1;
      v60 = v58 + 16 * v59;
      *(_QWORD *)(v60 + 32) = v55;
      *(_QWORD *)(v60 + 40) = v57;
      v49 += 2;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v12 = v105;
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
    v58 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 896) = v58;
  _s10OmniSearch0B6ResultVWOhTm_0(*(_QWORD *)(v0 + 648), type metadata accessor for EmailDocument);
  v74 = *(_QWORD *)(v58 + 16);
  *(_QWORD *)(v0 + 904) = OUTLINED_FUNCTION_97_1();
  static NSUserDefaults.smartChunksPerDocument.getter();
  if (v75 >= v74)
  {
    v82 = *(_QWORD *)(v0 + 672);
    v83 = *(_QWORD *)(v0 + 664);
    v84 = *(NSObject **)(v0 + 480);
    OUTLINED_FUNCTION_6_1();
    outlined init with copy of SearchResult((uint64_t)v84, v82, type metadata accessor for SearchResultItem);
    outlined init with copy of SearchResult((uint64_t)v84, v83, type metadata accessor for SearchResultItem);
    Logger.logObject.getter();
    v85 = OUTLINED_FUNCTION_131();
    v86 = OUTLINED_FUNCTION_95_1(v85);
    v87 = *(_QWORD *)(v0 + 664);
    if (v86)
    {
      v88 = *(_QWORD *)(v0 + 568);
      v110 = *(_QWORD *)(v0 + 560);
      v112 = *(_QWORD *)(v0 + 552);
      v89 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_QWORD *)&v115 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v89 = 136315394;
      SearchResultItem.associatedValue.getter();
      v90 = *(_QWORD *)(v0 + 256);
      v91 = *(_QWORD *)(v0 + 264);
      OUTLINED_FUNCTION_129();
      (*(void (**)(uint64_t, uint64_t))(v91 + 32))(v90, v91);
      v92 = __swift_destroy_boxed_opaque_existential_1(v0 + 232);
      OUTLINED_FUNCTION_87_0(v92, v93, (uint64_t *)&v115);
      *(_QWORD *)(v0 + 424) = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_79_2();
      *(_WORD *)(v89 + 12) = 2080;
      SearchResultItem.type.getter();
      SearchResultType.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v88, v112);
      OUTLINED_FUNCTION_90_1();
      *(_QWORD *)(v0 + 392) = v95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_79_2();
      OUTLINED_FUNCTION_60_2(&dword_24315F000, v84, v104, "SmartChunkingPreprocessing.smartChunk this item:%s type is%s will skip chunk.");
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_102_1(*(_QWORD *)(v0 + 672));
    OUTLINED_FUNCTION_102_1(v87);

    v43 = *(_QWORD *)(v0 + 752);
    OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_99_1();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
    {
      OUTLINED_FUNCTION_43_2();
      OUTLINED_FUNCTION_106_1();
      OUTLINED_FUNCTION_75_0();
      if (OUTLINED_FUNCTION_42_3() != *MEMORY[0x24BEE7810])
        OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 600));
      v100 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_17_6(v100);
      OUTLINED_FUNCTION_35_2();
      OUTLINED_FUNCTION_7_7(&dword_24315F000, v101, v102, v103, "SmartChunkingPreprocessing.smartChunk");
      specialized UnsafeMutablePointer.deallocate()();
    }
    v65 = *(_QWORD *)(v0 + 752);
    goto LABEL_29;
  }
  v76 = *(_QWORD *)(v0 + 816);
  v78 = *(_QWORD *)(v0 + 488);
  v77 = *(_QWORD *)(v0 + 496);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v79 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v0 + 912) = v79;
  *(_OWORD *)(v79 + 16) = xmmword_24334DB60;
  *(_QWORD *)(v79 + 32) = v78;
  *(_QWORD *)(v79 + 40) = v77;
  v80 = *(int **)(*(_QWORD *)v76 + 96);
  *(_QWORD *)(v0 + 920) = v80;
  v114 = (uint64_t (*)(uint64_t))((char *)v80 + *v80);
  OUTLINED_FUNCTION_4_7();
  v81 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 928) = v81;
  *v81 = v0;
  v81[1] = SmartChunkingPreprocessing.smartChunk(_:query:);
  return v114(v79);
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _WORD *v34;
  uint64_t v35;
  os_signpost_type_t v36;
  os_signpost_id_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  os_log_type_t v42;
  NSObject *v43;
  uint64_t v44[9];
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_89_2();
  v46 = v1;
  v47 = v2;
  v45 = v0;
  v3 = v0[117];
  v4 = v0[120];
  if (v3 && v4)
  {
    outlined init with copy of SearchResult(v0[60], v0[86], type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_104_0();
    OUTLINED_FUNCTION_104_0();
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.debug.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = v0[86];
    v9 = v0[62];
    if (v7)
    {
      v41 = v0[61];
      v10 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v44[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v10 = 136315650;
      v43 = v5;
      SearchResultItem.associatedValue.getter();
      v42 = v6;
      v11 = v0[27];
      v12 = v0[28];
      __swift_project_boxed_opaque_existential_1(v0 + 24, v11);
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
      v15 = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 24));
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v44);
      v0[54] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_56_0();
      _s10OmniSearch0B6ResultVWOhTm_0(v8, type metadata accessor for SearchResultItem);
      *(_WORD *)(v10 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v9, v44);
      v0[55] = v17;
      OUTLINED_FUNCTION_82_2();
      OUTLINED_FUNCTION_130();
      *(_WORD *)(v10 + 22) = 2080;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Float]);
      v19 = MEMORY[0x2494F5E4C](v3, v18);
      OUTLINED_FUNCTION_107_0(v19, v20);
      v0[56] = v21;
      OUTLINED_FUNCTION_82_2();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_102_0();
      _os_log_impl(&dword_24315F000, v43, v42, "SmartChunkingPreprocessing.smartChunk item:%s, query is:%s, queryEmbeding is:%s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }
    _s10OmniSearch0B6ResultVWOhTm_0(v0[86], type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_102_0();

    v26 = *(_QWORD *)(v0[112] + 16);
    if (v26)
    {
      v27 = 0;
      v28 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
      do
      {
        v29 = v0[60];
        v30 = *(v28 - 1);
        v31 = *v28;
        swift_bridgeObjectRetain();
        closure #2 in SmartChunkingPreprocessing.smartChunk(_:query:)(v27, v30, v31, v29, v4);
        OUTLINED_FUNCTION_47();
        v28 += 2;
        ++v27;
      }
      while (v26 != v27);
      OUTLINED_FUNCTION_136();
    }
    v32 = (_QWORD *)swift_task_alloc();
    v0[122] = v32;
    *v32 = v0;
    v32[1] = SmartChunkingPreprocessing.smartChunk(_:query:);
    return SmartChunkingPreprocessing.cosineDistance(vector1:vector2:)(v3, v4);
  }
  else
  {
    OUTLINED_FUNCTION_136();
    swift_bridgeObjectRelease();
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_38_1(v23))
    {
      v24 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_51(v24);
      OUTLINED_FUNCTION_26_4(&dword_24315F000, v22, v25, "SmartChunkingPreprocessing.smartChunk failed. didn't get valid embeddings.");
      specialized UnsafeMutablePointer.deallocate()();
    }

    OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_100_1();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
    {
      OUTLINED_FUNCTION_20_4();
      OUTLINED_FUNCTION_85_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_19_5() != *MEMORY[0x24BEE7810])
        OUTLINED_FUNCTION_10_6(v0[76]);
      v34 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_17_6(v34);
      OUTLINED_FUNCTION_35_2();
      OUTLINED_FUNCTION_7_7(&dword_24315F000, v35, v36, v37, "SmartChunkingPreprocessing.smartChunk");
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_53_3();
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_67_2();
    OUTLINED_FUNCTION_66_2();
    OUTLINED_FUNCTION_62_2();
    OUTLINED_FUNCTION_65_2();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_122();
    v38 = OUTLINED_FUNCTION_50_3();
    return OUTLINED_FUNCTION_13_6(v38, v39, v40);
  }
}

{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_103_1();
  v1 = (void *)Logger.logObject.getter();
  v2 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_98_1(v2))
  {
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_44_3(4.8149e-34);
    v3 = OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_107_0(v3, v4);
    OUTLINED_FUNCTION_51_3(v5);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_78_2(&dword_24315F000, v6, v7, "SmartChunkingPreprocessing.smartChunk failed. %s");
    OUTLINED_FUNCTION_88_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_45_2();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_19_5() != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 592));
    v8 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_17_6(v8);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_7_7(&dword_24315F000, v9, v10, v11, "SmartChunkingPreprocessing.smartChunk");
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_53_3();
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_122();
  v12 = OUTLINED_FUNCTION_50_3();
  return OUTLINED_FUNCTION_13_6(v12, v13, v14);
}

{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_103_1();
  v1 = (void *)Logger.logObject.getter();
  v2 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_98_1(v2))
  {
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_44_3(4.8149e-34);
    v3 = OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_107_0(v3, v4);
    OUTLINED_FUNCTION_51_3(v5);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_78_2(&dword_24315F000, v6, v7, "SmartChunkingPreprocessing.smartChunk failed. %s");
    OUTLINED_FUNCTION_88_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();
  OUTLINED_FUNCTION_21_4();

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_45_2();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_19_5() != *MEMORY[0x24BEE7810])
      OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 592));
    v8 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_17_6(v8);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_7_7(&dword_24315F000, v9, v10, v11, "SmartChunkingPreprocessing.smartChunk");
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_53_3();
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_122();
  v12 = OUTLINED_FUNCTION_50_3();
  return OUTLINED_FUNCTION_13_6(v12, v13, v14);
}

uint64_t SmartChunkingPreprocessing.smartChunk(_:query:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD);

  v3 = (_QWORD *)*v2;
  v3[117] = a1;
  v3[118] = v1;
  OUTLINED_FUNCTION_128();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_54();
    return OUTLINED_FUNCTION_58_1();
  }
  else
  {
    v5 = (int *)v3[115];
    swift_bridgeObjectRelease();
    v7 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    v3[119] = v6;
    *v6 = v3;
    v6[1] = SmartChunkingPreprocessing.smartChunk(_:query:);
    return v7(v3[112]);
  }
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 960) = a1;
  *(_QWORD *)(v3 + 968) = v1;
  OUTLINED_FUNCTION_128();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 984) = a1;
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_42();
}

void SmartChunkingPreprocessing.smartChunk(_:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  _WORD *v31;
  uint64_t v32;
  os_signpost_type_t v33;
  os_signpost_id_t v34;
  _WORD *v35;
  uint64_t v36;
  os_signpost_type_t v37;
  os_signpost_id_t v38;
  os_log_type_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42[3];

  v1 = *(_QWORD *)(v0 + 984);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_1();
    static NSUserDefaults.smartChunksPerDocument.getter();
    v4 = specialized Array<A>.argminN(_:)(v3, v2);
    OUTLINED_FUNCTION_121();
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 896);
      v6 = *(_QWORD *)(v0 + 888);
      v7 = *(_QWORD *)(v0 + 680);
      v8 = *(_QWORD *)(v0 + 480);
      OUTLINED_FUNCTION_115();
      v9 = specialized Sequence.compactMap<A>(_:)((uint64_t)v4, v5);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 384) = v9;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String], MEMORY[0x24BEE12B0]);
      v10 = BidirectionalCollection<>.joined(separator:)();
      v12 = v11;
      OUTLINED_FUNCTION_121();
      outlined init with copy of SearchResult(v8, v7, type metadata accessor for SearchResultItem);
      OUTLINED_FUNCTION_104_0();
      swift_bridgeObjectRetain();
      v13 = Logger.logObject.getter();
      v14 = static os_log_type_t.info.getter();
      v15 = OUTLINED_FUNCTION_65(v14);
      v16 = *(_QWORD *)(v0 + 680);
      v41 = v12;
      if (v15)
      {
        v17 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        v42[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_DWORD *)v17 = 136315651;
        SearchResultItem.associatedValue.getter();
        v39 = v6;
        OUTLINED_FUNCTION_129();
        OUTLINED_FUNCTION_63_2();
        v18 = __swift_destroy_boxed_opaque_existential_1(v0 + 152);
        OUTLINED_FUNCTION_87_0(v18, v19, v42);
        *(_QWORD *)(v0 + 400) = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_6_1();
        _s10OmniSearch0B6ResultVWOhTm_0(v16, type metadata accessor for SearchResultItem);
        *(_WORD *)(v17 + 12) = 2080;
        v21 = swift_bridgeObjectRetain();
        v22 = MEMORY[0x2494F5E4C](v21, MEMORY[0x24BEE1768]);
        v24 = v23;
        OUTLINED_FUNCTION_56_0();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, v42);
        *(_QWORD *)(v0 + 408) = v25;
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_102_0();
        *(_WORD *)(v17 + 22) = 2085;
        OUTLINED_FUNCTION_115();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, v42);
        *(_QWORD *)(v0 + 416) = v26;
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_130();
        _os_log_impl(&dword_24315F000, v13, v39, "SmartChunkingPreprocessing.smartChunk finished. ItemId is:%s ChunkIndex is:%s, SmartChunkText is:%{sensitive}s", (uint8_t *)v17, 0x20u);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }
      _s10OmniSearch0B6ResultVWOhTm_0(v16, type metadata accessor for SearchResultItem);
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_102_0();

      OSSignposter.logHandle.getter();
      OUTLINED_FUNCTION_45_2();
      static os_signpost_type_t.end.getter();
      if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
      {
        OUTLINED_FUNCTION_20_4();
        OUTLINED_FUNCTION_85_2();
        OUTLINED_FUNCTION_50();
        if (OUTLINED_FUNCTION_19_5() != *MEMORY[0x24BEE7810])
          OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 624));
        v31 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        OUTLINED_FUNCTION_17_6(v31);
        OUTLINED_FUNCTION_35_2();
        OUTLINED_FUNCTION_7_7(&dword_24315F000, v32, v33, v34, "SmartChunkingPreprocessing.smartChunk");
        specialized UnsafeMutablePointer.deallocate()();
      }
      OUTLINED_FUNCTION_53_3();
      OUTLINED_FUNCTION_32_1();
      v40 = v10;
    }
    else
    {
      swift_bridgeObjectRelease();
      v27 = Logger.logObject.getter();
      v28 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_38_1(v28))
      {
        v29 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        OUTLINED_FUNCTION_51(v29);
        OUTLINED_FUNCTION_26_4(&dword_24315F000, v27, v30, "SmartChunkingPreprocessing.smartChunk didn't find valid chunk.");
        specialized UnsafeMutablePointer.deallocate()();
      }

      OSSignposter.logHandle.getter();
      OUTLINED_FUNCTION_100_1();
      static os_signpost_type_t.end.getter();
      if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
      {
        OUTLINED_FUNCTION_20_4();
        OUTLINED_FUNCTION_85_2();
        OUTLINED_FUNCTION_50();
        if (OUTLINED_FUNCTION_19_5() != *MEMORY[0x24BEE7810])
          OUTLINED_FUNCTION_10_6(*(_QWORD *)(v0 + 616));
        v35 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        OUTLINED_FUNCTION_17_6(v35);
        OUTLINED_FUNCTION_35_2();
        OUTLINED_FUNCTION_7_7(&dword_24315F000, v36, v37, v38, "SmartChunkingPreprocessing.smartChunk");
        specialized UnsafeMutablePointer.deallocate()();
      }
      OUTLINED_FUNCTION_53_3();
      OUTLINED_FUNCTION_32_1();
      v40 = 0;
      v41 = 0;
    }
    swift_release();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_67_2();
    OUTLINED_FUNCTION_66_2();
    OUTLINED_FUNCTION_62_2();
    OUTLINED_FUNCTION_65_2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t, unint64_t))(v0 + 8))(v40, v41);
  }
  else
  {
    __break(1u);
  }
}

void SmartChunkingPreprocessing.buildSearchResult(with:searchResult:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v55 = a1;
  v56 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v6);
  v59 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for EmailDocument(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - v15;
  v17 = type metadata accessor for SearchResultItem(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a4;
  outlined init with copy of SearchResult(a3, a4, type metadata accessor for SearchResult);
  outlined init with copy of SearchResult(a3, (uint64_t)v19, type metadata accessor for SearchResultItem);
  if (swift_getEnumCaseMultiPayload())
  {
    _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v19, type metadata accessor for SearchResultItem);
  }
  else
  {
    outlined init with take of SearchResult((uint64_t)v19, (uint64_t)v16, type metadata accessor for EmailDocument);
    v20 = *(_QWORD *)v16;
    v21 = *((_QWORD *)v16 + 1);
    v51 = *((_QWORD *)v16 + 2);
    v52 = v20;
    v22 = *((_QWORD *)v16 + 3);
    v46 = v21;
    v47 = v22;
    v23 = *((_QWORD *)v16 + 5);
    v50 = *((_QWORD *)v16 + 4);
    v24 = *((_QWORD *)v16 + 9);
    v44 = *((_QWORD *)v16 + 8);
    v45 = v23;
    v25 = *((_QWORD *)v16 + 10);
    v42 = *((_QWORD *)v16 + 11);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v16[v11[12]], v58);
    v26 = v11[13];
    v27 = v11[14];
    v48 = v8;
    v49 = v10;
    v43 = *(_QWORD *)&v16[v26];
    v28 = *(_QWORD *)&v16[v27];
    v29 = v11[15];
    v30 = v11[16];
    v53 = v17;
    v31 = *(_QWORD *)&v16[v29];
    v54 = v16[v30];
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)&v16[v11[17]], v59, &demangling cache variable for type metadata for URL?);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v25;
    swift_bridgeObjectRetain();
    v33 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v46;
    swift_bridgeObjectRetain();
    v36 = v47;
    swift_bridgeObjectRetain();
    _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v16, type metadata accessor for EmailDocument);
    v37 = &v14[v11[18]];
    *(_QWORD *)v14 = v52;
    *((_QWORD *)v14 + 1) = v35;
    *((_QWORD *)v14 + 2) = v51;
    *((_QWORD *)v14 + 3) = v36;
    v38 = v49;
    v39 = v45;
    *((_QWORD *)v14 + 4) = v50;
    *((_QWORD *)v14 + 5) = v39;
    v40 = v56;
    *((_QWORD *)v14 + 6) = v55;
    *((_QWORD *)v14 + 7) = v40;
    *((_QWORD *)v14 + 8) = v44;
    *((_QWORD *)v14 + 9) = v24;
    *((_QWORD *)v14 + 10) = v32;
    *((_QWORD *)v14 + 11) = v33;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v14[v11[12]], v38, v58);
    *(_QWORD *)&v14[v11[13]] = v43;
    *(_QWORD *)&v14[v11[14]] = v34;
    *(_QWORD *)&v14[v11[15]] = v31;
    v14[v11[16]] = v54;
    outlined init with take of URL?(v59, (uint64_t)&v14[v11[17]], &demangling cache variable for type metadata for URL?);
    *(_OWORD *)v37 = 0u;
    *((_OWORD *)v37 + 1) = 0u;
    *((_QWORD *)v37 + 4) = 0;
    swift_bridgeObjectRetain();
    v41 = v57;
    _s10OmniSearch0B6ResultVWOhTm_0(v57, type metadata accessor for SearchResultItem);
    outlined init with take of SearchResult((uint64_t)v14, v41, type metadata accessor for EmailDocument);
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t SmartChunkingPreprocessing.splitIntoWindows(_:)()
{
  uint64_t v0;
  unint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(v0 + 32);
  if (*(_BYTE *)(v0 + 24))
    v3 = 0;
  else
    v3 = 32;
  if (*(_BYTE *)(v0 + 24))
    v4 = 0xE000000000000000;
  else
    v4 = 0xE100000000000000;
  v5 = lazy protocol witness table accessor for type String and conformance String();
  v6 = MEMORY[0x2494F61F4](v3, v4, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  if (v2 >= (uint64_t)v7)
  {
    if (!v7)
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    v9 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    type metadata accessor for NSUserDefaults();
    v8 = 0;
    v9 = MEMORY[0x24BEE4AF8];
    v10 = v2;
    v11 = v7;
    do
    {
      if (v10 < v8)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      if (v8 < 0)
        goto LABEL_42;
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 < v8 || (uint64_t)v12 < v10)
        goto LABEL_43;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArraySlice<Substring>);
      lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ArraySlice<Substring> and conformance ArraySlice<A>, &demangling cache variable for type metadata for ArraySlice<Substring>, MEMORY[0x24BEE2180]);
      lazy protocol witness table accessor for type Substring and conformance Substring();
      v14 = Sequence<>.joined(separator:)();
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v9 = v21;
      }
      v1 = *(_QWORD *)(v9 + 16);
      if (v1 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v9 = v22;
      }
      *(_QWORD *)(v9 + 16) = v1 + 1;
      v17 = v9 + 16 * v1;
      *(_QWORD *)(v17 + 32) = v14;
      *(_QWORD *)(v17 + 40) = v16;
      static NSUserDefaults.smartChunkingOverlap.getter();
      v7 = v18;
      swift_bridgeObjectRelease();
      v19 = v2 - v7;
      if (__OFSUB__(v2, v7))
        goto LABEL_44;
      v20 = __OFADD__(v8, v19);
      v8 += v19;
      if (v20)
        goto LABEL_45;
      v10 = v8 + v2;
      if (__OFADD__(v8, v2))
        goto LABEL_46;
    }
    while (v10 < v11);
    v7 = v11;
    if (v8 >= v11)
      goto LABEL_38;
  }
  if (__OFSUB__(v7, v2))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v23 = (v7 - v2) & ~((uint64_t)(v7 - v2) >> 63);
  if (v7 < v23)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v24 = *(_QWORD *)(v6 + 16);
  if (v24 >= v23 && v24 >= v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArraySlice<Substring>);
    lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ArraySlice<Substring> and conformance ArraySlice<A>, &demangling cache variable for type metadata for ArraySlice<Substring>, MEMORY[0x24BEE2180]);
    lazy protocol witness table accessor for type Substring and conformance Substring();
    v1 = Sequence<>.joined(separator:)();
    v7 = v26;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_35;
    goto LABEL_50;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v9 = v30;
LABEL_35:
  v27 = *(_QWORD *)(v9 + 16);
  if (v27 >= *(_QWORD *)(v9 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v9 = v31;
  }
  *(_QWORD *)(v9 + 16) = v27 + 1;
  v28 = v9 + 16 * v27;
  *(_QWORD *)(v28 + 32) = v1;
  *(_QWORD *)(v28 + 40) = v7;
LABEL_38:
  swift_bridgeObjectRelease();
  return v9;
}

void closure #2 in SmartChunkingPreprocessing.smartChunk(_:query:)(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = type metadata accessor for SearchResultItem(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for search != -1)
    swift_once();
  v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(a4, (uint64_t)v12, type metadata accessor for SearchResultItem);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v33 = v15;
    v16 = swift_slowAlloc();
    v34 = a2;
    v17 = v16;
    v32 = swift_slowAlloc();
    v38 = v32;
    *(_DWORD *)v17 = 136315906;
    SearchResultItem.associatedValue.getter();
    v19 = v36;
    v18 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18);
    v22 = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v38);
    v35[0] = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v12, type metadata accessor for SearchResultItem);
    *(_WORD *)(v17 + 12) = 2048;
    v35[0] = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, a3, &v38);
    v35[0] = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 32) = 2080;
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a5 + 16) > a1)
    {
      v25 = swift_bridgeObjectRetain();
      v26 = MEMORY[0x2494F5E4C](v25, MEMORY[0x24BEE14E8]);
      v28 = v27;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, &v38);
      v35[0] = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24315F000, v14, (os_log_type_t)v33, "SmartChunkingPreprocessing.smartChunk item:%s, chunkIndex is:%ld, chunk is:%s, chunkEmbeding is:%s", (uint8_t *)v17, 0x2Au);
      v30 = v32;
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v30, -1, -1);
      MEMORY[0x2494F6D70](v17, -1, -1);

      return;
    }
    __break(1u);
  }
  else
  {
    _s10OmniSearch0B6ResultVWOhTm_0((uint64_t)v12, type metadata accessor for SearchResultItem);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t SmartChunkingPreprocessing.cosineDistance(vector1:vector2:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t SmartChunkingPreprocessing.cosineDistance(vector1:vector2:)()
{
  uint64_t v0;
  uint64_t v1;
  float *v2;
  float *v3;
  float *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  vDSP_Length v10;
  const float *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 16);
  v30 = *(_QWORD *)(v1 + 16);
  if (v30)
  {
    v2 = (float *)(v0 + 32);
    v3 = (float *)(v0 + 36);
    v4 = (float *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v5 + 16);
    v26 = (uint64_t *)(v5 + 32);
    v27 = v1 + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    v28 = v0;
    v29 = v6;
    do
    {
      if (v6)
      {
        v31 = v7;
        v32 = v8;
        v9 = *(_QWORD *)(v27 + 8 * v7);
        v10 = *(_QWORD *)(v9 + 16);
        v11 = (const float *)(v9 + 32);
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_115();
        v12 = v26;
        v13 = v6;
        v14 = MEMORY[0x24BEE4AF8];
        do
        {
          v15 = *v12;
          *v2 = 0.0;
          swift_bridgeObjectRetain();
          vDSP_dotpr(v11, 1, (const float *)(v15 + 32), 1, v2, v10);
          *v3 = 0.0;
          vDSP_svesq(v11, 1, v3, v10);
          *v4 = 0.0;
          vDSP_svesq((const float *)(v15 + 32), 1, v4, *(_QWORD *)(v15 + 16));
          swift_bridgeObjectRelease();
          v16 = *v2;
          v17 = *v3;
          v18 = *v4;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_110_0();
            v14 = v20;
          }
          v19 = *(_QWORD *)(v14 + 16);
          if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            OUTLINED_FUNCTION_110_0();
            v14 = v21;
          }
          *(_QWORD *)(v14 + 16) = v19 + 1;
          *(float *)(v14 + 4 * v19 + 32) = 1.0 - (float)(v16 / (float)(sqrtf(v17) * sqrtf(v18)));
          ++v12;
          --v13;
        }
        while (v13);
        v0 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v31;
        v8 = v32;
      }
      else
      {
        v14 = MEMORY[0x24BEE4AF8];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_109_0();
        v8 = v23;
      }
      v22 = *(_QWORD *)(v8 + 16);
      if (v22 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        OUTLINED_FUNCTION_109_0();
        v8 = v24;
      }
      ++v7;
      *(_QWORD *)(v8 + 16) = v22 + 1;
      *(_QWORD *)(v8 + 8 * v22 + 32) = v14;
      v6 = v29;
    }
    while (v7 != v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t protocol witness for SearchEntityPreprocess.preprocess(data:query:) in conformance SmartChunkingPreprocessing(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = protocol witness for SearchEntityPreprocess.preprocess(data:query:) in conformance SmartChunkingPreprocessing;
  return SmartChunkingPreprocessing.preprocess(data:query:)(a1, a2, a3);
}

uint64_t protocol witness for SearchEntityPreprocess.preprocess(data:query:) in conformance SmartChunkingPreprocessing(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  OUTLINED_FUNCTION_118();
  return closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)(v4, v5, v6, v7, v8, v9, v2);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TQ0_()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized static Array._adoptStorage(_:count:)(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

unint64_t lazy protocol witness table accessor for type SmartChunkingTruncationConfig.SmartChunkingTruncationMode and conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SmartChunkingTruncationConfig.SmartChunkingTruncationMode and conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode;
  if (!lazy protocol witness table cache variable for type SmartChunkingTruncationConfig.SmartChunkingTruncationMode and conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SmartChunkingTruncationConfig.SmartChunkingTruncationMode, &type metadata for SmartChunkingTruncationConfig.SmartChunkingTruncationMode);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SmartChunkingTruncationConfig.SmartChunkingTruncationMode and conformance SmartChunkingTruncationConfig.SmartChunkingTruncationMode);
  }
  return result;
}

uint64_t initializeWithCopy for SmartChunkingTruncationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SmartChunkingTruncationConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SmartChunkingTruncationConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartChunkingTruncationConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmartChunkingTruncationConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SmartChunkingTruncationConfig()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t storeEnumTagSinglePayload for SmartChunkingTruncationConfig.SmartChunkingTruncationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24318A180 + 4 * byte_24334E4E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24318A1B4 + 4 * byte_24334E4E0[v4]))();
}

uint64_t sub_24318A1B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24318A1BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24318A1C4);
  return result;
}

uint64_t sub_24318A1D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24318A1D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24318A1DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24318A1E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SmartChunkingTruncationConfig.SmartChunkingTruncationMode()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for SmartChunkingPreprocessing()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SmartChunkingPreprocessing(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SmartChunkingPreprocessing(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SmartChunkingPreprocessing(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartChunkingPreprocessing(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmartChunkingPreprocessing(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SmartChunkingPreprocessing()
{
  OUTLINED_FUNCTION_103_0();
}

void specialized MutableCollection<>.sort(by:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v5);
  *a1 = v2;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SearchResult))
                 - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v3);
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)((int64_t)v6);
  *a1 = v3;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  char *v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  float v12;
  uint64_t v13;
  float v14;
  float *v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  float v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  Swift::Int *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  Swift::Int v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
      return;
    }
    goto LABEL_130;
  }
  v5 = v4;
  specialized static Array._allocateUninitialized(_:)(v3 / 2);
  v93 = v6;
  v97 = v7;
  v95 = v3;
  v91 = a1;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_96:
    if (v32 < 2)
    {
LABEL_107:
      swift_bridgeObjectRelease();
      if (v95 >= -1)
      {
        *(_QWORD *)(v93 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_135;
    }
    v83 = *v91;
    while (1)
    {
      v84 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v83)
        goto LABEL_139;
      v85 = *(_QWORD *)(v10 + 32 + 16 * v84);
      v86 = *(_QWORD *)(v10 + 32 + 16 * (v32 - 1) + 8);
      specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v83 + 16 * v85), (char *)(v83 + 16 * *(_QWORD *)(v10 + 32 + 16 * (v32 - 1))), v83 + 16 * v86, v97);
      if (v1)
        goto LABEL_92;
      if (v86 < v85)
        goto LABEL_125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v10);
        v10 = v89;
      }
      if (v84 >= *(_QWORD *)(v10 + 16))
        goto LABEL_126;
      v87 = (_QWORD *)(v10 + 32 + 16 * v84);
      *v87 = v85;
      v87[1] = v86;
      v88 = *(_QWORD *)(v10 + 16);
      if (v32 > v88)
        goto LABEL_127;
      memmove((void *)(v10 + 32 + 16 * (v32 - 1)), (const void *)(v10 + 32 + 16 * v32), 16 * (v88 - v32));
      *(_QWORD *)(v10 + 16) = v88 - 1;
      v32 = v88 - 1;
      if (v88 <= 2)
        goto LABEL_107;
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v92 = *a1 + 8;
  v90 = *a1 + 40;
  v10 = MEMORY[0x24BEE4AF8];
  v94 = v5;
  v96 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v92 + 16 * v8);
      v13 = 16 * v11;
      v14 = *(float *)(v92 + 16 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = (float *)(v90 + 16 * v11);
        while (v12 < v14 != *v15 >= *(v15 - 4))
        {
          ++v8;
          v15 += 4;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v14)
      {
        if (v8 < v11)
          goto LABEL_132;
        if (v11 < v8)
        {
          v16 = 16 * v8 - 16;
          v17 = v8;
          v18 = v11;
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_138;
              v19 = (_OWORD *)(v9 + v13);
              v20 = v9 + v16;
              v21 = *(_QWORD *)(v9 + v13);
              v22 = *(_DWORD *)(v9 + v13 + 8);
              if (v13 != v16 || (unint64_t)v19 >= v9 + v16 + 16)
                *v19 = *(_OWORD *)v20;
              *(_QWORD *)v20 = v21;
              *(_DWORD *)(v20 + 8) = v22;
            }
            ++v18;
            v16 -= 16;
            v13 += 16;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_129;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_133;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_134;
        if (v8 != v24)
        {
          v25 = v9 + 16 * v8;
          do
          {
            v26 = v25;
            v27 = v11;
            do
            {
              v28 = *(float *)(v26 + 8);
              if (v28 >= *(float *)(v26 - 8))
                break;
              if (!v9)
                goto LABEL_136;
              v29 = *(_QWORD *)v26;
              *(_OWORD *)v26 = *(_OWORD *)(v26 - 16);
              *(float *)(v26 - 8) = v28;
              *(_QWORD *)(v26 - 16) = v29;
              v26 -= 16;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 16;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v81;
    }
    v31 = *(_QWORD *)(v10 + 16);
    v30 = *(_QWORD *)(v10 + 24);
    v32 = v31 + 1;
    v9 = v96;
    if (v31 >= v30 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1, (char *)v10);
      v9 = v96;
      v10 = v82;
    }
    *(_QWORD *)(v10 + 16) = v32;
    v33 = v10 + 32;
    v34 = (Swift::Int *)(v10 + 32 + 16 * v31);
    *v34 = v11;
    v34[1] = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_87:
    v5 = v94;
    v3 = v95;
    if (v8 >= v95)
      goto LABEL_96;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = v33 + 16 * v32;
      v41 = *(_QWORD *)(v40 - 64);
      v42 = *(_QWORD *)(v40 - 56);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_113;
      v45 = *(_QWORD *)(v40 - 48);
      v44 = *(_QWORD *)(v40 - 40);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_114;
      v47 = v32 - 2;
      v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      v50 = *v48;
      v49 = v48[1];
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_115;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_117;
      if (v52 >= v43)
      {
        v70 = (uint64_t *)(v33 + 16 * v35);
        v72 = *v70;
        v71 = v70[1];
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_123;
        v63 = v38 < v73;
        goto LABEL_76;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *(_QWORD *)(v10 + 32);
        v65 = *(_QWORD *)(v10 + 40);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_70;
      }
      v37 = *(_QWORD *)(v10 + 32);
      v36 = *(_QWORD *)(v10 + 40);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_116;
    v47 = v32 - 2;
    v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    v55 = *v53;
    v54 = v53[1];
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_118;
    v59 = (uint64_t *)(v33 + 16 * v35);
    v61 = *v59;
    v60 = v59[1];
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_120;
    if (__OFADD__(v57, v62))
      goto LABEL_122;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_76:
      if (v63)
        v35 = v47;
      goto LABEL_78;
    }
LABEL_70:
    if ((v58 & 1) != 0)
      goto LABEL_119;
    v66 = (uint64_t *)(v33 + 16 * v35);
    v68 = *v66;
    v67 = v66[1];
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_121;
    if (v69 < v57)
      goto LABEL_87;
LABEL_78:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v9)
      goto LABEL_137;
    v76 = (uint64_t *)(v33 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v33 + 16 * v35);
    v79 = v78[1];
    specialized _merge<A>(low:mid:high:buffer:by:)((char *)(v9 + 16 * *v76), (char *)(v9 + 16 * *v78), v9 + 16 * v79, v97);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_110;
    if (v35 > *(_QWORD *)(v74 + 16))
      goto LABEL_111;
    *v76 = v77;
    *(_QWORD *)(v33 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v74 + 16);
    if (v35 >= v80)
      goto LABEL_112;
    v10 = v74;
    v32 = v80 - 1;
    memmove((void *)(v33 + 16 * v35), v78 + 2, 16 * (v80 - 1 - v35));
    *(_QWORD *)(v74 + 16) = v80 - 1;
    v9 = v96;
    if (v80 <= 2)
      goto LABEL_87;
  }
LABEL_92:
  swift_bridgeObjectRelease();
  if (v95 < -1)
    goto LABEL_131;
  *(_QWORD *)(v93 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3;
    while (2)
    {
      v6 = v5;
      v7 = result;
      do
      {
        v8 = *(float *)(v6 + 8);
        if (v8 >= *(float *)(v6 - 8))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_QWORD *)v6;
        *(_OWORD *)v6 = *(_OWORD *)(v6 - 16);
        *(float *)(v6 - 8) = v8;
        *(_QWORD *)(v6 - 16) = v9;
        v6 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v20;
  char *v21;
  char *v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_45;
    v20 = (char *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 16;
      if (*(float *)(v12 - 8) >= *((float *)v6 - 2))
      {
        v22 = (char *)(v12 - 16);
        v24 = v21 != (char *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v24)
          goto LABEL_41;
      }
      else
      {
        v22 = v6 - 16;
        v23 = v21 != v6 || v20 >= v6;
        v6 -= 16;
        if (!v23)
          goto LABEL_41;
      }
      *(_OWORD *)v20 = *(_OWORD *)v22;
LABEL_41:
      v20 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    do
    {
      if (*((float *)v6 + 2) >= *((float *)v4 + 2))
      {
        v14 = v7 == v4;
        v15 = v4;
        v4 += 16;
        if (v14 && v7 < v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 16;
        if (v14 && v7 < v6)
          goto LABEL_18;
      }
      *(_OWORD *)v7 = *(_OWORD *)v15;
LABEL_18:
      v7 += 16;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_45:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

uint64_t outlined assign with take of SearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24318ACFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = type metadata accessor for SearchResult(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + v2;
  type metadata accessor for SearchResultItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      OUTLINED_FUNCTION_94_1();
      OUTLINED_FUNCTION_114_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for EmailDocument(0);
      v5 = OUTLINED_FUNCTION_28_3();
      OUTLINED_FUNCTION_61_1(v5);
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      v6 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_5_7(v6))
        OUTLINED_FUNCTION_4_8();
      v7 = *(int *)(v4 + 72);
      goto LABEL_19;
    case 1u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      OUTLINED_FUNCTION_94_1();
      OUTLINED_FUNCTION_114_0();
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for MobileSMSDocument(0);
      v9 = OUTLINED_FUNCTION_28_3();
      if (!OUTLINED_FUNCTION_5_7(v9))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      OUTLINED_FUNCTION_12_5();
      goto LABEL_18;
    case 2u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      v8 = type metadata accessor for CalendarEvent(0);
      OUTLINED_FUNCTION_108_0();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_0_10();
      v10 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_5_7(v10))
        OUTLINED_FUNCTION_4_8();
LABEL_18:
      v7 = *(int *)(v8 + 56);
LABEL_19:
      if (!*(_QWORD *)(v3 + v7))
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    case 3u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_4();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_114_0();
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for Photo(0);
      v12 = OUTLINED_FUNCTION_28_3();
      if (!OUTLINED_FUNCTION_5_7(v12))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      v13 = *(int *)(v11 + 64);
      goto LABEL_66;
    case 4u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      OUTLINED_FUNCTION_94_1();
      v14 = type metadata accessor for NoteDocument(0);
      OUTLINED_FUNCTION_108_0();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      v13 = *(int *)(v14 + 40);
      goto LABEL_66;
    case 5u:
      OUTLINED_FUNCTION_15_3();

      v13 = *(int *)(type metadata accessor for FileDocument(0) + 24);
      goto LABEL_66;
    case 6u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      v15 = type metadata accessor for WalletTransaction(0);
      v16 = OUTLINED_FUNCTION_28_3();
      if (!OUTLINED_FUNCTION_5_7(v16))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v13 = *(int *)(v15 + 52);
      goto LABEL_66;
    case 7u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      v17 = type metadata accessor for WalletPass(0);
      v18 = OUTLINED_FUNCTION_28_3();
      if (!OUTLINED_FUNCTION_5_7(v18))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_0_10();
      v13 = *(int *)(v17 + 36);
      goto LABEL_66;
    case 8u:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_4();
      swift_bridgeObjectRelease();
      v13 = *(int *)(type metadata accessor for Contact(0) + 36);
      goto LABEL_66;
    case 9u:
      OUTLINED_FUNCTION_15_3();
      v19 = type metadata accessor for FlightReservation(0);
      OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v20 = OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_49_2(v20);
      OUTLINED_FUNCTION_132(*(int *)(v19 + 64));
      type metadata accessor for TimeZone();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_3_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v21 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
      goto LABEL_63;
    case 0xAu:
      OUTLINED_FUNCTION_15_3();
      v22 = type metadata accessor for HotelReservation(0);
      v23 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_5_7(v23))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v24 = OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_49_2(v24);
      OUTLINED_FUNCTION_132(*(int *)(v22 + 52));
      v25 = OUTLINED_FUNCTION_91_1();
      if (!OUTLINED_FUNCTION_5_7(v25))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      goto LABEL_64;
    case 0xBu:
      OUTLINED_FUNCTION_15_3();
      type metadata accessor for RestaurantReservation(0);
      v26 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_5_7(v26))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v27 = OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_61_1(v27);
      OUTLINED_FUNCTION_0_10();
      v28 = OUTLINED_FUNCTION_91_1();
      if (!OUTLINED_FUNCTION_5_7(v28))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      goto LABEL_64;
    case 0xCu:
      OUTLINED_FUNCTION_15_3();
      v29 = type metadata accessor for GlobalItem();
      v30 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_5_7(v30))
        OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      v31 = (uint64_t *)(v3 + *(int *)(v29 + 32));
      v32 = v31[1];
      if (v32 >> 60 != 15)
        outlined consume of Data._Representation(*v31, v32);
      v21 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_63:
      __swift_instantiateConcreteTypeFromMangledName(v21);
LABEL_64:
      swift_bridgeObjectRelease();
      break;
    case 0xDu:
      OUTLINED_FUNCTION_15_3();
      OUTLINED_FUNCTION_30_2();
      OUTLINED_FUNCTION_29_4();
      OUTLINED_FUNCTION_94_1();
      v13 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_66:
      v33 = v3 + v13;
      v34 = OUTLINED_FUNCTION_5_2();
      if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      break;
    case 0xEu:
      OUTLINED_FUNCTION_15_3();
      v35 = type metadata accessor for IntentFileItem();
      v36 = v3 + *(int *)(v35 + 20);
      OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_6_6())
        OUTLINED_FUNCTION_126(v36);
      OUTLINED_FUNCTION_126(v3 + *(int *)(v35 + 24));
      break;
    case 0xFu:
      OUTLINED_FUNCTION_15_3();
      v37 = type metadata accessor for Answer(0);
      v38 = v3 + *(int *)(v37 + 20);
      v39 = OUTLINED_FUNCTION_5_2();
      if (!OUTLINED_FUNCTION_116(v38))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_12_5();
      v40 = v3 + *(int *)(v37 + 40);
      if (!OUTLINED_FUNCTION_116(v40))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v40, v39);
      break;
    default:
      break;
  }

  OUTLINED_FUNCTION_0_10();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for SearchResult(0);
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(v0 + v3 + 8);
  v5 = *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  OUTLINED_FUNCTION_118();
  return closure #1 in closure #1 in SmartChunkingPreprocessing.preprocess(data:query:)(v7, v8, v9, v10, v11, v12, v4, v5);
}

uint64_t outlined retain of SmartChunkingPreprocessing(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24318B688()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTRSi_10OmniSearch0D6ResultVt_Tg5Tu))(a1, v4);
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[71];
  *(_QWORD *)(v1 - 112) = v0[74];
  *(_QWORD *)(v1 - 104) = v2;
  v3 = v0[65];
  *(_QWORD *)(v1 - 96) = v0[68];
  *(_QWORD *)(v1 - 88) = v3;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

void OUTLINED_FUNCTION_7_7(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  NSObject *v5;
  const char *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_10_6(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 584) + 8))(a1, *(_QWORD *)(v1 + 576));
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_6(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_21_4()
{
  void *v0;

}

void OUTLINED_FUNCTION_26_4(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_38_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_44_3(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_getErrorValue();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_49_2(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_51_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 368) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_53_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_60_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_61_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_78_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_79_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_85_2()
{
  return checkForErrorAndConsumeState(state:)();
}

void OUTLINED_FUNCTION_87_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_90_1()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_91_1()
{
  return type metadata accessor for TimeZone();
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_95_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

unint64_t OUTLINED_FUNCTION_97_1()
{
  return type metadata accessor for NSUserDefaults();
}

BOOL OUTLINED_FUNCTION_98_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return OSSignpostIntervalState.signpostID.getter();
}

void OUTLINED_FUNCTION_101_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_102_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_0(a1, v1);
}

id OUTLINED_FUNCTION_103_1()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return OSSignposter.logHandle.getter();
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  return checkForErrorAndConsumeState(state:)();
}

void OUTLINED_FUNCTION_107_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return type metadata accessor for Date();
}

void OUTLINED_FUNCTION_109_0()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_110_0()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_114_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_115()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_116(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return type metadata accessor for Logger();
}

uint64_t OUTLINED_FUNCTION_121()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_122()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_123()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_125()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_126(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return Error.localizedDescription.getter();
}

uint64_t OUTLINED_FUNCTION_128()
{
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_129()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_130()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_131()
{
  return static os_log_type_t.info.getter();
}

uint64_t OUTLINED_FUNCTION_132@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_136()
{
  return swift_bridgeObjectRelease();
}

void SearchAppEntity.id.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path setter for SearchAppEntity.id : SearchAppEntity()
{
  swift_bridgeObjectRetain();
  SearchAppEntity.id.setter();
}

void SearchAppEntity.id.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchAppEntity.id.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchAppEntity.$id.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.bundleId.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path setter for SearchAppEntity.bundleId : SearchAppEntity()
{
  swift_bridgeObjectRetain();
  SearchAppEntity.bundleId.setter();
}

void SearchAppEntity.bundleId.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchAppEntity.bundleId.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchAppEntity.$bundleId.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.typeId.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path setter for SearchAppEntity.typeId : SearchAppEntity()
{
  swift_bridgeObjectRetain();
  SearchAppEntity.typeId.setter();
}

void SearchAppEntity.typeId.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchAppEntity.typeId.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchAppEntity.$typeId.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.protocolId.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path setter for SearchAppEntity.protocolId : SearchAppEntity()
{
  swift_bridgeObjectRetain();
  SearchAppEntity.protocolId.setter();
}

void SearchAppEntity.protocolId.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchAppEntity.protocolId.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchAppEntity.$protocolId.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.title.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAppEntity.title.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAppEntity.sourceResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchAppEntity(0);
  return OUTLINED_FUNCTION_39_1(v1 + *(int *)(v3 + 36), a1);
}

uint64_t type metadata accessor for SearchAppEntity(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for SearchAppEntity);
}

uint64_t outlined init with copy of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SearchAppEntity.sourceResult.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_78_3();
  return OUTLINED_FUNCTION_40_0(v0, v1 + *(int *)(v2 + 36));
}

uint64_t outlined assign with take of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SearchAppEntity.sourceResult.modify())()
{
  type metadata accessor for SearchAppEntity(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

id SearchAppEntity.card.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_66_3();
  v1 = (uint64_t *)(v0 + *(int *)(OUTLINED_FUNCTION_78_3() + 40));
  v2 = *v1;
  v3 = v1[1];
  outlined copy of Data?(*v1, v3);
  return SFCard.init(data:)(v2, v3);
}

unint64_t type metadata accessor for SFCard()
{
  unint64_t result;

  result = lazy cache variable for type metadata for SFCard;
  if (!lazy cache variable for type metadata for SFCard)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  }
  return result;
}

void key path setter for SearchAppEntity.card : SearchAppEntity(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  SearchAppEntity.card.setter((uint64_t)v1);
}

void SearchAppEntity.card.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1;
  if (a1)
  {
    OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_82_3();
  }
  else
  {
    v1 = 0;
    v2 = 0xF000000000000000;
  }
  v4 = v3 + *(int *)(type metadata accessor for SearchAppEntity(0) + 40);
  outlined consume of Data?(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = v2;
  OUTLINED_FUNCTION_12();
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined copy of Data._Representation(a1, a2);
  return a1;
}

void SearchAppEntity.card.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  *(_QWORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_66_3();
  v3 = *(int *)(type metadata accessor for SearchAppEntity(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  outlined copy of Data?(*v4, v6);
  *(_QWORD *)a1 = SFCard.init(data:)(v5, v6);
  OUTLINED_FUNCTION_12();
}

void SearchAppEntity.card.modify(void **a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    if (v2)
    {
      v3 = v2;
      OUTLINED_FUNCTION_84_2();
      OUTLINED_FUNCTION_82_3();
    }
    OUTLINED_FUNCTION_74_3();

  }
  else
  {
    if (v2)
    {
      v5 = v2;
      SFCard.data.getter();

    }
    OUTLINED_FUNCTION_74_3();
  }
}

void SearchAppEntity.init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UUID();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_54_4();
}

void sub_24318C3F4(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_19_6();
  OUTLINED_FUNCTION_54_4();
}

void sub_24318C404(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_54_4();
}

void sub_24318C414(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_54_4();
}

void sub_24318C434(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1[3] = a1;
  v6 = type metadata accessor for SearchAppEntity(0);
  v1[4] = 0;
  v1[5] = 0;
  v7 = (uint64_t)v1 + *(int *)(v6 + 36);
  v8 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v7, v9, v10, v8);
  *(_OWORD *)((char *)v1 + *(int *)(v6 + 40)) = xmmword_24334E610;
  UUID.init()();
  v11 = UUID.uuidString.getter();
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  *(_QWORD *)(v5 - 80) = v11;
  *(_QWORD *)(v5 - 72) = v13;
  OUTLINED_FUNCTION_24_2();
  *(_QWORD *)(v5 - 80) = 0;
  *(_QWORD *)(v5 - 72) = 0xE000000000000000;
  OUTLINED_FUNCTION_24_2();
  *(_QWORD *)(v5 - 80) = 0;
  *(_QWORD *)(v5 - 72) = 0xE000000000000000;
  OUTLINED_FUNCTION_24_2();
  *(_QWORD *)(v5 - 80) = 0;
  *(_QWORD *)(v5 - 72) = 0;
  OUTLINED_FUNCTION_24_2();
  swift_bridgeObjectRelease();
  v1[4] = 0;
  v1[5] = 0;
  OUTLINED_FUNCTION_12_0();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchAppEntity.validateParameters()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _QWORD v25[2];
  uint64_t v26[4];

  v4 = (uint64_t)v1;
  v25[1] = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_15();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_86_2();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - v11;
  v13 = *v1;
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_71_2();
  outlined init with copy of SearchResult(v4, (uint64_t)v12, type metadata accessor for SearchAppEntity);
  if (v13)
  {
    v14 = *((_QWORD *)v12 + 1);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_37_1();
    if ((v14 & 0x2000000000000000) != 0)
      v15 = HIBYTE(v14) & 0xF;
    else
      v15 = v2 & 0xFFFFFFFFFFFFLL;
    OUTLINED_FUNCTION_90_2();
    OUTLINED_FUNCTION_48_2();
    if (v15)
    {
      v16 = *(_QWORD *)(v3 + 16);
      OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_37_1();
      OUTLINED_FUNCTION_71_2();
      _s10OmniSearch0B6ResultVWOhTm_1(v3, type metadata accessor for SearchAppEntity);
      if (v16)
        return;
      goto LABEL_10;
    }
  }
  else
  {
    OUTLINED_FUNCTION_90_2();
    OUTLINED_FUNCTION_48_2();
  }
  _s10OmniSearch0B6ResultVWOhTm_1(v3, type metadata accessor for SearchAppEntity);
LABEL_10:
  if (one-time initialization token for search != -1)
    swift_once();
  v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(v4, v0, type metadata accessor for SearchAppEntity);
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)v20 = 136315138;
    outlined init with copy of SearchResult(v0, (uint64_t)v8, type metadata accessor for SearchAppEntity);
    v21 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v26);
    v26[3] = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_1(v0, type metadata accessor for SearchAppEntity);
    _os_log_impl(&dword_24315F000, v18, v19, "AppEntity failed validation: %s", v20, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  _s10OmniSearch0B6ResultVWOhTm_1(v0, type metadata accessor for SearchAppEntity);

  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  swift_allocError();
  *v24 = xmmword_24334E620;
  swift_willThrow();
}

void SearchAppEntity.init(_:)(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_44_4();
  type metadata accessor for SearchAppEntity.Builder(v3);
  OUTLINED_FUNCTION_15();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v15 - v9;
  *((_QWORD *)v10 + 10) = 0;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)v10 = 0u;
  v11 = (char *)v15 + *(int *)(v8 + 40) - v9;
  v12 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49((uint64_t)v11, v13, v14, v12);
  a1(v10);
  outlined init with copy of SearchResult((uint64_t)v10, (uint64_t)v7, type metadata accessor for SearchAppEntity.Builder);
  SearchAppEntity.init(builder:)();
}

void sub_24318C8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s10OmniSearch0B6ResultVWOhTm_1(v4, v3);
  v5 = type metadata accessor for SearchAppEntity(0);
  v6 = OUTLINED_FUNCTION_43_3(v5);
  if ((_DWORD)v6)
  {
    OUTLINED_FUNCTION_75_3(v6, &demangling cache variable for type metadata for SearchAppEntity?);
    v7 = 1;
  }
  else
  {
    outlined init with take of SearchResult(v2, v0, type metadata accessor for SearchAppEntity);
    v7 = 0;
  }
  __swift_storeEnumTagSinglePayload(v0, v7, 1, v1);
  OUTLINED_FUNCTION_12_0();
}

uint64_t SearchAppEntity.Builder.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_69_3();
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 80) = 0;
  v2 = v0 + *(int *)(v1 + 40);
  v3 = OUTLINED_FUNCTION_77_0();
  return __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
}

void SearchAppEntity.init(builder:)()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_67_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_63_3();
}

void sub_24318C9FC(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_19_6();
  OUTLINED_FUNCTION_63_3();
}

void sub_24318CA10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_63_3();
}

void sub_24318CA24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_63_3();
}

void sub_24318CA48(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;

  v5[4] = 0;
  v5[5] = 0;
  v5[3] = a1;
  v8 = (uint64_t)v5 + *(int *)(v3 + 36);
  v9 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v8, v10, v11, v9);
  v12 = (char *)v5 + *(int *)(v3 + 40);
  *(_OWORD *)v12 = xmmword_24334E610;
  v13 = v4[1];
  if (!v13)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v23 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v23, (uint64_t)static Logging.search);
    v24 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v24))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v25 = 0;
      v26 = "Attempting to create SearchAppEntity without id";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_62_3(v13, *v4);
  v2 = v7;
  EntityProperty.wrappedValue.setter();
  v14 = v4[3];
  if (!v14)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v27, (uint64_t)static Logging.search);
    v28 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v28))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v25 = 0;
      v26 = "Attempting to create SearchAppEntity without bundleId";
      goto LABEL_18;
    }
LABEL_19:

    OUTLINED_FUNCTION_89_3(v31, type metadata accessor for SearchAppEntity.Builder);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v5, type metadata accessor for SearchAppEntity);
    OUTLINED_FUNCTION_70_3(v1, 1);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_62_3(v14, v4[2]);
  v2 = v6;
  EntityProperty.wrappedValue.setter();
  v15 = v4[5];
  if (!v15)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v29 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_28(v29, (uint64_t)static Logging.search);
    v30 = OUTLINED_FUNCTION_83_1();
    if (OUTLINED_FUNCTION_23_5(v30))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_5_3();
      *(_WORD *)v25 = 0;
      v26 = "Attempting to create SearchAppEntity without typeId";
LABEL_18:
      _os_log_impl(&dword_24315F000, v2, (os_log_type_t)v6, v26, v25, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_62_3(v15, v4[4]);
  EntityProperty.wrappedValue.setter();
  v16 = type metadata accessor for SearchAppEntity.Builder(0);
  outlined assign with copy of SearchResult?((uint64_t)v4 + *(int *)(v16 + 40), v8);
  OUTLINED_FUNCTION_62_3(v4[7], v4[6]);
  EntityProperty.wrappedValue.setter();
  v17 = v4[10];
  v5[4] = v4[9];
  v5[5] = v17;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_36_0();
  v18 = (void *)v4[8];
  if (v18)
  {
    v19 = v18;
    v20 = OUTLINED_FUNCTION_84_2();
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0xF000000000000000;
  }
  v32 = outlined consume of Data?(*(_QWORD *)v12, *((_QWORD *)v12 + 1));
  *(_QWORD *)v12 = v20;
  *((_QWORD *)v12 + 1) = v22;
  OUTLINED_FUNCTION_89_3(v32, type metadata accessor for SearchAppEntity.Builder);
  OUTLINED_FUNCTION_2_7((uint64_t)v5, v1);
  OUTLINED_FUNCTION_70_3(v1, 0);
  OUTLINED_FUNCTION_1_9((uint64_t)v5);
LABEL_22:
  OUTLINED_FUNCTION_43_0();
}

uint64_t static SearchAppEntity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t EnumTagSinglePayload;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v80 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0_3();
  v77 = v11;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchResult?, SearchResult?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0_3();
  v81 = v13;
  v78 = OUTLINED_FUNCTION_67_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_18_1();
  v83 = v15;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_31_0();
  v82 = v17;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_31_0();
  v86 = v19;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_31_0();
  v87 = v21;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_31_0();
  v85 = v23;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_31_0();
  v84 = v25;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_87_1();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_86_2();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v76 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v76 - v32;
  OUTLINED_FUNCTION_7_8();
  v34 = v88;
  v35 = v89;
  OUTLINED_FUNCTION_7_8();
  v36 = v34 == v88 && v35 == v89;
  v76 = v9;
  if (v36)
  {
    OUTLINED_FUNCTION_102_0();
    v38 = a1;
    OUTLINED_FUNCTION_2_7(a1, (uint64_t)v33);
    OUTLINED_FUNCTION_2_7(a2, (uint64_t)v31);
    v39 = a2;
  }
  else
  {
    v37 = OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_36_0();
    v38 = a1;
    OUTLINED_FUNCTION_2_7(a1, (uint64_t)v33);
    OUTLINED_FUNCTION_2_7(a2, (uint64_t)v31);
    v39 = a2;
    if ((v37 & 1) == 0)
    {
      OUTLINED_FUNCTION_1_9((uint64_t)v31);
      OUTLINED_FUNCTION_1_9((uint64_t)v33);
      v40 = a1;
      OUTLINED_FUNCTION_2_7(a1, v3);
      OUTLINED_FUNCTION_2_7(a2, v2);
      v41 = v84;
LABEL_13:
      OUTLINED_FUNCTION_1_9(v2);
      OUTLINED_FUNCTION_1_9(v3);
      OUTLINED_FUNCTION_2_7(v40, v41);
      v47 = v85;
      OUTLINED_FUNCTION_2_7(v39, v85);
      v49 = v86;
      v48 = v87;
LABEL_20:
      OUTLINED_FUNCTION_6_7(v47);
      OUTLINED_FUNCTION_6_7(v41);
LABEL_21:
      v54 = v82;
LABEL_22:
      v55 = v83;
      OUTLINED_FUNCTION_13_7(v40, v48);
      OUTLINED_FUNCTION_13_7(v39, v49);
LABEL_23:
      OUTLINED_FUNCTION_6_7(v49);
      OUTLINED_FUNCTION_6_7(v48);
LABEL_24:
      OUTLINED_FUNCTION_13_7(v40, v54);
      OUTLINED_FUNCTION_13_7(v39, v55);
LABEL_25:
      OUTLINED_FUNCTION_6_7(v55);
      OUTLINED_FUNCTION_6_7(v54);
      goto LABEL_26;
    }
  }
  v42 = v39;
  OUTLINED_FUNCTION_7_8();
  v43 = v88;
  v44 = v89;
  OUTLINED_FUNCTION_7_8();
  v45 = v43 == v88 && v44 == v89;
  v41 = v84;
  if (v45)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_1_9((uint64_t)v31);
    OUTLINED_FUNCTION_1_9((uint64_t)v33);
    v40 = v38;
    OUTLINED_FUNCTION_2_7(v38, v3);
    v39 = v42;
    OUTLINED_FUNCTION_2_7(v42, v2);
  }
  else
  {
    v46 = OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9((uint64_t)v31);
    OUTLINED_FUNCTION_1_9((uint64_t)v33);
    v40 = v38;
    OUTLINED_FUNCTION_2_7(v38, v3);
    v39 = v42;
    OUTLINED_FUNCTION_2_7(v42, v2);
    if ((v46 & 1) == 0)
      goto LABEL_13;
  }
  OUTLINED_FUNCTION_7_8();
  v51 = v88;
  v50 = v89;
  OUTLINED_FUNCTION_7_8();
  v52 = v51 == v88 && v50 == v89;
  v49 = v86;
  v48 = v87;
  if (v52)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_1_9(v2);
    OUTLINED_FUNCTION_1_9(v3);
    OUTLINED_FUNCTION_2_7(v40, v41);
    v47 = v85;
    OUTLINED_FUNCTION_2_7(v39, v85);
  }
  else
  {
    v53 = OUTLINED_FUNCTION_9_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9(v2);
    OUTLINED_FUNCTION_1_9(v3);
    OUTLINED_FUNCTION_2_7(v40, v41);
    v47 = v85;
    OUTLINED_FUNCTION_2_7(v39, v85);
    if ((v53 & 1) == 0)
      goto LABEL_20;
  }
  OUTLINED_FUNCTION_7_8();
  v59 = v88;
  v58 = v89;
  OUTLINED_FUNCTION_7_8();
  v60 = v89;
  if (!v58)
  {
    OUTLINED_FUNCTION_6_7(v47);
    OUTLINED_FUNCTION_6_7(v41);
    v54 = v82;
    if (v60)
    {
      OUTLINED_FUNCTION_36_0();
      goto LABEL_22;
    }
    goto LABEL_41;
  }
  if (!v89)
  {
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_1_9(v47);
    OUTLINED_FUNCTION_1_9(v41);
    OUTLINED_FUNCTION_102_0();
    goto LABEL_21;
  }
  if (v59 == v88 && v58 == v89)
  {
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9(v47);
    OUTLINED_FUNCTION_1_9(v41);
    OUTLINED_FUNCTION_6_1();
    v54 = v82;
LABEL_41:
    OUTLINED_FUNCTION_13_7(v40, v48);
    OUTLINED_FUNCTION_13_7(v39, v49);
    v55 = v83;
    goto LABEL_42;
  }
  v62 = OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_1_9(v47);
  OUTLINED_FUNCTION_1_9(v41);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_7(v40, v48);
  OUTLINED_FUNCTION_2_7(v39, v49);
  v54 = v82;
  v55 = v83;
  if ((v62 & 1) == 0)
    goto LABEL_23;
LABEL_42:
  v63 = *(_QWORD *)(v48 + 40);
  v64 = *(_QWORD *)(v49 + 40);
  if (!v63)
  {
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_6_7(v49);
    OUTLINED_FUNCTION_6_7(v48);
    if (!v64)
    {
LABEL_55:
      OUTLINED_FUNCTION_13_7(v40, v54);
      OUTLINED_FUNCTION_13_7(v39, v55);
      goto LABEL_56;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (!v64)
  {
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_1_9(v49);
    OUTLINED_FUNCTION_1_9(v48);
    goto LABEL_53;
  }
  if (*(_QWORD *)(v48 + 32) == *(_QWORD *)(v49 + 32) && v63 == v64)
  {
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_1_9(v49);
    OUTLINED_FUNCTION_1_9(v48);
    OUTLINED_FUNCTION_6_1();
    goto LABEL_55;
  }
  v66 = OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_59_3(v49);
  OUTLINED_FUNCTION_59_3(v48);
  OUTLINED_FUNCTION_6_1();
  outlined init with copy of SearchResult(v40, v54, type metadata accessor for SearchAppEntity);
  outlined init with copy of SearchResult(v39, v55, type metadata accessor for SearchAppEntity);
  if ((v66 & 1) == 0)
    goto LABEL_25;
LABEL_56:
  v67 = *(int *)(v78 + 36);
  v68 = v55 + v67;
  v69 = v81;
  v70 = v81 + *(int *)(v79 + 48);
  outlined init with copy of SearchResult?(v54 + v67, v81);
  outlined init with copy of SearchResult?(v68, v70);
  v71 = v80;
  if (__swift_getEnumTagSinglePayload(v69, 1, v80) == 1)
  {
    OUTLINED_FUNCTION_1_9(v55);
    OUTLINED_FUNCTION_1_9(v54);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v70, 1, v71);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_79_3(EnumTagSinglePayload, &demangling cache variable for type metadata for SearchResult?);
      v56 = 1;
      return v56 & 1;
    }
  }
  else
  {
    v73 = v77;
    outlined init with copy of SearchResult?(v69, v77);
    if (__swift_getEnumTagSinglePayload(v70, 1, v71) != 1)
    {
      v74 = v76;
      outlined init with take of SearchResult(v70, v76, type metadata accessor for SearchResult);
      v56 = static SearchResult.== infix(_:_:)(v73, v74);
      OUTLINED_FUNCTION_1_9(v74);
      OUTLINED_FUNCTION_59_3(v55);
      OUTLINED_FUNCTION_59_3(v54);
      OUTLINED_FUNCTION_1_9(v73);
      OUTLINED_FUNCTION_79_3(v75, &demangling cache variable for type metadata for SearchResult?);
      return v56 & 1;
    }
    OUTLINED_FUNCTION_6_7(v55);
    OUTLINED_FUNCTION_6_7(v54);
    _s10OmniSearch0B6ResultVWOhTm_1(v73, type metadata accessor for SearchResult);
  }
  OUTLINED_FUNCTION_79_3(EnumTagSinglePayload, &demangling cache variable for type metadata for (SearchResult?, SearchResult?));
LABEL_26:
  v56 = 0;
  return v56 & 1;
}

void SearchAppEntity.Builder.id.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.Builder.id.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAppEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAppEntity.Builder.bundleId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.Builder.bundleId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAppEntity.Builder.bundleId.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAppEntity.title.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAppEntity.Builder.typeId.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAppEntity.Builder.protocolId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.Builder.protocolId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAppEntity.Builder.protocolId.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAppEntity.Builder.card.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 64);
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.Builder.card.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchAppEntity.Builder.card.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchAppEntity.Builder.title.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.Builder.title.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_106();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchAppEntity.Builder.title.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAppEntity.Builder.sourceResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_69_3();
  return OUTLINED_FUNCTION_39_1(v1 + *(int *)(v2 + 40), v0);
}

uint64_t SearchAppEntity.Builder.sourceResult.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchAppEntity.Builder(0);
  return OUTLINED_FUNCTION_40_0(a1, v1 + *(int *)(v3 + 40));
}

uint64_t (*SearchAppEntity.Builder.sourceResult.modify())()
{
  type metadata accessor for SearchAppEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAppEntity.Builder.init(id:bundleId:typeId:protocolId:card:title:sourceResult:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  v12 = a9 + *(int *)(type metadata accessor for SearchAppEntity.Builder(0) + 40);
  return outlined init with take of SearchResult?(a12, v12);
}

void static SearchAppEntity.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchAppEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24))(v3, a1, v2);
  swift_endAccess();
  v4 = OUTLINED_FUNCTION_6_5();
  v5(v4);
  OUTLINED_FUNCTION_51_0();
}

void static SearchAppEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_5();
}

void SearchAppEntity.displayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t EnumTagSinglePayload;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  _BOOL8 v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  v54 = OUTLINED_FUNCTION_67_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_18_1();
  v50 = v12;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v49 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_44_4();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_25_3();
  v52 = *(_QWORD *)(v18 - 8);
  v53 = v18;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_18_1();
  v51 = v19;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v20);
  v55 = (char *)v49 - v21;
  v22 = *(void **)(v1 + 40);
  if (v22)
  {
    v23 = *(_QWORD *)(v1 + 32);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    OUTLINED_FUNCTION_46_2();
    v24._countAndFlagsBits = v23;
    v24._object = v22;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v24);
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._object = (void *)0x800000024335BA60;
    v25._countAndFlagsBits = 0xD000000000000013;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_17_7();
    OUTLINED_FUNCTION_26_0();
    v26._countAndFlagsBits = 0x49656C646E756220;
    v26._object = (void *)0xEB00000000203A64;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_17_7();
    OUTLINED_FUNCTION_26_0();
    v27._countAndFlagsBits = 0x3A64496570797420;
    v27._object = (void *)0xE900000000000020;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_17_7();
    OUTLINED_FUNCTION_26_0();
  }
  OUTLINED_FUNCTION_46_2();
  LocalizedStringResource.init(stringInterpolation:)();
  OUTLINED_FUNCTION_66_3();
  v28 = (uint64_t *)(v1 + *(int *)(v54 + 40));
  v29 = *v28;
  v30 = v28[1];
  outlined copy of Data?(*v28, v30);
  v31 = SFCard.init(data:)(v29, v30);
  if (v31)
  {
    v32 = v31;
    SFCard.snippetPluginModel.getter(v2);

    v33 = type metadata accessor for RGPluginModel();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v33);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_75_3(EnumTagSinglePayload, &demangling cache variable for type metadata for RGPluginModel?);
    }
    else
    {
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel, (uint64_t (*)(uint64_t))MEMORY[0x24BE52530], MEMORY[0x24BE52500]);
      SnippetPluginModel.data.getter();
      v36 = v35;
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v2, v33);
      if (v36 >> 60 != 15)
      {
        v45 = v52;
        v44 = v55;
        OUTLINED_FUNCTION_52_3(v51, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v52 + 16));
        static RGPluginModel.bundleName.getter();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        goto LABEL_13;
      }
    }
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v37 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v37, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult((uint64_t)v4, (uint64_t)v15, type metadata accessor for SearchAppEntity);
  v4 = Logger.logObject.getter();
  v38 = static os_log_type_t.debug.getter();
  v39 = os_log_type_enabled(v4, v38);
  if (v39)
  {
    v49[1] = a1;
    v49[2] = v3;
    v40 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    *(_DWORD *)v40 = 136315138;
    outlined init with copy of SearchResult((uint64_t)v15, v50, type metadata accessor for SearchAppEntity);
    v41 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v57);
    v56 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v15, type metadata accessor for SearchAppEntity);
    _os_log_impl(&dword_24315F000, v4, v38, "Fallback to use title only displayRepresentation for entity: %s", v40, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_89_3(v39, type metadata accessor for SearchAppEntity);

  v44 = v55;
  v45 = v52;
  OUTLINED_FUNCTION_52_3(v51, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v52 + 16));
  __swift_storeEnumTagSinglePayload(v10, 1, 1, (uint64_t)v4);
  v46 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_49(v3, v47, v48, v46);
  DisplayRepresentation.init(title:subtitle:image:)();
LABEL_13:
  (*(void (**)(char *, NSObject *))(v45 + 8))(v44, v4);
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchAppEntity.Query.entities(for:)()
{
  uint64_t v0;

  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchAppEntity.Query.entities(for:)();
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t protocol witness for EntityQuery.suggestedEntities() in conformance SearchAppEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  return EntityQuery.suggestedEntities()();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchAppEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type SearchAppEntity.Query and conformance SearchAppEntity.Query();
  *v1 = v0;
  v1[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return EntityQuery.results()();
}

uint64_t protocol witness for DynamicOptionsProvider.defaultResult() in conformance SearchAppEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  return DynamicOptionsProvider.defaultResult()();
}

uint64_t (*static SearchAppEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchAppEntity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x644965707974 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6C6F636F746F7270 && a2 == 0xEA00000000006449;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6552656372756F73 && a2 == 0xEC000000746C7573;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6174614464726163 && a2 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t SearchAppEntity.CodingKeys.init(intValue:)()
{
  return 7;
}

uint64_t SearchAppEntity.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24318E46C + 4 * byte_24334E630[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_24318E46C()
{
  return 0x6449656C646E7562;
}

uint64_t sub_24318E484()
{
  return 0x644965707974;
}

uint64_t sub_24318E498()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_24318E4B4()
{
  return 0x656C746974;
}

uint64_t sub_24318E4C8()
{
  return 0x6552656372756F73;
}

uint64_t sub_24318E4E8()
{
  return 0x6174614464726163;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchAppEntity.CodingKeys()
{
  unsigned __int8 *v0;

  return SearchAppEntity.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchAppEntity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = SearchAppEntity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SearchAppEntity.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = SearchAppEntity.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchAppEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchAppEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SearchAppEntity.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchAppEntity.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(_QWORD *)&v11 = *v3;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>();
  OUTLINED_FUNCTION_4_9();
  if (!v2)
  {
    *(_QWORD *)&v11 = v3[1];
    v12 = 1;
    OUTLINED_FUNCTION_4_9();
    *(_QWORD *)&v11 = v3[2];
    v12 = 2;
    OUTLINED_FUNCTION_4_9();
    *(_QWORD *)&v11 = v3[3];
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v9 = type metadata accessor for SearchAppEntity(0);
    LOBYTE(v11) = 5;
    type metadata accessor for SearchResult(0);
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchResult and conformance SearchResult, type metadata accessor for SearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
    OUTLINED_FUNCTION_65_3();
    v11 = *(_OWORD *)((char *)v3 + *(int *)(v9 + 40));
    v12 = 6;
    lazy protocol witness table accessor for type Data and conformance Data();
    OUTLINED_FUNCTION_65_3();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchAppEntity(_QWORD *a1)
{
  return SearchAppEntity.encode(to:)(a1);
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchAppEntity()
{
  SearchAppEntity.validateParameters()();
}

void protocol witness for Identifiable.id.getter in conformance SearchAppEntity(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SearchAppEntity.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

void SearchAppEntity.asNLGEntity.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  SearchNLGEntity.init()();
}

void sub_24318E93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for LocalIndexClient();
  EntityProperty.wrappedValue.getter();
  v4 = static LocalIndexClient.displayName(for:)(*(_QWORD *)(v3 - 80), *(_QWORD *)(v3 - 72));
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 - 80) = v4;
  *(_QWORD *)(v3 - 72) = v6;
  OUTLINED_FUNCTION_24_2();
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)(v3 - 80) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 - 72) = v7;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_2();
  v9 = type metadata accessor for SearchAppEntity(0);
  outlined init with copy of SearchResult?(v2 + *(int *)(v9 + 36), v1);
  v10 = OUTLINED_FUNCTION_77_0();
  v11 = OUTLINED_FUNCTION_43_3(v10);
  if ((_DWORD)v11 == 1)
  {
    OUTLINED_FUNCTION_75_3(v11, &demangling cache variable for type metadata for SearchResult?);
LABEL_6:
    v15 = 0;
    goto LABEL_7;
  }
  v12 = *(void **)(v1 + *(int *)(v8 + 20));
  if (!v12)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(v1, type metadata accessor for SearchResult);
    goto LABEL_6;
  }
  v13 = v12;
  _s10OmniSearch0B6ResultVWOhTm_1(v1, type metadata accessor for SearchResult);
  CSSearchableItem.senderNames.getter();
  v15 = v14;

LABEL_7:
  *(_QWORD *)(v3 - 80) = v15;
  OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_12_0();
}

unint64_t lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError;
  if (!lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolError, &type metadata for SearchToolError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError);
  }
  return result;
}

uint64_t type metadata accessor for SearchAppEntity.Builder(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for SearchAppEntity.Builder);
}

uint64_t type metadata accessor for SearchAppEntity(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined assign with copy of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SearchAppEntity.Query.entities(for:)(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unint64_t lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.CodingKeys, &unk_2513C97D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.CodingKeys, &unk_2513C97D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.CodingKeys, &unk_2513C97D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.CodingKeys, &unk_2513C97D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<String>);
    v2[0] = MEMORY[0x24BEE0D38];
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5368], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<String?>);
    v2[0] = lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
    v2[1] = lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5368], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type String? and conformance <A> A?(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    v8 = a2;
    result = MEMORY[0x2494F6CA4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchAppEntity.Query and conformance SearchAppEntity.Query()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.Query, &type metadata for SearchAppEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.Query, &type metadata for SearchAppEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.Query, &type metadata for SearchAppEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchAppEntity.Query, &type metadata for SearchAppEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

void associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchAppEntity.Query()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchAppEntity.Query()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchAppEntity] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchAppEntity]);
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
    v3 = v2;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6638], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A]);
  }
  return result;
}

void base witness table accessor for AppValue in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void base witness table accessor for DisplayRepresentable in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void base witness table accessor for Identifiable in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

uint64_t associated type witness table accessor for Identifiable.ID : EntityIdentifierConvertible in SearchAppEntity()
{
  return MEMORY[0x24BDB6618];
}

void base witness table accessor for PersistentlyIdentifiable in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void base witness table accessor for TypeDisplayRepresentable in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void base witness table accessor for InstanceDisplayRepresentable in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in SearchAppEntity()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t lazy protocol witness table accessor for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>;
  if (!lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EmptyResolverSpecification<SearchAppEntity>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6250], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>);
  }
  return result;
}

void base witness table accessor for CustomLocalizedStringResourceConvertible in SearchAppEntity()
{
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, type metadata accessor for SearchAppEntity, (uint64_t)&protocol conformance descriptor for SearchAppEntity);
}

void sub_24318F060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAppEntity.id.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24318F084()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAppEntity.bundleId.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24318F0A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAppEntity.typeId.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24318F0CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchAppEntity.protocolId.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_24318F0F0()
{
  id *v0;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchAppEntity.card.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchAppEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = *(int *)(a3 + 36);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[5] = a2[5];
    v13 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      type metadata accessor for SearchResultItem(0);
      v15 = (char *)&loc_24318F240 + 4 * word_24334E638[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v16 = *(int *)(a3 + 40);
    v17 = (char *)v7 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 1);
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    else
    {
      v20 = *(_QWORD *)v18;
      outlined copy of Data._Representation(*(_QWORD *)v18, *((_QWORD *)v18 + 1));
      *(_QWORD *)v17 = v20;
      *((_QWORD *)v17 + 1) = v19;
    }
  }
  return v7;
}

uint64_t destroy for SearchAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int EnumTagSinglePayload;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  unint64_t v82;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for SearchResult(0);
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = (int *)type metadata accessor for EmailDocument(0);
        v8 = v4 + v7[12];
        v9 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v4 + v7[17];
        v11 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        v12 = v7[18];
        goto LABEL_20;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for MobileSMSDocument(0);
        v14 = v4 + v13[10];
        v15 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        v16 = v4 + v13[11];
        v17 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        v18 = v4 + v13[12];
        if (!__swift_getEnumTagSinglePayload(v18, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v18, v17);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for CalendarEvent(0);
        v19 = v4 + v13[7];
        v20 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        v21 = v4 + v13[8];
        if (!__swift_getEnumTagSinglePayload(v21, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = v4 + v13[13];
        v23 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_19:
        v12 = v13[14];
LABEL_20:
        if (!*(_QWORD *)(v4 + v12))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for Photo(0);
        v25 = v4 + *(int *)(v24 + 44);
        v26 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v24 + 64);
        goto LABEL_67;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = (int *)type metadata accessor for NoteDocument(0);
        v29 = v4 + v28[8];
        v30 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v31 = v4 + v28[9];
        if (!__swift_getEnumTagSinglePayload(v31, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v31, v30);
        v27 = v28[10];
        goto LABEL_67;
      case 5u:
        swift_bridgeObjectRelease();

        v27 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_67;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = type metadata accessor for WalletTransaction(0);
        v33 = v4 + *(int *)(v32 + 28);
        v34 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v32 + 52);
        goto LABEL_67;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = type metadata accessor for WalletPass(0);
        v36 = v4 + *(int *)(v35 + 28);
        v37 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        swift_bridgeObjectRelease();
        v27 = *(int *)(v35 + 36);
        goto LABEL_67;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_67;
      case 9u:
        swift_bridgeObjectRelease();
        v38 = (int *)type metadata accessor for FlightReservation(0);
        v39 = v4 + v38[5];
        v40 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v39, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v4 + v38[11];
        if (!__swift_getEnumTagSinglePayload(v41, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v41, v40);
        v42 = v4 + v38[12];
        if (!__swift_getEnumTagSinglePayload(v42, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v42, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v4 + v38[15];
        v44 = type metadata accessor for DateComponents();
        v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
        v45(v43, v44);
        v45(v4 + v38[16], v44);
        v46 = v4 + v38[17];
        v47 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
        v48 = v4 + v38[18];
        if (!__swift_getEnumTagSinglePayload(v48, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v48, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_64;
      case 0xAu:
        swift_bridgeObjectRelease();
        v50 = (int *)type metadata accessor for HotelReservation(0);
        v51 = v4 + v50[5];
        v52 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = v4 + v50[12];
        v54 = type metadata accessor for DateComponents();
        v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
        v55(v53, v54);
        v55(v4 + v50[13], v54);
        v56 = v4 + v50[14];
        v57 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xBu:
        swift_bridgeObjectRelease();
        v58 = (int *)type metadata accessor for RestaurantReservation(0);
        v59 = v4 + v58[5];
        v60 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v59, 1, v60))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v4 + v58[12];
        v62 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        swift_bridgeObjectRelease();
        v63 = v4 + v58[14];
        v64 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v63, 1, v64))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xCu:
        swift_bridgeObjectRelease();
        v65 = type metadata accessor for GlobalItem();
        v66 = v4 + *(int *)(v65 + 20);
        v67 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v66, 1, v67))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v68 = (uint64_t *)(v4 + *(int *)(v65 + 32));
        v69 = v68[1];
        if (v69 >> 60 != 15)
          outlined consume of Data._Representation(*v68, v69);
        v49 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_64:
        __swift_instantiateConcreteTypeFromMangledName(v49);
LABEL_65:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_67:
        v70 = v4 + v27;
        v71 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v70, 1, v71))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v72 = type metadata accessor for IntentFileItem();
        v73 = v4 + *(int *)(v72 + 20);
        v74 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v73, 1, v74);
        v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
        if (!EnumTagSinglePayload)
          v76(v73, v74);
        v76(v4 + *(int *)(v72 + 24), v74);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v77 = type metadata accessor for Answer(0);
        v78 = v4 + *(int *)(v77 + 20);
        v79 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v78, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v80 = v4 + *(int *)(v77 + 40);
        if (!__swift_getEnumTagSinglePayload(v80, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v80, v79);
        break;
      default:
        break;
    }

    result = swift_bridgeObjectRelease();
  }
  v81 = (uint64_t *)(a1 + *(int *)(a2 + 40));
  v82 = v81[1];
  if (v82 >> 60 != 15)
    return outlined consume of Data._Representation(*v81, v82);
  return result;
}

_QWORD *initializeWithCopy for SearchAppEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    type metadata accessor for SearchResultItem(0);
    v14 = (char *)&loc_243191D8C + 4 * word_24334E678[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v15 = *(int *)(a3 + 40);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_QWORD *)v17 + 1);
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  else
  {
    v19 = *(_QWORD *)v17;
    outlined copy of Data._Representation(*(_QWORD *)v17, *((_QWORD *)v17 + 1));
    *(_QWORD *)v16 = v19;
    *((_QWORD *)v16 + 1) = v18;
  }
  return a1;
}

_QWORD *assignWithCopy for SearchAppEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      type metadata accessor for SearchResultItem(0);
      v12 = (char *)&loc_243193B54 + 4 * word_24334E698[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v11)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResult);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_10;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v14 = (char *)&loc_243193D78 + 4 * word_24334E6B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = *(int *)(v9 + 20);
  v16 = *(void **)&v7[v15];
  v17 = *(void **)&v8[v15];
  *(_QWORD *)&v7[v15] = v17;
  v18 = v17;

  v19 = *(int *)(v9 + 24);
  v20 = &v7[v19];
  v21 = &v8[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_10:
  v22 = *(int *)(a3 + 40);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a2 + v22 + 8);
  if (*(_QWORD *)((char *)a1 + v22 + 8) >> 60 != 15)
  {
    if (v25 >> 60 != 15)
    {
      v27 = *v24;
      outlined copy of Data._Representation(v27, v25);
      v28 = *v23;
      v29 = v23[1];
      *v23 = v27;
      v23[1] = v25;
      outlined consume of Data._Representation(v28, v29);
      return a1;
    }
    outlined destroy of Data((uint64_t)v23);
    goto LABEL_15;
  }
  if (v25 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    return a1;
  }
  v26 = *v24;
  outlined copy of Data._Representation(v26, v25);
  *v23 = v26;
  v23[1] = v25;
  return a1;
}

uint64_t outlined destroy of Data(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

_OWORD *initializeWithTake for SearchAppEntity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    type metadata accessor for SearchResultItem(0);
    v12 = (char *)&loc_243197C8C + 4 * word_24334E6D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *assignWithTake for SearchAppEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      type metadata accessor for SearchResultItem(0);
      v13 = (char *)&loc_24319915C + 4 * word_24334E6F8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v12)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v8, type metadata accessor for SearchResult);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_10;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v8, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v15 = (char *)&loc_2431992B8 + 4 * word_24334E718[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v16 = *(int *)(v10 + 20);
  v17 = *(void **)&v8[v16];
  *(_QWORD *)&v8[v16] = *(_QWORD *)&v9[v16];

  v18 = *(int *)(v10 + 24);
  v19 = &v8[v18];
  v20 = &v9[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
LABEL_10:
  v23 = *(int *)(a3 + 40);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = *(_QWORD *)((char *)a1 + v23 + 8);
  if (v26 >> 60 != 15)
  {
    v27 = v25[1];
    if (v27 >> 60 != 15)
    {
      v28 = *v24;
      *v24 = *v25;
      v24[1] = v27;
      outlined consume of Data._Representation(v28, v26);
      return a1;
    }
    outlined destroy of Data((uint64_t)v24);
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAppEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24319B9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_33_2(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAppEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24319BA2C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_32_2((uint64_t)a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

void type metadata completion function for SearchAppEntity()
{
  unint64_t v0;

  type metadata accessor for SearchResult?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for SearchResult?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for SearchResult?)
  {
    type metadata accessor for SearchResult(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for SearchResult?);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchAppEntity.Builder(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v10 = (void *)a2[8];
    v9 = a2[9];
    a1[8] = (uint64_t)v10;
    a1[9] = v9;
    v11 = *(int *)(a3 + 40);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    a1[10] = a2[10];
    v14 = type metadata accessor for SearchResult(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v10;
    swift_bridgeObjectRetain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      type metadata accessor for SearchResultItem(0);
      v18 = (char *)&loc_24319BCA4 + 4 * word_24334E738[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return v3;
}

uint64_t destroy for SearchAppEntity.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int EnumTagSinglePayload;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for SearchResult(0);
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = (int *)type metadata accessor for EmailDocument(0);
        v8 = v4 + v7[12];
        v9 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v4 + v7[17];
        v11 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        v12 = v7[18];
        goto LABEL_20;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for MobileSMSDocument(0);
        v14 = v4 + v13[10];
        v15 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        v16 = v4 + v13[11];
        v17 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        v18 = v4 + v13[12];
        if (!__swift_getEnumTagSinglePayload(v18, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v18, v17);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for CalendarEvent(0);
        v19 = v4 + v13[7];
        v20 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        v21 = v4 + v13[8];
        if (!__swift_getEnumTagSinglePayload(v21, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = v4 + v13[13];
        v23 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_19:
        v12 = v13[14];
LABEL_20:
        if (!*(_QWORD *)(v4 + v12))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for Photo(0);
        v25 = v4 + *(int *)(v24 + 44);
        v26 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v24 + 64);
        goto LABEL_67;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = (int *)type metadata accessor for NoteDocument(0);
        v29 = v4 + v28[8];
        v30 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v31 = v4 + v28[9];
        if (!__swift_getEnumTagSinglePayload(v31, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v31, v30);
        v27 = v28[10];
        goto LABEL_67;
      case 5u:
        swift_bridgeObjectRelease();

        v27 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_67;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = type metadata accessor for WalletTransaction(0);
        v33 = v4 + *(int *)(v32 + 28);
        v34 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v32 + 52);
        goto LABEL_67;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = type metadata accessor for WalletPass(0);
        v36 = v4 + *(int *)(v35 + 28);
        v37 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        swift_bridgeObjectRelease();
        v27 = *(int *)(v35 + 36);
        goto LABEL_67;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_67;
      case 9u:
        swift_bridgeObjectRelease();
        v38 = (int *)type metadata accessor for FlightReservation(0);
        v39 = v4 + v38[5];
        v40 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v39, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v4 + v38[11];
        if (!__swift_getEnumTagSinglePayload(v41, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v41, v40);
        v42 = v4 + v38[12];
        if (!__swift_getEnumTagSinglePayload(v42, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v42, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v4 + v38[15];
        v44 = type metadata accessor for DateComponents();
        v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
        v45(v43, v44);
        v45(v4 + v38[16], v44);
        v46 = v4 + v38[17];
        v47 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
        v48 = v4 + v38[18];
        if (!__swift_getEnumTagSinglePayload(v48, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v48, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_64;
      case 0xAu:
        swift_bridgeObjectRelease();
        v50 = (int *)type metadata accessor for HotelReservation(0);
        v51 = v4 + v50[5];
        v52 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = v4 + v50[12];
        v54 = type metadata accessor for DateComponents();
        v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
        v55(v53, v54);
        v55(v4 + v50[13], v54);
        v56 = v4 + v50[14];
        v57 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xBu:
        swift_bridgeObjectRelease();
        v58 = (int *)type metadata accessor for RestaurantReservation(0);
        v59 = v4 + v58[5];
        v60 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v59, 1, v60))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v4 + v58[12];
        v62 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        swift_bridgeObjectRelease();
        v63 = v4 + v58[14];
        v64 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v63, 1, v64))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      case 0xCu:
        swift_bridgeObjectRelease();
        v65 = type metadata accessor for GlobalItem();
        v66 = v4 + *(int *)(v65 + 20);
        v67 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v66, 1, v67))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v68 = (uint64_t *)(v4 + *(int *)(v65 + 32));
        v69 = v68[1];
        if (v69 >> 60 != 15)
          outlined consume of Data._Representation(*v68, v69);
        v49 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_64:
        __swift_instantiateConcreteTypeFromMangledName(v49);
LABEL_65:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_67:
        v70 = v4 + v27;
        v71 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v70, 1, v71))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v72 = type metadata accessor for IntentFileItem();
        v73 = v4 + *(int *)(v72 + 20);
        v74 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v73, 1, v74);
        v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
        if (!EnumTagSinglePayload)
          v76(v73, v74);
        v76(v4 + *(int *)(v72 + 24), v74);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v77 = type metadata accessor for Answer(0);
        v78 = v4 + *(int *)(v77 + 20);
        v79 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v78, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v80 = v4 + *(int *)(v77 + 40);
        if (!__swift_getEnumTagSinglePayload(v80, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v80, v79);
        break;
      default:
        break;
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SearchAppEntity.Builder(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v9 = (void *)a2[8];
  v8 = a2[9];
  a1[8] = v9;
  a1[9] = v8;
  v10 = *(int *)(a3 + 40);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[10] = a2[10];
  v13 = type metadata accessor for SearchResult(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v9;
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    type metadata accessor for SearchResultItem(0);
    v16 = (char *)&loc_24319E798 + 4 * word_24334E778[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for SearchAppEntity.Builder(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[8];
  v7 = (void *)a2[8];
  a1[8] = v7;
  v8 = v7;

  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 40);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      type metadata accessor for SearchResultItem(0);
      v15 = (char *)&loc_2431A04A8 + 4 * word_24334E798[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v14)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v10, type metadata accessor for SearchResult);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v10, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v17 = (char *)&loc_2431A06C8 + 4 * word_24334E7B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = *(int *)(v12 + 20);
  v19 = *(void **)&v10[v18];
  v20 = *(void **)&v11[v18];
  *(_QWORD *)&v10[v18] = v20;
  v21 = v20;

  v22 = *(int *)(v12 + 24);
  v23 = &v10[v22];
  v24 = &v11[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchAppEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v9 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    type metadata accessor for SearchResultItem(0);
    v11 = (char *)&loc_2431A4348 + 4 * word_24334E7D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for SearchAppEntity.Builder(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = (void *)a1[8];
  a1[8] = a2[8];

  v11 = a2[10];
  a1[9] = a2[9];
  a1[10] = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      type metadata accessor for SearchResultItem(0);
      v18 = (char *)&loc_2431A57A0 + 4 * word_24334E7F8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v17)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResult);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v20 = (char *)&loc_2431A58F8 + 4 * word_24334E818[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v21 = *(int *)(v15 + 20);
  v22 = *(void **)&v13[v21];
  *(_QWORD *)&v13[v21] = *(_QWORD *)&v14[v21];

  v23 = *(int *)(v15 + 24);
  v24 = &v13[v23];
  v25 = &v14[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAppEntity.Builder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2431A7EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 2147483646)
  {
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_33_2(a1 + *(int *)(a3 + 40), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAppEntity.Builder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2431A7F38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_32_2(a1 + *(int *)(a4 + 40), a2, a2, v7);
  }
}

void type metadata completion function for SearchAppEntity.Builder()
{
  unint64_t v0;

  type metadata accessor for SearchResult?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for SearchAppEntity.Query()
{
  return &type metadata for SearchAppEntity.Query;
}

uint64_t getEnumTagSinglePayload for SearchAppEntity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchAppEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2431A8100 + 4 * byte_24334E83D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2431A8134 + 4 * byte_24334E838[v4]))();
}

uint64_t sub_2431A8134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431A813C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431A8144);
  return result;
}

uint64_t sub_2431A8150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431A8158);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2431A815C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431A8164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchAppEntity.CodingKeys()
{
  return &unk_2513C97D8;
}

void OUTLINED_FUNCTION_1_9(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

void OUTLINED_FUNCTION_2_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_6_7(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_13_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, a2, v2);
}

void OUTLINED_FUNCTION_17_7()
{
  uint64_t v0;

  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

BOOL OUTLINED_FUNCTION_23_5(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_32_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_33_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_39_1(uint64_t a1, uint64_t a2)
{
  return outlined init with copy of SearchResult?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_40_0(uint64_t a1, uint64_t a2)
{
  return outlined assign with take of SearchResult?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_43_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return 0;
}

void OUTLINED_FUNCTION_46_2()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v0);
}

void OUTLINED_FUNCTION_48_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of SearchResult(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_52_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, *(_QWORD *)(v3 - 128));
}

void OUTLINED_FUNCTION_54_4()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_59_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_62_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a2;
  *(_QWORD *)(v2 - 88) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_63_3()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

unint64_t OUTLINED_FUNCTION_66_3()
{
  return type metadata accessor for SFCard();
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return type metadata accessor for SearchAppEntity(0);
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return type metadata accessor for SearchAppEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_70_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_74_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v0 + 8) + *(int *)(v0 + 16);
  result = outlined consume of Data?(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = v2;
  return result;
}

void OUTLINED_FUNCTION_75_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return type metadata accessor for SearchAppEntity(0);
}

void OUTLINED_FUNCTION_79_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_82_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return static os_log_type_t.fault.getter();
}

uint64_t OUTLINED_FUNCTION_84_2()
{
  return SFCard.data.getter();
}

void OUTLINED_FUNCTION_89_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

void OUTLINED_FUNCTION_90_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_1(v1, v0);
}

void specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;

  if (a1)
  {
    specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary.setValue(_:forKey:isUnique:));
    swift_bridgeObjectRelease();
  }
  else
  {
    specialized Dictionary._Variant.removeValue(forKey:)();
    v4 = v3;
    OUTLINED_FUNCTION_6_1();

  }
}

{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v8);
    specialized Dictionary._Variant.setValue(_:forKey:)(v8, a2, a3);
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    outlined destroy of CustomStringConvertible?(a1, &demangling cache variable for type metadata for Any?);
    v5 = OUTLINED_FUNCTION_35_3();
    specialized Dictionary._Variant.removeValue(forKey:)(v5, v6, v7);
    OUTLINED_FUNCTION_6_1();
    outlined destroy of CustomStringConvertible?((uint64_t)v8, &demangling cache variable for type metadata for Any?);
  }
}

uint64_t specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary.setValue(_:forKey:isUnique:));
  }
  else
  {
    specialized Dictionary._Variant.removeValue(forKey:)();
    OUTLINED_FUNCTION_6_1();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo17EMMessageObjectIDCG_So0D0Cs5NeverOTg50120_s10OmniSearch19EmailContentManagerC12messagesFrom33_74150172F908D36AF44B247DC1E94D2DLL25searchableItemIdentifiersSaySo9d18CGSaySSG_tFAHSo0R8E8IDCXEfU_So0D10RepositoryCTf1cn_n(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v12 = MEMORY[0x24BEE4AF8];
      result = specialized ContiguousArray.reserveCapacity(_:)();
      if (v4 < 0)
        break;
      v6 = 0;
      while (v4 != v6)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x2494F62E4](v6, a1);
        else
          v7 = *(id *)(a1 + 8 * v6 + 32);
        v8 = v7;
        ++v6;
        v9 = objc_msgSend(a2, sel_messageForObjectID_, v7);
        v10 = objc_msgSend(v9, sel_result);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v6)
        {
          v11 = v12;

          return v11;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:

    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

id EmailContentManager.mailRepository.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void EmailContentManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2E3B8]), sel_init);
  OUTLINED_FUNCTION_5();
}

uint64_t EmailContentManager.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2E3B8]), sel_init);
  return v0;
}

uint64_t EmailContentManager.fetchEmailDocuments(emailItems:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for OSSignpostError();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = OUTLINED_FUNCTION_18_5();
  v2[10] = type metadata accessor for SearchResultItem(0);
  v2[11] = OUTLINED_FUNCTION_18_5();
  v4 = type metadata accessor for SearchResult(0);
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = OUTLINED_FUNCTION_18_5();
  type metadata accessor for EmailDocument(0);
  v2[15] = OUTLINED_FUNCTION_5_8();
  v2[16] = OUTLINED_FUNCTION_17();
  v5 = type metadata accessor for OSSignpostID();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = OUTLINED_FUNCTION_5_8();
  v2[20] = OUTLINED_FUNCTION_17();
  v2[21] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t EmailContentManager.fetchEmailDocuments(emailItems:)()
{
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  unint64_t v15;
  uint64_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;
  Swift::Int v43;
  unint64_t v44;
  char v45;
  Swift::Bool v46;
  unint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  _QWORD *v62;
  NSObject *v63;
  os_signpost_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint8_t *v73;
  os_signpost_id_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  _QWORD *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;

  if (one-time initialization token for searchSignposter != -1)
    goto LABEL_53;
  while (1)
  {
    v1 = type metadata accessor for OSSignposter();
    isUniquelyReferenced_nonNull_native[22] = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
    OSSignposter.logHandle.getter();
    OSSignpostID.init(log:)();
    v2 = OSSignposter.logHandle.getter();
    v3 = static os_signpost_type_t.begin.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v5 = OUTLINED_FUNCTION_55_1(v4);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v3, v5, "OmniSearchService.fetchEmailDocuments", "", v4);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v6 = isUniquelyReferenced_nonNull_native[20];
    v7 = isUniquelyReferenced_nonNull_native[21];
    v8 = isUniquelyReferenced_nonNull_native[17];
    v9 = isUniquelyReferenced_nonNull_native[18];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    isUniquelyReferenced_nonNull_native[23] = OSSignpostIntervalState.init(id:isOpen:)();
    v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    isUniquelyReferenced_nonNull_native[24] = v10;
    v10(v7, v8);
    if (one-time initialization token for search != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    isUniquelyReferenced_nonNull_native[25] = __swift_project_value_buffer(v11, (uint64_t)static Logging.search);
    swift_bridgeObjectRetain_n();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.info.getter();
    v14 = os_log_type_enabled(v12, v13);
    v81 = isUniquelyReferenced_nonNull_native + 5;
    v15 = isUniquelyReferenced_nonNull_native[5];
    if (v14)
    {
      v16 = isUniquelyReferenced_nonNull_native + 4;
      v17 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v17 = 134217984;
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        v18 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_6_1();
      }
      else
      {
        v18 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      OUTLINED_FUNCTION_6_1();
      *v16 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v12, v13, "EmailContentManager: Gathering full email documents for %ld email items", v17);
      specialized UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease_n();

    v19 = isUniquelyReferenced_nonNull_native + 5;
    if ((unint64_t)*v81 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = _CocoaArrayWrapper.endIndex.getter();
      v21 = *v81;
    }
    else
    {
      v20 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = swift_bridgeObjectRetain();
    }
    v22 = MEMORY[0x24BEE4AF8];
    if (!v20)
      break;
    v79 = isUniquelyReferenced_nonNull_native;
    v23 = 0;
    v83 = v15 & 0xC000000000000001;
    v24 = MEMORY[0x24BEE4AF8];
    v25 = (_QWORD *)MEMORY[0x24BEE4B00];
    v80 = v21 + 32;
    v82 = v20;
    while (1)
    {
      v26 = v83 ? (id)MEMORY[0x2494F62E4](v23, *v19) : *(id *)(v80 + 8 * v23);
      v27 = v26;
      v28 = v23 + 1;
      if (__OFADD__(v23, 1))
        break;
      v29 = objc_msgSend(v26, sel_uniqueIdentifier);
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v32 = v31;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_23_6();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v53;
      }
      v33 = *(_QWORD *)(v24 + 16);
      isUniquelyReferenced_nonNull_native = (_QWORD *)(v33 + 1);
      if (v33 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v54;
      }
      *(_QWORD *)(v24 + 16) = isUniquelyReferenced_nonNull_native;
      v84 = v24;
      v34 = v24 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v30;
      *(_QWORD *)(v34 + 40) = v32;
      v35 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.mailMessageID.getter(objc_msgSend(v27, sel_attributeSet, v79));
      if (v36)
      {
        v37 = v35;
        v38 = v36;
        v27 = v27;
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        v39 = OUTLINED_FUNCTION_28_4();
        v41 = v25[2];
        v42 = (v40 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
          goto LABEL_51;
        v44 = v39;
        v45 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, CSSearchableItem>);
        v46 = _NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v43);
        v19 = v81;
        if (v46)
        {
          v47 = OUTLINED_FUNCTION_28_4();
          if ((v45 & 1) != (v48 & 1))
          {
            OUTLINED_FUNCTION_27_3();
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          }
          v44 = v47;
        }
        if ((v45 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = (_QWORD *)v25[7];

          isUniquelyReferenced_nonNull_native[v44] = v27;
        }
        else
        {
          v25[(v44 >> 6) + 8] |= 1 << v44;
          v49 = (uint64_t *)(v25[6] + 16 * v44);
          *v49 = v37;
          v49[1] = v38;
          *(_QWORD *)(v25[7] + 8 * v44) = v27;
          v50 = v25[2];
          v51 = __OFADD__(v50, 1);
          v52 = v50 + 1;
          if (v51)
            goto LABEL_52;
          v25[2] = v52;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      v24 = v84;
      ++v23;
      if (v28 == v82)
      {
        isUniquelyReferenced_nonNull_native = v79;
        v22 = MEMORY[0x24BEE4AF8];
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once();
  }
  v25 = (_QWORD *)MEMORY[0x24BEE4B00];
  v24 = MEMORY[0x24BEE4AF8];
LABEL_35:
  isUniquelyReferenced_nonNull_native[26] = v25;
  isUniquelyReferenced_nonNull_native[27] = v24;
  swift_bridgeObjectRelease();
  v55 = objc_allocWithZone(MEMORY[0x24BE2E3B0]);
  isUniquelyReferenced_nonNull_native[28] = @nonobjc EMContentRequestOptions.init(builder:)((uint64_t)closure #1 in EmailContentManager.fetchEmailDocuments(emailItems:), 0);
  swift_bridgeObjectRetain();
  v56 = EmailContentManager.messagesFrom(searchableItemIdentifiers:)();
  isUniquelyReferenced_nonNull_native[29] = v56;
  result = swift_bridgeObjectRelease();
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    v58 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v58 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  isUniquelyReferenced_nonNull_native[30] = v58;
  if (!v58)
  {
    v61 = (void *)isUniquelyReferenced_nonNull_native[28];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v62 = isUniquelyReferenced_nonNull_native;
    OUTLINED_FUNCTION_6_1();
    v63 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    v64 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v65 = isUniquelyReferenced_nonNull_native[8];
      v66 = isUniquelyReferenced_nonNull_native[9];
      v67 = v62[7];
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      OUTLINED_FUNCTION_50();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v65 + 88))(v66, v67) == *MEMORY[0x24BEE7810])
      {
        v68 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(v62[8]);
        v68 = "";
      }
      v73 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v74 = OUTLINED_FUNCTION_55_1(v73);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v63, v64, v74, "OmniSearchService.fetchEmailDocuments", v68, v73);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v75 = (void (*)(uint64_t, uint64_t))isUniquelyReferenced_nonNull_native[24];
    v76 = isUniquelyReferenced_nonNull_native[19];
    v77 = isUniquelyReferenced_nonNull_native[17];

    v75(v76, v77);
    OUTLINED_FUNCTION_50();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_27_3();
    __asm { BR              X1 }
  }
  if (v58 < 1)
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native[32] = 0;
    isUniquelyReferenced_nonNull_native[33] = v22;
    isUniquelyReferenced_nonNull_native[31] = 0;
    v59 = isUniquelyReferenced_nonNull_native[29];
    if ((v59 & 0xC000000000000001) != 0)
      v60 = (id)MEMORY[0x2494F62E4](0);
    else
      v60 = *(id *)(v59 + 32);
    v69 = v60;
    isUniquelyReferenced_nonNull_native[34] = v60;
    v70 = isUniquelyReferenced_nonNull_native[28];
    v71 = OUTLINED_FUNCTION_29_5();
    isUniquelyReferenced_nonNull_native[35] = v71;
    *(_QWORD *)(v71 + 16) = v69;
    *(_QWORD *)(v71 + 24) = v70;
    v72 = (_QWORD *)swift_task_alloc();
    isUniquelyReferenced_nonNull_native[36] = v72;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EMContentRepresentation?);
    *v72 = isUniquelyReferenced_nonNull_native;
    v72[1] = EmailContentManager.fetchEmailDocuments(emailItems:);
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_27_3();
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
  return result;
}

{
  OUTLINED_FUNCTION_16_7();
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint8_t *v52;
  os_signpost_id_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(uint64_t **)(v0 + 120);
    v5 = v1;
    EmailContentManager.createEmailDoc(message:contentRep:bodyOptions:)(v2, v5, 32, v4);
    if (v3)
    {
      OUTLINED_FUNCTION_90_0();
      OUTLINED_FUNCTION_90_0();
      v6 = Logger.logObject.getter();
      v7 = static os_log_type_t.error.getter();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(void **)(v0 + 272);
      if (v8)
      {
        v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        v11 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_DWORD *)v10 = 138412290;
        OUTLINED_FUNCTION_90_0();
        v12 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 24) = v12;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v11 = v12;
        OUTLINED_FUNCTION_46_1();
        OUTLINED_FUNCTION_46_1();
        OUTLINED_FUNCTION_29_2(&dword_24315F000, v6, v7, "EmailContentManager: failed to convert message to EmailDoc %@", v10);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_46_1();
      OUTLINED_FUNCTION_46_1();
      OUTLINED_FUNCTION_46_1();

      v17 = 0;
      v16 = *(_QWORD *)(v0 + 264);
    }
    else
    {
      outlined init with take of EmailDocument(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), type metadata accessor for EmailDocument);
      v18 = objc_msgSend(v5, sel_searchableItem);
      v19 = v18;
      if (v18
        && (v20 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.mailMessageID.getter(objc_msgSend(v18, sel_attributeSet)),
            v21))
      {
        specialized Dictionary.subscript.getter(v20, v21, *(_QWORD *)(v0 + 208));
        v23 = v22;
        swift_bridgeObjectRelease();
      }
      else
      {
        v23 = 0;
      }
      v24 = *(_QWORD *)(v0 + 112);
      v26 = *(_QWORD *)(v0 + 88);
      v25 = *(_QWORD *)(v0 + 96);
      outlined init with copy of EmailDocument(*(_QWORD *)(v0 + 128), v26);
      swift_storeEnumTagMultiPayload();
      v27 = (_QWORD *)(v24 + *(int *)(v25 + 24));
      *v27 = 0;
      v27[1] = 0;
      outlined init with take of EmailDocument(v26, v24, type metadata accessor for SearchResultItem);
      v28 = v23;
      if (v19)
      {
        v28 = v23;
        if (!v23)
        {
          v29 = v19;
          v28 = v19;
        }
      }
      *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(int *)(*(_QWORD *)(v0 + 96) + 20)) = v28;
      v30 = v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = *(_QWORD *)(v0 + 264);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_23_6();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v16 = v57;
      }
      v32 = *(_QWORD *)(v16 + 16);
      if (v32 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v16 = v58;
      }
      v33 = *(void **)(v0 + 272);
      v34 = *(_QWORD *)(v0 + 128);
      v36 = *(_QWORD *)(v0 + 104);
      v35 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v16 + 16) = v32 + 1;
      outlined init with take of EmailDocument(v35, v16+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v32, type metadata accessor for SearchResult);

      outlined destroy of EmailDocument(v34);
      v17 = 0;
    }
  }
  else
  {
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_24315F000, v13, v14, "EmailContentManager: EM Content Representation is nil", v15, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    v16 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 248);
  }
  v37 = *(_QWORD *)(v0 + 256) + 1;
  if (v37 == *(_QWORD *)(v0 + 240))
  {
    v38 = *(void **)(v0 + 224);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_1();

    swift_bridgeObjectRelease();
    v39 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    v40 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v41 = *(_QWORD *)(v0 + 64);
      v42 = *(_QWORD *)(v0 + 72);
      v43 = *(_QWORD *)(v0 + 56);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      OUTLINED_FUNCTION_50();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v41 + 88))(v42, v43) == *MEMORY[0x24BEE7810])
      {
        v44 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 64));
        v44 = "";
      }
      v52 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v53 = OUTLINED_FUNCTION_55_1(v52);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v39, v40, v53, "OmniSearchService.fetchEmailDocuments", v44, v52);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v54 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
    v55 = *(_QWORD *)(v0 + 152);
    v56 = *(_QWORD *)(v0 + 136);

    v54(v55, v56);
    OUTLINED_FUNCTION_50();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  }
  else
  {
    *(_QWORD *)(v0 + 256) = v37;
    *(_QWORD *)(v0 + 264) = v16;
    *(_QWORD *)(v0 + 248) = v17;
    v45 = *(_QWORD *)(v0 + 232);
    if ((v45 & 0xC000000000000001) != 0)
      v46 = (id)MEMORY[0x2494F62E4]();
    else
      v46 = *(id *)(v45 + 8 * v37 + 32);
    v47 = v46;
    *(_QWORD *)(v0 + 272) = v46;
    v48 = *(_QWORD *)(v0 + 224);
    v49 = OUTLINED_FUNCTION_29_5();
    *(_QWORD *)(v0 + 280) = v49;
    *(_QWORD *)(v49 + 16) = v47;
    *(_QWORD *)(v49 + 24) = v48;
    v50 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EMContentRepresentation?);
    *v50 = v0;
    v50[1] = EmailContentManager.fetchEmailDocuments(emailItems:);
    OUTLINED_FUNCTION_18_6();
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
}

id closure #1 in EmailContentManager.fetchEmailDocuments(emailItems:)(void *a1)
{
  objc_msgSend(a1, sel_setRequestedRepresentation_, *MEMORY[0x24BE2E378]);
  objc_msgSend(a1, sel_setNetworkUsage_, 2);
  return objc_msgSend(a1, sel_setIncludeSuggestionItems_, 2);
}

void closure #2 in EmailContentManager.fetchEmailDocuments(emailItems:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_11;
  v11 = _Block_copy(aBlock);
  swift_release();
  v12 = objc_msgSend(a2, sel_requestRepresentationWithOptions_completionHandler_, a3, v11);
  _Block_release(v11);

}

void thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t EmailContentManager.mailURLFromId(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v3[8] = OUTLINED_FUNCTION_5_8();
  v3[9] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t EmailContentManager.mailURLFromId(_:)()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = objc_msgSend(*(id *)(v0[7] + 16), sel_messageRepository);
  v2 = OUTLINED_FUNCTION_35_3();
  v3 = (void *)MEMORY[0x2494F5BB8](v2);
  v4 = objc_msgSend(v1, sel_messageForSearchableItemIdentifier_, v3);

  v5 = objc_msgSend(v4, sel_result);
  v0[10] = v5;

  v6 = OUTLINED_FUNCTION_29_5();
  v0[11] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[12] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EMContentRepresentation?);
  *v7 = v0;
  v7[1] = EmailContentManager.mailURLFromId(_:);
  OUTLINED_FUNCTION_54();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  OUTLINED_FUNCTION_16_7();
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 32), sel_publicMessageURL);
    if (v2)
    {
      v3 = v2;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v4 = 0;
    }
    else
    {
      v4 = 1;
    }
    v6 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 72);
    v7 = type metadata accessor for URL();
    __swift_storeEnumTagSinglePayload(v6, v4, 1, v7);
    _s10Foundation3URLVSgWObTm_0(v6, v5, &demangling cache variable for type metadata for URL?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v7);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = *(void **)(v0 + 80);
    if (EnumTagSinglePayload != 1)
    {
      v13 = URL.absoluteString.getter();
      v15 = v14;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v9, v7);
      *(_QWORD *)(v0 + 16) = v13;
      *(_QWORD *)(v0 + 24) = v15;
      lazy protocol witness table accessor for type String and conformance String();
      v11 = StringProtocol.removingPercentEncoding.getter();
      v12 = v16;

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }

    outlined destroy of CustomStringConvertible?(v9, &demangling cache variable for type metadata for URL?);
  }
  else
  {

  }
  v11 = 0;
  v12 = 0;
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v11, v12);
}

void closure #1 in EmailContentManager.mailURLFromId(_:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_optionsWithRequestedRepresentationType_networkUsage_includeSuggestions_, *MEMORY[0x24BE2E378], 2, 2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRepresentation?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_0;
  v10 = _Block_copy(aBlock);
  swift_release();
  v11 = objc_msgSend(a2, sel_requestRepresentationWithOptions_completionHandler_, v7, v10);
  _Block_release(v10);

}

uint64_t closure #1 in closure #2 in EmailContentManager.fetchEmailDocuments(emailItems:)(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  return CheckedContinuation.resume(returning:)();
}

unint64_t EmailContentManager.messagesFrom(searchableItemIdentifiers:)()
{
  uint64_t v0;
  id v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_messageRepository);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, sel_messageObjectIDsForSearchableItemIdentifiers_, isa);

  v4 = objc_msgSend(v3, sel_result);
  v5 = objc_msgSend(v4, sel_objectIDs);
  type metadata accessor for EMMessageObjectID();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = v1;
  v8 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo17EMMessageObjectIDCG_So0D0Cs5NeverOTg50120_s10OmniSearch19EmailContentManagerC12messagesFrom33_74150172F908D36AF44B247DC1E94D2DLL25searchableItemIdentifiersSaySo9d18CGSaySSG_tFAHSo0R8E8IDCXEfU_So0D10RepositoryCTf1cn_n(v6, v7);
  swift_bridgeObjectRelease();
  if (one-time initialization token for search != -1)
    swift_once();
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain_n();
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v12 = 134217984;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_121();
    }
    OUTLINED_FUNCTION_121();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v10, v11, "EmailContentManager: found %ld messages", v12);
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease_n();
  return v8;
}

void EmailContentManager.createEmailDoc(message:contentRep:bodyOptions:)(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  unsigned int v59;
  int v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  unint64_t v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  int *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  _OWORD v113[2];
  __int128 v114;
  __int128 v115;
  char *v116;

  v106 = a1;
  v107 = a3;
  v111 = a4;
  v6 = type metadata accessor for Date();
  v109 = *(_QWORD *)(v6 - 8);
  v110 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v108 = v8 - v7;
  v9 = type metadata accessor for String.Encoding();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v112 = (uint64_t)&v95 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v95 - v16;
  v18 = type metadata accessor for URL();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v116 = (char *)&v95 - v23;
  v24 = objc_msgSend(a2, sel_contentURL);
  if (v24)
  {
    v25 = v24;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v105 = v19;
    v26 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v26(v17, v22, v18);
    OUTLINED_FUNCTION_16_8((uint64_t)v17, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) != 1)
    {
      v27 = v116;
      v26(v116, v17, v18);
      v28 = OUTLINED_FUNCTION_4_10();
      static String.Encoding.utf8.getter();
      v29 = String.init(contentsOf:encoding:)();
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v105 + 8))(v27, v18);

        return;
      }
      v36 = v29;
      v37 = v30;
      v104 = v28;
      v38 = (void *)objc_opt_self();
      v39 = (void *)MEMORY[0x2494F5BB8](v36, v37);
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v38, sel_snippetFromHTMLBody_options_maxLength_preservingQuotedForwardedContent_, v39, v107, 0x7FFFFFFFFFFFFFFFLL, 0);

      v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v103 = v41;

      v42 = OUTLINED_FUNCTION_4_10();
      if (v42
        && (v43 = OUTLINED_FUNCTION_10_7(v42),
            OUTLINED_FUNCTION_17_4(),
            outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentNames.getter(v27),
            v44))
      {
        v100 = v44;
      }
      else
      {
        OUTLINED_FUNCTION_33_3();
        v100 = MEMORY[0x24BEE4AF8];
      }
      v45 = (void *)v106;
      v46 = OUTLINED_FUNCTION_4_10();
      if (v46
        && (v47 = OUTLINED_FUNCTION_10_7(v46),
            OUTLINED_FUNCTION_17_4(),
            outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentTypes.getter(v27),
            v48))
      {
        v99 = v48;
      }
      else
      {
        OUTLINED_FUNCTION_33_3();
        v99 = MEMORY[0x24BEE4AF8];
      }
      v49 = OUTLINED_FUNCTION_4_10();
      if (v49
        && (v50 = OUTLINED_FUNCTION_10_7(v49),
            OUTLINED_FUNCTION_17_4(),
            outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.attachmentPaths.getter(v27),
            v51))
      {
        v98 = v51;
      }
      else
      {
        OUTLINED_FUNCTION_33_3();
        v98 = MEMORY[0x24BEE4AF8];
      }
      v52 = objc_msgSend(a2, sel_publicMessageURL);
      if (v52)
      {
        v53 = v52;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v54 = 0;
      }
      else
      {
        v54 = 1;
      }
      OUTLINED_FUNCTION_16_8((uint64_t)v13, v54);
      _s10Foundation3URLVSgWObTm_0((uint64_t)v13, v112, &demangling cache variable for type metadata for URL?);
      v55 = OUTLINED_FUNCTION_4_10();
      if (v55
        && (v56 = OUTLINED_FUNCTION_10_7(v55),
            OUTLINED_FUNCTION_17_4(),
            v58 = OUTLINED_FUNCTION_12_7(v57, sel_mailRead),
            v27,
            v58))
      {
        v59 = objc_msgSend(v58, sel_BOOLValue);

        v60 = v59 ^ 1;
      }
      else
      {
        v60 = 2;
      }
      v97 = v60;
      if (v104)
      {
        v61 = OUTLINED_FUNCTION_12_7((uint64_t)v55, sel_uniqueIdentifier);
        v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v102 = v62;

        v64 = OUTLINED_FUNCTION_12_7(v63, sel_attributeSet);
        v65 = objc_msgSend(v64, sel_attributeForKey_, *MEMORY[0x24BDC2348]);

        if (v65)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v113, 0, sizeof(v113));
        }
        _s10Foundation3URLVSgWObTm_0((uint64_t)v113, (uint64_t)&v114, &demangling cache variable for type metadata for Any?);
        if (*((_QWORD *)&v115 + 1))
        {
          if (swift_dynamicCast())
          {
            v66 = *((_QWORD *)&v113[0] + 1);
            v96 = *(_QWORD *)&v113[0];
LABEL_40:
            v67 = objc_msgSend(v45, sel_subject, v66);
            if (v67)
            {
              v68 = v67;
              v69 = objc_msgSend(v67, sel_subjectString);

              v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v71 = v70;

            }
            else
            {
              v101 = 0;
              v71 = 0;
            }
            v72 = objc_msgSend(v45, sel_senderList);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ECEmailAddressConvertible);
            v73 = OUTLINED_FUNCTION_31_4();

            EmailContentManager.convertEmailToStringArray(_:)(v73);
            v75 = v74;
            v76 = swift_bridgeObjectRelease();
            v77 = OUTLINED_FUNCTION_12_7(v76, sel_toList);
            v78 = OUTLINED_FUNCTION_31_4();

            EmailContentManager.convertEmailToStringArray(_:)(v78);
            v80 = v79;
            v81 = swift_bridgeObjectRelease();
            v82 = OUTLINED_FUNCTION_12_7(v81, sel_ccList);
            v83 = OUTLINED_FUNCTION_31_4();

            EmailContentManager.convertEmailToStringArray(_:)(v83);
            v85 = v84;
            v86 = swift_bridgeObjectRelease();
            v87 = OUTLINED_FUNCTION_12_7(v86, sel_date);
            v88 = v108;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            (*(void (**)(char *, uint64_t))(v105 + 8))(v116, v18);
            v89 = (int *)type metadata accessor for EmailDocument(0);
            v90 = (char *)v111;
            v91 = (char *)v111 + v89[18];
            v92 = v102;
            *v111 = v106;
            *((_QWORD *)v90 + 1) = v92;
            v93 = v95;
            *((_QWORD *)v90 + 2) = v96;
            *((_QWORD *)v90 + 3) = v93;
            *((_QWORD *)v90 + 4) = v101;
            *((_QWORD *)v90 + 5) = v71;
            v94 = v103;
            *((_QWORD *)v90 + 6) = v107;
            *((_QWORD *)v90 + 7) = v94;
            *((_QWORD *)v90 + 8) = MEMORY[0x24BEE4AF8];
            *((_QWORD *)v90 + 9) = v75;
            *((_QWORD *)v90 + 10) = v80;
            *((_QWORD *)v90 + 11) = v85;
            (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(&v90[v89[12]], v88, v110);
            *(_QWORD *)&v90[v89[13]] = v100;
            *(_QWORD *)&v90[v89[14]] = v99;
            *(_QWORD *)&v90[v89[15]] = v98;
            v90[v89[16]] = v97;
            _s10Foundation3URLVSgWObTm_0(v112, (uint64_t)&v90[v89[17]], &demangling cache variable for type metadata for URL?);
            *(_OWORD *)v91 = 0u;
            *((_OWORD *)v91 + 1) = 0u;
            *((_QWORD *)v91 + 4) = 0;
            return;
          }
LABEL_39:
          v96 = 0;
          v66 = 0xE000000000000000;
          goto LABEL_40;
        }
      }
      else
      {
        v106 = 0;
        v114 = 0u;
        v115 = 0u;
        v102 = 0xE000000000000000;
      }
      outlined destroy of CustomStringConvertible?((uint64_t)&v114, &demangling cache variable for type metadata for Any?);
      goto LABEL_39;
    }
  }
  else
  {
    OUTLINED_FUNCTION_16_8((uint64_t)v17, 1);
  }
  outlined destroy of CustomStringConvertible?((uint64_t)v17, &demangling cache variable for type metadata for URL?);
  if (one-time initialization token for search != -1)
    swift_once();
  v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)static Logging.search);
  v32 = Logger.logObject.getter();
  v33 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_24315F000, v32, v33, "EmailContentManager: no contentURL", v34, 2u);
    MEMORY[0x2494F6D70](v34, -1, -1);
  }

  lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
  swift_allocError();
  *(_QWORD *)v35 = 0xD000000000000022;
  *(_QWORD *)(v35 + 8) = 0x800000024335BB90;
  *(_BYTE *)(v35 + 16) = 1;
  swift_willThrow();
}

void EmailContentManager.convertEmailToStringArray(_:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_6_1();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      v3 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v4 = (void *)MEMORY[0x2494F62E4](v3, a1);
        }
        else
        {
          v4 = *(void **)(a1 + 8 * v3 + 32);
          swift_unknownObjectRetain();
        }
        v5 = objc_msgSend(v4, sel_stringValue);
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v8 = v7;
        swift_unknownObjectRelease();

        v9 = *(_QWORD *)(v11 + 16);
        if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        ++v3;
        *(_QWORD *)(v11 + 16) = v9 + 1;
        v10 = v11 + 16 * v9;
        *(_QWORD *)(v10 + 32) = v6;
        *(_QWORD *)(v10 + 40) = v8;
      }
      while (v2 != v3);
    }
  }
}

uint64_t EmailContentManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EmailContentManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

BOOL specialized OptionSet<>.insert(_:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

BOOL specialized OptionSet<>.insert(_:)(_DWORD *a1, int a2)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t specialized OptionSet<>.formUnion(_:)(uint64_t result)
{
  _DWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t @nonobjc EMContentRequestOptions.init(builder:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v10[4] = partial apply for thunk for @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ();
  v10[5] = v5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ();
  v10[3] = &block_descriptor_17;
  v6 = _Block_copy(v10);
  swift_retain();
  v7 = objc_msgSend(v2, sel_initWithBuilder_, v6);
  _Block_release(v6);
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return (uint64_t)v7;
  __break(1u);
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v4;
  *v4 = 0x8000000000000000;
  a4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *v4 = v11;
  return swift_bridgeObjectRelease();
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  *v3 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *v3 = v9;
  return swift_bridgeObjectRelease();
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, char a3, char a4)
{
  Swift::Int *v4;
  Swift::Int *v5;
  char v9;
  Swift::Int v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  int v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;

  v5 = v4;
  v9 = a3 & 1;
  v10 = *v4;
  specialized __RawDictionaryStorage.find<A>(_:)(a3 & 1);
  OUTLINED_FUNCTION_7_9();
  if (v13)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<GlobalSearchClient.QueryType, Result<[SearchResult], Error>>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v10))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v9);
    OUTLINED_FUNCTION_26_5();
    if (!v17)
      goto LABEL_10;
    v14 = v16;
  }
  v18 = a2 & 1;
  v19 = (_QWORD *)*v5;
  if ((v15 & 1) != 0)
  {
    v20 = v18 != 0;
    v21 = v19[7] + 16 * v14;
    outlined consume of Result<[SearchResult], Error>(*(id *)v21, *(_BYTE *)(v21 + 8));
    *(_QWORD *)v21 = a1;
    *(_BYTE *)(v21 + 8) = v20;
    OUTLINED_FUNCTION_12_0();
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v14, v9, a1, v18, v19);
  }
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  OUTLINED_FUNCTION_7_9();
  if (v11)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, CSSearchableItem>);
  if (OUTLINED_FUNCTION_30_3(a4 & 1))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    OUTLINED_FUNCTION_26_5();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v4;
  if ((v13 & 1) != 0)
  {
    v17 = *(_QWORD *)(v16 + 56);

    *(_QWORD *)(v17 + 8 * v12) = a1;
    OUTLINED_FUNCTION_12_0();
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v16);
    swift_bridgeObjectRetain();
  }
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD **v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;

  v7 = type metadata accessor for SearchResultType();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v11 = v10 - v9;
  specialized __RawDictionaryStorage.find<A>(_:)(a2);
  OUTLINED_FUNCTION_7_9();
  if (v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v12;
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SearchResultType, [(offset: Int, element: SearchResult)]>);
  if (OUTLINED_FUNCTION_30_3(a3 & 1))
  {
    v17 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v16 & 1) == (v18 & 1))
    {
      v15 = v17;
      goto LABEL_5;
    }
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
LABEL_5:
  v19 = *v3;
  if ((v16 & 1) != 0)
  {
    v20 = v19[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v20 + 8 * v15) = a1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
    specialized _NativeDictionary._insert(at:key:value:)(v15, v11, a1, v19);
  }
  OUTLINED_FUNCTION_43_0();
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  Swift::Int *v5;
  Swift::Int *v6;
  Swift::Int v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t *v21;

  v6 = v5;
  v12 = *v5;
  specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
  OUTLINED_FUNCTION_7_9();
  if (v15)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v16 = v13;
  v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, String>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a5 & 1, v12))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
    OUTLINED_FUNCTION_26_5();
    if (!v19)
      goto LABEL_10;
    v16 = v18;
  }
  v20 = (_QWORD *)*v6;
  if ((v17 & 1) != 0)
  {
    v21 = (uint64_t *)(v20[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *v21 = a1;
    v21[1] = a2;
    OUTLINED_FUNCTION_43_0();
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a3, a4, a1, a2, v20);
    swift_bridgeObjectRetain();
  }
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  Swift::Int v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v5 = v4;
  v10 = *v4;
  v11 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v12 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v11;
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [String]>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15))
    goto LABEL_5;
  v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v16 = v18;
LABEL_5:
  v20 = *v5;
  if ((v17 & 1) != 0)
  {
    v21 = *(_QWORD *)(v20 + 56);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 8 * v16) = a1;
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  Swift::Int v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v11;
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15))
    goto LABEL_5;
  v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v16 = v18;
LABEL_5:
  v20 = *v5;
  if ((v17 & 1) != 0)
  {
    v21 = (_OWORD *)(v20[7] + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return outlined init with take of Any(a1, v21);
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a2, a3, a1, v20);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, char a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2 & 1;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;

  result = OUTLINED_FUNCTION_6_8(a1, a2, a3, a4, a5);
  if (v8)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v7;
  return result;
}

uint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for SearchResultType();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = outlined init with take of Any(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.mailMessageID.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_mailMessageID);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void partial apply for closure #2 in EmailContentManager.fetchEmailDocuments(emailItems:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in EmailContentManager.fetchEmailDocuments(emailItems:)(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t outlined init with copy of EmailDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EmailDocument(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void outlined init with take of EmailDocument(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_14_3(v3);
  OUTLINED_FUNCTION_5();
}

uint64_t outlined destroy of EmailDocument(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EmailDocument(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in EmailContentManager.mailURLFromId(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in EmailContentManager.mailURLFromId(_:)(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for EmailContentManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmailContentManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmailContentManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EmailContentManager.fetchEmailDocuments(emailItems:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = dispatch thunk of EmailContentManager.fetchEmailDocuments(emailItems:);
  return v6(a1);
}

{
  uint64_t v1;

  OUTLINED_FUNCTION_16_7();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t dispatch thunk of EmailContentManager.mailURLFromId(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v0 + 104) + *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = dispatch thunk of EmailContentManager.mailURLFromId(_:);
  v3 = OUTLINED_FUNCTION_35_3();
  return v5(v3);
}

uint64_t dispatch thunk of EmailContentManager.mailURLFromId(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_16_7();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(a1, a2);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError;
  if (!lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for OmniSearchError, &type metadata for OmniSearchError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OmniSearchError and conformance OmniSearchError);
  }
  return result;
}

void _s10Foundation3URLVSgWObTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_14_3(v3);
  OUTLINED_FUNCTION_5();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 - 8));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in EmailContentManager.mailURLFromId(_:)()
{
  void *v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<EMContentRepresentation?, Never>);
  v0 = (void *)OUTLINED_FUNCTION_35_3();
  return closure #1 in closure #2 in EmailContentManager.fetchEmailDocuments(emailItems:)(v0);
}

unint64_t type metadata accessor for EMMessageObjectID()
{
  unint64_t result;

  result = lazy cache variable for type metadata for EMMessageObjectID;
  if (!lazy cache variable for type metadata for EMMessageObjectID)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for EMMessageObjectID);
  }
  return result;
}

uint64_t sub_2431AB9D0()
{
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed EMContentRequestOptionsBuilder) -> ()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id OUTLINED_FUNCTION_4_10()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 4085));
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_6_8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * result) = a4;
  return result;
}

id OUTLINED_FUNCTION_10_7(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1280));
}

id OUTLINED_FUNCTION_12_7(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_14_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_16_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_20_5(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return 0;
}

unint64_t OUTLINED_FUNCTION_28_4()
{
  uint64_t v0;
  uint64_t v1;

  return specialized __RawDictionaryStorage.find<A>(_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  return swift_task_alloc();
}

BOOL OUTLINED_FUNCTION_30_3(Swift::Bool a1)
{
  Swift::Int v1;

  return _NativeDictionary.ensureUnique(isUnique:capacity:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  uint64_t v0;

  return v0;
}

void CSSearchableItem.senderNames.getter()
{
  uint64_t v0;
  id v1;

  CSSearchableItem.isMailMessageItem.getter();
  if ((v0 & 1) != 0)
  {
    v1 = OUTLINED_FUNCTION_12_7(v0, sel_attributeSet);
    outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.authorNames.getter(v1);
  }
}

uint64_t SearchSpotlightEntity.experienceSourceType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE6E220];
  v3 = type metadata accessor for SearchResultType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id SearchSpotlightEntity.card.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_93_1(a1, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  v1 = OUTLINED_FUNCTION_126_0();
  outlined copy of Data?(v1, v2);
  v3 = OUTLINED_FUNCTION_126_0();
  return SFCard.init(data:)(v3, v4);
}

void key path setter for SearchSpotlightEntity.card : SearchSpotlightEntity(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  SearchSpotlightEntity.card.setter((uint64_t)v1);
}

void SearchSpotlightEntity.card.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v3 = v1;
  if (a1)
  {
    OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_82_3();
  }
  else
  {
    v1 = 0;
    v2 = 0xF000000000000000;
  }
  outlined consume of Data?(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.card.modify(id *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;

  a1[1] = (id)v1;
  OUTLINED_FUNCTION_93_1((uint64_t)a1, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  outlined copy of Data?(v4, v3);
  *a1 = SFCard.init(data:)(v4, v3);
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.card.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  char v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v4 = (void *)OUTLINED_FUNCTION_89_4(a1);
  if ((v5 & 1) != 0)
  {
    v12 = v4;
    if (v4)
    {
      v6 = v4;
      OUTLINED_FUNCTION_84_2();
      OUTLINED_FUNCTION_82_3();
    }
    else
    {
      v2 = 0;
      v3 = 0xF000000000000000;
    }
    v10 = *(_QWORD *)(v1 + 8);
    outlined consume of Data?(*(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24));
    *(_QWORD *)(v10 + 16) = v2;
    *(_QWORD *)(v10 + 24) = v3;

  }
  else
  {
    if (v4)
    {
      v13 = v4;
      v7 = SFCard.data.getter();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0xF000000000000000;
    }
    v11 = *(_QWORD *)(v1 + 8);
    outlined consume of Data?(*(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24));
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v9;
  }
}

void SearchSpotlightEntity.documentSource.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_2_5();
}

void SearchSpotlightEntity.documentSource.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchSpotlightEntity.documentSource.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.$documentSource.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.title.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_2_5();
}

void SearchSpotlightEntity.title.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void SearchSpotlightEntity.title.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.$title.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.experienceFile.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.experienceFile.setter(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_60_3(a1);
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.experienceFile.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.$experienceFile.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.encodedSearchableItem.getter()
{
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_5();
}

void key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_63_1();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, v5, &demangling cache variable for type metadata for IntentFile?);
  a5(v5);
  OUTLINED_FUNCTION_63();
}

void SearchSpotlightEntity.encodedSearchableItem.setter(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_59_4();
  OUTLINED_FUNCTION_60_3(a1);
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_76_1(a1);
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.encodedSearchableItem.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.$encodedSearchableItem.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.searchableItemType.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.sourceResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SearchSpotlightEntity(0);
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 44), v2, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.sourceResult.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SearchSpotlightEntity(0);
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 44), &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchSpotlightEntity.sourceResult.modify())()
{
  type metadata accessor for SearchSpotlightEntity(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_OWORD *);
  void (*v23)(_OWORD *);
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_18_2();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v24);
  v25 = OUTLINED_FUNCTION_44_4();
  v26 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(v25);
  OUTLINED_FUNCTION_15();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (_OWORD *)((char *)&a9 - v32);
  *v33 = 0u;
  v33[1] = 0u;
  v34 = (char *)&a9 + *(int *)(v31 + 24) - v32;
  v35 = OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_49((uint64_t)v34, v36, v37, v35);
  v38 = (_QWORD *)((char *)v33 + v26[7]);
  *v38 = 0;
  v38[1] = 0;
  v39 = (_QWORD *)((char *)v33 + v26[8]);
  *v39 = 0;
  v39[1] = 0;
  *(_QWORD *)((char *)v33 + v26[9]) = 0;
  v40 = (uint64_t)v33 + v26[10];
  v41 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v40, v42, v43, v41);
  *(_QWORD *)((char *)v33 + v26[11]) = MEMORY[0x24BEE4AF8];
  v23(v33);
  OUTLINED_FUNCTION_106_2((uint64_t)v33, (uint64_t)v30);
  SearchSpotlightEntity.init(builder:)();
}

void sub_2431AC2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t EnumTagSinglePayload;
  uint64_t v4;

  OUTLINED_FUNCTION_108_1();
  v2 = type metadata accessor for SearchSpotlightEntity(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  if ((_DWORD)EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_75_3(EnumTagSinglePayload, &demangling cache variable for type metadata for SearchSpotlightEntity?);
    v4 = 1;
  }
  else
  {
    outlined init with take of SearchResult(v1, v0, type metadata accessor for SearchSpotlightEntity);
    v4 = 0;
  }
  __swift_storeEnumTagSinglePayload(v0, v4, 1, v2);
  OUTLINED_FUNCTION_43_0();
}

void SearchSpotlightEntity.Builder.init()()
{
  _OWORD *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)OUTLINED_FUNCTION_73_3();
  *v0 = 0u;
  v0[1] = 0u;
  v2 = (uint64_t)v0 + v1[6];
  v3 = OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_49(v2, v4, v5, v3);
  v6 = (_QWORD *)((char *)v0 + v1[7]);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)((char *)v0 + v1[8]);
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v0 + v1[9]) = 0;
  v8 = (uint64_t)v0 + v1[10];
  v9 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v8, v10, v11, v9);
  *(_QWORD *)((char *)v0 + v1[11]) = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.init(builder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_1();
  *(_OWORD *)(v0 + 16) = xmmword_24334E610;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_27_4();
  OUTLINED_FUNCTION_63_3();
}

void sub_2431AC46C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_63_3();
}

void sub_2431AC47C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_135();
  v1[6] = MEMORY[0x2494F42B0](v2);
  OUTLINED_FUNCTION_98_2();
  v1[7] = MEMORY[0x2494F42B0](v2);
  v4 = (uint64_t)v1 + *(int *)(v3 + 44);
  v5 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v4, v6, v7, v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_63_3();
}

void sub_2431AC51C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v8 - 112) = v6;
  *(_QWORD *)((char *)v2 + v6) = a1;
  v9 = v3[1];
  if (v9)
  {
    v10 = *v3;
    *(_QWORD *)(v8 - 128) = v7;
    v11 = (_QWORD *)((char *)v2 + *(int *)(v7 + 48));
    *v11 = v10;
    v11[1] = v9;
    v12 = v3[3];
    *v2 = v3[2];
    v2[1] = v12;
    v13 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
    v14 = (uint64_t *)((char *)v3 + v13[7]);
    v15 = v14[1];
    v2[8] = *v14;
    v2[9] = v15;
    v16 = (uint64_t)v3 + v13[6];
    *(_QWORD *)(v8 - 136) = v4;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v16, v5, &demangling cache variable for type metadata for IntentFile?);
    OUTLINED_FUNCTION_123_0(v5);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_7();
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_67_4();
    type metadata accessor for LocalIndexClient();
    *(_QWORD *)(v8 - 96) = static LocalIndexClient.displayName(for:)(v3[2], v3[3]);
    *(_QWORD *)(v8 - 88) = v17;
    OUTLINED_FUNCTION_114_1();
    v18 = (uint64_t *)((char *)v3 + v13[8]);
    v19 = v18[1];
    *(_QWORD *)(v8 - 96) = *v18;
    *(_QWORD *)(v8 - 88) = v19;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_114_1();
    outlined assign with copy of SearchResult?((uint64_t)v3 + v13[10], *(_QWORD *)(v8 - 136));
    v20 = swift_bridgeObjectRetain();
    IntentFile.init(experiences:)(v20, v5);
    OUTLINED_FUNCTION_123_0(v5);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_67_4();
    v21 = SearchSpotlightEntity.validTypeIdentifiers.getter();
    v22 = *(_QWORD *)((char *)v2 + *(_QWORD *)(v8 - 112));
    *(_QWORD *)(v8 - 96) = v21;
    OUTLINED_FUNCTION_114_1();
    v23 = *(void **)((char *)v3 + v13[9]);
    if (v23)
    {
      v24 = v23;
      OUTLINED_FUNCTION_84_2();
      OUTLINED_FUNCTION_72_1();
    }
    else
    {
      v1 = 0;
      v22 = 0xF000000000000000;
    }
    v33 = *(_QWORD *)(v8 - 104);
    v34 = outlined consume of Data?(v2[2], v2[3]);
    v2[2] = v1;
    v2[3] = v22;
    OUTLINED_FUNCTION_96_1(v34, type metadata accessor for SearchSpotlightEntity.Builder);
    outlined init with copy of SearchResult((uint64_t)v2, v33, type metadata accessor for SearchSpotlightEntity);
    __swift_storeEnumTagSinglePayload(v33, 0, 1, *(_QWORD *)(v8 - 128));
    OUTLINED_FUNCTION_6_7((uint64_t)v2);
  }
  else
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v25, (uint64_t)static Logging.search);
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_24315F000, v26, v27, "Missing fields to create SearchSpotlightEntity", v28, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_96_1(v29, type metadata accessor for SearchSpotlightEntity.Builder);
    outlined consume of Data?(v2[2], v2[3]);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of MobileSMSDocument?(v4, &demangling cache variable for type metadata for SearchResult?);
    swift_release();
    OUTLINED_FUNCTION_86_3();
    __swift_storeEnumTagSinglePayload(v30, v31, v32, v7);
  }
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchSpotlightEntity.validTypeIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  int EnumTagSinglePayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v0;
  v4 = OUTLINED_FUNCTION_0_4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_79_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24334EDD0;
  EntityProperty.wrappedValue.getter();
  v8 = OUTLINED_FUNCTION_53_4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v8);
  OUTLINED_FUNCTION_67_4();
  if (EnumTagSinglePayload == 1)
  {
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
    v11 = *(_QWORD *)(v3 + 64);
    v10 = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(inited + 48) = v11;
    *(_QWORD *)(inited + 56) = v10;
    OUTLINED_FUNCTION_4_7();
    v12 = MEMORY[0x24BEE4AF8];
    if (!v10)
      goto LABEL_14;
    goto LABEL_9;
  }
  if (one-time initialization token for searchToolExportedExperiences != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)static UTType.searchToolExportedExperiences);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v13, v4);
  v14 = UTType.identifier.getter();
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v16;
  v11 = *(_QWORD *)(v3 + 64);
  v10 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v10;
  OUTLINED_FUNCTION_4_7();
  swift_bridgeObjectRetain();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v12 = v17;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
  {
    OUTLINED_FUNCTION_68_3();
    v12 = v25;
  }
  *(_QWORD *)(v12 + 16) = v18 + 1;
  v19 = v12 + 16 * v18;
  *(_QWORD *)(v19 + 32) = v14;
  *(_QWORD *)(v19 + 40) = v16;
  if (v10)
  {
LABEL_9:
    OUTLINED_FUNCTION_4_7();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_68_3();
      v12 = v23;
    }
    v20 = *(_QWORD *)(v12 + 16);
    if (v20 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      OUTLINED_FUNCTION_68_3();
      v12 = v24;
    }
    *(_QWORD *)(v12 + 16) = v20 + 1;
    v21 = v12 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v11;
    *(_QWORD *)(v21 + 40) = v10;
  }
LABEL_14:
  swift_release();
  return v12;
}

void SearchSpotlightEntity.supportedTypeIdentifiersForExport.setter()
{
  OUTLINED_FUNCTION_42_4();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchSpotlightEntity.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_2();
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_57_2();
  MEMORY[0x24BDAC7A8](v3);
  v5 = type metadata accessor for UUID();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_79_4();
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_78_4();
  *(_OWORD *)(v1 + 16) = xmmword_24334E610;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_27_4();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431ACB04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431ACB14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_138();
  OUTLINED_FUNCTION_135();
  v1[6] = MEMORY[0x2494F42B0](v2);
  OUTLINED_FUNCTION_97_2();
  v1[7] = MEMORY[0x2494F42B0](v2);
  v3 = (uint64_t)v1 + *(int *)(OUTLINED_FUNCTION_41_3() + 44);
  v4 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_49(v3, v5, v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431ACBB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)((char *)v1 + v4) = a1;
  UUID.init()();
  v9 = UUID.uuidString.getter();
  v11 = v10;
  (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v5, *(_QWORD *)(v8 - 88));
  v12 = (_QWORD *)((char *)v1 + *(int *)(v6 + 48));
  *v12 = v9;
  v12[1] = v11;
  v13 = OUTLINED_FUNCTION_53_4();
  *v1 = 0;
  v1[1] = 0;
  v1[8] = 0;
  v1[9] = 0;
  OUTLINED_FUNCTION_49(v3, v14, v15, v13);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v3, v2, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_25_1();
  outlined destroy of MobileSMSDocument?(v3, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_43_0();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSpotlightEntity.validateParameters()()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SearchSpotlightEntity(0) + 48));
  v3 = *v1;
  v2 = v1[1];
  v4 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v2) & 0xF;
  else
    v5 = v4;
  if (!v5)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_13();
    v7 = (void *)OUTLINED_FUNCTION_28(v6, (uint64_t)static Logging.search);
    v8 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_21(v8))
    {
      *(_WORD *)OUTLINED_FUNCTION_5_3() = 0;
      OUTLINED_FUNCTION_65_4(&dword_24315F000, v9, v10, "Attempting to create SearchSpotlightEntity without id");
      specialized UnsafeMutablePointer.deallocate()();
    }

    lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
    OUTLINED_FUNCTION_74_4();
    *v11 = xmmword_24334E620;
    OUTLINED_FUNCTION_113_0();
  }
}

void SearchSpotlightEntity.Builder.id.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.bundleId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.bundleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.bundleId.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.encodedSearchableItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 24), v2, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.encodedSearchableItem.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 24), &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchSpotlightEntity.Builder.encodedSearchableItem.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.getter()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_129_0();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.title.getter()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.title.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_129_0();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.title.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.card.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(type metadata accessor for SearchSpotlightEntity.Builder(0) + 36));
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.card.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_39_2() + 36);

  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.card.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchSpotlightEntity.Builder.sourceResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_107_1(v0 + *(int *)(v1 + 40), v2, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.Builder.sourceResult.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_128_0(v1, v0 + *(int *)(v1 + 40), &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchSpotlightEntity.Builder.sourceResult.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchSpotlightEntity.Builder.experiences.getter()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return swift_bridgeObjectRetain();
}

void SearchSpotlightEntity.Builder.experiences.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_39_2() + 44);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchSpotlightEntity.Builder.experiences.modify())()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t default argument 7 of SearchSpotlightEntity.Builder.init(id:bundleId:encodedSearchableItem:spotlightContentTypeIdentifier:title:card:sourceResult:experiences:)()
{
  return MEMORY[0x24BEE4AF8];
}

void SearchSpotlightEntity.Builder.init(id:bundleId:encodedSearchableItem:spotlightContentTypeIdentifier:title:card:sourceResult:experiences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  _QWORD *v39;
  _QWORD *v40;

  OUTLINED_FUNCTION_18_2();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  *v32 = v34;
  v32[1] = v35;
  v32[2] = v36;
  v32[3] = v37;
  v38 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
  outlined init with take of URL?(v31, (uint64_t)v33 + v38[6], &demangling cache variable for type metadata for IntentFile?);
  v39 = (_QWORD *)((char *)v33 + v38[7]);
  *v39 = v29;
  v39[1] = v27;
  v40 = (_QWORD *)((char *)v33 + v38[8]);
  *v40 = v25;
  v40[1] = a21;
  *(_QWORD *)((char *)v33 + v38[9]) = a22;
  outlined init with take of URL?(a23, (uint64_t)v33 + v38[10], &demangling cache variable for type metadata for SearchResult?);
  *(_QWORD *)((char *)v33 + v38[11]) = a24;
  OUTLINED_FUNCTION_43_0();
}

CSSearchableItem __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSpotlightEntity.getCSSearchableItem()()
{
  objc_class *v0;
  CSSearchableItem v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE *v24;

  v1.super.isa = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_2();
  v5 = v4 - v3;
  v6 = type metadata accessor for IntentFile();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_59_4();
  EntityProperty.wrappedValue.getter();
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    outlined destroy of MobileSMSDocument?(v5, &demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_13();
    v9 = (void *)OUTLINED_FUNCTION_28(v8, (uint64_t)static Logging.search);
    v10 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21(v10))
    {
      *(_WORD *)OUTLINED_FUNCTION_5_3() = 0;
      OUTLINED_FUNCTION_65_4(&dword_24315F000, v11, v12, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      specialized UnsafeMutablePointer.deallocate()();
    }

    lazy protocol witness table accessor for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError();
    OUTLINED_FUNCTION_74_4();
    *v13 = 0;
    OUTLINED_FUNCTION_113_0();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_112_0();
    v15(v14);
    v16 = IntentFile.data.getter();
    OUTLINED_FUNCTION_93_1(v16, &lazy cache variable for type metadata for NSKeyedUnarchiver);
    OUTLINED_FUNCTION_93_1(v17, (unint64_t *)&lazy cache variable for type metadata for CSSearchableItem);
    v18 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    if (v0)
    {
      OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      OUTLINED_FUNCTION_109_1();
    }
    else
    {
      v1.super.isa = (Class)v18;
      OUTLINED_FUNCTION_109_1();
      if (v1.super.isa)
      {
        OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      }
      else
      {
        if (one-time initialization token for search != -1)
          swift_once();
        v20 = OUTLINED_FUNCTION_13();
        v21 = OUTLINED_FUNCTION_28(v20, (uint64_t)static Logging.search);
        v22 = static os_log_type_t.error.getter();
        v1.super.isa = (Class)v22;
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)OUTLINED_FUNCTION_5_3();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_24315F000, v21, (os_log_type_t)v1.super.isa, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data", v23, 2u);
          specialized UnsafeMutablePointer.deallocate()();
        }

        lazy protocol witness table accessor for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError();
        OUTLINED_FUNCTION_74_4();
        *v24 = 1;
        OUTLINED_FUNCTION_113_0();
        OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      }
    }
  }
  return v1;
}

uint64_t static CSSearchableItem.makeFrom(data:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_93_1(a1, &lazy cache variable for type metadata for NSKeyedUnarchiver);
  OUTLINED_FUNCTION_93_1(v1, (unint64_t *)&lazy cache variable for type metadata for CSSearchableItem);
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

void SearchSpotlightEntity.id.getter()
{
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void static SearchSpotlightEntity.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchSpotlightEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24))(v3, a1, v2);
  swift_endAccess();
  v4 = OUTLINED_FUNCTION_6_5();
  v5(v4);
  OUTLINED_FUNCTION_51_0();
}

void static SearchSpotlightEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

void SearchSpotlightEntity.displayRepresentation.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  Class isa;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[2];

  OUTLINED_FUNCTION_18_2();
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v50 = OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_18_1();
  v49 = v9;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v48 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_44_4();
  v17 = type metadata accessor for LocalizedStringResource();
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_57_2();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v48 - v19;
  EntityProperty.wrappedValue.getter();
  v51 = v1;
  if (v54[1])
  {
    v21 = LocalizedStringResource.init(stringLiteral:)();
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    OUTLINED_FUNCTION_138();
    v22._countAndFlagsBits = 0xD000000000000025;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    if (v0[1])
    {
      v23 = *v0;
      isa = v3[1].isa;
    }
    else
    {
      isa = (Class)0xE300000000000000;
      v23 = 7104878;
    }
    swift_bridgeObjectRetain();
    v25._countAndFlagsBits = v23;
    v25._object = isa;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v25);
    swift_bridgeObjectRelease();
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    v21 = LocalizedStringResource.init(stringInterpolation:)();
  }
  OUTLINED_FUNCTION_93_1(v21, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  v27 = (uint64_t)v3[2].isa;
  v28 = (unint64_t)v3[3].isa;
  outlined copy of Data?(v27, v28);
  v29 = SFCard.init(data:)(v27, v28);
  if (v29)
  {
    v30 = v29;
    SFCard.snippetPluginModel.getter(v15);

    v31 = type metadata accessor for RGPluginModel();
    OUTLINED_FUNCTION_22_2((uint64_t)v15, 1, v31);
    if (v32)
    {
      outlined destroy of MobileSMSDocument?((uint64_t)v15, &demangling cache variable for type metadata for RGPluginModel?);
    }
    else
    {
      lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel);
      SnippetPluginModel.data.getter();
      v34 = v33;
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v15, v31);
      if (v34 >> 60 != 15)
      {
        v41 = v52;
        OUTLINED_FUNCTION_84_3(v51, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v52 + 16));
        static RGPluginModel.bundleName.getter();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        goto LABEL_17;
      }
    }
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v35 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v35, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult((uint64_t)v3, (uint64_t)v12, type metadata accessor for SearchSpotlightEntity);
  v3 = Logger.logObject.getter();
  v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v36))
  {
    v48[0] = v5;
    v48[1] = v2;
    v37 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v54[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v37 = 136315138;
    outlined init with copy of SearchResult((uint64_t)v12, v49, type metadata accessor for SearchSpotlightEntity);
    v38 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v54);
    OUTLINED_FUNCTION_120_0(v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v12, type metadata accessor for SearchSpotlightEntity);
    _os_log_impl(&dword_24315F000, v3, v36, "Fallback to use title only displayRepresentation for entity: %s", v37, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v12, type metadata accessor for SearchSpotlightEntity);

  v41 = v52;
  OUTLINED_FUNCTION_84_3(v51, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v52 + 16));
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v42, v43, v44, (uint64_t)v3);
  v45 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_49(v2, v46, v47, v45);
  DisplayRepresentation.init(title:subtitle:image:)();
LABEL_17:
  (*(void (**)(char *, NSObject *))(v41 + 8))(v20, v3);
  OUTLINED_FUNCTION_43_0();
}

uint64_t SearchSpotlightEntity.Query.entities(for:)()
{
  uint64_t v0;

  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchSpotlightEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchSpotlightEntity.Query.entities(for:)();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchSpotlightEntity.Query()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query();
  *v1 = v0;
  v1[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return EntityQuery.results()();
}

uint64_t (*static SearchSpotlightEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchSpotlightEntity.supportedTypeIdentifiersForExport.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_42_4();
  EntityProperty.wrappedValue.getter();
  return v1;
}

void key path setter for SearchSpotlightEntity.supportedTypeIdentifiersForExport : SearchSpotlightEntity()
{
  swift_bridgeObjectRetain();
  SearchSpotlightEntity.supportedTypeIdentifiersForExport.setter();
}

void SearchSpotlightEntity.supportedTypeIdentifiersForExport.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  OUTLINED_FUNCTION_42_4();
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.$supportedTypeIdentifiersForExport.getter()
{
  OUTLINED_FUNCTION_42_4();
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t static SearchSpotlightEntity.performTransfer(to:entity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  CSSearchableItem v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int EnumTagSinglePayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  Class isa;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v80 = a1;
  v3 = type metadata accessor for UTType();
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v76 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)v64 - v6;
  v7 = type metadata accessor for SearchResultType();
  v8 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  v75 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SearchTransferabilityError.Code();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IntentFile();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.super.isa = SearchSpotlightEntity.getCSSearchableItem()().super.isa;
  if (!v23)
  {
    v67 = v21;
    v68 = (uint64_t)v18;
    v65 = v16;
    v66 = v15;
    v64[1] = 0;
    v69 = a2;
    v70 = v10;
    v24 = v79;
    v25 = v76;
    isa = v22.super.isa;
    v73 = v12;
    v81 = v11;
    v71 = v14;
    outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(-[objc_class attributeSet](v22.super.isa, sel_attributeSet), (SEL *)&selRef_contentType);
    v27 = v26;
    v29 = v28;
    v30 = UTType.identifier.getter();
    if (v29)
    {
      if (v27 == v30 && v29 == v31)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v77;
        v36 = v24;
        v34 = v68;
        v35 = (uint64_t)v67;
        goto LABEL_21;
      }
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      v34 = v68;
      v35 = (uint64_t)v67;
      if ((v33 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v36 = v79;
        v37 = v77;
LABEL_21:
        EntityProperty.wrappedValue.getter();
        v54 = v66;
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v35, 1, v66);
        v56 = v75;
        v57 = v81;
        v58 = v73;
        v59 = v65;
        if (!EnumTagSinglePayload)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v34, v35, v54);
          outlined destroy of MobileSMSDocument?(v35, &demangling cache variable for type metadata for IntentFile?);
          a2 = IntentFile.data.getter();

          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v34, v54);
          return a2;
        }
        outlined destroy of MobileSMSDocument?(v35, &demangling cache variable for type metadata for IntentFile?);
        (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v71, *MEMORY[0x24BE6E2E8], v57);
        a2 = (uint64_t)v70;
        (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v70, *MEMORY[0x24BE6E220], v74);
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v80, v78);
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v69 = v27;
    if (one-time initialization token for search != -1)
      swift_once();
    v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logging.search);
    v39 = v77;
    v40 = v78;
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
    v42 = v80;
    v41(v25, v80, v78);
    swift_bridgeObjectRetain();
    v43 = Logger.logObject.getter();
    v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v83 = v68;
      *(_DWORD *)v45 = 136315394;
      if (v29)
        v46 = v69;
      else
        v46 = 0;
      if (v29)
        v47 = v29;
      else
        v47 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, &v83);
      v82 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type UTType and conformance UTType);
      v49 = v76;
      v50 = dispatch thunk of CustomStringConvertible.description.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v83);
      v82 = v52;
      v40 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v40);
      _os_log_impl(&dword_24315F000, v43, v44, "Transferable: Spotlight %s does not match requested contentType %s", (uint8_t *)v45, 0x16u);
      v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v53, -1, -1);
      MEMORY[0x2494F6D70](v45, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
    }

    v60 = v79;
    a2 = (uint64_t)v70;
    v61 = v74;
    v62 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v71, *MEMORY[0x24BE6E2F0], v81);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 104))(a2, *MEMORY[0x24BE6E220], v61);
    v41(v60, v42, v40);
LABEL_25:
    type metadata accessor for SearchTransferabilityError();
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchTransferabilityError and conformance SearchTransferabilityError);
    swift_allocError();
    SearchTransferabilityError.init(code:sourceResultType:targetTransferType:)();
    swift_willThrow();

  }
  return a2;
}

void static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_18_2();
  v29 = v0;
  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  v32 = v3;
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DataRepresentation<SearchSpotlightEntity>);
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_18_1();
  v27 = v6;
  OUTLINED_FUNCTION_17_1();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)&v23 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v30 = (uint64_t)&v23 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v31 = (uint64_t)&v23 - v15;
  type metadata accessor for SearchSpotlightEntity(0);
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  static ExperienceProviding<>.experienceTransferableRepresentation()();
  static UTType.emailMessage.getter();
  OUTLINED_FUNCTION_17_8();
  static UTType.message.getter();
  v16 = (uint64_t)v12;
  OUTLINED_FUNCTION_17_8();
  static UTType.calendarEvent.getter();
  OUTLINED_FUNCTION_17_8();
  static UTType.contact.getter();
  v17 = v27;
  OUTLINED_FUNCTION_17_8();
  v18 = v32 + v1[12];
  v19 = v32 + v1[16];
  v20 = v32 + v1[20];
  v24 = v32 + v1[24];
  v25 = v1;
  OUTLINED_FUNCTION_75_4(v32, v31);
  OUTLINED_FUNCTION_75_4(v18, v30);
  OUTLINED_FUNCTION_75_4(v19, v16);
  v21 = v20;
  v22 = v26;
  OUTLINED_FUNCTION_75_4(v21, v26);
  OUTLINED_FUNCTION_75_4(v24, v17);
  TupleTransferRepresentation.init(_:)();
  OUTLINED_FUNCTION_61_2(v17);
  OUTLINED_FUNCTION_61_2(v22);
  OUTLINED_FUNCTION_61_2(v16);
  OUTLINED_FUNCTION_61_2(v30);
  OUTLINED_FUNCTION_61_2(v31);
  OUTLINED_FUNCTION_43_0();
}

uint64_t closure #1 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_50_4();
  static UTType.emailMessage.getter();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_15_4(v1);
  OUTLINED_FUNCTION_99();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
    return OUTLINED_FUNCTION_8_6(v2);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_7_10(v4, v5, v6);
  }
}

uint64_t closure #2 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_50_4();
  static UTType.message.getter();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_15_4(v1);
  OUTLINED_FUNCTION_99();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
    return OUTLINED_FUNCTION_8_6(v2);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_7_10(v4, v5, v6);
  }
}

uint64_t closure #3 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #3 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_50_4();
  static UTType.calendarEvent.getter();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_15_4(v1);
  OUTLINED_FUNCTION_99();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
    return OUTLINED_FUNCTION_8_6(v2);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_7_10(v4, v5, v6);
  }
}

uint64_t closure #4 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #4 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_50_4();
  static UTType.contact.getter();
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_15_4(v1);
  OUTLINED_FUNCTION_99();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_103_2();
    return OUTLINED_FUNCTION_8_6(v2);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_7_10(v4, v5, v6);
  }
}

uint64_t SearchSpotlightEntity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v12;

  v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6174614464726163 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x746E656D75636F64 && a2 == 0xEE00656372756F53;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E65697265707865 && a2 == 0xEE00656C69466563;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x800000024335BD20
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x800000024335BD40
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x6552656372756F73 && a2 == 0xEC000000746C7573;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 25705 && a2 == 0xE200000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000021 && a2 == 0x800000024335BD60)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v12 & 1) != 0)
                  return 9;
                else
                  return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t SearchSpotlightEntity.CodingKeys.init(intValue:)()
{
  return 10;
}

uint64_t SearchSpotlightEntity.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431AEDA8 + 4 * byte_24334EDE0[a1]))(0x6449656C646E7562, 0xE800000000000000);
}

uint64_t sub_2431AEDA8()
{
  return 0x6174614464726163;
}

uint64_t sub_2431AEDBC()
{
  return 0x746E656D75636F64;
}

uint64_t sub_2431AEDE0()
{
  return 0x656C746974;
}

uint64_t sub_2431AEDF4()
{
  return 0x6E65697265707865;
}

unint64_t sub_2431AEE18()
{
  return 0xD000000000000015;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchSpotlightEntity.CodingKeys()
{
  unsigned __int8 *v0;

  return SearchSpotlightEntity.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchSpotlightEntity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = SearchSpotlightEntity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SearchSpotlightEntity.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = SearchSpotlightEntity.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchSpotlightEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchSpotlightEntity.CodingKeys()
{
  lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SearchSpotlightEntity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchSpotlightEntity.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  OUTLINED_FUNCTION_66_4();
  if (!v1)
  {
    lazy protocol witness table accessor for type Data and conformance Data();
    OUTLINED_FUNCTION_65_3();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_6_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
    lazy protocol witness table accessor for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_66_4();
    type metadata accessor for SearchSpotlightEntity(0);
    type metadata accessor for SearchResult(0);
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchResult and conformance SearchResult);
    OUTLINED_FUNCTION_65_3();
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
    lazy protocol witness table accessor for type EntityProperty<[String]> and conformance <> EntityProperty<A>();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t static SearchSpotlightEntity.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  BOOL v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[4];
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  OUTLINED_FUNCTION_18_2();
  v149 = v1;
  v150 = v2;
  v4 = v3;
  v6 = v5;
  v130 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0_3();
  v126 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchResult?, SearchResult?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0_3();
  v131 = v12;
  v138 = OUTLINED_FUNCTION_53_4();
  v13 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  OUTLINED_FUNCTION_0_3();
  v127 = v14;
  v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IntentFile?, IntentFile?));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0_3();
  v135 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_18_1();
  v133 = v18;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_31_0();
  v136 = v20;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v21);
  v137 = &v123[-v22];
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_15();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = &v123[-v26];
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_31_0();
  v141 = v28;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_31_0();
  v140 = v30;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_31_0();
  v146 = v32;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_31_0();
  v139 = v34;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_31_0();
  v143 = v36;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_31_0();
  v144 = v38;
  OUTLINED_FUNCTION_17_1();
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = &v123[-v41];
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = &v123[-v44];
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = &v123[-v47];
  v49 = MEMORY[0x24BDAC7A8](v46);
  v53 = &v123[-v52];
  v54 = *(int *)(v49 + 48);
  v55 = *(_QWORD *)(v6 + v54);
  v56 = *(_QWORD *)(v6 + v54 + 8);
  v57 = (_QWORD *)(v4 + v54);
  v58 = v55 == *v57 && v56 == v57[1];
  v145 = v27;
  v142 = v50;
  v125 = v0;
  v128 = v51;
  v129 = v10;
  v132 = v13;
  if (v58)
  {
    v60 = v6;
    v68 = OUTLINED_FUNCTION_126_0();
    OUTLINED_FUNCTION_90_3(v68, v69);
    v63 = v4;
    v70 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_90_3(v70, v71);
  }
  else
  {
    v59 = OUTLINED_FUNCTION_18_7();
    v60 = v6;
    v61 = OUTLINED_FUNCTION_126_0();
    outlined init with copy of SearchResult(v61, v62, type metadata accessor for SearchSpotlightEntity);
    v63 = v4;
    v64 = OUTLINED_FUNCTION_112_0();
    outlined init with copy of SearchResult(v64, v65, type metadata accessor for SearchSpotlightEntity);
    if ((v59 & 1) == 0)
    {
      OUTLINED_FUNCTION_33_4((uint64_t)v48);
      OUTLINED_FUNCTION_33_4((uint64_t)v53);
      v67 = (uint64_t)v145;
      v66 = v146;
LABEL_19:
      v75 = v60;
      goto LABEL_20;
    }
  }
  v72 = v53[1];
  v73 = v48[1];
  v66 = v146;
  if (!v72)
  {
    swift_bridgeObjectRetain();
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v48, type metadata accessor for SearchSpotlightEntity);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v53, type metadata accessor for SearchSpotlightEntity);
    v75 = v60;
    if (v73)
    {
      swift_bridgeObjectRelease();
      v67 = (uint64_t)v145;
LABEL_20:
      v76 = v139;
      OUTLINED_FUNCTION_2_7(v75, (uint64_t)v45);
      OUTLINED_FUNCTION_2_7(v63, (uint64_t)v42);
      goto LABEL_21;
    }
    goto LABEL_33;
  }
  if (!v73)
  {
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_33_4((uint64_t)v48);
    OUTLINED_FUNCTION_33_4((uint64_t)v53);
    OUTLINED_FUNCTION_26_0();
    v67 = (uint64_t)v145;
    goto LABEL_19;
  }
  v74 = *v53 == *v48 && v72 == v73;
  v75 = v60;
  if (v74)
  {
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_33_4((uint64_t)v48);
    OUTLINED_FUNCTION_33_4((uint64_t)v53);
    OUTLINED_FUNCTION_26_0();
LABEL_33:
    OUTLINED_FUNCTION_2_7(v75, (uint64_t)v45);
    OUTLINED_FUNCTION_2_7(v63, (uint64_t)v42);
    v67 = (uint64_t)v145;
    v66 = v146;
    v76 = v139;
    goto LABEL_34;
  }
  v124 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_33_4((uint64_t)v48);
  OUTLINED_FUNCTION_33_4((uint64_t)v53);
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_90_3(v60, (uint64_t)v45);
  OUTLINED_FUNCTION_90_3(v63, (uint64_t)v42);
  v67 = (uint64_t)v145;
  v76 = v139;
  if ((v124 & 1) == 0)
  {
LABEL_21:
    OUTLINED_FUNCTION_1_9((uint64_t)v42);
    OUTLINED_FUNCTION_1_9((uint64_t)v45);
LABEL_22:
    v77 = v140;
    v79 = v143;
    v78 = v144;
    v80 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_2_7(v80, v81);
    OUTLINED_FUNCTION_2_7(v63, v79);
LABEL_23:
    OUTLINED_FUNCTION_1_9(v79);
    OUTLINED_FUNCTION_1_9(v78);
    v82 = v142;
LABEL_24:
    OUTLINED_FUNCTION_2_7(v75, v76);
    OUTLINED_FUNCTION_2_7(v63, v66);
LABEL_25:
    OUTLINED_FUNCTION_1_9(v66);
    OUTLINED_FUNCTION_1_9(v76);
    v83 = v141;
LABEL_26:
    OUTLINED_FUNCTION_2_7(v75, v77);
    OUTLINED_FUNCTION_2_7(v63, v83);
LABEL_27:
    OUTLINED_FUNCTION_1_9(v83);
    OUTLINED_FUNCTION_1_9(v77);
LABEL_28:
    OUTLINED_FUNCTION_2_7(v75, v67);
    OUTLINED_FUNCTION_2_7(v63, v82);
LABEL_29:
    OUTLINED_FUNCTION_6_7(v82);
    OUTLINED_FUNCTION_6_7(v67);
    goto LABEL_30;
  }
LABEL_34:
  OUTLINED_FUNCTION_87_2();
  v87 = v147;
  v86 = v148;
  OUTLINED_FUNCTION_87_2();
  v88 = v148;
  if (!v86)
  {
    OUTLINED_FUNCTION_83_2((uint64_t)v42);
    OUTLINED_FUNCTION_83_2((uint64_t)v45);
    if (v88)
    {
      OUTLINED_FUNCTION_36_0();
      goto LABEL_22;
    }
    goto LABEL_46;
  }
  if (!v148)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_9((uint64_t)v42);
    OUTLINED_FUNCTION_1_9((uint64_t)v45);
    OUTLINED_FUNCTION_104_1();
    goto LABEL_22;
  }
  if (v87 == v147 && v86 == v148)
  {
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9((uint64_t)v42);
    OUTLINED_FUNCTION_1_9((uint64_t)v45);
    OUTLINED_FUNCTION_96_0();
LABEL_46:
    v78 = v144;
    OUTLINED_FUNCTION_2_7(v75, v144);
    v79 = v143;
    OUTLINED_FUNCTION_2_7(v63, v143);
    v77 = v140;
    goto LABEL_47;
  }
  v90 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_1_9((uint64_t)v42);
  OUTLINED_FUNCTION_1_9((uint64_t)v45);
  OUTLINED_FUNCTION_96_0();
  v78 = v144;
  OUTLINED_FUNCTION_2_7(v75, v144);
  v79 = v143;
  OUTLINED_FUNCTION_2_7(v63, v143);
  v77 = v140;
  if ((v90 & 1) == 0)
    goto LABEL_23;
LABEL_47:
  OUTLINED_FUNCTION_87_2();
  v91 = v78;
  v93 = v147;
  v92 = v148;
  OUTLINED_FUNCTION_87_2();
  v94 = v148;
  if (!v92)
  {
    OUTLINED_FUNCTION_83_2(v79);
    OUTLINED_FUNCTION_83_2(v91);
    v82 = v142;
    if (!v94)
    {
LABEL_60:
      OUTLINED_FUNCTION_2_7(v75, v76);
      OUTLINED_FUNCTION_2_7(v63, v66);
      v67 = (uint64_t)v145;
      goto LABEL_61;
    }
    OUTLINED_FUNCTION_36_0();
LABEL_58:
    v67 = (uint64_t)v145;
    goto LABEL_24;
  }
  v82 = v142;
  if (!v148)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_9(v143);
    OUTLINED_FUNCTION_1_9(v144);
    OUTLINED_FUNCTION_104_1();
    goto LABEL_58;
  }
  if (v93 == v147 && v92 == v148)
  {
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_1_9(v143);
    OUTLINED_FUNCTION_1_9(v144);
    OUTLINED_FUNCTION_96_0();
    goto LABEL_60;
  }
  v96 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_1_9(v143);
  OUTLINED_FUNCTION_1_9(v144);
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_2_7(v75, v76);
  OUTLINED_FUNCTION_2_7(v63, v66);
  v67 = (uint64_t)v145;
  if ((v96 & 1) == 0)
    goto LABEL_25;
LABEL_61:
  v97 = *(_QWORD *)(v76 + 72);
  v98 = v66;
  v99 = *(_QWORD *)(v66 + 72);
  if (!v97)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_9(v98);
    OUTLINED_FUNCTION_1_9(v76);
    v83 = v141;
    if (!v99)
    {
LABEL_74:
      OUTLINED_FUNCTION_2_7(v75, v77);
      OUTLINED_FUNCTION_2_7(v63, v83);
      goto LABEL_75;
    }
LABEL_72:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v83 = v141;
  if (!v99)
  {
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_59_3(v146);
    OUTLINED_FUNCTION_59_3(v76);
    goto LABEL_72;
  }
  v100 = v146;
  if (*(_QWORD *)(v76 + 64) == *(_QWORD *)(v146 + 64) && v97 == v99)
  {
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_59_3(v100);
    OUTLINED_FUNCTION_59_3(v76);
    OUTLINED_FUNCTION_36_0();
    goto LABEL_74;
  }
  LODWORD(v144) = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_59_3(v100);
  OUTLINED_FUNCTION_59_3(v76);
  OUTLINED_FUNCTION_36_0();
  outlined init with copy of SearchResult(v75, v77, type metadata accessor for SearchSpotlightEntity);
  outlined init with copy of SearchResult(v63, v83, type metadata accessor for SearchSpotlightEntity);
  if ((v144 & 1) == 0)
    goto LABEL_27;
LABEL_75:
  v102 = v137;
  EntityProperty.wrappedValue.getter();
  v103 = v136;
  EntityProperty.wrappedValue.getter();
  v104 = v135;
  v105 = v135 + *(int *)(v134 + 48);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?((uint64_t)v102, v135, &demangling cache variable for type metadata for IntentFile?);
  v146 = v105;
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v103, v105, &demangling cache variable for type metadata for IntentFile?);
  v106 = v138;
  OUTLINED_FUNCTION_22_2(v104, 1, v138);
  if (v58)
  {
    OUTLINED_FUNCTION_76_1(v103);
    OUTLINED_FUNCTION_76_1((uint64_t)v102);
    OUTLINED_FUNCTION_59_3(v83);
    OUTLINED_FUNCTION_59_3(v77);
    OUTLINED_FUNCTION_22_2(v146, 1, v138);
    v107 = v104;
    if (v58)
    {
      outlined destroy of MobileSMSDocument?(v104, &demangling cache variable for type metadata for IntentFile?);
      OUTLINED_FUNCTION_2_7(v75, v67);
      OUTLINED_FUNCTION_2_7(v63, v82);
      goto LABEL_85;
    }
LABEL_83:
    outlined destroy of MobileSMSDocument?(v107, &demangling cache variable for type metadata for (IntentFile?, IntentFile?));
    goto LABEL_28;
  }
  v108 = v133;
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v104, v133, &demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_22_2(v146, 1, v106);
  if (v109)
  {
    v107 = v104;
    OUTLINED_FUNCTION_71_3(v136);
    OUTLINED_FUNCTION_71_3((uint64_t)v137);
    OUTLINED_FUNCTION_1_9(v83);
    OUTLINED_FUNCTION_1_9(v77);
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v108, v106);
    goto LABEL_83;
  }
  v110 = v127;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v127, v146, v106);
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type IntentFile and conformance IntentFile);
  LODWORD(v146) = dispatch thunk of static Equatable.== infix(_:_:)();
  v111 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
  v111(v110, v106);
  OUTLINED_FUNCTION_71_3(v136);
  OUTLINED_FUNCTION_71_3((uint64_t)v137);
  OUTLINED_FUNCTION_108_1();
  _s10OmniSearch0B6ResultVWOhTm_1(v77, type metadata accessor for SearchSpotlightEntity);
  v111(v133, v106);
  OUTLINED_FUNCTION_71_3(v135);
  OUTLINED_FUNCTION_106_2(v75, v67);
  OUTLINED_FUNCTION_106_2(v63, v82);
  if ((v146 & 1) == 0)
    goto LABEL_29;
LABEL_85:
  v112 = *(int *)(v128 + 44);
  v113 = v82 + v112;
  v114 = v131;
  v115 = v131 + *(int *)(v129 + 48);
  OUTLINED_FUNCTION_60_3(v67 + v112);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v113, v115, &demangling cache variable for type metadata for SearchResult?);
  v116 = v130;
  OUTLINED_FUNCTION_22_2(v114, 1, v130);
  if (v58)
  {
    OUTLINED_FUNCTION_1_9(v82);
    OUTLINED_FUNCTION_1_9(v67);
    v117 = OUTLINED_FUNCTION_22_2(v115, 1, v116);
    if (v58)
    {
      OUTLINED_FUNCTION_111_0(v117, &demangling cache variable for type metadata for SearchResult?);
      v84 = 1;
      return v84 & 1;
    }
  }
  else
  {
    v118 = v126;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v114, v126, &demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_22_2(v115, 1, v116);
    if (!v119)
    {
      v121 = v125;
      outlined init with take of SearchResult(v115, v125, type metadata accessor for SearchResult);
      v84 = static SearchResult.== infix(_:_:)(v118, v121);
      OUTLINED_FUNCTION_1_9(v121);
      OUTLINED_FUNCTION_59_3(v82);
      OUTLINED_FUNCTION_59_3(v67);
      OUTLINED_FUNCTION_1_9(v118);
      OUTLINED_FUNCTION_111_0(v122, &demangling cache variable for type metadata for SearchResult?);
      return v84 & 1;
    }
    OUTLINED_FUNCTION_6_7(v82);
    OUTLINED_FUNCTION_6_7(v67);
    OUTLINED_FUNCTION_124_0(v120, type metadata accessor for SearchResult);
  }
  OUTLINED_FUNCTION_111_0(v117, &demangling cache variable for type metadata for (SearchResult?, SearchResult?));
LABEL_30:
  v84 = 0;
  return v84 & 1;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchSpotlightEntity(_QWORD *a1)
{
  return SearchSpotlightEntity.encode(to:)(a1);
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchSpotlightEntity()
{
  SearchSpotlightEntity.validateParameters()();
}

uint64_t protocol witness for ExperienceProviding.experienceSourceType.getter in conformance SearchSpotlightEntity@<X0>(uint64_t a1@<X8>)
{
  return SearchSpotlightEntity.experienceSourceType.getter(a1);
}

void protocol witness for Identifiable.id.getter in conformance SearchSpotlightEntity(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SearchSpotlightEntity.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

void SearchSpotlightEntity.init(result:card:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint8_t *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  id v98[2];

  OUTLINED_FUNCTION_18_2();
  v95 = v2;
  v4 = v3;
  v6 = v5;
  v98[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for SearchResultType();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_2();
  v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_78_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0_3();
  v91 = v14;
  v96 = OUTLINED_FUNCTION_53_4();
  v93 = *(uint8_t **)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_0_3();
  v90 = v15;
  v16 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_18_1();
  v92 = v18;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)v87 - v20);
  v22 = OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_61_0();
  v25 = *(int *)(v24 + 20);
  v97 = v4;
  v26 = *(void **)(v4 + v25);
  if (v26)
  {
    v87[1] = v1;
    v94 = v6;
    v27 = v26;
    CSSearchableItem.title.getter();
    v88 = v29;
    v89 = v28;
    v87[0] = (uint64_t)v21 + v16[6];
    OUTLINED_FUNCTION_86_3();
    __swift_storeEnumTagSinglePayload(v30, v31, v32, v96);
    v33 = (uint64_t *)((char *)v21 + v16[7]);
    v34 = (uint64_t *)((char *)v21 + v16[8]);
    v35 = v16[9];
    *(uint64_t *)((char *)v21 + v35) = 0;
    v36 = (uint64_t)v21 + v16[10];
    OUTLINED_FUNCTION_86_3();
    __swift_storeEnumTagSinglePayload(v37, v38, v39, v22);
    *(uint64_t *)((char *)v21 + v16[11]) = MEMORY[0x24BEE4AF8];
    v40 = objc_msgSend(v27, sel_uniqueIdentifier);
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v43 = v42;

    *v21 = v41;
    v21[1] = v43;
    outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v27);
    v21[2] = v44;
    v21[3] = v45;
    v46 = v88;
    *v34 = v89;
    v34[1] = v46;
    outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(v27, sel_attributeSet), (SEL *)&selRef_contentType);
    *v33 = v47;
    v33[1] = v48;
    OUTLINED_FUNCTION_75_3(v47, &demangling cache variable for type metadata for SearchResult?);
    v49 = v97;
    outlined init with copy of SearchResult(v97, v36, type metadata accessor for SearchResult);
    __swift_storeEnumTagSinglePayload(v36, 0, 1, v22);
    v50 = *(void **)((char *)v21 + v35);
    v51 = v95;
    *(uint64_t *)((char *)v21 + v35) = (uint64_t)v95;
    v52 = v51;

    v53 = (void *)objc_opt_self();
    v98[0] = 0;
    v54 = objc_msgSend(v53, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v27, 1, v98);
    v55 = v98[0];
    v56 = v49;
    if (v54)
    {
      static Data._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_72_1();
      v57 = OUTLINED_FUNCTION_0_4();
      OUTLINED_FUNCTION_49(v91, v58, v59, v57);
      v60 = v90;
      OUTLINED_FUNCTION_6_5();
      IntentFile.init(data:filename:type:)();
      v61 = v87[0];
      outlined destroy of MobileSMSDocument?(v87[0], &demangling cache variable for type metadata for IntentFile?);
      (*((void (**)(uint64_t, uint64_t, uint64_t))v93 + 4))(v61, v60, v96);
      v62 = OUTLINED_FUNCTION_136_0();
      __swift_storeEnumTagSinglePayload(v62, v63, v64, v65);
      outlined init with copy of SearchResult((uint64_t)v21, v92, type metadata accessor for SearchSpotlightEntity.Builder);
      SearchSpotlightEntity.init(builder:)();
    }
    v77 = v55;
    v78 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for search != -1)
      swift_once();
    v79 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v79, (uint64_t)static Logging.search);
    v80 = Logger.logObject.getter();
    v81 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v82 = 0;
      _os_log_impl(&dword_24315F000, v80, v81, "Unable to encode this CSSearchableItem as Data", v82, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    _s10OmniSearch0B6ResultVWOhTm_1(v56, type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v21, type metadata accessor for SearchSpotlightEntity.Builder);
  }
  else
  {
    v66 = v11;
    v96 = v7;
    v67 = v97;
    if (one-time initialization token for search != -1)
      swift_once();
    v68 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v68, (uint64_t)static Logging.search);
    outlined init with copy of SearchResult(v67, v0, type metadata accessor for SearchResult);
    v69 = Logger.logObject.getter();
    v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v98[0] = (id)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v71 = 136315138;
      v93 = v71 + 4;
      SearchResultItem.type.getter();
      v72 = SearchResultType.rawValue.getter();
      v94 = v6;
      v73 = v66;
      v75 = v74;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v73, v96);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v75, (uint64_t *)v98);
      OUTLINED_FUNCTION_120_0(v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_9(v0);
      _os_log_impl(&dword_24315F000, v69, v70, "CSSI is nil unexpectedly for %s", v71, 0xCu);
      swift_arrayDestroy();
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_6_7(v0);
    OUTLINED_FUNCTION_6_7(v67);
  }
  OUTLINED_FUNCTION_41_3();
  OUTLINED_FUNCTION_86_3();
  __swift_storeEnumTagSinglePayload(v83, v84, v85, v86);
  OUTLINED_FUNCTION_43_0();
}

void CSSearchableItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  id v5;
  char **v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_137();
  if (v1)
  {
    v2 = v0;
    if (v0 == 0xD000000000000015 && (OUTLINED_FUNCTION_16_9(), v3)
      || (OUTLINED_FUNCTION_9_6() & 1) != 0
      || v2 == 0xD000000000000023 && (OUTLINED_FUNCTION_16_9(), v3)
      || (OUTLINED_FUNCTION_9_6() & 1) != 0)
    {
      v4 = OUTLINED_FUNCTION_6_1();
      v5 = OUTLINED_FUNCTION_12_7(v4, sel_attributeSet);
      v6 = &selRef_title;
LABEL_29:
      outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v5, (SEL *)v6);
      goto LABEL_30;
    }
    if (v2 == 0xD000000000000014 && (OUTLINED_FUNCTION_16_9(), v3) || (OUTLINED_FUNCTION_9_6() & 1) != 0)
    {
      v7 = OUTLINED_FUNCTION_6_1();
      v5 = OUTLINED_FUNCTION_12_7(v7, sel_attributeSet);
      v6 = &selRef_subject;
      goto LABEL_29;
    }
    if (v2 == 0xD000000000000013 && (OUTLINED_FUNCTION_16_9(), v3)
      || (OUTLINED_FUNCTION_9_6() & 1) != 0
      || v2 == 0xD000000000000012 && (OUTLINED_FUNCTION_16_9(), v3)
      || (OUTLINED_FUNCTION_138(), (OUTLINED_FUNCTION_18_7() & 1) != 0))
    {
      v8 = OUTLINED_FUNCTION_6_1();
      v9 = OUTLINED_FUNCTION_12_7(v8, sel_attributeSet);
LABEL_28:
      v5 = v9;
      v6 = &selRef_displayName;
      goto LABEL_29;
    }
    if (v2 == 0xD000000000000019)
    {
      OUTLINED_FUNCTION_16_9();
      if (v3)
      {
        v0 = OUTLINED_FUNCTION_6_1();
LABEL_25:
        v5 = OUTLINED_FUNCTION_12_7(v0, sel_attributeSet);
        v6 = &selRef_photosContentDescription;
        goto LABEL_29;
      }
    }
    v10 = OUTLINED_FUNCTION_9_6();
    v0 = OUTLINED_FUNCTION_6_1();
    if ((v10 & 1) != 0)
      goto LABEL_25;
  }
  v11 = OUTLINED_FUNCTION_12_7(v0, sel_attributeSet);
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v11, (SEL *)&selRef_title);
  if (!v13)
  {
    v9 = OUTLINED_FUNCTION_12_7(v12, sel_attributeSet);
    goto LABEL_28;
  }
LABEL_30:
  OUTLINED_FUNCTION_12();
}

BOOL static SearchSpotlightEntity.SearchSpotlightEntityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SearchSpotlightEntity.SearchSpotlightEntityError.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_5();
}

Swift::Int SearchSpotlightEntity.SearchSpotlightEntityError.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void CSSearchableItem.isMailMessageItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_137();
  if (!v1)
    goto LABEL_5;
  if (v0 == 0xD000000000000014)
  {
    OUTLINED_FUNCTION_16_9();
    if (v2)
    {
LABEL_12:
      OUTLINED_FUNCTION_6_1();
      goto LABEL_13;
    }
  }
  v3 = OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_6_1();
  if ((v3 & 1) == 0)
  {
LABEL_5:
    OUTLINED_FUNCTION_137();
    if (!v5)
      goto LABEL_13;
    if (v4 != 0xD000000000000013 || (OUTLINED_FUNCTION_16_9(), !v2))
      OUTLINED_FUNCTION_18_7();
    goto LABEL_12;
  }
LABEL_13:
  OUTLINED_FUNCTION_12();
}

void SearchSpotlightEntity.asNLGEntity.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_61_0();
  SearchNLGEntity.init()();
}

void sub_2431B0A18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  EntityProperty.wrappedValue.getter();
  *(_OWORD *)(v3 - 64) = *(_OWORD *)(v3 - 64);
  OUTLINED_FUNCTION_127_0();
  EntityProperty.wrappedValue.getter();
  *(_OWORD *)(v3 - 64) = *(_OWORD *)(v3 - 64);
  OUTLINED_FUNCTION_127_0();
  v4 = type metadata accessor for SearchSpotlightEntity(0);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v2 + *(int *)(v4 + 44), v0, v1);
  v5 = OUTLINED_FUNCTION_77_0();
  v6 = OUTLINED_FUNCTION_22_2(v0, 1, v5);
  if (v7)
  {
    OUTLINED_FUNCTION_75_3(v6, &demangling cache variable for type metadata for SearchResult?);
LABEL_7:
    v11 = 0;
    goto LABEL_8;
  }
  v8 = *(void **)(v0 + *(int *)(v5 + 20));
  if (!v8)
  {
    OUTLINED_FUNCTION_124_0(v6, type metadata accessor for SearchResult);
    goto LABEL_7;
  }
  v9 = v8;
  OUTLINED_FUNCTION_124_0((uint64_t)v9, type metadata accessor for SearchResult);
  CSSearchableItem.senderNames.getter();
  v11 = v10;

LABEL_8:
  *(_QWORD *)(v3 - 64) = v11;
  OUTLINED_FUNCTION_127_0();
  OUTLINED_FUNCTION_63();
}

void outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(void *a1)
{
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_title);
}

void outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(void *a1)
{
  if (objc_msgSend(a1, sel_bundleID))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_72_1();
  }
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_12();
}

void outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.authorNames.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_authorNames);

  if (v2)
  {
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_5();
}

uint64_t type metadata accessor for SearchSpotlightEntity(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for SearchSpotlightEntity);
}

uint64_t type metadata accessor for SearchSpotlightEntity.Builder(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for SearchSpotlightEntity.Builder);
}

void outlined assign with take of SearchResult?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_70_1(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_5();
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.SearchSpotlightEntityError, &type metadata for SearchSpotlightEntity.SearchSpotlightEntityError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.SearchSpotlightEntityError, &type metadata for SearchSpotlightEntity.SearchSpotlightEntityError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError);
  }
  return result;
}

void lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_100();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_49_3(v1, (uint64_t)partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter);
  return closure #1 in static SearchSpotlightEntity.transferRepresentation.getter(v2);
}

uint64_t partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_49_3(v1, (uint64_t)partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter);
  return closure #2 in static SearchSpotlightEntity.transferRepresentation.getter(v2);
}

uint64_t partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(a1, a2);
}

uint64_t partial apply for closure #3 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_49_3(v1, (uint64_t)partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter);
  return closure #3 in static SearchSpotlightEntity.transferRepresentation.getter(v2);
}

uint64_t partial apply for closure #4 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_49_3(v1, (uint64_t)partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter);
  return closure #4 in static SearchSpotlightEntity.transferRepresentation.getter(v2);
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.CodingKeys, &unk_2513C9D00);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.CodingKeys, &unk_2513C9D00);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.CodingKeys, &unk_2513C9D00);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.CodingKeys, &unk_2513C9D00);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
    v2[0] = lazy protocol witness table accessor for type IntentFile? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?);
    v2[1] = lazy protocol witness table accessor for type IntentFile? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5368], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IntentFile? and conformance <A> A?(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_89_4(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentFile?);
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel(v6);
    v9 = v8;
    result = MEMORY[0x2494F6CA4](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<[String]> and conformance <> EntityProperty<A>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<[String]>);
    v2[0] = _sSSSgxSgSesSeRzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    v2[1] = _sSSSgxSgSesSeRzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5368], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>);
  }
  return result;
}

unint64_t _sSSSgxSgSesSeRzlWlTm_0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_89_4(a1);
  if (!result)
  {
    v6 = v5;
    v7 = v4;
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v9 = v7;
    result = MEMORY[0x2494F6CA4](v6, v8, &v9);
    atomic_store(result, v1);
  }
  return result;
}

void outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentType.getter(void *a1)
{
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_contentType);
}

void outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.subject.getter(void *a1)
{
  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_subject);
}

void outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(void *a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend(a1, *a2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_12();
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.Query, &type metadata for SearchSpotlightEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.Query, &type metadata for SearchSpotlightEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.Query, &type metadata for SearchSpotlightEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchSpotlightEntity.Query, &type metadata for SearchSpotlightEntity.Query);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

void associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchSpotlightEntity.Query()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchSpotlightEntity.Query()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchSpotlightEntity] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchSpotlightEntity]);
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
    v3 = v2;
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6638], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A]);
  }
  return result;
}

void base witness table accessor for AppValue in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void base witness table accessor for DisplayRepresentable in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void base witness table accessor for Identifiable in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

uint64_t associated type witness table accessor for Transferable.Representation : TransferRepresentation in SearchSpotlightEntity()
{
  return swift_getOpaqueTypeConformance2();
}

void base witness table accessor for PersistentlyIdentifiable in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void base witness table accessor for TypeDisplayRepresentable in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void base witness table accessor for InstanceDisplayRepresentable in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type EmptyResolverSpecification<SearchSpotlightEntity> and conformance EmptyResolverSpecification<A>((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchSpotlightEntity> and conformance EmptyResolverSpecification<A>);
}

void base witness table accessor for CustomLocalizedStringResourceConvertible in SearchSpotlightEntity()
{
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

void sub_2431B1434()
{
  id *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchSpotlightEntity.card.getter(v1);
  OUTLINED_FUNCTION_5();
}

void sub_2431B1458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchSpotlightEntity.documentSource.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2431B1478(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchSpotlightEntity.documentSource.setter);
}

void sub_2431B1494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_4();
  SearchSpotlightEntity.title.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_5();
}

void sub_2431B14B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchNLGEntity.documentSource : SearchNLGEntity(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SearchSpotlightEntity.title.setter);
}

void sub_2431B14D0()
{
  SearchSpotlightEntity.experienceFile.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2431B14EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(a1, a2, a3, a4, SearchSpotlightEntity.experienceFile.setter);
}

void sub_2431B1508()
{
  SearchSpotlightEntity.encodedSearchableItem.getter();
  OUTLINED_FUNCTION_5();
}

void sub_2431B1524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(a1, a2, a3, a4, SearchSpotlightEntity.encodedSearchableItem.setter);
}

void sub_2431B1540()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_12_4();
  *v0 = SearchSpotlightEntity.supportedTypeIdentifiersForExport.getter();
  OUTLINED_FUNCTION_5();
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchSpotlightEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a2 + 2;
    v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *((_OWORD *)v4 + 1) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      outlined copy of Data._Representation(v11, v9);
      v4[2] = v11;
      v4[3] = v9;
    }
    v12 = a2[5];
    v4[4] = a2[4];
    v4[5] = v12;
    v13 = a2[7];
    v4[6] = a2[6];
    v4[7] = v13;
    v14 = a2[9];
    v15 = a3[11];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v4[8] = a2[8];
    v4[9] = v14;
    v18 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      type metadata accessor for SearchResultItem(0);
      v20 = (char *)&loc_2431B16CC + 4 * word_24334EDEA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    v21 = a3[12];
    v22 = a3[13];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *(_QWORD *)((char *)v4 + v22) = *(_QWORD *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for SearchSpotlightEntity(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int EnumTagSinglePayload;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  if (v4 >> 60 != 15)
    outlined consume of Data._Representation(*(_QWORD *)(a1 + 16), v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 44);
  v6 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = (int *)type metadata accessor for EmailDocument(0);
        v8 = v5 + v7[12];
        v9 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v5 + v7[17];
        v11 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        v12 = v7[18];
        goto LABEL_22;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for MobileSMSDocument(0);
        v14 = v5 + v13[10];
        v15 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        v16 = v5 + v13[11];
        v17 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        v18 = v5 + v13[12];
        if (!__swift_getEnumTagSinglePayload(v18, 1, v17))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v18, v17);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (int *)type metadata accessor for CalendarEvent(0);
        v19 = v5 + v13[7];
        v20 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        v21 = v5 + v13[8];
        if (!__swift_getEnumTagSinglePayload(v21, 1, v20))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = v5 + v13[13];
        v23 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_21:
        v12 = v13[14];
LABEL_22:
        if (!*(_QWORD *)(v5 + v12))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for Photo(0);
        v25 = v5 + *(int *)(v24 + 44);
        v26 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v24 + 64);
        goto LABEL_69;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = (int *)type metadata accessor for NoteDocument(0);
        v29 = v5 + v28[8];
        v30 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v31 = v5 + v28[9];
        if (!__swift_getEnumTagSinglePayload(v31, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v31, v30);
        v27 = v28[10];
        goto LABEL_69;
      case 5u:
        swift_bridgeObjectRelease();

        v27 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_69;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = type metadata accessor for WalletTransaction(0);
        v33 = v5 + *(int *)(v32 + 28);
        v34 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(v32 + 52);
        goto LABEL_69;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = type metadata accessor for WalletPass(0);
        v36 = v5 + *(int *)(v35 + 28);
        v37 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        swift_bridgeObjectRelease();
        v27 = *(int *)(v35 + 36);
        goto LABEL_69;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_69;
      case 9u:
        swift_bridgeObjectRelease();
        v38 = (int *)type metadata accessor for FlightReservation(0);
        v39 = v5 + v38[5];
        v40 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v39, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v5 + v38[11];
        if (!__swift_getEnumTagSinglePayload(v41, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v41, v40);
        v42 = v5 + v38[12];
        if (!__swift_getEnumTagSinglePayload(v42, 1, v40))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v42, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v5 + v38[15];
        v44 = type metadata accessor for DateComponents();
        v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
        v45(v43, v44);
        v45(v5 + v38[16], v44);
        v46 = v5 + v38[17];
        v47 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
        v48 = v5 + v38[18];
        if (!__swift_getEnumTagSinglePayload(v48, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v48, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_66;
      case 0xAu:
        swift_bridgeObjectRelease();
        v50 = (int *)type metadata accessor for HotelReservation(0);
        v51 = v5 + v50[5];
        v52 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = v5 + v50[12];
        v54 = type metadata accessor for DateComponents();
        v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
        v55(v53, v54);
        v55(v5 + v50[13], v54);
        v56 = v5 + v50[14];
        v57 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xBu:
        swift_bridgeObjectRelease();
        v58 = (int *)type metadata accessor for RestaurantReservation(0);
        v59 = v5 + v58[5];
        v60 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v59, 1, v60))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v5 + v58[12];
        v62 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        swift_bridgeObjectRelease();
        v63 = v5 + v58[14];
        v64 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v63, 1, v64))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xCu:
        swift_bridgeObjectRelease();
        v65 = type metadata accessor for GlobalItem();
        v66 = v5 + *(int *)(v65 + 20);
        v67 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v66, 1, v67))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v68 = (uint64_t *)(v5 + *(int *)(v65 + 32));
        v69 = v68[1];
        if (v69 >> 60 != 15)
          outlined consume of Data._Representation(*v68, v69);
        v49 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_66:
        __swift_instantiateConcreteTypeFromMangledName(v49);
LABEL_67:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_69:
        v70 = v5 + v27;
        v71 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v70, 1, v71))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v72 = type metadata accessor for IntentFileItem();
        v73 = v5 + *(int *)(v72 + 20);
        v74 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v73, 1, v74);
        v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
        if (!EnumTagSinglePayload)
          v76(v73, v74);
        v76(v5 + *(int *)(v72 + 24), v74);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v77 = type metadata accessor for Answer(0);
        v78 = v5 + *(int *)(v77 + 20);
        v79 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v78, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v80 = v5 + *(int *)(v77 + 40);
        if (!__swift_getEnumTagSinglePayload(v80, 1, v79))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v80, v79);
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SearchSpotlightEntity(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    outlined copy of Data._Representation(v9, v8);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
  }
  v10 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v10;
  v11 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v11;
  v12 = a2[9];
  v13 = a3[11];
  v14 = (void *)(a1 + v13);
  v15 = (char *)a2 + v13;
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v12;
  v16 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    type metadata accessor for SearchResultItem(0);
    v18 = (char *)&loc_2431B424C + 4 * word_24334EE2A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  v19 = a3[12];
  v20 = a3[13];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)(a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchSpotlightEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2 + 2;
  v7 = a2[3];
  if (a1[3] >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      outlined copy of Data._Representation(*v6, a2[3]);
      a1[2] = v8;
      a1[3] = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)(a1 + 2));
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  outlined copy of Data._Representation(*v6, a2[3]);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v7;
  outlined consume of Data._Representation(v10, v11);
LABEL_8:
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[11];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      type metadata accessor for SearchResultItem(0);
      v18 = (char *)&loc_2431B6000 + 4 * word_24334EE4A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_13;
  }
  if (v17)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResult);
LABEL_13:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v20 = (char *)&loc_2431B6220 + 4 * word_24334EE6A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v21 = *(int *)(v15 + 20);
  v22 = *(void **)&v13[v21];
  v23 = *(void **)&v14[v21];
  *(_QWORD *)&v13[v21] = v23;
  v24 = v23;

  v25 = *(int *)(v15 + 24);
  v26 = &v13[v25];
  v27 = &v14[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_17:
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for SearchSpotlightEntity(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[11];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    type metadata accessor for SearchResultItem(0);
    v13 = (char *)&loc_2431BA034 + 4 * word_24334EE8A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v14 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for SearchSpotlightEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2 + 2;
  v8 = a1[3];
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = a2[3];
  if (v9 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)(a1 + 2));
LABEL_4:
    *((_OWORD *)a1 + 1) = *v7;
    goto LABEL_6;
  }
  v10 = a1[2];
  a1[2] = *(_QWORD *)v7;
  a1[3] = v9;
  outlined consume of Data._Representation(v10, v8);
LABEL_6:
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  v11 = a2[9];
  a1[8] = a2[8];
  a1[9] = v11;
  swift_bridgeObjectRelease();
  v12 = a3[11];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for SearchResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      type metadata accessor for SearchResultItem(0);
      v18 = (char *)&loc_2431BB564 + 4 * word_24334EEAA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_11;
  }
  if (v17)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResult);
LABEL_11:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_15;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v13, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v20 = (char *)&loc_2431BB6C0 + 4 * word_24334EECA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v21 = *(int *)(v15 + 20);
  v22 = *(void **)&v13[v21];
  *(_QWORD *)&v13[v21] = *(_QWORD *)&v14[v21];

  v23 = *(int *)(v15 + 24);
  v24 = &v13[v23];
  v25 = &v14[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
LABEL_15:
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSpotlightEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2431BDD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_102_2(*(_QWORD *)(a1 + 32));
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_33_2(a1 + *(int *)(a3 + 44), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchSpotlightEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2431BDE04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 32) = (a2 - 1);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_32_2(a1 + *(int *)(a4 + 44), a2, a2, v7);
  }
}

void type metadata completion function for SearchSpotlightEntity()
{
  unint64_t v0;

  type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchSpotlightEntity.Builder(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for IntentFile();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)v4 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = (uint64_t)v25;
    v26 = (char *)v4 + v24;
    v27 = (char *)a2 + v24;
    v28 = type metadata accessor for SearchResult(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v25;
    if (!__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      type metadata accessor for SearchResultItem(0);
      v31 = (char *)&loc_2431BE0D4 + 4 * word_24334EEEA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SearchSpotlightEntity.Builder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int EnumTagSinglePayload;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for IntentFile();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v6 = a1 + a2[10];
  v7 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = (int *)type metadata accessor for EmailDocument(0);
        v9 = v6 + v8[12];
        v10 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v6 + v8[17];
        v12 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        v13 = v8[18];
        goto LABEL_22;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = (int *)type metadata accessor for MobileSMSDocument(0);
        v15 = v6 + v14[10];
        v16 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        v17 = v6 + v14[11];
        v18 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        v19 = v6 + v14[12];
        if (!__swift_getEnumTagSinglePayload(v19, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v19, v18);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = (int *)type metadata accessor for CalendarEvent(0);
        v20 = v6 + v14[7];
        v21 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        v22 = v6 + v14[8];
        if (!__swift_getEnumTagSinglePayload(v22, 1, v21))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = v6 + v14[13];
        v24 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
LABEL_21:
        v13 = v14[14];
LABEL_22:
        if (!*(_QWORD *)(v6 + v13))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = type metadata accessor for Photo(0);
        v26 = v6 + *(int *)(v25 + 44);
        v27 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(v25 + 64);
        goto LABEL_69;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = (int *)type metadata accessor for NoteDocument(0);
        v30 = v6 + v29[8];
        v31 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v30, 1, v31))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        v32 = v6 + v29[9];
        if (!__swift_getEnumTagSinglePayload(v32, 1, v31))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v32, v31);
        v28 = v29[10];
        goto LABEL_69;
      case 5u:
        swift_bridgeObjectRelease();

        v28 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_69;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = type metadata accessor for WalletTransaction(0);
        v34 = v6 + *(int *)(v33 + 28);
        v35 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(v33 + 52);
        goto LABEL_69;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = type metadata accessor for WalletPass(0);
        v37 = v6 + *(int *)(v36 + 28);
        v38 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v37, 1, v38))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        swift_bridgeObjectRelease();
        v28 = *(int *)(v36 + 36);
        goto LABEL_69;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_69;
      case 9u:
        swift_bridgeObjectRelease();
        v39 = (int *)type metadata accessor for FlightReservation(0);
        v40 = v6 + v39[5];
        v41 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = v6 + v39[11];
        if (!__swift_getEnumTagSinglePayload(v42, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v42, v41);
        v43 = v6 + v39[12];
        if (!__swift_getEnumTagSinglePayload(v43, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v43, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = v6 + v39[15];
        v45 = type metadata accessor for DateComponents();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v44, v45);
        v46(v6 + v39[16], v45);
        v47 = v6 + v39[17];
        v48 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v47, 1, v48))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
        v49 = v6 + v39[18];
        if (!__swift_getEnumTagSinglePayload(v49, 1, v48))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v49, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_66;
      case 0xAu:
        swift_bridgeObjectRelease();
        v51 = (int *)type metadata accessor for HotelReservation(0);
        v52 = v6 + v51[5];
        v53 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v54 = v6 + v51[12];
        v55 = type metadata accessor for DateComponents();
        v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
        v56(v54, v55);
        v56(v6 + v51[13], v55);
        v57 = v6 + v51[14];
        v58 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v57, 1, v58))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xBu:
        swift_bridgeObjectRelease();
        v59 = (int *)type metadata accessor for RestaurantReservation(0);
        v60 = v6 + v59[5];
        v61 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v60, 1, v61))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62 = v6 + v59[12];
        v63 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
        swift_bridgeObjectRelease();
        v64 = v6 + v59[14];
        v65 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v64, 1, v65))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 0xCu:
        swift_bridgeObjectRelease();
        v66 = type metadata accessor for GlobalItem();
        v67 = v6 + *(int *)(v66 + 20);
        v68 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = (uint64_t *)(v6 + *(int *)(v66 + 32));
        v70 = v69[1];
        if (v70 >> 60 != 15)
          outlined consume of Data._Representation(*v69, v70);
        v50 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_66:
        __swift_instantiateConcreteTypeFromMangledName(v50);
LABEL_67:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_69:
        v71 = v6 + v28;
        v72 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v71, 1, v72))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v73 = type metadata accessor for IntentFileItem();
        v74 = v6 + *(int *)(v73 + 20);
        v75 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v74, 1, v75);
        v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8);
        if (!EnumTagSinglePayload)
          v77(v74, v75);
        v77(v6 + *(int *)(v73 + 24), v75);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v78 = type metadata accessor for Answer(0);
        v79 = v6 + *(int *)(v78 + 20);
        v80 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v79, 1, v80))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v79, v80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v81 = v6 + *(int *)(v78 + 40);
        if (!__swift_getEnumTagSinglePayload(v81, 1, v80))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v81, v80);
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchSpotlightEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IntentFile();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)((char *)a1 + v14);
  v19 = (_QWORD *)((char *)a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[9];
  v22 = a3[10];
  v23 = *(void **)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v23;
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v26 = type metadata accessor for SearchResult(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v23;
  if (!__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
  {
    type metadata accessor for SearchResultItem(0);
    v29 = (char *)&loc_2431C0D40 + 4 * word_24334EF2A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchSpotlightEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  int v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for IntentFile();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = *(void **)((char *)a1 + v20);
  v22 = *(void **)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = v22;

  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for SearchResult(0);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v27);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      type metadata accessor for SearchResultItem(0);
      v30 = (char *)&loc_2431C2BA4 + 4 * word_24334EF4A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_12;
  }
  if (v29)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v25, type metadata accessor for SearchResult);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v25, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v32 = (char *)&loc_2431C2DDC + 4 * word_24334EF6A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v33 = *(int *)(v27 + 20);
  v34 = *(void **)&v25[v33];
  v35 = *(void **)&v26[v33];
  *(_QWORD *)&v25[v33] = v35;
  v36 = v35;

  v37 = *(int *)(v27 + 24);
  v38 = &v25[v37];
  v39 = &v26[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_17:
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SearchSpotlightEntity.Builder(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IntentFile();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    type metadata accessor for SearchResultItem(0);
    v18 = (char *)&loc_2431C6B34 + 4 * word_24334EF8A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  return a1;
}

_QWORD *assignWithTake for SearchSpotlightEntity.Builder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IntentFile();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = *(void **)((char *)a1 + v26);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);

  v28 = a3[10];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for SearchResult(0);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v31);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      type metadata accessor for SearchResultItem(0);
      v34 = (char *)&loc_2431C80C8 + 4 * word_24334EFAA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_12;
  }
  if (v33)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v29, type metadata accessor for SearchResult);
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v29, type metadata accessor for SearchResultItem);
    type metadata accessor for SearchResultItem(0);
    v36 = (char *)&loc_2431C823C + 4 * word_24334EFCA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v37 = *(int *)(v31 + 20);
  v38 = *(void **)&v29[v37];
  *(_QWORD *)&v29[v37] = *(_QWORD *)&v30[v37];

  v39 = *(int *)(v31 + 24);
  v40 = &v29[v39];
  v41 = &v30[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
LABEL_17:
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSpotlightEntity.Builder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2431CA8FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a3[6];
LABEL_5:
    OUTLINED_FUNCTION_33_2(a1 + v8, a2, v7);
    return;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a3[10];
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_102_2(*(_QWORD *)(a1 + a3[11]));
  OUTLINED_FUNCTION_12();
}

uint64_t storeEnumTagSinglePayload for SearchSpotlightEntity.Builder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2431CA994(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[6];
LABEL_5:
    OUTLINED_FUNCTION_32_2(a1 + v10, a2, a2, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a4[10];
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + a4[11]) = (a2 - 1);
  OUTLINED_FUNCTION_12();
}

void type metadata completion function for SearchSpotlightEntity.Builder()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for IntentFile?, (void (*)(uint64_t))MEMORY[0x24BDB4F20]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for SearchResult?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = type metadata accessor for Optional();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_5();
}

ValueMetadata *type metadata accessor for SearchSpotlightEntity.Query()
{
  return &type metadata for SearchSpotlightEntity.Query;
}

uint64_t storeEnumTagSinglePayload for SearchSpotlightEntity.SearchSpotlightEntityError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2431CAB94 + 4 * byte_24334EFEF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2431CABC8 + 4 * byte_24334EFEA[v4]))();
}

uint64_t sub_2431CABC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431CABD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431CABD8);
  return result;
}

uint64_t sub_2431CABE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431CABECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2431CABF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431CABF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchSpotlightEntity.SearchSpotlightEntityError()
{
  return &type metadata for SearchSpotlightEntity.SearchSpotlightEntityError;
}

void sub_2431CAC14()
{
  lazy protocol witness table accessor for type EmptyResolverSpecification<SearchSpotlightEntity> and conformance EmptyResolverSpecification<A>((uint64_t)&lazy protocol witness table cache variable for type TupleTransferRepresentation<SearchSpotlightEntity, (DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>)> and conformance TupleTransferRepresentation<A, B>);
}

void lazy protocol witness table accessor for type EmptyResolverSpecification<SearchSpotlightEntity> and conformance EmptyResolverSpecification<A>(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_89_4(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_100();
  }
  OUTLINED_FUNCTION_5();
}

uint64_t getEnumTagSinglePayload for SearchSpotlightEntity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSpotlightEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2431CAD44 + 4 * byte_24334EFF9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2431CAD78 + 4 * byte_24334EFF4[v4]))();
}

uint64_t sub_2431CAD78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431CAD80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431CAD88);
  return result;
}

uint64_t sub_2431CAD94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431CAD9CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2431CADA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431CADA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchSpotlightEntity.CodingKeys()
{
  return &unk_2513C9D00;
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_7_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_8_6(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_15_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return DataRepresentation.init(exportedContentType:exporting:)();
}

uint64_t OUTLINED_FUNCTION_18_7()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_26_6()
{
  uint64_t v0;
  uint64_t v1;

  return static SearchSpotlightEntity.performTransfer(to:entity:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_33_4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_38_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return type metadata accessor for SearchSpotlightEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return type metadata accessor for SearchSpotlightEntity(0);
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return type metadata accessor for SearchSpotlightEntity(0);
}

uint64_t OUTLINED_FUNCTION_49_3@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  return type metadata accessor for IntentFile();
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_60_3(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_61_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_65_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_66_4()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_67_4()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of MobileSMSDocument?(v1, v0);
}

void OUTLINED_FUNCTION_68_3()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_71_3(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(a1, v1);
}

void OUTLINED_FUNCTION_72_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return type metadata accessor for SearchSpotlightEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_75_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_76_1(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of MobileSMSDocument?(a1, v1);
}

void OUTLINED_FUNCTION_83_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_84_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, *(_QWORD *)(v3 - 112));
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_89_4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_90_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, a2, v2);
}

void OUTLINED_FUNCTION_93_1(uint64_t a1, unint64_t *a2)
{
  type metadata accessor for IMSPIMessage(0, a2);
}

uint64_t OUTLINED_FUNCTION_95_2()
{
  return type metadata accessor for SearchSpotlightEntity.Builder(0);
}

void OUTLINED_FUNCTION_96_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_102_2@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_106_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of SearchResult(a1, a2, v2);
}

void OUTLINED_FUNCTION_107_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, v3, a3);
}

void OUTLINED_FUNCTION_108_1()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  _s10OmniSearch0B6ResultVWOhTm_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

void OUTLINED_FUNCTION_111_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_120_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

void OUTLINED_FUNCTION_121_0()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_123_0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, v2, v1);
}

void OUTLINED_FUNCTION_124_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  return EntityProperty.wrappedValue.setter();
}

void OUTLINED_FUNCTION_128_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined assign with take of SearchResult?(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_135()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_136_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_137()
{
  void *v0;

  outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v0);
}

void AnswerSynthesisModelServer.__allocating_init()()
{
  swift_allocObject();
  AnswerSynthesisModelServer.init()();
  OUTLINED_FUNCTION_5();
}

uint64_t AnswerSynthesisModelServer.init()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  signed int v6;

  v1 = v0;
  v2 = static AnswerSynthesisModelProtocol.GMS_USE_CASE_ID.getter();
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v6 = objc_msgSend(v5, sel_processIdentifier);

  Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for AnswerSynthesisModelServer._ClientInfo();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = AnswerSynthesisModelServer._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(v2, v4, v6, 0);
  return v1;
}

uint64_t type metadata accessor for AnswerSynthesisModelServer._ClientInfo()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AnswerSynthesisModelServer._ClientInfo;
  if (!type metadata singleton initialization cache for AnswerSynthesisModelServer._ClientInfo)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall AnswerSynthesisModelServer.prewarm()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (one-time initialization token for search != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logging.search);
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_24315F000, v1, v2, "Prewarming AnswerSynthesisModelServer model...", v3, 2u);
    MEMORY[0x2494F6D70](v3, -1, -1);
  }

  swift_retain();
  TokenGenerator.prewarm()();
  swift_release();
}

uint64_t AnswerSynthesisModelServer.model.getter()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelServer.createPromptTemplate()()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x24BDAC7A8](v0);
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter();
  OUTLINED_FUNCTION_14_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, StaticString)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24334DB60;
  *(_QWORD *)(inited + 32) = OUTLINED_FUNCTION_14_4();
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = "{{ specialToken.chat.role.system }}Based on each personal data source, return a concise ans"
                             "wer to the query (or return NO_ANSWER_FOUND_IN_SOURCE). If the query does not require an an"
                             "swer, return NO_ANSWER_NEEDED_FOR_QUERY.{{ specialToken.chat.component.turnEnd }}{{ special"
                             "Token.chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialT"
                             "oken.chat.role.assistant }}";
  *(_QWORD *)(inited + 56) = 391;
  *(_BYTE *)(inited + 64) = 2;
  Dictionary.init(dictionaryLiteral:)();
  return PromptTemplate.init(modelBundleID:templateID:fallbackPromptTemplateCatalog:)();
}

uint64_t AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR10OmniSearch06GlobalD6ClientC9QueryTypeO_s6ResultOySayAC0dI0VGsAA_pGt_TG5TATQ0_;
  OUTLINED_FUNCTION_9_7();
  return OUTLINED_FUNCTION_1_10(v4, v5, v6, v7, v2);
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[30] = a4;
  v5[31] = a5;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  v5[32] = swift_task_alloc();
  v5[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_GenerativeFunctionOverridableInternals_CompletionPrompt, _GenerativeFunctionInternals_Metadata));
  v5[34] = swift_task_alloc();
  v6 = type metadata accessor for _GenerativeFunctionInternals_Metadata();
  v5[35] = v6;
  v5[36] = *(_QWORD *)(v6 - 8);
  v5[37] = swift_task_alloc();
  v7 = type metadata accessor for _GenerativeFunctionOverridableInternals_CompletionPrompt();
  v5[38] = v7;
  v5[39] = *(_QWORD *)(v7 - 8);
  v5[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FunctionIdentifier.ResourceInformation?);
  v5[41] = swift_task_alloc();
  v8 = type metadata accessor for FunctionIdentifier();
  v5[42] = v8;
  v5[43] = *(_QWORD *)(v8 - 8);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v9 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v5[46] = v9;
  v5[47] = *(_QWORD *)(v9 - 8);
  v5[48] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OverrideHint<SamplingParameters>);
  v5[49] = v10;
  v5[50] = *(_QWORD *)(v10 - 8);
  v5[51] = swift_task_alloc();
  v11 = type metadata accessor for CompletionPrompt();
  v5[52] = v11;
  v5[53] = *(_QWORD *)(v11 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 464);
  v17 = *(_QWORD *)(v0 + 472);
  v18 = *(_QWORD *)(v0 + 480);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 392);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 384);
  v23 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 424);
  *(_QWORD *)(swift_task_alloc() + 16) = v6;
  CompletionPrompt.init(_:)();
  OUTLINED_FUNCTION_55();
  static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
  *(_DWORD *)(v0 + 552) = *MEMORY[0x24BE3C3E0];
  v7 = *(void (**)(uint64_t))(v3 + 104);
  *(_QWORD *)(v0 + 496) = v7;
  v7(v4);
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  *(_QWORD *)(v0 + 504) = v8;
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 512) = v9;
  v9(v4, v5);
  *(_QWORD *)(v0 + 520) = *(_QWORD *)(v16 + 8);
  OUTLINED_FUNCTION_68_1(v2);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v15);
  GenerativeConfigurationProtocol.bindVariables(_:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_68_1(v1);
  Dictionary.init(dictionaryLiteral:)();
  GenerativeConfigurationProtocol._internalTrackingConfig(_:)();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_68_1(v17);
  v10 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v0 + 528) = v10;
  v11 = v10
      + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v22, v11, v21);
  GenerativeConfigurationProtocol._internalSessionTrackingConfig(_:)();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  OUTLINED_FUNCTION_68_1(v18);
  v12 = type metadata accessor for FunctionIdentifier.ResourceInformation();
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v12);
  FunctionIdentifier.init(identifier:resourceInformation:)();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 536) = v13;
  *v13 = v0;
  v13[1] = closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:);
  return static _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadataCompletionPrompt(_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  void (*v34)(uint64_t, _QWORD, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata));
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?(v1);
  }
  else
  {
    v41 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 512);
    v33 = *(_DWORD *)(v0 + 552);
    v34 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 496);
    v37 = *(_QWORD *)(v0 + 448);
    v38 = *(_QWORD *)(v0 + 488);
    v39 = *(_QWORD *)(v0 + 416);
    v40 = *(_QWORD *)(v0 + 424);
    v31 = *(_QWORD *)(v0 + 408);
    v32 = *(_QWORD *)(v0 + 392);
    v27 = *(_QWORD *)(v0 + 352);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 336);
    v30 = *(_QWORD *)(v0 + 360);
    v36 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 288);
    v42 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    v7 = v1 + *(int *)(v2 + 48);
    v8 = v5 + *(int *)(v6 + 48);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
    v9(v5, v1, v3);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v10(v8, v7, v42);
    v11 = v5 + *(int *)(v6 + 48);
    v9(v25, v5, v3);
    v10(v26, v11, v42);
    _GenerativeFunctionInternals_Metadata.functionIdentifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v30, v27, v29);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, PromptComponentValueConvertible)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24334DB60;
    strcpy((char *)(inited + 32), "promptTemplate");
    *(_BYTE *)(inited + 47) = -18;
    v13 = type metadata accessor for PromptTemplate();
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    *(_QWORD *)(inited + 72) = v13;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, v14, MEMORY[0x24BE3C630]);
    *(_QWORD *)(inited + 80) = v15;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
    (*(void (**)(void))(*(_QWORD *)(v13 - 8) + 16))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptComponentValueConvertible);
    OUTLINED_FUNCTION_7_11();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
    v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_24334DB60;
    *(_QWORD *)(v16 + 32) = 0xD000000000000059;
    *(_QWORD *)(v16 + 40) = 0x800000024335BF40;
    static AnswerSynthesisModelProtocol.defaultSamplingParameters.getter();
    v34(v31, v33, v32);
    *(_QWORD *)(v16 + 72) = type metadata accessor for SamplingParameters();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v16 + 48));
    static _OverrideConfigurationHelper.samplingParameters(_:)();
    v35(v31, v32);
    OUTLINED_FUNCTION_7_11();
    static _GenerativeFunctionOverrideHelpers._configurePrompt(_:withOverride:bindingVariables:bindingConfigurations:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_1();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v42);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v25, v3);
    v41(v38, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v37, v39);
  }
  v17 = *(_QWORD *)(v0 + 544);
  GenerativeConfigurationProtocol.functionIdentifier(_:)();
  GenerativeConfigurationProtocol._addAssetCache()();
  if (v17)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 520))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 416));
    OUTLINED_FUNCTION_16_10(*(_QWORD *)(v0 + 344));
    OUTLINED_FUNCTION_8_7();
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_99();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_55();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 528);
    v19 = *(_QWORD *)(v0 + 488);
    v20 = *(_QWORD *)(v0 + 440);
    v21 = *(_QWORD *)(v0 + 360);
    v23 = *(_QWORD *)(v0 + 336);
    v22 = *(_QWORD *)(v0 + 344);
    OUTLINED_FUNCTION_4_11(*(_QWORD *)(v0 + 432));
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v18
                                      + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo__model);
    type metadata accessor for TokenGenerator();
    GenerativeConfigurationProtocol.with<A>(model:modelType:)();
    OUTLINED_FUNCTION_4_11(v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    OUTLINED_FUNCTION_4_11(v19);
    OUTLINED_FUNCTION_95();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_104();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_99();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_16_10(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_8_7();
  swift_task_dealloc();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  swift_task_dealloc();
  OUTLINED_FUNCTION_99();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_55();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v11[5];

  v0 = type metadata accessor for Prompt();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PromptTemplate();
  v11[3] = v4;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type PromptTemplate and conformance PromptTemplate, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680], MEMORY[0x24BE3C630]);
  v11[4] = v5;
  __swift_allocate_boxed_opaque_existential_1Tm(v11);
  (*(void (**)(void))(*(_QWORD *)(v4 - 8) + 16))();
  v6 = MEMORY[0x24BE7AB78];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24334DB60;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v8 + v7, v3, v0);
  MEMORY[0x2494F59B4](v8, v0, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AnswerSynthesisModelServer.synthesize_generateGenerativeFunctionOverride()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = type metadata accessor for BindableConfiguration();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CompletionPrompt();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v13 - v9;
  CompletionPrompt.init(_:)();
  BindableConfiguration.init(name:)();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type CompletionPrompt and conformance CompletionPrompt, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  GenerativeConfigurationProtocol.samplingParameters(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  OUTLINED_FUNCTION_12_8((uint64_t)v8);
  v11 = static _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody:identifier:)();
  if (!v0)
    v1 = v11;
  OUTLINED_FUNCTION_12_8((uint64_t)v10);
  return v1;
}

uint64_t closure #1 in AnswerSynthesisModelServer.synthesize_generateGenerativeFunctionOverride()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v9[5];

  v0 = type metadata accessor for Prompt();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[3] = type metadata accessor for BindableVariable();
  v9[4] = MEMORY[0x24BE7AC48];
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  BindableVariable.init(name:)();
  v4 = MEMORY[0x24BE7AB78];
  static CustomPromptBuilder.buildExpression(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Prompt>);
  v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24334DB60;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v6 + v5, v3, v0);
  MEMORY[0x2494F59B4](v6, v0, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AnswerSynthesisModelServer.synthesize(_:bindings:)()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeConfigurationRunnable<CompletionPrompt, TokenGenerator, CompletionPrompt>);
  v1[2] = v3;
  v1[3] = *(_QWORD *)(v3 - 8);
  v1[4] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v1[5] = v4;
  *v4 = v1;
  v4[1] = AnswerSynthesisModelServer.synthesize(_:bindings:);
  OUTLINED_FUNCTION_9_7();
  return OUTLINED_FUNCTION_1_10(v5, v6, v7, v8, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 56) = v4;
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type TokenGenerator and conformance TokenGenerator, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BEB8000]);
  *v4 = v2;
  v4[1] = AnswerSynthesisModelServer.synthesize(_:bindings:);
  return GenerativeConfigurationRunnable<>.run(returning:)();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnswerSynthesisModelServer.synthesize(_:bindings:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 64) = v2;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 + 24) + 8))(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 16));
  if (v2)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t AnswerSynthesisModelServer._ClientInfo.init(useCaseIdentifier:onBehalfOfProcessID:sessionTrackingConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _DWORD v16[2];
  uint64_t v17;

  v5 = v4;
  v17 = a3;
  v16[1] = a4 & 1;
  v8 = type metadata accessor for CachePolicy();
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for GenerativeModelSessionConfiguration();
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResourceBundleIdentifier<LLMBundle>);
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  _ClientInfoSessionTrackingConfig.init(sessionTrackingConifg:_internalSessionTrackingConfig:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5+ OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig, v14, v11);
  type metadata accessor for TokenGenerator();
  static Catalog.ResourceBundle.TokenGeneration.LLM.AnswerSynthesisServerID.getter();
  static CachePolicy.inMemory.getter();
  GenerativeModelSessionConfiguration.init(identifier:handlesSensitiveData:cachePolicy:)();
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo__model) = TokenGenerator.init(model:configuration:useCaseIdentifier:onBehalfOf:)();
  return v5;
}

uint64_t AnswerSynthesisModelServer._ClientInfo.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  v2 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelServer._ClientInfo.__deallocating_deinit()
{
  AnswerSynthesisModelServer._ClientInfo.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for _ClientInfoProtocol.useCaseIdentifier.getter in conformance AnswerSynthesisModelServer._ClientInfo()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.getter in conformance AnswerSynthesisModelServer._ClientInfo@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t protocol witness for _ClientInfoProtocol.trackingConfig.setter in conformance AnswerSynthesisModelServer._ClientInfo(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC10OmniSearch26AnswerSynthesisModelServerP33_D96EF656C77D80FBBF60C1DE966D1FA611_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = type metadata accessor for _ClientInfoSessionTrackingConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelServer._ClientInfo())()
{
  swift_beginAccess();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t protocol witness for _ClientInfoProtocol._model.getter in conformance AnswerSynthesisModelServer._ClientInfo()
{
  return swift_retain();
}

uint64_t AnswerSynthesisModelServer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AnswerSynthesisModelServer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void protocol witness for AnswerSynthesisModelProtocol.prewarm() in conformance AnswerSynthesisModelServer()
{
  AnswerSynthesisModelServer.prewarm()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.createPromptTemplate() in conformance AnswerSynthesisModelServer()
{
  return AnswerSynthesisModelServer.createPromptTemplate()();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer;
  return AnswerSynthesisModelServer.synthesize(_:bindings:)();
}

uint64_t protocol witness for AnswerSynthesisModelProtocol.synthesize(_:bindings:) in conformance AnswerSynthesisModelServer(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_2();
  if (!v2)
  {
    v6 = a1;
    v7 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v7);
}

uint64_t protocol witness for GenerativeModelSessionTokenGenerator.model.getter in conformance AnswerSynthesisModelServer()
{
  return AnswerSynthesisModelServer.model.getter();
}

uint64_t type metadata accessor for AnswerSynthesisModelServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnswerSynthesisModelServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnswerSynthesisModelServer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ObjC metadata update function for AnswerSynthesisModelServer._ClientInfo()
{
  return type metadata accessor for AnswerSynthesisModelServer._ClientInfo();
}

uint64_t type metadata completion function for AnswerSynthesisModelServer._ClientInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for _ClientInfoSessionTrackingConfig();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)()
{
  return closure #1 in closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)();
}

uint64_t outlined destroy of (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (completionPrompt: _GenerativeFunctionOverridableInternals_CompletionPrompt, metadata: _GenerativeFunctionInternals_Metadata)?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void __swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_1_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in AnswerSynthesisModelServer.synthesize_runnable(_:bindings:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_4_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

unint64_t OUTLINED_FUNCTION_14_4()
{
  return static AnswerSynthesisModelProtocol.promptTemplateID.getter();
}

uint64_t OUTLINED_FUNCTION_16_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

OmniSearch::EntityType_optional __swiftcall EntityType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  char v6;
  OmniSearch::EntityType_optional result;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntityType.init(rawValue:), v3);
  OUTLINED_FUNCTION_6_1();
  v6 = 15;
  if (v5 < 0xF)
    v6 = v5;
  *v4 = v6;
  OUTLINED_FUNCTION_12();
  return result;
}

uint64_t EntityType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431CD110 + 4 * byte_24334F7B0[*v0]))(0x6E6F697461636F6CLL, 0xE800000000000000);
}

uint64_t sub_2431CD110()
{
  return 0x6E6F73726570;
}

uint64_t sub_2431CD124()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_2431CD144()
{
  return 0x6464416C69616D65;
}

uint64_t sub_2431CD164()
{
  return 6910581;
}

uint64_t sub_2431CD174()
{
  return 0x7469746E45707061;
}

uint64_t sub_2431CD194()
{
  return 0x6563616C70;
}

uint64_t sub_2431CD1A8()
{
  return 0x72656D6974;
}

uint64_t sub_2431CD1BC()
{
  return 0x6D72616C61;
}

uint64_t sub_2431CD1D0()
{
  return 0x6163696669746F6ELL;
}

uint64_t sub_2431CD1F0()
{
  return 0x7261646E656C6163;
}

uint64_t sub_2431CD214()
{
  return 0x7265646E696D6572;
}

unint64_t sub_2431CD228()
{
  return 0xD000000000000010;
}

uint64_t sub_2431CD244()
{
  return 0x656D695465746164;
}

uint64_t sub_2431CD258()
{
  return 0x657449616964656DLL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance EntityType()
{
  return specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance EntityType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EntityType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance EntityType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::EntityType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntityType(Swift::String *a1)
{
  return EntityType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EntityType(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = EntityType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_5();
}

uint64_t protocol witness for Decodable.init(from:) in conformance EntityType()
{
  lazy protocol witness table accessor for type EntityType and conformance EntityType();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EntityType()
{
  lazy protocol witness table accessor for type EntityType and conformance EntityType();
  return RawRepresentable<>.encode(to:)();
}

void EntityMatch.entityId.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityId.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityId.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$entityId.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.entityType.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityType.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityType.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$entityType.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.entityName.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityName.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.entityName.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$entityName.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.matchedUserUtterance.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.matchedUserUtterance.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.matchedUserUtterance.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$matchedUserUtterance.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.matcherType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *EntityMatch.matcherType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*EntityMatch.matcherType.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

double EntityMatch.matchScore.getter()
{
  double v1;

  EntityProperty.wrappedValue.getter();
  return v1;
}

void key path getter for EntityMatch.matchScore : EntityMatch(double *a1@<X8>)
{
  *a1 = EntityMatch.matchScore.getter();
}

void key path setter for EntityMatch.matchScore : EntityMatch()
{
  EntityMatch.matchScore.setter();
}

void EntityMatch.matchScore.setter()
{
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.matchScore.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$matchScore.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.originAppBundleId.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for EntityMatch.entityId : EntityMatch(uint64_t a1)
{
  _QWORD *v1;
  __n128 v2;
  uint64_t (*v3)(__n128);
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_14_5(a1);
  *v1 = v3(v2);
  v1[1] = v4;
  OUTLINED_FUNCTION_52_4();
}

uint64_t key path setter for EntityMatch.entityId : EntityMatch(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

void EntityMatch.originAppBundleId.setter()
{
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.originAppBundleId.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$originAppBundleId.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.startIndex.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.startIndex.setter()
{
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.startIndex.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$startIndex.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.endIndex.getter()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for EntityMatch.startIndex : EntityMatch(uint64_t a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t (*v3)(__n128);
  char v4;

  v2 = OUTLINED_FUNCTION_14_5(a1);
  *(_QWORD *)v1 = v3(v2);
  *(_BYTE *)(v1 + 8) = v4 & 1;
  OUTLINED_FUNCTION_52_4();
}

void key path setter for EntityMatch.startIndex : EntityMatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  a5(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_52_4();
}

void EntityMatch.endIndex.setter()
{
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_2_5();
}

void EntityMatch.endIndex.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void EntityMatch.$endIndex.getter()
{
  EntityProperty.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void EntityMatch.matchProperties.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  int v5;
  char v6;

  v2 = *(_BYTE *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_BYTE *)(v1 + 96);
  v5 = *(_DWORD *)(v1 + 100);
  v6 = *(_BYTE *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 28) = v5;
  *(_BYTE *)(a1 + 32) = v6;
}

uint64_t EntityMatch.matchProperties.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  int v5;
  char v6;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_BYTE *)(result + 24);
  v5 = *(_DWORD *)(result + 28);
  v6 = *(_BYTE *)(result + 32);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v3;
  *(_BYTE *)(v1 + 96) = v4;
  *(_DWORD *)(v1 + 100) = v5;
  *(_BYTE *)(v1 + 104) = v6;
  return result;
}

uint64_t (*EntityMatch.matchProperties.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void EntityMatch.init(entityId:startIndex:endIndex:entityType:entityName:userUtterance:matchScore:matchProperties:matcherType:originAppBundleId:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_59_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_37_2();
}

void sub_2431CDBD4()
{
  swift_retain();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CDBF0()
{
  swift_retain();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CDC00()
{
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CDC24()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Double>);
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x2494F42E0](v0);
  swift_retain();
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_37_2();
}

void sub_2431CDC64()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_58_2();
}

void sub_2431CDC84()
{
  swift_retain();
  OUTLINED_FUNCTION_38_3();
  OUTLINED_FUNCTION_58_2();
}

uint64_t sub_2431CDC94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v12 = *(_QWORD *)(v9 - 168);
  *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 192);
  *(_QWORD *)(v9 - 112) = v12;
  swift_retain_n();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 168) = OUTLINED_FUNCTION_72_2();
  *(_QWORD *)(v9 - 248) = v4;
  *(_QWORD *)(v9 - 192) = OUTLINED_FUNCTION_72_2();
  v13 = *(_QWORD *)(v9 - 176);
  *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 184);
  *(_QWORD *)(v9 - 112) = v13;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  v14 = *(_QWORD *)(v9 - 152);
  *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 160);
  *(_QWORD *)(v9 - 112) = v14;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 136);
  *(_BYTE *)(v9 - 112) = 0;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 128);
  *(_BYTE *)(v9 - 112) = 0;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_68_4();
  v15 = a1;
  OUTLINED_FUNCTION_17_9();
  v16 = v7;
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_39_0();
  v17 = v3;
  v18 = *(_QWORD *)(v9 - 192);
  swift_release();
  v19 = v6;
  OUTLINED_FUNCTION_75_0();
  v20 = v5;
  OUTLINED_FUNCTION_69();
  v21 = v2;
  v22 = *(_QWORD *)(v9 - 168);
  result = swift_release();
  if (v18 >> 14 < v22 >> 14)
  {
    __break(1u);
  }
  else
  {
    v24 = *(_QWORD *)(v9 + 56);
    *(_QWORD *)(v9 - 136) = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v9 - 128) = v24;
    *(_QWORD *)(v9 - 256) = v21;
    swift_retain();
    *(_QWORD *)(v9 - 264) = v20;
    swift_retain();
    *(_QWORD *)(v9 - 272) = v19;
    swift_retain();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_0_11();
    *(_QWORD *)(v9 - 280) = v16;
    swift_retain();
    v25 = v15;
    OUTLINED_FUNCTION_12_9();
    v26 = String.subscript.getter();
    v27 = v8;
    v28 = v1;
    v30 = v29;
    v31 = *(_QWORD *)(v9 - 224);
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x2494F5C48](v26, v30, v33, v35);
    v38 = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 - 120) = v36;
    *(_QWORD *)(v9 - 112) = v38;
    OUTLINED_FUNCTION_68_4();
    OUTLINED_FUNCTION_4_12();
    v39 = *(_QWORD *)(v9 - 280);
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_17_9();
    v40 = *(_QWORD *)(v9 - 272);
    OUTLINED_FUNCTION_13_8();
    v41 = *(_QWORD *)(v9 - 264);
    OUTLINED_FUNCTION_9_8();
    v42 = *(_QWORD *)(v9 - 256);
    OUTLINED_FUNCTION_39_0();
    *(_QWORD *)(v9 - 120) = v10;
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_2_8();
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_9_8();
    OUTLINED_FUNCTION_39_0();
    v43 = *(_QWORD *)(v9 - 128);
    *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 136);
    *(_QWORD *)(v9 - 112) = v43;
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_71_4();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    result = OUTLINED_FUNCTION_7_6();
    *(_QWORD *)v31 = v42;
    *(_QWORD *)(v31 + 8) = v41;
    *(_QWORD *)(v31 + 16) = v40;
    *(_QWORD *)(v31 + 24) = v17;
    *(_BYTE *)(v31 + 32) = *(_DWORD *)(v9 - 216);
    *(_QWORD *)(v31 + 40) = v28;
    *(_QWORD *)(v31 + 48) = v27;
    *(_QWORD *)(v31 + 56) = v39;
    *(_QWORD *)(v31 + 64) = v25;
    *(_QWORD *)(v31 + 72) = *(_QWORD *)(v9 - 232);
    *(_BYTE *)(v31 + 80) = *(_DWORD *)(v9 - 236);
    *(_QWORD *)(v31 + 88) = *(_QWORD *)(v9 - 200);
    *(_BYTE *)(v31 + 96) = *(_DWORD *)(v9 - 204);
    *(_DWORD *)(v31 + 100) = *(_DWORD *)(v9 - 208);
    *(_BYTE *)(v31 + 104) = *(_DWORD *)(v9 - 212);
  }
  return result;
}

void EntityMatch.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_59_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_37_2();
}

void sub_2431CE12C()
{
  swift_retain();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CE148()
{
  swift_retain();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CE158()
{
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431CE17C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Double>);
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x2494F42E0](v0);
  swift_retain();
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_37_2();
}

void sub_2431CE1BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_58_2();
}

void sub_2431CE1DC()
{
  swift_retain();
  OUTLINED_FUNCTION_38_3();
  OUTLINED_FUNCTION_58_2();
}

void sub_2431CE1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v9 - 96) = 4271950;
  *(_QWORD *)(v9 - 88) = 0xE300000000000000;
  swift_retain_n();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_74_5();
  *(_QWORD *)(v9 - 96) = v11;
  *(_QWORD *)(v9 - 88) = 0xE700000000000000;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_74_5();
  *(_QWORD *)(v9 - 96) = v12;
  *(_QWORD *)(v9 - 88) = 0xE700000000000000;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 96) = 0;
  *(_BYTE *)(v9 - 88) = 1;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 96) = 0;
  *(_BYTE *)(v9 - 88) = 1;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_68_4();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 96) = 0;
  *(_QWORD *)(v9 - 88) = 0xE000000000000000;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 96) = 0;
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v9 - 96) = 4271950;
  *(_QWORD *)(v9 - 88) = 0xE300000000000000;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_QWORD *)(v1 + 56) = v8;
  *(_QWORD *)(v1 + 64) = a1;
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  *(_QWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 96) = 1;
  *(_DWORD *)(v1 + 100) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  OUTLINED_FUNCTION_43_0();
}

uint64_t MatchProperties.init(maxTokenCount:matchedTokenCount:matchedAliasTypes:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, int *a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  char v7;

  v6 = *a5;
  v7 = *((_BYTE *)a5 + 4);
  *(_QWORD *)a6 = result;
  *(_BYTE *)(a6 + 8) = a2 & 1;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  *(_DWORD *)(a6 + 28) = v6;
  *(_BYTE *)(a6 + 32) = v7;
  return result;
}

uint64_t EntityMatch.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t countAndFlagsBits;
  Swift::String v4;
  Swift::String v5;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_13_8();
  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v0 = static EntityMatchFormatter.entityTypeMap;
  if (!*(_QWORD *)(static EntityMatchFormatter.entityTypeMap + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v1 = specialized __RawDictionaryStorage.find<A>(_:)(v7, v8);
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_47_2();
LABEL_7:
    swift_endAccess();
    String.splitByCapitalLetters()();
    countAndFlagsBits = String.lowercased()()._countAndFlagsBits;
    OUTLINED_FUNCTION_47_2();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  countAndFlagsBits = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16 * v1);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
LABEL_8:
  OUTLINED_FUNCTION_63_4(countAndFlagsBits);
  OUTLINED_FUNCTION_6_1();
  v4._countAndFlagsBits = 0x222064656D616E20;
  v4._object = (void *)0xE800000000000000;
  String.append(_:)(v4);
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_63_4(v7);
  OUTLINED_FUNCTION_6_1();
  v5._countAndFlagsBits = 34;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 8289;
}

uint64_t static EntityMatchFormatter.format(entityType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t countAndFlagsBits;

  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  v4 = static EntityMatchFormatter.entityTypeMap;
  if (!*(_QWORD *)(static EntityMatchFormatter.entityTypeMap + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v5 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  if ((v6 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_1();
LABEL_7:
    OUTLINED_FUNCTION_20_3();
    String.splitByCapitalLetters()();
    countAndFlagsBits = String.lowercased()()._countAndFlagsBits;
    goto LABEL_8;
  }
  countAndFlagsBits = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v5);
  OUTLINED_FUNCTION_20_3();
  swift_bridgeObjectRetain();
LABEL_8:
  OUTLINED_FUNCTION_6_1();
  return countAndFlagsBits;
}

uint64_t EntityMatch.debugString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  Swift::String v80;
  Swift::String v81;

  HIDWORD(v68) = *(unsigned __int8 *)(v0 + 32);
  v63 = *(_QWORD *)(v0 + 72);
  HIDWORD(v59) = *(unsigned __int8 *)(v0 + 80);
  v55 = *(_QWORD *)(v0 + 88);
  LODWORD(v51) = *(_DWORD *)(v0 + 100);
  HIDWORD(v51) = *(unsigned __int8 *)(v0 + 96);
  HIDWORD(v47) = *(unsigned __int8 *)(v0 + 104);
  _StringGuts.grow(_:)(235);
  OUTLINED_FUNCTION_56_3(0xD00000000000001ELL, (uint64_t)"[EntityMatch] {\n    entityId: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  v1 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_24_3(v1, v2, v3, v4, v5, v6, v7, v8, v35, v39, v43, v47, v51, v55, v59, v63, v68, 0, (void *)0xE000000000000000);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_22_3((uint64_t)",\n    entityType: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  v9 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_24_3(v9, v10, v11, v12, v13, v14, v15, v16, v36, v40, v44, v48, v52, v56, v60, v64, v69, v73, v77);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_22_3((uint64_t)",\n    entityName: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  v17 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_24_3(v17, v18, v19, v20, v21, v22, v23, v24, v37, v41, v45, v49, v53, v57, v61, v65, v70, v74, v78);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_22_3((uint64_t)",\n    startIndex: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_61_3();
  v80._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_66_5(v80);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_36_3(0xD000000000000010, (uint64_t)",\n    endIndex: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_61_3();
  v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_66_5(v81);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_36_3(0xD00000000000001CLL, (uint64_t)",\n    matchedUserUtterance: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  v25 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_24_3(v25, v26, v27, v28, v29, v30, v31, v32, v38, v42, v46, v50, v54, v58, v62, v66, v71, v75, v79);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_22_3((uint64_t)",\n    matchScore: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  Double.write<A>(to:)();
  OUTLINED_FUNCTION_56_3(0xD000000000000017, (uint64_t)",\n    matchProperties: ");
  v76 = v67;
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_36_3(0xD000000000000013, (uint64_t)",\n    matcherType: ");
  LOBYTE(v76) = v72;
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_36_3(0xD000000000000019, (uint64_t)",\n    originAppBundleId: ");
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_63_4(v76);
  OUTLINED_FUNCTION_6_1();
  v33._countAndFlagsBits = 32010;
  v33._object = (void *)0xE200000000000000;
  String.append(_:)(v33);
  return 0;
}

void static EntityMatch.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static EntityMatch.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_28_1();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  OUTLINED_FUNCTION_20_3();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static EntityMatch.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (one-time initialization token for typeDisplayRepresentation != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_28_1();
  __swift_project_value_buffer(v0, (uint64_t)static EntityMatch.typeDisplayRepresentation);
  OUTLINED_FUNCTION_2_6();
  return static UTType.searchToolExportedExperiences.modify;
}

void EntityMatch.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_3();
  v15 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  v14 = v3;
  v13 = OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_79_4();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v6);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_18_8();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_12_9();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_4_12();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
  OUTLINED_FUNCTION_6_1();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  LocalizedStringResource.init(stringInterpolation:)();
  OUTLINED_FUNCTION_49(v14, v8, v9, v13);
  v10 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_49(v15, v11, v12, v10);
  DisplayRepresentation.init(title:subtitle:image:)();
  OUTLINED_FUNCTION_43_0();
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance EntityMatch()
{
  lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return static TransientAppEntity.defaultQuery.getter();
}

uint64_t protocol witness for Identifiable.id.getter in conformance EntityMatch()
{
  lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return UUID.init()();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance EntityMatch()
{
  lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return static AppEntity.defaultResolverSpecification.getter();
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance EntityMatch()
{
  lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch();
  return InstanceDisplayRepresentable.localizedStringResource.getter();
}

OmniSearch::EntityMatcherType_optional __swiftcall EntityMatcherType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  Swift::Int v5;
  char v6;
  OmniSearch::EntityMatcherType_optional result;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EntityMatcherType.init(rawValue:), v3);
  OUTLINED_FUNCTION_6_1();
  if (v5 == 1)
    v6 = 1;
  else
    v6 = 2;
  if (!v5)
    v6 = 0;
  *v4 = v6;
  OUTLINED_FUNCTION_12();
  return result;
}

uint64_t EntityMatcherType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6E776F6E6B6E75;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance EntityMatcherType(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance EntityMatcherType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EntityMatcherType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance EntityMatcherType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::EntityMatcherType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntityMatcherType(Swift::String *a1)
{
  return EntityMatcherType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EntityMatcherType(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = EntityMatcherType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_5();
}

uint64_t protocol witness for Decodable.init(from:) in conformance EntityMatcherType()
{
  lazy protocol witness table accessor for type EntityMatcherType and conformance EntityMatcherType();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EntityMatcherType()
{
  lazy protocol witness table accessor for type EntityMatcherType and conformance EntityMatcherType();
  return RawRepresentable<>.encode(to:)();
}

uint64_t MatchProperties.maxTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MatchProperties.matchedTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void MatchProperties.matchedAliasTypes.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 28);
  *(_BYTE *)(a1 + 4) = v2;
}

uint64_t MatchProperties.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656B6F5478616DLL && a2 == 0xED0000746E756F43;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024335C230
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024335C250)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t MatchProperties.CodingKeys.stringValue.getter(char a1)
{
  if (a1)
    return 0xD000000000000011;
  else
    return 0x6E656B6F5478616DLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MatchProperties.CodingKeys()
{
  char *v0;

  return MatchProperties.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MatchProperties.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = MatchProperties.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MatchProperties.CodingKeys()
{
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MatchProperties.CodingKeys()
{
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void MatchProperties.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MatchProperties.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + 16);
  v7 = *(unsigned __int8 *)(v1 + 24);
  v12 = *(_DWORD *)(v1 + 28);
  v13 = v7;
  HIDWORD(v11) = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v20 = 0;
  v8 = v15;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v8)
  {
    v10 = BYTE4(v11);
    v9 = v12;
    v19 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v16 = v9;
    v17 = v10;
    v18 = 2;
    lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_1_1();
}

void MatchProperties.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  int v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MatchProperties.CodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_79_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    v6 = OUTLINED_FUNCTION_55_2();
    v8 = v7;
    v9 = OUTLINED_FUNCTION_55_2();
    v11 = v10;
    v12 = v9;
    lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_54_6();
    *(_QWORD *)a2 = v6;
    *(_BYTE *)(a2 + 8) = v8 & 1;
    *(_QWORD *)(a2 + 16) = v12;
    *(_BYTE *)(a2 + 24) = v11 & 1;
    *(_DWORD *)(a2 + 28) = v13;
    *(_BYTE *)(a2 + 32) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance MatchProperties(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MatchProperties.init(from:)(a1, a2);
}

void protocol witness for Encodable.encode(to:) in conformance MatchProperties(_QWORD *a1)
{
  MatchProperties.encode(to:)(a1);
}

uint64_t AliasTypes.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AliasTypes.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static AliasTypes.homeEntity.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.synonym.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.transliteration.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.expandedEmoji.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.contactRelationship.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.contactHypocorism.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

void static AliasTypes.contactHandle.getter(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_39_3(a1);
}

uint64_t protocol witness for OptionSet.init(rawValue:) in conformance AliasTypes@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return AliasTypes.init(rawValue:)(*a1, a2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance AliasTypes()
{
  lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AliasTypes()
{
  lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes();
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for SetAlgebra.contains(_:) in conformance AliasTypes(unsigned int *a1)
{
  unsigned int *v1;

  return specialized OptionSet<>.contains(_:)(*a1, *v1);
}

void protocol witness for SetAlgebra.union(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
  specialized OptionSet.union(_:)(a1);
}

void protocol witness for SetAlgebra.intersection(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
  specialized OptionSet.intersection(_:)(a1);
}

void protocol witness for SetAlgebra.symmetricDifference(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
  specialized OptionSet.symmetricDifference(_:)(a1);
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance AliasTypes(_DWORD *a1, int *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

void protocol witness for SetAlgebra.remove(_:) in conformance AliasTypes(int *a1@<X0>, uint64_t a2@<X8>)
{
  specialized OptionSet<>.remove(_:)(a2, *a1);
}

void protocol witness for SetAlgebra.update(with:) in conformance AliasTypes(int *a1@<X0>, uint64_t a2@<X8>)
{
  specialized OptionSet<>.update(with:)(a2, *a1);
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance AliasTypes(unsigned int *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

void protocol witness for SetAlgebra.formIntersection(_:) in conformance AliasTypes(int *a1)
{
  specialized OptionSet<>.formIntersection(_:)(*a1);
}

void protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance AliasTypes(int *a1)
{
  specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

void protocol witness for SetAlgebra.subtracting(_:) in conformance AliasTypes(_DWORD *a1@<X8>)
{
  specialized SetAlgebra.subtracting(_:)(a1);
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance AliasTypes(int *a1)
{
  int *v1;

  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance AliasTypes(int *a1)
{
  int *v1;

  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isSuperset(of:) in conformance AliasTypes(int *a1)
{
  int *v1;

  return specialized SetAlgebra.isSuperset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance AliasTypes()
{
  int *v0;

  return specialized SetAlgebra.isEmpty.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.init<A>(_:) in conformance AliasTypes()
{
  return SetAlgebra.init<A>(_:)();
}

void protocol witness for SetAlgebra.subtract(_:) in conformance AliasTypes(int *a1)
{
  specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance AliasTypes@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = AliasTypes.init(rawValue:)(*a1, (_DWORD *)a2);
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AliasTypes(_DWORD *a1@<X8>)
{
  *a1 = AliasTypes.rawValue.getter();
  OUTLINED_FUNCTION_5();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AliasTypes(int *a1, int *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t one-time initialization function for entityTypeMap()
{
  uint64_t result;

  result = Dictionary.init(dictionaryLiteral:)();
  static EntityMatchFormatter.entityTypeMap = result;
  return result;
}

uint64_t *EntityMatchFormatter.entityTypeMap.unsafeMutableAddressor()
{
  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  return &static EntityMatchFormatter.entityTypeMap;
}

uint64_t static EntityMatchFormatter.entityTypeMap.getter()
{
  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  return swift_bridgeObjectRetain();
}

uint64_t static EntityMatchFormatter.entityTypeMap.setter(uint64_t a1)
{
  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  static EntityMatchFormatter.entityTypeMap = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static EntityMatchFormatter.entityTypeMap.modify())()
{
  if (one-time initialization token for entityTypeMap != -1)
    swift_once();
  OUTLINED_FUNCTION_2_6();
  return static SearchToolControl.assistantOnly.modify;
}

uint64_t static EntityMatchFormatter.format(entities:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v7;
  _QWORD v8[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    strcpy((char *)v8, "The user has ");
    HIWORD(v8[1]) = -4864;
    v2 = 0;
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = v1;
      if (v1 == 1)
        break;
      swift_retain();
      OUTLINED_FUNCTION_12_9();
      OUTLINED_FUNCTION_1_11();
      OUTLINED_FUNCTION_5_9();
      OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_0_11();
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_15_5();
      if (v2)
      {
        OUTLINED_FUNCTION_28_6();
        v3 = 8236;
        v4 = 0xE200000000000000;
        goto LABEL_7;
      }
LABEL_8:
      v5._countAndFlagsBits = EntityMatch.description.getter();
      String.append(_:)(v5);
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_17_9();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_13_8();
      swift_release();
      swift_bridgeObjectRelease();
      v2 += 112;
      --v1;
      if (v7 == 1)
      {
        swift_bridgeObjectRelease();
        return v8[0];
      }
    }
    swift_retain();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_5_9();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_28_6();
    v3 = 0x20646E61202CLL;
    v4 = 0xE600000000000000;
LABEL_7:
    String.append(_:)(*(Swift::String *)&v3);
    goto LABEL_8;
  }
  return 0;
}

unint64_t lazy protocol witness table accessor for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MatchProperties.CodingKeys, &unk_2513CA3D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MatchProperties.CodingKeys, &unk_2513CA3D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MatchProperties.CodingKeys, &unk_2513CA3D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys;
  if (!lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MatchProperties.CodingKeys, &unk_2513CA3D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MatchProperties.CodingKeys and conformance MatchProperties.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AliasTypes and conformance AliasTypes()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes;
  if (!lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AliasTypes, &type metadata for AliasTypes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AliasTypes and conformance AliasTypes);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityType and conformance EntityType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityType and conformance EntityType;
  if (!lazy protocol witness table cache variable for type EntityType and conformance EntityType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityType, &type metadata for EntityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityType and conformance EntityType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityType and conformance EntityType;
  if (!lazy protocol witness table cache variable for type EntityType and conformance EntityType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityType, &type metadata for EntityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityType and conformance EntityType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityMatch and conformance EntityMatch()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch;
  if (!lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatch, &type metadata for EntityMatch);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatch and conformance EntityMatch);
  }
  return result;
}

void associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in EntityMatch()
{
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<EntityMatch> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<EntityMatch>, MEMORY[0x24BDB4B08]);
}

void associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in EntityMatch()
{
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<EntityMatch> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<EntityMatch>, MEMORY[0x24BDB6250]);
}

unint64_t lazy protocol witness table accessor for type EntityMatcherType and conformance EntityMatcherType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType;
  if (!lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatcherType, &type metadata for EntityMatcherType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType;
  if (!lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for EntityMatcherType, &type metadata for EntityMatcherType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityMatcherType and conformance EntityMatcherType);
  }
  return result;
}

void sub_2431D03AC(uint64_t a1)
{
  key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_2431D03C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityId.setter);
}

void sub_2431D03E4(uint64_t a1)
{
  key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_2431D0400(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityType.setter);
}

void sub_2431D041C(uint64_t a1)
{
  key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_2431D0438(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.entityName.setter);
}

void sub_2431D0454(uint64_t a1)
{
  key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_2431D0470(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.matchedUserUtterance.setter);
}

void sub_2431D0494(uint64_t a1)
{
  key path getter for EntityMatch.entityId : EntityMatch(a1);
}

uint64_t sub_2431D04B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EntityMatch.entityId : EntityMatch(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))EntityMatch.originAppBundleId.setter);
}

void sub_2431D04CC(uint64_t a1)
{
  key path getter for EntityMatch.startIndex : EntityMatch(a1);
}

void sub_2431D04E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for EntityMatch.startIndex : EntityMatch(a1, a2, a3, a4, (void (*)(_QWORD, _QWORD))EntityMatch.startIndex.setter);
}

void sub_2431D0504(uint64_t a1)
{
  key path getter for EntityMatch.startIndex : EntityMatch(a1);
}

void sub_2431D0520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for EntityMatch.startIndex : EntityMatch(a1, a2, a3, a4, (void (*)(_QWORD, _QWORD))EntityMatch.endIndex.setter);
}

uint64_t getEnumTagSinglePayload for EntityType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 14) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v5 = v6 - 15;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_2431D0610 + 4 * byte_24334F7C4[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_2431D0644 + 4 * byte_24334F7BF[v4]))();
}

uint64_t sub_2431D0644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D064C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431D0654);
  return result;
}

uint64_t sub_2431D0660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431D0668);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_2431D066C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D0674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityType()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for EntityMatch()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  v5 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v5;
  LODWORD(v5) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v5;
  return a1;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for EntityMatch(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityMatch(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityMatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EntityMatch()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t storeEnumTagSinglePayload for EntityMatcherType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2431D0A74 + 4 * byte_24334F7CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2431D0AA8 + 4 * byte_24334F7C9[v4]))();
}

uint64_t sub_2431D0AA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D0AB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431D0AB8);
  return result;
}

uint64_t sub_2431D0AC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431D0ACCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2431D0AD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D0AD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityMatcherType()
{
  OUTLINED_FUNCTION_103_0();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MatchProperties(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MatchProperties(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

void type metadata accessor for MatchProperties()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for AliasTypes()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for EntityMatchFormatter()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t storeEnumTagSinglePayload for MatchProperties.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2431D0BC4 + 4 * byte_24334F7D8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2431D0BF8 + 4 * byte_24334F7D3[v4]))();
}

uint64_t sub_2431D0BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D0C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431D0C08);
  return result;
}

uint64_t sub_2431D0C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431D0C1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2431D0C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D0C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for MatchProperties.CodingKeys()
{
  return &unk_2513CA3D8;
}

uint64_t OUTLINED_FUNCTION_0_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_5_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_14_5(uint64_t a1)
{
  return *(__n128 *)(a1 + 56);
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_22_3(uint64_t a1@<X8>)
{
  Swift::String v1;

  v1._object = (void *)((a1 - 32) | 0x8000000000000000);
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
}

void OUTLINED_FUNCTION_24_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  Swift::String v19;

  v19._countAndFlagsBits = a18;
  v19._object = a19;
  String.append(_:)(v19);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_36_3(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_37_2()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_39_3(_DWORD *a1@<X8>)
{
  int v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_42_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_43_4()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

void OUTLINED_FUNCTION_56_3(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_58_2()
{
  JUMPOUT(0x2494F42ECLL);
}

void OUTLINED_FUNCTION_63_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return type metadata accessor for LocalizedStringResource();
}

void OUTLINED_FUNCTION_66_5(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return String.index(_:offsetBy:)();
}

void specialized RawRepresentable<>.hashValue.getter()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  specialized RawRepresentable<>.hashValue.getter();
}

{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_37_3(v0);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_36_4(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_4_13();
  lazy protocol witness table accessor for type FlightSnippet.Status and conformance FlightSnippet.Status();
  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_40_1();
}

void specialized RawRepresentable<>.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_4_13();
  if (!a1)
    OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_4_13();
  if (!a1)
    OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

void specialized RawRepresentable<>.hashValue.getter(uint64_t a1)
{
  specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))SearchResultItem.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))QUTokenInfo.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (void (*)(uint64_t))QUParse.CodingKeys.rawValue.getter);
}

void specialized RawRepresentable<>.hashValue.getter(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_4_13();
  a2(a1);
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

{
  EntityType.rawValue.getter();
  OUTLINED_FUNCTION_19_7();
  return swift_bridgeObjectRelease();
}

{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

void specialized RawRepresentable<>.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

{
  __asm { BR              X10 }
}

uint64_t sub_2431D1490()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, char a2)
{
  if (!a2)
    OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

{
  if (!a2)
    OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

void specialized RawRepresentable<>.hash(into:)(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t sub_2431D1760()
{
  OUTLINED_FUNCTION_2_9();
  return OUTLINED_FUNCTION_0_12();
}

uint64_t specialized RawRepresentable<>.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  SearchResultItem.CodingKeys.rawValue.getter(a2);
  OUTLINED_FUNCTION_19_7();
  return OUTLINED_FUNCTION_0_12();
}

void specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2)
{
  specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))SearchResultItem.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))QUTokenInfo.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>._rawHashValue(seed:)(a1, a2, (void (*)(uint64_t))QUParse.CodingKeys.rawValue.getter);
}

void specialized RawRepresentable<>._rawHashValue(seed:)()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

{
  char v0;

  OUTLINED_FUNCTION_7_13();
  if (!v0)
    OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_36_4(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_7_13();
  EntityType.rawValue.getter();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_49_0();
  lazy protocol witness table accessor for type FlightSnippet.Status and conformance FlightSnippet.Status();
  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_40_1();
}

{
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  char v0;

  OUTLINED_FUNCTION_7_13();
  if (!v0)
    OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_37_3(v0);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

{
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

void specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_49_0();
  a3(a2);
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_107();
}

unint64_t AnswerSynthesisResult.CodingKeys.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerSynthesisResult.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t AnswerSynthesisResult.CodingKeys.init(intValue:)()
{
  return 4;
}

uint64_t AnswerSynthesisResult.CodingKeys.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431D1BB4 + 4 * byte_243350018[a1]))(0x73726577736E61, 0xE700000000000000);
}

unint64_t sub_2431D1BB4()
{
  return 0xD000000000000011;
}

uint64_t sub_2431D1BD0()
{
  return 0x726577736E416F6ELL;
}

unint64_t sub_2431D1BE8()
{
  return 0xD000000000000012;
}

uint64_t AnswerSynthesisResult.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431D1C3C + 4 * byte_24335001C[a1]))(0x73726577736E61, 0xE700000000000000);
}

unint64_t sub_2431D1C3C()
{
  return 0xD000000000000011;
}

uint64_t sub_2431D1C58()
{
  return 0x726577736E416F6ELL;
}

unint64_t sub_2431D1C70()
{
  return 0xD000000000000012;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnswerSynthesisResult.CodingKeys(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance AnswerSynthesisResult.CodingKeys()
{
  specialized RawRepresentable<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance AnswerSynthesisResult.CodingKeys(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerSynthesisResult.CodingKeys()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerSynthesisResult.CodingKeys@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = AnswerSynthesisResult.CodingKeys.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnswerSynthesisResult.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = AnswerSynthesisResult.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AnswerSynthesisResult.CodingKeys()
{
  unsigned __int8 *v0;

  return AnswerSynthesisResult.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisResult.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AnswerSynthesisResult.CodingKeys.init(stringValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisResult.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AnswerSynthesisResult.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisResult.CodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisResult.CodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void AnswerSynthesisResult.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnswerSynthesisResult.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v8 > 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResult]);
    lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A]((unint64_t *)&lazy protocol witness table cache variable for type [SearchResult] and conformance <A> [A], &lazy protocol witness table cache variable for type SearchResult and conformance SearchResult, (uint64_t)&protocol conformance descriptor for SearchResult, MEMORY[0x24BEE12A0]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  else
  {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_1_1();
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.CodingKeys, &unk_2513CA8D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.CodingKeys, &unk_2513CA8D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.CodingKeys, &unk_2513CA8D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.CodingKeys, &unk_2513CA8D8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys);
  }
  return result;
}

void static AnswerSynthesisResult.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      v2 = 0;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    if (v3 == 1)
    {
      v2 = 1;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v2 != 2)
  {
    if (v3 >= 3)
    {
      outlined copy of AnswerSynthesisResult(*a2);
      outlined copy of AnswerSynthesisResult(v2);
      specialized static Array<A>.== infix(_:_:)(v2, v3);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
LABEL_12:
    outlined copy of AnswerSynthesisResult(*a2);
    outlined copy of AnswerSynthesisResult(v2);
    goto LABEL_13;
  }
  v2 = 2;
LABEL_13:
  outlined consume of AnswerSynthesisResult(v2);
  outlined consume of AnswerSynthesisResult(v3);
  OUTLINED_FUNCTION_12();
}

unint64_t outlined copy of AnswerSynthesisResult(unint64_t result)
{
  if (result >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t outlined consume of AnswerSynthesisResult(unint64_t result)
{
  if (result >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for SearchResult(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        outlined init with copy of SearchAnswerEntity.SourceDocument(a1 + v12, (uint64_t)v10, type metadata accessor for SearchResult);
        outlined init with copy of SearchAnswerEntity.SourceDocument(a2 + v12, (uint64_t)v7, type metadata accessor for SearchResult);
        v15 = static SearchResult.== infix(_:_:)((uint64_t)v10, (uint64_t)v7);
        _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v7, type metadata accessor for SearchResult);
        _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v10, type metadata accessor for SearchResult);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = type metadata accessor for URL();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?));
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_32_4();
  v47 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  OUTLINED_FUNCTION_25_4();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t *)((char *)&v41 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16) || !v22 || a1 == a2)
    goto LABEL_35;
  v42 = v9;
  v43 = v13;
  v44 = v6;
  v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = *(_QWORD *)(v19 + 72);
  v45 = a2;
  v46 = a1;
  v41 = v24;
  while (1)
  {
    outlined init with copy of SearchAnswerEntity.SourceDocument(a1 + v23, (uint64_t)v21, type metadata accessor for SearchAnswerEntity.SourceDocument);
    outlined init with copy of SearchAnswerEntity.SourceDocument(a2 + v23, (uint64_t)v18, type metadata accessor for SearchAnswerEntity.SourceDocument);
    v25 = v21[1];
    v26 = v18[1];
    if (v25)
    {
      if (!v26)
        goto LABEL_34;
      v27 = *v21 == *v18 && v25 == v26;
      if (!v27 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        goto LABEL_34;
    }
    else if (v26)
    {
      goto LABEL_34;
    }
    v28 = v21[3];
    v29 = v18[3];
    if (v28)
    {
      if (!v29)
        goto LABEL_34;
      v30 = v21[2] == v18[2] && v28 == v29;
      if (!v30 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        goto LABEL_34;
    }
    else if (v29)
    {
      goto LABEL_34;
    }
    v31 = *(int *)(v47 + 24);
    v32 = (uint64_t)v18 + v31;
    v33 = v2 + *(int *)(v48 + 48);
    outlined init with copy of URL?((uint64_t)v21 + v31, v2);
    outlined init with copy of URL?(v32, v33);
    OUTLINED_FUNCTION_26_7(v2);
    if (!v27)
      break;
    OUTLINED_FUNCTION_26_7(v33);
    if (!v27)
      goto LABEL_33;
    outlined destroy of MobileSMSDocument?(v2, &demangling cache variable for type metadata for URL?);
    a2 = v45;
    a1 = v46;
LABEL_30:
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v18, type metadata accessor for SearchAnswerEntity.SourceDocument);
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v21, type metadata accessor for SearchAnswerEntity.SourceDocument);
    v23 += v24;
    if (!--v22)
      goto LABEL_35;
  }
  v34 = v43;
  outlined init with copy of URL?(v2, v43);
  OUTLINED_FUNCTION_26_7(v33);
  if (!v35)
  {
    v36 = v44;
    v37 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v42, v33, v5);
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
    v38 = OUTLINED_FUNCTION_33_5();
    v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v40 = v37;
    v24 = v41;
    v39(v40, v5);
    v39(v34, v5);
    outlined destroy of MobileSMSDocument?(v2, &demangling cache variable for type metadata for URL?);
    a2 = v45;
    a1 = v46;
    if ((v38 & 1) == 0)
      goto LABEL_34;
    goto LABEL_30;
  }
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v34, v5);
LABEL_33:
  outlined destroy of MobileSMSDocument?(v2, &demangling cache variable for type metadata for (URL?, URL?));
LABEL_34:
  OUTLINED_FUNCTION_6_7((uint64_t)v18);
  OUTLINED_FUNCTION_6_7((uint64_t)v21);
LABEL_35:
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  v18 = type metadata accessor for FlightSnippet.Leg(0);
  OUTLINED_FUNCTION_25_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_23_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_6();
  if (v11 && v10 && a1 != a2)
  {
    OUTLINED_FUNCTION_21_5();
    while (1)
    {
      OUTLINED_FUNCTION_29_6();
      OUTLINED_FUNCTION_28_7();
      if (*(_QWORD *)(v4 + *(int *)(v18 + 20)) != *(_QWORD *)(v3 + *(int *)(v18 + 20)))
      {
        swift_retain();
        swift_retain();
        closure #1 in static FlightSnippet.Leg.== infix(_:_:)();
        v13 = v12;
        swift_release();
        swift_release();
        if ((v13 & 1) == 0)
          break;
      }
      v14 = type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_33_5();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_39_4();
      v16 = v2-- != 0;
      if ((v14 & 1) != 0)
      {
        v5 += v17;
        if (v16)
          continue;
      }
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_6_7(v3);
    OUTLINED_FUNCTION_6_7(v4);
  }
LABEL_16:
  OUTLINED_FUNCTION_43_0();
}

{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  char v15;
  BOOL v17;
  uint64_t v18;

  type metadata accessor for FlightSnippet.FlightInfo(0);
  OUTLINED_FUNCTION_25_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_23_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_6();
  if (v11 && v10 && a1 != a2)
  {
    OUTLINED_FUNCTION_21_5();
    while (1)
    {
      OUTLINED_FUNCTION_29_6();
      OUTLINED_FUNCTION_28_7();
      v11 = *v4 == *v3 && v4[1] == v3[1];
      if (!v11 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        break;
      v12 = v4[2] == v3[2] && v4[3] == v3[3];
      if (!v12 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        break;
      v13 = v4[4] == v3[4] && v4[5] == v3[5];
      if (!v13 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        break;
      v14 = v4[6] == v3[6] && v4[7] == v3[7];
      if (!v14 && (OUTLINED_FUNCTION_18_7() & 1) == 0)
        break;
      v15 = type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      dispatch thunk of static Equatable.== infix(_:_:)();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_39_4();
      v17 = v2-- != 0;
      if ((v15 & 1) != 0)
      {
        v5 += v18;
        if (v17)
          continue;
      }
      goto LABEL_34;
    }
    OUTLINED_FUNCTION_6_7((uint64_t)v3);
    OUTLINED_FUNCTION_6_7((uint64_t)v4);
  }
LABEL_34:
  OUTLINED_FUNCTION_43_0();
}

void specialized static Array<A>.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (OUTLINED_FUNCTION_18_7() & 1) != 0) && v2 != 1))
  {
    v6 = a1 + 7;
    v7 = a2 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v6 - 1) == *(v7 - 1) && *v6 == *v7;
      if (v9 || (OUTLINED_FUNCTION_18_7() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    OUTLINED_FUNCTION_12();
  }
}

void AnswerSynthesisResult.AnswersCodingKeys.hash(into:)()
{
  Hasher._combine(_:)(0);
}

uint64_t AnswerSynthesisResult.AnswersCodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73726577736E61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int AnswerSynthesisResult.AnswersCodingKeys.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t AnswerSynthesisResult.AnswersCodingKeys.stringValue.getter()
{
  return 0x73726577736E61;
}

uint64_t AnswerSynthesisResult.NoAnswerCodingKeys.init(stringValue:)()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t AnswerSynthesisResult.NoAnswerCodingKeys.stringValue.getter()
{
  return 0;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerSynthesisResult.AnswersCodingKeys()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisResult.AnswersCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = AnswerSynthesisResult.AnswersCodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisResult.AnswersCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisResult.AnswersCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnswerSynthesisResult.NoAnswerCodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AnswerSynthesisResult.NoAnswerCodingKeys.init(stringValue:)();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance AnswerSynthesisResult.NoAnswerCodingKeys()
{
  return IntentFileItem.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance AnswerSynthesisResult.NoAnswerCodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_74();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisResult.NoAnswerCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisResult.NoAnswerCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys()
{
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys();
  return CodingKey.debugDescription.getter();
}

void AnswerSynthesisResult.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisResult.NoExtractionNeededCodingKeys>);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisResult.NoAnswerCodingKeys>);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisResult.NoEligibleResultsCodingKeys>);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisResult.AnswersCodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_32_4();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnswerSynthesisResult.CodingKeys>);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  v23 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AnswerSynthesisResult.CodingKeys and conformance AnswerSynthesisResult.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v24)
  {
    v25 = v7;
    v11 = v10;
    v12 = KeyedDecodingContainer.allKeys.getter();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = v6;
    if (v13)
    {
      v15 = *(unsigned __int8 *)(v12 + 32);
      specialized ArraySlice.subscript.getter(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
      v17 = v16;
      v19 = v18;
      swift_bridgeObjectRelease();
      if (v17 == v19 >> 1)
        __asm { BR              X9 }
      v14 = v6;
      v11 = v10;
    }
    v20 = type metadata accessor for DecodingError();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *v22 = &type metadata for AnswerSynthesisResult;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v11, v14);
  }
  __swift_destroy_boxed_opaque_existential_1(v23);
  OUTLINED_FUNCTION_1_1();
}

void sub_2431D2EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 - 67) = 1;
  lazy protocol witness table accessor for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys();
  v2 = *(_QWORD *)(v1 - 160);
  OUTLINED_FUNCTION_10_9();
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v2, *(_QWORD *)(v1 - 176));
    OUTLINED_FUNCTION_24_4();
    OUTLINED_FUNCTION_9_9();
    JUMPOUT(0x2431D30A0);
  }
  OUTLINED_FUNCTION_24_4();
  JUMPOUT(0x2431D2EE0);
}

void protocol witness for Decodable.init(from:) in conformance AnswerSynthesisResult(_QWORD *a1)
{
  AnswerSynthesisResult.init(from:)(a1);
}

void protocol witness for Encodable.encode(to:) in conformance AnswerSynthesisResult(_QWORD *a1)
{
  AnswerSynthesisResult.encode(to:)(a1);
}

uint64_t specialized ArraySlice.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoExtractionNeededCodingKeys, &unk_2513CA848);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoExtractionNeededCodingKeys, &unk_2513CA848);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoExtractionNeededCodingKeys, &unk_2513CA848);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoExtractionNeededCodingKeys and conformance AnswerSynthesisResult.NoExtractionNeededCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoAnswerCodingKeys, &unk_2513CA828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoAnswerCodingKeys, &unk_2513CA828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoAnswerCodingKeys, &unk_2513CA828);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoAnswerCodingKeys and conformance AnswerSynthesisResult.NoAnswerCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoEligibleResultsCodingKeys, &unk_2513CA808);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoEligibleResultsCodingKeys, &unk_2513CA808);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.NoEligibleResultsCodingKeys, &unk_2513CA808);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.NoEligibleResultsCodingKeys and conformance AnswerSynthesisResult.NoEligibleResultsCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.AnswersCodingKeys, &unk_2513CA7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.AnswersCodingKeys, &unk_2513CA7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.AnswersCodingKeys, &unk_2513CA7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys;
  if (!lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AnswerSynthesisResult.AnswersCodingKeys, &unk_2513CA7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerSynthesisResult.AnswersCodingKeys and conformance AnswerSynthesisResult.AnswersCodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SearchResult] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchResult]);
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(a2, type metadata accessor for SearchResult, a3);
    v11 = v10;
    result = MEMORY[0x2494F6CA4](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnswerSynthesisResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for AnswerSynthesisResult(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for AnswerSynthesisResult(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for AnswerSynthesisResult(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisResult(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t getEnumTag for AnswerSynthesisResult(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *destructiveInjectEnumTag for AnswerSynthesisResult(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AnswerSynthesisResult()
{
  return &type metadata for AnswerSynthesisResult;
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisResult.AnswersCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2431D353C + 4 * byte_243350024[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2431D355C + 4 * byte_243350029[v4]))();
}

_BYTE *sub_2431D353C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2431D355C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2431D3564(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2431D356C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2431D3574(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2431D357C(_DWORD *result)
{
  *result = 0;
  return result;
}

void *type metadata accessor for AnswerSynthesisResult.AnswersCodingKeys()
{
  return &unk_2513CA7E8;
}

void *type metadata accessor for AnswerSynthesisResult.NoEligibleResultsCodingKeys()
{
  return &unk_2513CA808;
}

void *type metadata accessor for AnswerSynthesisResult.NoAnswerCodingKeys()
{
  return &unk_2513CA828;
}

void *type metadata accessor for AnswerSynthesisResult.NoExtractionNeededCodingKeys()
{
  return &unk_2513CA848;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisResult.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2431D369C + 4 * byte_243350033[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2431D36D0 + 4 * byte_24335002E[v4]))();
}

uint64_t sub_2431D36D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D36D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431D36E0);
  return result;
}

uint64_t sub_2431D36EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431D36F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2431D36F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431D3700(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AnswerSynthesisResult.CodingKeys()
{
  return &unk_2513CA8D8;
}

unint64_t lazy protocol witness table accessor for type FlightSnippet.Status and conformance FlightSnippet.Status()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status;
  if (!lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightSnippet.Status, &type metadata for FlightSnippet.Status);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status;
  if (!lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightSnippet.Status, &type metadata for FlightSnippet.Status);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status;
  if (!lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightSnippet.Status, &type metadata for FlightSnippet.Status);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status;
  if (!lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightSnippet.Status, &type metadata for FlightSnippet.Status);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Status and conformance FlightSnippet.Status);
  }
  return result;
}

void outlined init with copy of SearchAnswerEntity.SourceDocument(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t OUTLINED_FUNCTION_12_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return String.hash(into:)();
}

void OUTLINED_FUNCTION_21_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_28_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  outlined init with copy of SearchAnswerEntity.SourceDocument(v0 + v3, v1, v2);
}

void OUTLINED_FUNCTION_29_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  outlined init with copy of SearchAnswerEntity.SourceDocument(v0 + v3, v1, v2);
}

void OUTLINED_FUNCTION_31_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_36_4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Swift::UInt v10;

  Hasher._combine(_:)(v10);
}

uint64_t OUTLINED_FUNCTION_37_3(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

void OUTLINED_FUNCTION_39_4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  _s10OmniSearch0B6ResultVWOhTm_1(v0, v1);
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t i;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  char *v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  int v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  _OWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __int128 v54;
  uint64_t v55;
  int v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  int v64;
  char *v65;
  uint64_t v66;
  int64_t v67;

  v2 = type metadata accessor for TypeIdentifier.PrimitiveTypeIdentifier();
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v50 - v6;
  v8 = type metadata accessor for TypeIdentifier();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v50 - v16;
  v17 = *(_QWORD *)(a1 + 56);
  v62 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v63 = (unint64_t)(v18 + 63) >> 6;
  v64 = *MEMORY[0x24BEB9D18];
  v57 = *MEMORY[0x24BEB9CF8];
  v56 = *MEMORY[0x24BEB9CA0];
  swift_bridgeObjectRetain();
  v21 = 0;
  v55 = MEMORY[0x24BEE4AF8];
  v54 = xmmword_24334DB60;
  v61 = a1;
  v58 = v15;
  if (!v20)
    goto LABEL_5;
LABEL_4:
  v66 = (v20 - 1) & v20;
  v67 = v21;
  for (i = __clz(__rbit64(v20)) | (v21 << 6); ; i = __clz(__rbit64(v24)) + (v25 << 6))
  {
    v27 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v28 = v65;
    v27(v65, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v9 + 72) * i, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v28, v8);
    v27(v12, (unint64_t)v15, v8);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
    if (v29 == v64)
    {
      v30 = v60;
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      v31 = v12;
      v32 = swift_projectBox();
      v33 = v9;
      v34 = v59;
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v35(v7, v32, v30);
      v35(v5, (uint64_t)v7, v30);
      v36 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v5, v30);
      v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      if (v36 != v56)
      {
        v37(v7, v30);
        v37(v5, v30);
        swift_release();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        a1 = v61;
        v9 = v33;
        v12 = v31;
        v15 = v58;
        v38(v58, v8);
        goto LABEL_26;
      }
      v37(v5, v30);
      v37(v7, v30);
      v40 = &outlined read-only object #0 of closure #1 in OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:);
      v9 = v33;
      v12 = v31;
      v15 = v58;
    }
    else
    {
      if (v29 != v57)
      {
        v39 = *(void (**)(char *, uint64_t))(v9 + 8);
        v39(v12, v8);
        v39(v15, v8);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      v41 = *(_QWORD *)v12;
      v42 = *(_QWORD *)(*(_QWORD *)v12 + 16);
      v51 = *(_QWORD *)(*(_QWORD *)v12 + 24);
      v43 = *(_QWORD *)(v41 + 40);
      v52 = *(_QWORD *)(v41 + 32);
      v53 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchEntityTypeIdentifier>);
      v40 = (_OWORD *)swift_allocObject();
      v40[1] = v54;
      *((_QWORD *)v40 + 4) = v53;
      v44 = v52;
      *((_QWORD *)v40 + 5) = v51;
      *((_QWORD *)v40 + 6) = v44;
      *((_QWORD *)v40 + 7) = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v55 = v48;
    }
    a1 = v61;
    v45 = *(_QWORD *)(v55 + 16);
    v46 = v45 + 1;
    if (v45 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      v53 = v45 + 1;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v46 = v53;
      v55 = v49;
    }
    v47 = v55;
    *(_QWORD *)(v55 + 16) = v46;
    *(_QWORD *)(v47 + 8 * v45 + 32) = v40;
LABEL_26:
    v21 = v67;
    v20 = v66;
    if (v66)
      goto LABEL_4;
LABEL_5:
    v23 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v23 >= v63)
      goto LABEL_35;
    v24 = *(_QWORD *)(v62 + 8 * v23);
    v25 = v21 + 1;
    if (!v24)
    {
      v25 = v21 + 2;
      if (v21 + 2 >= v63)
        goto LABEL_35;
      v24 = *(_QWORD *)(v62 + 8 * v25);
      if (!v24)
      {
        v25 = v21 + 3;
        if (v21 + 3 >= v63)
          goto LABEL_35;
        v24 = *(_QWORD *)(v62 + 8 * v25);
        if (!v24)
        {
          v25 = v21 + 4;
          if (v21 + 4 >= v63)
            goto LABEL_35;
          v24 = *(_QWORD *)(v62 + 8 * v25);
          if (!v24)
            break;
        }
      }
    }
LABEL_20:
    v66 = (v24 - 1) & v24;
    v67 = v25;
  }
  v26 = v21 + 5;
  if (v21 + 5 >= v63)
  {
LABEL_35:
    swift_release();
    return;
  }
  v24 = *(_QWORD *)(v62 + 8 * v26);
  if (v24)
  {
    v25 = v21 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v63)
      goto LABEL_35;
    v24 = *(_QWORD *)(v62 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x24BEE4AF8];
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v7 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    if ((v16 & 0x2000000000000000) != 0)
      v17 = HIBYTE(v16) & 0xF;
    else
      v17 = *v14 & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      if ((v16 & 0x1000000000000000) != 0)
      {
        v18 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      }
      else
      {
        if ((v16 & 0x2000000000000000) == 0 && (v15 & 0x1000000000000000) == 0)
          _StringObject.sharedUTF8.getter();
        OUTLINED_FUNCTION_23_0();
        v18 = _decodeScalar(_:startingAt:)();
        OUTLINED_FUNCTION_56_0();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_20();
        v8 = v20;
      }
      v19 = *(_QWORD *)(v8 + 16);
      if (v19 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        OUTLINED_FUNCTION_16_20();
        v8 = v21;
      }
      *(_QWORD *)(v8 + 16) = v19 + 1;
      *(_DWORD *)(v8 + 4 * v19 + 32) = v18;
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v11 >= v6)
    goto LABEL_37;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v7;
  if (v12)
    goto LABEL_21;
  v7 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_37;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_37;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_37;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_37:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v6)
      goto LABEL_37;
    v12 = *(_QWORD *)(v2 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_39:
  __break(1u);
}

uint64_t OmniSearchOptions.isFirstToolInvocation.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t OmniSearchOptions.isFirstToolInvocation.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*OmniSearchOptions.isFirstToolInvocation.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t OmniSearchOptions.isLowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t OmniSearchOptions.isLowConfidenceKnowledge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*OmniSearchOptions.isLowConfidenceKnowledge.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

_QWORD *OmniSearchOptions.searchContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[17];

  v1 = outlined init with take of SearchContext?(v0 + 8, (uint64_t)v3);
  OUTLINED_FUNCTION_124_1(v1);
  return outlined retain of SearchContext?(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SearchContext?);
}

uint64_t outlined copy of SearchContext?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void OmniSearchOptions.searchContext.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v3[136];
  _QWORD v4[18];

  outlined init with take of SearchContext?(a1, (uint64_t)v3);
  outlined init with take of SearchContext?(v1 + 8, (uint64_t)v4);
  v2 = outlined retain of SearchContext?(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SearchContext?);
  OUTLINED_FUNCTION_124_1((uint64_t)v2);
  OUTLINED_FUNCTION_121_1();
}

_QWORD *outlined retain of SearchContext?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t outlined consume of SearchContext?(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t (*OmniSearchOptions.searchContext.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void OmniSearchOptions.init()(void *a1@<X8>)
{
  _BYTE v2[136];
  __int16 v3;
  uint64_t v4;

  _s10OmniSearch0B7ContextVSgWOi0_(v2);
  v3 = 0;
  outlined init with take of SearchContext?((uint64_t)v2, (uint64_t)&v4);
  OUTLINED_FUNCTION_42_6(a1, &v3);
  OUTLINED_FUNCTION_121_1();
}

uint64_t default argument 0 of OmniSearchOptions.init(isFirstToolInvocation:isLowConfidenceKnowledge:searchContext:)()
{
  return 0;
}

uint64_t default argument 1 of OmniSearchOptions.init(isFirstToolInvocation:isLowConfidenceKnowledge:searchContext:)()
{
  return 0;
}

uint64_t OmniSearchOptions.init(isFirstToolInvocation:isLowConfidenceKnowledge:searchContext:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  _BYTE v8[136];

  outlined init with take of SearchContext?(a3, (uint64_t)v8);
  *a4 = a1;
  a4[1] = a2;
  return outlined init with take of SearchContext?((uint64_t)v8, (uint64_t)(a4 + 8));
}

uint64_t static OmniSearchService.MaxPerSourceLimitPreset.getter()
{
  return 10;
}

uint64_t OmniSearchService.maxPerSourceLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_maxPerSourceLimit);
}

uint64_t OmniSearchService.searchServices.getter()
{
  return swift_bridgeObjectRetain();
}

void OmniSearchService.searchResultRanker.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of SearchResultRanking(v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker, a1);
}

void OmniSearchService.requestRouter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of Date?(v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_requestRouter, a1, &demangling cache variable for type metadata for RequestRouting?);
}

void OmniSearchService.answerComposer.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of SearchResultRanking(v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_answerComposer, a1);
}

uint64_t key path getter for OmniSearchService.intermediateCallback : OmniSearchService@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x80))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for OmniSearchService.intermediateCallback : OmniSearchService(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(_QWORD, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x88);
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t OmniSearchService.intermediateCallback.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_intermediateCallback);
  OUTLINED_FUNCTION_2_6();
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(*v1);
  return v2;
}

uint64_t outlined copy of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t OmniSearchService.intermediateCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_intermediateCallback);
  OUTLINED_FUNCTION_2_6();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(v6);
}

uint64_t outlined consume of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t (*OmniSearchService.intermediateCallback.modify())()
{
  OUTLINED_FUNCTION_2_6();
  return static UTType.searchToolExportedExperiences.modify;
}

id OmniSearchService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t OmniSearchService.init()()
{
  uint64_t v0;

  swift_getObjectType();
  v0 = OmniSearchService.__allocating_init(eagerResolutionEnabled:)(1);
  swift_deallocPartialClassInstance();
  return v0;
}

uint64_t OmniSearchService.__allocating_init(eagerResolutionEnabled:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _UNKNOWN **v50;
  _BYTE v51[24];
  __int128 v52;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchService>);
  v2 = OUTLINED_FUNCTION_8();
  *(_OWORD *)(v2 + 16) = xmmword_2433505A0;
  *(_QWORD *)(v2 + 56) = &type metadata for LocalSearchService;
  *(_QWORD *)(v2 + 64) = &protocol witness table for LocalSearchService;
  v3 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v2 + 32) = v3;
  type metadata accessor for LocalIndexClient();
  v4 = LocalIndexClient.__allocating_init()();
  *(_QWORD *)(v3 + 16) = 1;
  *(_BYTE *)(v3 + 24) = 1;
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = 10;
  *(_BYTE *)(v3 + 48) = 0;
  v5 = type metadata accessor for SageSearch();
  OUTLINED_FUNCTION_27();
  v6 = SageSearch.init()();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_sharedSession);
  v9 = type metadata accessor for GlobalSearchClient();
  v10 = OUTLINED_FUNCTION_8();
  *(_QWORD *)&v52 = v5;
  *((_QWORD *)&v52 + 1) = &protocol witness table for SageSearch;
  *(_QWORD *)v51 = v6;
  v11 = OUTLINED_FUNCTION_74_6(v10, (uint64_t *)&unk_2513C7660);
  OUTLINED_FUNCTION_72_3(v11, v12, v13, v14, v15, v16, v17, v18, v39, v41, v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)v50,
    *(__int128 *)v51);
  *(_QWORD *)(v10 + 72) = v8;
  *(_QWORD *)(v2 + 96) = v9;
  *(_QWORD *)(v2 + 104) = &protocol witness table for GlobalSearchClient;
  *(_QWORD *)(v2 + 72) = v10;
  *(_QWORD *)(v2 + 136) = &type metadata for AppEntitySearchService;
  *(_QWORD *)(v2 + 144) = &protocol witness table for AppEntitySearchService;
  v19 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v2 + 112) = v19;
  AppEntitySearchService.init(maxItemCount:)(20, v19 + 16);
  if ((a1 & 1) != 0)
  {
    swift_allocObject();
    v20 = SageSearch.init()();
    v21 = objc_msgSend(v7, sel_sharedSession);
    v22 = OUTLINED_FUNCTION_8();
    *(_QWORD *)v51 = v20;
    v23 = OUTLINED_FUNCTION_74_6(v22, (uint64_t *)&unk_2513C7690);
    OUTLINED_FUNCTION_72_3(v23, v24, v25, v26, v27, v28, v29, v30, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)v50,
      *(__int128 *)v51);
    *(_QWORD *)(v22 + 72) = v21;
    v31 = type metadata accessor for GlobalResolutionService();
    v32 = (_QWORD *)OUTLINED_FUNCTION_8();
    v32[3] = 0;
    v32[4] = 0;
    v32[2] = v22;
    *(_QWORD *)&v52 = v31;
    *((_QWORD *)&v52 + 1) = &protocol witness table for GlobalResolutionService;
  }
  else
  {
    v32 = 0;
    *(_OWORD *)&v51[8] = 0u;
    v52 = 0u;
  }
  *(_QWORD *)v51 = v32;
  if (one-time initialization token for shared != -1)
    swift_once();
  v33 = static AnswerSynthesisController.shared;
  type metadata accessor for ResultHydrator();
  swift_retain();
  v34 = ResultHydrator.__allocating_init()();
  v35 = type metadata accessor for AnswerComposer();
  v36 = OUTLINED_FUNCTION_8();
  v37 = specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)((uint64_t)v33, v34, (uint64_t)v51, 28261, 0xE200000000000000, v36);
  *(_QWORD *)&v52 = v35;
  *((_QWORD *)&v52 + 1) = &protocol witness table for AnswerComposer;
  *(_QWORD *)v51 = v37;
  v49 = type metadata accessor for SearchResultRanker();
  v50 = &protocol witness table for SearchResultRanker;
  v46 = OUTLINED_FUNCTION_8();
  default argument 2 of OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)();
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *, _BYTE *, uint64_t, _QWORD, _QWORD))(v40 + 152))(v2, &v46, &v41, v51, 10, 0, 0);
}

id OmniSearchService.__allocating_init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_120_1();
  v11 = objc_allocWithZone(v7);
  v12 = OUTLINED_FUNCTION_119_0();
  return OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)(v12, v13, v14, v15, a5, a6, a7);
}

id OmniSearchService.init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  objc_super v20;

  v14 = (uint64_t *)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_intermediateCallback];
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchServices] = a1;
  outlined init with copy of SearchResultRanking(a2, (uint64_t)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker]);
  outlined init with copy of Date?(a3, (uint64_t)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_requestRouter], &demangling cache variable for type metadata for RequestRouting?);
  outlined init with copy of SearchResultRanking(a4, (uint64_t)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_answerComposer]);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10OmniSearch17OmniSearchService_maxPerSourceLimit] = a5;
  OUTLINED_FUNCTION_2_6();
  v15 = *v14;
  *v14 = a6;
  v14[1] = a7;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(a6);
  outlined consume of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(v15);
  v20.receiver = v7;
  v20.super_class = (Class)type metadata accessor for OmniSearchService();
  v16 = objc_msgSendSuper2(&v20, sel_init);
  outlined consume of (@escaping @callee_guaranteed (@guaranteed String) -> ())?(a6);
  OUTLINED_FUNCTION_31_7();
  v17 = OUTLINED_FUNCTION_97_3();
  outlined destroy of MobileSMSDocument?(v17, v18);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v16;
}

Swift::Void __swiftcall OmniSearchService.prewarm()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  NSObject *v37;
  os_signpost_type_t v38;
  uint64_t v39;
  const char *v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v44 = OUTLINED_FUNCTION_103_3();
  v48 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_0_3();
  v47 = v2;
  v3 = OUTLINED_FUNCTION_104_2();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18_1();
  v49 = v5;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v43 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v43 - v10;
  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_78_5();
  v13 = __swift_project_value_buffer(v12, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v45 = v13;
  v14 = OSSignposter.logHandle.getter();
  v15 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v16 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v16 = 0;
    v17 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v14, v15, v17, "OmniSearchService.prewarm", "", v16);
    specialized UnsafeMutablePointer.deallocate()();
  }

  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v11, v3);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  OSSignpostIntervalState.init(id:isOpen:)();
  v18 = v3;
  v46 = *(void (**)(char *, uint64_t))(v4 + 8);
  v46(v11, v3);
  v19 = v1;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchServices);
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    v27 = v19;
    v28 = v18;
LABEL_18:
    outlined init with copy of Date?(v27 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_requestRouter, (uint64_t)v50, &demangling cache variable for type metadata for RequestRouting?);
    v31 = v51;
    if (v51)
    {
      v32 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
      OUTLINED_FUNCTION_75_5();
    }
    else
    {
      outlined destroy of MobileSMSDocument?((uint64_t)v50, &demangling cache variable for type metadata for RequestRouting?);
    }
    goto LABEL_23;
  }
  v22 = v20 + 32;
  OUTLINED_FUNCTION_116_0();
  v23 = v20 + 32;
  do
  {
    outlined init with copy of SearchResultRanking(v23, (uint64_t)v50);
    v24 = v51;
    v25 = v52;
    __swift_project_boxed_opaque_existential_1(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
    OUTLINED_FUNCTION_75_5();
    v23 += 40;
    --v21;
  }
  while (v21);
  OUTLINED_FUNCTION_26_0();
  v26 = *(_QWORD *)(v20 + 16);
  v27 = v19;
  v28 = v18;
  if (!v26)
    goto LABEL_18;
  OUTLINED_FUNCTION_116_0();
  while (1)
  {
    outlined init with copy of SearchResultRanking(v22, (uint64_t)v50);
    v29 = OUTLINED_FUNCTION_13_9(v50);
    if (v29)
      break;
    OUTLINED_FUNCTION_8_8();
LABEL_14:
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_75_5();
    if ((v30 & 1) != 0)
      goto LABEL_22;
    v22 += 40;
    if (!--v26)
    {
      OUTLINED_FUNCTION_26_0();
      goto LABEL_18;
    }
  }
  if (v29 == 2)
  {
    OUTLINED_FUNCTION_9_10();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_75_5();
LABEL_22:
  OUTLINED_FUNCTION_26_0();
LABEL_23:
  v34 = v48;
  v33 = v49;
  v36 = (void (*)(uint64_t, uint64_t))v46;
  v35 = v47;
  v37 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  v38 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    swift_retain();
    OUTLINED_FUNCTION_85_2();
    swift_release();
    v39 = v44;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v34 + 88))(v35, v44) == *MEMORY[0x24BEE7810])
    {
      v40 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v39);
      v40 = "";
    }
    v41 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v41 = 0;
    v42 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v37, v38, v42, "OmniSearchService.prewarm", v40, v41);
    specialized UnsafeMutablePointer.deallocate()();
  }

  v36(v33, v28);
  swift_release();
}

void OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_116_1();
  *(_QWORD *)(v0 + 440) = *v1;
  _s10OmniSearch0B7ContextVSgWOi0_((void *)(v0 + 304));
  *(_WORD *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_125_0();
  OUTLINED_FUNCTION_42_6((void *)(v0 + 160), (const void *)(v0 + 16));
  v2 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v0 + 448) = v2;
  OUTLINED_FUNCTION_66_6(v2, (uint64_t)OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:));
  OUTLINED_FUNCTION_20_7();
  __asm { BR              X7 }
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_101_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_54();
    return OUTLINED_FUNCTION_2_10();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_90_4();
    return OUTLINED_FUNCTION_6_10(v5, v6);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, _BYTE *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 328) = a4;
  *(_QWORD *)(v8 + 336) = v7;
  *(_QWORD *)(v8 + 312) = a2;
  *(_QWORD *)(v8 + 320) = a3;
  *(_QWORD *)(v8 + 304) = a1;
  *(_QWORD *)(v8 + 344) = type metadata accessor for SearchResultItem(0);
  *(_QWORD *)(v8 + 352) = OUTLINED_FUNCTION_18_5();
  *(_QWORD *)(v8 + 360) = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  *(_QWORD *)(v8 + 368) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 376) = OUTLINED_FUNCTION_17();
  v11 = OUTLINED_FUNCTION_103_3();
  *(_QWORD *)(v8 + 384) = v11;
  *(_QWORD *)(v8 + 392) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 400) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 408) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 416) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 424) = OUTLINED_FUNCTION_17();
  v12 = OUTLINED_FUNCTION_104_2();
  *(_QWORD *)(v8 + 432) = v12;
  *(_QWORD *)(v8 + 440) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 448) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 456) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 464) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 472) = OUTLINED_FUNCTION_17();
  *(_QWORD *)(v8 + 480) = OUTLINED_FUNCTION_17();
  v13 = OUTLINED_FUNCTION_17();
  v14 = *a6;
  *(_QWORD *)(v8 + 488) = v13;
  *(_QWORD *)(v8 + 496) = v14;
  *(_BYTE *)(v8 + 617) = *a7;
  LOBYTE(v14) = a7[1];
  *(_BYTE *)(v8 + 760) = v14;
  *(_BYTE *)(v8 + 616) = v14;
  OUTLINED_FUNCTION_82_4((void *)(v8 + 618), a7 + 2);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  uint8_t *v32;
  os_signpost_type_t v33;
  os_signpost_id_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String_optional v52;
  _QWORD *v53;
  char *v55;
  uint64_t v56;
  char v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_60();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = *(_BYTE *)(v26 + 760);
  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v30 = OUTLINED_FUNCTION_78_5();
  *(_QWORD *)(v26 + 504) = __swift_project_value_buffer(v30, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v31 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    v32 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v32);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v31, v33, v34, "OmniSearchService.search", "", v32);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v35 = *(_QWORD *)(v26 + 440);

  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v26 + 512) = OUTLINED_FUNCTION_73_2();
  v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
  *(_QWORD *)(v26 + 520) = v36;
  OUTLINED_FUNCTION_105_2(v36);
  if (one-time initialization token for search != -1)
    swift_once();
  v37 = OUTLINED_FUNCTION_13();
  v38 = __swift_project_value_buffer(v37, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  Logger.logObject.getter();
  v39 = OUTLINED_FUNCTION_106_3();
  if (OUTLINED_FUNCTION_31(v39))
  {
    v67 = *(_QWORD *)(v26 + 328);
    v40 = *(_QWORD *)(v26 + 312);
    v68 = *(_QWORD *)(v26 + 320);
    v41 = *(_QWORD *)(v26 + 304);
    v42 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    a15 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v42 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v40, &a15);
    *(_QWORD *)(v26 + 296) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    if (v67)
      v44 = v68;
    else
      v44 = 7104878;
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_76_2(v44, v45, &a15);
    *(_QWORD *)(v26 + 272) = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_17_2(&dword_24315F000, v38, (os_log_type_t)v38, "OmniSearchService.search running with query: %s, rewrittenQuery: %s", (uint8_t *)v42);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  v48 = *(_QWORD *)(v26 + 320);
  v47 = *(void **)(v26 + 328);
  v50 = *(_QWORD *)(v26 + 304);
  v49 = *(void **)(v26 + 312);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_64();
  v51._countAndFlagsBits = v50;
  v51._object = v49;
  v52.value._countAndFlagsBits = v48;
  v52.value._object = v47;
  *(OmniSearch::UserQuery *)(v26 + 528) = UserQuery.init(raw:rewritten:)(v51, v52);
  if ((v29 & 1) != 0)
  {
    v55 = (char *)(v26 + 760);
    v56 = *(_QWORD *)(v26 + 496);
  }
  else
  {
    outlined init with copy of Date?(*(_QWORD *)(v26 + 336) + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_requestRouter, v26 + 160, &demangling cache variable for type metadata for RequestRouting?);
    if (*(_QWORD *)(v26 + 184))
    {
      OUTLINED_FUNCTION_107_2((_QWORD *)(v26 + 160));
      v53 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v26 + 560) = v53;
      *v53 = v26;
      v53[1] = OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:);
      OUTLINED_FUNCTION_27_3();
      return RequestRouting.guessLogged(for:)();
    }
    v55 = (char *)(v26 + 616);
    outlined destroy of MobileSMSDocument?(v26 + 160, &demangling cache variable for type metadata for RequestRouting?);
    if (one-time initialization token for all != -1)
      swift_once();
    v56 = *(_QWORD *)(v26 + 496) & static SearchSources.all;
  }
  v57 = *v55;
  *(_BYTE *)(v26 + 761) = (v29 & 1) == 0;
  v58 = *(_BYTE *)(v26 + 617);
  *(_QWORD *)(v26 + 280) = v56;
  *(_BYTE *)(v26 + 16) = v58;
  *(_BYTE *)(v26 + 17) = v57;
  OUTLINED_FUNCTION_82_4((void *)(v26 + 18), (const void *)(v26 + 618));
  v59 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v26 + 568) = v59;
  OUTLINED_FUNCTION_22_4(v59, (uint64_t)OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:));
  OUTLINED_FUNCTION_27_3();
  return OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(v60, v61, v62, v63, v64, v65, v66);
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_1();
  swift_task_dealloc();
  if (v0)
    OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_BYTE *)(v0 + 248);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  OUTLINED_FUNCTION_121();
  v3 = *(_QWORD *)(v0 + 496) & v1;
  v4 = *(_BYTE *)(v0 + 616);
  *(_BYTE *)(v0 + 761) = v2;
  v5 = *(_BYTE *)(v0 + 617);
  *(_QWORD *)(v0 + 280) = v3;
  *(_BYTE *)(v0 + 16) = v5;
  *(_BYTE *)(v0 + 17) = v4;
  OUTLINED_FUNCTION_82_4((void *)(v0 + 18), (const void *)(v0 + 618));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 568) = v6;
  v7 = OUTLINED_FUNCTION_30_5(v6, (uint64_t)OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:));
  return OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(v7, v8, v9, v10, v11, 0, (const void *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_47_3();
  *v4 = *v3;
  *(_QWORD *)(v2 + 576) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
  }
  else
  {
    *(_QWORD *)(v2 + 584) = v0;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  const char *v3;
  uint8_t *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_94_2();
  v1 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_49_4();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 392);
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_53_5(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88)) == *MEMORY[0x24BEE7810])
    {
      v3 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 392));
      v3 = "";
    }
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v4);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v1, v5, v6, "OmniSearchService.search", v3, v4);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v7 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  v8 = *(_QWORD *)(v0 + 472);
  v9 = *(_QWORD *)(v0 + 432);

  v7(v8, v9);
  v11 = *(_QWORD *)(v0 + 608);
  swift_release();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  return OUTLINED_FUNCTION_16_12(v11, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  const void *v11;

  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  if (one-time initialization token for all != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 496) & static SearchSources.all;
  v2 = *(_BYTE *)(v0 + 616);
  *(_BYTE *)(v0 + 761) = 1;
  v3 = *(_BYTE *)(v0 + 617);
  *(_QWORD *)(v0 + 280) = v1;
  *(_BYTE *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 17) = v2;
  OUTLINED_FUNCTION_82_4((void *)(v0 + 18), (const void *)(v0 + 618));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 568) = v4;
  v5 = OUTLINED_FUNCTION_22_4(v4, (uint64_t)OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:));
  return OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(v5, v6, v7, v8, v9, v10, v11);
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_signpost_type_t v50;
  uint64_t v51;
  const char *v52;
  NSObject *v53;
  os_signpost_type_t v54;
  uint64_t v55;
  const char *v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  os_signpost_id_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_60();
  v19 = *(uint64_t **)(v18 + 336);
  *(_QWORD *)(v18 + 288) = *(_QWORD *)(v18 + 584);
  OUTLINED_FUNCTION_123_1(*v19);
  v20 = *(uint64_t *)((char *)v19 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker + 24);
  v21 = *(uint64_t *)((char *)v19 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker + 32);
  OUTLINED_FUNCTION_93_2((uint64_t *)((char *)v19 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker));
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8);
  v23 = swift_bridgeObjectRetain();
  v24 = v22(v23, v20, v21);
  *(_QWORD *)(v18 + 592) = v24;
  OUTLINED_FUNCTION_121();
  *(_QWORD *)(v18 + 224) = &type metadata for FeatureFlag;
  v25 = lazy protocol witness table accessor for type FeatureFlag and conformance FeatureFlag();
  *(_BYTE *)(v18 + 200) = 1;
  *(_QWORD *)(v18 + 232) = v25;
  LOBYTE(v21) = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1(v18 + 200);
  if ((v21 & 1) != 0)
  {
    v26 = *(unsigned __int8 *)(v18 + 761);
    OUTLINED_FUNCTION_121();
    if (v26 == 1)
    {
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v18 + 600) = v27;
      OUTLINED_FUNCTION_30_5(v27, (uint64_t)OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:));
      OUTLINED_FUNCTION_27_3();
      return OmniSearchService.composeAnswer(query:results:)(v28, v29, v30, v31, v32);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_121();
    v49 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_63_5();
    v50 = static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_96_2() & 1) != 0)
    {
      v51 = *(_QWORD *)(v18 + 392);
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_109_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 88)) == *MEMORY[0x24BEE7810])
      {
        v52 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v18 + 392));
        v52 = "";
      }
      v62 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v63 = OUTLINED_FUNCTION_55_1(v62);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v49, v50, v63, "OmniSearchService.search", v52, v62);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v64 = *(void (**)(uint64_t, uint64_t))(v18 + 520);
    v65 = *(_QWORD *)(v18 + 464);
    v66 = *(_QWORD *)(v18 + 432);

    v64(v65, v66);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    a15 = MEMORY[0x24BEE4AF8];
    v34 = *(_QWORD *)(v24 + 16);
    if (v34)
    {
      v35 = 0;
      v36 = *(_QWORD *)(v18 + 360);
      v79 = MEMORY[0x24BEE4AF8];
      do
      {
        if (v35 >= *(_QWORD *)(v24 + 16))
        {
          __break(1u);
          JUMPOUT(0x2431D5EF4);
        }
        v37 = *(_QWORD *)(v18 + 376);
        v38 = *(_QWORD *)(v18 + 352);
        v39 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        v40 = *(_QWORD *)(v36 + 72);
        _s10OmniSearch0B6ResultVWOcTm_1(v24 + v39 + v40 * v35, v37, type metadata accessor for SearchResult);
        _s10OmniSearch0B6ResultVWOcTm_1(v37, v38, type metadata accessor for SearchResultItem);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 9u:
            v41 = *(_QWORD *)(v18 + 352);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
            swift_bridgeObjectRelease();
            v42 = v41;
            v43 = type metadata accessor for FlightReservation;
            goto LABEL_17;
          case 0xAu:
            v42 = *(_QWORD *)(v18 + 352);
            v43 = type metadata accessor for HotelReservation;
            goto LABEL_17;
          case 0xBu:
            v42 = *(_QWORD *)(v18 + 352);
            v43 = type metadata accessor for RestaurantReservation;
            goto LABEL_17;
          case 0xFu:
            v42 = *(_QWORD *)(v18 + 352);
            v43 = type metadata accessor for Answer;
LABEL_17:
            _s10OmniSearch0B6ResultVWOhTm_1(v42, v43);
            _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v18 + 376), type metadata accessor for SearchResult);
            break;
          default:
            v45 = *(_QWORD *)(v18 + 368);
            v44 = *(_QWORD *)(v18 + 376);
            _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v18 + 352), type metadata accessor for SearchResultItem);
            outlined init with take of SearchResult(v44, v45);
            v46 = v79;
            if ((OUTLINED_FUNCTION_114_2() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v46 = a15;
            }
            v47 = *(_QWORD *)(v46 + 16);
            if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v46 = a15;
            }
            v48 = *(_QWORD *)(v18 + 368);
            *(_QWORD *)(v46 + 16) = v47 + 1;
            v79 = v46;
            outlined init with take of SearchResult(v48, v46 + v39 + v47 * v40);
            break;
        }
        ++v35;
      }
      while (v34 != v35);
    }
    OUTLINED_FUNCTION_6_1();
    swift_bridgeObjectRelease();
    v53 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_63_5();
    v54 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v55 = *(_QWORD *)(v18 + 392);
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_109_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88)) == *MEMORY[0x24BEE7810])
      {
        v56 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v18 + 392));
        v56 = "";
      }
      v57 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v58 = OUTLINED_FUNCTION_55_1(v57);
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v53, v54, v58, "OmniSearchService.search", v56, v57);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v59 = *(void (**)(uint64_t, uint64_t))(v18 + 520);
    v60 = *(_QWORD *)(v18 + 456);
    v61 = *(_QWORD *)(v18 + 432);

    v59(v60, v61);
  }
  v75 = *(_QWORD *)(v18 + 408);
  v76 = *(_QWORD *)(v18 + 400);
  v77 = *(_QWORD *)(v18 + 376);
  v78 = *(_QWORD *)(v18 + 368);
  v80 = *(_QWORD *)(v18 + 352);
  swift_release();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90_4();
  OUTLINED_FUNCTION_27_3();
  return v68(v67, v68, v69, v70, v71, v72, v73, v74, a9, v75, v76, v77, v78, v80, a15, a16, a17, a18);
}

{
  _QWORD *v18;
  NSObject *v19;
  uint64_t v20;
  const char *v21;
  uint8_t *v22;
  os_signpost_type_t v23;
  os_signpost_id_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_60();
  v19 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_49_4();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_99_2() & 1) != 0)
  {
    v20 = v18[49];
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_53_5(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88)) == *MEMORY[0x24BEE7810])
    {
      v21 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(v18[49]);
      v21 = "";
    }
    v22 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v22);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v19, v23, v24, "OmniSearchService.search", v21, v22);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v25 = (void (*)(uint64_t, uint64_t))v18[65];
  v26 = v18[56];
  v27 = v18[54];
  v37 = v18[53];
  v38 = v18[52];
  v39 = v18[51];
  v40 = v18[50];
  v41 = v18[47];
  v42 = v18[46];
  v43 = v18[44];

  v25(v26, v27);
  swift_release();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_3();
  return v28(v28, v29, v30, v31, v32, v33, v34, v35, v37, v38, v39, v40, v41, v42, v43, a16, a17, a18);
}

uint64_t OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 608) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

uint64_t OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[65] = v5;
  v6[63] = a4;
  v6[64] = a5;
  v6[61] = a2;
  v6[62] = a3;
  v6[60] = a1;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:)()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String_optional v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  os_log_type_t type;
  uint64_t typea;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v47[2];
  OmniSearch::UserQuery v48;

  if (one-time initialization token for search != -1)
    swift_once();
  v1 = v0[63];
  v2 = v0[61];
  v3 = OUTLINED_FUNCTION_13();
  v4 = __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  v5 = v4;
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_106_3();
  if (OUTLINED_FUNCTION_31(v6))
  {
    v40 = v0[63];
    v41 = v0[62];
    v7 = v0[60];
    v8 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v47[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v8 = 136315650;
    type = v2;
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_76_2(v7, v9, v47);
    v0[57] = v10;
    OUTLINED_FUNCTION_54_7();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    if (v40)
      v11 = v41;
    else
      v11 = 0;
    if (v40)
      v12 = v1;
    else
      v12 = 0xE000000000000000;
    OUTLINED_FUNCTION_64();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v47);
    v0[58] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_102_0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2080;
    type metadata accessor for TypeIdentifier();
    lazy protocol witness table accessor for type TypeIdentifier and conformance TypeIdentifier();
    swift_bridgeObjectRetain();
    v14 = Set.description.getter();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_76_2(v14, v15, v47);
    v0[59] = v16;
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_118_0();
    _os_log_impl(&dword_24315F000, v5, type, "entity search running with query: %s, rewrittenQuery: %s and types: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  v17 = (void *)v0[63];
  v18 = v0[64];
  v20 = (void *)v0[61];
  v19 = v0[62];
  v21 = v0[60];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_64();
  v22._countAndFlagsBits = v21;
  v22._object = v20;
  v23.value._countAndFlagsBits = v19;
  v23.value._object = v17;
  v48 = UserQuery.init(raw:rewritten:)(v22, v23);
  object = v48.raw._object;
  countAndFlagsBits = v48.raw._countAndFlagsBits;
  v42 = v48.rewritten._object;
  typea = v48.rewritten._countAndFlagsBits;
  v0[66] = v48.raw._object;
  v0[67] = v48.rewritten._object;
  specialized Sequence.compactMap<A>(_:)(v18);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = (uint64_t *)(v24 + 32);
    v27 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v28 = *v26;
      v29 = *(_QWORD *)(*v26 + 16);
      v30 = *(_QWORD *)(v27 + 16);
      if (__OFADD__(v30, v29))
        break;
      OUTLINED_FUNCTION_116_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > *(_QWORD *)(v27 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v27 = v31;
      }
      if (*(_QWORD *)(v28 + 16))
      {
        v32 = *(_QWORD *)(v27 + 16);
        if ((*(_QWORD *)(v27 + 24) >> 1) - v32 < v29)
          goto LABEL_34;
        v33 = v27 + 32 * v32 + 32;
        if (v28 + 32 < v33 + 32 * v29 && v33 < v28 + 32 + 32 * v29)
          return _fatalErrorMessage(_:_:file:line:flags:)();
        swift_arrayInitWithCopy();
        if (v29)
        {
          v35 = *(_QWORD *)(v27 + 16);
          v36 = __OFADD__(v35, v29);
          v37 = v35 + v29;
          if (v36)
            goto LABEL_35;
          *(_QWORD *)(v27 + 16) = v37;
        }
      }
      else if (v29)
      {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_26_0();
      ++v26;
      if (!--v25)
        goto LABEL_31;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return _fatalErrorMessage(_:_:file:line:flags:)();
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
LABEL_31:
    v0[68] = v27;
    swift_bridgeObjectRelease();
    v0[56] = 4;
    _s10OmniSearch0B7ContextVSgWOi0_(v0 + 38);
    *((_WORD *)v0 + 8) = 0;
    OUTLINED_FUNCTION_125_0();
    OUTLINED_FUNCTION_42_6(v0 + 20, v0 + 2);
    v38 = (_QWORD *)swift_task_alloc();
    v0[69] = v38;
    *v38 = v0;
    v38[1] = OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:);
    return OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(countAndFlagsBits, (uint64_t)object, typea, (uint64_t)v42, v0 + 56, v27, v0 + 20);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t **)(v0 + 520);
  *(_QWORD *)(v0 + 440) = *(_QWORD *)(v0 + 568);
  OUTLINED_FUNCTION_123_1(*v1);
  v2 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker + 24);
  v3 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker + 32);
  OUTLINED_FUNCTION_93_2((uint64_t *)((char *)v1 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchResultRanker));
  v4 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 8))(*(_QWORD *)(v0 + 440), v2, v3);
  OUTLINED_FUNCTION_56_0();
  return OUTLINED_FUNCTION_6_10(v4, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 560) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_36_0();
  }
  else
  {
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_36_0();
    *(_QWORD *)(v4 + 568) = a1;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

Swift::Void __swiftcall OmniSearchService.trimResultsBySource(sourceResults:)(Swift::OpaquePointer *sourceResults)
{
  _QWORD *rawValue;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _BOOL8 v24;
  Swift::Int v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;

  rawValue = sourceResults->_rawValue;
  v36 = (char *)sourceResults->_rawValue + 64;
  v3 = 1 << *((_BYTE *)sourceResults->_rawValue + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *((_QWORD *)sourceResults->_rawValue + 8);
  v38 = OBJC_IVAR____TtC10OmniSearch17OmniSearchService_maxPerSourceLimit;
  v37 = (unint64_t)(v3 + 63) >> 6;
  OUTLINED_FUNCTION_64();
  v6 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v7 | (v6 << 6); ; i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    v12 = *(_QWORD *)(v39 + v38);
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v40 = v6;
    v13 = *(_QWORD *)(rawValue[7] + 8 * i);
    if (v12)
    {
      if (*(_QWORD *)(v13 + 16) >= v12)
        v14 = *(_QWORD *)(v39 + v38);
      else
        v14 = *(_QWORD *)(v13 + 16);
    }
    else
    {
      v14 = 0;
    }
    v15 = *(_BYTE *)(rawValue[6] + i);
    type metadata accessor for __ContiguousArrayStorageBase();
    OUTLINED_FUNCTION_4_7();
    swift_unknownObjectRetain_n();
    v16 = swift_dynamicCastClass();
    if (!v16)
    {
      OUTLINED_FUNCTION_36_0();
      v16 = MEMORY[0x24BEE4AF8];
    }
    v17 = *(_QWORD *)(v16 + 16);
    swift_release();
    if (v17 == v14)
    {
      v18 = swift_dynamicCastClass();
      if (!v18)
      {
        OUTLINED_FUNCTION_36_0();
        v18 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      OUTLINED_FUNCTION_36_0();
      v34 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchResult(0) - 8) + 80);
      specialized _copyCollectionToContiguousArray<A>(_:)(v13, v13 + ((v34 + 32) & ~v34), 0, (2 * v14) | 1);
      v18 = v35;
    }
    OUTLINED_FUNCTION_36_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sourceResults->_rawValue;
    v41 = sourceResults->_rawValue;
    sourceResults->_rawValue = (void *)0x8000000000000000;
    v21 = OUTLINED_FUNCTION_73_4();
    v23 = v20[2];
    v24 = (v22 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_43;
    v26 = v21;
    v27 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SearchType, [SearchResult]>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v25))
    {
      v28 = OUTLINED_FUNCTION_73_4();
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_47;
      v26 = v28;
    }
    if ((v27 & 1) != 0)
    {
      v30 = v41[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v30 + 8 * v26) = v18;
    }
    else
    {
      v41[(v26 >> 6) + 8] |= 1 << v26;
      *(_BYTE *)(v41[6] + v26) = v15;
      *(_QWORD *)(v41[7] + 8 * v26) = v18;
      v31 = v41[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_44;
      v41[2] = v33;
    }
    sourceResults->_rawValue = v41;
    swift_bridgeObjectRelease();
    v6 = v40;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_45;
    if (v9 >= v37)
      goto LABEL_41;
    v10 = *(_QWORD *)&v36[8 * v9];
    ++v6;
    if (!v10)
    {
      v6 = v9 + 1;
      if (v9 + 1 >= v37)
        goto LABEL_41;
      v10 = *(_QWORD *)&v36[8 * v6];
      if (!v10)
      {
        v6 = v9 + 2;
        if (v9 + 2 >= v37)
          goto LABEL_41;
        v10 = *(_QWORD *)&v36[8 * v6];
        if (!v10)
          break;
      }
    }
LABEL_18:
    v5 = (v10 - 1) & v10;
  }
  v11 = v9 + 3;
  if (v11 >= v37)
  {
LABEL_41:
    swift_release();
    return;
  }
  v10 = *(_QWORD *)&v36[8 * v11];
  if (v10)
  {
    v6 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v37)
      goto LABEL_41;
    v10 = *(_QWORD *)&v36[8 * v6];
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t OmniSearchService.composeAnswer(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  type metadata accessor for AnswerComposerResult();
  v6[11] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t OmniSearchService.composeAnswer(query:results:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[10] + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_answerComposer);
  v2 = v1[3];
  v3 = v1[4];
  OUTLINED_FUNCTION_93_2(v1);
  v4 = (_QWORD *)OUTLINED_FUNCTION_6();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = OmniSearchService.composeAnswer(query:results:);
  return v6(v0[11], v0[5], v0[6], v0[7], v0[8], v0[9], v2, v3);
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_101_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

void OmniSearchService.composeAnswer(query:results:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[11];
  v2 = AnswerComposerResult.results.getter();
  _s10OmniSearch0B6ResultVWOhTm_1(v1, (uint64_t (*)(_QWORD))type metadata accessor for AnswerComposerResult);
  if (one-time initialization token for fedSearch != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_13();
  v4 = __swift_project_value_buffer(v3, (uint64_t)static Logging.fedSearch);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_4_7();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.debug.getter();
  v7 = OUTLINED_FUNCTION_31(v6);
  v8 = v0[9];
  if (v7)
  {
    v9 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v9 = 134218240;
    v0[3] = *(_QWORD *)(v2 + 16);
    OUTLINED_FUNCTION_97_3();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_6_1();
    *(_WORD *)(v9 + 12) = 2048;
    v0[4] = *(_QWORD *)(v8 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_17_2(&dword_24315F000, v5, v4, "Return %ld answers from %ld ranked results", (uint8_t *)v9);
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_56_0();

  swift_task_dealloc();
  OUTLINED_FUNCTION_90_4();
  OUTLINED_FUNCTION_46_3();
  __asm { BR              X1 }
}

{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  if (one-time initialization token for search != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  v5 = OUTLINED_FUNCTION_31(v4);
  v6 = *(void **)(v1 + 104);
  if (v5)
  {
    v7 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v8 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 16) = v10;
    OUTLINED_FUNCTION_35();
    *v8 = v10;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v3, v0, "Answer composition failed with error: %@", v7);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10();

  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  __asm { BR              X1 }
}

uint64_t static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 96) = a7;
  *(_QWORD *)(v8 + 104) = a8;
  *(_QWORD *)(v8 + 80) = a5;
  *(_QWORD *)(v8 + 88) = a6;
  *(_BYTE *)(v8 + 152) = a4;
  *(_QWORD *)(v8 + 64) = a2;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 56) = a1;
  v9 = type metadata accessor for MemoryCreationQUParseSortOrder();
  *(_QWORD *)(v8 + 112) = v9;
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 128) = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

void static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)()
{
  _QWORD *v0;
  char v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  Class isa;
  uint64_t v15;
  id v16;
  _QWORD *v18;

  v0[5] = &type metadata for PhotosFeatureFlag;
  v0[6] = lazy protocol witness table accessor for type PhotosFeatureFlag and conformance PhotosFeatureFlag();
  v1 = isFeatureEnabled(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if ((v1 & 1) != 0)
  {
    if (v0[11])
    {
      if (one-time initialization token for shared != -1)
        swift_once();
      v2 = (_QWORD *)OUTLINED_FUNCTION_6();
      v0[17] = v2;
      *v2 = v0;
      v2[1] = static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:);
      OUTLINED_FUNCTION_46_3();
      __asm { BR              X4 }
    }
    if (one-time initialization token for shared != -1)
      swift_once();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_64();
    v18 = (_QWORD *)swift_task_alloc();
    v0[18] = v18;
    *v18 = v0;
    v18[1] = static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:);
    OUTLINED_FUNCTION_46_3();
    __asm { BR              X6 }
  }
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_13();
  v5 = __swift_project_value_buffer(v4, (uint64_t)static Logging.memoryCreationQU);
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_106_3();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_24315F000, v5, v6, "Photos/MemoryCreation feature flag not enabled, skipping LLM QU call", v7, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v9 = v0[15];
  v8 = v0[16];
  v10 = v0[14];
  v12 = v0[7];
  v11 = (void *)v0[8];

  type metadata accessor for NSAttributedString();
  OUTLINED_FUNCTION_23_0();
  v13._countAndFlagsBits = v12;
  v13._object = v11;
  isa = NSAttributedString.__allocating_init(string:)(v13).super.isa;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x24BE6E370], v10);
  type metadata accessor for MemoryCreationQUParse();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_23_0();
  v15 = MemoryCreationQUParse.init(query:attributes:isTrip:isOpenEndedTimeRange:sortOrder:)();
  v16 = objc_allocWithZone((Class)type metadata accessor for LLMQUParse());
  LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)((uint64_t)isa, v15, 0, 0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_3();
  __asm { BR              X1 }
}

uint64_t static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_23_8(v3);
  v4 = swift_task_dealloc();
  if (!v1)
    v4 = v0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_23_8(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = swift_task_dealloc();
  if (!v1)
    v4 = v0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

NSAttributedString __swiftcall NSAttributedString.__allocating_init(string:)(Swift::String string)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;

  object = string._object;
  countAndFlagsBits = string._countAndFlagsBits;
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)MEMORY[0x2494F5BB8](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithString_, v4);

  return (NSAttributedString)v5;
}

uint64_t OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, const void *a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[26] = a6;
  v8[27] = v7;
  v8[24] = a3;
  v8[25] = a4;
  v8[22] = a1;
  v8[23] = a2;
  v8[28] = *a5;
  OUTLINED_FUNCTION_42_6(v8 + 2, a7);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16[2];

  if (one-time initialization token for all != -1)
    swift_once();
  if (*(_QWORD *)(v0 + 224) != static SearchSources.all)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v1 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v1, (uint64_t)static Logging.search);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(_QWORD *)(v0 + 224);
      v5 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v16[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v16[1] = v4;
      *(_DWORD *)v5 = 136315138;
      SearchSources.debugDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, v16);
      *(_QWORD *)(v0 + 168) = v8;
      OUTLINED_FUNCTION_35();
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v2, v3, "Searching with limited sources: %s", v5);
      OUTLINED_FUNCTION_34_2();
      specialized UnsafeMutablePointer.deallocate()();
    }

  }
  v9 = *(_QWORD *)(v0 + 208);
  v14 = *(_OWORD *)(v0 + 192);
  v15 = *(_OWORD *)(v0 + 216);
  v13 = *(_OWORD *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchType, [SearchResult]));
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v10;
  *(_OWORD *)(v10 + 16) = v15;
  *(_OWORD *)(v10 + 32) = v13;
  *(_OWORD *)(v10 + 48) = v14;
  *(_QWORD *)(v10 + 64) = v9;
  *(_QWORD *)(v10 + 72) = v0 + 16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchType : [SearchResult]]);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v11;
  *v11 = v0;
  v11[1] = OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_36_5();
  *v3 = *v2;
  *(_QWORD *)(v0 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160));
}

{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v8[36] = v13;
  v8[37] = v14;
  v8[34] = a7;
  v8[35] = a8;
  v8[32] = a5;
  v8[33] = a6;
  v8[30] = a3;
  v8[31] = a4;
  v8[28] = a1;
  v8[29] = a2;
  v9 = type metadata accessor for OSSignpostError();
  v8[38] = v9;
  v8[39] = *(_QWORD *)(v9 - 8);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v8[42] = swift_task_alloc();
  v8[43] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ThrowingTaskGroup<(SearchType, [SearchResult]), Error>.Iterator);
  v8[44] = v10;
  v8[45] = *(_QWORD *)(v10 - 8);
  v8[46] = swift_task_alloc();
  v11 = type metadata accessor for OSSignpostID();
  v8[47] = v11;
  v8[48] = *(_QWORD *)(v11 - 8);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_78_5();
  *(_QWORD *)(v0 + 424) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if ((OUTLINED_FUNCTION_89_0() & 1) != 0)
  {
    v3 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v3);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v4, v5, "OmniSearchService.federateSearch", "", v3);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 240);

  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v0 + 432) = OUTLINED_FUNCTION_73_2();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 440) = v8;
  OUTLINED_FUNCTION_105_2(v8);
  v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC10OmniSearch17OmniSearchService_searchServices);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (_QWORD *)(v0 + 16);
    v41 = (__int128 *)(v0 + 96);
    v12 = v9 + 32;
    swift_bridgeObjectRetain();
    do
    {
      v13 = *(_QWORD *)(v0 + 248);
      outlined init with copy of SearchResultRanking(v12, (uint64_t)v11);
      v14 = *(_QWORD *)(v0 + 40);
      v15 = *(_QWORD *)(v0 + 48);
      OUTLINED_FUNCTION_93_2(v11);
      v48 = v13;
      if (((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 40))(&v48, v14, v15) & 1) != 0)
      {
        v47 = v12;
        v16 = *(_QWORD *)(v0 + 344);
        v45 = *(const void **)(v0 + 296);
        v46 = *(_QWORD *)(v0 + 336);
        v17 = *(_QWORD *)(v0 + 280);
        v18 = *(_QWORD *)(v0 + 264);
        v42 = *(_QWORD *)(v0 + 272);
        v19 = *(_QWORD *)(v0 + 256);
        v43 = *(_QWORD *)(v0 + 248);
        v44 = *(_QWORD *)(v0 + 288);
        v20 = *(void **)(v0 + 240);
        v21 = type metadata accessor for TaskPriority();
        __swift_storeEnumTagSinglePayload(v16, 1, 1, v21);
        outlined init with copy of SearchResultRanking((uint64_t)v11, (uint64_t)v41);
        v22 = (_QWORD *)OUTLINED_FUNCTION_8();
        v22[2] = 0;
        v22[3] = 0;
        v22[4] = v20;
        v22[5] = v19;
        v22[6] = v18;
        v22[7] = v42;
        v22[8] = v17;
        outlined init with take of SageSearchClient(v41, (uint64_t)(v22 + 9));
        v22[14] = v43;
        v22[15] = v44;
        OUTLINED_FUNCTION_42_6(v22 + 16, v45);
        outlined init with copy of Date?(v16, v46, &demangling cache variable for type metadata for TaskPriority?);
        LODWORD(v16) = __swift_getEnumTagSinglePayload(v46, 1, v21);
        v23 = v20;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_117();
        swift_bridgeObjectRetain();
        outlined retain of OmniSearchOptions((uint64_t)v45);
        v24 = *(_QWORD *)(v0 + 336);
        if ((_DWORD)v16 == 1)
        {
          outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 336), &demangling cache variable for type metadata for TaskPriority?);
        }
        else
        {
          TaskPriority.rawValue.getter();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v24, v21);
        }
        if (v22[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v32 = dispatch thunk of Actor.unownedExecutor.getter();
          v34 = v33;
          swift_unknownObjectRelease();
        }
        else
        {
          v32 = 0;
          v34 = 0;
        }
        v12 = v47;
        v35 = **(_QWORD **)(v0 + 232);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchType, [SearchResult]));
        v36 = v34 | v32;
        if (v34 | v32)
        {
          v36 = v0 + 136;
          *(_QWORD *)(v0 + 136) = 0;
          *(_QWORD *)(v0 + 144) = 0;
          *(_QWORD *)(v0 + 152) = v32;
          *(_QWORD *)(v0 + 160) = v34;
        }
        v37 = *(_QWORD *)(v0 + 344);
        *(_QWORD *)(v0 + 168) = 1;
        *(_QWORD *)(v0 + 176) = v36;
        *(_QWORD *)(v0 + 184) = v35;
        swift_task_create();
        swift_release();
        outlined destroy of MobileSMSDocument?(v37, &demangling cache variable for type metadata for TaskPriority?);
      }
      else
      {
        if (one-time initialization token for search != -1)
          swift_once();
        v25 = OUTLINED_FUNCTION_13();
        __swift_project_value_buffer(v25, (uint64_t)static Logging.search);
        OUTLINED_FUNCTION_108_2((uint64_t)v11);
        v26 = Logger.logObject.getter();
        v27 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v48 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          *(_DWORD *)v28 = 136315138;
          v29 = OUTLINED_FUNCTION_13_9((_QWORD *)(v0 + 56));
          if (v29)
          {
            if (v29 == 1)
              v30 = OUTLINED_FUNCTION_21_6();
            else
              v30 = OUTLINED_FUNCTION_9_10();
          }
          else
          {
            v30 = OUTLINED_FUNCTION_8_8();
          }
          OUTLINED_FUNCTION_67_5(v30, v31, &v48);
          *(_QWORD *)(v28 + 4) = v38;
          OUTLINED_FUNCTION_36_0();
          OUTLINED_FUNCTION_31_7();
          OUTLINED_FUNCTION_29_2(&dword_24315F000, v26, v27, "Skipping %s search - no supported sources", (uint8_t *)v28);
          swift_arrayDestroy();
          specialized UnsafeMutablePointer.deallocate()();
        }
        OUTLINED_FUNCTION_31_7();

      }
      v11 = (_QWORD *)(v0 + 16);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      v12 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchType, [SearchResult]));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  ThrowingTaskGroup.makeAsyncIterator()();
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 448) = v39;
  *v39 = v0;
  v39[1] = closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:);
  OUTLINED_FUNCTION_101_2();
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_23_8(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 456) = MEMORY[0x24BEE4B00];
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  _BOOL8 v8;
  Swift::Int v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  const char *v18;
  _QWORD *v19;
  uint64_t (*v20)();
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint8_t *v26;
  os_signpost_type_t v27;
  os_signpost_id_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v2 = v0[24];
  v1 = v0[25];
  if (!v1)
  {
    v13 = v0[57];
    v14 = (_QWORD *)v0[28];
    OUTLINED_FUNCTION_40(v0[45]);
    v15 = OUTLINED_FUNCTION_64();
    static EvalLogging.logFederateSearch(resultsPerSource:)(v15);
    OUTLINED_FUNCTION_6_1();
    *v14 = v13;
    v16 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_49_4();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_99_2() & 1) != 0)
    {
      v17 = v0[39];
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_85_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_53_5(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88)) == *MEMORY[0x24BEE7810])
      {
        v18 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(v0[39]);
        v18 = "";
      }
      v26 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_55_1(v26);
      OUTLINED_FUNCTION_35_2();
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v16, v27, v28, "OmniSearchService.federateSearch", v18, v26);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v29 = (void (*)(uint64_t, uint64_t))v0[55];
    v30 = v0[50];
    v31 = v0[47];

    v29(v30, v31);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_102_3();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_20_7();
    __asm { BR              X0 }
  }
  if (!*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_56_0();
    v19 = (_QWORD *)swift_task_alloc();
    v0[58] = v19;
    v20 = closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:);
LABEL_17:
    *v19 = v0;
    v19[1] = v20;
    OUTLINED_FUNCTION_101_2();
    OUTLINED_FUNCTION_20_7();
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF();
  }
  v3 = v0[57];
  v4 = OUTLINED_FUNCTION_114_2();
  v0[27] = v3;
  result = OUTLINED_FUNCTION_73_4();
  v7 = *(_QWORD *)(v3 + 16);
  v8 = (v6 & 1) == 0;
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
    __break(1u);
  }
  else
  {
    v10 = result;
    v11 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SearchType, [SearchResult]>);
    result = _NativeDictionary.ensureUnique(isUnique:capacity:)(v4, v9);
    if ((result & 1) != 0)
    {
      result = OUTLINED_FUNCTION_73_4();
      if ((v11 & 1) != (v12 & 1))
      {
        OUTLINED_FUNCTION_20_7();
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      v10 = result;
    }
    v21 = (_QWORD *)v0[27];
    v0[59] = v21;
    if ((v11 & 1) != 0)
    {
      v22 = v21[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v10) = v1;
LABEL_16:
      swift_bridgeObjectRelease();
      v19 = (_QWORD *)swift_task_alloc();
      v0[60] = v19;
      v20 = closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:);
      goto LABEL_17;
    }
    v21[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v21[6] + v10) = v2;
    *(_QWORD *)(v21[7] + 8 * v10) = v1;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v21[2] = v25;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_23_8(v1);
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_23_8(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 456) = *(_QWORD *)(v0 + 472);
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_2_10();
}

{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  const char *v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  NSObject *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_94_2();
  OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 360));
  v1 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_63_5();
  v2 = static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_96_2() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 312);
    OUTLINED_FUNCTION_75();
    OUTLINED_FUNCTION_109_2();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88)) == *MEMORY[0x24BEE7810])
    {
      v4 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 312));
      v4 = "";
    }
    v5 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v6 = OUTLINED_FUNCTION_55_1(v5);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v1, v2, v6, "OmniSearchService.federateSearch", v4, v5);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v7 = v1;
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v9 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 376);

  v8(v9, v10);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;

  v8[37] = a4;
  v8[38] = v16;
  v8[36] = a1;
  v12 = type metadata accessor for SearchResultType();
  v8[39] = v12;
  v8[40] = *(_QWORD *)(v12 - 8);
  v8[41] = swift_task_alloc();
  v8[42] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v8[43] = swift_task_alloc();
  v8[30] = v17;
  memcpy(v8 + 2, v19, 0x90uLL);
  v13 = (_QWORD *)swift_task_alloc();
  v8[44] = (uint64_t)v13;
  *v13 = v8;
  v13[1] = closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:);
  return OmniSearchService.searchItems(query:searchService:searchSources:allowedTypes:searchOptions:)(a5, a6, a7, a8, v16, v8 + 30, v18, (uint64_t)(v8 + 2));
}

uint64_t closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 360) = a1;
  *(_QWORD *)(v3 + 368) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  _QWORD *v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  unsigned __int8 (*v47)(uint64_t);
  int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  if (one-time initialization token for search != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 304);
  v2 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.search);
  outlined init with copy of SearchResultRanking(v1, v0 + 200);
  OUTLINED_FUNCTION_4_7();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.info.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 360);
  v59 = v0;
  if (v5)
  {
    v7 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v60 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v7 = 134218242;
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v6 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_36_0();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 200), v9);
    v10 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
    if (v10)
    {
      if (v10 == 1)
        v11 = OUTLINED_FUNCTION_65_5();
      else
        v11 = OUTLINED_FUNCTION_9_10();
    }
    else
    {
      v11 = OUTLINED_FUNCTION_8_8();
    }
    OUTLINED_FUNCTION_67_5(v11, v12, &v60);
    *(_QWORD *)(v0 + 280) = v13;
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_36_0();
    __swift_destroy_boxed_opaque_existential_1(v0 + 200);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_36_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);

  outlined init with copy of SearchResultRanking(*(_QWORD *)(v0 + 304), v0 + 160);
  OUTLINED_FUNCTION_104_0();
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v17 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v62 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v17 = 136315394;
    v18 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 192);
    OUTLINED_FUNCTION_107_2((_QWORD *)(v0 + 160));
    v20 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    if (v20)
    {
      if (v20 == 1)
        v21 = OUTLINED_FUNCTION_65_5();
      else
        v21 = OUTLINED_FUNCTION_9_10();
    }
    else
    {
      v21 = OUTLINED_FUNCTION_8_8();
    }
    v23 = *(_QWORD *)(v0 + 360);
    OUTLINED_FUNCTION_67_5(v21, v22, &v62);
    *(_QWORD *)(v0 + 256) = v24;
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_36_0();
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    *(_WORD *)(v17 + 12) = 2080;
    v25 = *(_QWORD *)(v23 + 16);
    v26 = MEMORY[0x24BEE4AF8];
    if (v25)
    {
      v56 = v15;
      v57 = v14;
      v27 = *(_QWORD *)(v0 + 360);
      v28 = *(_QWORD *)(v0 + 336);
      v60 = MEMORY[0x24BEE4AF8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v29 = v27 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v58 = *(_QWORD *)(v28 + 72);
      do
      {
        v30 = *(_QWORD *)(v0 + 344);
        _s10OmniSearch0B6ResultVWOcTm_1(v29, v30, type metadata accessor for SearchResult);
        SearchResultItem.type.getter();
        v31 = SearchResultType.rawValue.getter();
        v33 = v32;
        v34 = OUTLINED_FUNCTION_97_3();
        v35(v34);
        _s10OmniSearch0B6ResultVWOhTm_1(v30, type metadata accessor for SearchResult);
        v26 = v60;
        if ((OUTLINED_FUNCTION_114_2() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v26 = v60;
        }
        v36 = *(_QWORD *)(v26 + 16);
        if (v36 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v26 = v60;
        }
        *(_QWORD *)(v26 + 16) = v36 + 1;
        v37 = v26 + 16 * v36;
        *(_QWORD *)(v37 + 32) = v31;
        *(_QWORD *)(v37 + 40) = v33;
        v29 += v58;
        --v25;
        v0 = v59;
      }
      while (v25);
      v14 = v57;
      v15 = v56;
    }
    v38 = MEMORY[0x2494F5E4C](v26, MEMORY[0x24BEE0D00]);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_76_2(v38, v39, &v62);
    *(_QWORD *)(v0 + 264) = v40;
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_102_0();
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  OUTLINED_FUNCTION_102_0();

  v41 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 296)) + 0x80))();
  if (v41)
  {
    v42 = (void (*)(uint64_t, uint64_t))v41;
    v43 = *(_QWORD **)(v0 + 304);
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(*(_QWORD *)(v0 + 360) + 16);
    v60 = dispatch thunk of CustomStringConvertible.description.getter();
    v61 = v44;
    v45._countAndFlagsBits = 32;
    v45._object = (void *)0xE100000000000000;
    String.append(_:)(v45);
    __swift_project_boxed_opaque_existential_1(v43, v43[3]);
    v46 = OUTLINED_FUNCTION_97_3();
    v48 = v47(v46);
    if (v48)
    {
      if (v48 == 1)
      {
        v49 = 0x6867696C746F7073;
        v50 = 0xE900000000000074;
      }
      else
      {
        v50 = 0xE600000000000000;
        v49 = OUTLINED_FUNCTION_9_10();
      }
    }
    else
    {
      v50 = 0xE600000000000000;
      v49 = OUTLINED_FUNCTION_8_8();
    }
    v51 = v50;
    String.append(_:)(*(Swift::String *)&v49);
    OUTLINED_FUNCTION_56_0();
    v52._countAndFlagsBits = 0x73746C7573657220;
    v52._object = (void *)0xE800000000000000;
    String.append(_:)(v52);
    v42(v60, v61);
    outlined consume of (@escaping @callee_guaranteed (@guaranteed String) -> ())?((uint64_t)v42);
    OUTLINED_FUNCTION_56_0();
  }
  v53 = *(_QWORD *)(v0 + 360);
  v54 = *(_QWORD *)(v0 + 288);
  *(_BYTE *)v54 = OUTLINED_FUNCTION_13_9(*(_QWORD **)(v0 + 304));
  *(_QWORD *)(v54 + 8) = v53;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t OmniSearchService.searchItems(query:searchService:searchSources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[38] = a5;
  v8[39] = a7;
  v8[36] = a3;
  v8[37] = a4;
  v8[34] = a1;
  v8[35] = a2;
  v9 = *a6;
  v8[40] = a8;
  v8[41] = v9;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t OmniSearchService.searchItems(query:searchService:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD **)(v0 + 304);
  v3 = v2[3];
  v4 = v2[4];
  OUTLINED_FUNCTION_107_2(v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&v21, v3, v4);
  v5 = v21 & v1;
  if ((v21 & v1) != 0)
  {
    v6 = *(const void **)(v0 + 320);
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 304), v2[3]);
    *(_QWORD *)(v0 + 256) = v5;
    OUTLINED_FUNCTION_42_6((void *)(v0 + 16), v6);
    v7 = (_QWORD *)OUTLINED_FUNCTION_6();
    *(_QWORD *)(v0 + 336) = v7;
    *v7 = v0;
    v7[1] = OmniSearchService.searchItems(query:searchService:searchSources:allowedTypes:searchOptions:);
    OUTLINED_FUNCTION_90();
    __asm { BR              X8 }
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v9 = *(_QWORD *)(v0 + 304);
  v10 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v10, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_108_2(v9);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_86_4(v12))
  {
    v13 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v21 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v13 = 136315138;
    v14 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 192);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v14);
    v16 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    if (v16)
    {
      if (v16 == 1)
        v17 = OUTLINED_FUNCTION_21_6();
      else
        v17 = OUTLINED_FUNCTION_9_10();
    }
    else
    {
      v17 = OUTLINED_FUNCTION_8_8();
    }
    OUTLINED_FUNCTION_67_5(v17, v18, &v21);
    *(_QWORD *)(v0 + 264) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_31_7();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v11, (os_log_type_t)v1, "%s does not support any of the requested search sources.", v13);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_31_7();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_101_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_54();
    return OUTLINED_FUNCTION_2_10();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_90_4();
    return OUTLINED_FUNCTION_6_10(v5, v6);
  }
}

uint64_t OmniSearchService.searchItems(query:searchService:searchSources:allowedTypes:searchOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  OUTLINED_FUNCTION_94_2();
  a23 = v26;
  a24 = v27;
  a22 = v24;
  if (one-time initialization token for search != -1)
    swift_once();
  v28 = *(_QWORD *)(v24 + 304);
  v29 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v29, (uint64_t)static Logging.search);
  OUTLINED_FUNCTION_108_2(v28);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39();
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_86_4(v31))
  {
    v32 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v33 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    a13 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v32 = 136315394;
    v35 = *(_QWORD *)(v24 + 224);
    v34 = *(_QWORD *)(v24 + 232);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v24 + 200), v35);
    v36 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
    if (v36)
    {
      if (v36 == 1)
        v37 = OUTLINED_FUNCTION_21_6();
      else
        v37 = OUTLINED_FUNCTION_9_10();
    }
    else
    {
      v37 = OUTLINED_FUNCTION_8_8();
    }
    v39 = *(void **)(v24 + 344);
    OUTLINED_FUNCTION_67_5(v37, v38, &a13);
    *(_QWORD *)(v24 + 240) = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_31_7();
    *(_WORD *)(v32 + 12) = 2112;
    v41 = v39;
    v42 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v24 + 248) = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v33 = v42;

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_112_1();

  return OUTLINED_FUNCTION_16_12(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v24 + 8));
}

id OmniSearchService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OmniSearchService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2431D91D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2431D91F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  char *v30;
  os_signpost_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47[2];
  _QWORD v48[5];
  _QWORD v49[6];

  v45 = a6;
  v46 = a3;
  v43 = a4;
  v9 = OUTLINED_FUNCTION_103_3();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0_3();
  v39 = v10;
  v11 = OUTLINED_FUNCTION_104_2();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_18_1();
  v44 = v13;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - v18;
  v49[3] = type metadata accessor for AnswerSynthesisController();
  v49[4] = &protocol witness table for AnswerSynthesisController;
  v49[0] = a1;
  v48[3] = type metadata accessor for ResultHydrator();
  v48[4] = &protocol witness table for ResultHydrator;
  v48[0] = a2;
  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v41 = v9;
  v20 = OUTLINED_FUNCTION_78_5();
  __swift_project_value_buffer(v20, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v21 = OSSignposter.logHandle.getter();
  v22 = static os_signpost_type_t.begin.getter();
  if ((OUTLINED_FUNCTION_99_2() & 1) != 0)
  {
    v23 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v23 = 0;
    v24 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v21, v22, v24, "AnswerComposer.init", "", v23);
    specialized UnsafeMutablePointer.deallocate()();
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v19, v11);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  OSSignpostIntervalState.init(id:isOpen:)();
  v42 = *(void (**)(char *, uint64_t))(v12 + 8);
  v42(v19, v11);
  v25 = v45;
  outlined init with copy of Date?(v46, v45 + 24, &demangling cache variable for type metadata for EagerResolutionService?);
  outlined init with copy of SearchResultRanking((uint64_t)v48, v25 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ExtractionRule>);
  v26 = OUTLINED_FUNCTION_8();
  *(_OWORD *)(v26 + 16) = xmmword_2433505B0;
  *(_QWORD *)(v26 + 56) = &type metadata for InstantAnswerExtraction;
  *(_QWORD *)(v26 + 64) = &protocol witness table for InstantAnswerExtraction;
  outlined init with copy of SearchResultRanking((uint64_t)v49, (uint64_t)v47);
  *(_QWORD *)(v26 + 96) = &type metadata for AnswerSynthesisExtraction;
  *(_QWORD *)(v26 + 104) = &protocol witness table for AnswerSynthesisExtraction;
  v27 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v26 + 72) = v27;
  *(_BYTE *)(v27 + 56) = 1;
  if (one-time initialization token for supportedTypes != -1)
    swift_once();
  *(_QWORD *)(v27 + 64) = static AnswerSynthesisController.supportedTypes;
  outlined init with take of SageSearchClient(v47, v27 + 16);
  *(_QWORD *)(v26 + 136) = &type metadata for MediaURLAnswer;
  *(_QWORD *)(v26 + 144) = &protocol witness table for MediaURLAnswer;
  *(_BYTE *)(v26 + 112) = 1;
  *(_QWORD *)(v26 + 176) = &type metadata for CalendarLocationAnswer;
  *(_QWORD *)(v26 + 184) = &protocol witness table for CalendarLocationAnswer;
  *(_QWORD *)(v26 + 216) = &type metadata for WalletLocationAnswer;
  *(_QWORD *)(v26 + 224) = &protocol witness table for WalletLocationAnswer;
  *(_QWORD *)(v26 + 256) = &type metadata for FlightFromExtractedAnswer;
  *(_QWORD *)(v26 + 264) = &protocol witness table for FlightFromExtractedAnswer;
  *(_BYTE *)(v26 + 232) = 3;
  v28 = v43;
  *(_QWORD *)(v26 + 120) = v43;
  *(_QWORD *)(v26 + 128) = a5;
  *(_QWORD *)(v26 + 296) = &type metadata for MediaNameAnswer;
  *(_QWORD *)(v26 + 304) = &protocol witness table for MediaNameAnswer;
  *(_QWORD *)(v26 + 272) = v28;
  *(_QWORD *)(v26 + 280) = a5;
  *(_QWORD *)(v25 + 16) = v26;
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_117();
  v29 = OSSignposter.logHandle.getter();
  v30 = v44;
  OSSignpostIntervalState.signpostID.getter();
  v31 = static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_96_2() & 1) != 0)
  {
    swift_retain();
    v32 = v39;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    v33 = v40;
    v34 = v41;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v40 + 88))(v32, v41) == *MEMORY[0x24BEE7810])
    {
      v35 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      v35 = "";
    }
    v36 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v36 = 0;
    v37 = OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v29, v31, v37, "AnswerComposer.init", v35, v36);
    specialized UnsafeMutablePointer.deallocate()();
  }

  v42(v30, v11);
  swift_release();
  outlined destroy of MobileSMSDocument?(v46, &demangling cache variable for type metadata for EagerResolutionService?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return v25;
}

uint64_t type metadata accessor for OmniSearchService()
{
  return objc_opt_self();
}

void _s10OmniSearch0B6ResultVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_23_3(v3);
  OUTLINED_FUNCTION_5();
}

uint64_t outlined init with take of SearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type TypeIdentifier and conformance TypeIdentifier()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TypeIdentifier and conformance TypeIdentifier;
  if (!lazy protocol witness table cache variable for type TypeIdentifier and conformance TypeIdentifier)
  {
    v1 = type metadata accessor for TypeIdentifier();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEB9D38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TypeIdentifier and conformance TypeIdentifier);
  }
  return result;
}

unint64_t type metadata accessor for NSAttributedString()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSAttributedString;
  if (!lazy cache variable for type metadata for NSAttributedString)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  }
  return result;
}

uint64_t destroy for OmniSearchOptions(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OmniSearchOptions(uint64_t a1, _QWORD *__src)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_WORD *)a1 = *(_WORD *)__src;
  v3 = (void *)(a1 + 8);
  v4 = __src[1];
  if (v4)
  {
    v5 = __src[2];
    v6 = __src[3];
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v7 = __src[4];
    v8 = __src[5];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    v9 = __src[6];
    v10 = __src[7];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    v11 = __src[8];
    v12 = __src[9];
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    v14 = __src[10];
    v13 = __src[11];
    *(_QWORD *)(a1 + 72) = v12;
    *(_QWORD *)(a1 + 80) = v14;
    v15 = __src[13];
    v19 = __src[12];
    *(_QWORD *)(a1 + 88) = v13;
    *(_QWORD *)(a1 + 96) = v19;
    v16 = __src[14];
    v20 = __src[15];
    *(_QWORD *)(a1 + 104) = v15;
    *(_QWORD *)(a1 + 112) = v16;
    v21 = __src[16];
    v17 = __src[17];
    *(_QWORD *)(a1 + 120) = v20;
    *(_QWORD *)(a1 + 128) = v21;
    *(_QWORD *)(a1 + 136) = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    memcpy(v3, __src + 1, 0x88uLL);
  }
  return a1;
}

char *assignWithCopy for OmniSearchOptions(char *__dst, char *__src)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  *__dst = *__src;
  __dst[1] = __src[1];
  v4 = __dst + 8;
  v5 = *((_QWORD *)__dst + 1);
  v7 = __src + 8;
  v6 = *((_QWORD *)__src + 1);
  if (!v5)
  {
    if (v6)
    {
      *((_QWORD *)__dst + 1) = v6;
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
      *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
      *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
      *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
      *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
      *((_QWORD *)__dst + 12) = *((_QWORD *)__src + 12);
      *((_QWORD *)__dst + 13) = *((_QWORD *)__src + 13);
      *((_QWORD *)__dst + 14) = *((_QWORD *)__src + 14);
      *((_QWORD *)__dst + 15) = *((_QWORD *)__src + 15);
      *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
      *((_QWORD *)__dst + 17) = *((_QWORD *)__src + 17);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      return __dst;
    }
LABEL_7:
    memcpy(v4, v7, 0x88uLL);
    return __dst;
  }
  if (!v6)
  {
    outlined destroy of SearchContext((uint64_t)v4);
    goto LABEL_7;
  }
  *((_QWORD *)__dst + 1) = v6;
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 12) = *((_QWORD *)__src + 12);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 13) = *((_QWORD *)__src + 13);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 14) = *((_QWORD *)__src + 14);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 15) = *((_QWORD *)__src + 15);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 17) = *((_QWORD *)__src + 17);
  swift_retain();
  swift_release();
  return __dst;
}

uint64_t outlined destroy of SearchContext(uint64_t a1)
{
  destroy for SearchContext();
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

char *assignWithTake for OmniSearchOptions(char *__dst, char *__src)
{
  char *v3;
  uint64_t v4;
  char *v5;

  *__dst = *__src;
  __dst[1] = __src[1];
  v3 = __dst + 8;
  v5 = __src + 8;
  v4 = *((_QWORD *)__src + 1);
  if (!*((_QWORD *)__dst + 1))
    goto LABEL_5;
  if (!v4)
  {
    outlined destroy of SearchContext((uint64_t)v3);
LABEL_5:
    memcpy(v3, v5, 0x88uLL);
    return __dst;
  }
  *((_QWORD *)__dst + 1) = v4;
  swift_release();
  *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
  swift_release();
  *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
  swift_release();
  *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
  swift_release();
  *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
  swift_release();
  *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
  swift_release();
  *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
  swift_release();
  *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
  swift_release();
  *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
  swift_release();
  *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
  swift_release();
  *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
  swift_release();
  *((_QWORD *)__dst + 12) = *((_QWORD *)__src + 12);
  swift_release();
  *((_QWORD *)__dst + 13) = *((_QWORD *)__src + 13);
  swift_release();
  *((_QWORD *)__dst + 14) = *((_QWORD *)__src + 14);
  swift_release();
  *((_QWORD *)__dst + 15) = *((_QWORD *)__src + 15);
  swift_release();
  *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
  swift_release();
  *((_QWORD *)__dst + 17) = *((_QWORD *)__src + 17);
  swift_release();
  return __dst;
}

uint64_t getEnumTagSinglePayload for OmniSearchOptions(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OmniSearchOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OmniSearchOptions()
{
  return &type metadata for OmniSearchOptions;
}

uint64_t method lookup function for OmniSearchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OmniSearchService.intermediateCallback.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of OmniSearchService.intermediateCallback.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of OmniSearchService.intermediateCallback.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of OmniSearchService.__allocating_init(searchServices:searchResultRanker:requestRouter:answerComposer:maxPerSourceLimit:intermediateCallback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of OmniSearchService.prewarm()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

void dispatch thunk of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:)()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_120_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = dispatch thunk of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:);
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_46_3();
  __asm { BR              X6 }
}

uint64_t dispatch thunk of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_92_1(v1, (uint64_t)dispatch thunk of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:));
  return v4(v2);
}

uint64_t dispatch thunk of OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_116_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_66_6(v1, (uint64_t)dispatch thunk of OmniSearchService.entitySearch(_:rewrittenQuery:allowedTypes:));
  return v4(v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_2();
  v0 = OUTLINED_FUNCTION_90_4();
  return OUTLINED_FUNCTION_6_10(v0, v1);
}

uint64_t dispatch thunk of OmniSearchService.trimResultsBySource(sourceResults:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

void dispatch thunk of static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_92_1(v1, (uint64_t)dispatch thunk of OmniSearchService.search(_:rewrittenQuery:matchedEntities:sources:));
  OUTLINED_FUNCTION_90();
  __asm { BR              X8 }
}

uint64_t sub_2431DA2B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t partial apply for closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_90();
  return closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2431DA3B8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 136))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_20_7();
  return closure #1 in closure #1 in OmniSearchService.federateSearch(query:searchSources:allowedTypes:searchOptions:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t outlined retain of OmniSearchOptions(uint64_t a1)
{
  outlined copy of SearchContext?(*(_QWORD *)(a1 + 8));
  return a1;
}

void outlined init with copy of SearchResultRanking(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_5();
}

uint64_t sub_2431DA5D0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_6_10(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return 0x797469746E65;
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return 0x6C61626F6C67;
}

uint64_t OUTLINED_FUNCTION_13_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_16_12(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return 0x6867696C746F7073;
}

uint64_t OUTLINED_FUNCTION_22_4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 528);
}

uint64_t OUTLINED_FUNCTION_23_8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_25_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_30_5@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 528);
}

uint64_t OUTLINED_FUNCTION_31_7()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

void OUTLINED_FUNCTION_36_5()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void *OUTLINED_FUNCTION_42_6(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_47_3()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_52_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_53_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_63_5()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  return 0x6867696C746F7073;
}

uint64_t OUTLINED_FUNCTION_66_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

void OUTLINED_FUNCTION_67_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_72_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int128 a20)
{
  char v20;

  *(_BYTE *)(a1 + 24) = v20;
  return outlined init with take of SageSearchClient(&a20, a1 + 32);
}

unint64_t OUTLINED_FUNCTION_73_4()
{
  char v0;

  return specialized __RawDictionaryStorage.find<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_74_6@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  v2 = a2[1];
  if ((v2 & ~v3) == 0)
    v2 = 0;
  *(_QWORD *)(result + 16) = v2 | v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

void OUTLINED_FUNCTION_76_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_77_2()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t OUTLINED_FUNCTION_78_5()
{
  return type metadata accessor for OSSignposter();
}

void *OUTLINED_FUNCTION_82_4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8EuLL);
}

BOOL OUTLINED_FUNCTION_86_4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_90_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_92_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

_QWORD *OUTLINED_FUNCTION_93_2(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_103_3()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OUTLINED_FUNCTION_105_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  return static os_log_type_t.info.getter();
}

_QWORD *OUTLINED_FUNCTION_107_2(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_108_2(uint64_t a1)
{
  uint64_t v1;

  outlined init with copy of SearchResultRanking(a1, v1);
}

uint64_t OUTLINED_FUNCTION_109_2()
{
  return checkForErrorAndConsumeState(state:)();
}

void OUTLINED_FUNCTION_112_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_114_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_117()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_123_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xC0))();
}

uint64_t OUTLINED_FUNCTION_124_1(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return outlined init with take of SearchContext?((uint64_t)va, v1);
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of SearchContext?(v1, v0 + 24);
}

void UserDefault.wrappedValue.getter(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  v1 = OUTLINED_FUNCTION_13_10();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_6();
}

uint64_t sub_2431DAA78(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v31;
  int v32;

  v31 = objc_msgSend(v27, sel_objectForKey_, a1);

  if (v31)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any((_OWORD *)(v29 - 144), (_OWORD *)(v29 - 112));
  }
  else
  {
    *(_OWORD *)(v29 - 112) = 0u;
    *(_OWORD *)(v29 - 96) = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  v32 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v24, v32 ^ 1u, 1, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v22, v26, v20);
  if (OUTLINED_FUNCTION_116(v24) == 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(*(_QWORD *)(v29 - 152), v22, v23);
    OUTLINED_FUNCTION_5_10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_5_10();
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(*(_QWORD *)(v29 - 152), v24, v23);
  }
}

void UserDefault.wrappedValue.setter()
{
  _bridgeAnythingToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_11_6();
}

uint64_t sub_2431DABD8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  objc_msgSend(v17, sel_setObject_forKey_, v19, a1);
  swift_unknownObjectRelease();

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
}

void UserDefault.init(key:defaultValue:container:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;

  v12 = type metadata accessor for UserDefault(0, a5, a3, a4);
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 28));
  *v13 = a1;
  v13[1] = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a6, a3, a5);
  *(_QWORD *)(a6 + *(int *)(v12 + 32)) = a4;
  OUTLINED_FUNCTION_12_0();
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UserDefault.key.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id UserDefault.container.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 32));
}

void UserDefault.container.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 32);

  *(_QWORD *)(v2 + v4) = a1;
}

uint64_t (*UserDefault.container.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void static NSUserDefaults.makeOmniSearchUserDefaults()()
{
  id v0;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  if (@nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000014, 0x800000024335C3E0))
  {
    OUTLINED_FUNCTION_2_5();
  }
  else
  {
    OUTLINED_FUNCTION_3_7();
    __break(1u);
  }
}

void key path getter for UserDefault.wrappedValue : <A>UserDefault<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for UserDefault(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  UserDefault.wrappedValue.getter(v4);
}

void key path setter for UserDefault.wrappedValue : <A>UserDefault<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v9 - v6);
  type metadata accessor for UserDefault(0, v4, v7, v8);
  UserDefault.wrappedValue.setter();
}

void UserDefault.wrappedValue.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = OUTLINED_FUNCTION_7_14();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = *(_QWORD *)(v0 + 16);
  v3[2] = v4;
  v3[3] = *(_QWORD *)(v4 - 8);
  v3[4] = OUTLINED_FUNCTION_8_9();
  v3[5] = OUTLINED_FUNCTION_8_9();
  UserDefault.wrappedValue.getter(v0);
}

void (*sub_2431DAEF4())(uint64_t a1, char a2)
{
  return UserDefault.wrappedValue.modify;
}

void UserDefault.wrappedValue.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_12();
    UserDefault.wrappedValue.setter();
  }
  UserDefault.wrappedValue.setter();
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  OUTLINED_FUNCTION_11_6();
}

void sub_2431DAF94(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;

  objc_msgSend(v14, sel_removeObjectForKey_, a1);
  OUTLINED_FUNCTION_2_11(a1);
}

uint64_t UserDefaultsTokenGeneration.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id UserDefaultsTokenGeneration.container.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void UserDefaultsTokenGeneration.container.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*UserDefaultsTokenGeneration.container.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

id UserDefaultsTokenGeneration.projectedValue.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  id v4;

  v2 = v1[1];
  v4 = (id)v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

void static NSUserDefaults.makeTokenGenerationUserDefaults()()
{
  id v0;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  if (@nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000019, 0x800000024335C450))
  {
    OUTLINED_FUNCTION_2_5();
  }
  else
  {
    OUTLINED_FUNCTION_3_7();
    __break(1u);
  }
}

uint64_t UserDefaultsTokenGeneration.init(key:container:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t UserDefaultsTokenGeneration.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  __int128 v13;
  _OWORD v14[2];

  v5 = *v2;
  v6 = v2[1];
  v7 = (void *)v2[2];
  v8 = (void *)MEMORY[0x2494F5BB8](v5, v6);
  v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v13, v14);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a2, v11 ^ 1u, 1, v10);
}

uint64_t key path getter for UserDefaultsTokenGeneration.wrappedValue : <A>UserDefaultsTokenGeneration<A>@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefaultsTokenGeneration(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return UserDefaultsTokenGeneration.wrappedValue.getter(v5, a4);
}

void key path setter for UserDefaultsTokenGeneration.wrappedValue : <A>UserDefaultsTokenGeneration<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a4 + a3 - 8);
  v6 = type metadata accessor for Optional();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v13 - v7, a1);
  v12 = type metadata accessor for UserDefaultsTokenGeneration(0, v5, v10, v11);
  UserDefaultsTokenGeneration.wrappedValue.setter((uint64_t)v8, v12);
}

void UserDefaultsTokenGeneration.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = OUTLINED_FUNCTION_13_10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - v7;
  v9 = (void *)v2[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - v7, a1, v5);
  v10 = 0;
  if (OUTLINED_FUNCTION_116((uint64_t)v8) != 1)
  {
    v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v8, v4);
  }
  v11 = (void *)MEMORY[0x2494F5BB8](*v2, v2[1]);
  objc_msgSend(v9, sel_setObject_forKey_, v10, v11);
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  OUTLINED_FUNCTION_12_0();
}

void (*UserDefaultsTokenGeneration.wrappedValue.modify())(uint64_t **a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = OUTLINED_FUNCTION_7_14();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = type metadata accessor for Optional();
  v3[2] = v4;
  v3[3] = *(_QWORD *)(v4 - 8);
  v3[4] = OUTLINED_FUNCTION_8_9();
  v5 = OUTLINED_FUNCTION_8_9();
  v3[5] = v5;
  UserDefaultsTokenGeneration.wrappedValue.getter(v0, (uint64_t)v5);
  return UserDefaultsTokenGeneration.wrappedValue.modify;
}

void UserDefaultsTokenGeneration.wrappedValue.modify(uint64_t **a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *v5;

  v3 = *a1;
  v4 = (void *)(*a1)[4];
  v5 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_12();
    UserDefaultsTokenGeneration.wrappedValue.setter((uint64_t)v4, v2);
    OUTLINED_FUNCTION_6_11();
  }
  else
  {
    UserDefaultsTokenGeneration.wrappedValue.setter((*a1)[5], *v3);
  }
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_0_13(v3);
}

Swift::Void __swiftcall UserDefaultsTokenGeneration.removeObject()()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[2];
  v2 = (void *)MEMORY[0x2494F5BB8](*v0, v0[1]);
  objc_msgSend(v1, sel_removeObjectForKey_, v2);
  OUTLINED_FUNCTION_2_11(v2);
}

id @nonobjc NSUserDefaults.init(suiteName:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)MEMORY[0x2494F5BB8]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

_QWORD *sub_2431DB538(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata completion function for UserDefault()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UserDefault(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  id v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (void **)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = *v12;
    *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return v4;
}

void destroy for UserDefault(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  id v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = *v9;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  v11 = v10;
  return a1;
}

uint64_t assignWithCopy for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = v10;
  v12 = v10;

  return a1;
}

uint64_t initializeWithTake for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v9 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t getEnumTagSinglePayload for UserDefault(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2431DB99C + 4 * byte_243350620[v11]))();
  }
}

void storeEnumTagSinglePayload for UserDefault(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_2431DBB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        *v8 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v8[1] = (a2 - 1);
      }
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

void destroy for UserDefaultsTokenGeneration(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeBufferWithCopyOfBuffer for UserDefaultsTokenGeneration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for UserDefaultsTokenGeneration(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for UserDefaultsTokenGeneration(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for UserDefaultsTokenGeneration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefaultsTokenGeneration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for UserDefaultsTokenGeneration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefaultsTokenGeneration);
}

void OUTLINED_FUNCTION_0_13(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 24) + 16))(v1, v2, *(_QWORD *)(v0 + 16));
}

void OUTLINED_FUNCTION_2_11(id a1)
{

}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void *OUTLINED_FUNCTION_7_14()
{
  return malloc(0x30uLL);
}

void *OUTLINED_FUNCTION_8_9()
{
  size_t v0;

  return malloc(v0);
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return 8;
}

void OUTLINED_FUNCTION_11_6()
{
  JUMPOUT(0x2494F5BB8);
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  return type metadata accessor for Optional();
}

uint64_t SearchEntityPreprocessor.functions.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SearchEntityPreprocessor.functions.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchEntityPreprocessor.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t SearchEntityPreprocessor.preprocess(data:query:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = *(_QWORD **)(v0 + 40);
  v2 = v1[2];
  *(_QWORD *)(v0 + 48) = v2;
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = v3;
    v4 = (int *)v1[4];
    *(_QWORD *)(v0 + 72) = v1[5];
    v7 = (uint64_t (*)(void))((char *)v4 + *v4);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v5;
    *v5 = v0;
    v5[1] = SearchEntityPreprocessor.preprocess(data:query:);
    return OUTLINED_FUNCTION_0_14(v3, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v7);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 56) + 1;
    *(_QWORD *)(v0 + 56) = v5;
    *(_QWORD *)(v0 + 64) = v4;
    v6 = *(_QWORD *)(v0 + 40) + 16 * v5;
    v7 = *(int **)(v6 + 32);
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v6 + 40);
    v9 = (int *)((char *)v7 + *v7);
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v8;
    *v8 = v0;
    v8[1] = SearchEntityPreprocessor.preprocess(data:query:);
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v9)(v4, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
}

uint64_t SearchEntityPreprocessor.preprocess(data:query:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AnySearchEntityPreprocessing.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  v10 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  v6 = OUTLINED_FUNCTION_5_11(v5, (uint64_t)AnySearchEntityPreprocessing.preprocess(data:query:));
  return OUTLINED_FUNCTION_0_14(v6, v7, v8, v10);
}

uint64_t AnySearchEntityPreprocessing.preprocess(data:query:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_16_7();
  return OUTLINED_FUNCTION_1_13(v0, *(uint64_t (**)(void))(v1 + 8));
}

void *AnySearchEntityPreprocessing.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = __swift_mutable_project_boxed_opaque_existential_1(a1, v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  v8 = specialized AnySearchEntityPreprocessing.init(_:)((uint64_t)v6, v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

uint64_t closure #1 in AnySearchEntityPreprocessing.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t closure #1 in AnySearchEntityPreprocessing.init(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[5];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = closure #1 in AnySearchEntityPreprocessing.init(_:);
  return v6(v0[2], v0[3], v0[4], v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_16_7();
  return OUTLINED_FUNCTION_1_13(v0, *(uint64_t (**)(void))(v1 + 8));
}

void one-time initialization function for shared()
{
  static SearchEntityPreprocessorManager.shared = MEMORY[0x24BEE4AF8];
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _UNKNOWN **v9;

  type metadata accessor for MemoryCreationQUNetworkService();
  MemoryCreationQUNetworkService.__allocating_init()();
  v1 = v0;
  v2 = type metadata accessor for ECRClient();
  OUTLINED_FUNCTION_8();
  v3 = ECRClient.init()();
  if (v3)
  {
    *((_QWORD *)&v8 + 1) = v2;
    v9 = &protocol witness table for ECRClient;
    *(_QWORD *)&v7 = v3;
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  type metadata accessor for PhotosQueryParser();
  v4 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v4 + 16) = objc_msgSend((id)objc_opt_self(), sel_spotlightManager, (_QWORD)v7);
  type metadata accessor for MemoryCreationQUController();
  v5 = OUTLINED_FUNCTION_8();
  swift_retain();
  OUTLINED_FUNCTION_75();
  v6 = specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(v1, (uint64_t)&v7, v4, v5);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_50();
  static MemoryCreationQUController.shared = v6;
  OUTLINED_FUNCTION_7_3();
}

{
  id v0;
  uint64_t v1;

  v0 = objc_allocWithZone((Class)type metadata accessor for LocalSearchManager());
  LocalSearchManager.init(infinitePatience:)(1);
  static LocalSearchManager.shared = v1;
  OUTLINED_FUNCTION_5();
}

uint64_t *SearchEntityPreprocessorManager.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static SearchEntityPreprocessorManager.shared;
}

uint64_t static SearchEntityPreprocessorManager.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void static SearchEntityPreprocessorManager.shared.setter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_56_1();
}

uint64_t (*static SearchEntityPreprocessorManager.shared.modify())()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  return static UTType.searchToolExportedExperiences.modify;
}

void __swiftcall SearchEntityPreprocessorManager.init(functions:)(Swift::OpaquePointer functions)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_56_1();
}

void *specialized AnySearchEntityPreprocessing.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a2;
  v10 = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_1, a1, a2);
  v6 = swift_allocObject();
  outlined init with take of SageSearchClient(&v8, v6 + 16);
  return &async function pointer to partial apply for closure #1 in AnySearchEntityPreprocessing.init(_:);
}

uint64_t dispatch thunk of SearchEntityPreprocess.preprocess(data:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = dispatch thunk of SearchEntityPreprocess.preprocess(data:query:);
  return v13(a1, a2, a3, a4, a5);
}

void type metadata accessor for SearchEntityPreprocessor()
{
  OUTLINED_FUNCTION_103_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for AnySearchEntityPreprocessing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AnySearchEntityPreprocessing()
{
  return swift_release();
}

_QWORD *assignWithCopy for AnySearchEntityPreprocessing(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AnySearchEntityPreprocessing(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for AnySearchEntityPreprocessing()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for SearchEntityPreprocessorManager()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t sub_2431DC5C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AnySearchEntityPreprocessing.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_5_11(v2, (uint64_t)dispatch thunk of SearchEntityPreprocess.preprocess(data:query:));
  return closure #1 in AnySearchEntityPreprocessing.init(_:)(v3, v4, v5, v0 + 16);
}

uint64_t OUTLINED_FUNCTION_0_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_1_13(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_11@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

void OUTLINED_FUNCTION_6_12()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

void GlobalResolutionService.__allocating_init(globalSearch:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)OUTLINED_FUNCTION_106_4();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t EagerResolutionService.resolveExtractedResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = OUTLINED_FUNCTION_5_2();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_104_3();
  v5[10] = OUTLINED_FUNCTION_0_15();
  v5[11] = type metadata accessor for ExtractedInfo(0);
  v5[12] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

void EagerResolutionService.resolveExtractedResult(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = type metadata accessor for ExtractedResult(0);
  outlined init with copy of SearchResult(v2 + *(int *)(v3 + 20), v1, type metadata accessor for ExtractedInfo);
  v4 = (char *)sub_2431DC7B4 + 4 * byte_243350770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2431DC7B4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD);

  v1 = (uint64_t *)v0[12];
  v3 = *v1;
  v2 = v1[1];
  v0[18] = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = EagerResolutionService.resolveExtractedResult(_:);
  return v6(v0[2], v3, v2, v0[4], v0[5]);
}

uint64_t sub_2431DC8D0()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 96), type metadata accessor for ExtractedInfo);
  v1 = *(_QWORD **)(v0 + 16);
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = (int *)OUTLINED_FUNCTION_53_6();
  v3 = (uint64_t)v1 + v2[5];
  v4 = OUTLINED_FUNCTION_63_6();
  OUTLINED_FUNCTION_45_4(v3, 1, v5, v4);
  *(_QWORD *)((char *)v1 + v2[6]) = MEMORY[0x24BEE4B00];
  OUTLINED_FUNCTION_89_5((uint64_t)v1 + v2[7]);
  *(_QWORD *)((char *)v1 + v2[8]) = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v6();
}

uint64_t EagerResolutionService.resolveExtractedResult(_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 80), type metadata accessor for FlightReservation);
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v1);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t (*v0)(void);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v0);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t (*v0)(void);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v0);
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_102_4();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_78_6();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_95();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v0);
}

{
  uint64_t v0;

  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 80), type metadata accessor for FlightReservation);
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_10_11(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_10_11(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_10_11(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_78_6();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_10_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t GlobalResolutionService.globalSearch.getter()
{
  return swift_retain();
}

uint64_t GlobalResolutionService.appName.getter()
{
  OUTLINED_FUNCTION_4_7();
  return OUTLINED_FUNCTION_6_5();
}

_QWORD *GlobalResolutionService.init(globalSearch:)(uint64_t a1)
{
  _QWORD *v1;

  v1[3] = 0;
  v1[4] = 0;
  v1[2] = a1;
  return v1;
}

uint64_t GlobalResolutionService.resolveFlight(reservation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Leg?);
  v3[25] = OUTLINED_FUNCTION_5_12();
  v3[26] = OUTLINED_FUNCTION_17();
  v4 = type metadata accessor for JSONEncodingOptions();
  v3[27] = v4;
  v3[28] = *(_QWORD *)(v4 - 8);
  v3[29] = OUTLINED_FUNCTION_18_5();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Flight?);
  v3[30] = OUTLINED_FUNCTION_0_15();
  type metadata accessor for JSONDecodingOptions();
  v3[31] = OUTLINED_FUNCTION_0_15();
  v3[32] = type metadata accessor for FlightSnippet(0);
  v3[33] = OUTLINED_FUNCTION_0_15();
  v3[34] = type metadata accessor for FlightSnippet.Flight(0);
  v3[35] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_Context_ResultEntity?);
  v3[36] = OUTLINED_FUNCTION_0_15();
  v5 = type metadata accessor for Apple_Parsec_Siri_Context_ResultEntity();
  v3[37] = v5;
  v3[38] = *(_QWORD *)(v5 - 8);
  v3[39] = OUTLINED_FUNCTION_18_5();
  v3[40] = OUTLINED_FUNCTION_63_6();
  v3[41] = OUTLINED_FUNCTION_0_15();
  v3[42] = type metadata accessor for GlobalItem();
  v3[43] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v3[44] = OUTLINED_FUNCTION_0_15();
  v3[45] = OUTLINED_FUNCTION_77_0();
  v3[46] = OUTLINED_FUNCTION_0_15();
  v3[47] = OUTLINED_FUNCTION_104_3();
  v3[48] = OUTLINED_FUNCTION_5_12();
  v3[49] = OUTLINED_FUNCTION_17();
  v3[50] = OUTLINED_FUNCTION_17();
  v3[51] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t GlobalResolutionService.resolveFlight(reservation:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t (*v34)(uint64_t, unint64_t, uint64_t, _QWORD *);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_60();
  v40 = v1;
  v41 = v2;
  v39 = v0;
  if (one-time initialization token for search != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_13();
  v0[52] = __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
  v4 = OUTLINED_FUNCTION_6_5();
  outlined init with copy of SearchResult(v4, v5, v6);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.debug.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[51];
  if (v9)
  {
    v11 = v0[47];
    v12 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v13 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v12 = 136315138;
    v14 = (uint64_t *)(v10 + *(int *)(v11 + 56));
    v15 = v14[1];
    v35 = v13;
    if (v15)
    {
      v16 = *v14;
      v17 = v15;
    }
    else
    {
      v16 = 0;
      v17 = 0xE000000000000000;
    }
    v18 = v0[51];
    v37 = v16;
    v38 = v17;
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_62_4();
    OUTLINED_FUNCTION_117();
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v17, &v35);
    v0[21] = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10OmniSearch0B6ResultVWOhTm_1(v18, type metadata accessor for FlightReservation);
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v7, v8, "Resolving flight: \"%s\"", v12);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_22_5(v9, type metadata accessor for FlightReservation);

  v20 = v0[47];
  v21 = v0[23];
  v22 = 0xE000000000000000;
  v37 = 0;
  v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  v35 = 0x20746867696C46;
  v36 = 0xE700000000000000;
  v23 = (uint64_t *)(v21 + *(int *)(v20 + 56));
  v24 = v23[1];
  if (v24)
    v25 = *v23;
  else
    v25 = 0;
  if (v24)
    v22 = v24;
  v37 = v25;
  v38 = v22;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_91_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_62_4();
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x73757461747320;
  v26._object = (void *)0xE700000000000000;
  String.append(_:)(v26);
  v27 = v35;
  v28 = v36;
  v0[53] = v35;
  v0[54] = v28;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_Context_ClientEntity>);
  v29 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity() - 8) + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject();
  v0[55] = v31;
  *(_OWORD *)(v31 + 16) = xmmword_24334DB60;
  FlightReservation.entity.getter(v31 + v30);
  if (one-time initialization token for all != -1)
    swift_once();
  v0[18] = static SearchSources.all;
  v32 = (_QWORD *)OUTLINED_FUNCTION_46_4();
  v0[56] = v32;
  *v32 = v0;
  v32[1] = GlobalResolutionService.resolveFlight(reservation:);
  return v34(v27, v28, v31, v0 + 18);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_101_3(v3);
  *(_QWORD *)(v2 + 456) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    OUTLINED_FUNCTION_36_0();
  else
    *(_QWORD *)(v2 + 464) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  int EnumTagSinglePayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  unint64_t v104;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116[2];

  v3 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  specialized Collection.first.getter(*(_QWORD *)(v0 + 464), v3);
  OUTLINED_FUNCTION_36_0();
  if (__swift_getEnumTagSinglePayload(v3, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 352);
    v6 = &demangling cache variable for type metadata for SearchResult?;
LABEL_38:
    outlined destroy of MobileSMSDocument?(v5, v6);
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_81_3(*(_QWORD *)(v0 + 352), v4, type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_69_4(v7, v8, type metadata accessor for SearchResultItem);
  if (OUTLINED_FUNCTION_67_6() != 12)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 368), type metadata accessor for SearchResult);
    v27 = type metadata accessor for SearchResultItem;
LABEL_18:
    OUTLINED_FUNCTION_22_5(v26, v27);
LABEL_39:
    v101 = *(NSObject **)(v0 + 416);
    swift_bridgeObjectRetain();
    Logger.logObject.getter();
    v102 = OUTLINED_FUNCTION_80();
    v103 = os_log_type_enabled(v101, v102);
    v104 = *(_QWORD *)(v0 + 432);
    if (v103)
    {
      v105 = *(_QWORD *)(v0 + 424);
      v106 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v116[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v106 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v105, v104, v116);
      *(_QWORD *)(v0 + 160) = v107;
      OUTLINED_FUNCTION_60_4();
      OUTLINED_FUNCTION_130();
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v101, v102, "Failed to find flight info for: %s", v106);
      OUTLINED_FUNCTION_34_2();
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_102_0();

    lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
    OUTLINED_FUNCTION_74_4();
    *v108 = 0;
    v108[1] = 0;
    swift_willThrow();
    goto LABEL_42;
  }
  v9 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v9
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
                           + 48));
  OUTLINED_FUNCTION_81_3(v9, v11, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
  if (!(v10 >> 62))
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_64();
    if (v12)
      goto LABEL_6;
LABEL_36:
    v97 = *(_QWORD *)(v0 + 288);
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_89_5(v97);
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_64();
  v12 = _CocoaArrayWrapper.endIndex.getter();
  if (!v12)
    goto LABEL_36;
LABEL_6:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v13 = MEMORY[0x2494F62E4](0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_46;
    }
    v13 = *(_QWORD *)(v10 + 32);
    swift_retain();
  }
  v14 = *(_QWORD *)(v0 + 288);
  OUTLINED_FUNCTION_6_1();
  v15 = *(id *)(v13 + 16);
  swift_release();
  v16 = dispatch thunk of Experience.associatedEntities.getter();

  specialized Collection.first.getter(v16, v14);
  OUTLINED_FUNCTION_36_0();
  if (OUTLINED_FUNCTION_112_2(v14) == 1)
  {
LABEL_37:
    v98 = *(_QWORD *)(v0 + 288);
    v99 = OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_124_0(v99, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    OUTLINED_FUNCTION_22_5(v100, type metadata accessor for SearchResult);
    v6 = (uint64_t *)&demangling cache variable for type metadata for Apple_Parsec_Siri_Context_ResultEntity?;
    v5 = v98;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v0 + 336);
  v18 = *(_QWORD *)(v0 + 344);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
  v19 = (_QWORD *)(v18 + *(int *)(v17 + 28));
  v20 = *v19 == 0x73746867696C66 && v19[1] == 0xE700000000000000;
  if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    v35 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 312);
    v36 = *(_QWORD *)(v0 + 296);
    OUTLINED_FUNCTION_6_1();
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    OUTLINED_FUNCTION_124_0(v37, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    v27 = type metadata accessor for SearchResult;
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(v0 + 456);
  swift_bridgeObjectRelease();
  Apple_Parsec_Siri_Context_ResultEntity.usoEntity.getter();
  JSONDecodingOptions.init()();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type FlightSnippet and conformance FlightSnippet, type metadata accessor for FlightSnippet, (uint64_t)&protocol conformance descriptor for FlightSnippet);
  Message.init(jsonUTF8Data:options:)();
  if (v9)
  {
    v21 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 304);
    v22 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 296);
    OUTLINED_FUNCTION_6_1();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    _s10OmniSearch0B6ResultVWOhTm_1(v21, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    OUTLINED_FUNCTION_22_5(v25, type metadata accessor for SearchResult);
LABEL_42:
    swift_task_dealloc();
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v96 = *(uint64_t (**)(void))(v0 + 8);
    return v96();
  }
  v28 = *(_QWORD *)(v0 + 272);
  v29 = *(_QWORD *)(v0 + 240);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(*(_QWORD *)(v0 + 264) + *(int *)(*(_QWORD *)(v0 + 256) + 40), v29, &demangling cache variable for type metadata for FlightSnippet.Flight?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v29, 1, v28);
  v12 = *(_QWORD *)(v0 + 280);
  if (EnumTagSinglePayload == 1)
  {
    v32 = *(_QWORD *)(v0 + 272);
    UnknownStorage.init()();
    v1 = *(int *)(v32 + 20);
    if (one-time initialization token for defaultInstance == -1)
    {
LABEL_21:
      v33 = *(_QWORD *)(v0 + 240);
      *(_QWORD *)(v12 + v1) = static FlightSnippet.Flight._StorageClass.defaultInstance;
      swift_retain();
      outlined destroy of MobileSMSDocument?(v33, &demangling cache variable for type metadata for FlightSnippet.Flight?);
      goto LABEL_24;
    }
LABEL_46:
    swift_once();
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_81_3(*(_QWORD *)(v0 + 240), v31, type metadata accessor for FlightSnippet.Flight);
LABEL_24:
  v38 = *(_QWORD *)(v0 + 400);
  v39 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 184);
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v0 + 264), type metadata accessor for FlightSnippet);
  outlined init with copy of SearchResult(v40, v38, type metadata accessor for FlightReservation);
  JSONEncodingOptions.init()();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card((unint64_t *)&lazy protocol witness table cache variable for type FlightSnippet.Flight and conformance FlightSnippet.Flight, type metadata accessor for FlightSnippet.Flight, (uint64_t)&protocol conformance descriptor for FlightSnippet.Flight);
  v41 = Message.jsonString(options:)();
  if (v9)
  {
    v114 = *(_QWORD *)(v0 + 368);
    v115 = *(_QWORD *)(v0 + 400);
    v43 = *(_QWORD *)(v0 + 304);
    v44 = *(_QWORD *)(v0 + 312);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 280);
    v47 = v39;
    v48 = *(_QWORD *)(v0 + 232);
    v49 = *(_QWORD *)(v0 + 216);
    OUTLINED_FUNCTION_6_1();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
    _s10OmniSearch0B6ResultVWOhTm_1(v46, type metadata accessor for FlightSnippet.Flight);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    OUTLINED_FUNCTION_96_1(v50, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
    _s10OmniSearch0B6ResultVWOhTm_1(v114, type metadata accessor for SearchResult);
    _s10OmniSearch0B6ResultVWOhTm_1(v115, type metadata accessor for FlightReservation);
    goto LABEL_42;
  }
  v51 = v41;
  v52 = v42;
  v53 = *(_QWORD *)(v0 + 400);
  v54 = *(_QWORD *)(v0 + 376);
  (*(void (**)(_QWORD, _QWORD))(v39 + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  v55 = (uint64_t *)(v53 + *(int *)(v54 + 120));
  swift_bridgeObjectRelease();
  *v55 = v51;
  v55[1] = v52;
  FlightReservation.resolvedFlightJSON.didset();
  v56 = Logger.logObject.getter();
  v57 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = *(_QWORD *)(v0 + 392);
    v59 = *(_QWORD *)(v0 + 400);
    v60 = *(_QWORD *)(v0 + 208);
    v61 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v116[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v61 = 136315138;
    OUTLINED_FUNCTION_1_4();
    outlined init with copy of SearchResult(v59, v58, type metadata accessor for FlightReservation);
    FlightReservation.leg.getter(v60);
    v62 = type metadata accessor for FlightSnippet.Leg(0);
    v63 = OUTLINED_FUNCTION_71_5(v60);
    if ((_DWORD)v63 == 1)
    {
      OUTLINED_FUNCTION_35_5(v63, &demangling cache variable for type metadata for FlightSnippet.Leg?);
      v64 = 0;
      v65 = 1;
    }
    else
    {
      v66 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + *(int *)(v62 + 20));
      v67 = OUTLINED_FUNCTION_1_4();
      v64 = *(_QWORD *)(v66 + 16);
      v65 = *(_BYTE *)(v66 + 24);
      OUTLINED_FUNCTION_22_5(v67, type metadata accessor for FlightSnippet.Leg);
    }
    *(_QWORD *)(v0 + 128) = v64;
    *(_BYTE *)(v0 + 136) = v65;
    v68 = String.init<A>(describing:)();
    v70 = v69;
    OUTLINED_FUNCTION_22_5(v68, type metadata accessor for FlightReservation);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, v116);
    *(_QWORD *)(v0 + 152) = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v56, v57, "Retrieved updated flight status: %s", v61);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }

  v72 = *(_QWORD *)(v0 + 400);
  v73 = *(_QWORD *)(v0 + 384);
  v74 = *(_QWORD *)(v0 + 200);
  OUTLINED_FUNCTION_1_4();
  outlined init with copy of SearchResult(v72, v73, type metadata accessor for FlightReservation);
  FlightReservation.leg.getter(v74);
  v75 = type metadata accessor for FlightSnippet.Leg(0);
  v76 = OUTLINED_FUNCTION_112_2(v74);
  if ((_DWORD)v76 == 1)
  {
    OUTLINED_FUNCTION_35_5(v76, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    v77 = 0;
    v78 = 1;
  }
  else
  {
    v79 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + *(int *)(v75 + 20));
    v80 = OUTLINED_FUNCTION_1_4();
    v77 = *(_QWORD *)(v79 + 16);
    v78 = *(_BYTE *)(v79 + 24);
    OUTLINED_FUNCTION_22_5(v80, type metadata accessor for FlightSnippet.Leg);
  }
  v81 = *(_QWORD *)(v0 + 384);
  v110 = *(_QWORD *)(v0 + 368);
  v111 = *(_QWORD *)(v0 + 400);
  v82 = *(_QWORD *)(v0 + 312);
  v83 = *(_QWORD *)(v0 + 296);
  v84 = *(_QWORD *)(v0 + 304);
  v85 = *(_QWORD *)(v0 + 280);
  v86 = *(uint64_t **)(v0 + 176);
  *(_QWORD *)(v0 + 112) = v77;
  *(_BYTE *)(v0 + 120) = v78;
  v87 = String.init<A>(describing:)();
  v112 = v88;
  v113 = v87;
  _s10OmniSearch0B6ResultVWOhTm_1(v81, type metadata accessor for FlightReservation);
  _s10OmniSearch0B6ResultVWOhTm_1(v85, type metadata accessor for FlightSnippet.Flight);
  v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
  OUTLINED_FUNCTION_124_0(v89, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
  _s10OmniSearch0B6ResultVWOhTm_1(v110, type metadata accessor for SearchResult);
  v90 = (int *)OUTLINED_FUNCTION_53_6();
  v91 = (uint64_t)v86 + v90[5];
  v92 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]))
               + 48);
  outlined init with copy of SearchResult(v111, v91, type metadata accessor for FlightReservation);
  *(_QWORD *)(v91 + v92) = v10;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_70_4(v91, 0);
  v93 = (uint64_t)v86 + v90[7];
  v94 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_45_4(v93, 1, v95, v94);
  _s10OmniSearch0B6ResultVWOhTm_1(v111, type metadata accessor for FlightReservation);
  *v86 = v113;
  v86[1] = v112;
  *(uint64_t *)((char *)v86 + v90[6]) = MEMORY[0x24BEE4B00];
  *(uint64_t *)((char *)v86 + v90[8]) = MEMORY[0x24BEE4AF8];
  swift_task_dealloc();
  OUTLINED_FUNCTION_56();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_91();
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v96 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v96();
}

{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FlightReservation.entity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t EnumTagSinglePayload;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[4];

  v64 = OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_3();
  v63 = v3;
  type metadata accessor for Google_Protobuf_Timestamp();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0_3();
  v62 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  v65 = type metadata accessor for Date();
  v61 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_18_1();
  v59 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v60 = (uint64_t)&v59 - v12;
  v13 = type metadata accessor for Apple_Parsec_Siri_Context_FlightEntity();
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_1();
  v66 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v59 - v16;
  type metadata accessor for Apple_Parsec_Siri_Context_SageAppEntity();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_2();
  v19 = type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity.ClientEntitySource();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_2();
  v23 = v22 - v21;
  v24 = type metadata accessor for Apple_Parsec_Siri_Context_ClientEntity.ClientEntityType();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_2();
  v28 = v27 - v26;
  Apple_Parsec_Siri_Context_ClientEntity.init()();
  v29 = *(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104);
  v30 = (uint64_t)v17;
  v31 = v64;
  v29(v28, *MEMORY[0x24BE706C0], v24);
  Apple_Parsec_Siri_Context_ClientEntity.type.setter();
  v32 = *(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104);
  v33 = a1;
  v34 = v69;
  v32(v23, *MEMORY[0x24BE706D0], v19);
  Apple_Parsec_Siri_Context_ClientEntity.source.setter();
  Apple_Parsec_Siri_Context_SageAppEntity.init()();
  Apple_Parsec_Siri_Context_ClientEntity.sageAppEntity.setter();
  Apple_Parsec_Siri_Context_FlightEntity.init()();
  v35 = (uint64_t *)(v34 + *(int *)(v31 + 56));
  v36 = v35[1];
  if (v36)
  {
    v37 = *v35;
    v38 = v36;
  }
  else
  {
    v37 = 0;
    v38 = 0xE000000000000000;
  }
  v71[0] = v37;
  v71[1] = v38;
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = OUTLINED_FUNCTION_105_3();
  String.append(_:)(v39);
  OUTLINED_FUNCTION_116_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_5();
  String.lowercased()();
  OUTLINED_FUNCTION_36_0();
  v40 = OUTLINED_FUNCTION_105_3();
  MEMORY[0x2494F4C70](v40);
  FlightReservation.departureDate.getter();
  v41 = v65;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v65);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    v65 = v30;
    OUTLINED_FUNCTION_96_3(EnumTagSinglePayload, &demangling cache variable for type metadata for Date?);
    if (one-time initialization token for search != -1)
      swift_once();
    v43 = OUTLINED_FUNCTION_13();
    __swift_project_value_buffer(v43, (uint64_t)static Logging.search);
    v44 = v63;
    outlined init with copy of SearchResult(v34, v63, type metadata accessor for FlightReservation);
    v45 = Logger.logObject.getter();
    v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      v62 = v33;
      v48 = (uint8_t *)v47;
      v71[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v48 = 136315138;
      type metadata accessor for DateComponents();
      lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type DateComponents and conformance DateComponents, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE28]);
      v49 = dispatch thunk of CustomStringConvertible.description.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v71);
      v70 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_36_0();
      _s10OmniSearch0B6ResultVWOhTm_1(v44, type metadata accessor for FlightReservation);
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v45, v46, "FlightEntity: Missing departure date information, will provide flight's current status. %s", v48);
      OUTLINED_FUNCTION_34_2();
      specialized UnsafeMutablePointer.deallocate()();
    }
    _s10OmniSearch0B6ResultVWOhTm_1(v44, type metadata accessor for FlightReservation);

    v30 = v65;
  }
  else
  {
    v53 = v60;
    v52 = v61;
    OUTLINED_FUNCTION_80_3(v60, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32));
    OUTLINED_FUNCTION_80_3(v59, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
    Google_Protobuf_Timestamp.init(date:)();
    Apple_Parsec_Siri_Context_FlightEntity.departureTimestamp.setter();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v41);
  }
  if (*(_QWORD *)(v34 + *(int *)(v31 + 80) + 8))
  {
    OUTLINED_FUNCTION_4_7();
    v54 = OUTLINED_FUNCTION_6_5();
    MEMORY[0x2494F4C7C](v54);
  }
  v55 = v67;
  v56 = v68;
  OUTLINED_FUNCTION_80_3(v66, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
  v57 = (void (*)(uint64_t *, _QWORD))Apple_Parsec_Siri_Context_ClientEntity.sageAppEntity.modify();
  Apple_Parsec_Siri_Context_SageAppEntity.flightEntity.setter();
  v57(v71, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v30, v56);
}

uint64_t GlobalResolutionService.resolveLocation(address:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[28] = a3;
  v4[29] = v3;
  v4[26] = a1;
  v4[27] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[30] = OUTLINED_FUNCTION_0_15();
  v4[31] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultItem?);
  v4[32] = OUTLINED_FUNCTION_5_12();
  v4[33] = OUTLINED_FUNCTION_17();
  v4[34] = OUTLINED_FUNCTION_63_6();
  v4[35] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v4[36] = OUTLINED_FUNCTION_5_12();
  v4[37] = OUTLINED_FUNCTION_17();
  v4[38] = OUTLINED_FUNCTION_17();
  v4[39] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t GlobalResolutionService.resolveLocation(address:)()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = v0[29];
  if (*(_QWORD *)(v2 + 32))
  {
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(void **)(v2 + 32);
  }
  else
  {
    v4 = (void *)0xE400000000000000;
    v3 = 1936744813;
  }
  v19 = v0[27];
  v20 = v0[28];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_7();
  v5._countAndFlagsBits = 0x206874697720;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = v3;
  v6._object = v4;
  String.append(_:)(v6);
  OUTLINED_FUNCTION_6_1();
  v0[40] = v19;
  v0[41] = v20;
  if (one-time initialization token for search != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_13();
  v8 = __swift_project_value_buffer(v7, (uint64_t)static Logging.search);
  v0[42] = v8;
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_51_2();
  if (OUTLINED_FUNCTION_33_1(v9))
  {
    v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v10 = 136315138;
    OUTLINED_FUNCTION_91_0();
    v11 = OUTLINED_FUNCTION_105_3();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v13);
    v0[25] = v14;
    OUTLINED_FUNCTION_60_4();
    OUTLINED_FUNCTION_130();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v8, v1, "Resolving location with GlobalSearch query: \"%s\"", v10);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();

  if (one-time initialization token for all != -1)
    swift_once();
  v0[22] = static SearchSources.all;
  v15 = (_QWORD *)OUTLINED_FUNCTION_6();
  v0[43] = v15;
  *v15 = v0;
  v15[1] = GlobalResolutionService.resolveLocation(address:);
  v16 = OUTLINED_FUNCTION_115_0();
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_101_3(v3);
  *(_QWORD *)(v2 + 352) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 360) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t (*v22)(void);
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t __dst[22];

  v1 = v0[38];
  OUTLINED_FUNCTION_65_6();
  v2 = OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_66_7(v2, v3, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_77_0();
  v4 = OUTLINED_FUNCTION_71_5(v1);
  if ((_DWORD)v4 == 1)
  {
    OUTLINED_FUNCTION_35_5(v4, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    v5 = v0[35];
    outlined init with copy of SearchResult(v0[38], v5, type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_22_5(v6, type metadata accessor for SearchResult);
    v7 = SearchResultItem.experience.getter();
    _s10OmniSearch0B6ResultVWOhTm_1(v5, type metadata accessor for SearchResultItem);
    if (v7)
    {
      v8 = *(void **)(v7 + 16);
      type metadata accessor for GenericExperience();
      if (swift_dynamicCastClass())
      {
        v9 = v8;
        static GlobalSearchResponseProcessor.makeGeoLocations(experience:)();
        if (*(_QWORD *)(v10 + 16))
        {
          v44 = v0[39];
          v11 = v0[34];
          v12 = v0[33];
          v13 = v0[30];
          v14 = (_QWORD *)v0[26];
          memcpy(v0 + 2, (const void *)(v10 + 32), 0x9DuLL);
          outlined retain of GeoLocation((uint64_t)(v0 + 2));
          OUTLINED_FUNCTION_36_0();
          swift_bridgeObjectRelease();
          v15 = v0[6];
          v43 = v0[5];
          __swift_storeEnumTagSinglePayload(v12, 1, 1, v11);
          memcpy(__dst, v0 + 2, 0x9DuLL);
          OUTLINED_FUNCTION_116_0();
          v16 = GeoLocation.metadata.getter();
          v17 = OUTLINED_FUNCTION_5_2();
          OUTLINED_FUNCTION_45_4(v13, 1, v18, v17);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v19 = OUTLINED_FUNCTION_106_4();
          *(_OWORD *)(v19 + 16) = xmmword_24334DB70;
          *(_QWORD *)(v19 + 32) = v7;
          __dst[0] = v19;
          specialized Array._endMutation()();
          v20 = __dst[0];

          outlined destroy of MobileSMSDocument?(v44, &demangling cache variable for type metadata for SearchResult?);
          *v14 = v43;
          v14[1] = v15;
          v21 = (int *)OUTLINED_FUNCTION_53_6();
          outlined init with take of URL?(v12, (uint64_t)v14 + v21[5], &demangling cache variable for type metadata for SearchResultItem?);
          *(_QWORD *)((char *)v14 + v21[6]) = v16;
          outlined init with take of URL?(v13, (uint64_t)v14 + v21[7], &demangling cache variable for type metadata for URL?);
          outlined release of GeoLocation((uint64_t)(v0 + 2));
          *(_QWORD *)((char *)v14 + v21[8]) = v20;
          OUTLINED_FUNCTION_73();
          OUTLINED_FUNCTION_54_3();
          OUTLINED_FUNCTION_88();
          swift_task_dealloc();
          swift_task_dealloc();
          OUTLINED_FUNCTION_99();
          swift_task_dealloc();
          OUTLINED_FUNCTION_95();
          v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
          return v22();
        }
        OUTLINED_FUNCTION_36_0();

      }
      swift_release();
    }
  }
  v23 = v0[42];
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v0[39], v0[37], &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_91_0();
  Logger.logObject.getter();
  v24 = OUTLINED_FUNCTION_80();
  if (OUTLINED_FUNCTION_68_5(v24))
  {
    v45 = v24;
    v25 = v0[36];
    v46 = v0[37];
    v26 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    __dst[0] = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v26 = 136315394;
    v27 = OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_97_4(v27, v28, __dst);
    v0[23] = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_130();
    *(_WORD *)(v26 + 12) = 2080;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v46, v25, &demangling cache variable for type metadata for SearchResult?);
    v30 = OUTLINED_FUNCTION_71_5(v25);
    v31 = v0[36];
    if ((_DWORD)v30 == 1)
    {
      OUTLINED_FUNCTION_85_3(v30, &demangling cache variable for type metadata for SearchResult?);
      v33 = 1;
    }
    else
    {
      outlined init with copy of SearchResult(v0[36], v0[32], type metadata accessor for SearchResultItem);
      _s10OmniSearch0B6ResultVWOhTm_1(v31, type metadata accessor for SearchResult);
      v33 = 0;
    }
    OUTLINED_FUNCTION_45_4(v0[32], v33, v32, v0[34]);
    v35 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, __dst);
    v0[24] = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v38 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_85_3(v38, &demangling cache variable for type metadata for SearchResult?);
    _os_log_impl(&dword_24315F000, v23, v45, "Received unexpected type from Pegasus for query: %s. %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  v34 = OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_85_3(v34, &demangling cache variable for type metadata for SearchResult?);

  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  v39 = OUTLINED_FUNCTION_74_4();
  v41 = OUTLINED_FUNCTION_44_6(v39, v40);
  OUTLINED_FUNCTION_35_5(v41, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_55();
  return OUTLINED_FUNCTION_6_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t GlobalResolutionService.resolveMedia(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultItem?);
  v4[16] = OUTLINED_FUNCTION_0_15();
  v4[17] = OUTLINED_FUNCTION_63_6();
  v4[18] = OUTLINED_FUNCTION_0_15();
  v4[19] = type metadata accessor for GlobalItem();
  v4[20] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v4[21] = OUTLINED_FUNCTION_5_12();
  v4[22] = OUTLINED_FUNCTION_17();
  v4[23] = OUTLINED_FUNCTION_17();
  v4[24] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t GlobalResolutionService.resolveMedia(name:)()
{
  Swift::String *v0;
  uint64_t countAndFlagsBits;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);
  Swift::String v20;

  countAndFlagsBits = v0[7]._countAndFlagsBits;
  OUTLINED_FUNCTION_95_3(v0[6]);
  v2._countAndFlagsBits = 0x73676E6F7320;
  v2._object = (void *)0xE600000000000000;
  String.append(_:)(v2);
  object = v20._object;
  v0[2]._object = (void *)v20._countAndFlagsBits;
  v0[3]._countAndFlagsBits = (uint64_t)object;
  v4._object = *(void **)(countAndFlagsBits + 32);
  if (v4._object)
  {
    v4._countAndFlagsBits = *(_QWORD *)(v0[7]._countAndFlagsBits + 24);
    OUTLINED_FUNCTION_95_3(v4);
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for search != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_13();
  v6 = __swift_project_value_buffer(v5, (uint64_t)static Logging.search);
  v0[12]._object = v6;
  v8 = (uint64_t)v0[2]._object;
  v7 = v0[3]._countAndFlagsBits;
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_51_2();
  if (os_log_type_enabled(v6, v9))
  {
    v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v20._countAndFlagsBits = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v7, &v20._countAndFlagsBits);
    v0[5]._countAndFlagsBits = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_130();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v6, v9, "Resolving media item with GlobalSearch query: \"%s\"", v10);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();

  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_1_4();
  v0[13]._countAndFlagsBits = v0[3]._countAndFlagsBits;
  v12 = one-time initialization token for all;
  OUTLINED_FUNCTION_91_0();
  if (v12 != -1)
    swift_once();
  v0[3]._object = (void *)static SearchSources.all;
  v13 = (_QWORD *)OUTLINED_FUNCTION_46_4();
  v0[13]._object = v13;
  *v13 = v0;
  v13[1] = GlobalResolutionService.resolveMedia(name:);
  v14 = OUTLINED_FUNCTION_115_0();
  return OUTLINED_FUNCTION_19_8(v14, v15, v16, v17, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_101_3(v3);
  *(_QWORD *)(v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_102_0();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 232) = v0;
  }
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GlobalResolutionService.resolveMedia(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v62;
  unint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  unint64_t v71;
  os_log_type_t v72;

  OUTLINED_FUNCTION_60();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = *(_QWORD *)(v26 + 184);
  OUTLINED_FUNCTION_65_6();
  v30 = OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_66_7(v30, v31, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_77_0();
  v32 = OUTLINED_FUNCTION_113_1(v29);
  if ((_DWORD)v32 == 1)
  {
    OUTLINED_FUNCTION_35_5(v32, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    OUTLINED_FUNCTION_69_4(v32, v33, type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_22_5(v34, type metadata accessor for SearchResult);
    if (OUTLINED_FUNCTION_67_6() == 12)
    {
      v36 = *(_QWORD *)(v26 + 152);
      v35 = *(_QWORD *)(v26 + 160);
      v37 = *(_QWORD *)(v26 + 144);
      swift_bridgeObjectRelease();
      v71 = *(_QWORD *)(v37
                      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
                               + 48));
      OUTLINED_FUNCTION_81_3(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
      v39 = (unint64_t *)(v35 + *(int *)(v36 + 24));
      if (v39[1])
      {
        v40 = *v39;
        v41 = v39[1];
      }
      else
      {
        v41 = 0x800000024335C4B0;
        v40 = 0xD000000000000012;
      }
      v62 = *(_QWORD *)(v26 + 136);
      v63 = *(unint64_t **)(v26 + 88);
      v64 = swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_124_0(v64, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
      OUTLINED_FUNCTION_96_3(v65, &demangling cache variable for type metadata for SearchResult?);
      v66 = (int *)OUTLINED_FUNCTION_53_6();
      __swift_storeEnumTagSinglePayload((uint64_t)v63 + v66[5], 1, 1, v62);
      v67 = (uint64_t)v63 + v66[7];
      v68 = OUTLINED_FUNCTION_5_2();
      OUTLINED_FUNCTION_45_4(v67, 1, v69, v68);
      *v63 = v40;
      v63[1] = v41;
      *(unint64_t *)((char *)v63 + v66[6]) = MEMORY[0x24BEE4B00];
      *(unint64_t *)((char *)v63 + v66[8]) = v71;
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_41_2();
      OUTLINED_FUNCTION_89();
      OUTLINED_FUNCTION_34_3();
      OUTLINED_FUNCTION_54_3();
      OUTLINED_FUNCTION_88();
      v70 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
      return OUTLINED_FUNCTION_19(v70);
    }
    _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v26 + 144), type metadata accessor for SearchResultItem);
  }
  v42 = *(NSObject **)(v26 + 200);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(*(_QWORD *)(v26 + 192), *(_QWORD *)(v26 + 176), &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_117();
  Logger.logObject.getter();
  v43 = OUTLINED_FUNCTION_80();
  v44 = OUTLINED_FUNCTION_68_5(v43);
  v45 = *(_QWORD *)(v26 + 176);
  if (v44)
  {
    v72 = v43;
    v46 = *(_QWORD *)(v26 + 168);
    v47 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    a14 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v47 = 136315394;
    v48 = OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_97_4(v48, v49, &a14);
    *(_QWORD *)(v26 + 64) = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_130();
    *(_WORD *)(v47 + 12) = 2080;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v45, v46, &demangling cache variable for type metadata for SearchResult?);
    if (OUTLINED_FUNCTION_113_1(v46) == 1)
    {
      outlined destroy of MobileSMSDocument?(*(_QWORD *)(v26 + 168), &demangling cache variable for type metadata for SearchResult?);
      v52 = 1;
    }
    else
    {
      outlined init with copy of SearchResult(*(_QWORD *)(v26 + 168), *(_QWORD *)(v26 + 128), type metadata accessor for SearchResultItem);
      OUTLINED_FUNCTION_96_1(v53, type metadata accessor for SearchResult);
      v52 = 0;
    }
    v54 = *(_QWORD *)(v26 + 176);
    OUTLINED_FUNCTION_45_4(*(_QWORD *)(v26 + 128), v52, v51, *(_QWORD *)(v26 + 136));
    v55 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, &a14);
    *(_QWORD *)(v26 + 72) = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of MobileSMSDocument?(v54, &demangling cache variable for type metadata for SearchResult?);
    _os_log_impl(&dword_24315F000, v42, v72, "Received unexpected type from Pegasus for query: %s. %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();
  outlined destroy of MobileSMSDocument?(v45, &demangling cache variable for type metadata for SearchResult?);

  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  v58 = OUTLINED_FUNCTION_74_4();
  v60 = OUTLINED_FUNCTION_44_6(v58, v59);
  OUTLINED_FUNCTION_35_5(v60, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_19(*(uint64_t (**)(void))(v26 + 8));
}

uint64_t GlobalResolutionService.resolveMediaURL(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultItem?);
  v3[13] = OUTLINED_FUNCTION_0_15();
  v3[14] = OUTLINED_FUNCTION_63_6();
  v3[15] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v3[16] = OUTLINED_FUNCTION_5_12();
  v3[17] = OUTLINED_FUNCTION_17();
  v3[18] = OUTLINED_FUNCTION_17();
  v3[19] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t GlobalResolutionService.resolveMediaURL(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;

  v0[2] = URL.absoluteString.getter();
  v0[3] = v1;
  v0[4] = 0x70612E636973756DLL;
  v0[5] = 0xEB00000000656C70;
  lazy protocol witness table accessor for type String and conformance String();
  v2 = StringProtocol.contains<A>(_:)();
  OUTLINED_FUNCTION_6_1();
  if ((v2 & 1) != 0)
  {
    v3 = URL.pathComponents.getter();
    v4 = specialized BidirectionalCollection.last.getter(v3);
    v6 = v5;
    OUTLINED_FUNCTION_6_1();
    if (v6)
    {
      v7 = v6;
    }
    else
    {
      v4 = 0;
      v7 = 0xE000000000000000;
    }
    URL.query.getter();
    swift_bridgeObjectRelease();
    if (one-time initialization token for search != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_13();
    v9 = __swift_project_value_buffer(v8, (uint64_t)static Logging.search);
    v0[20] = v9;
    OUTLINED_FUNCTION_64();
    Logger.logObject.getter();
    v10 = OUTLINED_FUNCTION_51_2();
    if (OUTLINED_FUNCTION_33_1(v10))
    {
      v11 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      v33 = specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_DWORD *)v11 = 136315138;
      OUTLINED_FUNCTION_64();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v7, &v33);
      v0[8] = v12;
      OUTLINED_FUNCTION_60_4();
      OUTLINED_FUNCTION_130();
      OUTLINED_FUNCTION_29_2(&dword_24315F000, v9, (os_log_type_t)v6, "Resolving media URL with clientEntities: \"%s\"", v11);
      OUTLINED_FUNCTION_34_2();
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_102_0();

    v23 = *(_QWORD *)(v0[11] + 16);
    v24 = OUTLINED_FUNCTION_5_2();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
    v0[21] = v24;
    lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type URL and conformance URL, v25, MEMORY[0x24BDCDB28]);
    v26 = dispatch thunk of CustomStringConvertible.description.getter();
    v28 = v27;
    v0[22] = v27;
    if (one-time initialization token for all != -1)
      swift_once();
    v0[6] = static SearchSources.all;
    v32 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v23 + 136) + *(_QWORD *)(*(_QWORD *)v23 + 136));
    v29 = (_QWORD *)swift_task_alloc();
    v0[23] = v29;
    *v29 = v0;
    v29[1] = GlobalResolutionService.resolveMediaURL(_:);
    return OUTLINED_FUNCTION_19_8(v26, v28, MEMORY[0x24BEE4AF8], (uint64_t)(v0 + 6), v32);
  }
  else
  {
    v13 = v0[9];
    v14 = URL.absoluteString.getter();
    v30 = v15;
    v31 = v14;
    v16 = (int *)OUTLINED_FUNCTION_53_6();
    OUTLINED_FUNCTION_70_4(v13 + v16[5], 1);
    v17 = OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_103_4();
    v18 = (uint64_t *)v0[9];
    v19 = (uint64_t)v18 + v16[7];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v0[10], v17);
    OUTLINED_FUNCTION_70_4(v19, 0);
    *v18 = v31;
    v18[1] = v30;
    *(uint64_t *)((char *)v18 + v16[6]) = MEMORY[0x24BEE4B00];
    *(uint64_t *)((char *)v18 + v16[8]) = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_41_2();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_88();
    v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
    return v21();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_101_3(v3);
  *(_QWORD *)(v2 + 192) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 200) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_77_3();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  return OUTLINED_FUNCTION_6_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t GlobalResolutionService.resolveMediaURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  NSObject *v45;
  os_log_type_t v46;
  _BOOL8 v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_60();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = *(_QWORD *)(v26 + 144);
  OUTLINED_FUNCTION_65_6();
  v30 = OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_66_7(v30, v31, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_77_0();
  v32 = OUTLINED_FUNCTION_114_3(v29);
  if ((_DWORD)v32 == 1)
  {
    OUTLINED_FUNCTION_35_5(v32, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    OUTLINED_FUNCTION_69_4(v32, v33, type metadata accessor for SearchResultItem);
    OUTLINED_FUNCTION_22_5(v34, type metadata accessor for SearchResult);
    if (OUTLINED_FUNCTION_67_6() == 12)
    {
      v35 = *(_QWORD *)(v26 + 120);
      v36 = *(_QWORD *)(v26 + 72);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
      v65 = *(_QWORD *)(v35 + *(int *)(v37 + 48));
      OUTLINED_FUNCTION_96_1(v37, (uint64_t (*)(_QWORD))type metadata accessor for GlobalItem);
      v38 = URL.absoluteString.getter();
      v63 = v39;
      v64 = v38;
      OUTLINED_FUNCTION_85_3(v38, &demangling cache variable for type metadata for SearchResult?);
      v40 = (int *)OUTLINED_FUNCTION_53_6();
      OUTLINED_FUNCTION_70_3(v36 + v40[5], 1);
      v41 = *(_QWORD *)(v26 + 168);
      OUTLINED_FUNCTION_103_4();
      v42 = *(uint64_t **)(v26 + 72);
      v43 = (uint64_t)v42 + v40[7];
      OUTLINED_FUNCTION_80_3(v43, *(_QWORD *)(v26 + 80), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16));
      OUTLINED_FUNCTION_70_3(v43, 0);
      *v42 = v64;
      v42[1] = v63;
      *(uint64_t *)((char *)v42 + v40[6]) = MEMORY[0x24BEE4B00];
      *(uint64_t *)((char *)v42 + v40[8]) = v65;
      OUTLINED_FUNCTION_41_2();
      OUTLINED_FUNCTION_73();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_89();
      v44 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
      return OUTLINED_FUNCTION_19(v44);
    }
    _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v26 + 120), type metadata accessor for SearchResultItem);
  }
  v45 = *(NSObject **)(v26 + 160);
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(*(_QWORD *)(v26 + 152), *(_QWORD *)(v26 + 136), &demangling cache variable for type metadata for SearchResult?);
  Logger.logObject.getter();
  v46 = OUTLINED_FUNCTION_80();
  v47 = OUTLINED_FUNCTION_68_5(v46);
  v48 = *(_QWORD *)(v26 + 136);
  if (v47)
  {
    v49 = *(_QWORD *)(v26 + 128);
    v50 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    a14 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v50 = 136315138;
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v48, v49, &demangling cache variable for type metadata for SearchResult?);
    v51 = OUTLINED_FUNCTION_114_3(v49);
    v52 = *(_QWORD *)(v26 + 128);
    if (v51 == 1)
    {
      outlined destroy of MobileSMSDocument?(*(_QWORD *)(v26 + 128), &demangling cache variable for type metadata for SearchResult?);
      v54 = 1;
    }
    else
    {
      outlined init with copy of SearchResult(*(_QWORD *)(v26 + 128), *(_QWORD *)(v26 + 104), type metadata accessor for SearchResultItem);
      _s10OmniSearch0B6ResultVWOhTm_1(v52, type metadata accessor for SearchResult);
      v54 = 0;
    }
    v56 = *(_QWORD *)(v26 + 136);
    OUTLINED_FUNCTION_45_4(*(_QWORD *)(v26 + 104), v54, v53, *(_QWORD *)(v26 + 112));
    v57 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, &a14);
    *(_QWORD *)(v26 + 56) = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of MobileSMSDocument?(v56, &demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v45, v46, "Received unexpected type from Pegasus for: %s", v50);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_96_3(v47, &demangling cache variable for type metadata for SearchResult?);

  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  v60 = OUTLINED_FUNCTION_74_4();
  v62 = OUTLINED_FUNCTION_44_6(v60, v61);
  OUTLINED_FUNCTION_35_5(v62, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_77_3();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  return OUTLINED_FUNCTION_19(*(uint64_t (**)(void))(v26 + 8));
}

uint64_t specialized BidirectionalCollection.last.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 16 * v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t GlobalResolutionService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t GlobalResolutionService.__deallocating_deinit()
{
  GlobalResolutionService.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for EagerResolutionService.resolveFlight(reservation:) in conformance GlobalResolutionService(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(**(_QWORD **)v2 + 104)
                                                + *(_QWORD *)(**(_QWORD **)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v8(a1, a2);
}

uint64_t protocol witness for EagerResolutionService.resolveLocation(address:) in conformance GlobalResolutionService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v3 + 112)
                                                          + *(_QWORD *)(**(_QWORD **)v3 + 112));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v10(a1, a2, a3);
}

uint64_t protocol witness for EagerResolutionService.resolveMedia(name:) in conformance GlobalResolutionService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v3 + 120)
                                                          + *(_QWORD *)(**(_QWORD **)v3 + 120));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v10(a1, a2, a3);
}

uint64_t protocol witness for EagerResolutionService.resolveMediaURL(_:) in conformance GlobalResolutionService(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(**(_QWORD **)v2 + 128)
                                                + *(_QWORD *)(**(_QWORD **)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v8(a1, a2);
}

unint64_t specialized Array._checkSubscript(_:wasNativeTypeChecked:)(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t outlined retain of GeoLocation(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of GeoLocation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t dispatch thunk of EagerResolutionService.resolveFlight(reservation:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_92_2();
  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_47_4(v1);
  return OUTLINED_FUNCTION_16_13(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of EagerResolutionService.resolveLocation(address:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_38_5(v1);
  return OUTLINED_FUNCTION_30_6(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of EagerResolutionService.resolveMedia(name:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_72_4();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_38_5(v1);
  return OUTLINED_FUNCTION_30_6(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of EagerResolutionService.resolveMediaURL(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_92_2();
  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_47_4(v1);
  return OUTLINED_FUNCTION_16_13(v2, v3, v4, v5, v6);
}

uint64_t type metadata accessor for GlobalResolutionService()
{
  return objc_opt_self();
}

uint64_t method lookup function for GlobalResolutionService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GlobalResolutionService.__allocating_init(globalSearch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of GlobalResolutionService.resolveFlight(reservation:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return OUTLINED_FUNCTION_41_4(v2, v3, v4);
}

uint64_t dispatch thunk of GlobalResolutionService.resolveLocation(address:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_110_1();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_56_4(v1);
  return OUTLINED_FUNCTION_0_14(v2, v3, v4, v5);
}

uint64_t dispatch thunk of GlobalResolutionService.resolveMedia(name:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_110_1();
  v0 = OUTLINED_FUNCTION_25_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_56_4(v1);
  return OUTLINED_FUNCTION_0_14(v2, v3, v4, v5);
}

uint64_t dispatch thunk of GlobalResolutionService.resolveMediaURL(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return OUTLINED_FUNCTION_41_4(v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_6_13(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_10_11(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_16_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_19_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

void OUTLINED_FUNCTION_22_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_30_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

void OUTLINED_FUNCTION_35_5(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_38_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_41_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_44_6(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  a2[1] = 0;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_45_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_47_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_53_6()
{
  return type metadata accessor for ResolvedInfo();
}

uint64_t OUTLINED_FUNCTION_56_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_60_4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_62_4()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;

  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return type metadata accessor for SearchResultItem(0);
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  uint64_t v0;
  uint64_t v1;

  return specialized Collection.first.getter(v1, v0);
}

void OUTLINED_FUNCTION_66_7(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_67_6()
{
  return swift_getEnumCaseMultiPayload();
}

BOOL OUTLINED_FUNCTION_68_5(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_69_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of SearchResult(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_70_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_71_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_76_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_78_6()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[8] + 8))(v0[9], v0[7]);
}

uint64_t OUTLINED_FUNCTION_80_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_81_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of SearchResult(a1, v3, a3);
}

void OUTLINED_FUNCTION_85_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_89_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_95_3(Swift::String a1)
{
  String.append(_:)(a1);
}

void OUTLINED_FUNCTION_96_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2, a2);
}

void OUTLINED_FUNCTION_97_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, a3);
}

void OUTLINED_FUNCTION_101_3(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void OUTLINED_FUNCTION_102_4()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return type metadata accessor for FlightReservation(0);
}

uint64_t OUTLINED_FUNCTION_105_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_112_2(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_113_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_114_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_115_0()
{
  uint64_t v0;

  return v0;
}

void AceService.__allocating_init()()
{
  OUTLINED_FUNCTION_20_8();
  AceService.init()();
  OUTLINED_FUNCTION_5();
}

void AceService.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE092B8]), sel_init);
  *(_QWORD *)(v0 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE09170]), sel_init);
  OUTLINED_FUNCTION_5();
}

void AceService.addViews(for:dialog:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  id v10;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_19_9(v2);
  OUTLINED_FUNCTION_39_5();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_35_6();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_78_4();
  if (v1)
  {
    OUTLINED_FUNCTION_49_5();
    lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_10_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_37_5();
    if (v7)
      v5 = v6;
    if (v5)
    {
      v8 = OUTLINED_FUNCTION_25_7(objc_allocWithZone(MEMORY[0x24BE81870]));
      OUTLINED_FUNCTION_18_9(v8);
      OUTLINED_FUNCTION_17_10(v0);

      v9 = v0;
      OUTLINED_FUNCTION_32_5();
    }
  }
  v10 = closure #1 in AceService.addViews(for:dialog:)();
  OUTLINED_FUNCTION_32_5();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  id v10;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_19_9(v2);
  OUTLINED_FUNCTION_39_5();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_35_6();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_78_4();
  if (v1)
  {
    OUTLINED_FUNCTION_49_5();
    lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_10_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_37_5();
    if (v7)
      v5 = v6;
    if (v5)
    {
      v8 = OUTLINED_FUNCTION_25_7(objc_allocWithZone(MEMORY[0x24BE81870]));
      OUTLINED_FUNCTION_18_9(v8);
      OUTLINED_FUNCTION_17_10(v0);

      v9 = v0;
      OUTLINED_FUNCTION_32_5();
    }
  }
  v10 = closure #1 in AceService.addViews(for:dialog:)();
  OUTLINED_FUNCTION_32_5();
}

id closure #1 in AceService.addViews(for:dialog:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for UUID();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE819C8]), sel_init);
  type metadata accessor for Response();
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type Response and conformance Response, (uint64_t (*)(uint64_t))MEMORY[0x24BEAD3D0], MEMORY[0x24BEAD3C8]);
  v5 = ProtobufBuilder.serializedData()();
  outlined bridged method (mbnn) of @objc SAUIVisualResponseSnippet.modelData.setter(v5, v6, v4);
  v7 = v4;
  UUID.init()();
  v8 = UUID.uuidString.getter();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter(v8, v10, v7, (SEL *)&selRef_setAceId_);

  return v7;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for UUID();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for SACardSnippet);
  v4 = (void *)static SACardSnippet.makeFromCard(card:shouldGenerateAceId:)();
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter(v5, v6, v4, (SEL *)&selRef_setItemType_);
  v7 = v4;
  UUID.init()();
  v8 = UUID.uuidString.getter();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter(v8, v10, v7, (SEL *)&selRef_setAceId_);

  return v7;
}

void AceService.sendResponse(_:dialog:mode:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_9(v1, v8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_4_14(v3, v9);
  OUTLINED_FUNCTION_46_5();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_7_15();
  v6 = OUTLINED_FUNCTION_41_5(v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_15_7();
  AceService.addViews(for:dialog:)();
}

void sub_2431E0B48(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 200) = a1;
  v3 = objc_msgSend(a1, sel_dictionary);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(v2 - 128) = 0;
    OUTLINED_FUNCTION_33_6();

  }
  objc_msgSend(*(id *)(*(_QWORD *)(v2 - 184) + 16), sel_startUIRequest_, 0);
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  v5 = OUTLINED_FUNCTION_42_7();
  *v1 = 750;
  OUTLINED_FUNCTION_27_6(v5, *MEMORY[0x24BEE5410]);
  OUTLINED_FUNCTION_30_7();
}

void sub_2431E0BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_14_6();
  v3 = OUTLINED_FUNCTION_20_8();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v2 - 96) = partial apply for closure #1 in AceService.sendResponse(_:dialog:mode:);
  *(_QWORD *)(v2 - 88) = v3;
  *(_QWORD *)(v2 - 128) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v2 - 120) = 1107296256;
  OUTLINED_FUNCTION_50_6((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  OUTLINED_FUNCTION_28_8();
  swift_release();
  OUTLINED_FUNCTION_45_5();
  *(_QWORD *)(v2 - 128) = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_11_7();
}

void sub_2431E0C98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  const void *v20;
  void *v21;
  uint64_t v22;

  _Block_release(v20);

  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_31_8();
  OUTLINED_FUNCTION_43_6();
  OUTLINED_FUNCTION_43_0();
}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void AceService.sendCard(_:dialog:mode:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_9(v1, v8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_4_14(v3, v9);
  OUTLINED_FUNCTION_46_5();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_7_15();
  v6 = OUTLINED_FUNCTION_41_5(v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_15_7();
  AceService.addViews(for:dialog:)();
}

void sub_2431E0D80(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 200) = a1;
  v3 = objc_msgSend(a1, sel_dictionary);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(v2 - 128) = 0;
    OUTLINED_FUNCTION_33_6();

  }
  objc_msgSend(*(id *)(*(_QWORD *)(v2 - 184) + 16), sel_startUIRequest_, 0);
  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  v5 = OUTLINED_FUNCTION_42_7();
  *v1 = 750;
  OUTLINED_FUNCTION_27_6(v5, *MEMORY[0x24BEE5410]);
  OUTLINED_FUNCTION_30_7();
}

void sub_2431E0E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_14_6();
  v3 = OUTLINED_FUNCTION_20_8();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v2 - 96) = partial apply for closure #1 in AceService.sendCard(_:dialog:mode:);
  *(_QWORD *)(v2 - 88) = v3;
  *(_QWORD *)(v2 - 128) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v2 - 120) = 1107296256;
  OUTLINED_FUNCTION_50_6((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  OUTLINED_FUNCTION_28_8();
  swift_release();
  OUTLINED_FUNCTION_45_5();
  *(_QWORD *)(v2 - 128) = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type Searchfoundation_Card and conformance Searchfoundation_Card(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_11_7();
}

void sub_2431E0ED0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  const void *v20;
  void *v21;
  uint64_t v22;

  _Block_release(v20);

  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_31_8();
  OUTLINED_FUNCTION_43_6();
  OUTLINED_FUNCTION_43_0();
}

void closure #1 in AceService.sendResponse(_:dialog:mode:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  NSDictionary v3;
  Class isa;

  v2 = *(void **)(a1 + 24);
  if (a2)
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  isa = v3.super.isa;
  objc_msgSend(v2, sel_broadcastCommandDictionary_);

}

uint64_t AceService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AceService.__deallocating_deinit()
{
  AceService.deinit();
  return swift_deallocClassInstance();
}

void outlined bridged method (mbnn) of @objc SAUIVisualResponseSnippet.modelData.setter(uint64_t a1, unint64_t a2, void *a3)
{
  Class isa;

  isa = Data._bridgeToObjectiveC()().super.isa;
  outlined consume of Data._Representation(a1, a2);
  objc_msgSend(a3, sel_setModelData_, isa);

}

void outlined bridged method (mbnn) of @objc SAUIAddViews.views.setter(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for SAAceView);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setViews_, isa);

}

void outlined bridged method (mbgnn) of @objc SAUIAssistantUtteranceView.text.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x2494F5BB8]();
  objc_msgSend(a3, sel_setText_, v4);

}

void outlined bridged method (mbgnn) of @objc SAAceView.speakableText.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x2494F5BB8]();
  objc_msgSend(a3, sel_setSpeakableText_, v4);

}

void partial apply for closure #1 in AceService.sendResponse(_:dialog:mode:)()
{
  uint64_t v0;

  closure #1 in AceService.sendResponse(_:dialog:mode:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A];
  if (!lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for AceService()
{
  return objc_opt_self();
}

uint64_t method lookup function for AceService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AceService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)MEMORY[0x2494F5BB8]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);

}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_1_14(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter(v4, v6, v5, a4);
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_3_9@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for DispatchQoS();
}

uint64_t OUTLINED_FUNCTION_4_14@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return UUID.init()();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return type metadata accessor for DispatchTime();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return type metadata accessor for CharacterSet();
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = v0;
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_11_7()
{
  JUMPOUT(0x2494F60E0);
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_17_10(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  outlined bridged method (mbgnn) of @objc SAAceView.speakableText.setter(v2, v1, a1);
}

void OUTLINED_FUNCTION_18_9(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  outlined bridged method (mbgnn) of @objc SAUIAssistantUtteranceView.text.setter(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_19_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return UUID.uuidString.getter();
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

id OUTLINED_FUNCTION_25_7(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

uint64_t OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v3, a2, v4);
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_29_7(void *a1)
{
  uint64_t v1;

  outlined bridged method (mbnn) of @objc SAUIAddViews.views.setter(*(_QWORD *)(v1 - 88), a1);
}

void OUTLINED_FUNCTION_30_7()
{
  JUMPOUT(0x2494F5990);
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v0, *(_QWORD *)(v1 - 160));
}

void OUTLINED_FUNCTION_32_5()
{
  JUMPOUT(0x2494F5E10);
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_41_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_42_7()
{
  return static DispatchTime.now()();
}

uint64_t OUTLINED_FUNCTION_43_6()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  *(_QWORD *)(v2 - 96) = v0;
  return static CharacterSet.whitespacesAndNewlines.getter();
}

void *OUTLINED_FUNCTION_50_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10[2];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = result;
  v2 = MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = result + 32;
    while (v4 < *(_QWORD *)(v1 + 16))
    {
      outlined init with copy of SearchResultRanking(v5, (uint64_t)&v11);
      v6 = v12;
      v7 = v13;
      __swift_project_boxed_opaque_existential_1(&v11, v12);
      if ((ExtractionRule.isEnabled.getter(v6, v7) & 1) != 0)
      {
        outlined init with take of SageSearchClient(&v11, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v14;
        v9 = *(_QWORD *)(v14 + 16);
        if (v9 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v9 + 1;
        result = outlined init with take of SageSearchClient(v10, v8 + 40 * v9 + 32);
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
      }
      ++v4;
      v5 += 40;
      if (v3 == v4)
      {
        v2 = v14;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

void AnswerComposer.__allocating_init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v12 = OUTLINED_FUNCTION_153();
  v14 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v14);
  OUTLINED_FUNCTION_149();
  MEMORY[0x24BDAC7A8](v15);
  v17 = OUTLINED_FUNCTION_74_7(v16, a4);
  v18(v17);
  OUTLINED_FUNCTION_106_5();
  OUTLINED_FUNCTION_149();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_38_7(v20, v21, v23);
  specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(v6, v8, a3, v24, a5, v12, v14, v7, v13, v5);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_43_0();
}

uint64_t AnswerComposerResult.results.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_77_0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchResult(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_124_2((uint64_t)v8, (uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
    v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24334DB60;
    OUTLINED_FUNCTION_124_2((uint64_t)v5, v11 + v10);
  }
  else
  {
    v11 = *((_QWORD *)v8 + 2);
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t AnswerComposer.extractionRules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerComposer.enabledRules.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return specialized _ArrayProtocol.filter(_:)(v0);
}

uint64_t AnswerComposer.extractableTypes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 32);
    OUTLINED_FUNCTION_64();
    v4 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v5 = v3[3];
      v6 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v4 + 16);
      if (__OFADD__(v9, v8))
        break;
      v10 = v7;
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v4 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v4 = v11;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v12 = *(_QWORD *)(v4 + 16);
        v13 = (*(_QWORD *)(v4 + 24) >> 1) - v12;
        v14 = type metadata accessor for SearchResultType();
        if (v13 < v8)
          goto LABEL_24;
        v15 = *(_QWORD *)(v14 - 8);
        v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v17 = *(_QWORD *)(v15 + 72);
        v18 = v4 + v16 + v17 * v12;
        v19 = v10 + v16;
        v20 = v17 * v8;
        v21 = v18 + v20;
        v22 = v19 + v20;
        if (v19 < v21 && v18 < v22)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v8)
        {
          v24 = *(_QWORD *)(v4 + 16);
          v25 = __OFADD__(v24, v8);
          v26 = v24 + v8;
          if (v25)
            goto LABEL_25;
          *(_QWORD *)(v4 + 16) = v26;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_36_0();
      v3 += 5;
      if (!--v2)
      {
        OUTLINED_FUNCTION_6_1();
        return specialized Set.init<A>(_:)(v4);
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
    return specialized Set.init<A>(_:)(v4);
  }
  return result;
}

uint64_t specialized Set.init<A>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for SearchResultType();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x24BE6E238]);
  v9 = Set.init(minimumCapacity:)();
  v17 = v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v6, v11, v2);
      specialized Set._Variant.insert(_:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    v14 = v9;
    swift_bridgeObjectRelease();
  }
  return v14;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v7;
  uint64_t v8;

  v2 = Set.init(minimumCapacity:)();
  v8 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_159(&v7);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_6_1();
    return v8;
  }
  else
  {
    v5 = v2;
    OUTLINED_FUNCTION_6_1();
  }
  return v5;
}

_QWORD *specialized Set.init<A>(_:)(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  Swift::Int v11;
  uint64_t v12;
  _QWORD v13[4];
  uint64_t v14;

  v12 = Set.init(minimumCapacity:)();
  result = specialized _NativeDictionary.makeIterator()(v13, a1);
  v3 = v13[1];
  v4 = v13[3];
  v5 = v14;
  v6 = (unint64_t)(v13[2] + 64) >> 6;
  if (!v14)
    goto LABEL_3;
LABEL_2:
  v5 &= v5 - 1;
  while (1)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_159(&v11);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v7 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v7 >= v6)
      goto LABEL_21;
    v8 = *(_QWORD *)(v3 + 8 * v7);
    v9 = v4 + 1;
    if (!v8)
    {
      v9 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_21;
      v8 = *(_QWORD *)(v3 + 8 * v9);
      if (!v8)
      {
        v9 = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_21;
        v8 = *(_QWORD *)(v3 + 8 * v9);
        if (!v8)
        {
          v9 = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_21;
          v8 = *(_QWORD *)(v3 + 8 * v9);
          if (!v8)
          {
            v9 = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_21;
            v8 = *(_QWORD *)(v3 + 8 * v9);
            if (!v8)
            {
              v10 = v4 + 6;
              while (v10 < v6)
              {
                v8 = *(_QWORD *)(v3 + 8 * v10++);
                if (v8)
                {
                  v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (_QWORD *)v12;
            }
          }
        }
      }
    }
LABEL_18:
    v5 = (v8 - 1) & v8;
    v4 = v9;
  }
  __break(1u);
  return result;
}

void AnswerComposer.__allocating_init(resultHydrator:resolutionService:extractionRules:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_153();
  AnswerComposer.init(resultHydrator:resolutionService:extractionRules:)(a1, a2, a3);
  OUTLINED_FUNCTION_12();
}

void AnswerComposer.init(resultHydrator:resolutionService:extractionRules:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  outlined init with take of EagerResolutionService?(a2, v3 + 24);
  outlined init with take of SageSearchClient(a1, v3 + 64);
  *(_QWORD *)(v3 + 16) = a3;
  OUTLINED_FUNCTION_12();
}

void AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v14 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v14);
  OUTLINED_FUNCTION_149();
  MEMORY[0x24BDAC7A8](v15);
  v17 = OUTLINED_FUNCTION_74_7(v16, a5);
  v18(v17);
  OUTLINED_FUNCTION_106_5();
  OUTLINED_FUNCTION_149();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_38_7(v20, v21, v23);
  specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(v6, v8, a3, a4, v24, v25, v14, v7, v13, v5);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_43_0();
}

uint64_t AnswerComposer.composeAnswerFrom(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[13] = a6;
  v7[14] = v6;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  v8 = OUTLINED_FUNCTION_103_3();
  v7[15] = v8;
  v7[16] = *(_QWORD *)(v8 - 8);
  v7[17] = OUTLINED_FUNCTION_5_8();
  v7[18] = OUTLINED_FUNCTION_17();
  v7[19] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v7[20] = OUTLINED_FUNCTION_0_15();
  v7[21] = OUTLINED_FUNCTION_77_0();
  v7[22] = OUTLINED_FUNCTION_0_15();
  v9 = OUTLINED_FUNCTION_104_2();
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = OUTLINED_FUNCTION_5_8();
  v7[26] = OUTLINED_FUNCTION_17();
  v7[27] = OUTLINED_FUNCTION_17();
  v7[28] = OUTLINED_FUNCTION_17();
  v7[29] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerComposer.composeAnswerFrom(query:results:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t *v10;
  os_signpost_type_t v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t (*v20)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  if (one-time initialization token for search != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.search);
  swift_retain_n();
  v2 = OUTLINED_FUNCTION_93();
  v3 = static os_log_type_t.debug.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 112);
  if (v4)
  {
    v6 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v6 = 134218240;
    v7 = *(_QWORD *)((*(uint64_t (**)(void))(*(_QWORD *)v5 + 104))() + 16);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50();
    *(_QWORD *)(v0 + 56) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_50();
    *(_WORD *)(v6 + 12) = 1024;
    outlined init with copy of EagerResolutionService?(v5 + 24, v0 + 16);
    LODWORD(v7) = *(_QWORD *)(v0 + 40) != 0;
    outlined destroy of MobileSMSDocument?(v0 + 16, &demangling cache variable for type metadata for EagerResolutionService?);
    OUTLINED_FUNCTION_50();
    *(_DWORD *)(v0 + 304) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_50();
    _os_log_impl(&dword_24315F000, v2, v3, "AnswerComposer: Running %ld rules (w/ resolution=%{BOOL}d)", (uint8_t *)v6, 0x12u);
    specialized UnsafeMutablePointer.deallocate()();
  }
  swift_release_n();

  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_78_5();
  *(_QWORD *)(v0 + 240) = __swift_project_value_buffer(v8, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v9 = OSSignposter.logHandle.getter();
  static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v10 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v10);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v9, v11, v12, "AnswerComposer.composeAnswerFrom", "", v10);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v0 + 248) = OUTLINED_FUNCTION_73_2();
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v0 + 256) = v17;
  v17(v14, v15);
  v18 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 264) = v18;
  *v18 = v0;
  v18[1] = AnswerComposer.composeAnswerFrom(query:results:);
  return v20(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_47_3();
  v4 = *v3;
  *v5 = v4;
  v2[34] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_54();
    return OUTLINED_FUNCTION_3();
  }
  else
  {
    v2[35] = v0;
    v7 = (_QWORD *)OUTLINED_FUNCTION_6();
    v2[36] = v7;
    *v7 = v4;
    v7[1] = AnswerComposer.composeAnswerFrom(query:results:);
    return OUTLINED_FUNCTION_71_6(v0, v8);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint8_t *v14;
  os_signpost_type_t v15;
  os_signpost_id_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 296);
  if (*(_QWORD *)(v1 + 16) != 1)
  {
LABEL_4:
    v4 = (uint64_t *)(v0 + 208);
    v5 = *(_QWORD **)(v0 + 64);
    *v5 = 0;
    v5[1] = 0;
    v5[2] = v1;
    OUTLINED_FUNCTION_134();
    swift_storeEnumTagMultiPayload();
    v6 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_45_6();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_111_1() & 1) != 0)
    {
      v7 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 120);
      v9 = *(_QWORD *)(v0 + 128);
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  specialized Collection.first.getter(v1, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 160), &demangling cache variable for type metadata for SearchResult?);
    v1 = *(_QWORD *)(v0 + 296);
    goto LABEL_4;
  }
  v4 = (uint64_t *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 176);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_93_3(v11, v10);
  OUTLINED_FUNCTION_93_3(v10, v12);
  OUTLINED_FUNCTION_134();
  swift_storeEnumTagMultiPayload();
  v6 = OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_45_6();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_111_1() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
LABEL_8:
    swift_retain();
    OUTLINED_FUNCTION_106_1();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8) == *MEMORY[0x24BEE7810])
    {
      v13 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 128));
      v13 = "";
    }
    v14 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v14 = 0;
    OSSignpostID.rawValue.getter();
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v6, v15, v16, "AnswerComposer.composeAnswerFrom", v13, v14);
    specialized UnsafeMutablePointer.deallocate()();
  }
LABEL_10:
  v20 = *v4;
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v18 = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_63_7(v6);
  v17(v20, v18);
  swift_release();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  swift_task_dealloc();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_27_7(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_99_3();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_145() & 1) != 0)
  {
    OUTLINED_FUNCTION_75();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_96_4() == *MEMORY[0x24BEE7810])
    {
      v2 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 128));
      v2 = "";
    }
    v3 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v3);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v1, v4, v5, "AnswerComposer.composeAnswerFrom", v2, v3);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_63_7(v1);
  v6(v7, v8);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_27_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnswerComposer.composeAnswerFrom(query:results:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerComposer.extractInfo(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[49] = a5;
  v6[50] = v5;
  v6[47] = a3;
  v6[48] = a4;
  v6[45] = a1;
  v6[46] = a2;
  v7 = OUTLINED_FUNCTION_103_3();
  v6[51] = v7;
  v6[52] = *(_QWORD *)(v7 - 8);
  v6[53] = OUTLINED_FUNCTION_5_8();
  v6[54] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v6[55] = OUTLINED_FUNCTION_0_15();
  v8 = OUTLINED_FUNCTION_77_0();
  v6[56] = v8;
  v6[57] = *(_QWORD *)(v8 - 8);
  v6[58] = OUTLINED_FUNCTION_5_8();
  v6[59] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedInfo?);
  v6[60] = OUTLINED_FUNCTION_0_15();
  v9 = type metadata accessor for ExtractedInfo(0);
  v6[61] = v9;
  v6[62] = *(_QWORD *)(v9 - 8);
  v6[63] = OUTLINED_FUNCTION_5_8();
  v6[64] = OUTLINED_FUNCTION_17();
  v6[65] = OUTLINED_FUNCTION_17();
  v6[66] = OUTLINED_FUNCTION_17();
  v10 = type metadata accessor for ExtractedResult(0);
  v6[67] = v10;
  v6[68] = *(_QWORD *)(v10 - 8);
  v6[69] = OUTLINED_FUNCTION_5_8();
  v6[70] = OUTLINED_FUNCTION_17();
  v11 = OUTLINED_FUNCTION_104_2();
  v6[71] = v11;
  v6[72] = *(_QWORD *)(v11 - 8);
  v6[73] = OUTLINED_FUNCTION_5_8();
  v6[74] = OUTLINED_FUNCTION_17();
  v6[75] = OUTLINED_FUNCTION_17();
  v6[76] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

#error "2431E31DC: call analysis failed (funcsize=266)"

uint64_t AnswerComposer.extractInfo(query:results:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_47_3();
  *v4 = *v3;
  *(_QWORD *)(v2 + 688) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 696) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 696);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v0 + 736) = 1;
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  OUTLINED_FUNCTION_93_2((_QWORD *)(v0 + 136));
  v3 = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 704) = v3;
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v2 + 40)
                                                                                         + *(_QWORD *)(v2 + 40));
  OUTLINED_FUNCTION_23_0();
  v4 = (_QWORD *)OUTLINED_FUNCTION_109_3();
  *(_QWORD *)(v0 + 712) = v4;
  *v4 = v0;
  v4[1] = AnswerComposer.extractInfo(query:results:);
  return v6(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384), v3, v1, v2);
}

{
  uint64_t v0;
  NSObject *v1;
  const char *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OSSignposter.logHandle.getter();
  OUTLINED_FUNCTION_99_3();
  static os_signpost_type_t.end.getter();
  if ((OUTLINED_FUNCTION_145() & 1) != 0)
  {
    OUTLINED_FUNCTION_75();
    checkForErrorAndConsumeState(state:)();
    OUTLINED_FUNCTION_50();
    if (OUTLINED_FUNCTION_96_4() == *MEMORY[0x24BEE7810])
    {
      v2 = "[Error] Interval already ended";
    }
    else
    {
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 416));
      v2 = "";
    }
    v3 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_55_1(v3);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v1, v4, v5, "AnswerComposer.extractInfo", v2, v3);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v7 = *(_QWORD *)(v0 + 584);
  v8 = *(_QWORD *)(v0 + 568);

  v6(v7, v8);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_69_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnswerComposer.extractInfo(query:results:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 720) = a1;
  *(_QWORD *)(v3 + 728) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

#error "2431E3CD8: call analysis failed (funcsize=521)"

#error "2431E4410: call analysis failed (funcsize=272)"

uint64_t AnswerComposer.resolve(extractedResults:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[17] = a1;
  v2[18] = v1;
  v2[19] = type metadata accessor for ExtractedInfo(0);
  v2[20] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  v2[21] = OUTLINED_FUNCTION_0_15();
  v3 = OUTLINED_FUNCTION_103_3();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = OUTLINED_FUNCTION_5_8();
  v2[25] = OUTLINED_FUNCTION_17();
  v4 = OUTLINED_FUNCTION_77_0();
  v2[26] = v4;
  v2[27] = *(_QWORD *)(v4 - 8);
  v2[28] = OUTLINED_FUNCTION_5_8();
  v2[29] = OUTLINED_FUNCTION_17();
  v2[30] = OUTLINED_FUNCTION_17();
  v2[31] = OUTLINED_FUNCTION_17();
  v2[32] = OUTLINED_FUNCTION_17();
  v2[33] = OUTLINED_FUNCTION_17();
  type metadata accessor for ResolvedInfo();
  v2[34] = OUTLINED_FUNCTION_0_15();
  v5 = type metadata accessor for ExtractedResult(0);
  v2[35] = v5;
  v2[36] = *(_QWORD *)(v5 - 8);
  v2[37] = OUTLINED_FUNCTION_5_8();
  v2[38] = OUTLINED_FUNCTION_17();
  v2[39] = OUTLINED_FUNCTION_17();
  v6 = OUTLINED_FUNCTION_104_2();
  v2[40] = v6;
  v2[41] = *(_QWORD *)(v6 - 8);
  v2[42] = OUTLINED_FUNCTION_5_8();
  v2[43] = OUTLINED_FUNCTION_17();
  v2[44] = OUTLINED_FUNCTION_17();
  v2[45] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerComposer.resolve(extractedResults:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  const char *v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t v49;

  OUTLINED_FUNCTION_105_4();
  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_78_5();
  *(_QWORD *)(v0 + 368) = __swift_project_value_buffer(v1, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v2 = OSSignposter.logHandle.getter();
  v3 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v5 = OUTLINED_FUNCTION_55_1(v4);
    OUTLINED_FUNCTION_52_2(&dword_24315F000, v2, v3, v5, "AnswerComposer.resolve", "", v4);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v0 + 376) = OUTLINED_FUNCTION_73_2();
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v0 + 384) = v11;
  v11(v7, v9);
  outlined init with copy of EagerResolutionService?(v10 + 24, v0 + 56);
  v12 = *(_QWORD *)(v0 + 136);
  if (*(_QWORD *)(v0 + 80))
  {
    outlined init with take of SageSearchClient((__int128 *)(v0 + 56), v0 + 16);
    v13 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v0 + 392) = v13;
    if (v13)
    {
      v14 = *(_QWORD *)(v0 + 288);
      v15 = *(_QWORD *)(v0 + 136);
      v16 = *(_DWORD *)(v14 + 80);
      *(_DWORD *)(v0 + 440) = v16;
      v17 = MEMORY[0x24BEE4AF8];
      v18 = *(_QWORD *)(v14 + 72);
      *(_QWORD *)(v0 + 408) = 0;
      *(_QWORD *)(v0 + 416) = v17;
      *(_QWORD *)(v0 + 400) = v18;
      v19 = *(_QWORD *)(v0 + 312);
      v20 = v15 + ((v16 + 32) & ~(unint64_t)v16);
      swift_bridgeObjectRetain();
      outlined init with copy of SearchResult(v20, v19, type metadata accessor for ExtractedResult);
      OUTLINED_FUNCTION_93_2((_QWORD *)(v0 + 16));
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 424) = v21;
      v22 = OUTLINED_FUNCTION_28_9(v21);
      return OUTLINED_FUNCTION_14_7(v22, v23, v24, v25);
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    v41 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_122_0() & 1) != 0)
    {
      swift_retain();
      OUTLINED_FUNCTION_106_1();
      swift_release();
      if (OUTLINED_FUNCTION_103_5() == *MEMORY[0x24BEE7810])
        goto LABEL_24;
      goto LABEL_27;
    }
    v49 = *(_QWORD *)(v0 + 344);
  }
  else
  {
    outlined destroy of MobileSMSDocument?(v0 + 56, &demangling cache variable for type metadata for EagerResolutionService?);
    v27 = *(_QWORD *)(v12 + 16);
    if (v27)
    {
      v28 = *(_QWORD *)(v0 + 216);
      OUTLINED_FUNCTION_143();
      v30 = *(_QWORD *)(v29 + 72);
      swift_bridgeObjectRetain();
      v31 = MEMORY[0x24BEE4AF8];
      do
      {
        v32 = *(_QWORD *)(v0 + 304);
        v33 = *(_QWORD *)(v0 + 208);
        v34 = *(_QWORD *)(v0 + 168);
        outlined init with copy of SearchResult(v7, v32, type metadata accessor for ExtractedResult);
        ExtractedResult.buildAnswerResult()(v34);
        __swift_storeEnumTagSinglePayload(v34, 0, 1, v33);
        _s10OmniSearch0B6ResultVWOhTm_1(v32, type metadata accessor for ExtractedResult);
        if (__swift_getEnumTagSinglePayload(v34, 1, v33) == 1)
        {
          outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 168), &demangling cache variable for type metadata for SearchResult?);
        }
        else
        {
          v36 = *(_QWORD *)(v0 + 232);
          v35 = *(_QWORD *)(v0 + 240);
          OUTLINED_FUNCTION_78_7(*(_QWORD *)(v0 + 168), v35);
          OUTLINED_FUNCTION_78_7(v35, v36);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_24_6();
            v31 = v39;
          }
          v37 = *(_QWORD *)(v31 + 16);
          if (v37 >= *(_QWORD *)(v31 + 24) >> 1)
          {
            OUTLINED_FUNCTION_25_8();
            v31 = v40;
          }
          v38 = *(_QWORD *)(v0 + 232);
          *(_QWORD *)(v31 + 16) = v37 + 1;
          outlined init with take of SearchResult(v38, v31+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v37, type metadata accessor for SearchResult);
        }
        v7 += v30;
        --v27;
      }
      while (v27);
      OUTLINED_FUNCTION_160();
    }
    v7 = *(_QWORD *)(v0 + 336);
    v41 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_63_5();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_122_0() & 1) != 0)
    {
      swift_retain();
      OUTLINED_FUNCTION_106_1();
      OUTLINED_FUNCTION_3_6();
      if (OUTLINED_FUNCTION_103_5() == *MEMORY[0x24BEE7810])
      {
LABEL_24:
        v42 = "[Error] Interval already ended";
        goto LABEL_28;
      }
LABEL_27:
      OUTLINED_FUNCTION_40(*(_QWORD *)(v0 + 184));
      v42 = "";
LABEL_28:
      v43 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v43 = 0;
      v44 = OSSignpostID.rawValue.getter();
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v41, (os_signpost_type_t)v7, v44, "AnswerComposer.resolve", v42, v43);
      specialized UnsafeMutablePointer.deallocate()();
    }
    v49 = *(_QWORD *)(v0 + 336);
  }
  v45 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v46 = *(_QWORD *)(v0 + 320);

  v45(v49, v46);
  swift_release();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_56();
  swift_task_dealloc();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_122();
  swift_task_dealloc();
  v47 = OUTLINED_FUNCTION_90_4();
  return OUTLINED_FUNCTION_15_8(v47, v48);
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint8_t *v31;
  const char *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _WORD *v41;
  os_signpost_type_t v42;
  os_signpost_id_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t v46;

  OUTLINED_FUNCTION_105_4();
  if (one-time initialization token for search != -1)
    swift_once();
  v1 = (void *)v0[54];
  v2 = v0[39];
  v3 = v0[37];
  v4 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v4, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(v2, v3, type metadata accessor for ExtractedResult);
  v5 = v1;
  v6 = v1;
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.error.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = (void *)v0[54];
  v11 = v0[37];
  if (v9)
  {
    v12 = v0[35];
    v13 = v0[20];
    v14 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v15 = (_QWORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v14 = 136315394;
    outlined init with copy of SearchResult(v11 + *(int *)(v12 + 20), v13, type metadata accessor for ExtractedInfo);
    v16 = String.init<A>(describing:)();
    OUTLINED_FUNCTION_58_4(v16, v17);
    *(_QWORD *)(v14 + 4) = v18;
    OUTLINED_FUNCTION_26_0();
    _s10OmniSearch0B6ResultVWOhTm_1(v11, type metadata accessor for ExtractedResult);
    *(_WORD *)(v14 + 12) = 2112;
    v19 = v10;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v14 + 14) = v20;
    *v15 = v20;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17_2(&dword_24315F000, v7, v8, "Eager resolution failed: %s - %@", (uint8_t *)v14);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  _s10OmniSearch0B6ResultVWOhTm_1(v0[37], type metadata accessor for ExtractedResult);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10();

  ExtractedResult.buildAnswerResult()(v0[28]);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = v0[52];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_24_6();
    v22 = v46;
  }
  v23 = *(_QWORD *)(v22 + 16);
  if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
    OUTLINED_FUNCTION_25_8();
  v24 = (void *)v0[54];
  OUTLINED_FUNCTION_94_3();
  outlined init with take of SearchResult(v27, v26 + v25 * v23, type metadata accessor for SearchResult);

  v28 = OUTLINED_FUNCTION_157();
  _s10OmniSearch0B6ResultVWOhTm_1(v28, type metadata accessor for ExtractedResult);
  if ((void *)(v23 + 1) == v24)
  {
    OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_89_6();
    v29 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_45_6();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_111_1() & 1) != 0)
    {
      v31 = (uint8_t *)v0[22];
      v30 = v0[23];
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_109_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 88)) == *MEMORY[0x24BEE7810])
      {
        v32 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(v0[23]);
        v32 = "";
      }
      v41 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_98_3(v41);
      OUTLINED_FUNCTION_79();
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v29, v42, v43, "AnswerComposer.resolve", v32, v31);
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_5_14();
    OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_91();
    swift_task_dealloc();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_67_2();
    OUTLINED_FUNCTION_122();
    v44 = OUTLINED_FUNCTION_90_4();
    return OUTLINED_FUNCTION_15_8(v44, v45);
  }
  else
  {
    v33 = OUTLINED_FUNCTION_40_2();
    outlined init with copy of SearchResult(v33, v34, type metadata accessor for ExtractedResult);
    OUTLINED_FUNCTION_93_2(v0 + 2);
    v35 = (_QWORD *)swift_task_alloc();
    v0[53] = v35;
    v36 = OUTLINED_FUNCTION_28_9(v35);
    return OUTLINED_FUNCTION_14_7(v36, v37, v38, v39);
  }
}

uint64_t AnswerComposer.resolve(extractedResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint8_t *v63;
  const char *v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _WORD *v73;
  os_signpost_type_t v74;
  os_signpost_id_t v75;
  uint64_t v76;
  uint64_t (*v77)(void);
  uint64_t v78;

  OUTLINED_FUNCTION_105_4();
  a33 = v35;
  a34 = v36;
  a32 = v34;
  ExtractedResult.updateResultWith(_:)(*(uint64_t **)(v34 + 272), *(_QWORD *)(v34 + 264));
  if (one-time initialization token for search != -1)
    swift_once();
  v37 = *(_QWORD *)(v34 + 256);
  v38 = *(_QWORD *)(v34 + 264);
  v39 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v39, (uint64_t)static Logging.search);
  outlined init with copy of SearchResult(v38, v37, type metadata accessor for SearchResult);
  v40 = Logger.logObject.getter();
  v41 = static os_log_type_t.info.getter();
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v34 + 256);
  if (v42)
  {
    v44 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v45 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    OUTLINED_FUNCTION_129_1(v45);
    *(_DWORD *)v44 = 136315138;
    SearchResultItem.associatedValue.getter();
    v46 = *(_QWORD *)(v34 + 120);
    v47 = *(_QWORD *)(v34 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v34 + 96), v46);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 56))(v46, v47);
    v50 = v49;
    __swift_destroy_boxed_opaque_existential_1(v34 + 96);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, &a23);
    *(_QWORD *)(v44 + 4) = v51;
    OUTLINED_FUNCTION_26_0();
    _s10OmniSearch0B6ResultVWOhTm_1(v43, type metadata accessor for SearchResult);
    _os_log_impl(&dword_24315F000, v40, v41, "Resolved: %s", (uint8_t *)v44, 0xCu);
    OUTLINED_FUNCTION_34_2();
    specialized UnsafeMutablePointer.deallocate()();
  }
  _s10OmniSearch0B6ResultVWOhTm_1(*(_QWORD *)(v34 + 256), type metadata accessor for SearchResult);

  outlined init with copy of SearchResult(*(_QWORD *)(v34 + 264), *(_QWORD *)(v34 + 248), type metadata accessor for SearchResult);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53 = *(_QWORD *)(v34 + 416);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_24_6();
    v53 = v78;
  }
  v54 = *(uint64_t (**)(uint64_t))(v53 + 16);
  if ((unint64_t)v54 >= *(_QWORD *)(v53 + 24) >> 1)
    OUTLINED_FUNCTION_25_8();
  v56 = *(_QWORD *)(v34 + 264);
  v55 = *(_QWORD *)(v34 + 272);
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_124_2(v59, v58 + v57 * (_QWORD)v54);
  _s10OmniSearch0B6ResultVWOhTm_1(v56, type metadata accessor for SearchResult);
  _s10OmniSearch0B6ResultVWOhTm_1(v55, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedInfo);
  v60 = OUTLINED_FUNCTION_157();
  _s10OmniSearch0B6ResultVWOhTm_1(v60, type metadata accessor for ExtractedResult);
  if (type metadata accessor for SearchResult == v54)
  {
    OUTLINED_FUNCTION_160();
    __swift_destroy_boxed_opaque_existential_1(v34 + 16);
    v61 = OSSignposter.logHandle.getter();
    OUTLINED_FUNCTION_63_5();
    static os_signpost_type_t.end.getter();
    if ((OUTLINED_FUNCTION_111_1() & 1) != 0)
    {
      v63 = *(uint8_t **)(v34 + 176);
      v62 = *(_QWORD *)(v34 + 184);
      OUTLINED_FUNCTION_75();
      OUTLINED_FUNCTION_109_2();
      OUTLINED_FUNCTION_50();
      if (OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88)) == *MEMORY[0x24BEE7810])
      {
        v64 = "[Error] Interval already ended";
      }
      else
      {
        OUTLINED_FUNCTION_40(*(_QWORD *)(v34 + 184));
        v64 = "";
      }
      v73 = (_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      OUTLINED_FUNCTION_98_3(v73);
      OUTLINED_FUNCTION_79();
      OUTLINED_FUNCTION_52_2(&dword_24315F000, v61, v74, v75, "AnswerComposer.resolve", v64, v63);
      specialized UnsafeMutablePointer.deallocate()();
    }
    OUTLINED_FUNCTION_5_14();
    OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_91();
    swift_task_dealloc();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_54_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_74_2();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_68_2();
    OUTLINED_FUNCTION_67_2();
    OUTLINED_FUNCTION_122();
    v76 = OUTLINED_FUNCTION_90_4();
    return OUTLINED_FUNCTION_15_8(v76, v77);
  }
  else
  {
    v65 = OUTLINED_FUNCTION_40_2();
    outlined init with copy of SearchResult(v65, v66, type metadata accessor for ExtractedResult);
    OUTLINED_FUNCTION_93_2((_QWORD *)(v34 + 16));
    v67 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v34 + 424) = v67;
    v68 = OUTLINED_FUNCTION_28_9(v67);
    return OUTLINED_FUNCTION_14_7(v68, v69, v70, v71);
  }
}

uint64_t AnswerComposer.nonExtractableResults(_:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_75();
  return specialized Sequence.compactMap<A>(_:)(a1, v1);
}

uint64_t AnswerComposer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  outlined destroy of MobileSMSDocument?(v0 + 24, &demangling cache variable for type metadata for EagerResolutionService?);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t AnswerComposer.__deallocating_deinit()
{
  AnswerComposer.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for AnswerComposable.composeAnswerFrom(query:results:) in conformance AnswerComposer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v6 + 136)
                                                                                     + *(_QWORD *)(**(_QWORD **)v6
                                                                                                 + 136));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t specialized AnswerComposer.init(answerSynthesisService:resultHydrator:resolutionService:lang:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  char *v38;
  os_signpost_type_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint8_t *v44;
  os_signpost_id_t v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55[2];
  uint64_t v56[5];
  uint64_t v57[6];

  v53 = a6;
  v54 = a3;
  v50 = a4;
  v51 = a5;
  v49 = type metadata accessor for OSSignpostError();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSSignpostID();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v47 - v22;
  v57[3] = a7;
  v57[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  v56[3] = a8;
  v56[4] = a10;
  v25 = __swift_allocate_boxed_opaque_existential_1(v56);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v25, a2, a8);
  if (one-time initialization token for searchSignposter != -1)
    swift_once();
  v26 = type metadata accessor for OSSignposter();
  __swift_project_value_buffer(v26, (uint64_t)static Logging.searchSignposter);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  v27 = OSSignposter.logHandle.getter();
  v28 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_24315F000, v27, v28, v30, "AnswerComposer.init", "", v29, 2u);
    MEMORY[0x2494F6D70](v29, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v23, v15);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  OSSignpostIntervalState.init(id:isOpen:)();
  v31 = *(void (**)(char *, uint64_t))(v16 + 8);
  v31(v23, v15);
  v32 = v53;
  outlined init with copy of EagerResolutionService?(v54, v53 + 24);
  outlined init with copy of SearchResultRanking((uint64_t)v56, v32 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ExtractionRule>);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2433505B0;
  *(_QWORD *)(v33 + 56) = &type metadata for InstantAnswerExtraction;
  *(_QWORD *)(v33 + 64) = &protocol witness table for InstantAnswerExtraction;
  outlined init with copy of SearchResultRanking((uint64_t)v57, (uint64_t)v55);
  *(_QWORD *)(v33 + 96) = &type metadata for AnswerSynthesisExtraction;
  *(_QWORD *)(v33 + 104) = &protocol witness table for AnswerSynthesisExtraction;
  v34 = swift_allocObject();
  *(_QWORD *)(v33 + 72) = v34;
  *(_BYTE *)(v34 + 56) = 1;
  if (one-time initialization token for supportedTypes != -1)
    swift_once();
  *(_QWORD *)(v34 + 64) = static AnswerSynthesisController.supportedTypes;
  outlined init with take of SageSearchClient(v55, v34 + 16);
  *(_QWORD *)(v33 + 136) = &type metadata for MediaURLAnswer;
  *(_QWORD *)(v33 + 144) = &protocol witness table for MediaURLAnswer;
  *(_BYTE *)(v33 + 112) = 1;
  *(_QWORD *)(v33 + 176) = &type metadata for CalendarLocationAnswer;
  *(_QWORD *)(v33 + 184) = &protocol witness table for CalendarLocationAnswer;
  *(_QWORD *)(v33 + 216) = &type metadata for WalletLocationAnswer;
  *(_QWORD *)(v33 + 224) = &protocol witness table for WalletLocationAnswer;
  *(_QWORD *)(v33 + 256) = &type metadata for FlightFromExtractedAnswer;
  *(_QWORD *)(v33 + 264) = &protocol witness table for FlightFromExtractedAnswer;
  *(_BYTE *)(v33 + 232) = 3;
  v35 = v50;
  v36 = v51;
  *(_QWORD *)(v33 + 120) = v50;
  *(_QWORD *)(v33 + 128) = v36;
  *(_QWORD *)(v33 + 296) = &type metadata for MediaNameAnswer;
  *(_QWORD *)(v33 + 304) = &protocol witness table for MediaNameAnswer;
  *(_QWORD *)(v33 + 272) = v35;
  *(_QWORD *)(v33 + 280) = v36;
  *(_QWORD *)(v32 + 16) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = OSSignposter.logHandle.getter();
  v38 = v52;
  OSSignpostIntervalState.signpostID.getter();
  v39 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    swift_retain();
    v40 = v47;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    v41 = v48;
    v42 = v49;
    if ((*(unsigned int (**)(char *, uint64_t))(v48 + 88))(v40, v49) == *MEMORY[0x24BEE7810])
    {
      v43 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
      v43 = "";
    }
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    v45 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_24315F000, v37, v39, v45, "AnswerComposer.init", v43, v44, 2u);
    MEMORY[0x2494F6D70](v44, -1, -1);
  }

  v31(v38, v15);
  swift_release();
  outlined destroy of MobileSMSDocument?(v54, &demangling cache variable for type metadata for EagerResolutionService?);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  return v32;
}

uint64_t type metadata accessor for AnswerComposerResult()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AnswerComposerResult;
  if (!type metadata singleton initialization cache for AnswerComposerResult)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with take of EagerResolutionService?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EagerResolutionService?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of EagerResolutionService?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EagerResolutionService?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of AnswerComposable.composeAnswerFrom(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = partial apply for closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t *initializeBufferWithCopyOfBuffer for AnswerComposerResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for SearchResultItem(0);
      v6 = (char *)&loc_2431E5B54 + 4 * word_243350830[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AnswerComposerResult(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int EnumTagSinglePayload;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = (int *)type metadata accessor for EmailDocument(0);
        v3 = a1 + v2[12];
        v4 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = a1 + v2[17];
        v6 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        v7 = v2[18];
        goto LABEL_21;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = (int *)type metadata accessor for MobileSMSDocument(0);
        v9 = a1 + v8[10];
        v10 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        v11 = a1 + v8[11];
        v12 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        v13 = a1 + v8[12];
        if (!__swift_getEnumTagSinglePayload(v13, 1, v12))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v13, v12);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = (int *)type metadata accessor for CalendarEvent(0);
        v14 = a1 + v8[7];
        v15 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        v16 = a1 + v8[8];
        if (!__swift_getEnumTagSinglePayload(v16, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = a1 + v8[13];
        v18 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
LABEL_20:
        v7 = v8[14];
LABEL_21:
        if (!*(_QWORD *)(a1 + v7))
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for Photo(0);
        v20 = a1 + *(int *)(v19 + 44);
        v21 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = *(int *)(v19 + 64);
        goto LABEL_68;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = (int *)type metadata accessor for NoteDocument(0);
        v24 = a1 + v23[8];
        v25 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v24, 1, v25))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        v26 = a1 + v23[9];
        if (!__swift_getEnumTagSinglePayload(v26, 1, v25))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v26, v25);
        v22 = v23[10];
        goto LABEL_68;
      case 5u:
        swift_bridgeObjectRelease();

        v22 = *(int *)(type metadata accessor for FileDocument(0) + 24);
        goto LABEL_68;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for WalletTransaction(0);
        v28 = a1 + *(int *)(v27 + 28);
        v29 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v28, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = *(int *)(v27 + 52);
        goto LABEL_68;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = type metadata accessor for WalletPass(0);
        v31 = a1 + *(int *)(v30 + 28);
        v32 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
        swift_bridgeObjectRelease();
        v22 = *(int *)(v30 + 36);
        goto LABEL_68;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = *(int *)(type metadata accessor for Contact(0) + 36);
        goto LABEL_68;
      case 9u:
        swift_bridgeObjectRelease();
        v33 = (int *)type metadata accessor for FlightReservation(0);
        v34 = a1 + v33[5];
        v35 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = a1 + v33[11];
        if (!__swift_getEnumTagSinglePayload(v36, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v36, v35);
        v37 = a1 + v33[12];
        if (!__swift_getEnumTagSinglePayload(v37, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v37, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = a1 + v33[15];
        v39 = type metadata accessor for DateComponents();
        v40 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
        v40(v38, v39);
        v40(a1 + v33[16], v39);
        v41 = a1 + v33[17];
        v42 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v41, 1, v42))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
        v43 = a1 + v33[18];
        if (!__swift_getEnumTagSinglePayload(v43, 1, v42))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v43, v42);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_65;
      case 0xAu:
        swift_bridgeObjectRelease();
        v45 = (int *)type metadata accessor for HotelReservation(0);
        v46 = a1 + v45[5];
        v47 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v48 = a1 + v45[12];
        v49 = type metadata accessor for DateComponents();
        v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8);
        v50(v48, v49);
        v50(a1 + v45[13], v49);
        v51 = a1 + v45[14];
        v52 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      case 0xBu:
        swift_bridgeObjectRelease();
        v53 = (int *)type metadata accessor for RestaurantReservation(0);
        v54 = a1 + v53[5];
        v55 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v54, 1, v55))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = a1 + v53[12];
        v57 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
        swift_bridgeObjectRelease();
        v58 = a1 + v53[14];
        v59 = type metadata accessor for TimeZone();
        if (!__swift_getEnumTagSinglePayload(v58, 1, v59))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      case 0xCu:
        swift_bridgeObjectRelease();
        v60 = type metadata accessor for GlobalItem();
        v61 = a1 + *(int *)(v60 + 20);
        v62 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v61, 1, v62))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63 = (uint64_t *)(a1 + *(int *)(v60 + 32));
        v64 = v63[1];
        if (v64 >> 60 != 15)
          outlined consume of Data._Representation(*v63, v64);
        v44 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_65:
        __swift_instantiateConcreteTypeFromMangledName(v44);
LABEL_66:
        swift_bridgeObjectRelease();
        break;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = *(int *)(type metadata accessor for AppEntityItem() + 32);
LABEL_68:
        v65 = a1 + v22;
        v66 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v65, 1, v66))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
        break;
      case 0xEu:
        swift_bridgeObjectRelease();
        v67 = type metadata accessor for IntentFileItem();
        v68 = a1 + *(int *)(v67 + 20);
        v69 = type metadata accessor for URL();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v68, 1, v69);
        v71 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8);
        if (!EnumTagSinglePayload)
          v71(v68, v69);
        v71(a1 + *(int *)(v67 + 24), v69);
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        v72 = type metadata accessor for Answer(0);
        v73 = a1 + *(int *)(v72 + 20);
        v74 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v73, 1, v74))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v75 = a1 + *(int *)(v72 + 40);
        if (!__swift_getEnumTagSinglePayload(v75, 1, v74))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v75, v74);
        break;
      default:
        break;
    }

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AnswerComposerResult(_QWORD *a1, _QWORD *a2)
{
  char *v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for SearchResultItem(0);
    v4 = (char *)&loc_2431E85AC + 4 * word_243350870[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for AnswerComposerResult(_QWORD *a1, _QWORD *a2)
{
  char *v4;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AnswerComposerResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for SearchResultItem(0);
      v4 = (char *)&loc_2431EA294 + 4 * word_243350890[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for AnswerComposerResult(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for SearchResultItem(0);
    v6 = (char *)&loc_2431EC208 + 4 * word_2433508B0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for AnswerComposerResult(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (a1 != a2)
  {
    _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AnswerComposerResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for SearchResultItem(0);
      v6 = (char *)&loc_2431ED5E4 + 4 * word_2433508D0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t destructiveInjectEnumTag for AnswerComposerResult()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for AnswerComposerResult()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SearchResult(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AnswerComposer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnswerComposer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnswerComposer.enabledRules.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AnswerComposer.extractableTypes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AnswerComposer.__allocating_init(resultHydrator:resolutionService:extractionRules:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AnswerComposer.__allocating_init(answerSynthesisService:resultHydrator:resolutionService:lang:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AnswerComposer.composeAnswerFrom(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AnswerComposer.extractInfo(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = dispatch thunk of AnswerComposer.extractInfo(query:results:);
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AnswerComposer.extractInfo(query:results:)()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_2();
  v0 = OUTLINED_FUNCTION_90_4();
  return v1(v0);
}

uint64_t dispatch thunk of AnswerComposer.resolve(extractedResults:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v3 = (_QWORD *)OUTLINED_FUNCTION_25_5();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = protocol witness for SearchEntityPreprocess.preprocess(data:query:) in conformance SmartChunkingPreprocessing;
  return OUTLINED_FUNCTION_71_6(a1, v5);
}

uint64_t dispatch thunk of AnswerComposer.nonExtractableResults(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_2431EEBB4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void OUTLINED_FUNCTION_1_15()
{
  void *v0;

}

void OUTLINED_FUNCTION_5_14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v0 + 160);

}

uint64_t OUTLINED_FUNCTION_9_12()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 400) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 400) + 88));
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_10_13(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  *(_QWORD *)(v2 + 704) = *(_QWORD *)(v2 + 352);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_12_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_13_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_14_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return EagerResolutionService.resolveExtractedResult(_:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_15_8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_17_11@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 360);
}

uint64_t OUTLINED_FUNCTION_19_10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 392);
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v0);
  *(_WORD *)(v1 + 12) = 2080;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v1 + 200));
  return swift_getDynamicType();
}

void OUTLINED_FUNCTION_24_6()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_25_8()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_26_8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_27_7(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_28_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 272);
}

void OUTLINED_FUNCTION_29_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_38_7@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

unint64_t OUTLINED_FUNCTION_40_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 400);
  v3 = *(_QWORD *)(v1 + 408) + 1;
  *(_QWORD *)(v1 + 408) = v3;
  *(_QWORD *)(v1 + 416) = v0;
  return *(_QWORD *)(v1 + 136)
       + ((*(unsigned __int8 *)(v1 + 440) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 440))
       + v2 * v3;
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_57_4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 80));
}

void OUTLINED_FUNCTION_58_4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 80));
}

BOOL OUTLINED_FUNCTION_62_5(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_63_7(void *a1@<X8>)
{

}

uint64_t OUTLINED_FUNCTION_67_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = v0;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_71_6(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

char *OUTLINED_FUNCTION_74_7@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_76_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 672) = a1;
  outlined init with copy of SearchResultRanking(v1, v2);
}

void OUTLINED_FUNCTION_77_4()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 664);
}

void OUTLINED_FUNCTION_78_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_85_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_86_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_89_6()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void OUTLINED_FUNCTION_93_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(a1, a2, v2);
}

void OUTLINED_FUNCTION_94_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_96_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_97_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return a20;
}

uint64_t OUTLINED_FUNCTION_98_3(_WORD *a1)
{
  *a1 = 0;
  return OSSignpostID.rawValue.getter();
}

uint64_t OUTLINED_FUNCTION_99_3()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OUTLINED_FUNCTION_103_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_106_5()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_113_2()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_114_4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_115_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 336) = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_121_2(float a1)
{
  uint64_t (*v1)(void);
  float *v2;

  *v2 = a1;
  return v1();
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return OS_os_log.signpostsEnabled.getter();
}

void OUTLINED_FUNCTION_124_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of SearchResult(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_129_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_134()
{
  return type metadata accessor for AnswerComposerResult();
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return _typeName(_:qualified:)();
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_139(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of SearchResultRanking(a1 + 32, v1);
}

void OUTLINED_FUNCTION_141()
{
  JUMPOUT(0x2494F5E4CLL);
}

uint64_t OUTLINED_FUNCTION_145()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t OUTLINED_FUNCTION_146()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_147()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of SearchResultRanking(v0, v1);
}

uint64_t OUTLINED_FUNCTION_150()
{
  return String.init<A>(describing:)();
}

uint64_t OUTLINED_FUNCTION_153()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_157()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 312);
}

uint64_t OUTLINED_FUNCTION_159(Swift::Int *a1)
{
  Swift::Int v1;
  Swift::Int v2;

  return specialized Set._Variant.insert(_:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_160()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_161()
{
  JUMPOUT(0x2494F5E4CLL);
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1)
{
  return specialized _arrayConditionalCast<A, B>(_:)(a1, &lazy cache variable for type metadata for IMSPIMessage);
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  _BYTE v7[32];
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v4)
    return v8;
  for (i = a1 + 32; ; i += 32)
  {
    outlined init with copy of Any(i, (uint64_t)v7);
    type metadata accessor for SFCardSection(0, a2);
    if (!swift_dynamicCast())
      break;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v4)
      return v8;
  }
  swift_release();

  return 0;
}

uint64_t SearchOverrideError.message.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_4_7();
  return v1;
}

void static SearchOverrideError.invalidPayload(_:)(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_47_6(a1, a2, 19, 17, 0x800000024335C660, a3);
}

OmniSearch::SearchOverrideError __swiftcall SearchOverrideError.init(message:)(OmniSearch::SearchOverrideError message)
{
  OmniSearch::SearchOverrideError *v1;

  *v1 = message;
  return message;
}

void static SearchOverrideError.nilResult()(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000045;
  a1[1] = 0x800000024335C680;
}

void static SearchOverrideError.unsupported(_:)(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_47_6(a1, a2, 24, 22, 0x800000024335C6D0, a3);
}

void static SearchOverrideError.invalidPayload(_:)(uint64_t a1@<X0>, void *a2@<X1>, Swift::Int a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  Swift::String v11;

  _StringGuts.grow(_:)(a3);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  String.append(_:)(v11);
  *a6 = a4;
  a6[1] = a5;
}

id one-time initialization function for defaults()
{
  id v0;
  id result;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  result = @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000014, 0x800000024335C3E0);
  if (result)
    static SearchOverrides.defaults = (uint64_t)result;
  else
    __break(1u);
  return result;
}

void static SearchOverrides.read()()
{
  if (one-time initialization token for defaults != -1)
    swift_once();
  OUTLINED_FUNCTION_8_12();
}

uint64_t static SearchOverrides.loadPlistDefaults()()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  type metadata accessor for OmniSearchService();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = outlined bridged method (mbbnb) of @objc NSBundle.path(forResource:ofType:)(0xD000000000000010, 0x800000024335C750, 0x7473696C70, 0xE500000000000000, v1);
  v4 = v3;

  if (v4)
  {
    type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for NSArray);
    v5._countAndFlagsBits = v2;
    v5._object = v4;
    v6 = (unint64_t)NSArray.__allocating_init(contentsOfFile:)(v5);
    if (v6)
    {
      v7 = (void *)v6;
      type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for NSDictionary);
      static Array._conditionallyBridgeFromObjectiveC(_:result:)();

    }
  }
  if (one-time initialization token for utilities != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logging.utilities);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_24315F000, v9, v10, "Failed to load DefaultOverrides.plist", v11, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  return MEMORY[0x24BEE4AF8];
}

void SearchOverride.init(defaultsRepresentation:)()
{
  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_58_5();
}

void sub_2431EFB34(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD v30[16];

  v6 = OUTLINED_FUNCTION_14_8(a1, sel_objectForKey_);
  OUTLINED_FUNCTION_43_7();
  if (v4)
  {
    OUTLINED_FUNCTION_76_5();
    v7 = OUTLINED_FUNCTION_40_3();
  }
  v13 = OUTLINED_FUNCTION_74_8(v7, v8, v9, v10, v11, v12);
  if (!v30[3])
  {
    outlined destroy of MobileSMSDocument?((uint64_t)v30, &demangling cache variable for type metadata for Any?);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_28_10(v13, &lazy cache variable for type metadata for NSDictionary);
  if ((OUTLINED_FUNCTION_7_16() & 1) == 0)
  {
LABEL_11:
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_74_4();
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_54_8(63, v25);
    swift_willThrow();
    goto LABEL_12;
  }
  v14 = *(void **)(v5 - 72);
  v15 = MEMORY[0x2494F5BB8](0x6E4574757074756FLL, 0xEE00736569746974);
  v16 = OUTLINED_FUNCTION_14_8(v15, sel_objectForKey_);
  OUTLINED_FUNCTION_43_7();
  if (v4)
  {
    OUTLINED_FUNCTION_76_5();
    v17 = OUTLINED_FUNCTION_40_3();
  }
  OUTLINED_FUNCTION_74_8(v17, v18, v19, v20, v21, v22);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSDictionary]);
  if ((OUTLINED_FUNCTION_7_16() & 1) == 0)
  {

    goto LABEL_11;
  }
  v23 = *(_QWORD *)(v5 - 72);
  v24 = v14;
  SearchOverride.InputMatch.init(defaultsRepresentation:)();
  if (v2)
  {
    OUTLINED_FUNCTION_47_2();

LABEL_12:
    return;
  }
  v26 = v30[1];
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_47_2();
    if (v27)
      goto LABEL_16;
LABEL_22:
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_47_2();

    v29 = MEMORY[0x24BEE4AF8];
    *v3 = v30[0];
    v3[1] = v26;
    v3[2] = v29;
    return;
  }
  v27 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27)
    goto LABEL_22;
LABEL_16:
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v27 & 0x8000000000000000) == 0)
  {
    if ((v23 & 0xC000000000000001) != 0)
      v28 = (id)MEMORY[0x2494F62E4](0, v23);
    else
      v28 = *(id *)(v23 + 32);
    SearchOverrideOutputEntity.init(defaultsRepresentation:)((NSDictionary)v28);
  }
  __break(1u);
}

NSArray_optional __swiftcall NSArray.__allocating_init(contentsOfFile:)(Swift::String contentsOfFile)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  objc_class *v5;
  Swift::Bool v6;
  objc_class *v7;
  NSArray_optional result;

  object = contentsOfFile._object;
  countAndFlagsBits = contentsOfFile._countAndFlagsBits;
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)MEMORY[0x2494F5BB8](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  v5 = (objc_class *)objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

  v7 = v5;
  result.value.super.isa = v7;
  result.is_nil = v6;
  return result;
}

void static SearchOverrides.add(_:)()
{
  static SearchOverrides.read()();
}

void sub_2431EFF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!v2)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_46_0();
    swift_bridgeObjectRetain();
    v6 = specialized Collection.firstIndex(where:)(a1, v1, v3);
    v8 = v7;
    OUTLINED_FUNCTION_79_5();
    if ((v8 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(a1);
        a1 = v16;
      }
      v9 = *(_QWORD *)(a1 + 16);
      if (v6 >= v9)
      {
        __break(1u);
        return;
      }
      v10 = v9 - 1;
      specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a1 + 24 * v6 + 56), v9 - 1 - v6, (char *)(a1 + 24 * v6 + 32));
      *(_QWORD *)(a1 + 16) = v10;
      OUTLINED_FUNCTION_47();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_46_0();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_101_4(0, *(_QWORD *)(a1 + 16) + 1);
      a1 = v14;
    }
    v12 = *(_QWORD *)(a1 + 16);
    v11 = *(_QWORD *)(a1 + 24);
    if (v12 >= v11 >> 1)
    {
      OUTLINED_FUNCTION_101_4(v11 > 1, v12 + 1);
      a1 = v15;
    }
    *(_QWORD *)(a1 + 16) = v12 + 1;
    v13 = (_QWORD *)(a1 + 24 * v12);
    v13[4] = v1;
    v13[5] = v3;
    v13[6] = v4;
    static SearchOverrides.write(_:)(a1);
    OUTLINED_FUNCTION_79_5();
  }
}

uint64_t static SearchOverride.InputMatch.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return OUTLINED_FUNCTION_18_7();
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v7 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        break;
      v7 += 3;
      if (v4 == ++v6)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void static SearchOverrides.write(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  void *v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    v3 = a1 + 48;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SearchOverride.defaultsRepresentation()();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4)
        break;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v3 += 24;
      if (!--v1)
        goto LABEL_5;
    }
    swift_release();
  }
  else
  {
LABEL_5:
    if (one-time initialization token for defaults != -1)
      swift_once();
    v5 = (void *)static SearchOverrides.defaults;
    type metadata accessor for SFCardSection(0, &lazy cache variable for type metadata for NSDictionary);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v7 = (void *)MEMORY[0x2494F5BB8](0x764F686372616553, 0xEF73656469727265);
    objc_msgSend(v5, sel_setObject_forKey_, isa, v7);

  }
}

void static SearchOverrides.reset()()
{
  if (one-time initialization token for defaults != -1)
    swift_once();
  OUTLINED_FUNCTION_8_12();
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverride.defaultsRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSDictionary v4;
  uint64_t v5;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  v2 = OUTLINED_FUNCTION_30_8();
  *(_QWORD *)(v2 + 32) = 0x74614D7475706E69;
  v3 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v2 + 16) = xmmword_24334EDD0;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 40) = 0xEA00000000006863;
  v4.super.isa = SearchOverride.InputMatch.defaultsRepresentation()().super.isa;
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 32);
    *(_QWORD *)(v2 + 16) = 0;
    return (NSDictionary)swift_release();
  }
  else
  {
    isa = v4.super.isa;
    v8 = OUTLINED_FUNCTION_28_10((uint64_t)v4.super.isa, &lazy cache variable for type metadata for NSDictionary);
    *(_QWORD *)(v2 + 64) = isa;
    *(_QWORD *)(v2 + 120) = v3;
    *(_QWORD *)(v2 + 88) = v8;
    strcpy((char *)(v2 + 96), "outputEntities");
    *(_BYTE *)(v2 + 111) = -18;
    v9 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v1 + 16))
    {
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      v10 = *(unsigned __int8 *)(v1 + 32);
      v11 = OUTLINED_FUNCTION_30_8();
      *(_OWORD *)(v11 + 16) = xmmword_24334EDD0;
      *(_QWORD *)(v11 + 56) = v3;
      *(_QWORD *)(v11 + 32) = 0x7954797469746E65;
      *(_QWORD *)(v11 + 40) = 0xEA00000000006570;
      __asm { BR              X10 }
    }
    *(_QWORD *)(v2 + 152) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSDictionary]);
    *(_QWORD *)(v2 + 128) = v9;
    return (NSDictionary)NSDictionary.init(dictionaryLiteral:)();
  }
}

void SearchOverride.InputMatch.init(defaultsRepresentation:)()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_60_5();
  v3 = MEMORY[0x2494F5BB8](1684957547, 0xE400000000000000);
  v4 = OUTLINED_FUNCTION_14_8(v3, sel_valueForKey_);
  OUTLINED_FUNCTION_43_7();
  if (v2)
  {
    OUTLINED_FUNCTION_32_6();
    v5 = OUTLINED_FUNCTION_40_3();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_86_6();
  }
  v8 = OUTLINED_FUNCTION_31_9(v5, v6, v7);
  if (v26)
  {
    if ((OUTLINED_FUNCTION_7_16() & 1) != 0)
    {
      if (v24 == 0xD000000000000013 && v25 == 0x800000024335C7E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
          goto LABEL_10;
      }
      v19 = MEMORY[0x2494F5BB8](0x7972657571, 0xE500000000000000);
      v20 = OUTLINED_FUNCTION_14_8(v19, sel_valueForKey_);
      OUTLINED_FUNCTION_43_7();
      if (v25)
      {
        OUTLINED_FUNCTION_32_6();
        v21 = OUTLINED_FUNCTION_40_3();
      }
      else
      {
        v23 = OUTLINED_FUNCTION_86_6();
      }
      OUTLINED_FUNCTION_31_9(v21, v22, v23);
      if ((OUTLINED_FUNCTION_7_16() & 1) != 0)
      {

        *v1 = v24;
        v1[1] = v25;
        goto LABEL_11;
      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_75_6(v8, &demangling cache variable for type metadata for Any?, v9, v10, v11, v12, v13, v14);
  }
LABEL_10:
  lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
  OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_45_7();
  static SearchOverrideError.invalidPayload(_:)(v15, v17, v16);
  swift_willThrow();

LABEL_11:
  OUTLINED_FUNCTION_41_6();
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverride.InputMatch.defaultsRepresentation()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSDictionary result;

  v2 = *v0;
  v1 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  v3 = OUTLINED_FUNCTION_30_8();
  *(_OWORD *)(v3 + 16) = xmmword_24334EDD0;
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 1684957547;
  *(_QWORD *)(v3 + 40) = 0xE400000000000000;
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = 0xD000000000000013;
  *(_QWORD *)(v3 + 72) = 0x800000024335C7E0;
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = 0x7972657571;
  *(_QWORD *)(v3 + 104) = 0xE500000000000000;
  *(_QWORD *)(v3 + 152) = v4;
  *(_QWORD *)(v3 + 120) = v4;
  *(_QWORD *)(v3 + 128) = v2;
  *(_QWORD *)(v3 + 136) = v1;
  OUTLINED_FUNCTION_28_10(v3, &lazy cache variable for type metadata for NSDictionary);
  OUTLINED_FUNCTION_4_7();
  NSDictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_100_3();
  return result;
}

uint64_t SearchOverride.inputMatch.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SearchOverride.inputMatch.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_12();
}

uint64_t (*SearchOverride.inputMatch.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t SearchOverride.outputEntities.getter()
{
  return swift_bridgeObjectRetain();
}

void SearchOverride.outputEntities.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchOverride.outputEntities.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

_QWORD *SearchOverride.init(inputMatch:outputEntities:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

Swift::Bool __swiftcall SearchOverride.matches(rewrittenQuery:)(Swift::String rewrittenQuery)
{
  uint64_t v1;

  if (*(_QWORD *)v1 == rewrittenQuery._countAndFlagsBits && *(void **)(v1 + 8) == rewrittenQuery._object)
    return 1;
  else
    return OUTLINED_FUNCTION_18_7();
}

OmniSearch::SearchOverrideOutputEntity __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverrideOutputEntity.init(defaultsRepresentation:)(NSDictionary defaultsRepresentation)
{
  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_58_5();
}

void sub_2431F09C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  _QWORD *v39;

  v21 = OUTLINED_FUNCTION_14_8(a1, sel_valueForKey_);
  OUTLINED_FUNCTION_43_7();
  if (v20)
  {
    OUTLINED_FUNCTION_32_6();
    v22 = OUTLINED_FUNCTION_40_3();
  }
  else
  {
    v24 = OUTLINED_FUNCTION_86_6();
  }
  v25 = OUTLINED_FUNCTION_31_9(v22, v23, v24);
  if (!a18)
  {
    OUTLINED_FUNCTION_75_6(v25, &demangling cache variable for type metadata for Any?, v26, v27, v28, v29, v30, v31);
LABEL_13:
    lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError();
    OUTLINED_FUNCTION_74_4();
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_54_8(75, v39);
    swift_willThrow();

    goto LABEL_14;
  }
  if ((OUTLINED_FUNCTION_7_16() & 1) == 0)
    goto LABEL_13;
  v32._countAndFlagsBits = a9;
  v32._object = a10;
  SearchOverrideOutputEntity.EntityType.init(rawValue:)(v32);
  if (a15 == 4)
    goto LABEL_13;
  v33 = MEMORY[0x2494F5BB8](0x64616F6C796170, 0xE700000000000000);
  v34 = OUTLINED_FUNCTION_14_8(v33, sel_valueForKey_);
  OUTLINED_FUNCTION_43_7();
  if (v20)
  {
    OUTLINED_FUNCTION_32_6();
    v35 = OUTLINED_FUNCTION_40_3();
  }
  else
  {
    v37 = OUTLINED_FUNCTION_86_6();
  }
  v38 = OUTLINED_FUNCTION_31_9(v35, v36, v37);
  OUTLINED_FUNCTION_28_10(v38, &lazy cache variable for type metadata for NSDictionary);
  if ((OUTLINED_FUNCTION_7_16() & 1) == 0)
    goto LABEL_13;

  *(_BYTE *)v19 = a15;
  *(_QWORD *)(v19 + 8) = a9;
LABEL_14:
  OUTLINED_FUNCTION_41_6();
}

NSDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchOverrideOutputEntity.defaultsRepresentation()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  NSDictionary result;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Any, Any)>);
  v2 = OUTLINED_FUNCTION_30_8();
  *(_OWORD *)(v2 + 16) = xmmword_24334EDD0;
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0x7954797469746E65;
  *(_QWORD *)(v2 + 40) = 0xEA00000000006570;
  __asm { BR              X12 }
  return result;
}

void sub_2431F0BA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  id v5;

  v3[8] = 0x6C61626F6C67;
  v3[9] = v2;
  v3[15] = a2;
  v3[11] = a2;
  v3[12] = 0x64616F6C796170;
  v3[13] = 0xE700000000000000;
  v3[19] = OUTLINED_FUNCTION_28_10(a1, &lazy cache variable for type metadata for NSDictionary);
  v3[16] = v4;
  v5 = v4;
  NSDictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_100_3();
}

OmniSearch::SearchOverrideOutputEntity::EntityType_optional __swiftcall SearchOverrideOutputEntity.EntityType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  char v6;
  OmniSearch::SearchOverrideOutputEntity::EntityType_optional result;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of SearchOverrideOutputEntity.EntityType.init(rawValue:), v3);
  swift_bridgeObjectRelease();
  v6 = 4;
  if (v5 < 4)
    v6 = v5;
  *v4 = v6;
  OUTLINED_FUNCTION_12();
  return result;
}

uint64_t SearchOverrideOutputEntity.EntityType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431F0CC8 + 4 * byte_2433509B8[*v0]))(0x726577736E61, 0xE600000000000000);
}

uint64_t sub_2431F0CC8()
{
  return 0x6C61626F6C67;
}

uint64_t sub_2431F0CD8()
{
  return 0x6867696C746F7073;
}

uint64_t sub_2431F0CF4()
{
  return 0x7469746E45707061;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SearchOverrideOutputEntity.EntityType(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance SearchOverrideOutputEntity.EntityType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance SearchOverrideOutputEntity.EntityType(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SearchOverrideOutputEntity.EntityType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::SearchOverrideOutputEntity::EntityType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchOverrideOutputEntity.EntityType(Swift::String *a1)
{
  return SearchOverrideOutputEntity.EntityType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchOverrideOutputEntity.EntityType(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SearchOverrideOutputEntity.EntityType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_5();
}

void SearchOverrideOutputEntity.entityType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SearchOverrideOutputEntity.entityType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SearchOverrideOutputEntity.entityType.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

id SearchOverrideOutputEntity.payload.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void SearchOverrideOutputEntity.payload.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*SearchOverrideOutputEntity.payload.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void SearchOverrideOutputEntity.makeResultEntity()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[10];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;

  OUTLINED_FUNCTION_65_7();
  v31[1] = v1;
  v32 = OUTLINED_FUNCTION_67_8();
  v31[8] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_0_3();
  v31[7] = v2;
  v31[6] = type metadata accessor for SearchEntity.Builder();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18_1();
  v33 = v4;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v5);
  v31[9] = (char *)v31 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAppEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_18_1();
  v31[4] = v8;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v31 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchSpotlightEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_18_1();
  v31[3] = v13;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v31 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_18_1();
  v31[2] = v18;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v31 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchAnswerEntity?);
  OUTLINED_FUNCTION_15();
  v23 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v31 - v24;
  v26 = type metadata accessor for SearchResultType();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_0_3();
  v39 = v27;
  v28 = *v0;
  type metadata accessor for SearchAnswerEntity(0);
  v37 = v25;
  OUTLINED_FUNCTION_89_5((uint64_t)v25);
  v29 = type metadata accessor for SearchGlobalEntity();
  v38 = v21;
  v31[5] = v29;
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v29);
  v30 = type metadata accessor for SearchSpotlightEntity(0);
  v35 = v16;
  v34 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v30);
  type metadata accessor for SearchAppEntity(0);
  v36 = v11;
  OUTLINED_FUNCTION_17_12((uint64_t)v11);
  __asm { BR              X9 }
}

void sub_2431F1064(uint64_t a1)
{
  void *v1;
  id v2;

  OUTLINED_FUNCTION_12_12(a1, *MEMORY[0x24BE6E1E8]);
  v2 = v1;
  SearchAnswerEntity.init(overridePayload:)();
}

#error "2431F143C: call analysis failed (funcsize=140)"

void SearchAnswerEntity.init(overridePayload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[14];

  OUTLINED_FUNCTION_65_7();
  v7[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18_1();
  v7[2] = v2;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v3);
  v7[1] = (char *)v7 - v4;
  v5 = OUTLINED_FUNCTION_67_8();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_27_8();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431F1644(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431F165C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_98_4();
}

void sub_2431F167C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_44_8();
  *(_QWORD *)(v1 + 40) = MEMORY[0x2494F42B0](v2);
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_98_4();
}

void sub_2431F16C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_44_8();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431F16D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 56) = a1;
  v3 = type metadata accessor for SearchAnswerEntity(0);
  v4 = OUTLINED_FUNCTION_77_5();
  OUTLINED_FUNCTION_49(v2, v5, v6, v4);
  *(_OWORD *)(v1 + *(int *)(v3 + 52)) = xmmword_24334E610;
  *(_BYTE *)(v1 + *(int *)(v3 + 56)) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_43_4();
}

void sub_2431F1744(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  *(uint64_t *)((char *)v1 + v3) = a1;
  UUID.init()();
  v5 = UUID.uuidString.getter();
  v7 = v6;
  OUTLINED_FUNCTION_57_5();
  v8 = (uint64_t *)((char *)v1 + *(int *)(v2 + 60));
  *v8 = v5;
  v8[1] = v7;
  MEMORY[0x2494F5BB8](0x617461646174656DLL, 0xE800000000000000);
  v9 = OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_50_7();
  if (v5)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v10 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v4 - 88))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : String]);
    if (OUTLINED_FUNCTION_3_10())
    {
      v11 = *(_QWORD *)(v4 - 160);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v10, &demangling cache variable for type metadata for Any?);
  }
  v11 = Dictionary.init(dictionaryLiteral:)();
LABEL_9:
  v1[4] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchAnswerEntity.SourceDocument>);
  v12 = type metadata accessor for SearchAnswerEntity.SourceDocument(0);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24334DB60;
  v16 = (_OWORD *)(v15 + v14);
  v17 = (uint64_t)v16 + *(int *)(v12 + 24);
  v18 = type metadata accessor for URL();
  OUTLINED_FUNCTION_49(v17, v19, v20, v18);
  *v16 = 0u;
  v16[1] = 0u;
  v1[3] = v15;
  MEMORY[0x2494F5BB8](0x726577736E61, 0xE600000000000000);
  v21 = OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_50_7();
  if (v15)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v22 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v4 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v23 = *(_QWORD *)(v4 - 160);
      goto LABEL_17;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v22, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_17:
  v24 = *v1;
  OUTLINED_FUNCTION_21_8(v23);
  MEMORY[0x2494F5BB8](0x746E656D75636F64, 0xEE00656372756F53);
  v25 = OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_50_7();
  if (v24)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v26 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v4 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v27 = *(_QWORD *)(v4 - 160);
      goto LABEL_25;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v26, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_25:
  OUTLINED_FUNCTION_21_8(v27);
  OUTLINED_FUNCTION_96_5();
}

void sub_2431F19C0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_50_7();
  if (v0)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v3 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v1 - 88))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    if (OUTLINED_FUNCTION_3_10())
    {
      v4 = *(_QWORD *)(v1 - 160);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v3, &demangling cache variable for type metadata for Any?);
  }
  v4 = MEMORY[0x24BEE4AF8];
LABEL_9:
  *(_QWORD *)(v1 - 112) = v4;
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_58_5();
}

void sub_2431F1A50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  OmniSearch::OverrideExperience v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_50_7();
  if (v0)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v2 - 88))
  {
    if ((OUTLINED_FUNCTION_3_10() & 1) == 0)
      goto LABEL_9;
    v4 = OverrideExperience.init(rawValue:)(*(Swift::String *)(v2 - 160));
    v5 = *(_QWORD *)(v2 - 184);
    OverrideExperience.mockExperienceFile.getter(v4, v5);
    outlined init with copy of IntentFile?(v5, *(_QWORD *)(v2 - 176));
    EntityProperty.wrappedValue.setter();
    v6 = &demangling cache variable for type metadata for IntentFile?;
    v7 = v5;
  }
  else
  {
    v6 = &demangling cache variable for type metadata for Any?;
    v7 = v2 - 112;
  }
  outlined destroy of MobileSMSDocument?(v7, v6);
LABEL_9:
  SearchAnswerEntity.validateParameters()();

  if (v9)
    OUTLINED_FUNCTION_81_4(v8, type metadata accessor for SearchAnswerEntity);
  OUTLINED_FUNCTION_1_1();
}

void SearchAppEntity.init(overridePayload:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_65_7();
  v0 = OUTLINED_FUNCTION_67_8();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_2_2();
  type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431F1BB4(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431F1BDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431F1C00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_121_0();
}

void sub_2431F1C3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1[3] = a1;
  v6 = type metadata accessor for SearchAppEntity(0);
  v1[4] = 0;
  v1[5] = 0;
  v7 = (uint64_t)v1 + *(int *)(v6 + 36);
  v8 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_49(v7, v9, v10, v8);
  *(_OWORD *)((char *)v1 + *(int *)(v6 + 40)) = xmmword_24334E610;
  UUID.init()();
  v11 = UUID.uuidString.getter();
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  *(_QWORD *)(v5 - 112) = v11;
  *(_QWORD *)(v5 - 104) = v13;
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_36_8();
}

void sub_2431F1CB4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v4 = OUTLINED_FUNCTION_19_11(v2, sel_valueForKey_);
  OUTLINED_FUNCTION_87_4();
  if (v1)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v5 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v3 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v6 = *(_QWORD *)(v3 - 160);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v5, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_9:
  v7 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_21_8(v6);
  MEMORY[0x2494F5BB8](0x644965707974, 0xE600000000000000);
  v8 = OUTLINED_FUNCTION_19_11(v2, sel_valueForKey_);
  OUTLINED_FUNCTION_87_4();
  if (v7)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v9 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v3 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v10 = *(_QWORD *)(v3 - 160);
      goto LABEL_17;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_17:
  OUTLINED_FUNCTION_21_8(v10);
  OUTLINED_FUNCTION_58_5();
}

void sub_2431F1DD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_19_11(v1, *(SEL *)(v2 + 3320));
  OUTLINED_FUNCTION_87_4();
  if (v0)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v5 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v3 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v6 = *(_QWORD *)(v3 - 160);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v5, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_9:
  OUTLINED_FUNCTION_21_8(v6);
  SearchAppEntity.validateParameters()();

  if (v8)
    OUTLINED_FUNCTION_81_4(v7, type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_1_1();
}

void SearchOverrideOutputEntity.makeGlobalEntity(overridePayload:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  OmniSearch::OverrideExperience v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  SearchGlobalEntity.init(overridePayload:)();
  if (!v2)
  {
    v9 = (void *)MEMORY[0x2494F5BB8](0x6E65697265707865, 0xEA00000000006563);
    v10 = objc_msgSend(v8, sel_valueForKey_, v9);

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    outlined init with take of Any?((uint64_t)v15, (uint64_t)v16);
    if (v17)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v11 = OverrideExperience.init(rawValue:)(v14);
        OverrideExperience.mockExperienceFile.getter(v11, (uint64_t)v7);
        SearchGlobalEntity.experienceFile.setter();
      }
    }
    else
    {
      outlined destroy of MobileSMSDocument?((uint64_t)v16, &demangling cache variable for type metadata for Any?);
    }
    SearchGlobalEntity.validateParameters()();
    if (v12)
    {
      v13 = type metadata accessor for SearchGlobalEntity();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    }
  }
}

void SearchSpotlightEntity.init(overridePayload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[7];
  uint64_t v12;

  OUTLINED_FUNCTION_65_7();
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  v11[3] = v3;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v4);
  v11[4] = (char *)v11 - v5;
  OUTLINED_FUNCTION_17_1();
  MEMORY[0x24BDAC7A8](v6);
  v11[6] = (char *)v11 - v7;
  v12 = type metadata accessor for IntentFile();
  v11[1] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0_3();
  v11[0] = v8;
  v9 = OUTLINED_FUNCTION_67_8();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_27_8();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_3_1();
  *(_OWORD *)(v1 + 16) = xmmword_24334E610;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_92_4();
}

void sub_2431F2124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_92_4();
}

void sub_2431F2134(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[5] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  LocalizedStringResource.init(stringLiteral:)();
  v1[6] = MEMORY[0x2494F42B0](v2);
  OUTLINED_FUNCTION_69_5();
  v1[7] = MEMORY[0x2494F42B0](v2);
  type metadata accessor for SearchSpotlightEntity(0);
  v4 = OUTLINED_FUNCTION_77_5();
  OUTLINED_FUNCTION_49(v3, v5, v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_92_4();
}

void sub_2431F21E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  *(_QWORD *)(v7 - 208) = v5;
  *(_QWORD *)(v1 + v5) = a1;
  UUID.init()();
  v8 = UUID.uuidString.getter();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  v11 = (uint64_t *)(v1 + *(int *)(v4 + 48));
  *v11 = v8;
  v11[1] = v10;
  OUTLINED_FUNCTION_36_8();
}

void sub_2431F2228()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v3 = OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_51_5();
  if (v1)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v4 = *(_QWORD *)(v2 - 176);
  v5 = *(_QWORD *)(v2 - 168);
  v6 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v2 - 88))
  {
    if (OUTLINED_FUNCTION_3_10())
    {
      v7 = *(_QWORD *)(v2 - 160);
      v8 = *(_QWORD *)(v2 - 152);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v6, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_6();
LABEL_9:
  *v0 = v7;
  v0[1] = v8;
  MEMORY[0x2494F5BB8](0xD000000000000012, 0x800000024335C8C0);
  v9 = OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_51_5();
  if (v1)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v10 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v2 - 88))
  {
    v11 = OUTLINED_FUNCTION_7_16();
    OUTLINED_FUNCTION_42_8(v4, v11 ^ 1u, 1);
    if (__swift_getEnumTagSinglePayload(v4, 1, v5) != 1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 32))(*(_QWORD *)(v2 - 224), v4, v5);
      v12 = IntentFile.data.getter();
      v13 = OUTLINED_FUNCTION_28_10(v12, &lazy cache variable for type metadata for NSKeyedUnarchiver);
      OUTLINED_FUNCTION_28_10(v13, (unint64_t *)&lazy cache variable for type metadata for CSSearchableItem);
      v14 = *(void **)(v2 - 184);
      v15 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      if (v14)
      {

        OUTLINED_FUNCTION_89_7();
        v16 = 0;
        v17 = 0;
      }
      else
      {
        v19 = (void *)v15;
        OUTLINED_FUNCTION_89_7();
        if (v19)
        {
          v20 = objc_msgSend(v19, sel_attributeSet);

          v16 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.identifier.getter(v20);
        }
        else
        {
          v16 = 0;
          v17 = 0;
        }
      }
      v0[8] = v16;
      v0[9] = v17;
      v21 = *(_QWORD *)(v2 - 192);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 216) + 16))(v21, *(_QWORD *)(v2 - 224), v5);
      __swift_storeEnumTagSinglePayload(v21, 0, 1, v5);
      outlined init with copy of IntentFile?(v21, *(_QWORD *)(v2 - 200));
      v22 = EntityProperty.wrappedValue.setter();
      OUTLINED_FUNCTION_111_0(v22, &demangling cache variable for type metadata for IntentFile?);
      OUTLINED_FUNCTION_57_5();
LABEL_22:
      OUTLINED_FUNCTION_96_5();
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v10, &demangling cache variable for type metadata for Any?);
    OUTLINED_FUNCTION_17_12(v4);
  }
  OUTLINED_FUNCTION_90_5();
  v0[8] = 0;
  v0[9] = 0;
  v18 = *(_QWORD *)(v2 - 192);
  OUTLINED_FUNCTION_17_12(v18);
  outlined init with copy of IntentFile?(v18, *(_QWORD *)(v2 - 200));
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_90_5();
  goto LABEL_22;
}

void sub_2431F24D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_51_5();
  if (v0)
  {
    OUTLINED_FUNCTION_5_15();
    OUTLINED_FUNCTION_13_12();
  }
  else
  {
    OUTLINED_FUNCTION_16_14();
  }
  v4 = OUTLINED_FUNCTION_4_15();
  if (*(_QWORD *)(v2 - 88))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    if (OUTLINED_FUNCTION_3_10())
    {
      v5 = *(_QWORD *)(v2 - 160);
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v4, &demangling cache variable for type metadata for Any?);
  }
  v5 = MEMORY[0x24BEE4AF8];
LABEL_9:
  *(_QWORD *)(v2 - 112) = v5;
  OUTLINED_FUNCTION_23_10();
  SearchSpotlightEntity.validateParameters()();

  if (v7)
    OUTLINED_FUNCTION_81_4(v6, type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_1_1();
}

OmniSearch::OverrideExperience __swiftcall OverrideExperience.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  uint64_t v2;
  char *v3;
  unsigned int v4;
  unsigned int v5;
  Swift::String v6;
  Swift::String v7;
  char v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t countAndFlagsBits;
  uint64_t v20;

  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v2 = 3;
  v3 = &byte_2513C7BE0;
  while (1)
  {
    v5 = *v3++;
    v4 = v5;
    v6 = String.lowercased()();
    swift_bridgeObjectRelease();
    v7 = String.lowercased()();
    if (v6._countAndFlagsBits == v7._countAndFlagsBits && v6._object == v7._object)
      break;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      goto LABEL_10;
    if (!--v2)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n();
LABEL_10:
  if (v4 >= 2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    LOBYTE(v4) = 2;
    v10 = (unint64_t)object;
    goto LABEL_12;
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  v10 = (unint64_t)object;
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (char)v4;
  }
LABEL_12:
  if (one-time initialization token for search != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logging.search);
  swift_bridgeObjectRetain();
  v12 = Logger.logObject.getter();
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v20 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v14 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    v15 = MEMORY[0x2494F5E4C](&outlined read-only object #0 of static OverrideExperience.allCases.getter, &type metadata for OverrideExperience);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v12, v13, "OverrideExperience: Unrecognized experience request %s, only %s are supported. Using GenericExperience", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease_n();
  return (char)v4;
}

uint64_t OverrideExperience.mockExperienceFile.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t inited;
  void *v5;
  void *v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24334DB70;
  if (a1)
  {
    OUTLINED_FUNCTION_73_5();
    static GenericExperience.empty.getter();
  }
  else
  {
    OUTLINED_FUNCTION_88_3();
    static AudioExperience.empty.getter();
  }
  v6 = v5;
  type metadata accessor for DialogExperience();
  swift_allocObject();
  *(_QWORD *)(inited + 32) = DialogExperience.init(_:card:)(v6);
  specialized Array._endMutation()();
  return IntentFile.init(experiences:)(inited, a2);
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchAppEntity()
{
  SearchAppEntity.init(overridePayload:)();
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchAnswerEntity()
{
  SearchAnswerEntity.init(overridePayload:)();
}

uint64_t protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchGlobalEntity()
{
  return SearchGlobalEntity.init(overridePayload:)();
}

void protocol witness for SearchOverrideable.init(overridePayload:) in conformance SearchSpotlightEntity()
{
  SearchSpotlightEntity.init(overridePayload:)();
}

void *static OverrideExperience.allCases.getter()
{
  return &outlined read-only object #0 of static OverrideExperience.allCases.getter;
}

uint64_t OverrideExperience.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F69647541;
  if (a1 == 1)
    return 1936744781;
  return 0x6E776F6E6B6E75;
}

void OverrideExperience.mockExperience.getter(char a1)
{
  if (a1)
  {
    OUTLINED_FUNCTION_73_5();
    static GenericExperience.empty.getter();
  }
  else
  {
    OUTLINED_FUNCTION_88_3();
    static AudioExperience.empty.getter();
  }
}

void static AudioExperience.empty.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - v5;
  Apple_Parsec_Siri_V2alpha_AudioClientComponent.init()();
  OUTLINED_FUNCTION_88_3();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  AudioExperience.__allocating_init(pluginId:audioClientComponent:queryConfidenceScore:usoGraphData:isGlideEligible:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  OUTLINED_FUNCTION_63();
}

void static GenericExperience.empty.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;

  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  v2 = type metadata accessor for Apple_Parsec_Siri_V2alpha_ExperienceComponent();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_1();
  Apple_Parsec_Siri_V2alpha_ExperienceComponent.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Apple_Parsec_Siri_V2alpha_ExperienceComponent>);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24334DB60;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, v0, v2);
  Siri_Nlu_External_UserDialogAct.init()();
  type metadata accessor for PommesRenderOptions();
  MEMORY[0x2494F5708]();
  v6 = objc_allocWithZone((Class)type metadata accessor for GenericExperience());
  GenericExperience.init(components:queryConfidenceScore:userDialogAct:renderOptions:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  OUTLINED_FUNCTION_63();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OverrideExperience(unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance OverrideExperience()
{
  char *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OverrideExperience(uint64_t a1)
{
  char *v1;

  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OverrideExperience()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance OverrideExperience@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = OverrideExperience.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OverrideExperience(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = OverrideExperience.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_5();
}

void protocol witness for static CaseIterable.allCases.getter in conformance OverrideExperience(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static OverrideExperience.allCases.getter;
}

unint64_t lazy protocol witness table accessor for type SearchOverrideError and conformance SearchOverrideError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError;
  if (!lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchOverrideError, &type metadata for SearchOverrideError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchOverrideError and conformance SearchOverrideError);
  }
  return result;
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[160 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[88 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_17(a3, result);
  }
  return result;
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2)
{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_59_8();
    if (v5 && (__swift_instantiateConcreteTypeFromMangledName(v4), OUTLINED_FUNCTION_78_8(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_51_0();
      }
      else
      {
        OUTLINED_FUNCTION_20_9();
        OUTLINED_FUNCTION_24_7();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v4);
      OUTLINED_FUNCTION_20_9();
      OUTLINED_FUNCTION_25_9();
    }
  }
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_13();
    OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_59_8();
    if (v5 && (v4(0), OUTLINED_FUNCTION_78_8(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_51_0();
      }
      else
      {
        OUTLINED_FUNCTION_20_9();
        OUTLINED_FUNCTION_24_7();
      }
    }
    else
    {
      v4(0);
      OUTLINED_FUNCTION_20_9();
      OUTLINED_FUNCTION_25_9();
    }
  }
}

void specialized _ArrayBuffer._consumeAndCreateNew()()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t outlined bridged method (mbbnb) of @objc NSBundle.path(forResource:ofType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  v8 = (void *)MEMORY[0x2494F5BB8]();
  swift_bridgeObjectRelease();
  v9 = (void *)MEMORY[0x2494F5BB8](a3, a4);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a5, sel_pathForResource_ofType_, v8, v9);

  if (!v10)
    return 0;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v11;
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void outlined assign with copy of SearchAnswerEntity?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_70_1(a1, a2, a3);
  OUTLINED_FUNCTION_96(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  OUTLINED_FUNCTION_5();
}

uint64_t outlined init with copy of SearchEntity.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchEntity.Builder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of IntentFile?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFile?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.identifier.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_identifier);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t lazy protocol witness table accessor for type SearchOverrideOutputEntity.EntityType and conformance SearchOverrideOutputEntity.EntityType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchOverrideOutputEntity.EntityType and conformance SearchOverrideOutputEntity.EntityType;
  if (!lazy protocol witness table cache variable for type SearchOverrideOutputEntity.EntityType and conformance SearchOverrideOutputEntity.EntityType)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchOverrideOutputEntity.EntityType, &type metadata for SearchOverrideOutputEntity.EntityType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchOverrideOutputEntity.EntityType and conformance SearchOverrideOutputEntity.EntityType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type OverrideExperience and conformance OverrideExperience()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience;
  if (!lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for OverrideExperience, &type metadata for OverrideExperience);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OverrideExperience and conformance OverrideExperience);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [OverrideExperience] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [OverrideExperience]);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OverrideExperience] and conformance [A]);
  }
  return result;
}

void type metadata accessor for SearchOverrideError()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for SearchOverrides()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for SearchOverride()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void initializeBufferWithCopyOfBuffer for SearchOverride(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_5();
}

_QWORD *assignWithCopy for SearchOverride(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchOverride(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SearchOverride()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for SearchOverride.InputMatch()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t initializeBufferWithCopyOfBuffer for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for SearchOverrideOutputEntity(uint64_t a1)
{

}

uint64_t assignWithCopy for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for SearchOverrideOutputEntity(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

void type metadata accessor for SearchOverrideOutputEntity()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t storeEnumTagSinglePayload for SearchOverrideOutputEntity.EntityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2431F371C + 4 * byte_2433509C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2431F3750 + 4 * byte_2433509C0[v4]))();
}

uint64_t sub_2431F3750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F3758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431F3760);
  return result;
}

uint64_t sub_2431F376C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431F3774);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2431F3778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F3780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SearchOverrideOutputEntity.EntityType()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t dispatch thunk of SearchOverrideable.init(overridePayload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t storeEnumTagSinglePayload for OverrideExperience(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2431F37FC + 4 * byte_2433509CF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2431F3830 + 4 * byte_2433509CA[v4]))();
}

uint64_t sub_2431F3830(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F3838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431F3840);
  return result;
}

uint64_t sub_2431F384C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431F3854);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2431F3858(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F3860(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for OverrideExperience()
{
  OUTLINED_FUNCTION_103_0();
}

void *OUTLINED_FUNCTION_0_17@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  uint64_t v0;

  return outlined init with take of Any?(v0 - 144, v0 - 112);
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_8_12()
{
  JUMPOUT(0x2494F5BB8);
}

id OUTLINED_FUNCTION_11_9()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 1992), v1);
}

uint64_t OUTLINED_FUNCTION_12_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 104))(*(_QWORD *)(v3 - 192), a2, v2);
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_14_8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

double OUTLINED_FUNCTION_16_14()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_12(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_18_10(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of MobileSMSDocument?(v2 - 112, a2);
}

id OUTLINED_FUNCTION_19_11(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 368) = v0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return swift_arrayInitWithTakeFrontToBack();
}

id OUTLINED_FUNCTION_26_9()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 1992), v0);
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_28_10(uint64_t a1, unint64_t *a2)
{
  return type metadata accessor for SFCardSection(0, a2);
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_31_9(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return outlined init with take of Any?((uint64_t)va, (uint64_t)va1);
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_34_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_36_8()
{
  JUMPOUT(0x2494F5BB8);
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_43_7()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_47_6(uint64_t a1@<X0>, void *a2@<X1>, Swift::Int a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  static SearchOverrideError.invalidPayload(_:)(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a5, a6);
}

void OUTLINED_FUNCTION_50_7()
{
  void *v0;

}

void OUTLINED_FUNCTION_51_5()
{
  void *v0;

}

void OUTLINED_FUNCTION_54_8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  static SearchOverrideError.invalidPayload(_:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, v2, a2);
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_58_5()
{
  JUMPOUT(0x2494F5BB8);
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_67_8()
{
  return type metadata accessor for UUID();
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_73_5()
{
  return type metadata accessor for GenericExperience();
}

uint64_t OUTLINED_FUNCTION_74_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  return outlined init with take of Any?((uint64_t)va, (uint64_t)va1);
}

void OUTLINED_FUNCTION_75_6(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  outlined destroy of MobileSMSDocument?((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_76_5()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_77_5()
{
  return type metadata accessor for SearchResult(0);
}

uint64_t OUTLINED_FUNCTION_79_5()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_81_4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  _s10OmniSearch0B6ResultVWOhTm_1(v2, a2);
}

id OUTLINED_FUNCTION_82_6(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  return 0x746E656D75636F44;
}

double OUTLINED_FUNCTION_86_6()
{
  return 0.0;
}

void OUTLINED_FUNCTION_87_4()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_88_3()
{
  return type metadata accessor for AudioExperience();
}

uint64_t OUTLINED_FUNCTION_89_7()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

void OUTLINED_FUNCTION_90_5()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of MobileSMSDocument?(v1, v0);
}

void OUTLINED_FUNCTION_92_4()
{
  JUMPOUT(0x2494F42C8);
}

uint64_t OUTLINED_FUNCTION_95_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, *(_QWORD *)(v3 - 272));
}

void OUTLINED_FUNCTION_96_5()
{
  JUMPOUT(0x2494F5BB8);
}

void OUTLINED_FUNCTION_98_4()
{
  JUMPOUT(0x2494F42C8);
}

void OUTLINED_FUNCTION_101_4(char a1, uint64_t a2)
{
  uint64_t v2;

  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, 1, v2);
}

uint64_t MemoryCreationQUModelResponse.who.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.who.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_53_7();
  *v1 = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.who.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.what.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.what.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_52_7();
  *(_QWORD *)(v1 + 8) = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.what.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.when.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.when.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_6();
  *(_QWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.when.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.where.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.where.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.where.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.music.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  outlined copy of MemoryCreationQUModelResponseMusic?(v1);
  return v1;
}

uint64_t outlined copy of MemoryCreationQUModelResponseMusic?(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void MemoryCreationQUModelResponse.music.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  outlined consume of MemoryCreationQUModelResponseMusic?(v3[4]);
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  OUTLINED_FUNCTION_12();
}

uint64_t outlined consume of MemoryCreationQUModelResponseMusic?(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*MemoryCreationQUModelResponse.music.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.mood.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.mood.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.mood.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.sort_order.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponse.sort_order.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponse.sort_order.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.trip.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_4_7();
  return v1;
}

void MemoryCreationQUModelResponse.trip.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*MemoryCreationQUModelResponse.trip.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponse.all_time.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_4_7();
  return v1;
}

void MemoryCreationQUModelResponse.all_time.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*MemoryCreationQUModelResponse.all_time.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void MemoryCreationQUModelResponse.init(jsonString:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[6];
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for String.Encoding();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_2();
  v10 = v9 - v8;
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  v12 = Logger.logObject.getter();
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_QWORD *)&v27[0] = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    OUTLINED_FUNCTION_23_0();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)v27);
    v29 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24315F000, v12, v13, "Attempting to decode json string for Memory Creation QU: %s", v14, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_102_0();
  static String.Encoding.utf8.getter();
  v16 = String.data(using:allowLossyConversion:)();
  v18 = v17;
  OUTLINED_FUNCTION_56_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  if (v18 >> 60 == 15)
  {
    lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError();
    swift_allocError();
    *v19 = 1;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    outlined consume of Data?(v16, v18);
    swift_release();
    if (!v26)
    {
      v20 = v28;
      v21 = v27[1];
      v22 = v27[2];
      v23 = v27[3];
      v24 = v27[4];
      v25 = v27[5];
      *(_OWORD *)a3 = v27[0];
      *(_OWORD *)(a3 + 16) = v21;
      *(_OWORD *)(a3 + 32) = v22;
      *(_OWORD *)(a3 + 48) = v23;
      *(_OWORD *)(a3 + 64) = v24;
      *(_OWORD *)(a3 + 80) = v25;
      *(_QWORD *)(a3 + 96) = v20;
    }
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t MemoryCreationQUModelResponse.init(who:what:when:where:music:mood:trip:all_time:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t result;

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logging.memoryCreationQU);
  v22 = Logger.logObject.getter();
  v23 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_24315F000, v22, v23, "MemoryCreationQUModelResponse.init() should only be used for testing", v24, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_116_0();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_39_6();
  outlined consume of MemoryCreationQUModelResponseMusic?(1);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_4_7();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_39_6();
  OUTLINED_FUNCTION_38_8();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_38_8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = 0;
  a9[9] = a10;
  a9[10] = a11;
  a9[11] = a12;
  a9[12] = a13;
  return result;
}

uint64_t MemoryCreationQUModelResponse.init(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  OUTLINED_FUNCTION_13_13();
  if (v1)
  {
    v3 = OUTLINED_FUNCTION_9_13();
    OUTLINED_FUNCTION_0_18(v3);
    OUTLINED_FUNCTION_49_7();
    OUTLINED_FUNCTION_22_9();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_6_15(1);
    OUTLINED_FUNCTION_33_3();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_6_1();
    return OUTLINED_FUNCTION_56_0();
  }
  else
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_18_11();
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_18_11();
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_18_11();
    lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
    OUTLINED_FUNCTION_116_0();
    GeneratedValues.extract<A>(field:)();
    OUTLINED_FUNCTION_43_8(v6);
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_18_11();
    OUTLINED_FUNCTION_23_0();
    GeneratedValues.extract<A>(field:)();
    OUTLINED_FUNCTION_76_0();
    GeneratedValues.extract<A>(field:)();
    v5 = type metadata accessor for GeneratedValues();
    OUTLINED_FUNCTION_0_18(v5);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_33_3();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_117();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_116_0();
    OUTLINED_FUNCTION_43_8(v6);
    OUTLINED_FUNCTION_6_15(v6);
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_6_15(v6);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_56_0();
    result = OUTLINED_FUNCTION_6_1();
    *a1 = v6;
    a1[1] = v6;
    a1[2] = v6;
    a1[3] = v6;
    a1[4] = v6;
    a1[5] = v7;
    a1[6] = v8;
    a1[7] = v6;
    a1[8] = v6;
    a1[9] = v6;
    a1[10] = v7;
    a1[11] = v6;
    a1[12] = v7;
  }
  return result;
}

uint64_t one-time initialization function for schema()
{
  uint64_t v0;

  v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static MemoryCreationQUModelResponse.schema);
  __swift_project_value_buffer(v0, (uint64_t)static MemoryCreationQUModelResponse.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_243350D30;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static MemoryCreationQUModelResponseMusic.schema);
  __swift_project_value_buffer(v0, (uint64_t)static MemoryCreationQUModelResponseMusic.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2433505A0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

{
  uint64_t v0;

  v0 = type metadata accessor for Schema();
  __swift_allocate_value_buffer(v0, static AnswerSynthesisModelResult.schema);
  __swift_project_value_buffer(v0, (uint64_t)static AnswerSynthesisModelResult.schema);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Schema.Field>);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24334DB60;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[String : String]]);
  lazy protocol witness table accessor for type [[String : String]] and conformance <A> [A]();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

uint64_t MemoryCreationQUModelResponse.schema.unsafeMutableAddressor()
{
  return MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponse.schema);
}

uint64_t static MemoryCreationQUModelResponse.schema.getter()
{
  return static MemoryCreationQUModelResponse.schema.getter(&one-time initialization token for schema);
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 7301239 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1952540791 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1852139639 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6572656877 && a2 == 0xE500000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x636973756DLL && a2 == 0xE500000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1685024621 && a2 == 0xE400000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x64726F5F74726F73 && a2 == 0xEA00000000007265;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 1885958772 && a2 == 0xE400000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x656D69745F6C6C61 && a2 == 0xE800000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.init(intValue:)()
{
  return 9;
}

uint64_t MemoryCreationQUModelResponse.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2431F4EEC + 4 * byte_243350D40[a1]))(7301239, 0xE300000000000000);
}

uint64_t sub_2431F4EEC()
{
  return 1952540791;
}

uint64_t sub_2431F4EFC()
{
  return 1852139639;
}

uint64_t sub_2431F4F0C()
{
  return 0x6572656877;
}

uint64_t sub_2431F4F20()
{
  return 0x636973756DLL;
}

uint64_t sub_2431F4F34()
{
  return 1685024621;
}

uint64_t sub_2431F4F44()
{
  return 0x64726F5F74726F73;
}

uint64_t sub_2431F4F60()
{
  return 1885958772;
}

uint64_t sub_2431F4F70()
{
  return 0x656D69745F6C6C61;
}

void protocol witness for Hashable.hashValue.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  unsigned __int8 *v0;

  MemoryCreationQUModelResponse.CodingKeys.hashValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  unsigned __int8 *v0;

  return MemoryCreationQUModelResponse.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MemoryCreationQUModelResponse.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = MemoryCreationQUModelResponse.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance MemoryCreationQUModelResponse.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = MemoryCreationQUModelResponse.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MemoryCreationQUModelResponse.CodingKeys()
{
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void MemoryCreationQUModelResponse.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MemoryCreationQUModelResponse.CodingKeys>);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    OUTLINED_FUNCTION_47_7();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
    lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_27_9(1);
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_27_9(2);
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_27_9(3);
    OUTLINED_FUNCTION_4_16();
    v6 = lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic();
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_48_4();
    if (!v6)
    {
      outlined copy of MemoryCreationQUModelResponseMusic?(v13);
      OUTLINED_FUNCTION_24_8();
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_24_8();
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      OUTLINED_FUNCTION_23_0();
      v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      v12 = v7;
      swift_bridgeObjectRetain();
      v10 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      v9 = v8;
      OUTLINED_FUNCTION_1_17();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_33_3();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_35_1();
      OUTLINED_FUNCTION_116_0();
      OUTLINED_FUNCTION_76_0();
      outlined copy of MemoryCreationQUModelResponseMusic?(v13);
      OUTLINED_FUNCTION_3_11();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_47_2();
      OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_47();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_47_2();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_3_11();
      OUTLINED_FUNCTION_47_2();
      OUTLINED_FUNCTION_96_0();
      OUTLINED_FUNCTION_56_0();
      swift_bridgeObjectRelease();
      *a2 = v13;
      a2[1] = v13;
      a2[2] = v13;
      a2[3] = v13;
      a2[4] = v13;
      a2[5] = v14;
      a2[6] = v15;
      a2[7] = v13;
      a2[8] = v13;
      a2[9] = v11;
      a2[10] = v12;
      a2[11] = v10;
      a2[12] = v9;
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_1_17();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_47_7();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_33_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_56_0();
LABEL_5:
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance MemoryCreationQUModelResponse(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t __src[13];

  MemoryCreationQUModelResponse.init(from:)(a1, __src);
  if (!v2)
    memcpy(a2, __src, 0x68uLL);
}

void MemoryCreationQUModelResponseMusic.artist.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_53_7();
  *v1 = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponseMusic.artist.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponseMusic.genre.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponseMusic.genre.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_52_7();
  *(_QWORD *)(v1 + 8) = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponseMusic.genre.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponseMusic.song.getter()
{
  return swift_bridgeObjectRetain();
}

void MemoryCreationQUModelResponseMusic.song.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_51_6();
  *(_QWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_5();
}

uint64_t (*MemoryCreationQUModelResponseMusic.song.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MemoryCreationQUModelResponseMusic.init(artist:genre:song:)(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logging.memoryCreationQU);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_5_3();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_24315F000, v3, v4, "MemoryCreationQUModelResponseMusic.init() should only be used for testing", v5, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }

  return a1;
}

uint64_t MemoryCreationQUModelResponseMusic.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
  lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
  OUTLINED_FUNCTION_13_13();
  if (v0)
  {
    v2 = OUTLINED_FUNCTION_12_13();
  }
  else
  {
    v1 = v4;
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_13_13();
    v2 = type metadata accessor for GeneratedValues();
  }
  OUTLINED_FUNCTION_0_18(v2);
  return v1;
}

uint64_t MemoryCreationQUModelResponseMusic.schema.unsafeMutableAddressor()
{
  return MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(&one-time initialization token for schema, (uint64_t)static MemoryCreationQUModelResponseMusic.schema);
}

uint64_t MemoryCreationQUModelResponse.schema.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_45_8();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static MemoryCreationQUModelResponseMusic.schema.getter()
{
  return static MemoryCreationQUModelResponse.schema.getter(&one-time initialization token for schema);
}

uint64_t static MemoryCreationQUModelResponse.schema.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  if (*a1 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_45_8();
  v2 = OUTLINED_FUNCTION_31_10(v1);
  return OUTLINED_FUNCTION_20_10(v2, v3, v4, v5);
}

uint64_t MemoryCreationQUModelResponseMusic.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x747369747261 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65726E6567 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1735290739 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void MemoryCreationQUModelResponse.CodingKeys.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_107();
}

uint64_t MemoryCreationQUModelResponseMusic.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    return 0x747369747261;
  if (a1 == 1)
    return 0x65726E6567;
  return 1735290739;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  char *v0;

  return MemoryCreationQUModelResponseMusic.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MemoryCreationQUModelResponseMusic.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = MemoryCreationQUModelResponseMusic.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t MemoryCreationQUModelResponseMusic.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MemoryCreationQUModelResponseMusic.CodingKeys>);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    v5 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_47();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : [String]]);
    lazy protocol witness table accessor for type [String : [String]] and conformance <> [A : B]();
    OUTLINED_FUNCTION_15_9();
    v5 = v6;
    OUTLINED_FUNCTION_15_9();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_17_13();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v5;
}

uint64_t protocol witness for Decodable.init(from:) in conformance MemoryCreationQUModelResponseMusic@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = MemoryCreationQUModelResponseMusic.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(a1, a2, &one-time initialization token for schema);
}

void *protocol witness for Generable.init(from:) in conformance MemoryCreationQUModelResponse@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  void *result;
  uint64_t __src[13];

  result = (void *)MemoryCreationQUModelResponse.init(from:)(__src);
  if (!v1)
    return memcpy(a1, __src, 0x68uLL);
  return result;
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponseMusic(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(a1, a2, &one-time initialization token for schema);
}

uint64_t protocol witness for static Generable.schema.getter in conformance MemoryCreationQUModelResponse(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  if (*a3 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_45_8();
  v4 = OUTLINED_FUNCTION_31_10(v3);
  return OUTLINED_FUNCTION_20_10(v4, v5, v6, v7);
}

uint64_t protocol witness for Generable.init(from:) in conformance MemoryCreationQUModelResponseMusic@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = MemoryCreationQUModelResponseMusic.init(from:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NetworkServiceError and conformance NetworkServiceError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError;
  if (!lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for NetworkServiceError, &type metadata for NetworkServiceError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError;
  if (!lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for NetworkServiceError, &type metadata for NetworkServiceError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NetworkServiceError and conformance NetworkServiceError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse, &type metadata for MemoryCreationQUModelResponse);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse, &type metadata for MemoryCreationQUModelResponse);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse and conformance MemoryCreationQUModelResponse);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic, &type metadata for MemoryCreationQUModelResponseMusic);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic, &type metadata for MemoryCreationQUModelResponseMusic);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic and conformance MemoryCreationQUModelResponseMusic);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse.CodingKeys, &unk_2513CB4F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse.CodingKeys, &unk_2513CB4F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse.CodingKeys, &unk_2513CB4F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponse.CodingKeys, &unk_2513CB4F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponse.CodingKeys and conformance MemoryCreationQUModelResponse.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    v8 = a2;
    result = MEMORY[0x2494F6CA4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic.CodingKeys, &unk_2513CB460);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic.CodingKeys, &unk_2513CB460);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic.CodingKeys, &unk_2513CB460);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUModelResponseMusic.CodingKeys, &unk_2513CB460);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUModelResponseMusic.CodingKeys and conformance MemoryCreationQUModelResponseMusic.CodingKeys);
  }
  return result;
}

uint64_t destroy for MemoryCreationQUModelResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MemoryCreationQUModelResponse(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v7;
    *(_QWORD *)(a1 + 48) = v7[2];
  }
  else
  {
    v8 = a2[5];
    v9 = a2[6];
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v10 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v10;
  v11 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v11;
  v12 = a2[11];
  v13 = a2[12];
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MemoryCreationQUModelResponse(_QWORD *a1, _QWORD *a2)
{
  __int128 *v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  uint64_t v8;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 4);
  v6 = (__int128 *)(a2 + 4);
  v5 = a2[4];
  if (a1[4] == 1)
  {
    if (v5 == 1)
    {
      v7 = *v6;
      a1[6] = a2[6];
      *v4 = v7;
    }
    else
    {
      a1[4] = v5;
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    outlined destroy of MemoryCreationQUModelResponseMusic((uint64_t)(a1 + 4));
    v8 = a2[6];
    *v4 = *v6;
    a1[6] = v8;
  }
  else
  {
    a1[4] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined destroy of MemoryCreationQUModelResponseMusic(uint64_t a1)
{
  destroy for GlobalSearchResponseProcessor.PegasusComponents();
  return a1;
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

_QWORD *assignWithTake for MemoryCreationQUModelResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v4 = a2[4];
  if (a1[4] != 1)
  {
    if (v4 != 1)
    {
      a1[4] = v4;
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    outlined destroy of MemoryCreationQUModelResponseMusic((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  a1[6] = a2[6];
LABEL_6:
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  v5 = a2[10];
  a1[9] = a2[9];
  a1[10] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[12];
  a1[11] = a2[11];
  a1[12] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MemoryCreationQUModelResponse(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 104))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUModelResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MemoryCreationQUModelResponse()
{
  return &type metadata for MemoryCreationQUModelResponse;
}

_QWORD *initializeBufferWithCopyOfBuffer for MemoryCreationQUModelResponseMusic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_7();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MemoryCreationQUModelResponseMusic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MemoryCreationQUModelResponseMusic(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MemoryCreationQUModelResponseMusic(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUModelResponseMusic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MemoryCreationQUModelResponseMusic()
{
  return &type metadata for MemoryCreationQUModelResponseMusic;
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUModelResponseMusic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2431F68EC + 4 * byte_243350D4E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2431F6920 + 4 * byte_243350D49[v4]))();
}

uint64_t sub_2431F6920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F6928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431F6930);
  return result;
}

uint64_t sub_2431F693C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431F6944);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2431F6948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F6950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for MemoryCreationQUModelResponseMusic.CodingKeys()
{
  return &unk_2513CB460;
}

uint64_t getEnumTagSinglePayload for MemoryCreationQUModelResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MemoryCreationQUModelResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2431F6A40 + 4 * byte_243350D58[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2431F6A74 + 4 * byte_243350D53[v4]))();
}

uint64_t sub_2431F6A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F6A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431F6A84);
  return result;
}

uint64_t sub_2431F6A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431F6A98);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2431F6A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F6AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for MemoryCreationQUModelResponse.CodingKeys()
{
  return &unk_2513CB4F0;
}

uint64_t OUTLINED_FUNCTION_0_18(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  uint64_t v0;

  return outlined consume of MemoryCreationQUModelResponseMusic?(v0);
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t result)
{
  return outlined consume of MemoryCreationQUModelResponseMusic?(result);
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return type metadata accessor for GeneratedValues();
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  return type metadata accessor for GeneratedValues();
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return GeneratedValues.extract<A>(field:)();
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_17_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_11()
{
  return GeneratedValues.extract<A>(field:)();
}

uint64_t OUTLINED_FUNCTION_20_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_23_11()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 0;
  *(_QWORD *)(v0 - 112) = 0;
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_9@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_31_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_value_buffer(a1, v2);
  return v1;
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  uint64_t v0;

  return outlined consume of MemoryCreationQUModelResponseMusic?(v0);
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  uint64_t v0;

  return outlined copy of MemoryCreationQUModelResponseMusic?(v0);
}

uint64_t OUTLINED_FUNCTION_43_8(uint64_t result)
{
  return outlined copy of MemoryCreationQUModelResponseMusic?(result);
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  return type metadata accessor for Schema();
}

void OUTLINED_FUNCTION_47_7()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 0;
  *(_QWORD *)(v0 - 112) = 0;
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_53_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t specialized Sequence.compactMap<A>(_:)(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 40);
  v8 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v9 = *v7;
    v23[0] = *(v7 - 1);
    v23[1] = v9;
    swift_bridgeObjectRetain();
    a1(&v19, v23);
    if (v4)
      break;
    swift_bridgeObjectRelease();
    v10 = v20;
    if (v20)
    {
      v11 = v19;
      v12 = v22;
      v24 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v15;
      }
      v13 = *(_QWORD *)(v8 + 16);
      if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      v14 = (_QWORD *)(v8 + 32 * v13);
      v14[4] = v11;
      v14[5] = v10;
      v14[6] = v24;
      v14[7] = v12;
    }
    v7 += 2;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  result = (uint64_t)specialized _NativeDictionary.makeIterator()(&v29, a1);
  v4 = v29;
  v5 = v30;
  v6 = v32;
  v7 = v33;
  v8 = (unint64_t)(v31 + 64) >> 6;
  v34 = a2 + 7;
  v28 = v29;
  v25 = v8;
  v26 = v30;
  while (1)
  {
LABEL_2:
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v6 << 6);
    }
    else
    {
      v11 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_41;
      if (v11 >= v8)
        goto LABEL_39;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = v6 + 1;
      if (!v12)
      {
        v13 = v6 + 2;
        if (v6 + 2 >= v8)
          goto LABEL_39;
        v12 = *(_QWORD *)(v5 + 8 * v13);
        if (!v12)
        {
          v13 = v6 + 3;
          if (v6 + 3 >= v8)
            goto LABEL_39;
          v12 = *(_QWORD *)(v5 + 8 * v13);
          if (!v12)
          {
            v13 = v6 + 4;
            if (v6 + 4 >= v8)
              goto LABEL_39;
            v12 = *(_QWORD *)(v5 + 8 * v13);
            if (!v12)
            {
              v13 = v6 + 5;
              if (v6 + 5 >= v8)
                goto LABEL_39;
              v12 = *(_QWORD *)(v5 + 8 * v13);
              if (!v12)
              {
                v14 = v6 + 6;
                while (v14 < v8)
                {
                  v12 = *(_QWORD *)(v5 + 8 * v14++);
                  if (v12)
                  {
                    v13 = v14 - 1;
                    goto LABEL_19;
                  }
                }
LABEL_39:
                v24 = 0;
LABEL_37:
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                return v24;
              }
            }
          }
        }
      }
LABEL_19:
      v7 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
      v6 = v13;
    }
    v15 = a2[2];
    if (v15)
    {
      v16 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v10);
      v17 = *v16;
      v18 = v16[1];
      v19 = a2[4] == *v16 && a2[5] == v18;
      if (v19 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        v24 = 1;
        goto LABEL_37;
      }
      if (v15 != 1)
        break;
    }
  }
  v20 = v34;
  v21 = 1;
  while (1)
  {
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    v23 = *(v20 - 1) == v17 && *v20 == v18;
    if (v23 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      v24 = 1;
      goto LABEL_37;
    }
    v20 += 2;
    ++v21;
    if (v22 == v15)
    {
      v4 = v28;
      v8 = v25;
      v5 = v26;
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

OmniSearch::MediaURLAnswer __swiftcall MediaURLAnswer.init(lang:)(Swift::String lang)
{
  void *object;
  uint64_t countAndFlagsBits;
  Swift::Bool v3;
  OmniSearch::MediaURLAnswer result;

  object = lang._object;
  countAndFlagsBits = lang._countAndFlagsBits;
  v3 = 1;
  result.lang._object = object;
  result.lang._countAndFlagsBits = countAndFlagsBits;
  result.requiresHydratedResults = v3;
  return result;
}

OmniSearch::FlightFromExtractedAnswer __swiftcall FlightFromExtractedAnswer.init()()
{
  return (OmniSearch::FlightFromExtractedAnswer)3;
}

uint64_t InstantAnswerExtraction.eligibleResultTypes.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResultType>);
  v0 = *(_QWORD *)(type metadata accessor for SearchResultType() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2433505A0;
  v4 = v3 + v2;
  OUTLINED_FUNCTION_49_8(v4, *MEMORY[0x24BE6E1B0]);
  OUTLINED_FUNCTION_49_8(v4 + v1, *MEMORY[0x24BE6E1A8]);
  OUTLINED_FUNCTION_49_8(v4 + 2 * v1, *MEMORY[0x24BE6E1B8]);
  return v3;
}

uint64_t InstantAnswerExtraction.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a6;
  v6[4] = type metadata accessor for SearchResultItem(0);
  v6[5] = OUTLINED_FUNCTION_5_8();
  v6[6] = OUTLINED_FUNCTION_17();
  type metadata accessor for FlightReservation(0);
  v6[7] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t InstantAnswerExtraction.extractInfo(query:result:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  outlined init with copy of SearchResult(v0[3], v0[6], type metadata accessor for SearchResultItem);
  if (OUTLINED_FUNCTION_46_6() == 9)
  {
    v1 = v0[6];
    v2 = v0[7];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
    swift_bridgeObjectRelease();
    outlined init with take of SearchResult(v1, v2, type metadata accessor for FlightReservation);
    v3 = FlightReservation.needsResolution.getter();
    v4 = v0[7];
    if ((v3 & 1) != 0)
    {
      outlined init with take of SearchResult(v4, v0[2], type metadata accessor for FlightReservation);
      OUTLINED_FUNCTION_5_16();
      OUTLINED_FUNCTION_35_7();
      goto LABEL_13;
    }
    v5 = type metadata accessor for FlightReservation;
  }
  else
  {
    v4 = v0[6];
    v5 = type metadata accessor for SearchResultItem;
  }
  _s10OmniSearch0B6ResultVWOhTm_1(v4, v5);
  outlined init with copy of SearchResult(v0[3], v0[5], type metadata accessor for SearchResultItem);
  v6 = OUTLINED_FUNCTION_46_6();
  switch(v6)
  {
    case 11:
      v9 = v0[5];
      v8 = type metadata accessor for RestaurantReservation;
      break;
    case 10:
      v9 = v0[5];
      v8 = type metadata accessor for HotelReservation;
      break;
    case 9:
      v7 = v0[5];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      OUTLINED_FUNCTION_22_10();
      v8 = type metadata accessor for FlightReservation;
      v9 = v7;
      break;
    default:
      _s10OmniSearch0B6ResultVWOhTm_1(v0[5], type metadata accessor for SearchResultItem);
      OUTLINED_FUNCTION_5_16();
      v10 = 1;
      goto LABEL_15;
  }
  _s10OmniSearch0B6ResultVWOhTm_1(v9, v8);
  OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_35_7();
LABEL_13:
  swift_storeEnumTagMultiPayload();
  v10 = 0;
LABEL_15:
  OUTLINED_FUNCTION_39_7(v0[2], v10);
  swift_task_dealloc();
  swift_task_dealloc();
  v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v11);
}

uint64_t FlightReservation.needsResolution.getter()
{
  uint64_t v0;
  char v1;

  v0 = FlightReservation.metadata.getter();
  v1 = specialized Sequence.contains(where:)(v0, outlined read-only object #0 of FlightReservation.needsResolution.getter);
  OUTLINED_FUNCTION_6_1();
  return v1 & 1;
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance InstantAnswerExtraction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_112(v9);
  *v10 = v6;
  v10[1] = protocol witness for ExtractionRule.extractInfo(query:result:) in conformance InstantAnswerExtraction;
  return InstantAnswerExtraction.extractInfo(query:result:)(a1, v11, v12, v13, v14, a6);
}

uint64_t CalendarLocationAnswer.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[12] = a6;
  v7[13] = a7;
  v7[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CalendarEvent?);
  v7[14] = OUTLINED_FUNCTION_0_15();
  v7[15] = type metadata accessor for CalendarEvent(0);
  v7[16] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t CalendarLocationAnswer.extractFromSource(query:answer:source:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  SearchResultItem.associatedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if ((OUTLINED_FUNCTION_19_12() & 1) == 0)
  {
    v21 = v0[14];
    OUTLINED_FUNCTION_49(v21, v1, v2, v0[15]);
    outlined destroy of MobileSMSDocument?(v21, &demangling cache variable for type metadata for CalendarEvent?);
LABEL_8:
    OUTLINED_FUNCTION_5_16();
    v17 = OUTLINED_FUNCTION_17_14();
    goto LABEL_9;
  }
  v3 = v0[15];
  v4 = v0[16];
  v5 = v0[14];
  OUTLINED_FUNCTION_14_9(v5);
  outlined init with take of SearchResult(v5, v4, type metadata accessor for CalendarEvent);
  v6 = (uint64_t *)(v4 + *(int *)(v3 + 36));
  v7 = v6[1];
  v8 = v0[16];
  if (!v7)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(v0[16], type metadata accessor for CalendarEvent);
    goto LABEL_8;
  }
  v9 = *v6;
  v10 = v0[12];
  v11 = (uint64_t *)(v10 + *(int *)(OUTLINED_FUNCTION_26_10() + 24));
  v13 = *v11;
  v12 = v11[1];
  v0[7] = v13;
  v0[8] = v12;
  v0[9] = v9;
  v0[10] = v7;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_64();
  v14 = OUTLINED_FUNCTION_29_9();
  _s10OmniSearch0B6ResultVWOhTm_1(v8, type metadata accessor for CalendarEvent);
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_1();
    goto LABEL_8;
  }
  v15 = (_QWORD *)v0[11];
  *v15 = v9;
  v15[1] = v7;
  v16 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_1_5();
  swift_storeEnumTagMultiPayload();
  v17 = (uint64_t)v15;
  v18 = 0;
  v19 = 1;
  v20 = v16;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_6_13(v22);
}

uint64_t protocol witness for AnswerSourceExtractionRule.extractFromSource(query:answer:source:) in conformance CalendarLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_11();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_13_14(v1);
  return CalendarLocationAnswer.extractFromSource(query:answer:source:)(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t WalletLocationAnswer.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[23] = a6;
  v7[24] = a7;
  v7[22] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WalletTransaction?);
  v7[25] = OUTLINED_FUNCTION_0_15();
  v7[26] = type metadata accessor for WalletTransaction(0);
  v7[27] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t WalletLocationAnswer.extractFromSource(query:answer:source:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  SearchResultItem.associatedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  if ((OUTLINED_FUNCTION_19_12() & 1) == 0)
  {
    v27 = v0[25];
    OUTLINED_FUNCTION_49(v27, v1, v2, v0[26]);
    outlined destroy of MobileSMSDocument?(v27, &demangling cache variable for type metadata for WalletTransaction?);
LABEL_15:
    OUTLINED_FUNCTION_5_16();
    v28 = OUTLINED_FUNCTION_17_14();
    goto LABEL_30;
  }
  v3 = v0[26];
  v4 = v0[27];
  v5 = v0[25];
  v6 = v0[23];
  OUTLINED_FUNCTION_14_9(v5);
  outlined init with take of SearchResult(v5, v4, type metadata accessor for WalletTransaction);
  v7 = (_QWORD *)(v6 + *(int *)(OUTLINED_FUNCTION_26_10() + 24));
  v8 = v7[1];
  v0[17] = *v7;
  v0[18] = v8;
  v9 = (uint64_t *)(v4 + *(int *)(v3 + 32));
  v11 = *v9;
  v10 = v9[1];
  if (v10)
    v12 = *v9;
  else
    v12 = 0;
  if (v10)
    v13 = v10;
  else
    v13 = 0xE000000000000000;
  v0[19] = v12;
  v0[20] = v13;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_76_0();
  v14 = OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_121();
  v15 = v0[27];
  if ((v14 & 1) == 0)
  {
    _s10OmniSearch0B6ResultVWOhTm_1(v0[27], type metadata accessor for WalletTransaction);
    goto LABEL_15;
  }
  v16 = v0[26];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2433505A0;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v10;
  v18 = (uint64_t *)(v15 + *(int *)(v16 + 36));
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)(inited + 48) = *v18;
  *(_QWORD *)(inited + 56) = v19;
  v21 = (uint64_t *)(v15 + *(int *)(v16 + 40));
  v22 = v21[1];
  v48 = *v21;
  *(_QWORD *)(inited + 64) = *v21;
  *(_QWORD *)(inited + 72) = v22;
  OUTLINED_FUNCTION_64();
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_115();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v24 = v23;
    v25 = *(_QWORD *)(v23 + 16);
    if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
    {
      OUTLINED_FUNCTION_68_3();
      v24 = v43;
    }
    *(_QWORD *)(v24 + 16) = v25 + 1;
    v26 = v24 + 16 * v25;
    *(_QWORD *)(v26 + 32) = v11;
    *(_QWORD *)(v26 + 40) = v10;
  }
  else
  {
    OUTLINED_FUNCTION_115();
    v24 = MEMORY[0x24BEE4AF8];
  }
  if (v19)
  {
    OUTLINED_FUNCTION_115();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_68_3();
      v24 = v44;
    }
    v32 = *(_QWORD *)(v24 + 16);
    if (v32 >= *(_QWORD *)(v24 + 24) >> 1)
    {
      OUTLINED_FUNCTION_68_3();
      v24 = v45;
    }
    *(_QWORD *)(v24 + 16) = v32 + 1;
    v33 = v24 + 16 * v32;
    *(_QWORD *)(v33 + 32) = v20;
    *(_QWORD *)(v33 + 40) = v19;
  }
  if (v22)
  {
    OUTLINED_FUNCTION_64();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_68_3();
      v24 = v46;
    }
    v34 = *(_QWORD *)(v24 + 16);
    if (v34 >= *(_QWORD *)(v24 + 24) >> 1)
    {
      OUTLINED_FUNCTION_68_3();
      v24 = v47;
    }
    *(_QWORD *)(v24 + 16) = v34 + 1;
    v35 = v24 + 16 * v34;
    *(_QWORD *)(v35 + 32) = v48;
    *(_QWORD *)(v35 + 40) = v22;
  }
  v36 = v0[27];
  v37 = (uint64_t *)v0[22];
  swift_release();
  v0[21] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
  v38 = BidirectionalCollection<>.joined(separator:)();
  v40 = v39;
  OUTLINED_FUNCTION_121();
  _s10OmniSearch0B6ResultVWOhTm_1(v36, type metadata accessor for WalletTransaction);
  *v37 = v38;
  v37[1] = v40;
  OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_35_7();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_30_9();
LABEL_30:
  __swift_storeEnumTagSinglePayload(v28, v29, v30, v31);
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  v41 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v41();
}

uint64_t protocol witness for AnswerSourceExtractionRule.extractFromSource(query:answer:source:) in conformance WalletLocationAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_11();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_13_14(v1);
  return WalletLocationAnswer.extractFromSource(query:answer:source:)(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FlightFromExtractedAnswer.featureFlag.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FlightFromExtractedAnswer.featureFlag.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t FlightFromExtractedAnswer.extractFromSource(query:answer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[22] = a6;
  v7[23] = a7;
  v7[21] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  v7[24] = OUTLINED_FUNCTION_0_15();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  v7[25] = OUTLINED_FUNCTION_0_15();
  type metadata accessor for DateComponents();
  v7[26] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t FlightFromExtractedAnswer.extractFromSource(query:answer:source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  SearchResultItem.associatedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DataDetectable);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = v0 + 16;
    outlined init with take of SageSearchClient((__int128 *)(v0 + 96), v0 + 16);
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v41, v2, v3);
    v4 = v41;
    if (v41)
    {
      v5 = v43;
      OUTLINED_FUNCTION_76_0();
      outlined consume of DataDetectorResults?(v4);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        v7 = *(_QWORD *)(v0 + 176);
        v8 = (uint64_t *)(v7 + *(int *)(OUTLINED_FUNCTION_26_10() + 24));
        v9 = v8[1];
        v38 = *v8;
        OUTLINED_FUNCTION_76_0();
        v10 = (uint64_t *)(v5 + 56);
        while (1)
        {
          v12 = *(v10 - 1);
          v11 = *v10;
          v14 = *(v10 - 3);
          v13 = (void *)*(v10 - 2);
          *(_QWORD *)(v0 + 136) = v38;
          *(_QWORD *)(v0 + 144) = v9;
          v41 = v12;
          v42 = v11;
          OUTLINED_FUNCTION_23_0();
          swift_bridgeObjectRetain_n();
          v15._countAndFlagsBits = v14;
          v15._object = v13;
          String.append(_:)(v15);
          v16 = v42;
          *(_QWORD *)(v0 + 152) = v41;
          *(_QWORD *)(v0 + 160) = v16;
          lazy protocol witness table accessor for type String and conformance String();
          OUTLINED_FUNCTION_64();
          v17 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_6_1();
          if ((v17 & 1) != 0)
            break;
          v10 += 4;
          OUTLINED_FUNCTION_56_0();
          OUTLINED_FUNCTION_121();
          if (!--v6)
          {
            OUTLINED_FUNCTION_47();
            v1 = v0 + 16;
            goto LABEL_8;
          }
        }
        v24 = *(_QWORD *)(v0 + 184);
        swift_bridgeObjectRelease_n();
        v25 = *(void **)(v24 + *(int *)(type metadata accessor for SearchResult(0) + 20));
        if (v25)
        {
          OUTLINED_FUNCTION_91_0();
          OUTLINED_FUNCTION_23_0();
          v26 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(v25);
          if (v27)
          {
            v39 = v26;
            v40 = v27;
LABEL_18:
            v29 = *(_QWORD *)(v0 + 200);
            v28 = *(_QWORD *)(v0 + 208);
            v30 = *(_QWORD *)(v0 + 192);
            v31 = *(char **)(v0 + 168);
            v32 = type metadata accessor for Calendar();
            v35 = OUTLINED_FUNCTION_41_7(v29, v33, v34, v32);
            OUTLINED_FUNCTION_49(v30, v36, v37, v35);
            OUTLINED_FUNCTION_15_10();
            FlightReservation.init(flightNumber:flightCarrierCode:bundleId:flightDepartureDateComponents:)(v14, (uint64_t)v13, v12, v11, v39, v40, v28, v31);
            OUTLINED_FUNCTION_56_0();
            OUTLINED_FUNCTION_121();
            OUTLINED_FUNCTION_5_16();
            OUTLINED_FUNCTION_1_5();
            swift_storeEnumTagMultiPayload();
            OUTLINED_FUNCTION_14_9((uint64_t)v31);
            __swift_destroy_boxed_opaque_existential_1(v0 + 16);
            goto LABEL_12;
          }
        }
        else
        {
          OUTLINED_FUNCTION_91_0();
          OUTLINED_FUNCTION_23_0();
        }
        swift_bridgeObjectRelease();
        v39 = 0;
        v40 = 0xE000000000000000;
        goto LABEL_18;
      }
LABEL_8:
      OUTLINED_FUNCTION_47();
    }
    __swift_destroy_boxed_opaque_existential_1(v1);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    outlined destroy of MobileSMSDocument?(v0 + 96, &demangling cache variable for type metadata for DataDetectable?);
  }
  v18 = *(_QWORD *)(v0 + 168);
  v19 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_49(v18, v20, v21, v19);
LABEL_12:
  swift_task_dealloc();
  OUTLINED_FUNCTION_104();
  swift_task_dealloc();
  v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v22();
}

uint64_t FlightReservation.init(flightNumber:flightCarrierCode:bundleId:flightDepartureDateComponents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[16];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;

  v72 = a7;
  v68 = a6;
  v67 = a5;
  v73 = a4;
  v63 = a3;
  v65 = a2;
  v64 = a1;
  v66 = a8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_1();
  v71 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t)&v54 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Calendar?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_61_0();
  v14 = type metadata accessor for DateComponents();
  v15 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  v58 = v15;
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_18_1();
  v69 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v54 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v23;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v54 - v25;
  v59 = (uint64_t)&v54 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v54 - v27;
  v60 = (uint64_t)&v54 - v27;
  v29 = type metadata accessor for UUID();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v54 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  v62 = UUID.uuidString.getter();
  v61 = v33;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  type metadata accessor for URL();
  OUTLINED_FUNCTION_89_5((uint64_t)v28);
  OUTLINED_FUNCTION_89_5((uint64_t)v26);
  OUTLINED_FUNCTION_89_5((uint64_t)v23);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v55 = v19;
  v34(v19, v72, v14);
  v35 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_41_7(v8, v36, v37, v35);
  v38 = v70;
  OUTLINED_FUNCTION_89_5(v70);
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_89_5(v38);
  OUTLINED_FUNCTION_89_5(v71);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24334DB60;
  *(_QWORD *)(v39 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v39 + 40) = v40;
  v41 = dateString(fromDateComponents:timezone:)();
  v43 = v42;
  v44 = dateString(fromDateComponents:timezone:)();
  v46 = v45;
  v75 = v41;
  v76 = v43;
  v77 = v44;
  v78 = v45;
  v47 = v63;
  v79 = v63;
  v80 = v73;
  v48 = v64;
  v49 = v65;
  v81 = v64;
  v82 = v65;
  v83 = 0u;
  v84 = 0u;
  v85 = 0u;
  v50 = MEMORY[0x24BEE4AF8];
  v86 = MEMORY[0x24BEE4AF8];
  v87 = 0u;
  v88 = 0u;
  v51 = specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t *__return_ptr, _QWORD *))partial apply for closure #1 in FlightReservation.init(id:url:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:answerAttributes:bundleId:mailMessageId:), (uint64_t)v74, v39);
  specialized Dictionary.init<A>(uniqueKeysWithValues:)(v51);
  FlightReservation.init(id:url:answers:answerAttributes:bundleId:mailMessageId:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:flightDepartureDateString:flightArrivalDateString:resolvedFlightJSON:)(v62, v61, v60, v52, v39, 0, v66, 0, v48, v49, v59, (uint64_t)v56, 0, 0, v47, v73, (uint64_t)v55, v69, v70,
    v71,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v50,
    v50,
    0,
    0,
    0,
    0,
    v41,
    v43,
    v44,
    v46);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v72, v57);
}

uint64_t default argument 0 of FlightFromExtractedAnswer.init(featureFlag:)()
{
  return 3;
}

uint64_t protocol witness for AnswerSourceExtractionRule.extractFromSource(query:answer:source:) in conformance FlightFromExtractedAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_11();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_13_14(v1);
  return FlightFromExtractedAnswer.extractFromSource(query:answer:source:)(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t protocol witness for ExtractionRule.featureFlag.getter in conformance FlightFromExtractedAnswer()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MediaURLAnswer.requiresHydratedResults.getter(char a1)
{
  return a1 & 1;
}

uint64_t MediaURLAnswer.lang.getter()
{
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_1_5();
}

void MediaURLAnswer.regex.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *rawValue;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_0();
  if (one-time initialization token for kMediaRegexTriggersPerLang != -1)
    swift_once();
  rawValue = kMediaRegexTriggersPerLang._rawValue;
  if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_49(v1, v12, v13, v11);
LABEL_10:
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for Regex<Substring>?);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_58_6();
  if ((v5 & 1) != 0)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_12_14(v6);
    OUTLINED_FUNCTION_30_9();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    v7 = OUTLINED_FUNCTION_43_9();
  }
  __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  swift_bridgeObjectRelease();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  OUTLINED_FUNCTION_52_8(v14);
  if (v15)
    goto LABEL_10;
  *(_QWORD *)(a1 + 24) = rawValue;
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>, &demangling cache variable for type metadata for Regex<Substring>);
  v17 = OUTLINED_FUNCTION_48_5(v16);
  OUTLINED_FUNCTION_25_10((uint64_t)v17);
LABEL_11:
  OUTLINED_FUNCTION_63();
}

uint64_t MediaURLAnswer.extractMatched(typedResult:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[15] = a1;
  v2[16] = a2;
  v2[17] = type metadata accessor for SearchResultItem(0);
  v2[18] = OUTLINED_FUNCTION_5_8();
  v2[19] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
  v2[20] = OUTLINED_FUNCTION_0_15();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match);
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = OUTLINED_FUNCTION_18_5();
  v2[24] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v2[25] = OUTLINED_FUNCTION_18_5();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v2[26] = v4;
  v2[27] = *(_QWORD *)(v4 - 8);
  v2[28] = OUTLINED_FUNCTION_5_8();
  v2[29] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[30] = OUTLINED_FUNCTION_5_8();
  v2[31] = OUTLINED_FUNCTION_17();
  v5 = type metadata accessor for URL();
  v2[32] = v5;
  v2[33] = *(_QWORD *)(v5 - 8);
  v2[34] = OUTLINED_FUNCTION_5_8();
  v2[35] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t MediaURLAnswer.extractMatched(typedResult:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD, _QWORD);
  void *rawValue;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;

  v1 = v0[31];
  v2 = v0[16];
  v40 = OUTLINED_FUNCTION_26_10();
  v3 = (uint64_t *)(v2 + *(int *)(v40 + 24));
  v4 = v3[1];
  v45 = *v3;
  URL.init(string:)();
  v5 = (uint64_t)&kMediaURLTriggers;
  if (OUTLINED_FUNCTION_40_4(v1) != 1)
  {
    v6 = *(void (**)(_QWORD, _QWORD, _QWORD))(v0[33] + 32);
    v6(v0[35], v0[31], v0[32]);
    if (one-time initialization token for kMediaURLTriggers != -1)
      swift_once();
    rawValue = kMediaURLTriggers._rawValue;
    v44 = *((_QWORD *)kMediaURLTriggers._rawValue + 2);
    if (v44)
    {
      v41 = v6;
      v8 = v0[29];
      v10 = v0[26];
      v9 = v0[27];
      v39 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v43 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 16);
      v43(v8, (char *)kMediaURLTriggers._rawValue + v39, v10);
      v0[11] = v45;
      v0[12] = v4;
      lazy protocol witness table accessor for type String and conformance String();
      lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>, &demangling cache variable for type metadata for Regex<(Substring, Substring)>);
      OUTLINED_FUNCTION_115();
      OUTLINED_FUNCTION_64();
      v11 = BidirectionalCollection<>.contains<A>(_:)();
      v12 = rawValue;
      v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v13(v8, v10);
      if ((v11 & 1) == 0)
      {
        if (v44 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          OUTLINED_FUNCTION_6_1();
          goto LABEL_15;
        }
        v42 = *(_QWORD *)(v0[27] + 72);
        v14 = (unint64_t)v12 + v42 + v39;
        v5 = 1;
        while (1)
        {
          v43(v0[29], (char *)v14, v0[26]);
          v15 = v5 + 1;
          if (__OFADD__(v5, 1))
            goto LABEL_28;
          v16 = v0[29];
          v17 = v0[26];
          v0[13] = v45;
          v0[14] = v4;
          v18 = BidirectionalCollection<>.contains<A>(_:)();
          v13(v16, v17);
          if ((v18 & 1) != 0)
            break;
          ++v5;
          v14 += v42;
          if (v15 == v44)
          {
            swift_bridgeObjectRelease();
            v5 = (uint64_t)&kMediaURLTriggers;
            goto LABEL_14;
          }
        }
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      v41(v0[15], v0[35], v0[32]);
      OUTLINED_FUNCTION_5_16();
      swift_storeEnumTagMultiPayload();
      v31 = 0;
      goto LABEL_26;
    }
LABEL_15:
    (*(void (**)(_QWORD, _QWORD))(v0[33] + 8))(v0[35], v0[32]);
    goto LABEL_16;
  }
  outlined destroy of MobileSMSDocument?(v0[31], &demangling cache variable for type metadata for URL?);
LABEL_16:
  if (one-time initialization token for kMediaURLTriggers != -1)
    goto LABEL_29;
  while (1)
  {
    v19 = *(_QWORD *)v5;
    v35 = *(_QWORD *)(*(_QWORD *)v5 + 16);
    if (!v35)
      break;
    v20 = v0[27];
    v34 = v0[24];
    v37 = *(int *)(v40 + 32);
    v38 = v0[16];
    v36 = v19 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    swift_bridgeObjectRetain();
    v21 = 0;
    while (v21 < *(_QWORD *)(v19 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v20 + 16))(v0[28], v36 + *(_QWORD *)(v20 + 72) * v21, v0[26]);
      v22 = *(_QWORD *)(v38 + v37);
      if (*(_QWORD *)(v22 + 16))
      {
        v23 = v22 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
        swift_bridgeObjectRetain();
        v25 = v0[18];
        v24 = v0[19];
        outlined init with copy of SearchResult(v23, v0[25], type metadata accessor for SearchResult);
        v26 = OUTLINED_FUNCTION_47_8();
        outlined init with copy of SearchResult(v26, v27, type metadata accessor for SearchResultItem);
        v28 = OUTLINED_FUNCTION_1_5();
        _s10OmniSearch0B6ResultVWOhTm_1(v28, v29);
        outlined init with copy of SearchResult(v24, v25, type metadata accessor for SearchResultItem);
        v30 = (char *)&loc_2431F8AEC + *((int *)qword_2431F9160 + swift_getEnumCaseMultiPayload());
        __asm { BR              X9 }
      }
      ++v21;
      (*(void (**)(_QWORD, _QWORD))(v20 + 8))(v0[28], v0[26]);
      if (v21 == v35)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
  }
LABEL_24:
  OUTLINED_FUNCTION_5_16();
  v31 = 1;
LABEL_26:
  OUTLINED_FUNCTION_39_7(v0[15], v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v32 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_5();
  return v32();
}

void protocol witness for RegexExtractionRule.regex.getter in conformance MediaURLAnswer(uint64_t a1@<X8>)
{
  MediaURLAnswer.regex.getter(a1);
}

uint64_t protocol witness for RegexExtractionRule.extractMatched(typedResult:) in conformance MediaURLAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_53_8(v1);
  return MediaURLAnswer.extractMatched(typedResult:)(v2, v3);
}

uint64_t MediaNameAnswer.lang.getter()
{
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_1_5();
}

void MediaNameAnswer.regex.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *rawValue;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_61_0();
  if (one-time initialization token for kMediaRegexTriggersPerLang != -1)
    swift_once();
  rawValue = kMediaRegexTriggersPerLang._rawValue;
  if (!*((_QWORD *)kMediaRegexTriggersPerLang._rawValue + 2))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_49(v1, v12, v13, v11);
LABEL_10:
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for Regex<Substring>?);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_58_6();
  if ((v5 & 1) != 0)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    OUTLINED_FUNCTION_12_14(v6);
    OUTLINED_FUNCTION_30_9();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
    v7 = OUTLINED_FUNCTION_43_9();
  }
  __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  swift_bridgeObjectRelease();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<Substring>);
  OUTLINED_FUNCTION_52_8(v14);
  if (v15)
    goto LABEL_10;
  *(_QWORD *)(a1 + 24) = rawValue;
  lazy protocol witness table accessor for type [JSONEncoder.OutputFormatting] and conformance [A](&lazy protocol witness table cache variable for type Regex<Substring> and conformance Regex<A>, &demangling cache variable for type metadata for Regex<Substring>);
  v17 = OUTLINED_FUNCTION_48_5(v16);
  OUTLINED_FUNCTION_25_10((uint64_t)v17);
LABEL_11:
  OUTLINED_FUNCTION_63();
}

uint64_t MediaNameAnswer.extractMatched(typedResult:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

uint64_t MediaNameAnswer.extractMatched(typedResult:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v2 = (_QWORD *)v0[2];
  v1 = v0[3];
  v3 = (_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_26_10() + 24));
  v4 = v3[1];
  *v2 = *v3;
  v2[1] = v4;
  v5 = OUTLINED_FUNCTION_5_16();
  OUTLINED_FUNCTION_47_8();
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v5);
  v7 = (uint64_t (*)(void))v0[1];
  OUTLINED_FUNCTION_64();
  return v7();
}

void protocol witness for RegexExtractionRule.regex.getter in conformance MediaNameAnswer(uint64_t a1@<X8>)
{
  MediaNameAnswer.regex.getter(a1);
}

uint64_t protocol witness for RegexExtractionRule.extractMatched(typedResult:) in conformance MediaNameAnswer()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_112(v0);
  v2 = OUTLINED_FUNCTION_53_8(v1);
  return MediaNameAnswer.extractMatched(typedResult:)(v2, v3);
}

uint64_t outlined consume of DataDetectorResults?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_bundleID);

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return OUTLINED_FUNCTION_47_8();
}

double partial apply for closure #1 in FlightReservation.init(id:url:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:answerAttributes:bundleId:mailMessageId:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return closure #1 in FlightReservation.init(id:url:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:answerAttributes:bundleId:mailMessageId:)(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(void **)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144),
           *(_QWORD *)(v2 + 152),
           *(_QWORD *)(v2 + 160));
}

unint64_t instantiation function for generic protocol witness table for CalendarLocationAnswer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type CalendarLocationAnswer and conformance CalendarLocationAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type CalendarLocationAnswer and conformance CalendarLocationAnswer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CalendarLocationAnswer and conformance CalendarLocationAnswer;
  if (!lazy protocol witness table cache variable for type CalendarLocationAnswer and conformance CalendarLocationAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for CalendarLocationAnswer, &type metadata for CalendarLocationAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CalendarLocationAnswer and conformance CalendarLocationAnswer);
  }
  return result;
}

void associated type witness table accessor for TypedExtractionRule.T : SearchItem in CalendarLocationAnswer()
{
  lazy protocol witness table accessor for type JSONEncoder.OutputFormatting and conformance JSONEncoder.OutputFormatting(&lazy protocol witness table cache variable for type Answer and conformance Answer, (void (*)(uint64_t))type metadata accessor for Answer);
}

unint64_t instantiation function for generic protocol witness table for WalletLocationAnswer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type WalletLocationAnswer and conformance WalletLocationAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type WalletLocationAnswer and conformance WalletLocationAnswer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type WalletLocationAnswer and conformance WalletLocationAnswer;
  if (!lazy protocol witness table cache variable for type WalletLocationAnswer and conformance WalletLocationAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for WalletLocationAnswer, &type metadata for WalletLocationAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WalletLocationAnswer and conformance WalletLocationAnswer);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for FlightFromExtractedAnswer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type FlightFromExtractedAnswer and conformance FlightFromExtractedAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type FlightFromExtractedAnswer and conformance FlightFromExtractedAnswer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FlightFromExtractedAnswer and conformance FlightFromExtractedAnswer;
  if (!lazy protocol witness table cache variable for type FlightFromExtractedAnswer and conformance FlightFromExtractedAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for FlightFromExtractedAnswer, &type metadata for FlightFromExtractedAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FlightFromExtractedAnswer and conformance FlightFromExtractedAnswer);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for MediaURLAnswer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type MediaURLAnswer and conformance MediaURLAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table accessor for type MediaURLAnswer and conformance MediaURLAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type MediaURLAnswer and conformance MediaURLAnswer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer;
  if (!lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MediaURLAnswer, &type metadata for MediaURLAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer;
  if (!lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MediaURLAnswer, &type metadata for MediaURLAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaURLAnswer and conformance MediaURLAnswer);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for MediaNameAnswer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type MediaNameAnswer and conformance MediaNameAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table accessor for type MediaNameAnswer and conformance MediaNameAnswer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type MediaNameAnswer and conformance MediaNameAnswer()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer;
  if (!lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MediaNameAnswer, &type metadata for MediaNameAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer;
  if (!lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MediaNameAnswer, &type metadata for MediaNameAnswer);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaNameAnswer and conformance MediaNameAnswer);
  }
  return result;
}

void type metadata accessor for InstantAnswerExtraction()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for CalendarLocationAnswer()
{
  OUTLINED_FUNCTION_103_0();
}

void type metadata accessor for WalletLocationAnswer()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t getEnumTagSinglePayload for FlightFromExtractedAnswer(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1))
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 8)) - 8;
        return (v5 + 1);
      }
      v4 = a1[1];
      if (a1[1])
        goto LABEL_15;
    }
  }
LABEL_17:
  if (*a1 <= 7u)
    v6 = 7;
  else
    v6 = *a1;
  v7 = v6 - 8;
  if (*a1 < 7u)
    v5 = -1;
  else
    v5 = v7;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FlightFromExtractedAnswer(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2431F9984 + 4 * byte_2433510A5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2431F99B8 + 4 * byte_2433510A0[v4]))();
}

uint64_t sub_2431F99B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F99C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2431F99C8);
  return result;
}

uint64_t sub_2431F99D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2431F99DCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2431F99E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2431F99E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for FlightFromExtractedAnswer()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t destroy for MediaURLAnswer()
{
  return swift_bridgeObjectRelease();
}

void initializeBufferWithCopyOfBuffer for MediaURLAnswer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5();
}

uint64_t assignWithCopy for MediaURLAnswer(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MediaURLAnswer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaURLAnswer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaURLAnswer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MediaURLAnswer()
{
  OUTLINED_FUNCTION_103_0();
}

_QWORD *assignWithCopy for MediaNameAnswer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MediaNameAnswer()
{
  OUTLINED_FUNCTION_103_0();
}

uint64_t sub_2431F9B94()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return type metadata accessor for ExtractedInfo(0);
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, a1);
}

uint64_t OUTLINED_FUNCTION_13_14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_14_9(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t OUTLINED_FUNCTION_17_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_22_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_25_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_26_10()
{
  return type metadata accessor for Answer(0);
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_40_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_41_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return type metadata accessor for TimeZone();
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_47_8()
{
  uint64_t v0;

  return v0;
}

uint64_t *OUTLINED_FUNCTION_48_5(uint64_t a1)
{
  uint64_t *v1;

  v1[4] = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_49_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_52_8(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_53_8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

unint64_t OUTLINED_FUNCTION_58_6()
{
  uint64_t v0;
  uint64_t v1;

  return specialized __RawDictionaryStorage.find<A>(_:)(v1, v0);
}

uint64_t SearchToolError.localizedStringResource.getter(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;

  v4 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  MEMORY[0x24BDAC7A8](v4);
  if ((unint64_t)a2 <= 1)
    return LocalizedStringResource.init(stringLiteral:)();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x800000024335C8E0;
  v6._countAndFlagsBits = 0xD000000000000012;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v6);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v7);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v8);
  return LocalizedStringResource.init(stringInterpolation:)();
}

uint64_t static SearchToolError.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
    return !a4;
  if (a2 == 1)
    return a4 == 1;
  if (a4 < 2)
    return 0;
  if (a1 != a3 || a2 != a4)
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  return 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchToolError(uint64_t *a1, uint64_t a2)
{
  return static SearchToolError.== infix(_:_:)(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchToolError()
{
  uint64_t v0;

  return SearchToolError.localizedStringResource.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

unint64_t destroy for SearchToolError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SearchToolError(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for SearchToolError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchToolError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchToolError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchToolError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t getEnumTag for SearchToolError(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *destructiveInjectEnumTag for SearchToolError(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchToolError()
{
  return &type metadata for SearchToolError;
}

uint64_t AnswerSynthesisExtraction.init(networkService:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 + 40) = 1;
  if (one-time initialization token for supportedTypes != -1)
    swift_once();
  *(_QWORD *)(a2 + 48) = static AnswerSynthesisController.supportedTypes;
  outlined init with take of SageSearchClient(a1, a2);
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisExtraction.answerSynthesisNetworkService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IMSPIMessageProtocol(v1, a1);
}

uint64_t AnswerSynthesisExtraction.answerSynthesisNetworkService.setter(__int128 *a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v1);
  return outlined init with take of SageSearchClient(a1, v1);
}

uint64_t (*AnswerSynthesisExtraction.answerSynthesisNetworkService.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t AnswerSynthesisExtraction.requiresHydratedResults.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t AnswerSynthesisExtraction.eligibleResultTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnswerSynthesisExtraction.eligibleResultTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*AnswerSynthesisExtraction.eligibleResultTypes.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t AnswerSynthesisExtraction.extractResults(query:results:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Answer?);
  v6[14] = OUTLINED_FUNCTION_0_15();
  v6[15] = type metadata accessor for ExtractedInfo(0);
  v6[16] = OUTLINED_FUNCTION_0_15();
  v6[17] = *(_QWORD *)(type metadata accessor for SearchResult(0) - 8);
  v6[18] = OUTLINED_FUNCTION_5_8();
  v6[19] = OUTLINED_FUNCTION_17();
  v6[20] = OUTLINED_FUNCTION_17();
  v7 = type metadata accessor for ExtractedResult(0);
  v6[21] = v7;
  v6[22] = *(_QWORD *)(v7 - 8);
  v6[23] = OUTLINED_FUNCTION_5_8();
  v6[24] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerSynthesisExtraction.extractResults(query:results:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[13];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8)
                                                                                  + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  *v4 = v0;
  v4[1] = AnswerSynthesisExtraction.extractResults(query:results:);
  return v6(v0 + 7, v0[10], v0[11], v0[12], v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    if (v1 == 1)
    {
      if (one-time initialization token for search != -1)
        swift_once();
      v20 = type metadata accessor for Logger();
      __swift_project_value_buffer(v20, (uint64_t)static Logging.search);
      v21 = Logger.logObject.getter();
      v22 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_24315F000, v21, v22, "Answer synthesis: no answer found in personal results. Returning no answers", v23, 2u);
        specialized UnsafeMutablePointer.deallocate()();
      }

      v2 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      if (v1 != 2)
      {
        v24 = *(_QWORD *)(v1 + 16);
        if (v24)
        {
          v47 = *(_QWORD *)(v0 + 176);
          v25 = *(_QWORD *)(v0 + 136);
          v45 = *(_QWORD *)(v0 + 128);
          v46 = *(_QWORD *)(v0 + 168);
          v48 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v26 = v1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
          v43 = v1;
          v44 = *(_QWORD *)(v25 + 72);
          do
          {
            v28 = *(_QWORD *)(v0 + 152);
            v27 = *(_QWORD *)(v0 + 160);
            outlined init with copy of SearchResult(v26, v27, type metadata accessor for SearchResult);
            outlined init with copy of SearchResult(v27, v28, type metadata accessor for SearchResult);
            SearchResultItem.associatedValue.getter();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchItem);
            v29 = type metadata accessor for Answer(0);
            v30 = swift_dynamicCast();
            v31 = *(_QWORD *)(v0 + 112);
            if (v30)
            {
              OUTLINED_FUNCTION_13_15(*(_QWORD *)(v0 + 112), 0);
              v32 = (uint64_t *)(v31 + *(int *)(v29 + 24));
              v33 = *v32;
              v34 = v32[1];
              swift_bridgeObjectRetain();
              _s10OmniSearch0B6ResultVWOhTm_1(v31, type metadata accessor for Answer);
            }
            else
            {
              OUTLINED_FUNCTION_13_15(*(_QWORD *)(v0 + 112), 1);
              outlined destroy of MobileSMSDocument?(v31, &demangling cache variable for type metadata for Answer?);
              v33 = 0;
              v34 = 0xE000000000000000;
            }
            v35 = *(_QWORD *)(v0 + 192);
            v36 = *(_QWORD *)(v0 + 152);
            v37 = *(_QWORD *)(v0 + 160);
            v38 = *(_QWORD **)(v0 + 128);
            *v38 = v33;
            *(_QWORD *)(v45 + 8) = v34;
            swift_storeEnumTagMultiPayload();
            outlined init with take of SearchResult(v36, v35, type metadata accessor for SearchResult);
            outlined init with take of SearchResult((uint64_t)v38, v35 + *(int *)(v46 + 20), type metadata accessor for ExtractedInfo);
            _s10OmniSearch0B6ResultVWOhTm_1(v37, type metadata accessor for SearchResult);
            v2 = v48;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_4_17();
              v2 = v48;
            }
            v39 = *(_QWORD *)(v2 + 16);
            if (v39 >= *(_QWORD *)(v2 + 24) >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v2 = v48;
            }
            v40 = *(_QWORD *)(v0 + 192);
            *(_QWORD *)(v2 + 16) = v39 + 1;
            outlined init with take of SearchResult(v40, v2+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v39, type metadata accessor for ExtractedResult);
            v26 += v44;
            --v24;
          }
          while (v24);
          outlined consume of AnswerSynthesisResult(v43);
          v41 = v43;
        }
        else
        {
          v41 = *(_QWORD *)(v0 + 56);
        }
        goto LABEL_33;
      }
      if (one-time initialization token for search != -1)
        swift_once();
      v3 = type metadata accessor for Logger();
      __swift_project_value_buffer(v3, (uint64_t)static Logging.search);
      v4 = Logger.logObject.getter();
      v5 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
        v48 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_DWORD *)v6 = 136315138;
        *(_QWORD *)(v0 + 64) = 2;
        v7 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v48);
        *(_QWORD *)(v0 + 72) = v9;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24315F000, v4, v5, "Answer synthesis: %s, returning all results", v6, 0xCu);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }

      v10 = *(_QWORD *)(v0 + 96);
      v11 = *(_QWORD *)(v10 + 16);
      v2 = MEMORY[0x24BEE4AF8];
      if (v11)
      {
        v12 = *(_QWORD *)(v0 + 176);
        v48 = MEMORY[0x24BEE4AF8];
        v13 = *(_QWORD *)(v0 + 136);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v14 = v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        v15 = *(_QWORD *)(v13 + 72);
        v2 = v48;
        do
        {
          v16 = *(_QWORD *)(v0 + 184);
          v17 = *(_QWORD *)(v0 + 144);
          outlined init with copy of SearchResult(v14, v17, type metadata accessor for SearchResult);
          outlined init with copy of SearchResult(v17, v16, type metadata accessor for SearchResult);
          swift_storeEnumTagMultiPayload();
          _s10OmniSearch0B6ResultVWOhTm_1(v17, type metadata accessor for SearchResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_4_17();
            v2 = v48;
          }
          v18 = *(_QWORD *)(v2 + 16);
          if (v18 >= *(_QWORD *)(v2 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v2 = v48;
          }
          v19 = *(_QWORD *)(v0 + 184);
          *(_QWORD *)(v2 + 16) = v18 + 1;
          outlined init with take of SearchResult(v19, v2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v18, type metadata accessor for ExtractedResult);
          v14 += v15;
          --v11;
        }
        while (v11);
        v41 = 2;
LABEL_33:
        outlined consume of AnswerSynthesisResult(v41);
      }
    }
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_95();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnswerSynthesisExtraction.extractInfo(query:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ExtractedResult?);
  v7[9] = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

uint64_t AnswerSynthesisExtraction.extractInfo(query:result:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResult>);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchResult(0) - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  v0[10] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_24334DB60;
  outlined init with copy of SearchResult(v1, v4 + v3, type metadata accessor for SearchResult);
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = AnswerSynthesisExtraction.extractInfo(query:result:);
  return AnswerSynthesisExtraction.extractResults(query:results:)((uint64_t)v5, v6, v0[5], v0[6], v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumTagSinglePayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 72);
  specialized Collection.first.getter(*(_QWORD *)(v0 + 104), v1);
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for ExtractedResult(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 72);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of MobileSMSDocument?(*(_QWORD *)(v0 + 72), &demangling cache variable for type metadata for ExtractedResult?);
    v5 = 1;
  }
  else
  {
    outlined init with copy of SearchResult(v4 + *(int *)(v2 + 20), *(_QWORD *)(v0 + 16), type metadata accessor for ExtractedInfo);
    _s10OmniSearch0B6ResultVWOhTm_1(v4, type metadata accessor for ExtractedResult);
    v5 = 0;
  }
  v6 = *(_QWORD *)(v0 + 16);
  v7 = type metadata accessor for ExtractedInfo(0);
  __swift_storeEnumTagSinglePayload(v6, v5, 1, v7);
  OUTLINED_FUNCTION_95();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnswerSynthesisExtraction.extractInfo(query:result:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 104) = a1;
  }
  OUTLINED_FUNCTION_54();
  return swift_task_switch();
}

uint64_t protocol witness for ExtractionRule.requiresHydratedResults.getter in conformance AnswerSynthesisExtraction()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t protocol witness for ExtractionRule.eligibleResultTypes.getter in conformance AnswerSynthesisExtraction()
{
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for ExtractionRule.extractResults(query:results:) in conformance AnswerSynthesisExtraction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return AnswerSynthesisExtraction.extractResults(query:results:)((uint64_t)v9, v10, a3, a4, a5);
}

uint64_t protocol witness for ExtractionRule.extractInfo(query:result:) in conformance AnswerSynthesisExtraction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = partial apply for closure #2 in closure #1 in GlobalSearchClient.search(query:sources:allowedTypes:searchOptions:);
  return AnswerSynthesisExtraction.extractInfo(query:result:)(a1, a2, a3, a4, a5, a6);
}

uint64_t destroy for AnswerSynthesisExtraction(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnswerSynthesisExtraction(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnswerSynthesisExtraction(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnswerSynthesisExtraction(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnswerSynthesisExtraction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnswerSynthesisExtraction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnswerSynthesisExtraction()
{
  return &type metadata for AnswerSynthesisExtraction;
}

void OUTLINED_FUNCTION_4_17()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_13_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t *MemoryCreationQUController.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static MemoryCreationQUController.shared;
}

void specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  __int128 v43;
  uint64_t v44;
  __int128 v45[3];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, PromptComponentValueConvertible>);
    v2 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v39 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(63 - v3) >> 6;
  v6 = (__int128 *)v42;
  v7 = (__int128 *)&v44;
  OUTLINED_FUNCTION_64();
  v40 = 0;
  v8 = MEMORY[0x24BEE0D00];
  v9 = MEMORY[0x24BE7AD80];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v41 = (v5 - 1) & v5;
        v10 = __clz(__rbit64(v5)) | (v40 << 6);
      }
      else
      {
        v11 = v40 + 1;
        if (__OFADD__(v40, 1))
          goto LABEL_38;
        if (v11 >= v38)
        {
LABEL_35:
          outlined consume of Set<FlightDesignator>.Iterator._Variant();
          return;
        }
        v12 = *(_QWORD *)(v39 + 8 * v11);
        v13 = v40 + 1;
        if (!v12)
        {
          OUTLINED_FUNCTION_89_8();
          if (v14 == v15)
            goto LABEL_35;
          OUTLINED_FUNCTION_88_4();
          if (!v12)
          {
            OUTLINED_FUNCTION_89_8();
            if (v14 == v15)
              goto LABEL_35;
            OUTLINED_FUNCTION_88_4();
            if (!v12)
            {
              OUTLINED_FUNCTION_89_8();
              if (v14 == v15)
                goto LABEL_35;
              OUTLINED_FUNCTION_88_4();
              if (!v12)
              {
                v17 = v16 + 4;
                if (v17 >= v38)
                  goto LABEL_35;
                v12 = *(_QWORD *)(v39 + 8 * v17);
                if (!v12)
                {
                  while (!__OFADD__(v17, 1))
                  {
                    OUTLINED_FUNCTION_89_8();
                    if (v14 == v15)
                      goto LABEL_35;
                    OUTLINED_FUNCTION_88_4();
                    v17 = v18 + 1;
                    if (v12)
                      goto LABEL_29;
                  }
                  goto LABEL_39;
                }
                v13 = v17;
              }
            }
          }
        }
LABEL_29:
        v40 = v13;
        v41 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v10);
      v21 = *v19;
      v20 = v19[1];
      v22 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v10);
      v23 = *v22;
      v24 = v22[1];
      v42[3] = v8;
      v42[4] = v9;
      v42[0] = v23;
      v42[1] = v24;
      outlined init with take of SageSearchClient(v6, (uint64_t)v7);
      outlined init with take of SageSearchClient(v7, (uint64_t)v45);
      outlined init with take of SageSearchClient(v45, (uint64_t)&v43);
      OUTLINED_FUNCTION_76_0();
      OUTLINED_FUNCTION_116_0();
      v25 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v20);
      v26 = v25;
      if ((v27 & 1) == 0)
        break;
      v28 = v7;
      v29 = v1;
      v30 = v9;
      v31 = v8;
      v32 = v6;
      v33 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *v33 = v21;
      v33[1] = v20;
      v6 = v32;
      v8 = v31;
      v9 = v30;
      v1 = v29;
      v7 = v28;
      v34 = v2[7] + 40 * v26;
      __swift_destroy_boxed_opaque_existential_1(v34);
      outlined init with take of SageSearchClient(&v43, v34);
      v5 = v41;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    v35 = (uint64_t *)(v2[6] + 16 * v25);
    *v35 = v21;
    v35[1] = v20;
    outlined init with take of SageSearchClient(&v43, v2[7] + 40 * v25);
    v36 = v2[2];
    v15 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (v15)
      goto LABEL_37;
    v2[2] = v37;
    v5 = v41;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v2 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  if (!v5)
    goto LABEL_9;
LABEL_8:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v40);
    *(_QWORD *)&v39 = v17;
    *((_QWORD *)&v39 + 1) = v16;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v17;
    *((_QWORD *)&v37[0] + 1) = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    outlined init with take of Any(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    outlined init with take of Any(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    outlined init with take of Any(v36, v37);
    outlined init with take of Any(v37, &v33);
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = *(_QWORD *)(v2 + 48) + 40 * v21;
    *(_OWORD *)v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(_QWORD *)(v26 + 32) = v31;
    result = (uint64_t)outlined init with take of Any(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v21));
    ++*(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_8;
LABEL_9:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_38;
    if (v11 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_36;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_36;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_36;
          v12 = *(_QWORD *)(v28 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v8 = v13;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    outlined consume of Set<FlightDesignator>.Iterator._Variant();
    return v2;
  }
  v12 = *(_QWORD *)(v28 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

id LLMQUParse.__allocating_init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)(a1, a2, a3, a4);
}

id PhotosQueryParser.parser.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void PhotosQueryParser.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_spotlightManager);
  OUTLINED_FUNCTION_5();
}

uint64_t PhotosQueryParser.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_spotlightManager);
  return v0;
}

void PhotosQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[6];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_243351420;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x800000024335C970;
  *(_QWORD *)(inited + 48) = 0xD000000000000010;
  *(_QWORD *)(inited + 56) = 0x800000024335C990;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 88) = 0x800000024335C9B0;
  *(_QWORD *)(inited + 96) = 0xD000000000000010;
  *(_QWORD *)(inited + 104) = 0x800000024335C990;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  *(_QWORD *)(inited + 136) = 0x800000024335C9D0;
  v11 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 144) = 1;
  *(_QWORD *)(inited + 168) = v11;
  *(_QWORD *)(inited + 176) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 184) = 0x800000024335C9F0;
  *(_QWORD *)(inited + 216) = v11;
  *(_BYTE *)(inited + 192) = 1;
  v12 = Dictionary.init(dictionaryLiteral:)();
  v13 = *(void **)(v4 + 16);
  if (a2)
    a2 = (void *)MEMORY[0x2494F5BB8](a1, a2);
  v14 = specialized _dictionaryUpCast<A, B, C, D>(_:)(v12);
  swift_bridgeObjectRelease();
  v15 = OUTLINED_FUNCTION_8();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v17[4] = partial apply for closure #1 in PhotosQueryParser.enumerateParseResults(for:completion:);
  v17[5] = v15;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = thunk for @escaping @callee_guaranteed (@guaranteed [AnyHashable : Any], @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  v17[3] = &block_descriptor_2;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  outlined bridged method (mnbnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)((uint64_t)a2, v14, (uint64_t)v16, v13);
  _Block_release(v16);

}

void closure #1 in PhotosQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(_QWORD);
  void *v17;
  uint64_t v18[5];
  _QWORD v19[4];

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logging.memoryCreationQU);
  swift_bridgeObjectRetain_n();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v16 = a3;
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18[0] = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    v10 = Dictionary.description.getter();
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = v10;
    a3 = v16;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v18);
    v19[0] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24315F000, v6, v7, "QP parse dict: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v9, -1, -1);
    MEMORY[0x2494F6D70](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v19[0] = static PhotosQueryParser.qpAttributedParseKey;
  v19[1] = unk_25728AA78;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter((uint64_t)v18, a1);
  outlined destroy of AnyHashable((uint64_t)v18);
  if (v19[3])
  {
    type metadata accessor for IMSPIMessage(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    if (swift_dynamicCast())
      v15 = v17;
    else
      v15 = 0;
  }
  else
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v19, &demangling cache variable for type metadata for Any?);
    v15 = 0;
  }
  a3(v15);

}

uint64_t PhotosQueryParser.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhotosQueryParser.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t protocol witness for QueryParserProtocol.enumerateParseResults(for:completion:) in conformance PhotosQueryParser()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

id LLMQUParse.attributedParse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_attributedParse);
}

uint64_t LLMQUParse.isTrip.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isTrip);
}

uint64_t LLMQUParse.isOpenEndedTimeRange.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isOpenEndedTimeRange);
}

uint64_t LLMQUParse.parseV2.getter()
{
  return swift_retain();
}

id LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _BYTE *v4;
  objc_super v6;

  *(_QWORD *)&v4[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_attributedParse] = a1;
  v4[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isTrip] = a3;
  v4[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_isOpenEndedTimeRange] = a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC10OmniSearch10LLMQUParse_parseV2] = a2;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for LLMQUParse();
  return objc_msgSendSuper2(&v6, sel_init);
}

id LLMQUParse.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LLMQUParse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LLMQUParse.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LLMQUParse();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2431FBF6C()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in PhotosQueryParser.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in PhotosQueryParser.enumerateParseResults(for:completion:)(a1, a2, *(void (**)(_QWORD))(v2 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

#error "2431FC00C: call analysis failed (funcsize=46)"

uint64_t static MemoryCreationQUController.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t key path setter for MemoryCreationQUController.llmQUNetworkService : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with copy of SearchResultRanking(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 112))(v4);
}

void MemoryCreationQUController.llmQUNetworkService.getter()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_97_6();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.llmQUNetworkService.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  OUTLINED_FUNCTION_2_6();
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of SageSearchClient(a1, v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.llmQUNetworkService.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t key path setter for MemoryCreationQUController.ecrClient : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ECRClientProtocol?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 136))(v4);
}

void MemoryCreationQUController.ecrClient.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_6();
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v1 + 56, a1, &demangling cache variable for type metadata for ECRClientProtocol?);
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.ecrClient.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_6();
  outlined assign with take of ECRClientProtocol?(a1, v1 + 56);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.ecrClient.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t key path setter for MemoryCreationQUController.queryParser : MemoryCreationQUController(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with copy of SearchResultRanking(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 160))(v4);
}

void MemoryCreationQUController.queryParser.getter()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_97_6();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.queryParser.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 96;
  OUTLINED_FUNCTION_2_6();
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of SageSearchClient(a1, v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_56_1();
}

void MemoryCreationQUController.queryParser.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

#error "2431FC3D0: call analysis failed (funcsize=41)"

Swift::Void __swiftcall MemoryCreationQUController.prewarm(originatorPID:)(Swift::Int originatorPID)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v1 + 104))(v5);
  v3 = v6;
  v4 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(Swift::Int, uint64_t, uint64_t))(v4 + 8))(originatorPID, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  OUTLINED_FUNCTION_7_3();
}

uint64_t MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 + 272) = a6;
  *(_QWORD *)(v7 + 216) = a5;
  *(_QWORD *)(v7 + 224) = v6;
  *(_QWORD *)(v7 + 200) = a3;
  *(_QWORD *)(v7 + 208) = a4;
  *(_QWORD *)(v7 + 184) = a1;
  *(_QWORD *)(v7 + 192) = a2;
  return OUTLINED_FUNCTION_43_5();
}

void MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v23;

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.memoryCreationQU);
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_104_0();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.info.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 192);
  if (v4)
  {
    type = v3;
    v6 = *(_QWORD *)(v0 + 184);
    v7 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    v23 = specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v7 = 136315650;
    OUTLINED_FUNCTION_76_0();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, &v23);
    *(_QWORD *)(v0 + 160) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = OUTLINED_FUNCTION_116_0();
    v10 = MEMORY[0x2494F5E4C](v9, MEMORY[0x24BEE0D00]);
    v12 = v11;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v23);
    *(_QWORD *)(v0 + 168) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_47_2();
    OUTLINED_FUNCTION_102_0();
    *(_WORD *)(v7 + 22) = 2080;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x2494F5E4C](v14, MEMORY[0x24BEE0D00]);
    v17 = v16;
    OUTLINED_FUNCTION_121();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v23);
    *(_QWORD *)(v0 + 176) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_102_0();
    _os_log_impl(&dword_24315F000, v2, type, "Calling LLM QU to parse query: %s, personNames: %s, petNames: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_102_0();

  (*(void (**)(void))(**(_QWORD **)(v0 + 224) + 104))();
  v19 = *(_QWORD *)(v0 + 152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
  *(_QWORD *)typea = **(int **)(v19 + 16) + *(_QWORD *)(v19 + 16);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v20;
  *v20 = v0;
  v20[1] = MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:);
  __asm { BR              X8 }
}

uint64_t MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_101_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 240) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t (*v2)(_QWORD, _QWORD, _QWORD *);
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD *);

  v1 = (uint64_t *)v0[28];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 15));
  OUTLINED_FUNCTION_39_8(*v1);
  v5 = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[31] = v3;
  *v3 = v0;
  v3[1] = MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:);
  return v5(v0[23], v0[24], v0 + 2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_47_3();
  *v4 = *v3;
  *(_QWORD *)(v2 + 256) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 264) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_7();
  return OUTLINED_FUNCTION_1_13(*(_QWORD *)(v0 + 264), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_7();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MemoryCreationQUController.parse(_:quResponseJSONString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t MemoryCreationQUController.parse(_:quResponseJSONString:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD *);

  OUTLINED_FUNCTION_64();
  v1 = OUTLINED_FUNCTION_35_3();
  MemoryCreationQUModelResponse.init(jsonString:)(v1, v2, v3);
  v4 = (_QWORD *)OUTLINED_FUNCTION_6();
  v0[20] = v4;
  *v4 = v0;
  v4[1] = MemoryCreationQUController.parse(_:quResponseJSONString:);
  return v6(v0[15], v0[16], v0 + 2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_47_3();
  *v4 = *v3;
  *(_QWORD *)(v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 176) = v0;
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_7();
  return OUTLINED_FUNCTION_1_13(*(_QWORD *)(v0 + 176), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_7();
  return OUTLINED_FUNCTION_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MemoryCreationQUController.parse(_:quResponse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v8 = type metadata accessor for MemoryCreationQUParseSortOrder();
  v4[8] = v8;
  v4[9] = *(_QWORD *)(v8 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v9 = (_QWORD *)swift_task_alloc();
  v4[12] = v9;
  OUTLINED_FUNCTION_49_9(v9, (uint64_t)MemoryCreationQUController.parse(_:quResponse:));
  return MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)(a1, a2, a3);
}

uint64_t MemoryCreationQUController.parse(_:quResponse:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_101_1();
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_14();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  id v14;
  id v15;
  uint64_t v17;

  v1 = *(_QWORD **)(v0 + 48);
  v2 = v1[10];
  if (v2)
  {
    if (v1[9] == 7562617 && v2 == 0xE300000000000000)
    {
      v4 = 1;
    }
    else
    {
      v4 = OUTLINED_FUNCTION_43_10();
      v1 = *(_QWORD **)(v0 + 48);
    }
  }
  else
  {
    v4 = 0;
  }
  v5 = v1[12];
  if (v5)
  {
    if (v1[11] == 7562617 && v5 == 0xE300000000000000)
      v7 = 1;
    else
      v7 = OUTLINED_FUNCTION_43_10();
  }
  else
  {
    v7 = 0;
  }
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 72);
  v17 = v10;
  MemoryCreationQUController.sortOrder(prediction:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
  type metadata accessor for MemoryCreationQUParse();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_76_0();
  LOBYTE(v10) = v7 & 1;
  v12 = MemoryCreationQUParse.init(query:attributes:isTrip:isOpenEndedTimeRange:sortOrder:)();
  v13 = MemoryCreationQUController.attributedStringFromParse(_:)();
  v14 = objc_allocWithZone((Class)type metadata accessor for LLMQUParse());
  v15 = LLMQUParse.init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)((uint64_t)v13, v12, v4 & 1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v15);
}

uint64_t MemoryCreationQUController.sortOrder(prediction:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t result;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unsigned int v48;
  char *v49;
  unsigned int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_18_2();
  v53 = v0;
  v54 = v1;
  v3 = v2;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MemoryCreationQUParseSortOrder?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MemoryCreationQUParseSortOrder();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_1();
  v51 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v49 = (char *)&v45 - v14;
  v15 = *(_QWORD *)(v3 + 64);
  if (!v15)
    return (*(uint64_t (**)(uint64_t, _QWORD))(v10 + 104))(v5, *MEMORY[0x24BE6E370]);
  v46 = v8;
  v47 = v5;
  v52 = v13;
  v16 = v15 + 64;
  OUTLINED_FUNCTION_3_12();
  v19 = v18 & v17;
  v21 = (unint64_t)(v20 + 63) >> 6;
  v50 = *MEMORY[0x24BE6E368];
  v48 = *MEMORY[0x24BE6E378];
  result = swift_bridgeObjectRetain();
  v23 = 0;
  v24 = MEMORY[0x24BEE4AF8];
  while (v19)
  {
    v19 &= v19 - 1;
LABEL_19:
    v29 = String.lowercased()();
    v30 = v29._countAndFlagsBits == 0x7473726966 && v29._object == (void *)0xE500000000000000;
    if (v30 || (OUTLINED_FUNCTION_1_18() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v49, v48, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_33_7();
        v24 = v40;
      }
      v35 = *(_QWORD *)(v24 + 16);
      v36 = v35 + 1;
      if (v35 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        OUTLINED_FUNCTION_33_7();
        v24 = v41;
      }
      v37 = v49;
LABEL_52:
      *(_QWORD *)(v24 + 16) = v36;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v35, v37, v52);
    }
    else
    {
      v31 = v29._countAndFlagsBits == 1953718636 && v29._object == (void *)0xE400000000000000;
      if (v31
        || (OUTLINED_FUNCTION_1_18() & 1) != 0
        || (v29._countAndFlagsBits == 0x746E65636572 ? (v32 = v29._object == (void *)0xE600000000000000) : (v32 = 0),
            v32
         || (OUTLINED_FUNCTION_1_18() & 1) != 0
         || (*(_QWORD *)"latest" == v29._countAndFlagsBits
           ? (v33 = v29._object == (void *)0xE600000000000000)
           : (v33 = 0),
             v33)))
      {
        swift_bridgeObjectRelease();
LABEL_47:
        (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v51, v50, v52);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_33_7();
          v24 = v38;
        }
        v35 = *(_QWORD *)(v24 + 16);
        v36 = v35 + 1;
        if (v35 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          OUTLINED_FUNCTION_33_7();
          v24 = v39;
        }
        v37 = v51;
        goto LABEL_52;
      }
      v34 = OUTLINED_FUNCTION_1_18();
      result = OUTLINED_FUNCTION_47_2();
      if ((v34 & 1) != 0)
        goto LABEL_47;
    }
  }
  v25 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v25 >= v21)
    goto LABEL_53;
  ++v23;
  if (*(_QWORD *)(v16 + 8 * v25))
    goto LABEL_18;
  v23 = v25 + 1;
  if (v25 + 1 >= v21)
    goto LABEL_53;
  if (*(_QWORD *)(v16 + 8 * v23))
    goto LABEL_18;
  v23 = v25 + 2;
  if (v25 + 2 >= v21)
    goto LABEL_53;
  if (*(_QWORD *)(v16 + 8 * v23))
  {
LABEL_18:
    OUTLINED_FUNCTION_44_9();
    v19 = v28 & v27;
    goto LABEL_19;
  }
  v26 = v25 + 3;
  if (v26 >= v21)
  {
LABEL_53:
    swift_release();
    if (*(_QWORD *)(v24 + 16) == 1)
    {
      v42 = (uint64_t)v46;
      specialized Collection.first.getter(v24, (uint64_t)v46);
      OUTLINED_FUNCTION_118_0();
      v43 = v52;
      if (__swift_getEnumTagSinglePayload(v42, 1, v52) != 1)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v47, v42, v43);
      outlined destroy of CustomStringConvertible?(v42, &demangling cache variable for type metadata for MemoryCreationQUParseSortOrder?);
      v44 = v47;
    }
    else
    {
      OUTLINED_FUNCTION_118_0();
      v44 = v47;
      v43 = v52;
    }
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v44, *MEMORY[0x24BE6E370], v43);
  }
  if (*(_QWORD *)(v16 + 8 * v26))
  {
    v23 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v23 >= v21)
      goto LABEL_53;
    ++v26;
    if (*(_QWORD *)(v16 + 8 * v23))
      goto LABEL_18;
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  return OUTLINED_FUNCTION_43_5();
}

uint64_t MemoryCreationQUController.attributesFromLLMQUResponse(query:prediction:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_13();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.memoryCreationQU);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_24315F000, v2, v3, "Converting LLMQUResponse into MemoryCreationQUParseAttributes", v4, 2u);
    specialized UnsafeMutablePointer.deallocate()();
  }
  v5 = *(_QWORD *)(v0 + 160);

  v14 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_8_13(v5, v0 + 96);
  OUTLINED_FUNCTION_8_13(v0 + 96, v0 + 88);
  v6 = *(_QWORD *)(v0 + 88);
  if (v6)
  {
    MemoryCreationQUController.attributesFromWho(query:who:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v6);
    OUTLINED_FUNCTION_45_9();
  }
  OUTLINED_FUNCTION_8_13(*(_QWORD *)(v0 + 160) + 8, v0 + 104);
  v7 = OUTLINED_FUNCTION_35_3();
  OUTLINED_FUNCTION_8_13(v7, v8);
  v9 = *(_QWORD *)(v0 + 80);
  if (v9)
  {
    MemoryCreationQUController.attributesFromWhat(query:what:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v9);
    OUTLINED_FUNCTION_45_9();
  }
  OUTLINED_FUNCTION_8_13(*(_QWORD *)(v0 + 160) + 16, v0 + 112);
  OUTLINED_FUNCTION_8_13(v0 + 112, v0 + 72);
  if (*(_QWORD *)(v0 + 72))
  {
    MemoryCreationQUController.attributesFromWhen(query:when:)();
    OUTLINED_FUNCTION_45_9();
  }
  OUTLINED_FUNCTION_8_13(*(_QWORD *)(v0 + 160) + 24, v0 + 120);
  OUTLINED_FUNCTION_8_13(v0 + 120, v0 + 64);
  v10 = *(_QWORD *)(v0 + 64);
  if (v10)
  {
    MemoryCreationQUController.attributesFromWhere(query:where_:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v10);
    OUTLINED_FUNCTION_45_9();
  }
  OUTLINED_FUNCTION_8_13(*(_QWORD *)(v0 + 160) + 32, v0 + 16);
  OUTLINED_FUNCTION_8_13(v0 + 16, v0 + 40);
  v11 = *(_QWORD *)(v0 + 40);
  if (v11 != 1)
  {
    MemoryCreationQUController.attributesFromMusic(query:music:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v11, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    OUTLINED_FUNCTION_45_9();
  }
  OUTLINED_FUNCTION_8_13(*(_QWORD *)(v0 + 160) + 56, v0 + 136);
  OUTLINED_FUNCTION_8_13(v0 + 136, v0 + 128);
  v12 = *(_QWORD *)(v0 + 128);
  if (v12)
  {
    MemoryCreationQUController.attributesFromMood(query:mood:)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v12);
    OUTLINED_FUNCTION_45_9();
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

void MemoryCreationQUController.attributesFromWho(query:who:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  char v20;
  int64_t v21;
  __C::_NSRange_optional v22;

  v4 = a3 + 64;
  OUTLINED_FUNCTION_3_12();
  v7 = v6 & v5;
  v21 = (unint64_t)(v8 + 63) >> 6;
  OUTLINED_FUNCTION_78_9();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_24;
    }
    v12 = __OFADD__(v9++, 1);
    if (v12)
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v9 >= v21)
      goto LABEL_32;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    if (!v13)
      break;
LABEL_23:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v18 = *v16;
    v17 = (void *)v16[1];
    OUTLINED_FUNCTION_76_0();
    v19._countAndFlagsBits = v18;
    v19._object = v17;
    v22 = String.nsRangeWithCompleteTokenMatch(of:)(v19);
    if (!v22.is_nil)
    {
      Range<>.init(_:in:)();
      if ((v20 & 1) == 0)
      {
        String.subscript.getter();
        OUTLINED_FUNCTION_86_7();
      }
    }
    OUTLINED_FUNCTION_47();
  }
  OUTLINED_FUNCTION_62_6();
  if (v15 == v12)
    goto LABEL_32;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
    goto LABEL_22;
  OUTLINED_FUNCTION_62_6();
  if (v15 == v12)
    goto LABEL_32;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
    goto LABEL_22;
  OUTLINED_FUNCTION_62_6();
  if (v15 == v12)
    goto LABEL_32;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
    goto LABEL_22;
  OUTLINED_FUNCTION_62_6();
  if (v15 == v12)
    goto LABEL_32;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
    goto LABEL_22;
  OUTLINED_FUNCTION_62_6();
  if (v15 == v12)
  {
LABEL_32:
    OUTLINED_FUNCTION_50();
    return;
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
LABEL_22:
    v9 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v21)
      goto LABEL_32;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
}

void MemoryCreationQUController.attributesFromWhat(query:what:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MemoryCreationQUController.attributesFromWhat(query:what:)(a1, a2, a3);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  __C::_NSRange_optional v27;

  v4 = a3 + 64;
  OUTLINED_FUNCTION_3_12();
  v7 = v6 & v5;
  v26 = (unint64_t)(v8 + 63) >> 6;
  OUTLINED_FUNCTION_78_9();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_27;
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v10 >= v26)
      goto LABEL_31;
    ++v9;
    if (!*(_QWORD *)(v4 + 8 * v10))
    {
      v9 = v10 + 1;
      OUTLINED_FUNCTION_75_7();
      if (v12 == v13)
        goto LABEL_31;
      if (!*(_QWORD *)(v4 + 8 * v9))
      {
        v9 = v11 + 2;
        OUTLINED_FUNCTION_75_7();
        if (v12 == v13)
          goto LABEL_31;
        if (!*(_QWORD *)(v4 + 8 * v9))
        {
          v9 = v14 + 3;
          OUTLINED_FUNCTION_75_7();
          if (v12 == v13)
            goto LABEL_31;
          if (!*(_QWORD *)(v4 + 8 * v9))
          {
            v9 = v15 + 4;
            OUTLINED_FUNCTION_75_7();
            if (v12 == v13)
              goto LABEL_31;
            if (!*(_QWORD *)(v4 + 8 * v9))
              break;
          }
        }
      }
    }
LABEL_26:
    OUTLINED_FUNCTION_44_9();
    v7 = v20 & v19;
LABEL_27:
    OUTLINED_FUNCTION_117();
    v21._countAndFlagsBits = OUTLINED_FUNCTION_82_7();
    v27 = String.nsRangeWithCompleteTokenMatch(of:)(v21);
    if (!v27.is_nil)
    {
      OUTLINED_FUNCTION_95_5();
      Range<>.init(_:in:)();
      if ((v22 & 1) == 0)
      {
        v23 = String.subscript.getter();
        MEMORY[0x2494F5C48](v23);
        OUTLINED_FUNCTION_47_2();
        v24 = OUTLINED_FUNCTION_82_7();
        specialized Dictionary.subscript.getter(v24, v25, a3);
        OUTLINED_FUNCTION_118_0();
        OUTLINED_FUNCTION_79_6();
        OUTLINED_FUNCTION_24_9();
        OUTLINED_FUNCTION_27();
        MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
        OUTLINED_FUNCTION_106_6();
        OUTLINED_FUNCTION_66_8();
      }
    }
    OUTLINED_FUNCTION_118_0();
  }
  v17 = v16 + 5;
  if (v17 >= v26)
  {
LABEL_31:
    swift_release();
    OUTLINED_FUNCTION_27_10();
    return;
  }
  if (*(_QWORD *)(v4 + 8 * v17))
  {
    v9 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    OUTLINED_FUNCTION_75_7();
    if (v12 == v13)
      goto LABEL_31;
    v17 = v18 + 1;
    if (*(_QWORD *)(v4 + 8 * v9))
      goto LABEL_26;
  }
LABEL_33:
  __break(1u);
}

void MemoryCreationQUController.attributesFromWhen(query:when:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  id v78;
  uint64_t v79;
  char *v80;
  Swift::Int length;
  Swift::Int location;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __C::_NSRange_optional v87;

  OUTLINED_FUNCTION_18_2();
  v58 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_18_1();
  v57 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v80 = (char *)&v55 - v10;
  v86 = MEMORY[0x24BEE4AF8];
  v11 = v2 + 64;
  v12 = 1 << *(_BYTE *)(v2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v2 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v56 = v9 + 7;
  v67 = *MEMORY[0x24BDC18D8];
  swift_bridgeObjectRetain();
  v16 = 0;
  v66 = 0x800000024335CB40;
  v65 = 0x800000024335CB60;
  v70 = v6;
  v72 = v2;
  v71 = v4;
  v69 = v2 + 64;
  v68 = v15;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_24:
    v24 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v18);
    v26 = *v24;
    v25 = v24[1];
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_100_4();
    v87 = String.nsRangeWithCompleteTokenMatch(of:)(v27);
    if (!v87.is_nil)
    {
      length = v87.value.length;
      location = v87.value.location;
      OUTLINED_FUNCTION_100_4();
      Range<>.init(_:in:)();
      if ((v28 & 1) == 0)
      {
        v77 = v16;
        OUTLINED_FUNCTION_100_4();
        v29 = String.subscript.getter();
        v76 = MEMORY[0x2494F5C48](v29);
        v75 = v30;
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_64();
        specialized Dictionary.subscript.getter(v26, v25, v2);
        v32 = v31;
        OUTLINED_FUNCTION_6_1();
        v33 = OUTLINED_FUNCTION_8();
        v79 = v33;
        *(_QWORD *)(v33 + 16) = MEMORY[0x24BEE4AF8];
        v34 = (uint64_t *)(v33 + 16);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Substring, Substring));
        Regex.init(_regexString:version:)();
        v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
        outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(0xD000000000000015, v65, v78);
        v35 = OUTLINED_FUNCTION_8();
        *(_QWORD *)(v35 + 16) = v26;
        *(_QWORD *)(v35 + 24) = v25;
        if (v32 && v32[2])
        {
          v37 = v32[4];
          v36 = v32[5];
          OUTLINED_FUNCTION_2_6();
          *(_QWORD *)(v35 + 16) = v37;
          *(_QWORD *)(v35 + 24) = v36;
          OUTLINED_FUNCTION_64();
          OUTLINED_FUNCTION_23_0();
          OUTLINED_FUNCTION_118_0();
        }
        else
        {
          OUTLINED_FUNCTION_64();
        }
        type metadata accessor for MemoryCreationQUDateGroundingHeuristics();
        OUTLINED_FUNCTION_8();
        OUTLINED_FUNCTION_2_6();
        v38 = *(_QWORD *)(v35 + 16);
        v39 = *(_QWORD *)(v35 + 24);
        OUTLINED_FUNCTION_117();
        v40 = MemoryCreationQUDateGroundingHeuristics.groundDateHeuristics(_:rawDateString:)(v38, v39, v26, v25);
        swift_release();
        OUTLINED_FUNCTION_118_0();
        OUTLINED_FUNCTION_6_1();
        OUTLINED_FUNCTION_2_6();
        *v34 = v40;
        v41 = swift_bridgeObjectRelease();
        if ((unint64_t)*v34 >> 62)
        {
          OUTLINED_FUNCTION_64();
          v54 = _CocoaArrayWrapper.endIndex.getter();
          v41 = OUTLINED_FUNCTION_6_1();
          if (!v54)
          {
LABEL_33:
            (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v58 + 152))(v83, v41);
            v63 = v84;
            v60 = v85;
            v62 = __swift_project_boxed_opaque_existential_1(v83, v84);
            v61 = *(_QWORD *)(v35 + 16);
            v59 = *(_QWORD *)(v35 + 24);
            v42 = v73;
            v43 = v57;
            v44 = v74;
            (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v57, v80, v74);
            v45 = *(unsigned __int8 *)(v42 + 80);
            v64 = v32;
            v46 = (v45 + 24) & ~v45;
            v47 = (v56 + v46) & 0xFFFFFFFFFFFFFFF8;
            v48 = swift_allocObject();
            *(_QWORD *)(v48 + 16) = v35;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v48 + v46, v43, v44);
            v49 = v78;
            *(_QWORD *)(v48 + v47) = v78;
            *(_QWORD *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8)) = v79;
            v50 = v60;
            v51 = *(void (**)(uint64_t, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v60 + 8);
            v52 = v59;
            OUTLINED_FUNCTION_76_0();
            swift_retain();
            v53 = v49;
            OUTLINED_FUNCTION_75();
            v51(v61, v52, partial apply for closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:), v48, v63, v50);
            swift_release();
            OUTLINED_FUNCTION_47();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
          }
        }
        else if (!*(_QWORD *)((*v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_33;
        }
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_24_9();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_23_0();
        MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
        OUTLINED_FUNCTION_71_7();
        OUTLINED_FUNCTION_46_7();
      }
    }
    OUTLINED_FUNCTION_6_1();
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v19 >= v15)
    goto LABEL_37;
  ++v16;
  if (*(_QWORD *)(v11 + 8 * v19))
    goto LABEL_23;
  v16 = v19 + 1;
  if (v19 + 1 >= v15)
    goto LABEL_37;
  if (*(_QWORD *)(v11 + 8 * v16))
    goto LABEL_23;
  v16 = v19 + 2;
  if (v19 + 2 >= v15)
    goto LABEL_37;
  if (*(_QWORD *)(v11 + 8 * v16))
    goto LABEL_23;
  v16 = v19 + 3;
  if (v19 + 3 >= v15)
    goto LABEL_37;
  if (*(_QWORD *)(v11 + 8 * v16))
    goto LABEL_23;
  v16 = v19 + 4;
  if (v19 + 4 >= v15)
    goto LABEL_37;
  if (*(_QWORD *)(v11 + 8 * v16))
  {
LABEL_23:
    OUTLINED_FUNCTION_44_9();
    v14 = v22 & v21;
    v18 = v23 + (v16 << 6);
    goto LABEL_24;
  }
  v20 = v19 + 5;
  if (v20 >= v15)
  {
LABEL_37:
    swift_release();
    OUTLINED_FUNCTION_43_0();
    return;
  }
  if (*(_QWORD *)(v11 + 8 * v20))
  {
    v16 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v16 >= v15)
      goto LABEL_37;
    ++v20;
    if (*(_QWORD *)(v11 + 8 * v16))
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
}

void closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  _QWORD *v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _QWORD aBlock[6];
  uint64_t v55[5];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v11 = MEMORY[0x24BDAC7A8](v10);
  if (!a1)
  {
    if (one-time initialization token for memoryCreationQU == -1)
      goto LABEL_7;
    goto LABEL_14;
  }
  v50 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v12;
  v53 = v11;
  v48 = v13;
  v49 = a5 + 16;
  v14 = one-time initialization token for memoryCreationQU;
  v15 = a1;
  if (v14 != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logging.memoryCreationQU);
  v17 = v15;
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.info.getter();
  v20 = os_log_type_enabled(v18, v19);
  v52 = v17;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v47 = a4;
    v22 = (uint8_t *)v21;
    v45 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v22 = 138412290;
    v46 = a3;
    aBlock[0] = v17;
    v23 = v17;
    a3 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24 = v45;
    *v45 = a1;

    _os_log_impl(&dword_24315F000, v18, v19, "QP parse: %@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2494F6D70](v24, -1, -1);
    v25 = v22;
    a4 = v47;
    MEMORY[0x2494F6D70](v25, -1, -1);

  }
  else
  {

  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v35 = String.count.getter();
  swift_bridgeObjectRelease();
  v37 = v50;
  v36 = v51;
  a2 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, a3, v53);
  v38 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v39 = (v48 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v38, v37, a2);
  *(_QWORD *)(v40 + v39) = a4;
  *(_QWORD *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = partial apply for closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:);
  *(_QWORD *)(v41 + 24) = v40;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed [NSAttributedStringKey : Any], @unowned _NSRange, @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [NSAttributedStringKey : Any], @unowned _NSRange, @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  aBlock[3] = &block_descriptor_33;
  v42 = _Block_copy(aBlock);
  v43 = a4;
  swift_retain();
  swift_release();
  v44 = v52;
  objc_msgSend(v52, sel_enumerateAttributesInRange_options_usingBlock_, 0, v35, 0, v42);

  _Block_release(v42);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v35 & 1) != 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
LABEL_7:
    v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logging.memoryCreationQU);
    swift_retain();
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v55[0] = v30;
      *(_DWORD *)v29 = 136315138;
      swift_beginAccess();
      v31 = a2;
      v32 = *(_QWORD *)(a2 + 16);
      v33 = *(_QWORD *)(v31 + 24);
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v55);
      v55[3] = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24315F000, v27, v28, "No QP parse for date string: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2494F6D70](v30, -1, -1);
      MEMORY[0x2494F6D70](v29, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
}

void closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  const char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  char *v83;
  Class isa;
  Class v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  id v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v100 = a6;
  v106 = a5;
  v9 = type metadata accessor for Date();
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v97 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v90 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v102 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v101 = (char *)&v90 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v99 = (char *)&v90 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v90 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v98 = (char *)&v90 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v90 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v90 - v31;
  v33 = (void *)MEMORY[0x2494F5BB8](0x536574614450516BLL, 0xEC00000074726174);
  specialized Dictionary.subscript.getter((uint64_t)v33, a1);

  if (v111)
  {
    v34 = swift_dynamicCast();
    if (v34)
      v35 = v107;
    else
      v35 = 0;
    if (v34)
      v36 = v108;
    else
      v36 = 0;
  }
  else
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v109, &demangling cache variable for type metadata for Any?);
    v35 = 0;
    v36 = 0;
  }
  v37 = (void *)MEMORY[0x2494F5BB8](0x456574614450516BLL, 0xEA0000000000646ELL);
  specialized Dictionary.subscript.getter((uint64_t)v37, a1);

  if (!v111)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)&v109, &demangling cache variable for type metadata for Any?);
LABEL_21:
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1)
      swift_once();
    v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Logging.memoryCreationQU);
    v45 = Logger.logObject.getter();
    v46 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v45, v46))
      goto LABEL_37;
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    v48 = "No start and end dates in attributed parse from QP";
    goto LABEL_36;
  }
  v95 = a7;
  v96 = v26;
  v38 = swift_dynamicCast();
  if (v38)
    v39 = v107;
  else
    v39 = 0;
  if (v38)
    v40 = v108;
  else
    v40 = 0;
  if (!v36 || !v40)
    goto LABEL_21;
  v93 = v22;
  v109 = v35;
  v110 = v36;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Substring, Substring));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type Regex<(Substring, Substring)> and conformance Regex<A>();
  v94 = v41;
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  swift_bridgeObjectRelease();
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v42) == 1)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v32, &demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
    v92 = 0;
    v91 = 0;
    v90 = 0;
    v43 = 0;
  }
  else
  {
    Regex.Match.output.getter();
    swift_bridgeObjectRelease();
    v92 = v112;
    v91 = v113;
    v43 = v115;
    v90 = v114;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v32, v42);
  }
  v109 = v39;
  v110 = v40;
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v42) == 1)
  {
    outlined destroy of CustomStringConvertible?((uint64_t)v30, &demangling cache variable for type metadata for Regex<(Substring, Substring)>.Match?);
    goto LABEL_32;
  }
  Regex.Match.output.getter();
  swift_bridgeObjectRelease();
  v49 = v112;
  v50 = v113;
  v52 = v114;
  v51 = v115;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v30, v42);
  if (!v43 || !v51)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    if (one-time initialization token for memoryCreationQU != -1)
      swift_once();
    v60 = type metadata accessor for Logger();
    __swift_project_value_buffer(v60, (uint64_t)static Logging.memoryCreationQU);
    v45 = Logger.logObject.getter();
    v46 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v45, v46))
      goto LABEL_37;
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    v48 = "Start and end dates not able to be extracted from QP output";
LABEL_36:
    _os_log_impl(&dword_24315F000, v45, v46, v48, v47, 2u);
    MEMORY[0x2494F6D70](v47, -1, -1);
LABEL_37:

    return;
  }
  v53 = v92;
  v54 = v91;
  v55 = v90;
  if ((specialized static StringProtocol.== infix<A>(_:_:)(v92, v91, v90, v43, 48, 0xE100000000000000) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v56 = (uint64_t)v96;
    static Date.distantPast.getter();
    v57 = v105;
    __swift_storeEnumTagSinglePayload(v56, 0, 1, v105);
    v58 = (uint64_t)v93;
    v59 = (uint64_t)v99;
  }
  else
  {
    v61 = MEMORY[0x2494F5C48](v53, v54, v55, v43);
    v63 = v62;
    swift_bridgeObjectRelease();
    v64 = (void *)MEMORY[0x2494F5BB8](v61, v63);
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(v100, sel_dateFromString_, v64);

    v58 = (uint64_t)v93;
    v56 = (uint64_t)v96;
    v57 = v105;
    v59 = (uint64_t)v99;
    if (v65)
    {
      v66 = (uint64_t)v98;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v67 = 0;
    }
    else
    {
      v67 = 1;
      v66 = (uint64_t)v98;
    }
    __swift_storeEnumTagSinglePayload(v66, v67, 1, v57);
    outlined init with take of URL?(v66, v56, &demangling cache variable for type metadata for Date?);
  }
  if ((specialized static StringProtocol.== infix<A>(_:_:)(v49, v50, v52, v51, 0x3633383437343132, 0xEA00000000003734) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    static Date.distantFuture.getter();
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v57);
    v69 = v103;
    v68 = v104;
    v71 = (uint64_t)v101;
    v70 = (uint64_t)v102;
  }
  else
  {
    v72 = MEMORY[0x2494F5C48](v49, v50, v52, v51);
    v74 = v73;
    swift_bridgeObjectRelease();
    v75 = (void *)MEMORY[0x2494F5BB8](v72, v74);
    swift_bridgeObjectRelease();
    v76 = objc_msgSend(v100, sel_dateFromString_, v75);

    if (v76)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v77 = 0;
    }
    else
    {
      v77 = 1;
    }
    v69 = v103;
    v68 = v104;
    v71 = (uint64_t)v101;
    v70 = (uint64_t)v102;
    __swift_storeEnumTagSinglePayload(v59, v77, 1, v57);
    outlined init with take of URL?(v59, v58, &demangling cache variable for type metadata for Date?);
  }
  outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v56, v71, &demangling cache variable for type metadata for Date?);
  if (__swift_getEnumTagSinglePayload(v71, 1, v57) == 1)
  {
    v70 = v71;
  }
  else
  {
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
    v78(v69, v71, v57);
    outlined init with copy of Apple_Parsec_Siri_V2alpha_PerResultLayoutDetails.OneOf_Snippet?(v58, v70, &demangling cache variable for type metadata for Date?);
    if (__swift_getEnumTagSinglePayload(v70, 1, v57) != 1)
    {
      v83 = v97;
      v78(v97, v70, v57);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v85 = Date._bridgeToObjectiveC()().super.isa;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = xmmword_243351430;
      *(_QWORD *)(v86 + 32) = isa;
      *(_QWORD *)(v86 + 40) = v85;
      v109 = v86;
      specialized Array._endMutation()();
      v87 = v109;
      v88 = *(void (**)(char *, uint64_t))(v68 + 8);
      v88(v83, v57);
      v88(v69, v57);
      outlined destroy of CustomStringConvertible?(v58, &demangling cache variable for type metadata for Date?);
      outlined destroy of CustomStringConvertible?(v56, &demangling cache variable for type metadata for Date?);
      v89 = v95;
      swift_beginAccess();
      *v89 = v87;
      swift_bridgeObjectRelease();
      return;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v57);
  }
  outlined destroy of CustomStringConvertible?(v70, &demangling cache variable for type metadata for Date?);
  if (one-time initialization token for memoryCreationQU != -1)
    swift_once();
  v79 = type metadata accessor for Logger();
  __swift_project_value_buffer(v79, (uint64_t)static Logging.memoryCreationQU);
  v80 = Logger.logObject.getter();
  v81 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v82 = 0;
    _os_log_impl(&dword_24315F000, v80, v81, "Unable to create start and end dates from QP", v82, 2u);
    MEMORY[0x2494F6D70](v82, -1, -1);
  }

  outlined destroy of CustomStringConvertible?(v58, &demangling cache variable for type metadata for Date?);
  outlined destroy of CustomStringConvertible?(v56, &demangling cache variable for type metadata for Date?);
}

void MemoryCreationQUController.attributesFromWhere(query:where_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MemoryCreationQUController.attributesFromWhat(query:what:)(a1, a2, a3);
}

void MemoryCreationQUController.attributesFromMusic(query:music:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  void *v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  void *v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;

  v6 = a4;
  if (a5)
  {
    v68 = a5 + 64;
    OUTLINED_FUNCTION_18_12();
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v5)
      {
        OUTLINED_FUNCTION_72_5();
      }
      else
      {
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        v6 = a4;
        if (v11 >= v70)
          goto LABEL_32;
        ++v9;
        if (!*(_QWORD *)(v68 + 8 * v11))
        {
          v9 = v11 + 1;
          OUTLINED_FUNCTION_21_9();
          if (v12 == v13)
            goto LABEL_32;
          OUTLINED_FUNCTION_34_6();
          if (!v15)
          {
            v9 = v14 + 2;
            OUTLINED_FUNCTION_21_9();
            if (v12 == v13)
              goto LABEL_32;
            OUTLINED_FUNCTION_34_6();
            if (!v17)
            {
              v9 = v16 + 3;
              OUTLINED_FUNCTION_21_9();
              if (v12 == v13)
                goto LABEL_32;
              OUTLINED_FUNCTION_34_6();
              if (!v19)
              {
                v9 = v18 + 4;
                OUTLINED_FUNCTION_21_9();
                if (v12 == v13)
                  goto LABEL_32;
                OUTLINED_FUNCTION_34_6();
                if (!v20)
                {
                  OUTLINED_FUNCTION_70_5();
                  if (v12 == v13)
                  {
LABEL_32:
                    OUTLINED_FUNCTION_39_0();
                    break;
                  }
                  if (!*(_QWORD *)(v68 + 8 * v21))
                  {
                    while (1)
                    {
                      v9 = v21 + 1;
                      if (__OFADD__(v21, 1))
                        break;
                      OUTLINED_FUNCTION_21_9();
                      if (v12 == v13)
                        goto LABEL_32;
                      v21 = v22 + 1;
                      if (*(_QWORD *)(v68 + 8 * v9))
                        goto LABEL_28;
                    }
LABEL_103:
                    __break(1u);
                    goto LABEL_104;
                  }
                  v9 = v21;
                }
              }
            }
          }
        }
LABEL_28:
        OUTLINED_FUNCTION_74_9();
      }
      v23 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 16 * v10);
      v24 = *v23;
      v25 = (void *)v23[1];
      OUTLINED_FUNCTION_35_1();
      v72._countAndFlagsBits = v24;
      v72._object = v25;
      OUTLINED_FUNCTION_51_7(v72);
      v27 = v26;
      OUTLINED_FUNCTION_47_2();
      if ((v27 & 1) == 0)
      {
        OUTLINED_FUNCTION_50_8();
        if ((v28 & 1) == 0)
        {
          v29 = OUTLINED_FUNCTION_52_9();
          MEMORY[0x2494F5C48](v29);
          OUTLINED_FUNCTION_118_0();
          OUTLINED_FUNCTION_79_6();
          OUTLINED_FUNCTION_24_9();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_35_8();
          swift_retain();
          OUTLINED_FUNCTION_66_8();
        }
      }
    }
  }
  if (!a3)
    goto LABEL_66;
  v69 = a3 + 64;
  OUTLINED_FUNCTION_18_12();
  OUTLINED_FUNCTION_76_0();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      OUTLINED_FUNCTION_72_5();
      goto LABEL_62;
    }
    if (__OFADD__(v30, 1))
      goto LABEL_101;
    OUTLINED_FUNCTION_70_5();
    if (v12 == v13)
      break;
    v30 = v32;
    if (!*(_QWORD *)(v69 + 8 * v32))
    {
      v30 = v32 + 1;
      OUTLINED_FUNCTION_21_9();
      if (v12 == v13)
        break;
      OUTLINED_FUNCTION_34_6();
      if (!v34)
      {
        v30 = v33 + 2;
        OUTLINED_FUNCTION_21_9();
        if (v12 == v13)
          break;
        OUTLINED_FUNCTION_34_6();
        if (!v36)
        {
          v30 = v35 + 3;
          OUTLINED_FUNCTION_21_9();
          if (v12 == v13)
            break;
          OUTLINED_FUNCTION_34_6();
          if (!v38)
          {
            v30 = v37 + 4;
            OUTLINED_FUNCTION_21_9();
            if (v12 == v13)
              break;
            OUTLINED_FUNCTION_34_6();
            if (!v39)
            {
              OUTLINED_FUNCTION_70_5();
              if (v12 == v13)
                break;
              if (!*(_QWORD *)(v69 + 8 * v40))
              {
                while (1)
                {
                  v30 = v40 + 1;
                  if (__OFADD__(v40, 1))
                    break;
                  OUTLINED_FUNCTION_21_9();
                  if (v12 == v13)
                    goto LABEL_65;
                  v40 = v41 + 1;
                  if (*(_QWORD *)(v69 + 8 * v30))
                    goto LABEL_61;
                }
LABEL_104:
                __break(1u);
                goto LABEL_105;
              }
              v30 = v40;
            }
          }
        }
      }
    }
LABEL_61:
    OUTLINED_FUNCTION_74_9();
LABEL_62:
    v42 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v31);
    v43 = *v42;
    v44 = (void *)v42[1];
    OUTLINED_FUNCTION_116_0();
    v73._countAndFlagsBits = v43;
    v73._object = v44;
    OUTLINED_FUNCTION_51_7(v73);
    LOBYTE(v43) = v45;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      OUTLINED_FUNCTION_50_8();
      if ((v46 & 1) == 0)
      {
        OUTLINED_FUNCTION_52_9();
        OUTLINED_FUNCTION_86_7();
      }
    }
  }
LABEL_65:
  OUTLINED_FUNCTION_75_0();
LABEL_66:
  if (!v6)
  {
LABEL_99:
    OUTLINED_FUNCTION_27_10();
    return;
  }
  v47 = v6 + 64;
  OUTLINED_FUNCTION_3_12();
  v50 = v49 & v48;
  OUTLINED_FUNCTION_35_1();
  v51 = 0;
  while (2)
  {
    if (v50)
    {
      v52 = __clz(__rbit64(v50));
      v50 &= v50 - 1;
      v53 = v52 | (v51 << 6);
LABEL_95:
      v63 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v53);
      v64 = *v63;
      v65 = (void *)v63[1];
      OUTLINED_FUNCTION_117();
      v74._countAndFlagsBits = v64;
      v74._object = v65;
      OUTLINED_FUNCTION_51_7(v74);
      OUTLINED_FUNCTION_95_5();
      LOBYTE(v64) = v66;
      OUTLINED_FUNCTION_118_0();
      if ((v64 & 1) == 0)
      {
        OUTLINED_FUNCTION_50_8();
        if ((v67 & 1) == 0)
        {
          OUTLINED_FUNCTION_52_9();
          OUTLINED_FUNCTION_86_7();
        }
      }
      continue;
    }
    break;
  }
  if (__OFADD__(v51, 1))
    goto LABEL_102;
  OUTLINED_FUNCTION_70_5();
  if (v12 == v13)
  {
LABEL_98:
    swift_release();
    goto LABEL_99;
  }
  v51 = v54;
  if (*(_QWORD *)(v47 + 8 * v54))
    goto LABEL_94;
  v51 = v54 + 1;
  OUTLINED_FUNCTION_69_6();
  if (v12 == v13)
    goto LABEL_98;
  if (*(_QWORD *)(v47 + 8 * v51))
    goto LABEL_94;
  v51 = v55 + 2;
  OUTLINED_FUNCTION_69_6();
  if (v12 == v13)
    goto LABEL_98;
  if (*(_QWORD *)(v47 + 8 * v51))
    goto LABEL_94;
  v51 = v56 + 3;
  OUTLINED_FUNCTION_69_6();
  if (v12 == v13)
    goto LABEL_98;
  if (*(_QWORD *)(v47 + 8 * v51))
    goto LABEL_94;
  v51 = v57 + 4;
  OUTLINED_FUNCTION_69_6();
  if (v12 == v13)
    goto LABEL_98;
  if (*(_QWORD *)(v47 + 8 * v51))
  {
LABEL_94:
    OUTLINED_FUNCTION_44_9();
    v50 = v61 & v60;
    v53 = v62 + (v51 << 6);
    goto LABEL_95;
  }
  OUTLINED_FUNCTION_70_5();
  if (v12 == v13)
    goto LABEL_98;
  if (*(_QWORD *)(v47 + 8 * v58))
  {
    v51 = v58;
    goto LABEL_94;
  }
  while (1)
  {
    v51 = v58 + 1;
    if (__OFADD__(v58, 1))
      break;
    OUTLINED_FUNCTION_69_6();
    if (v12 == v13)
      goto LABEL_98;
    v58 = v59 + 1;
    if (*(_QWORD *)(v47 + 8 * v51))
      goto LABEL_94;
  }
LABEL_105:
  __break(1u);
}

void MemoryCreationQUController.attributesFromMood(query:mood:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MemoryCreationQUController.attributesFromWhat(query:what:)(a1, a2, a3);
}

Class MemoryCreationQUController.attributedStringFromParse(_:)()
{
  Swift::String v0;
  id v1;
  Class v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t i;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t type;
  NSObject *log;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Class isa;
  uint64_t v57;

  type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for NSMutableAttributedString);
  v0._countAndFlagsBits = MemoryCreationQUParse.query.getter();
  isa = NSAttributedString.__allocating_init(string:)(v0).super.isa;
  if ((MemoryCreationQUParse.isTrip.getter() & 1) != 0)
  {
    v1 = (id)*MEMORY[0x24BDC1910];
    v2 = Bool._bridgeToObjectiveC()().super.super.isa;
    MemoryCreationQUParse.query.getter();
    v3 = String.count.getter();
    swift_bridgeObjectRelease();
    -[objc_class addAttribute:value:range:](isa, sel_addAttribute_value_range_, v1, v2, 0, v3);

  }
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_243351440;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v54 = v9;
  v55 = v8;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v52 = v11;
  v53 = v10;
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(inited + 88) = v13;
  *(_QWORD *)(inited + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(inited + 120) = v15;
  v51 = (_QWORD *)inited;
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_2433505A0;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v48 = v18;
  v49 = v17;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v18;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v46 = v20;
  v47 = v19;
  *(_QWORD *)(v16 + 48) = v19;
  *(_QWORD *)(v16 + 56) = v20;
  *(_QWORD *)(v16 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v16 + 72) = v21;
  v50 = v16;
  v22 = MemoryCreationQUParse.attributes.getter();
  if (v22 >> 62)
    goto LABEL_73;
  for (i = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter())
  {
    v24 = 0;
    while (1)
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494F62E4](v24, v22);
      }
      else
      {
        if (v24 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_72;
        swift_retain();
      }
      v25 = v24 + 1;
      if (__OFADD__(v24, 1))
        break;
      v27 = MemoryCreationQUParse.query.getter();
      v28 = v26;
      v29 = v4 == v27 && v6 == v26;
      if (v29 || (OUTLINED_FUNCTION_0_19() & 1) != 0)
        OUTLINED_FUNCTION_47_9();
      v30 = v55 == v27 && v54 == v28;
      if (v30
        || (OUTLINED_FUNCTION_0_19() & 1) != 0
        || (v53 == v27 ? (v31 = v52 == v28) : (v31 = 0),
            v31
         || (OUTLINED_FUNCTION_0_19() & 1) != 0
         || (v51[8] == v27 ? (v32 = v51[9] == v28) : (v32 = 0),
             v32
          || (OUTLINED_FUNCTION_0_19() & 1) != 0
          || (v51[10] == v27 ? (v33 = v51[11] == v28) : (v33 = 0),
              v33
           || (OUTLINED_FUNCTION_0_19() & 1) != 0
           || (v51[12] == v27 ? (v34 = v51[13] == v28) : (v34 = 0),
               v34
            || (OUTLINED_FUNCTION_0_19() & 1) != 0
            || (v51[14] == v27 ? (v35 = v51[15] == v28) : (v35 = 0), v35 || (OUTLINED_FUNCTION_0_19() & 1) != 0))))))
      {
        OUTLINED_FUNCTION_47_9();
      }
      v36 = v49 == v27 && v48 == v28;
      if (v36
        || (OUTLINED_FUNCTION_0_19() & 1) != 0
        || (v47 == v27 ? (v37 = v46 == v28) : (v37 = 0),
            v37
         || (OUTLINED_FUNCTION_0_19() & 1) != 0
         || (*(_QWORD *)(v50 + 64) == v27 ? (v38 = *(_QWORD *)(v50 + 72) == v28) : (v38 = 0),
             v38 || (OUTLINED_FUNCTION_0_19() & 1) != 0)))
      {
        OUTLINED_FUNCTION_47_9();
      }
      if (one-time initialization token for memoryCreationQU != -1)
        swift_once();
      v39 = OUTLINED_FUNCTION_13();
      __swift_project_value_buffer(v39, (uint64_t)static Logging.memoryCreationQU);
      OUTLINED_FUNCTION_35_1();
      v40 = Logger.logObject.getter();
      log = v40;
      type = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, type))
      {
        v41 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        v57 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        *(_DWORD *)v41 = 136315138;
        OUTLINED_FUNCTION_35_1();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v57);
        *(_QWORD *)(v41 + 4) = v42;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24315F000, log, type, "Unhandled attribute key while converting to attributedString: %s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_75_0();
      ++v24;
      if (v25 == i)
        goto LABEL_74;
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    ;
  }
LABEL_74:
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_118_0();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return isa;
}

uint64_t MemoryCreationQUController.groundPerson(person:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *(*v6)(Swift::String *__return_ptr);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  uint64_t v80;

  v6 = *(_QWORD *(**)(Swift::String *__return_ptr))(*(_QWORD *)v2 + 128);
  v7 = v6(&v79);
  if (!v80)
  {
    OUTLINED_FUNCTION_68_7((uint64_t)v7, &demangling cache variable for type metadata for ECRClientProtocol?, v9, v10, v11, v12, v13);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_93_4((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v74, v75, v76, v77, v78, v79._countAndFlagsBits);
  OUTLINED_FUNCTION_68_7(v15, &demangling cache variable for type metadata for ECRClientProtocol?, v16, v17, v18, v19, v20);
  v21 = __swift_project_boxed_opaque_existential_1(&v74, v77);
  v22 = OUTLINED_FUNCTION_105_5();
  v24 = v23(v22);
  if (!v3)
  {
    OUTLINED_FUNCTION_95_5();
    OUTLINED_FUNCTION_104_5(v32, v33, v34, v35, v36, v37, v38, v39, v74);
    if (v21 != (_QWORD *)1)
      return (uint64_t)v21;
LABEL_6:
    v79 = String.lowercased()();
    v74 = 2128237;
    v75 = 0xE300000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    lazy protocol witness table accessor for type String and conformance String();
    v40 = BidirectionalCollection<>.starts<A>(with:)();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
    {
      outlined consume of ECRClientPersonResult?(1);
      OUTLINED_FUNCTION_23_0();
      v41 = specialized Collection.dropFirst(_:)(3uLL, a1, a2);
      MEMORY[0x2494F5C48](v41);
      v42 = swift_bridgeObjectRelease();
      v43 = ((_QWORD *(*)(Swift::String *__return_ptr, uint64_t))v6)(&v79, v42);
      if (v80)
      {
        OUTLINED_FUNCTION_93_4((uint64_t)v43, v44, v45, v46, v47, v48, v49, v50, v74, v75, v76, v77, v78, v79._countAndFlagsBits);
        OUTLINED_FUNCTION_68_7(v51, &demangling cache variable for type metadata for ECRClientProtocol?, v52, v53, v54, v55, v56);
        v21 = __swift_project_boxed_opaque_existential_1(&v74, v77);
        v57 = OUTLINED_FUNCTION_105_5();
        v58(v57);
        if (!v3)
        {
          OUTLINED_FUNCTION_95_5();
          v66 = OUTLINED_FUNCTION_56_0();
          OUTLINED_FUNCTION_104_5(v66, v67, v68, v69, v70, v71, v72, v73, v74);
          return (uint64_t)v21;
        }
        v24 = OUTLINED_FUNCTION_56_0();
        goto LABEL_10;
      }
      v59 = OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_68_7(v59, &demangling cache variable for type metadata for ECRClientProtocol?, v60, v61, v62, v63, v64);
    }
    return 1;
  }
LABEL_10:
  OUTLINED_FUNCTION_104_5(v24, v25, v26, v27, v28, v29, v30, v31, v74);
  return (uint64_t)v21;
}

uint64_t MemoryCreationQUController.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  outlined destroy of CustomStringConvertible?(v0 + 56, &demangling cache variable for type metadata for ECRClientProtocol?);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return v0;
}

uint64_t MemoryCreationQUController.__deallocating_deinit()
{
  MemoryCreationQUController.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.llmQUNetworkService.getter in conformance MemoryCreationQUController()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.prewarm(originatorPID:) in conformance MemoryCreationQUController()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 184))();
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:originatorPID:) in conformance MemoryCreationQUController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v6 + 192)
                                                                                     + *(_QWORD *)(**(_QWORD **)v6
                                                                                                 + 192));
  v13 = a6 & 1;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = protocol witness for MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:originatorPID:) in conformance MemoryCreationQUController;
  return v16(a1, a2, a3, a4, a5, v13);
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:originatorPID:) in conformance MemoryCreationQUController(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_16_7();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_41(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t protocol witness for MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:) in conformance MemoryCreationQUController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(**(_QWORD **)v4 + 200)
                                                                   + *(_QWORD *)(**(_QWORD **)v4 + 200));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = protocol witness for MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:) in conformance MemoryCreationQUController;
  return v12(a1, a2, a3, a4);
}

uint64_t specialized static StringProtocol.== infix<A>(_:_:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  BOOL v7;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  v7 = a3 == a5 && a4 == a6;
  if (v7 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
}

void outlined bridged method (mnbnnn) of @objc QPQueryParserManager.enumerateSpotlightResults(for:options:with:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_enumerateSpotlightResultsForString_options_withBlock_, a1, isa, a3);

}

uint64_t type metadata accessor for LLMQUParse()
{
  return objc_opt_self();
}

void outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x2494F5BB8]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

uint64_t specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v9;
  uint64_t Parser;
  _UNKNOWN **v11;
  __int128 v12;
  uint64_t v13;
  _UNKNOWN **v14;

  v13 = type metadata accessor for MemoryCreationQUNetworkService();
  v14 = &protocol witness table for MemoryCreationQUNetworkService;
  *(_QWORD *)&v12 = a1;
  Parser = type metadata accessor for PhotosQueryParser();
  v11 = &protocol witness table for PhotosQueryParser;
  *(_QWORD *)&v9 = a3;
  *(_OWORD *)(a4 + 72) = 0u;
  *(_QWORD *)(a4 + 88) = 0;
  *(_OWORD *)(a4 + 56) = 0u;
  outlined init with take of SageSearchClient(&v12, a4 + 16);
  swift_beginAccess();
  outlined assign with take of ECRClientProtocol?(a2, a4 + 56);
  swift_endAccess();
  outlined init with take of SageSearchClient(&v9, a4 + 96);
  return a4;
}

uint64_t specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a5;
  v23 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  v19 = a6;
  v20 = a8;
  v16 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v16, a3, a6);
  *(_OWORD *)(a4 + 72) = 0u;
  *(_QWORD *)(a4 + 88) = 0;
  *(_OWORD *)(a4 + 56) = 0u;
  outlined init with take of SageSearchClient(&v21, a4 + 16);
  swift_beginAccess();
  outlined assign with take of ECRClientProtocol?(a2, a4 + 56);
  swift_endAccess();
  outlined init with take of SageSearchClient(&v18, a4 + 96);
  return a4;
}

uint64_t outlined assign with take of ECRClientProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ECRClientProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined release of MemoryCreationQUModelResponse(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of MemoryCreationQUModelResponseMusic?(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2432007FC(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 104))();
  OUTLINED_FUNCTION_5();
}

void sub_243200824(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 128))();
  OUTLINED_FUNCTION_5();
}

void sub_24320084C(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 152))();
  OUTLINED_FUNCTION_5();
}

uint64_t dispatch thunk of QueryParserProtocol.enumerateParseResults(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for PhotosQueryParser()
{
  return objc_opt_self();
}

uint64_t method lookup function for PhotosQueryParser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhotosQueryParser.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PhotosQueryParser.enumerateParseResults(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t method lookup function for LLMQUParse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LLMQUParse.__allocating_init(attributedParse:parseV2:isTrip:isOpenEndedTimeRange:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.llmQUNetworkService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.prewarm(originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:personNames:petNames:originatorPID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);

  v12 = (uint64_t (*)(uint64_t))(**(int **)(a8 + 24) + *(_QWORD *)(a8 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v9;
  OUTLINED_FUNCTION_49_9(v9, (uint64_t)dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:));
  v10 = OUTLINED_FUNCTION_82_7();
  return v12(v10);
}

uint64_t dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v6 + 16) = v13;
  OUTLINED_FUNCTION_49_9(v13, (uint64_t)dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:));
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for MemoryCreationQUController()
{
  return objc_opt_self();
}

uint64_t method lookup function for MemoryCreationQUController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MemoryCreationQUController.llmQUNetworkService.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MemoryCreationQUController.ecrClient.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MemoryCreationQUController.queryParser.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MemoryCreationQUController.__allocating_init(llmQUNetworkService:ecrClient:queryParser:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MemoryCreationQUController.prewarm(originatorPID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_49_9(v1, (uint64_t)dispatch thunk of MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:));
  OUTLINED_FUNCTION_100_4();
  return v3();
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:personNames:petNames:originatorPID:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_16_7();
  return OUTLINED_FUNCTION_41(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:quResponseJSONString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = (_QWORD *)OUTLINED_FUNCTION_6();
  *(_QWORD *)(v4 + 16) = v9;
  OUTLINED_FUNCTION_49_9(v9, (uint64_t)dispatch thunk of MemoryCreationQUControllerProtocol.parse(_:quResponseJSONString:));
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:quResponse:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  __int128 *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t (*v14)(uint64_t);

  OUTLINED_FUNCTION_39_8(*v0);
  v14 = v2;
  v8 = *v3;
  v9 = v3[1];
  v10 = v3[2];
  v11 = v3[3];
  v12 = v3[4];
  v13 = v3[5];
  v4 = *((_QWORD *)v3 + 12);
  v5 = (_QWORD *)swift_task_alloc();
  *(_OWORD *)(v1 + 16) = v8;
  *(_OWORD *)(v1 + 32) = v9;
  *(_OWORD *)(v1 + 48) = v10;
  *(_OWORD *)(v1 + 64) = v11;
  *(_OWORD *)(v1 + 80) = v12;
  *(_OWORD *)(v1 + 96) = v13;
  *(_QWORD *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 120) = v5;
  OUTLINED_FUNCTION_49_9(v5, (uint64_t)dispatch thunk of MemoryCreationQUController.parse(_:quResponse:));
  v6 = OUTLINED_FUNCTION_35_3();
  return v14(v6);
}

uint64_t dispatch thunk of MemoryCreationQUController.parse(_:quResponse:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_16_7();
  return OUTLINED_FUNCTION_41(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t outlined consume of ECRClientPersonResult?(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_243200D54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_243200D78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_243200D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_36_9();
  closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(a1, *(_QWORD *)(v1 + 16), v1 + v5, *(void **)(v1 + v3), *(_QWORD *)(v1 + v4));
}

uint64_t sub_243200E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
  OUTLINED_FUNCTION_36_9();
  closure #1 in closure #1 in MemoryCreationQUController.attributesFromWhen(query:when:)(a1, a2, a3, a4, v4 + v9, *(void **)(v4 + v10), *(uint64_t **)(v4 + v11));
}

uint64_t sub_243200F7C()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey;
  if (!lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey)
  {
    type metadata accessor for NSAttributedStringKey(255);
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for NSAttributedStringKey, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Regex<(Substring, Substring)> and conformance Regex<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>;
  if (!lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Regex<(Substring, Substring)>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Regex<(Substring, Substring)> and conformance Regex<A>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_8_13(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with take of URL?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_22_11@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_23_12@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return type metadata accessor for MemoryCreationQUParseAttributes();
}

uint64_t OUTLINED_FUNCTION_31_12()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void OUTLINED_FUNCTION_33_7()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return MemoryCreationQUParseAttributes.init(attributeKey:range:substring:expansionStringValues:expansionDateValues:)();
}

uint64_t OUTLINED_FUNCTION_39_8@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 208) + 4);
}

uint64_t OUTLINED_FUNCTION_43_10()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_45_9()
{
  specialized Array.append<A>(contentsOf:)();
}

void OUTLINED_FUNCTION_46_7()
{
  JUMPOUT(0x2494F5E10);
}

void OUTLINED_FUNCTION_47_9()
{
  JUMPOUT(0x2494F5BB8);
}

_QWORD *OUTLINED_FUNCTION_49_9@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_50_8()
{
  return Range<>.init(_:in:)();
}

unint64_t OUTLINED_FUNCTION_51_7(Swift::String of)
{
  return (unint64_t)String.nsRangeWithCompleteTokenMatch(of:)(of);
}

uint64_t OUTLINED_FUNCTION_52_9()
{
  return String.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_53_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_55_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return specialized MemoryCreationQUController.init(llmQUNetworkService:ecrClient:queryParser:)(a1, a2, a3, a4, v4, v6, v5, v7);
}

uint64_t OUTLINED_FUNCTION_58_7()
{
  uint64_t v0;

  return outlined release of MemoryCreationQUModelResponse(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_65_8()
{
  return specialized Array._endMutation()();
}

void OUTLINED_FUNCTION_66_8()
{
  JUMPOUT(0x2494F5E10);
}

void OUTLINED_FUNCTION_68_7(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  outlined destroy of CustomStringConvertible?((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_76_6()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_78_9()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_79_6()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_82_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_85_5()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_86_7()
{
  JUMPOUT(0x2494F5C48);
}

void OUTLINED_FUNCTION_93_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  outlined init with copy of SearchResultRanking((uint64_t)&a14, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_97_6()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of SearchResultRanking(v1, v0);
}

uint64_t OUTLINED_FUNCTION_104_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_105_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_106_6()
{
  return swift_retain();
}

uint64_t static SearchToolMCQU.openAppWhenRun.getter()
{
  return 0;
}

uint64_t static SearchToolMCQU.isDiscoverable.getter()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolMCQU.isDiscoverable;
}

void static SearchToolMCQU.isDiscoverable.setter(char a1)
{
  OUTLINED_FUNCTION_2_6();
  static SearchToolMCQU.isDiscoverable = a1;
  OUTLINED_FUNCTION_56_1();
}

uint64_t (*static SearchToolMCQU.isDiscoverable.modify())()
{
  OUTLINED_FUNCTION_2_6();
  return static SearchToolControl.assistantOnly.modify;
}

uint64_t static SearchToolMCQU.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for title != -1)
    swift_once();
  v2 = type metadata accessor for LocalizedStringResource();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCQU.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void static SearchToolMCQU.description.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCQU.description);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_51_0();
}

void static SearchToolMCQU.description.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for description != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_5();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchToolMCQU.description);
  OUTLINED_FUNCTION_2_6();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_51_0();
}

uint64_t (*static SearchToolMCQU.description.modify())()
{
  uint64_t v0;

  if (one-time initialization token for description != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_17_5();
  __swift_project_value_buffer(v0, (uint64_t)static SearchToolMCQU.description);
  OUTLINED_FUNCTION_2_6();
  return static UTType.searchToolExportedExperiences.modify;
}

uint64_t SearchToolMCQU.query.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchToolMCQU.query : SearchToolMCQU@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SearchToolMCQU.query.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void key path setter for SearchToolMCQU.query : SearchToolMCQU()
{
  swift_bridgeObjectRetain();
  SearchToolMCQU.query.setter();
}

void SearchToolMCQU.query.setter()
{
  IntentParameter.wrappedValue.setter();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCQU.query.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCQU.$query.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchToolMCQU.originatorPID.getter()
{
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchToolMCQU.originatorPID : SearchToolMCQU(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SearchToolMCQU.originatorPID.getter();
  *a1 = v2;
}

void key path setter for SearchToolMCQU.originatorPID : SearchToolMCQU()
{
  SearchToolMCQU.originatorPID.setter();
}

void SearchToolMCQU.originatorPID.setter()
{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCQU.originatorPID.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCQU.$originatorPID.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchToolMCQU.personNames.getter()
{
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCQU.personNames.setter()
{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCQU.personNames.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCQU.$personNames.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

void SearchToolMCQU.petNames.getter()
{
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_2_5();
}

void key path getter for SearchToolMCQU.personNames : SearchToolMCQU(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD)@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a4(a1, a2, a3, a4);
  OUTLINED_FUNCTION_56_1();
}

void key path setter for SearchToolMCQU.personNames : SearchToolMCQU(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  a5(v6);
  OUTLINED_FUNCTION_56_1();
}

void SearchToolMCQU.petNames.setter()
{
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_2_5();
}

void SearchToolMCQU.petNames.modify()
{
  uint64_t v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_8_4((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = IntentParameter.wrappedValue.modify();
  OUTLINED_FUNCTION_12();
}

void SearchToolMCQU.$petNames.getter()
{
  IntentParameter.projectedValue.getter();
  OUTLINED_FUNCTION_5();
}

uint64_t SearchToolMCQU.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;

  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<Int>.IntControlStyle);
  v42 = *(_QWORD *)(v44 - 8);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  v43 = v3 - v2;
  v47 = type metadata accessor for InputConnectionBehavior();
  v4 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentDialog?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String.IntentInputOptions?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_2();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_2();
  v39 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<String>);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v15 = OUTLINED_FUNCTION_7_17();
  __swift_storeEnumTagSinglePayload(v15, v16, v17, v39);
  v40 = type metadata accessor for String.IntentInputOptions();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v40);
  type metadata accessor for IntentDialog();
  v18 = OUTLINED_FUNCTION_21_10();
  __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
  v22 = *MEMORY[0x24BDB6090];
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  v23(v7, v22, v47);
  v41 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<Int>);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v24 = OUTLINED_FUNCTION_7_17();
  __swift_storeEnumTagSinglePayload(v24, v25, v26, v39);
  v27 = OUTLINED_FUNCTION_21_10();
  __swift_storeEnumTagSinglePayload(v27, v28, v29, v30);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 104))(v43, *MEMORY[0x24BDB5478], v44);
  v23(v7, v22, v47);
  v45 = IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentParameter<[String]?>);
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_16_16();
  v31 = OUTLINED_FUNCTION_7_17();
  __swift_storeEnumTagSinglePayload(v31, v32, v33, v39);
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_13_16();
  v34 = OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_19_13();
  v35 = OUTLINED_FUNCTION_7_17();
  __swift_storeEnumTagSinglePayload(v35, v36, v37, v39);
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_13_16();
  result = OUTLINED_FUNCTION_6_17();
  *a1 = v41;
  a1[1] = v45;
  a1[2] = v34;
  a1[3] = result;
  return result;
}

uint64_t SearchToolMCQU.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MemoryCreationQUResult?);
  *(_QWORD *)(v2 + 96) = swift_task_alloc();
  v3 = v1[1];
  *(_OWORD *)(v2 + 104) = *v1;
  *(_OWORD *)(v2 + 120) = v3;
  return swift_task_switch();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 176) = a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t SearchToolMCQU.perform()()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  if (one-time initialization token for stextension != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logging.stextension);
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_15_11();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_10_8();
    IntentParameter.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_11_5();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0[4], v0[5], &v13);
    v0[9] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_7_6();
    _os_log_impl(&dword_24315F000, v2, v3, "SearchTool Memory Creation QU perform() with query: %s", v4, 0xCu);
    swift_arrayDestroy();
    specialized UnsafeMutablePointer.deallocate()();
  }
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_7_6();

  type metadata accessor for OmniSearchService();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_10_8();
  IntentParameter.wrappedValue.getter();
  v6 = v0[3];
  v12 = v0[2];
  v0[17] = v6;
  IntentParameter.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_5();
  v7 = v0[6];
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_10_8();
  IntentParameter.wrappedValue.getter();
  v8 = v0[7];
  v0[18] = v8;
  IntentParameter.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_5();
  v9 = v0[8];
  v0[19] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v0[20] = v10;
  *v10 = v0;
  v10[1] = SearchToolMCQU.perform();
  return static OmniSearchService.parseWithMemoryCreationQU(_:originatorPID:jsonParse:personNames:petNames:)(v12, v6, v7, 0, 0, 0, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = swift_retain();
  MemoryCreationQUResult.init(parse:)(v3, v2);
  lazy protocol witness table accessor for type MemoryCreationQUResult? and conformance <A> A?();
  static IntentResult.result<A>(value:)();

  outlined destroy of MemoryCreationQUResult?(v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t protocol witness for AppIntent.perform() in conformance SearchToolMCQU(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = protocol witness for AppIntent.perform() in conformance SearchToolControl;
  return SearchToolMCQU.perform()(a1);
}

uint64_t protocol witness for static PersistentlyIdentifiable.persistentIdentifier.getter in conformance SearchToolMCQU()
{
  lazy protocol witness table accessor for type SearchToolMCQU and conformance SearchToolMCQU();
  return static AppIntent.persistentIdentifier.getter();
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUResult? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type MemoryCreationQUResult? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUResult? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for MemoryCreationQUResult?);
    v2 = lazy protocol witness table accessor for type MemoryCreationQUResult and conformance MemoryCreationQUResult();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB6690], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUResult? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MemoryCreationQUResult and conformance MemoryCreationQUResult()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult;
  if (!lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult)
  {
    v1 = type metadata accessor for MemoryCreationQUResult();
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for MemoryCreationQUResult, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MemoryCreationQUResult and conformance MemoryCreationQUResult);
  }
  return result;
}

uint64_t outlined destroy of MemoryCreationQUResult?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MemoryCreationQUResult?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type SearchToolMCQU and conformance SearchToolMCQU()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU;
  if (!lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCQU, &type metadata for SearchToolMCQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU;
  if (!lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCQU, &type metadata for SearchToolMCQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU;
  if (!lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchToolMCQU, &type metadata for SearchToolMCQU);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolMCQU and conformance SearchToolMCQU);
  }
  return result;
}

uint64_t associated type witness table accessor for AppIntent.PerformResult : IntentResult in SearchToolMCQU()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t associated type witness table accessor for AppIntent.SummaryContent : ParameterSummary in SearchToolMCQU()
{
  lazy protocol witness table accessor for type SearchToolMCQU and conformance SearchToolMCQU();
  return swift_getOpaqueTypeConformance2();
}

void sub_243202814(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  key path getter for SearchToolMCQU.personNames : SearchToolMCQU(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))SearchToolMCQU.personNames.getter, a4);
}

void sub_243202830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolMCQU.personNames : SearchToolMCQU(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolMCQU.personNames.setter);
}

void sub_24320284C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  key path getter for SearchToolMCQU.personNames : SearchToolMCQU(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))SearchToolMCQU.petNames.getter, a4);
}

void sub_243202868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for SearchToolMCQU.personNames : SearchToolMCQU(a1, a2, a3, a4, (void (*)(uint64_t))SearchToolMCQU.petNames.setter);
}

uint64_t destroy for SearchToolMCQU()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for SearchToolMCQU(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchToolMCQU(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SearchToolMCQU(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchToolMCQU(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchToolMCQU(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchToolMCQU()
{
  return &type metadata for SearchToolMCQU;
}

unint64_t lazy protocol witness table accessor for type IntentResultContainer<MemoryCreationQUResult?, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type IntentResultContainer<MemoryCreationQUResult?, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>;
  if (!lazy protocol witness table cache variable for type IntentResultContainer<MemoryCreationQUResult?, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentResultContainer<MemoryCreationQUResult?, Never, Never, Never>);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BDB5E60], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentResultContainer<MemoryCreationQUResult?, Never, Never, Never> and conformance IntentResultContainer<A, B, C, D>);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, *(_QWORD *)(v3 - 120));
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  uint64_t (*v0)(uint64_t, _QWORD, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(unsigned int *)(v2 - 108), *(_QWORD *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_16_16()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t DialogExperience.__allocating_init(_:card:)(void *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_11_11();
  v2 = swift_allocObject();
  DialogExperience.init(_:card:)(a1);
  return v2;
}

uint64_t IntentFile.init(experiences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  Class isa;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_2();
  v7 = v6 - v5;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_80_0();
    if (v24)
    {
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_80_0();
      if (!v8)
        goto LABEL_9;
      goto LABEL_3;
    }
LABEL_18:
    OUTLINED_FUNCTION_80_0();
LABEL_19:
    v17 = 1;
    goto LABEL_20;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_18;
LABEL_3:
  v27[0] = (id)MEMORY[0x24BEE4AF8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v9 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x2494F62E4](v9, a1);
    }
    else
    {
      v10 = *(_QWORD *)(a1 + 8 * v9 + 32);
      swift_retain();
    }
    ++v9;
    v11 = *(id *)(v10 + 16);
    swift_release();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v8 != v9);
LABEL_9:
  OUTLINED_FUNCTION_80_0();
  v12 = (void *)objc_opt_self();
  type metadata accessor for Experience();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v27[0] = 0;
  v14 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, isa, 1, v27);

  v15 = v27[0];
  if (!v14)
  {
    v18 = v15;
    v19 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for search == -1)
    {
LABEL_12:
      v20 = type metadata accessor for Logger();
      __swift_project_value_buffer(v20, (uint64_t)static Logging.search);
      v21 = Logger.logObject.getter();
      v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_24315F000, v21, v22, "Failed to archive experience!", v23, 2u);
        MEMORY[0x2494F6D70](v23, -1, -1);
      }

      goto LABEL_19;
    }
LABEL_22:
    swift_once();
    goto LABEL_12;
  }
  static Data._unconditionallyBridgeFromObjectiveC(_:)();

  v16 = type metadata accessor for UTType();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v16);
  IntentFile.init(data:filename:type:)();
  v17 = 0;
LABEL_20:
  v25 = type metadata accessor for IntentFile();
  return __swift_storeEnumTagSinglePayload(a2, v17, 1, v25);
}

BOOL static DialogExperience.CodingKeys.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DialogExperience.CodingKeys.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_5();
}

OmniSearch::DialogExperience::CodingKeys_optional __swiftcall DialogExperience.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  BOOL v1;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;

  v1 = stringValue._countAndFlagsBits == 0x6E65697265707865 && stringValue._object == (void *)0xEA00000000006563;
  if (v1
    || (object = stringValue._object,
        countAndFlagsBits = stringValue._countAndFlagsBits,
        (OUTLINED_FUNCTION_13_17() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (countAndFlagsBits == 0x647261436673 && object == (void *)0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return (OmniSearch::DialogExperience::CodingKeys_optional)1;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_13_17();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return (OmniSearch::DialogExperience::CodingKeys_optional)1;
    else
      return (OmniSearch::DialogExperience::CodingKeys_optional)2;
  }
}

OmniSearch::DialogExperience::CodingKeys_optional __swiftcall DialogExperience.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  return (OmniSearch::DialogExperience::CodingKeys_optional)2;
}

Swift::Int DialogExperience.CodingKeys.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t DialogExperience.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t DialogExperience.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x647261436673;
  else
    return 0x6E65697265707865;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance DialogExperience.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DialogExperience.CodingKeys.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DialogExperience.CodingKeys()
{
  char *v0;

  return DialogExperience.CodingKeys.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance DialogExperience.CodingKeys(uint64_t a1)
{
  char *v1;

  DialogExperience.CodingKeys.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DialogExperience.CodingKeys()
{
  char *v0;

  return DialogExperience.CodingKeys.stringValue.getter(*v0);
}

OmniSearch::DialogExperience::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance DialogExperience.CodingKeys@<W0>(uint64_t a1@<X0>, OmniSearch::DialogExperience::CodingKeys_optional *a2@<X8>)
{
  OmniSearch::DialogExperience::CodingKeys_optional result;

  result.value = DialogExperience.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance DialogExperience.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DialogExperience.CodingKeys()
{
  lazy protocol witness table accessor for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DialogExperience.CodingKeys()
{
  lazy protocol witness table accessor for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys();
  return CodingKey.debugDescription.getter();
}

id DialogExperience.experience.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t key path setter for DialogExperience.renderedDialog : DialogExperience(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(_QWORD **)a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6(v2, v3, v4, v5);
}

uint64_t DialogExperience.renderedDialog.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_6();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DialogExperience.renderedDialog.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  OUTLINED_FUNCTION_2_6();
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void DialogExperience.renderedDialog.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t key path setter for DialogExperience.sfCard : DialogExperience(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 136);
  v4 = *a1;
  return v3(v2);
}

void *DialogExperience.sfCard.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_2_6();
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void DialogExperience.sfCard.setter()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_16_17();
}

void DialogExperience.sfCard.modify()
{
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_5();
}

uint64_t static DialogExperience.bundleName.getter()
{
  return 0;
}

void DialogExperience.print.getter()
{
  OUTLINED_FUNCTION_6_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5();
}

void DialogExperience.speak.getter()
{
  OUTLINED_FUNCTION_6_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5();
}

_QWORD *DialogExperience.init(_:card:)(void *a1)
{
  _QWORD *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[3] = 0;
  v1[4] = 0xE000000000000000;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[2] = a1;
  type metadata accessor for GenericExperience();
  if (swift_dynamicCastClass())
  {
    v3 = a1;
    v4 = static GlobalSearchResponseProcessor.processRenderedDialog(experience:)();
    v6 = v5;
    v8 = v7;
    v10 = v9;

    OUTLINED_FUNCTION_2_6();
    v1[3] = v4;
    v1[4] = v6;
    v1[5] = v8;
    v1[6] = v10;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_80_0();
  }
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_16_17();
  return v1;
}

uint64_t DialogExperience.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v3 = v1;
  v33 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DialogExperience.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8 = (void *)objc_opt_self();
  v9 = v3[2];
  v31 = 0;
  v10 = objc_msgSend(v8, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v9, 0, &v31);
  v11 = OUTLINED_FUNCTION_17_15();
  if (v7)
  {
    v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v14 = v13;

    v31 = v12;
    v32 = v14;
    lazy protocol witness table accessor for type Data and conformance Data();
    v15 = OUTLINED_FUNCTION_2_15();
    if (v2 || (v21 = v3, (v22 = (*(uint64_t (**)(uint64_t))(*v3 + 128))(v15)) == 0))
    {
      OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v16 = v12;
      v17 = v14;
      return outlined consume of Data._Representation(v16, v17);
    }
    v23 = (void *)v22;
    v31 = 0;
    v24 = objc_msgSend(v8, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v22, 0, &v31);
    v25 = OUTLINED_FUNCTION_17_15();
    if (v21)
    {
      v30 = v23;
      v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v28 = v27;

      v31 = v26;
      v32 = v28;
      OUTLINED_FUNCTION_2_15();
      OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));

      OUTLINED_FUNCTION_7_18(v12);
      v16 = v26;
      v17 = v28;
      return outlined consume of Data._Representation(v16, v17);
    }
    v29 = v25;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    OUTLINED_FUNCTION_7_18(v12);

    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    v19 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  return OUTLINED_FUNCTION_38_2(v20);
}

uint64_t DialogExperience.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_11_11();
  v2 = swift_allocObject();
  DialogExperience.init(from:)(a1);
  return v2;
}

_QWORD *DialogExperience.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DialogExperience.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_2();
  v9 = v8 - v7;
  v35 = a1;
  v36 = v3;
  v3[3] = 0;
  v3[4] = 0xE000000000000000;
  v10 = v3 + 3;
  v10[2] = 0;
  v10[3] = 0xE000000000000000;
  v10[4] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    v13 = a1;
    v14 = v36;
  }
  else
  {
    v34 = (void **)(v10 + 4);
    v11 = v6;
    lazy protocol witness table accessor for type Data and conformance Data();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v33 = v9;
    type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for Experience();
    v12 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    v17 = (void *)v12;
    v18 = v6;
    v14 = v36;
    if (v12)
    {
      v36[2] = v12;
      type metadata accessor for GenericExperience();
      v19 = swift_dynamicCastClass();
      v31 = v17;
      v17;
      if (v19)
      {
        v20 = static GlobalSearchResponseProcessor.processRenderedDialog(experience:)();
        v32 = v21;
        v23 = v22;
        v25 = v24;
        OUTLINED_FUNCTION_20_11();
        v36[3] = v20;
        v36[4] = v23;
        v18 = v11;
        v36[5] = v25;
        v36[6] = v32;
        swift_bridgeObjectRelease();
        v14 = v36;
        swift_bridgeObjectRelease();
      }
      LOBYTE(v37) = 1;
      if ((KeyedDecodingContainer.contains(_:)() & 1) == 0)
      {
        OUTLINED_FUNCTION_4_18(v33, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
        OUTLINED_FUNCTION_12_15();
        OUTLINED_FUNCTION_9_14();
        v27 = 0;
LABEL_16:
        OUTLINED_FUNCTION_20_11();
        v28 = *v34;
        *v34 = v27;

        v15 = (uint64_t)v35;
        goto LABEL_6;
      }
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      type metadata accessor for IMSPIMessage(0, (unint64_t *)&lazy cache variable for type metadata for SFCard);
      v29 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      v27 = (void *)v29;
      if (v29)
      {
        OUTLINED_FUNCTION_4_18(v33, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
        OUTLINED_FUNCTION_19_14();
        OUTLINED_FUNCTION_9_14();
        OUTLINED_FUNCTION_7_18(v37);
        goto LABEL_16;
      }
      lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
      OUTLINED_FUNCTION_74_4();
      OUTLINED_FUNCTION_1_19(v30, 0xD00000000000001CLL);
      OUTLINED_FUNCTION_19_14();
      OUTLINED_FUNCTION_7_18(v37);
      OUTLINED_FUNCTION_9_14();
      v17 = v31;
    }
    else
    {
      lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
      OUTLINED_FUNCTION_74_4();
      OUTLINED_FUNCTION_1_19(v26, 0xD000000000000020);
      OUTLINED_FUNCTION_12_15();
    }
    OUTLINED_FUNCTION_4_18(v33, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    if (v17)
    {
      OUTLINED_FUNCTION_4_12();
      v13 = v35;
      goto LABEL_5;
    }
    v13 = v35;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for DialogExperience();
  swift_deallocPartialClassInstance();
LABEL_5:
  v15 = (uint64_t)v13;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(v15);
  return v14;
}

uint64_t static DialogExperience.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  char v7;

  v3 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)a1 + 128))();
  v4 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)a2 + 128))();
  v5 = v4;
  if (v3)
  {
    if (v4)
    {
      type metadata accessor for IMSPIMessage(0, (unint64_t *)&lazy cache variable for type metadata for SFCard);
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)();

      if ((v7 & 1) == 0)
        return 0;
LABEL_7:
      type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for NSObject);
      return static NSObject.== infix(_:_:)() & 1;
    }

  }
  else
  {
    if (!v4)
      goto LABEL_7;

  }
  return 0;
}

uint64_t DialogExperience.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DialogExperience.__deallocating_deinit()
{
  DialogExperience.deinit();
  OUTLINED_FUNCTION_11_11();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for Decodable.init(from:) in conformance DialogExperience@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 184))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance DialogExperience()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 176))();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance DialogExperience(uint64_t *a1, uint64_t *a2)
{
  return static DialogExperience.== infix(_:_:)(*a1, *a2) & 1;
}

unint64_t lazy protocol witness table accessor for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys;
  if (!lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DialogExperience.CodingKeys, &type metadata for DialogExperience.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys;
  if (!lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DialogExperience.CodingKeys, &type metadata for DialogExperience.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys;
  if (!lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DialogExperience.CodingKeys, &type metadata for DialogExperience.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys;
  if (!lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for DialogExperience.CodingKeys, &type metadata for DialogExperience.CodingKeys);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DialogExperience.CodingKeys and conformance DialogExperience.CodingKeys);
  }
  return result;
}

uint64_t type metadata accessor for DialogExperience()
{
  return objc_opt_self();
}

void sub_243203EE4(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = OUTLINED_FUNCTION_6_18();
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  OUTLINED_FUNCTION_5();
}

void sub_243203F10(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 128))();
  OUTLINED_FUNCTION_5();
}

uint64_t method lookup function for DialogExperience()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DialogExperience.renderedDialog.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DialogExperience.renderedDialog.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DialogExperience.renderedDialog.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DialogExperience.sfCard.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DialogExperience.sfCard.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DialogExperience.sfCard.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DialogExperience.print.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DialogExperience.speak.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DialogExperience.__allocating_init(_:card:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DialogExperience.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DialogExperience.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for DialogExperience.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243204034 + 4 * byte_243351655[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243204068 + 4 * asc_243351650[v4]))();
}

uint64_t sub_243204068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243204070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243204078);
  return result;
}

uint64_t sub_243204084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24320408CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243204090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243204098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DialogExperience.CodingKeys()
{
  return &type metadata for DialogExperience.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_1_19@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_4_18@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t OUTLINED_FUNCTION_7_18(uint64_t a1)
{
  unint64_t v1;

  return outlined consume of Data._Representation(a1, v1);
}

void OUTLINED_FUNCTION_9_14()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_11_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_15()
{
  uint64_t v0;

  return outlined consume of Data._Representation(*(_QWORD *)(v0 - 176), *(_QWORD *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_16_17()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v0;

}

id OUTLINED_FUNCTION_17_15()
{
  uint64_t v0;

  return *(id *)(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_19_14()
{
  uint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v0, *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return swift_beginAccess();
}

void specialized Array.count.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_21_11();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_6_1();
  }
  OUTLINED_FUNCTION_5();
}

void specialized EnumeratedSequence.Iterator.next()(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Photo));
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *(_QWORD *)(*v1 + 16);
  if (v7 == v9)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 1, 1, v3);
    return;
  }
  if (v7 >= v9)
  {
    __break(1u);
  }
  else
  {
    v10 = type metadata accessor for Photo(0);
    v11 = v8
        + ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v7;
    v1[1] = v7 + 1;
    v12 = (uint64_t)&v6[*(int *)(v3 + 48)];
    v13 = v1[2];
    outlined init with copy of SearchResult(v11, v12, type metadata accessor for Photo);
    if (!__OFADD__(v13, 1))
    {
      v1[2] = v13 + 1;
      v14 = (uint64_t)a1 + *(int *)(v3 + 48);
      *a1 = v13;
      outlined init with take of SearchResult(v12, v14, type metadata accessor for Photo);
      OUTLINED_FUNCTION_14_9((uint64_t)a1);
      return;
    }
  }
  __break(1u);
}

char *specialized EnumeratedSequence.Iterator.next()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *result;

  v2 = *v0;
  v1 = v0[1];
  if ((unint64_t)*v0 >> 62)
  {
    OUTLINED_FUNCTION_91_0();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v1 == v3)
    return 0;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v1, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    result = (char *)MEMORY[0x2494F62E4](v1, v2);
  else
    result = (char *)*(id *)(v2 + 8 * v1 + 32);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v0[1] = v1 + 1;
    result = (char *)v0[2];
    if (!__OFADD__(result, 1))
    {
      v0[2] = (uint64_t)(result + 1);
      return result;
    }
  }
  __break(1u);
  return result;
}

void *AppEntityIndexClient.iCloudFilesBundleId.unsafeMutableAddressor()
{
  return &static AppEntityIndexClient.iCloudFilesBundleId;
}

void *AppEntityIndexClient.localFilesBundleId.unsafeMutableAddressor()
{
  return &static AppEntityIndexClient.localFilesBundleId;
}

unint64_t static AppEntityIndexClient.iCloudFilesBundleId.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static AppEntityIndexClient.localFilesBundleId.getter()
{
  return 0xD000000000000023;
}

uint64_t one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x24BDB5240], &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier, &qword_25728F8B0);
}

uint64_t *AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.unsafeMutableAddressor()
{
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1)
    swift_once();
  return &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
}

uint64_t static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter()
{
  return OUTLINED_FUNCTION_23_14(&one-time initialization token for keyAttributeItemAppEntityTypeIdentifier, &static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier);
}

uint64_t one-time initialization function for keyAItemAppEntityInstanceIdentifier(uint64_t a1)
{
  return one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(a1, MEMORY[0x24BDB5248], &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier, &qword_25728F8C0);
}

uint64_t one-time initialization function for keyAttributeItemAppEntityTypeIdentifier(uint64_t a1, unsigned int *a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v7 = type metadata accessor for SpotlightKeys();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a2, v7);
  v11 = SpotlightKeys.description.getter();
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v11;
  *a4 = v13;
  return result;
}

uint64_t *AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier.unsafeMutableAddressor()
{
  if (one-time initialization token for keyAItemAppEntityInstanceIdentifier != -1)
    swift_once();
  return &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier;
}

uint64_t static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier.getter()
{
  return OUTLINED_FUNCTION_23_14(&one-time initialization token for keyAItemAppEntityInstanceIdentifier, &static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier);
}

uint64_t static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

void *AppEntityIndexClient.kAppEntityClientSearchTimeout.unsafeMutableAddressor()
{
  return &static AppEntityIndexClient.kAppEntityClientSearchTimeout;
}

uint64_t static AppEntityIndexClient.kAppEntityClientSearchTimeout.getter()
{
  return 5;
}

void AppEntityIndexClient.__allocating_init(searchAgent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  OUTLINED_FUNCTION_44_10();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_16(v3, v4, v5);
  OUTLINED_FUNCTION_19_15();
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_63();
}

void AppEntityIndexClient.init(searchAgent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  OUTLINED_FUNCTION_44_10();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_16(v3, v4, v5);
  OUTLINED_FUNCTION_19_15();
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_63();
}

Swift::Void __swiftcall AppEntityIndexClient.prewarm()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  outlined init with copy of IMSPIMessageProtocol(v0 + 16, (uint64_t)v3);
  v1 = v4;
  v2 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t one-time initialization function for fetchAttributes()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_243351840;
  *(_QWORD *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 88) = v4;
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1)
    swift_once();
  v5 = qword_25728F8B0;
  *(_QWORD *)(v0 + 96) = static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
  *(_QWORD *)(v0 + 104) = v5;
  v6 = one-time initialization token for keyAItemAppEntityInstanceIdentifier;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_25728F8C0;
  *(_QWORD *)(v0 + 112) = static AppEntityIndexClient.keyAItemAppEntityInstanceIdentifier;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 128) = 0xD000000000000015;
  *(_QWORD *)(v0 + 136) = 0x800000024335CD90;
  *(_QWORD *)(v0 + 144) = 0xD00000000000002DLL;
  *(_QWORD *)(v0 + 152) = 0x800000024335CDB0;
  *(_QWORD *)(v0 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 168) = v8;
  *(_QWORD *)(v0 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 184) = v9;
  *(_QWORD *)(v0 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 200) = v10;
  *(_QWORD *)(v0 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 216) = v11;
  *(_QWORD *)(v0 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 232) = v12;
  *(_QWORD *)(v0 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 248) = v13;
  *(_QWORD *)(v0 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 264) = v14;
  *(_QWORD *)(v0 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 280) = v15;
  *(_QWORD *)(v0 + 288) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 296) = v16;
  static AppEntityIndexClient.fetchAttributes = v0;
  return swift_bridgeObjectRetain();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_243357760;
  *(_QWORD *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 168) = v9;
  *(_QWORD *)(v0 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 184) = v10;
  *(_QWORD *)(v0 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 200) = v11;
  *(_QWORD *)(v0 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 216) = v12;
  *(_QWORD *)(v0 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 232) = v13;
  *(_QWORD *)(v0 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 248) = v14;
  *(_QWORD *)(v0 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 264) = v15;
  *(_QWORD *)(v0 + 272) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 280) = v16;
  *(_QWORD *)(v0 + 288) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 296) = v17;
  *(_QWORD *)(v0 + 304) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 312) = v18;
  *(_QWORD *)(v0 + 320) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 328) = v19;
  *(_QWORD *)(v0 + 336) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 344) = v20;
  *(_QWORD *)(v0 + 352) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 360) = v21;
  *(_QWORD *)(v0 + 368) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 376) = v22;
  *(_QWORD *)(v0 + 384) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 392) = v23;
  *(_QWORD *)(v0 + 400) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 408) = v24;
  *(_QWORD *)(v0 + 416) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 424) = v25;
  *(_QWORD *)(v0 + 432) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 440) = v26;
  *(_QWORD *)(v0 + 448) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 456) = v27;
  *(_QWORD *)(v0 + 464) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 472) = v28;
  *(_QWORD *)(v0 + 480) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 488) = v29;
  *(_QWORD *)(v0 + 496) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 504) = v30;
  *(_QWORD *)(v0 + 512) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 520) = v31;
  *(_QWORD *)(v0 + 528) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 536) = v32;
  *(_QWORD *)(v0 + 544) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 552) = v33;
  *(_QWORD *)(v0 + 560) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 568) = v34;
  *(_QWORD *)(v0 + 576) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 584) = v35;
  *(_QWORD *)(v0 + 592) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 600) = v36;
  *(_QWORD *)(v0 + 608) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 616) = v37;
  *(_QWORD *)(v0 + 624) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 632) = v38;
  *(_QWORD *)(v0 + 640) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 648) = v39;
  *(_QWORD *)(v0 + 656) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 664) = v40;
  *(_QWORD *)(v0 + 672) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 680) = v41;
  *(_QWORD *)(v0 + 688) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 696) = v42;
  *(_QWORD *)(v0 + 704) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 712) = v43;
  *(_QWORD *)(v0 + 720) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 728) = v44;
  *(_QWORD *)(v0 + 736) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 744) = v45;
  *(_QWORD *)(v0 + 752) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 760) = v46;
  *(_QWORD *)(v0 + 768) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 776) = v47;
  *(_QWORD *)(v0 + 784) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 792) = v48;
  *(_QWORD *)(v0 + 800) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 808) = v49;
  *(_QWORD *)(v0 + 816) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 824) = v50;
  *(_QWORD *)(v0 + 832) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 840) = v51;
  *(_QWORD *)(v0 + 848) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 856) = v52;
  *(_QWORD *)(v0 + 864) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 872) = v53;
  *(_QWORD *)(v0 + 880) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 888) = v54;
  *(_QWORD *)(v0 + 896) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 904) = v55;
  *(_QWORD *)(v0 + 912) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 920) = v56;
  *(_QWORD *)(v0 + 928) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 936) = v57;
  *(_QWORD *)(v0 + 944) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 952) = v58;
  *(_QWORD *)(v0 + 960) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 968) = v59;
  *(_QWORD *)(v0 + 976) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 984) = v60;
  *(_QWORD *)(v0 + 992) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1000) = v61;
  *(_QWORD *)(v0 + 1008) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1016) = v62;
  *(_QWORD *)(v0 + 1024) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1032) = v63;
  *(_QWORD *)(v0 + 1040) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1048) = v64;
  *(_QWORD *)(v0 + 1056) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1064) = v65;
  *(_QWORD *)(v0 + 1072) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1080) = v66;
  *(_QWORD *)(v0 + 1088) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1096) = v67;
  *(_QWORD *)(v0 + 1104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1112) = v68;
  *(_QWORD *)(v0 + 1120) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1128) = v69;
  *(_QWORD *)(v0 + 1136) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1144) = v70;
  *(_QWORD *)(v0 + 1152) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1160) = v71;
  *(_QWORD *)(v0 + 1168) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1176) = v72;
  *(_QWORD *)(v0 + 1184) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1192) = v73;
  *(_QWORD *)(v0 + 1200) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1208) = v74;
  *(_QWORD *)(v0 + 1216) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1224) = v75;
  *(_QWORD *)(v0 + 1232) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1240) = v76;
  *(_QWORD *)(v0 + 1248) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1256) = v77;
  *(_QWORD *)(v0 + 1264) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1272) = v78;
  *(_QWORD *)(v0 + 1280) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1288) = v79;
  *(_QWORD *)(v0 + 1296) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1304) = v80;
  *(_QWORD *)(v0 + 1312) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1320) = v81;
  *(_QWORD *)(v0 + 1328) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1336) = v82;
  *(_QWORD *)(v0 + 1344) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1352) = v83;
  *(_QWORD *)(v0 + 1360) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1368) = v84;
  *(_QWORD *)(v0 + 1376) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1384) = v85;
  *(_QWORD *)(v0 + 1392) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1400) = v86;
  *(_QWORD *)(v0 + 1408) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1416) = v87;
  *(_QWORD *)(v0 + 1424) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1432) = v88;
  *(_QWORD *)(v0 + 1440) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1448) = v89;
  *(_QWORD *)(v0 + 1456) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1464) = v90;
  *(_QWORD *)(v0 + 1472) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1480) = v91;
  *(_QWORD *)(v0 + 1488) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1496) = v92;
  *(_QWORD *)(v0 + 1504) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1512) = v93;
  *(_QWORD *)(v0 + 1520) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1528) = v94;
  *(_QWORD *)(v0 + 1536) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1544) = v95;
  *(_QWORD *)(v0 + 1552) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1560) = v96;
  *(_QWORD *)(v0 + 1568) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1576) = v97;
  *(_QWORD *)(v0 + 1584) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1592) = v98;
  *(_QWORD *)(v0 + 1600) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 1608) = v99;
  *(_QWORD *)(v0 + 1616) = 0xD000000000000020;
  *(_QWORD *)(v0 + 1624) = 0x800000024335EAC0;
  *(_QWORD *)(v0 + 1632) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 1640) = 0x800000024335EA70;
  if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1)
    swift_once();
  v100 = *(_QWORD *)algn_25728FA88;
  *(_QWORD *)(v0 + 1648) = static LocalIndexClient.keyAttributeItemAppEntityTypeIdentifier;
  *(_QWORD *)(v0 + 1656) = v100;
  v101 = one-time initialization token for keyAItemAppEntityInstanceIdentifier;
  swift_bridgeObjectRetain();
  if (v101 != -1)
    swift_once();
  v102 = *(_QWORD *)algn_25728FA98;
  *(_QWORD *)(v0 + 1664) = static LocalIndexClient.keyAItemAppEntityInstanceIdentifier;
  *(_QWORD *)(v0 + 1672) = v102;
  static LocalIndexClient.fetchAttributes = v0;
  return swift_bridgeObjectRetain();
}

uint64_t *AppEntityIndexClient.fetchAttributes.unsafeMutableAddressor()
{
  if (one-time initialization token for fetchAttributes != -1)
    swift_once();
  return &static AppEntityIndexClient.fetchAttributes;
}

uint64_t static AppEntityIndexClient.fetchAttributes.getter()
{
  if (one-time initialization token for fetchAttributes != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void AppEntityIndexClient.search(request:completion:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  AppEntityIndexClient.matches(for:allowedTypes:maxItemCount:fetchFullEmailContent:completion:)(a1, a2, a3, a4, 0, a5, a6);
}

void AppEntityIndexClient.matches(for:allowedTypes:maxItemCount:fetchFullEmailContent:completion:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void **v7;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  float v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint8_t *v40;
  unint64_t v41;
  float v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  Class v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  Class v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  os_log_type_t v75;
  unint64_t v76;
  uint8_t *v77;
  uint64_t v78;
  __int128 v79;
  id v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  id v85;
  id v86;
  id v87;
  NSObject *v88;
  int v89;
  _BOOL4 v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  NSObject *v95;
  unint64_t v96;
  unint64_t v97;
  double v98;
  double v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  NSObject *v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  _QWORD *v132;
  char v133;
  uint64_t v134;
  id v135;
  id v136;
  uint64_t (*v137)(char *, uint64_t, NSObject *);
  NSObject *v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint8_t *v142;
  uint8_t *v143;
  id v144;
  uint64_t v145;
  uint8_t *v146;
  Class v147;
  os_log_type_t v148;
  uint8_t *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  os_log_type_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint8_t *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint8_t *v172;
  void (*v173)(char *, NSObject *);
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  os_log_type_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD v200[2];
  unint64_t v201;
  char *v202;
  unint64_t *v203;
  unint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  char *v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  char *v225;
  Class isa;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  NSObject *v231;
  uint64_t v232;
  unint64_t v233;
  NSObject *v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  unint64_t v240;
  NSObject *v241;
  uint8_t *v242;
  void (*v243)(uint64_t, char *, NSObject *);
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  double v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;

  v212 = a7;
  v213 = a6;
  v11 = *v7;
  v210 = type metadata accessor for AppEntityItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0_3();
  v14 = OUTLINED_FUNCTION_13_2(v13);
  v217 = type metadata accessor for SearchResult(v14);
  v216 = *(_QWORD *)(v217 - 8);
  MEMORY[0x24BDAC7A8](v217);
  OUTLINED_FUNCTION_71();
  v218 = v15 - v16;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_13_2((uint64_t)v200 - v18);
  v208 = type metadata accessor for IntentFileItem();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0_3();
  v214 = (_QWORD *)v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_71();
  v24 = v22 - v23;
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_13_2((uint64_t)v200 - v26);
  v27 = type metadata accessor for URL();
  isa = v27[-1].isa;
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_71();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v220 = (char *)v200 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v227 = (char *)v200 - v32;
  v33 = *(_QWORD *)(a3 + 16);
  if (!v33)
  {
    if (one-time initialization token for search != -1)
      swift_once();
    v68 = type metadata accessor for Logger();
    __swift_project_value_buffer(v68, (uint64_t)static Logging.search);
    Logger.logObject.getter();
    v69 = OUTLINED_FUNCTION_52_10();
    if (OUTLINED_FUNCTION_21(v69))
    {
      *(_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)() = 0;
      OUTLINED_FUNCTION_7(&dword_24315F000, v70, v71, "allowedTypes is empty. Returning no results.");
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_3_13();
    return;
  }
  v243 = (void (*)(uint64_t, char *, NSObject *))v11;
  v34 = (unint64_t)v7;
  v206 = v31;
  type metadata accessor for NSUserDefaults();
  v35 = static NSUserDefaults.semanticSearchSleepTime.getter();
  if (one-time initialization token for search != -1)
    goto LABEL_86;
LABEL_3:
  v36 = type metadata accessor for Logger();
  v237 = __swift_project_value_buffer(v36, (uint64_t)static Logging.search);
  v37 = Logger.logObject.getter();
  v38 = static os_log_type_t.debug.getter();
  v39 = os_log_type_enabled(v37, v38);
  v207 = v24;
  if (v39)
  {
    v40 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v40 = 134217984;
    v248 = v35;
    OUTLINED_FUNCTION_29_10();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v37, v38, "Semantic search is enabled, loading embedder model and sleeping for %f seconds", v40);
    specialized UnsafeMutablePointer.deallocate()();
  }

  v41 = v34;
  AppEntityIndexClient.prewarm()();
  v42 = v35 * 1000000.0;
  if ((~COERCE_INT(v35 * 1000000.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_88;
  }
  if (v42 <= -1.0)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v42 >= 4295000000.0)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v234 = v27;
  usleep(v42);
  v43 = objc_allocWithZone(MEMORY[0x24BEB0280]);
  swift_bridgeObjectRetain();
  v44 = @nonobjc SPSearchQueryContext.init(search:)((uint64_t)a1, (uint64_t)a2);
  OUTLINED_FUNCTION_20_12((uint64_t)objc_msgSend(v44, sel_setWhyQuery_, 23), sel_setFetchL2Signals_);
  objc_msgSend(v44, sel_setQueryKind_, 11);
  v45 = objc_msgSend(v44, sel_setCurrentTime_, CFAbsoluteTimeGetCurrent());
  v46 = OUTLINED_FUNCTION_50_9((uint64_t)v45, sel_setAllowInternet_);
  v47 = OUTLINED_FUNCTION_20_12((uint64_t)v46, sel_setRetainBackendData_);
  v48 = OUTLINED_FUNCTION_50_9((uint64_t)v47, sel_setEnablePersonalAnswers_);
  v219 = v44;
  OUTLINED_FUNCTION_20_12((uint64_t)v48, sel_setIsAppEntitySearch_);
  v248 = MEMORY[0x24BEE4AF8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  *(double *)&v49 = v248;
  v50 = (uint64_t *)(a3 + 40);
  do
  {
    v52 = *(v50 - 1);
    v51 = *v50;
    v248 = *(double *)&v49;
    v54 = *(_QWORD *)(v49 + 16);
    v53 = *(_QWORD *)(v49 + 24);
    swift_bridgeObjectRetain();
    if (v54 >= v53 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(double *)&v49 = v248;
    }
    v50 += 4;
    *(_QWORD *)(v49 + 16) = v54 + 1;
    v55 = v49 + 16 * v54;
    *(_QWORD *)(v55 + 32) = v52;
    *(_QWORD *)(v55 + 40) = v51;
    --v33;
  }
  while (v33);
  v56 = OUTLINED_FUNCTION_49_10().super.isa;
  swift_release();
  v57 = v219;
  objc_msgSend(v219, sel_setBundleIDs_, v56);

  v58 = static AppEntityIndexClient.filterQueries(for:)(a3);
  v60 = v59;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_24334DB60;
  *(_QWORD *)(v61 + 32) = v58;
  *(_QWORD *)(v61 + 40) = v60;
  OUTLINED_FUNCTION_91_0();
  v62 = OUTLINED_FUNCTION_49_10().super.isa;
  OUTLINED_FUNCTION_36_0();
  objc_msgSend(v57, sel_setFilterQueries_, v62);

  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_9_15();
  v63 = OUTLINED_FUNCTION_6_19();
  v64 = static os_log_type_t.debug.getter();
  v65 = os_log_type_enabled(v63, v64);
  a1 = &loc_24334D000;
  v27 = MEMORY[0x24BEE4AD8];
  if (v65)
  {
    v66 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    v248 = COERCE_DOUBLE(specialized static UnsafeMutablePointer.allocate(capacity:)());
    *(_DWORD *)v66 = 136315138;
    OUTLINED_FUNCTION_91_0();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, (uint64_t *)&v248);
    v245 = v67;
    OUTLINED_FUNCTION_9_15();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v63, v64, "Searching with filter: %s", v66);
    OUTLINED_FUNCTION_46_8();
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_102_0();
  v33 = (uint64_t)&unk_24334E000;
  outlined init with copy of IMSPIMessageProtocol(v34 + 16, (uint64_t)&v248);
  v72 = v250;
  v73 = v251;
  __swift_project_boxed_opaque_existential_1(&v248, v250);
  v41 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v73 + 24))(v219, v72, v73);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
  if (!(v41 >> 62))
  {
    if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_91;
    goto LABEL_21;
  }
LABEL_90:
  OUTLINED_FUNCTION_21_11();
  v195 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_6_1();
  if (!v195)
  {
LABEL_91:
    OUTLINED_FUNCTION_6_1();
    v196 = (void *)OUTLINED_FUNCTION_6_19();
    v197 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21(v197))
    {
      *(_WORD *)specialized static UnsafeMutablePointer.allocate(capacity:)() = 0;
      OUTLINED_FUNCTION_7(&dword_24315F000, v198, v199, "AppEntitySearchClient.findMatches - Returning early. No sections found!");
      specialized UnsafeMutablePointer.deallocate()();
    }

    OUTLINED_FUNCTION_3_13();
    goto LABEL_97;
  }
LABEL_21:
  type metadata accessor for LocalIndexClient();
  static LocalIndexClient.results(for:)(v41);
  OUTLINED_FUNCTION_6_1();
  static LocalIndexClient.searchableItems(for:)();
  v34 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_6_19();
  v75 = OUTLINED_FUNCTION_52_10();
  v76 = v34 >> 62;
  if (os_log_type_enabled((os_log_t)v41, v75))
  {
    v77 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
    *(_DWORD *)v77 = *(_QWORD *)(v33 + 3440);
    if (v76)
    {
      swift_bridgeObjectRetain();
      *(double *)&v78 = COERCE_DOUBLE(_CocoaArrayWrapper.endIndex.getter());
      OUTLINED_FUNCTION_47();
    }
    else
    {
      v78 = *(uint64_t *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    OUTLINED_FUNCTION_47();
    v248 = *(double *)&v78;
    OUTLINED_FUNCTION_29_10();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_29_2(&dword_24315F000, v41, v75, "AppEntitySearchClient.matches found %ld items", v77);
    specialized UnsafeMutablePointer.deallocate()();
  }

  OUTLINED_FUNCTION_102_0();
  if (!v76)
  {
    a2 = *(_QWORD **)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
      goto LABEL_95;
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  a2 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_47();
  if (a2)
  {
LABEL_27:
    v240 = v34 & 0xC000000000000001;
    v238 = &v249;
    v223 = *MEMORY[0x24BDC23A0];
    v222 = *MEMORY[0x24BDC2398];
    v203 = &v246;
    v205 = v224 + 6;
    v228 = MEMORY[0x24BEE4AF8];
    v24 = 4;
    *(_QWORD *)&v79 = a1[122];
    v211 = v79;
    v209 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v79 = 134219010;
    v221 = v79;
    v200[1] = "ocs.iCloudDriveFileProvider";
    v201 = 0x800000024335A930;
    v202 = "ch-3400.85.1\n";
    v204 = 0x800000024335A900;
    v233 = v34;
    v236 = a2;
    while (1)
    {
      a1 = (_QWORD *)(v24 - 4);
      if (v240)
        v80 = (id)MEMORY[0x2494F62E4](v24 - 4, v34);
      else
        v80 = *(id *)(v34 + 8 * v24);
      v81 = v80;
      a3 = v24 - 3;
      if (__OFADD__(a1, 1))
      {
        __break(1u);
LABEL_86:
        swift_once();
        goto LABEL_3;
      }
      outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v80);
      if (!v83)
      {
        v104 = v81;
        v105 = OUTLINED_FUNCTION_6_19();
        v106 = static os_log_type_t.error.getter();
        v33 = v106;
        if (os_log_type_enabled(v105, v106))
        {
          v107 = specialized static UnsafeMutablePointer.allocate(capacity:)();
          v248 = COERCE_DOUBLE(specialized static UnsafeMutablePointer.allocate(capacity:)());
          *(_DWORD *)v107 = v211;
          v108 = objc_msgSend(v104, sel_uniqueIdentifier);
          v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v111 = v110;

          OUTLINED_FUNCTION_43_11();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v109, v111, (uint64_t *)&v248);
          *(_QWORD *)(v107 + 4) = v112;

          OUTLINED_FUNCTION_9_15();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_29_2(&dword_24315F000, v105, (os_log_type_t)v33, "Skipping item with missing bundleID: %s", (uint8_t *)v107);
          swift_arrayDestroy();
          specialized UnsafeMutablePointer.deallocate()();
        }

        goto LABEL_48;
      }
      v84 = v83;
      v239 = v82;
      v243 = (void (*)(uint64_t, char *, NSObject *))(v24 - 3);
      v85 = objc_msgSend(v81, sel_attributeSet);
      v86 = v81;
      swift_bridgeObjectRetain_n();
      v27 = v85;
      v87 = v86;
      v88 = OUTLINED_FUNCTION_6_19();
      v89 = static os_log_type_t.info.getter();
      v90 = os_log_type_enabled(v88, (os_log_type_t)v89);
      v242 = (uint8_t *)v84;
      if (v90)
      {
        v230 = v89;
        v231 = v88;
        v232 = v24;
        v91 = v84;
        v92 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        v229 = specialized static UnsafeMutablePointer.allocate(capacity:)();
        v247 = v229;
        *(_QWORD *)&v248 = v24 - 4;
        *(_DWORD *)v92 = v221;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v92 + 12) = 2080;
        v93 = objc_msgSend(v87, sel_uniqueIdentifier);
        v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v95 = v27;
        v97 = v96;

        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v97, &v247);
        v248 = v98;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        v235 = (uint64_t)v87;
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 22) = 2080;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v239, v91, &v247);
        v248 = v99;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v100 = swift_bridgeObjectRelease_n();
        *(_WORD *)(v92 + 32) = 2080;
        v241 = v95;
        v101 = OUTLINED_FUNCTION_36_10(v100, sel_attributeDictionary);
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_27_11(v102, v103);
        AnyHashable.init<A>(_:)();
        OUTLINED_FUNCTION_24_10();
        swift_bridgeObjectRelease();
        if (v244)
        {
          OUTLINED_FUNCTION_53_10();
        }
        else
        {
          v114 = OUTLINED_FUNCTION_10_14();
          outlined destroy of MobileSMSDocument?(v114, &demangling cache variable for type metadata for Any?);
        }
        outlined destroy of AnyHashable((uint64_t)&v248);
        OUTLINED_FUNCTION_26_0();
        v115 = OUTLINED_FUNCTION_34_7();
        OUTLINED_FUNCTION_41_8(v115, v116);
        OUTLINED_FUNCTION_11_12(v117);
        v118 = v241;

        v119 = OUTLINED_FUNCTION_26_0();
        *(_WORD *)(v92 + 42) = 2080;
        v120 = OUTLINED_FUNCTION_36_10(v119, sel_attributeDictionary);
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_27_11(v121, v122);
        AnyHashable.init<A>(_:)();
        OUTLINED_FUNCTION_24_10();
        swift_bridgeObjectRelease();
        v123 = v231;
        if (v244)
        {
          OUTLINED_FUNCTION_53_10();
        }
        else
        {
          v124 = OUTLINED_FUNCTION_10_14();
          outlined destroy of MobileSMSDocument?(v124, &demangling cache variable for type metadata for Any?);
        }
        outlined destroy of AnyHashable((uint64_t)&v248);
        OUTLINED_FUNCTION_26_0();
        v125 = OUTLINED_FUNCTION_34_7();
        OUTLINED_FUNCTION_41_8(v125, v126);
        OUTLINED_FUNCTION_11_12(v127);
        v128 = v241;

        OUTLINED_FUNCTION_26_0();
        _os_log_impl(&dword_24315F000, v123, (os_log_type_t)v230, "(AppEntitySearchClient) Result Rank %ld: id:%s, bundle:%s, L2:%s, L1:%s", (uint8_t *)v92, 0x34u);
        swift_arrayDestroy();
        specialized UnsafeMutablePointer.deallocate()();
      }

      OUTLINED_FUNCTION_102_0();
      a3 = (uint64_t)v243;
      v113 = v87;
      v130 = OUTLINED_FUNCTION_25_11(v129, sel_uniqueIdentifier);
      *(double *)&v131 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)());
      a2 = v132;

      v248 = *(double *)&v131;
      v249 = a2;
      v245 = 1096110926;
      v246 = 0xE400000000000000;
      v33 = lazy protocol witness table accessor for type String and conformance String();
      lazy protocol witness table accessor for type String and conformance String();
      v133 = BidirectionalCollection<>.starts<A>(with:)();
      v134 = swift_bridgeObjectRelease();
      if ((v133 & 1) == 0)
        break;

      OUTLINED_FUNCTION_39_9();
LABEL_47:
      OUTLINED_FUNCTION_43_11();
LABEL_48:
      ++v24;
      if ((_QWORD *)a3 == a2)
        goto LABEL_96;
    }
    v135 = OUTLINED_FUNCTION_25_11(v134, sel_attributeSet);
    v136 = objc_msgSend(v135, sel_contentURL);

    if (v136)
    {
      a2 = v220;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v137 = (uint64_t (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 4);
      v33 = (uint64_t)v225;
      v138 = v234;
      v137(v225, (uint64_t)a2, v234);
      OUTLINED_FUNCTION_14_9(v33);
      if (__swift_getEnumTagSinglePayload(v33, 1, (uint64_t)v138) != 1)
      {
        v139 = v137(v227, v33, v234);
        v140 = OUTLINED_FUNCTION_25_11(v139, sel_attributeSet);
        v141 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.bundleID.getter(v140);
        if (v142)
        {
          v143 = v142;
          if (v141 == 0xD00000000000002BLL && v142 == (uint8_t *)v204)
          {
LABEL_59:
            OUTLINED_FUNCTION_39_9();
            v242 = v143;
LABEL_60:
            v235 = (uint64_t)v113;
            v241 = v27;
            OUTLINED_FUNCTION_39_9();
            v147 = isa;
            v243 = (void (*)(uint64_t, char *, NSObject *))*((_QWORD *)isa + 2);
            v243(v206, v227, v234);
            OUTLINED_FUNCTION_6_19();
            v148 = OUTLINED_FUNCTION_52_10();
            if (os_log_type_enabled(v138, v148))
            {
              v149 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
              v248 = COERCE_DOUBLE(specialized static UnsafeMutablePointer.allocate(capacity:)());
              *(_DWORD *)v149 = v211;
              v242 = v149 + 4;
              v150 = URL.absoluteString.getter();
              getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v150, v151, (uint64_t *)&v248);
              v245 = v152;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_36_0();
              OUTLINED_FUNCTION_40_5();
              OUTLINED_FUNCTION_29_2(&dword_24315F000, v138, v148, "Found file with contentUrl: %s", v149);
              OUTLINED_FUNCTION_46_8();
              specialized UnsafeMutablePointer.deallocate()();
            }
            v173 = (void (*)(char *, NSObject *))*((_QWORD *)v147 + 1);
            OUTLINED_FUNCTION_40_5();

            v175 = OUTLINED_FUNCTION_36_10(v174, sel_uniqueIdentifier);
            v176 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v178 = v177;

            v180 = OUTLINED_FUNCTION_36_10(v179, sel_attributeSet);
            v181 = objc_msgSend(v180, sel_URL);

            v27 = v241;
            if (v181)
            {
              v182 = v207;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              v183 = 0;
            }
            else
            {
              v183 = 1;
              v182 = v207;
            }
            v184 = (uint64_t)v234;
            __swift_storeEnumTagSinglePayload(v182, v183, 1, (uint64_t)v234);
            v185 = v208;
            a2 = v214;
            v243((uint64_t)v214 + *(int *)(v208 + 24), v227, v184);
            *a2 = v176;
            a2[1] = v178;
            outlined init with take of URL?(v182, (uint64_t)a2 + *(int *)(v185 + 20));
            v186 = v215;
            outlined init with copy of SearchResult((uint64_t)a2, v215, (uint64_t (*)(_QWORD))type metadata accessor for IntentFileItem);
            type metadata accessor for SearchResultItem(0);
            swift_storeEnumTagMultiPayload();
            OUTLINED_FUNCTION_14_10();
            *(_QWORD *)(v186 + v187) = 0;
            if ((OUTLINED_FUNCTION_48_6() & 1) == 0)
            {
              OUTLINED_FUNCTION_5_18();
              OUTLINED_FUNCTION_47_10(v193);
            }
            v34 = v233;
            OUTLINED_FUNCTION_43_11();
            v188 = *(_QWORD *)(v228 + 16);
            v33 = v235;
            if (v188 >= *(_QWORD *)(v228 + 24) >> 1)
            {
              OUTLINED_FUNCTION_30_10();
              OUTLINED_FUNCTION_47_10(v194);
            }
            *(_QWORD *)(v228 + 16) = v188 + 1;
            OUTLINED_FUNCTION_7_19();
            outlined init with take of SearchResult(v215, v189 + v190 * v188, type metadata accessor for SearchResult);

            _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for IntentFileItem);
            v173(v227, v234);
            OUTLINED_FUNCTION_9_15();
            goto LABEL_48;
          }
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          v141 = OUTLINED_FUNCTION_36_0();
          if ((v33 & 1) != 0)
            goto LABEL_60;
        }
        v144 = OUTLINED_FUNCTION_25_11(v141, sel_attributeSet);
        v145 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.bundleID.getter(v144);
        if (v146)
        {
          v143 = v146;
          if (v145 == 0xD000000000000023 && v146 == (uint8_t *)v201)
            goto LABEL_59;
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          OUTLINED_FUNCTION_36_0();
          if ((v33 & 1) != 0)
            goto LABEL_60;
        }
        (*((void (**)(char *, NSObject *))isa + 1))(v227, v234);
        goto LABEL_64;
      }
    }
    else
    {
      v33 = (uint64_t)v225;
      OUTLINED_FUNCTION_15_12((uint64_t)v225);
    }
    outlined destroy of MobileSMSDocument?(v33, &demangling cache variable for type metadata for URL?);
LABEL_64:
    v153 = v113;
    v154 = CSSearchableItem.associatedAppEntityId.getter();
    if (v155)
    {
      a2 = (_QWORD *)v154;
      v33 = v155;
      v153 = v113;
      v156 = CSSearchableItem.associatedAppEntityTypeId.getter();
      v158 = v113;
      if (v157)
      {
        v159 = v156;
        v160 = v157;
        v161 = v224;
        OUTLINED_FUNCTION_15_12((uint64_t)v224 + *(int *)(v210 + 32));
        *v161 = a2;
        v161[1] = v33;
        v162 = v242;
        v161[2] = v239;
        v161[3] = v162;
        v161[4] = v159;
        v161[5] = v160;
        v163 = v205;
        *v205 = 0;
        v163[1] = 0;
        v164 = v218;
        outlined init with copy of SearchResult((uint64_t)v161, v218, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
        type metadata accessor for SearchResultItem(0);
        swift_storeEnumTagMultiPayload();
        OUTLINED_FUNCTION_14_10();
        *(_QWORD *)(v164 + v165) = v158;
        v166 = v158;
        if ((OUTLINED_FUNCTION_48_6() & 1) == 0)
        {
          OUTLINED_FUNCTION_5_18();
          OUTLINED_FUNCTION_47_10(v191);
        }
        v34 = v233;
        OUTLINED_FUNCTION_43_11();
        OUTLINED_FUNCTION_9_15();
        v167 = *(_QWORD *)(v228 + 16);
        if (v167 >= *(_QWORD *)(v228 + 24) >> 1)
        {
          OUTLINED_FUNCTION_30_10();
          OUTLINED_FUNCTION_47_10(v192);
        }
        *(_QWORD *)(v228 + 16) = v167 + 1;
        OUTLINED_FUNCTION_7_19();
        outlined init with take of SearchResult(v218, v168 + v169 * v167, type metadata accessor for SearchResult);

        _s10OmniSearch0B6ResultVWOhTm_1((uint64_t)v224, (uint64_t (*)(_QWORD))type metadata accessor for AppEntityItem);
        a3 = (uint64_t)v243;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_9_15();
    }
    OUTLINED_FUNCTION_39_9();
    v170 = OUTLINED_FUNCTION_6_19();
    v171 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21(v171))
    {
      v172 = (uint8_t *)specialized static UnsafeMutablePointer.allocate(capacity:)();
      *(_WORD *)v172 = 0;
      _os_log_impl(&dword_24315F000, v170, v153, "Item found, but missing required fields for associated AppEntity or IntentFile", v172, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    goto LABEL_47;
  }
LABEL_95:
  v228 = MEMORY[0x24BEE4AF8];
LABEL_96:
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_6_1();
LABEL_97:

}

id SPSearchQueryContext.__allocating_init(search:)(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return @nonobjc SPSearchQueryContext.init(search:)(a1, a2);
}

uint64_t static AppEntityIndexClient.filterQueries(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[2];
  __int128 v13;
  _QWORD v14[2];
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v2 = v15;
    v4 = (_OWORD *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v12[0] = *((_QWORD *)v4 - 2);
      v12[1] = v5;
      v13 = *v4;
      closure #1 in static AppEntityIndexClient.filterQueries(for:)(v12, v14);
      v6 = v14[0];
      v7 = v14[1];
      v15 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      if (v8 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v15;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  v12[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v10 = BidirectionalCollection<>.joined(separator:)();
  OUTLINED_FUNCTION_6_1();
  return v10;
}

void closure #1 in static AppEntityIndexClient.filterQueries(for:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;

  v4 = *a1;
  v3 = (void *)a1[1];
  v5 = (void *)a1[3];
  if (v5)
  {
    v6 = a1[2];
    _StringGuts.grow(_:)(18);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 15677;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v4;
    v9._object = v3;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 539371040;
    v10._object = (void *)0xE400000000000000;
    String.append(_:)(v10);
    if (one-time initialization token for keyAttributeItemAppEntityTypeIdentifier != -1)
      swift_once();
    v11 = static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier;
    v12 = (void *)qword_25728F8B0;
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 15677;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = v6;
    v15._object = v5;
    String.append(_:)(v15);
  }
  else
  {
    v16._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 15677;
    v17._object = (void *)0xE200000000000000;
    String.append(_:)(v17);
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v4;
    v18._object = v3;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
  }
  v19._countAndFlagsBits = 41;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  *a2 = 40;
  a2[1] = 0xE100000000000000;
}

uint64_t AppEntityIndexClient.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t AppEntityIndexClient.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

id @nonobjc SPSearchQueryContext.init(search:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)MEMORY[0x2494F5BB8]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSearchString_, v3);

  return v4;
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.bundleID.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleID);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized AppEntityIndexClient.init(searchAgent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  outlined init with take of SageSearchClient(&v9, a2 + 16);
  return a2;
}

unint64_t lazy protocol witness table accessor for type [String] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [String] and conformance [A];
  if (!lazy protocol witness table cache variable for type [String] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A]);
  }
  return result;
}

uint64_t type metadata accessor for AppEntityIndexClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppEntityIndexClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppEntityIndexClient.__allocating_init(searchAgent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t OUTLINED_FUNCTION_2_16@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 480))();
}

void OUTLINED_FUNCTION_5_18()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
  *(_QWORD *)(v1 - 184) = 7104878;
  *(_QWORD *)(v1 - 176) = 0xE300000000000000;
  return v1 - 216;
}

uint64_t OUTLINED_FUNCTION_11_12(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_14_10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v0 + *(int *)(*(_QWORD *)(v1 - 448) + 24));
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_15_12(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, *(_QWORD *)(v1 - 296));
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return specialized AppEntityIndexClient.init(searchAgent:)(v3, v0, v1, v2);
}

id OUTLINED_FUNCTION_20_12(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 1);
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_23_14(_QWORD *a1, uint64_t *a2)
{
  return static AppEntityIndexClient.keyAttributeItemAppEntityTypeIdentifier.getter(a1, a2);
}

void OUTLINED_FUNCTION_24_10()
{
  uint64_t v0;
  uint64_t v1;

  specialized Dictionary.subscript.getter(v1 - 144, v0);
}

id OUTLINED_FUNCTION_25_11(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_27_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = a1;
  *(_QWORD *)(v2 - 176) = a2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_30_10()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return String.init<A>(describing:)();
}

id OUTLINED_FUNCTION_36_10(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_41_8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 152));
}

uint64_t OUTLINED_FUNCTION_46_8()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_47_10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 344) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

NSArray OUTLINED_FUNCTION_49_10()
{
  return Array._bridgeToObjectiveC()();
}

id OUTLINED_FUNCTION_50_9(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  return static os_log_type_t.debug.getter();
}

_OWORD *OUTLINED_FUNCTION_53_10()
{
  uint64_t v0;

  return outlined init with take of Any((_OWORD *)(v0 - 216), (_OWORD *)(v0 - 184));
}

uint64_t AppEntityIndexRequest.userQuery.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t AppEntityIndexRequest.allowedTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppEntityIndexRequest.targetMatches.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

Swift::String __swiftcall AppEntityIndexRequest.description()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  void *v30;
  Swift::String result;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  v3 = v1;
  v4 = v0;
  v5 = *(_QWORD *)(v2 + 16);
  if (v5)
  {
    v6 = v2;
    v32 = v0;
    v33 = v1;
    v34 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v7 = (void **)(v6 + 56);
    do
    {
      v9 = (uint64_t)*(v7 - 3);
      v8 = *(v7 - 2);
      v10 = (uint64_t)*(v7 - 1);
      v11 = *v7;
      OUTLINED_FUNCTION_116_0();
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = v9;
      v12._object = v8;
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = 0x6D614E6570797420;
      v13._object = (void *)0xEB00000000203A65;
      String.append(_:)(v13);
      if (v11)
        v14 = v10;
      else
        v14 = 1701736302;
      if (v11)
        v15 = v11;
      else
        v15 = (void *)0xE400000000000000;
      OUTLINED_FUNCTION_116_0();
      v16._countAndFlagsBits = v14;
      v16._object = v15;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 62;
      v17._object = (void *)0xE100000000000000;
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v34 + 16);
      if (v18 >= *(_QWORD *)(v34 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v7 += 4;
      *(_QWORD *)(v34 + 16) = v18 + 1;
      v19 = v34 + 16 * v18;
      *(_QWORD *)(v19 + 32) = 0xD00000000000001CLL;
      *(_QWORD *)(v19 + 40) = 0x800000024335CDE0;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v3 = v33;
    v4 = v32;
  }
  _StringGuts.grow(_:)(55);
  v20._countAndFlagsBits = 0x6575512072657355;
  v20._object = (void *)0xEC000000203A7972;
  String.append(_:)(v20);
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = v4;
  v21._object = v3;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._object = (void *)0x800000024335CE00;
  v22._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v22);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v23 = BidirectionalCollection<>.joined(separator:)();
  v25 = v24;
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0xD000000000000013;
  v27._object = (void *)0x800000024335CE20;
  String.append(_:)(v27);
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29 = 0;
  v30 = (void *)0xE000000000000000;
  result._object = v30;
  result._countAndFlagsBits = v29;
  return result;
}

uint64_t AppEntityIndexRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7265755172657375 && a2 == 0xE900000000000079;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x546465776F6C6C61 && a2 == 0xEC00000073657079;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x614D746567726174 && a2 == 0xED00007365686374)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t AppEntityIndexRequest.CodingKeys.stringValue.getter(char a1)
{
  if (!a1)
    return 0x7265755172657375;
  if (a1 == 1)
    return 0x546465776F6C6C61;
  return 0x614D746567726174;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppEntityIndexRequest.CodingKeys()
{
  char *v0;

  return AppEntityIndexRequest.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppEntityIndexRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = AppEntityIndexRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppEntityIndexRequest.CodingKeys()
{
  lazy protocol witness table accessor for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppEntityIndexRequest.CodingKeys()
{
  lazy protocol witness table accessor for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t AppEntityIndexRequest.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v12[1] = a5;
  v13 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppEntityIndexRequest.CodingKeys>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v17 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    v14 = v13;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchEntityTypeIdentifier]);
    lazy protocol witness table accessor for type [SearchEntityTypeIdentifier] and conformance <A> [A](&lazy protocol witness table cache variable for type [SearchEntityTypeIdentifier] and conformance <A> [A], (uint64_t (*)(void))lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier, MEMORY[0x24BEE12A0]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v15 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t AppEntityIndexRequest.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppEntityIndexRequest.CodingKeys>);
  MEMORY[0x24BDAC7A8](v3);
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    OUTLINED_FUNCTION_2_17();
  }
  else
  {
    v4 = KeyedDecodingContainer.decode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchEntityTypeIdentifier]);
    lazy protocol witness table accessor for type [SearchEntityTypeIdentifier] and conformance <A> [A](&lazy protocol witness table cache variable for type [SearchEntityTypeIdentifier] and conformance <A> [A], (uint64_t (*)(void))lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    OUTLINED_FUNCTION_116_0();
    KeyedDecodingContainer.decode(_:forKey:)();
    OUTLINED_FUNCTION_0_20();
    OUTLINED_FUNCTION_2_17();
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_56_0();
  }
  return v4;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppEntityIndexRequest@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = AppEntityIndexRequest.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppEntityIndexRequest(_QWORD *a1)
{
  uint64_t *v1;

  return AppEntityIndexRequest.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t lazy protocol witness table accessor for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityIndexRequest.CodingKeys, &unk_2513CC138);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityIndexRequest.CodingKeys, &unk_2513CC138);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityIndexRequest.CodingKeys, &unk_2513CC138);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for AppEntityIndexRequest.CodingKeys, &unk_2513CC138);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppEntityIndexRequest.CodingKeys and conformance AppEntityIndexRequest.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntityTypeIdentifier, &type metadata for SearchEntityTypeIdentifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier;
  if (!lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for SearchEntityTypeIdentifier, &type metadata for SearchEntityTypeIdentifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntityTypeIdentifier and conformance SearchEntityTypeIdentifier);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SearchEntityTypeIdentifier] and conformance <A> [A](unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchEntityTypeIdentifier]);
    v8 = a2();
    result = MEMORY[0x2494F6CA4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeWithCopy for AppEntityIndexRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppEntityIndexRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for AppEntityIndexRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AppEntityIndexRequest()
{
  return &type metadata for AppEntityIndexRequest;
}

uint64_t storeEnumTagSinglePayload for AppEntityIndexRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24320736C + 4 * byte_2433518A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2432073A0 + 4 * byte_2433518A0[v4]))();
}

uint64_t sub_2432073A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432073A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2432073B0);
  return result;
}

uint64_t sub_2432073BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2432073C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2432073C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2432073D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AppEntityIndexRequest.CodingKeys()
{
  return &unk_2513CC138;
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = OUTLINED_FUNCTION_13_17();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (OUTLINED_FUNCTION_13_17() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void one-time initialization function for allowedList()
{
  static PostProcessingFilter.allowedList = (uint64_t)&outlined read-only object #0 of one-time initialization function for allowedList;
}

uint64_t *PostProcessingFilter.allowedList.unsafeMutableAddressor()
{
  if (one-time initialization token for allowedList != -1)
    swift_once();
  return &static PostProcessingFilter.allowedList;
}

uint64_t static PostProcessingFilter.allowedList.getter()
{
  return static PostProcessingFilter.allowedList.getter(&one-time initialization token for allowedList);
}

uint64_t static PostProcessingFilter.type.== infix(_:_:)()
{
  return 1;
}

void PostProcessingFilter.type.hash(into:)()
{
  Hasher._combine(_:)(0);
}

void PostProcessingFilter.type.hashValue.getter()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_4_19();
  Hasher._finalize()();
  OUTLINED_FUNCTION_107();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PostProcessingFilter.type()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_4_19();
  Hasher._finalize()();
  OUTLINED_FUNCTION_107();
}

uint64_t one-time initialization function for ruleFunctionMap()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:_:_:));
  lazy protocol witness table accessor for type PostProcessingFilter.type and conformance PostProcessingFilter.type();
  result = Dictionary.init(dictionaryLiteral:)();
  static PostProcessingFilter.ruleFunctionMap = result;
  return result;
}

uint64_t applySubStringMatchFiltering(answer:document:supportedDomain:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;

  v8 = type metadata accessor for SearchResultType();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_2();
  v10 = type metadata accessor for SearchResult(0);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_2();
  v13 = v12 - v11;
  v14 = String.count.getter();
  outlined init with copy of SearchResult(a3, v13);
  if (v14 <= 7)
    goto LABEL_8;
  SearchResultItem.type.getter();
  v15 = *(_QWORD *)(a4 + 16);
  if (!v15)
  {
LABEL_7:
    OUTLINED_FUNCTION_1_20();
LABEL_8:
    outlined destroy of SearchResult(v13);
    goto LABEL_9;
  }
  v27._countAndFlagsBits = a1;
  v27._object = a2;
  v16 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v17 = *(_QWORD *)(v9 + 72);
  lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType();
  swift_bridgeObjectRetain();
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    v16 += v17;
    if (!--v15)
    {
      OUTLINED_FUNCTION_96_0();
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_1_20();
  outlined destroy of SearchResult(v13);
  if (one-time initialization token for allowedList != -1)
    swift_once();
  if ((specialized Sequence<>.contains(_:)(v27._countAndFlagsBits, (uint64_t)v27._object, (_QWORD *)static PostProcessingFilter.allowedList) & 1) == 0)
  {
    SearchResultItem.associatedValue.getter();
    v20 = v29;
    v21 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
    v24 = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v25._countAndFlagsBits = v22;
    v25._object = v24;
    v26 = normalizeText(_:)(v25);
    swift_bridgeObjectRelease();
    normalizeText(_:)(v27);
    v28 = v26;
    lazy protocol witness table accessor for type String and conformance String();
    LOBYTE(v22) = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v22 ^ 1;
    return v18 & 1;
  }
LABEL_9:
  v18 = 0;
  return v18 & 1;
}

uint64_t outlined init with copy of SearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type SearchResultType and conformance SearchResultType()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType;
  if (!lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType)
  {
    v1 = type metadata accessor for SearchResultType();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BE6E240], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType;
  if (!lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType)
  {
    v1 = type metadata accessor for SearchResultType();
    result = MEMORY[0x2494F6CA4](MEMORY[0x24BE6E248], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType);
  }
  return result;
}

uint64_t *PostProcessingFilter.ruleFunctionMap.unsafeMutableAddressor()
{
  if (one-time initialization token for ruleFunctionMap != -1)
    swift_once();
  return &static PostProcessingFilter.ruleFunctionMap;
}

uint64_t static PostProcessingFilter.ruleFunctionMap.getter()
{
  return static PostProcessingFilter.allowedList.getter(&one-time initialization token for ruleFunctionMap);
}

uint64_t one-time initialization function for ruleDomainMap()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(PostProcessingFilter.type, [SearchResultType])>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24334DB60;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SearchResultType>);
  v1 = type metadata accessor for SearchResultType();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24334DB60;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v2 + 104))(v4 + v3, *MEMORY[0x24BE6E1D0], v1);
  *(_QWORD *)(inited + 32) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SearchResultType]);
  lazy protocol witness table accessor for type PostProcessingFilter.type and conformance PostProcessingFilter.type();
  result = Dictionary.init(dictionaryLiteral:)();
  static PostProcessingFilter.ruleDomainMap = result;
  return result;
}

uint64_t *PostProcessingFilter.ruleDomainMap.unsafeMutableAddressor()
{
  if (one-time initialization token for ruleDomainMap != -1)
    swift_once();
  return &static PostProcessingFilter.ruleDomainMap;
}

uint64_t static PostProcessingFilter.ruleDomainMap.getter()
{
  return static PostProcessingFilter.allowedList.getter(&one-time initialization token for ruleDomainMap);
}

uint64_t static PostProcessingFilter.allowedList.getter(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t PostProcessingFilter.apply(text:document:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(unsigned __int8 *__return_ptr, _QWORD *, uint64_t, uint64_t *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  unsigned __int8 v21;
  uint64_t v22;
  _QWORD v23[2];

  v4 = *(_QWORD *)(a4 + 16);
  if (!v4)
    return 0;
  v5 = one-time initialization token for ruleFunctionMap;
  swift_bridgeObjectRetain();
  if (v5 != -1)
LABEL_17:
    swift_once();
  for (i = 0; ; ++i)
  {
    v7 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    v8 = static PostProcessingFilter.ruleFunctionMap;
    if (*(_QWORD *)(static PostProcessingFilter.ruleFunctionMap + 16))
    {
      v9 = specialized __RawDictionaryStorage.find<A>(_:)();
      if ((v10 & 1) != 0)
        break;
    }
LABEL_12:
    if (v7 == v4)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v11 = *(void (**)(unsigned __int8 *__return_ptr, _QWORD *, uint64_t, uint64_t *))(*(_QWORD *)(v8 + 56)
                                                                                           + 16 * v9);
  v12 = one-time initialization token for ruleDomainMap;
  swift_retain();
  if (v12 != -1)
    swift_once();
  v13 = static PostProcessingFilter.ruleDomainMap;
  if (!*(_QWORD *)(static PostProcessingFilter.ruleDomainMap + 16)
    || (v14 = specialized __RawDictionaryStorage.find<A>(_:)(), (v15 & 1) == 0))
  {
    swift_release();
    goto LABEL_12;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[0] = a1;
  v23[1] = a2;
  v22 = v17;
  v11(&v21, v23, a3, &v22);
  swift_release();
  OUTLINED_FUNCTION_96_0();
  return v21;
}

Swift::String __swiftcall normalizeText(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  v1 = type metadata accessor for CharacterSet();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_2();
  v5 = v4 - v3;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  String.lowercased()();
  swift_bridgeObjectRelease();
  static CharacterSet.whitespacesAndNewlines.getter();
  v6 = StringProtocol.trimmingCharacters(in:)();
  v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  v9 = v6;
  v10 = v8;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

unint64_t lazy protocol witness table accessor for type PostProcessingFilter.type and conformance PostProcessingFilter.type()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type;
  if (!lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for PostProcessingFilter.type, &type metadata for PostProcessingFilter.type);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type;
  if (!lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type)
  {
    result = MEMORY[0x2494F6CA4](&protocol conformance descriptor for PostProcessingFilter.type, &type metadata for PostProcessingFilter.type);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PostProcessingFilter.type and conformance PostProcessingFilter.type);
  }
  return result;
}

ValueMetadata *type metadata accessor for PostProcessingFilter()
{
  return &type metadata for PostProcessingFilter;
}

uint64_t storeEnumTagSinglePayload for PostProcessingFilter.type(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_243207F04 + 4 * byte_243351A40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_243207F24 + 4 * byte_243351A45[v4]))();
}

_BYTE *sub_243207F04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_243207F24(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243207F2C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243207F34(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243207F3C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243207F44(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PostProcessingFilter.type()
{
  return &type metadata for PostProcessingFilter.type;
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_4_19()
{
  Hasher._combine(_:)(0);
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;

  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v22 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v46 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v23 = *v22;
      v45[0] = *(v22 - 1);
      v45[1] = v23;
      OUTLINED_FUNCTION_35_1();
      closure #1 in FlightReservation.init(id:url:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:answerAttributes:bundleId:mailMessageId:)(v45, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
        a19,
        a20);
      if (v20)
        break;
      swift_bridgeObjectRelease();
      v24 = v42;
      if (v42)
      {
        v25 = v41;
        v26 = v43;
        v27 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_228();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v46 = v31;
        }
        v28 = *(_QWORD *)(v46 + 16);
        if (v28 >= *(_QWORD *)(v46 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v46 = v32;
        }
        v29 = v46;
        *(_QWORD *)(v46 + 16) = v28 + 1;
        v30 = (_QWORD *)(v29 + 32 * v28);
        v30[4] = v25;
        v30[5] = v24;
        v30[6] = v26;
        v30[7] = v27;
      }
      v22 += 2;
      if (!--v21)
      {
        OUTLINED_FUNCTION_226();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_226();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v46;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;

  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v14 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v15 = *v13;
      v35[0] = *(v13 - 1);
      v35[1] = v15;
      OUTLINED_FUNCTION_23_0();
      closure #1 in HotelReservation.init(id:url:hotelReservationId:hotelUnderName:hotelCheckinDateComponents:hotelCheckoutDateComponents:hotelTimeZone:hotelReservationForName:hotelModifyReservationUrl:hotelReservationForTelephone:hotelReservationForAddress:answerAttributes:bundleId:mailMessageId:)(v35, a2, a3, a4, a5, a6, a7, a8, &v31, a9, a10, a11);
      if (v11)
        break;
      swift_bridgeObjectRelease();
      v16 = v32;
      if (v32)
      {
        v17 = v31;
        v18 = v34;
        v36 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_228();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v14 = v21;
        }
        v19 = *(_QWORD *)(v14 + 16);
        if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v14 = v22;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v20 = (_QWORD *)(v14 + 32 * v19);
        v20[4] = v17;
        v20[5] = v16;
        v20[6] = v36;
        v20[7] = v18;
      }
      v13 += 2;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_226();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_226();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v12 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v13 = *v11;
      v34[0] = *(v11 - 1);
      v34[1] = v13;
      swift_bridgeObjectRetain();
      closure #1 in RestaurantReservation.init(id:url:restaurantReservationId:restaurantUnderName:restaurantStartDateComponents:restaurantPartySize:restaurantTimeZone:restaurantReservationForName:restaurantReservationForTelephone:restaurantReservationForAddress:answerAttributes:bundleId:mailMessageId:)(v34, a2, a3, a4, a5, a6, a7, a8, &v30, a9);
      if (v9)
        break;
      OUTLINED_FUNCTION_80_0();
      v14 = v31;
      if (v31)
      {
        v15 = v30;
        v16 = v32;
        v35 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_228();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v12 = v20;
        }
        v17 = *(_QWORD *)(v12 + 16);
        if (v17 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v12 = v21;
        }
        *(_QWORD *)(v12 + 16) = v17 + 1;
        v18 = (_QWORD *)(v12 + 32 * v17);
        v18[4] = v15;
        v18[5] = v14;
        v19 = v35;
        v18[6] = v16;
        v18[7] = v19;
      }
      v11 += 2;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_80_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

__n128 MobileSMSDocument.init(id:chatId:displayName:body:from:to:date:url:contentURL:photoAttachments:dataDetectorResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 *a15)
{
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __int128 v34;

  OUTLINED_FUNCTION_157_0();
  v33 = (__n128)a15[1];
  v34 = *a15;
  v32 = *((_QWORD *)a15 + 4);
  v16 = (int *)type metadata accessor for MobileSMSDocument(0);
  v17 = v15 + v16[14];
  OUTLINED_FUNCTION_173((uint64_t)v16, v18, v19, v20, v21, v22, v23, v24, v27, a11, v29, v30, v31);
  *(_QWORD *)(v15 + 64) = a9;
  *(_QWORD *)(v15 + 72) = a10;
  outlined init with take of Date?(v28, v15 + *(int *)(v25 + 40), &demangling cache variable for type metadata for Date?);
  outlined init with take of Date?(a12, v15 + v16[11], &demangling cache variable for type metadata for URL?);
  outlined init with take of Date?(a13, v15 + v16[12], &demangling cache variable for type metadata for URL?);
  *(_QWORD *)(v15 + v16[13]) = a14;
  result = v33;
  *(_OWORD *)v17 = v34;
  *(__n128 *)(v17 + 16) = v33;
  *(_QWORD *)(v17 + 32) = v32;
  return result;
}

uint64_t type metadata accessor for MobileSMSDocument(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for MobileSMSDocument);
}

__n128 EmailDocument.init(id:mailMessageId:subject:body:authorNames:from:to:cc:date:attachmentNames:attachmentTypes:attachmentPaths:unread:url:dataDetectorResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, __int128 *a19)
{
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  __n128 result;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;

  OUTLINED_FUNCTION_157_0();
  v37 = (__n128)a19[1];
  v38 = *a19;
  v36 = *((_QWORD *)a19 + 4);
  v20 = (int *)type metadata accessor for EmailDocument(0);
  v21 = v19 + v20[18];
  OUTLINED_FUNCTION_173((uint64_t)v20, v22, v23, v24, v25, v26, v27, v28, a9, a10, v33, v34, v35);
  *(_OWORD *)(v19 + 64) = v32;
  *(_QWORD *)(v19 + 80) = a11;
  *(_QWORD *)(v19 + 88) = a12;
  OUTLINED_FUNCTION_78_10();
  v29 = OUTLINED_FUNCTION_296();
  v30(v29, a13);
  *(_QWORD *)(v19 + v20[13]) = a14;
  *(_QWORD *)(v19 + v20[14]) = a15;
  *(_QWORD *)(v19 + v20[15]) = a16;
  *(_BYTE *)(v19 + v20[16]) = a17;
  outlined init with take of Date?(a18, v19 + v20[17], &demangling cache variable for type metadata for URL?);
  result = v37;
  *(_OWORD *)v21 = v38;
  *(__n128 *)(v21 + 16) = v37;
  *(_QWORD *)(v21 + 32) = v36;
  return result;
}

uint64_t type metadata accessor for EmailDocument(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for EmailDocument);
}

uint64_t FlightReservation.flightDesignator.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  uint64_t v9;

  v1 = type metadata accessor for FlightReservation(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 56));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  v4 = (uint64_t *)(v0 + *(int *)(v1 + 40));
  v5 = *v4;
  v6 = (void *)v4[1];
  v9 = v3;
  OUTLINED_FUNCTION_91_0();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_121();
  return v9;
}

uint64_t type metadata accessor for FlightReservation(uint64_t a1)
{
  return type metadata accessor for SearchAppEntity(a1, (uint64_t *)&type metadata singleton initialization cache for FlightReservation);
}

void FlightReservation.resolvedFlightJSON.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_74_10() + 120));
  swift_bridgeObjectRelease();
  *v3 = v2;
  v3[1] = v0;
  FlightReservation.resolvedFlightJSON.didset();
}

void FlightReservation.departureDate.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_255();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_140();
  OUTLINED_FUNCTION_125_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_70();
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
  OUTLINED_FUNCTION_265();

  v7 = type metadata accessor for FlightReservation(0);
  OUTLINED_FUNCTION_213(*(int *)(v7 + 68));
  OUTLINED_FUNCTION_22_2(v0, 1, v3);
  if (v8)
  {
    Calendar.timeZone.getter();
    outlined destroy of MobileSMSDocument?(v0, &demangling cache variable for type metadata for TimeZone?);
  }
  else
  {
    OUTLINED_FUNCTION_186();
  }
  Calendar.timeZone.setter();
  OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_43_0();
}

const char *FlightReservation.kAnswerFlightNumber.unsafeMutableAddressor()
{
  return "flightNumber";
}

void *FlightReservation.kAnswerFlightArrivalAirportName.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightArrivalAirportName;
}

void *FlightReservation.kAnswerFlightArrivalAirportCode.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightArrivalAirportCode;
}

void *FlightReservation.kAnswerFlightArrivalDateString.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightArrivalDateString;
}

void *FlightReservation.kAnswerFlightArrivalTerminal.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightArrivalTerminal;
}

void *FlightReservation.kAnswerFlightDepartureTerminal.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightDepartureTerminal;
}

void *FlightReservation.kAnswerFlightDepartureDateString.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightDepartureDateString;
}

void *FlightReservation.kAnswerFlightDepartureAirportCode.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightDepartureAirportCode;
}

void *FlightReservation.kAnswerFlightDepartureAirportName.unsafeMutableAddressor()
{
  return &static FlightReservation.kAnswerFlightDepartureAirportName;
}

uint64_t FlightReservation.metadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_18_2();
  v2 = v0;
  OUTLINED_FUNCTION_255();
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_250();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, String?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_243351AE0;
  strcpy((char *)(inited + 32), "flightNumber");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v6 = (int *)OUTLINED_FUNCTION_104_3();
  v7 = (_QWORD *)(v0 + v6[10]);
  v8 = v7[1];
  *(_QWORD *)(inited + 48) = *v7;
  *(_QWORD *)(inited + 56) = v8;
  OUTLINED_FUNCTION_247();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  outlined init with copy of TimeZone?(v0 + *(int *)(v11 + 44), v0, &demangling cache variable for type metadata for URL?);
  v12 = OUTLINED_FUNCTION_5_2();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v12);
  OUTLINED_FUNCTION_117();
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of MobileSMSDocument?(v0, &demangling cache variable for type metadata for URL?);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v14 = URL.absoluteString.getter();
    v15 = v16;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0, v12);
  }
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 88) = v15;
  strcpy((char *)(inited + 96), "bookingInfoUrl");
  *(_BYTE *)(inited + 111) = -18;
  outlined init with copy of TimeZone?(v0 + v6[12], v1, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_22_2(v1, 1, v12);
  if (v17)
  {
    outlined destroy of MobileSMSDocument?(v1, &demangling cache variable for type metadata for URL?);
    v18 = 0;
    v20 = 0;
  }
  else
  {
    v18 = URL.absoluteString.getter();
    v20 = v19;
    OUTLINED_FUNCTION_52_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8));
  }
  *(_QWORD *)(inited + 112) = v18;
  *(_QWORD *)(inited + 120) = v20;
  strcpy((char *)(inited + 128), "flightCarrier");
  *(_WORD *)(inited + 142) = -4864;
  OUTLINED_FUNCTION_312();
  *(_QWORD *)(inited + 144) = v22;
  *(_QWORD *)(inited + 152) = v21;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 160) = v24;
  *(_QWORD *)(inited + 168) = v23;
  OUTLINED_FUNCTION_312();
  *(_QWORD *)(inited + 176) = v26;
  *(_QWORD *)(inited + 184) = v25;
  OUTLINED_FUNCTION_247();
  *(_QWORD *)(inited + 192) = v27;
  *(_QWORD *)(inited + 200) = v28;
  OUTLINED_FUNCTION_312();
  *(_QWORD *)(inited + 208) = v30;
  *(_QWORD *)(inited + 216) = v29;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 224) = v32;
  *(_QWORD *)(inited + 232) = v31;
  OUTLINED_FUNCTION_312();
  *(_QWORD *)(inited + 240) = v34;
  *(_QWORD *)(inited + 248) = v33;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 256) = 0xD000000000000018;
  *(_QWORD *)(inited + 264) = v35;
  v36 = (_QWORD *)(v2 + v6[19]);
  v37 = v36[1];
  *(_QWORD *)(inited + 272) = *v36;
  *(_QWORD *)(inited + 280) = v37;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 288) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 296) = v38;
  v39 = (_QWORD *)(v2 + v6[20]);
  v40 = v39[1];
  *(_QWORD *)(inited + 304) = *v39;
  *(_QWORD *)(inited + 312) = v40;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 320) = v42;
  *(_QWORD *)(inited + 328) = v41;
  v43 = (_QWORD *)(v2 + v6[21]);
  v44 = v43[1];
  *(_QWORD *)(inited + 336) = *v43;
  *(_QWORD *)(inited + 344) = v44;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 352) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 360) = v45;
  v46 = (_QWORD *)(v2 + v6[22]);
  v47 = v46[1];
  *(_QWORD *)(inited + 368) = *v46;
  *(_QWORD *)(inited + 376) = v47;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 384) = v49;
  *(_QWORD *)(inited + 392) = v48;
  v50 = (_QWORD *)(v2 + v6[23]);
  v51 = v50[1];
  *(_QWORD *)(inited + 400) = *v50;
  *(_QWORD *)(inited + 408) = v51;
  OUTLINED_FUNCTION_247();
  *(_QWORD *)(inited + 416) = v52;
  *(_QWORD *)(inited + 424) = v53;
  v54 = *(_QWORD *)(v2 + v6[24]);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_76_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_115();
  v55 = MEMORY[0x24BEE0D00];
  v56 = MEMORY[0x2494F5E4C](v54, MEMORY[0x24BEE0D00]);
  v58 = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 432) = v56;
  *(_QWORD *)(inited + 440) = v58;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 448) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 456) = v59;
  v60 = OUTLINED_FUNCTION_115();
  v61 = MEMORY[0x2494F5E4C](v60, v55);
  v63 = v62;
  OUTLINED_FUNCTION_96_0();
  *(_QWORD *)(inited + 464) = v61;
  *(_QWORD *)(inited + 472) = v63;
  OUTLINED_FUNCTION_247();
  *(_QWORD *)(inited + 480) = v64;
  *(_QWORD *)(inited + 488) = v65;
  v66 = (_QWORD *)(v2 + v6[26]);
  v67 = v66[1];
  *(_QWORD *)(inited + 496) = *v66;
  *(_QWORD *)(inited + 504) = v67;
  *(_QWORD *)(inited + 512) = 0xD000000000000017;
  OUTLINED_FUNCTION_132_0();
  *(_QWORD *)(inited + 520) = v68;
  v69 = (_QWORD *)(v2 + v6[27]);
  v70 = v69[1];
  *(_QWORD *)(inited + 528) = *v69;
  *(_QWORD *)(inited + 536) = v70;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_115();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v71 = Dictionary.init(dictionaryLiteral:)();
  v72 = specialized Dictionary.compactMapValues<A>(_:)(v71);
  OUTLINED_FUNCTION_36_0();
  return v72;
}

void FlightReservation.init(id:url:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:answerAttributes:bundleId:mailMessageId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  OUTLINED_FUNCTION_18_2();
  v68 = v49;
  v69 = v48;
  v70 = v51;
  v71 = v50;
  v74 = v52;
  v75 = v53;
  v67 = v54;
  v73 = v55;
  v72 = v56;
  v66 = dateString(fromDateComponents:timezone:)();
  v58 = v57;
  v59 = dateString(fromDateComponents:timezone:)();
  v64 = v60;
  v65 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_35_1();
  v61 = swift_bridgeObjectRetain();
  v62 = specialized Sequence.compactMap<A>(_:)(a44, v66, v58, v65, v64, a22, a23, v75, v74, a36, a37, a32, a33, a34, a35, a39, a40, v61, a42,
          a43);
  specialized Dictionary.init<A>(uniqueKeysWithValues:)(v62);
  FlightReservation.init(id:url:answers:answerAttributes:bundleId:mailMessageId:flightNumber:flightCheckInUrl:flightBookingInfoUrl:flightCarrier:flightCarrierCode:flightDepartureDateComponents:flightArrivalDateComponents:flightDepartureTimeZone:flightArrivalTimeZone:flightArrivalAirportCode:flightDepartureAirportCode:flightArrivalAirportName:flightDepartureAirportName:flightConfirmationNumber:flightPassengerNames:flightPassengerSeatNumbers:flightArrivalTerminal:flightDepartureTerminal:flightDepartureDateString:flightArrivalDateString:resolvedFlightJSON:)(v71, v72, v73, v63, a44, a47, v67, a48, v75, (uint64_t)v74, v70, v69, v68, a21, a22, (uint64_t)a23, a24, a25, a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    v66,
    v58,
    v65,
    v64);
  OUTLINED_FUNCTION_43_0();
}

void EmailDocument.mailMessageId.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

uint64_t EmailDocument.authorNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmailDocument.from.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmailDocument.to.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmailDocument.cc.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmailDocument.date.getter()
{
  return EmailDocument.date.getter(type metadata accessor for EmailDocument);
}

uint64_t EmailDocument.attachmentNames.getter()
{
  return EmailDocument.attachmentNames.getter(type metadata accessor for EmailDocument);
}

uint64_t EmailDocument.attachmentTypes.getter()
{
  return EmailDocument.attachmentTypes.getter(type metadata accessor for EmailDocument);
}

uint64_t EmailDocument.attachmentPaths.getter()
{
  return EmailDocument.attachmentPaths.getter(type metadata accessor for EmailDocument);
}

uint64_t EmailDocument.unread.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EmailDocument(0) + 64));
}

void EmailDocument.url.getter()
{
  EmailDocument.url.getter(type metadata accessor for EmailDocument);
}

uint64_t EmailDocument.dataDetectorResults.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_83();
  v1 = type metadata accessor for EmailDocument(v0);
  v2 = OUTLINED_FUNCTION_164(*(int *)(v1 + 72));
  return OUTLINED_FUNCTION_205(v2);
}

void EmailDocument.dataDetectorResults.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __int128 v11;

  v0 = OUTLINED_FUNCTION_237();
  v1 = type metadata accessor for EmailDocument(v0);
  v2 = OUTLINED_FUNCTION_201(*(int *)(v1 + 72));
  OUTLINED_FUNCTION_298(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_56_1();
}

uint64_t (*EmailDocument.dataDetectorResults.modify())()
{
  type metadata accessor for EmailDocument(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t EmailDocument.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  char v19;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7373654D6C69616DLL && a2 == 0xED00006449656761;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 2036625250 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x614E726F68747561 && a2 == 0xEB0000000073656DLL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1836020326 && a2 == 0xE400000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 28532 && a2 == 0xE200000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 25443 && a2 == 0xE200000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 1702125924 && a2 == 0xE400000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x656D686361747461 && a2 == 0xEF73656D614E746ELL;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x656D686361747461 && a2 == 0xEF7365707954746ELL;
                      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x656D686361747461 && a2 == 0xEF7368746150746ELL;
                        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x646165726E75 && a2 == 0xE600000000000000;
                          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            v18 = a1 == 7107189 && a2 == 0xE300000000000000;
                            if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else if (a1 == 0xD000000000000013 && a2 == 0x800000024335D0F0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
                              swift_bridgeObjectRelease();
                              if ((v19 & 1) != 0)
                                return 14;
                              else
                                return 15;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t EmailDocument.CodingKeys.init(intValue:)()
{
  return 15;
}

uint64_t EmailDocument.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2432098EC + 4 * byte_243351B00[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2432098EC()
{
  return 0x7373654D6C69616DLL;
}

uint64_t sub_243209910()
{
  return 0x7463656A627573;
}

uint64_t sub_243209928()
{
  return 2036625250;
}

uint64_t sub_243209938()
{
  return 0x614E726F68747561;
}

uint64_t sub_243209958()
{
  return 1836020326;
}

uint64_t sub_243209968()
{
  return 28532;
}

uint64_t sub_243209970()
{
  return 25443;
}

uint64_t sub_243209978()
{
  return 1702125924;
}

uint64_t sub_243209988()
{
  return 0x656D686361747461;
}

uint64_t sub_2432099CC()
{
  return 0x646165726E75;
}

uint64_t sub_2432099E0()
{
  return 7107189;
}

unint64_t sub_2432099F0()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance EmailDocument.CodingKeys()
{
  unsigned __int8 *v0;

  return EmailDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance EmailDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = EmailDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance EmailDocument.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EmailDocument.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmailDocument.CodingKeys()
{
  lazy protocol witness table accessor for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance EmailDocument.CodingKeys()
{
  lazy protocol witness table accessor for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void EmailDocument.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<EmailDocument.CodingKeys>);
  OUTLINED_FUNCTION_51_8();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_11();
  lazy protocol witness table accessor for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys();
  OUTLINED_FUNCTION_22_12();
  LOBYTE(v11) = 0;
  OUTLINED_FUNCTION_33_8();
  if (!v0)
  {
    LOBYTE(v11) = 1;
    OUTLINED_FUNCTION_33_8();
    LOBYTE(v11) = 2;
    OUTLINED_FUNCTION_3_14();
    LOBYTE(v11) = 3;
    OUTLINED_FUNCTION_3_14();
    *(_QWORD *)&v11 = v1[8];
    OUTLINED_FUNCTION_291();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_4_20();
    *(_QWORD *)&v11 = v1[9];
    OUTLINED_FUNCTION_4_20();
    *(_QWORD *)&v11 = v1[10];
    OUTLINED_FUNCTION_4_20();
    *(_QWORD *)&v11 = v1[11];
    OUTLINED_FUNCTION_4_20();
    v10 = (int *)type metadata accessor for EmailDocument(0);
    LOBYTE(v11) = 8;
    OUTLINED_FUNCTION_78_10();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_283();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_279(v10[13]);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_278(v10[14]);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_278(v10[15]);
    OUTLINED_FUNCTION_4_20();
    LOBYTE(v11) = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 13;
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_283();
    OUTLINED_FUNCTION_27_12();
    v6 = (char *)v1 + v10[18];
    v7 = *((_QWORD *)v6 + 4);
    v8 = *((_OWORD *)v6 + 1);
    v11 = *(_OWORD *)v6;
    v12 = v8;
    v13 = v7;
    lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
    OUTLINED_FUNCTION_27_12();
  }
  OUTLINED_FUNCTION_71_8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void EmailDocument.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  OUTLINED_FUNCTION_65_7();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_78_10();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_59_5();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<EmailDocument.CodingKeys>);
  v11 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v12 = OUTLINED_FUNCTION_93_5();
  type metadata accessor for EmailDocument(v12);
  OUTLINED_FUNCTION_15();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = OUTLINED_FUNCTION_190(v14, v15, v35);
  OUTLINED_FUNCTION_212(*(int *)(v16 + 72));
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type EmailDocument.CodingKeys and conformance EmailDocument.CodingKeys();
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_180();
  if (v0)
  {
    v44 = v0;
    v18 = (uint64_t)v45;
    __swift_destroy_boxed_opaque_existential_1(v42);
    v19 = 0;
    LODWORD(v42) = 0;
    LODWORD(v40) = 0;
    LODWORD(v41) = 0;
    v39 = 0;
    v20 = v46;
  }
  else
  {
    v35 = v5;
    v36 = v8;
    LOBYTE(v47) = 0;
    v17 = KeyedDecodingContainer.decode(_:forKey:)();
    v21 = v45;
    OUTLINED_FUNCTION_169(v17, v22);
    v23 = KeyedDecodingContainer.decode(_:forKey:)();
    OUTLINED_FUNCTION_174(v23, v24);
    *((_QWORD *)v21 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((_QWORD *)v21 + 5) = v25;
    LOBYTE(v47) = 3;
    *((_QWORD *)v21 + 6) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((_QWORD *)v21 + 7) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_291();
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    v28 = v27;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((_QWORD *)v21 + 8) = v47;
    OUTLINED_FUNCTION_130_0(5);
    *((_QWORD *)v21 + 9) = v47;
    OUTLINED_FUNCTION_130_0(6);
    *((_QWORD *)v21 + 10) = v47;
    OUTLINED_FUNCTION_194(7);
    *(_QWORD *)&v41 = v28;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((_QWORD *)v21 + 11) = v47;
    LOBYTE(v47) = 8;
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_222();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(&v21[*(int *)(v46 + 48)], v1, v38);
    OUTLINED_FUNCTION_194(9);
    OUTLINED_FUNCTION_76_7();
    v44 = 0;
    *(_QWORD *)&v45[*(int *)(v46 + 52)] = v47;
    OUTLINED_FUNCTION_113_3(10);
    v44 = 0;
    *(_QWORD *)&v45[*(int *)(v46 + 56)] = v47;
    OUTLINED_FUNCTION_113_3(11);
    LODWORD(v41) = 1;
    v44 = 0;
    *(_QWORD *)&v45[*(int *)(v46 + 60)] = v47;
    LOBYTE(v47) = 12;
    v29 = v44;
    v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v44 = v29;
    if (!v29)
    {
      v45[*(int *)(v46 + 64)] = v30;
      OUTLINED_FUNCTION_5_2();
      LOBYTE(v47) = 13;
      lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
      OUTLINED_FUNCTION_222();
      v31 = v44;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      v44 = v31;
      if (!v31)
      {
        outlined init with take of Date?((uint64_t)v36, (uint64_t)&v45[*(int *)(v46 + 68)], &demangling cache variable for type metadata for URL?);
        lazy protocol witness table accessor for type DataDetectorResults and conformance DataDetectorResults();
        OUTLINED_FUNCTION_171();
        v44 = 0;
        OUTLINED_FUNCTION_31_13(*(uint64_t (**)(_QWORD, _QWORD))(v11 + 8));
        v46 = v47;
        v41 = v48;
        v32 = v49;
        v33 = v43;
        outlined consume of DataDetectorResults?(*v43);
        v34 = v41;
        *(_OWORD *)v33 = v46;
        *((_OWORD *)v33 + 1) = v34;
        v33[4] = v32;
        OUTLINED_FUNCTION_77_6((uint64_t)v45, v35);
        OUTLINED_FUNCTION_36_11(v42);
        goto LABEL_10;
      }
    }
    OUTLINED_FUNCTION_31_13(*(uint64_t (**)(_QWORD, _QWORD))(v11 + 8));
    LODWORD(v40) = 0;
    __swift_destroy_boxed_opaque_existential_1(v42);
    LODWORD(v42) = 1;
    v19 = 1;
    v39 = 1;
    v18 = (uint64_t)v45;
    OUTLINED_FUNCTION_115_2();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_309();
    OUTLINED_FUNCTION_313();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v46;
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
    {
      OUTLINED_FUNCTION_40(v37);
      goto LABEL_13;
    }
  }
  if (!v19)
  {
    if (!v39)
      goto LABEL_14;
LABEL_6:
    OUTLINED_FUNCTION_59_9();
    if ((v41 & 1) != 0)
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_13:
  OUTLINED_FUNCTION_59_9();
  if ((v39 & 1) != 0)
    goto LABEL_6;
LABEL_14:
  if ((_DWORD)v41)
  {
LABEL_15:
    OUTLINED_FUNCTION_59_9();
    if ((v40 & 1) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_7:
  if ((_DWORD)v40)
LABEL_8:
    outlined destroy of MobileSMSDocument?(v18 + *(int *)(v20 + 68), &demangling cache variable for type metadata for URL?);
LABEL_9:
  OUTLINED_FUNCTION_123_2();
LABEL_10:
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance EmailDocument()
{
  EmailDocument.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance EmailDocument()
{
  EmailDocument.encode(to:)();
}

void MobileSMSDocument.date.getter()
{
  MobileSMSDocument.date.getter(type metadata accessor for MobileSMSDocument);
}

void MobileSMSDocument.url.getter()
{
  MobileSMSDocument.url.getter(type metadata accessor for MobileSMSDocument);
}

void MobileSMSDocument.contentURL.getter()
{
  MobileSMSDocument.contentURL.getter(type metadata accessor for MobileSMSDocument);
}

uint64_t MobileSMSDocument.photoAttachments.getter()
{
  return EmailDocument.attachmentNames.getter(type metadata accessor for MobileSMSDocument);
}

uint64_t EmailDocument.attachmentNames.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_24_11(a1);
  return swift_bridgeObjectRetain();
}

uint64_t MobileSMSDocument.dataDetectorResults.getter()
{
  return MobileSMSDocument.dataDetectorResults.getter(type metadata accessor for MobileSMSDocument);
}

void MobileSMSDocument.dataDetectorResults.setter()
{
  MobileSMSDocument.dataDetectorResults.setter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;

  v0 = OUTLINED_FUNCTION_237();
  v2 = v1(v0);
  v3 = OUTLINED_FUNCTION_201(*(int *)(v2 + 56));
  OUTLINED_FUNCTION_298(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_56_1();
}

uint64_t (*MobileSMSDocument.dataDetectorResults.modify())()
{
  type metadata accessor for MobileSMSDocument(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

uint64_t MobileSMSDocument.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v14;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x644974616863 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 2036625250 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 1836020326 && a2 == 0xE400000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 28532 && a2 == 0xE200000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 1702125924 && a2 == 0xE400000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 7107189 && a2 == 0xE300000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x55746E65746E6F63 && a2 == 0xEA00000000004C52;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else if (a1 == 0xD000000000000010 && a2 == 0x800000024335D110
                         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0xD000000000000013 && a2 == 0x800000024335D0F0)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if ((v14 & 1) != 0)
                      return 10;
                    else
                      return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t MobileSMSDocument.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24320A964 + 4 * byte_243351B0F[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_24320A964()
{
  return 0x644974616863;
}

uint64_t sub_24320A978()
{
  return 0x4E79616C70736964;
}

uint64_t sub_24320A998()
{
  return 2036625250;
}

uint64_t sub_24320A9A8()
{
  return 1836020326;
}

uint64_t sub_24320A9B8()
{
  return 28532;
}

uint64_t sub_24320A9C0()
{
  return 1702125924;
}

uint64_t sub_24320A9D0()
{
  return 7107189;
}

unint64_t sub_24320A9E0()
{
  return 0xD000000000000010;
}

unint64_t sub_24320A9FC()
{
  return 0xD000000000000013;
}

uint64_t sub_24320AA1C()
{
  return 0x55746E65746E6F63;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MobileSMSDocument.CodingKeys()
{
  unsigned __int8 *v0;

  return MobileSMSDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MobileSMSDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = MobileSMSDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MobileSMSDocument.CodingKeys()
{
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MobileSMSDocument.CodingKeys()
{
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void MobileSMSDocument.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MobileSMSDocument.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_11();
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  OUTLINED_FUNCTION_22_12();
  LOBYTE(v7) = 0;
  OUTLINED_FUNCTION_33_8();
  if (!v0)
  {
    LOBYTE(v7) = 1;
    OUTLINED_FUNCTION_3_14();
    LOBYTE(v7) = 2;
    OUTLINED_FUNCTION_3_14();
    LOBYTE(v7) = 3;
    OUTLINED_FUNCTION_3_14();
    v7 = *(_QWORD *)(v1 + 64);
    OUTLINED_FUNCTION_291();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_4_20();
    v7 = *(_QWORD *)(v1 + 72);
    OUTLINED_FUNCTION_4_20();
    v6 = type metadata accessor for MobileSMSDocument(0);
    LOBYTE(v7) = 6;
    OUTLINED_FUNCTION_78_10();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_27_12();
    LOBYTE(v7) = 7;
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_27_12();
    LOBYTE(v7) = 8;
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_279(*(int *)(v6 + 52));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Photo]);
    lazy protocol witness table accessor for type [Photo] and conformance <A> [A]();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_111_2();
    OUTLINED_FUNCTION_27_12();
  }
  OUTLINED_FUNCTION_71_8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void MobileSMSDocument.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  int v23;
  int v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD *v46;
  char *v47;
  __int128 v48;
  uint64_t *v49;
  uint64_t v50;
  __int128 v51;

  OUTLINED_FUNCTION_65_7();
  v2 = v0;
  v4 = v3;
  v42 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_78_4();
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MobileSMSDocument.CodingKeys>);
  OUTLINED_FUNCTION_220();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_93_5();
  type metadata accessor for MobileSMSDocument(v12);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_128_1();
  v15 = *(int *)(v14 + 56);
  v49 = v16;
  v17 = (char *)v16 + v15;
  *((_QWORD *)v17 + 4) = 0;
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v47 = v17;
  *(_QWORD *)&v48 = v14;
  v18 = v4[3];
  v46 = v4;
  __swift_project_boxed_opaque_existential_1(v4, v18);
  lazy protocol witness table accessor for type MobileSMSDocument.CodingKeys and conformance MobileSMSDocument.CodingKeys();
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_274();
  if (v0)
  {
    v50 = v0;
    v21 = 1024;
    v22 = v49;
  }
  else
  {
    v19 = v42;
    LOBYTE(v51) = 0;
    v2 = v44;
    v20 = KeyedDecodingContainer.decode(_:forKey:)();
    v22 = v49;
    *v49 = v20;
    v22[1] = v27;
    LODWORD(v18) = v1;
    v22[2] = OUTLINED_FUNCTION_156(1);
    v22[3] = v28;
    v22[4] = OUTLINED_FUNCTION_156(2);
    v22[5] = v29;
    v30 = OUTLINED_FUNCTION_156(3);
    v50 = 0;
    v22[6] = v30;
    v22[7] = v31;
    *(_QWORD *)&v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_291();
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_244();
    v41 = v32;
    v33 = v50;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    if (!v33)
    {
      v22[8] = v51;
      OUTLINED_FUNCTION_244();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      v22[9] = v51;
      type metadata accessor for Date();
      LOBYTE(v51) = 6;
      lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      OUTLINED_FUNCTION_222();
      v34 = OUTLINED_FUNCTION_99_4();
      OUTLINED_FUNCTION_276(v34, (uint64_t)v49 + *(int *)(v48 + 40), &demangling cache variable for type metadata for Date?);
      v2 = OUTLINED_FUNCTION_5_2();
      LOBYTE(v51) = 7;
      lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
      v35 = OUTLINED_FUNCTION_99_4();
      LODWORD(v45) = 1;
      v36 = v49;
      OUTLINED_FUNCTION_263(v35, (uint64_t)v49 + *(int *)(v48 + 44), &demangling cache variable for type metadata for URL?);
      LOBYTE(v51) = 8;
      LODWORD(v18) = 0;
      v37 = OUTLINED_FUNCTION_99_4();
      OUTLINED_FUNCTION_183(v37, (uint64_t)v36 + *(int *)(v48 + 48), &demangling cache variable for type metadata for URL?);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Photo]);
      lazy protocol witness table accessor for type [Photo] and conformance <A> [A]();
      OUTLINED_FUNCTION_76_7();
      v50 = 0;
      *(uint64_t *)((char *)v49 + *(int *)(v48 + 52)) = v51;
      OUTLINED_FUNCTION_275();
      v26 = v43;
      v39 = v50;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      v50 = v39;
      if (!v39)
      {
        OUTLINED_FUNCTION_31_13(*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8));
        v48 = v51;
        OUTLINED_FUNCTION_131_0();
        v40 = v45;
        *(_OWORD *)v38 = v48;
        *(_OWORD *)(v38 + 16) = v40;
        *(_QWORD *)(v38 + 32) = v26;
        OUTLINED_FUNCTION_77_6((uint64_t)v49, v19);
        OUTLINED_FUNCTION_36_11((uint64_t)v46);
        goto LABEL_27;
      }
      OUTLINED_FUNCTION_31_13(*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8));
      v23 = 1;
      LODWORD(v44) = 1;
      v22 = v49;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      OUTLINED_FUNCTION_229();
      v24 = 1;
      goto LABEL_16;
    }
    v50 = v33;
    OUTLINED_FUNCTION_72_6();
    v21 = 1039;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  OUTLINED_FUNCTION_273();
  if ((v21 & 1) == 0)
  {
    LODWORD(v44) = 0;
    v23 = 0;
    LODWORD(v45) = 0;
    v24 = 0;
    if ((v21 & 2) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
  v24 = 0;
  LODWORD(v45) = 0;
  v23 = 0;
  LODWORD(v44) = 0;
  LODWORD(v26) = (v21 >> 1) & 1;
LABEL_16:
  OUTLINED_FUNCTION_115_2();
  if ((v26 & 1) == 0)
  {
LABEL_6:
    if ((_DWORD)v1)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  OUTLINED_FUNCTION_143_0();
  if ((v1 & 1) != 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_158();
    if ((v18 & 1) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  if (!(_DWORD)v18)
  {
LABEL_8:
    if (v2)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  OUTLINED_FUNCTION_309();
  if ((v2 & 1) != 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_313();
    v25 = (int *)v48;
    if ((v9 & 1) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  v25 = (int *)v48;
  if (!(_DWORD)v9)
  {
LABEL_10:
    if (v24)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
  {
LABEL_11:
    outlined destroy of MobileSMSDocument?((uint64_t)v22 + v25[10], &demangling cache variable for type metadata for Date?);
    if ((v45 & 1) == 0)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  if (!(_DWORD)v45)
  {
LABEL_12:
    if (v23)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  outlined destroy of MobileSMSDocument?((uint64_t)v22 + v25[11], &demangling cache variable for type metadata for URL?);
  if ((v23 & 1) != 0)
  {
LABEL_13:
    outlined destroy of MobileSMSDocument?((uint64_t)v22 + v25[12], &demangling cache variable for type metadata for URL?);
    if ((v44 & 1) == 0)
      goto LABEL_26;
    goto LABEL_25;
  }
LABEL_24:
  if ((_DWORD)v44)
LABEL_25:
    OUTLINED_FUNCTION_59_9();
LABEL_26:
  OUTLINED_FUNCTION_123_2();
LABEL_27:
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance MobileSMSDocument()
{
  MobileSMSDocument.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance MobileSMSDocument()
{
  MobileSMSDocument.encode(to:)();
}

void CalendarEvent.startDate.getter()
{
  CalendarEvent.startDate.getter(type metadata accessor for CalendarEvent);
}

void CalendarEvent.endDate.getter()
{
  CalendarEvent.endDate.getter(type metadata accessor for CalendarEvent);
}

void CalendarEvent.locationName.getter()
{
  CalendarEvent.locationName.getter(type metadata accessor for CalendarEvent);
}

uint64_t CalendarEvent.organizerNames.getter()
{
  OUTLINED_FUNCTION_246();
  return swift_bridgeObjectRetain();
}

uint64_t CalendarEvent.participantNames.getter()
{
  OUTLINED_FUNCTION_246();
  return swift_bridgeObjectRetain();
}

void CalendarEvent.notes.getter()
{
  CalendarEvent.notes.getter(type metadata accessor for CalendarEvent);
}

void CalendarEvent.url.getter()
{
  CalendarEvent.url.getter(type metadata accessor for CalendarEvent);
}

uint64_t CalendarEvent.dataDetectorResults.getter()
{
  return MobileSMSDocument.dataDetectorResults.getter(type metadata accessor for CalendarEvent);
}

uint64_t MobileSMSDocument.dataDetectorResults.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_47_11(a1);
  v2 = OUTLINED_FUNCTION_164(*(int *)(v1 + 56));
  return OUTLINED_FUNCTION_205(v2);
}

void CalendarEvent.dataDetectorResults.setter()
{
  MobileSMSDocument.dataDetectorResults.setter();
}

uint64_t (*CalendarEvent.dataDetectorResults.modify())()
{
  OUTLINED_FUNCTION_246();
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void CalendarEvent.init(id:title:contentDescription:startDate:endDate:locationName:organizerNames:participantNames:notes:url:dataDetectorResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int128 *a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  __int128 v33;
  __int128 v34;

  OUTLINED_FUNCTION_207();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v33 = a16[1];
  v34 = *a16;
  v32 = *((_QWORD *)a16 + 4);
  v27 = (int *)OUTLINED_FUNCTION_246();
  v28 = (char *)v26 + v27[14];
  *v26 = v24;
  v26[1] = v22;
  v26[2] = v20;
  v26[3] = v19;
  v26[4] = v18;
  v26[5] = v17;
  OUTLINED_FUNCTION_251(v16, (uint64_t)v26 + v27[7]);
  OUTLINED_FUNCTION_251(a8, (uint64_t)v26 + v27[8]);
  v29 = (_QWORD *)((char *)v26 + v27[9]);
  *v29 = a9;
  v29[1] = a10;
  *(_QWORD *)((char *)v26 + v27[10]) = a11;
  *(_QWORD *)((char *)v26 + v27[11]) = a12;
  v30 = (_QWORD *)((char *)v26 + v27[12]);
  *v30 = a13;
  v30[1] = a14;
  outlined init with take of Date?(a15, (uint64_t)v26 + v27[13], &demangling cache variable for type metadata for URL?);
  *(_OWORD *)v28 = v34;
  *((_OWORD *)v28 + 1) = v33;
  *((_QWORD *)v28 + 4) = v32;
  OUTLINED_FUNCTION_159_0();
}

uint64_t CalendarEvent.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v13;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000024335D130
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC000000656D614ELL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x657A696E6167726FLL && a2 == 0xEE0073656D614E72;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x800000024335D150
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x7365746F6ELL && a2 == 0xE500000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                v12 = a1 == 7107189 && a2 == 0xE300000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x800000024335D0F0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 10;
                  else
                    return 11;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t CalendarEvent.CodingKeys.init(intValue:)()
{
  return 11;
}

uint64_t CalendarEvent.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24320BA14 + 4 * byte_243351B1A[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_24320BA14()
{
  return 0x656C746974;
}

unint64_t sub_24320BA28()
{
  return 0xD000000000000012;
}

uint64_t sub_24320BB04()
{
  return 0x7365746F6ELL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance CalendarEvent.CodingKeys()
{
  unsigned __int8 *v0;

  return CalendarEvent.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance CalendarEvent.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = CalendarEvent.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance CalendarEvent.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = CalendarEvent.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CalendarEvent.CodingKeys()
{
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CalendarEvent.CodingKeys()
{
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void CalendarEvent.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  char v8;
  char v9;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<CalendarEvent.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_11();
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  OUTLINED_FUNCTION_22_12();
  v9 = 0;
  OUTLINED_FUNCTION_33_8();
  if (!v0)
  {
    v9 = 1;
    OUTLINED_FUNCTION_3_14();
    v9 = 2;
    OUTLINED_FUNCTION_3_14();
    type metadata accessor for CalendarEvent(0);
    OUTLINED_FUNCTION_160_0();
    v9 = v6;
    OUTLINED_FUNCTION_78_10();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_27_12();
    v9 = 4;
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_310();
    v9 = v7;
    OUTLINED_FUNCTION_3_14();
    OUTLINED_FUNCTION_278(*(int *)(v1 + 40));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_278(*(int *)(v1 + 44));
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_286();
    v9 = v8;
    OUTLINED_FUNCTION_3_14();
    v9 = 9;
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_111_2();
    OUTLINED_FUNCTION_27_12();
  }
  OUTLINED_FUNCTION_71_8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void CalendarEvent.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  OUTLINED_FUNCTION_65_7();
  v4 = v3;
  v42 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_52_1();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t)&v41 - v9;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<CalendarEvent.CodingKeys>);
  OUTLINED_FUNCTION_51_8();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_93_5();
  type metadata accessor for CalendarEvent(v12);
  OUTLINED_FUNCTION_15();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = OUTLINED_FUNCTION_190(v14, v15, v41);
  OUTLINED_FUNCTION_212(*(int *)(v16 + 56));
  v17 = v4[4];
  v18 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  lazy protocol witness table accessor for type CalendarEvent.CodingKeys and conformance CalendarEvent.CodingKeys();
  OUTLINED_FUNCTION_210();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v0)
  {
    v19 = v2;
    LOBYTE(v49) = 0;
    v20 = OUTLINED_FUNCTION_308();
    v24 = v47;
    OUTLINED_FUNCTION_169(v20, v25);
    v26 = OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_174(v26, v27);
    *(_QWORD *)(v24 + 32) = OUTLINED_FUNCTION_154();
    *(_QWORD *)(v24 + 40) = v28;
    v29 = OUTLINED_FUNCTION_78_10();
    LOBYTE(v49) = 3;
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_222();
    v46 = v29;
    *(_QWORD *)&v44 = v30;
    OUTLINED_FUNCTION_99_4();
    v31 = (int *)v48;
    outlined init with take of Date?(v10, v24 + *(int *)(v48 + 28), &demangling cache variable for type metadata for Date?);
    LOBYTE(v49) = 4;
    v32 = KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_183(v32, v24 + v31[8], &demangling cache variable for type metadata for Date?);
    LOBYTE(v49) = 5;
    v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v34 = (uint64_t *)(v24 + v31[9]);
    *v34 = v33;
    v34[1] = v35;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(_QWORD *)(v24 + v31[10]) = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LODWORD(v44) = 1;
    *(_QWORD *)(v24 + v31[11]) = v49;
    LOBYTE(v49) = 8;
    v36 = OUTLINED_FUNCTION_154();
    v37 = (uint64_t *)(v24 + v31[12]);
    *v37 = v36;
    v37[1] = v38;
    v39 = OUTLINED_FUNCTION_5_2();
    LOBYTE(v49) = 9;
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_222();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v46 = 0;
    outlined init with take of Date?(v1, v47 + *(int *)(v48 + 52), &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_275();
    OUTLINED_FUNCTION_171();
    v46 = 0;
    OUTLINED_FUNCTION_31_13(*(uint64_t (**)(_QWORD, _QWORD))(v19 + 8));
    v48 = v49;
    OUTLINED_FUNCTION_131_0();
    v40 = v44;
    *(_OWORD *)v39 = v48;
    *(_OWORD *)(v39 + 16) = v40;
    *(_QWORD *)(v39 + 32) = v18;
    OUTLINED_FUNCTION_77_6(v47, v42);
    OUTLINED_FUNCTION_36_11(v45);
    goto LABEL_17;
  }
  v46 = v0;
  v21 = v47;
  __swift_destroy_boxed_opaque_existential_1(v45);
  OUTLINED_FUNCTION_273();
  LODWORD(v44) = 0;
  if ((_DWORD)v1)
  {
    OUTLINED_FUNCTION_158();
    if ((v17 & 1) == 0)
      goto LABEL_6;
  }
  else if (!(_DWORD)v17)
  {
LABEL_6:
    v22 = v48;
    if ((_DWORD)v10)
      goto LABEL_7;
LABEL_12:
    if (!(_DWORD)v2)
      goto LABEL_8;
LABEL_13:
    OUTLINED_FUNCTION_16_18();
    v23 = v44;
    goto LABEL_14;
  }
  v22 = v48;
  outlined destroy of MobileSMSDocument?(v21 + *(int *)(v48 + 28), &demangling cache variable for type metadata for Date?);
  if ((v10 & 1) == 0)
    goto LABEL_12;
LABEL_7:
  outlined destroy of MobileSMSDocument?(v21 + *(int *)(v22 + 32), &demangling cache variable for type metadata for Date?);
  if ((v2 & 1) != 0)
    goto LABEL_13;
LABEL_8:
  v23 = v44;
LABEL_14:
  if (v23)
    OUTLINED_FUNCTION_59_9();
  OUTLINED_FUNCTION_123_2();
LABEL_17:
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance CalendarEvent()
{
  CalendarEvent.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance CalendarEvent()
{
  CalendarEvent.encode(to:)();
}

uint64_t Photo.locationKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Photo.season.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Photo.sceneClassificationLabels.getter()
{
  return swift_bridgeObjectRetain();
}

void Photo.snippet.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void Photo.ocrString.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void Photo.date.getter()
{
  MobileSMSDocument.url.getter(type metadata accessor for Photo);
}

void MobileSMSDocument.url.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_54_9(a1);
  OUTLINED_FUNCTION_105_6(*(int *)(v1 + 44));
  OUTLINED_FUNCTION_12();
}

uint64_t Photo.businessNames.getter()
{
  type metadata accessor for Photo(0);
  return swift_bridgeObjectRetain();
}

uint64_t Photo.peopleNames.getter()
{
  return EmailDocument.attachmentNames.getter(type metadata accessor for Photo);
}

uint64_t Photo.peopleContactIdentifiers.getter()
{
  return EmailDocument.attachmentTypes.getter(type metadata accessor for Photo);
}

uint64_t EmailDocument.attachmentTypes.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_24_11(a1);
  return swift_bridgeObjectRetain();
}

uint64_t Photo.peoplePersonIdentifiers.getter()
{
  return EmailDocument.attachmentPaths.getter(type metadata accessor for Photo);
}

uint64_t EmailDocument.attachmentPaths.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_24_11(a1);
  return swift_bridgeObjectRetain();
}

void Photo.url.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_83();
  v2 = type metadata accessor for Photo(v1);
  OUTLINED_FUNCTION_109_4(v0 + *(int *)(v2 + 64), v3, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5();
}

void Photo.init(id:photoDescription:locationKeywords:season:sceneClassificationLabels:snippet:ocrString:date:businessNames:peopleNames:peopleContactIdentifiers:peoplePersonIdentifiers:url:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int *v17;
  uint64_t v18;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  v17 = (int *)type metadata accessor for Photo(0);
  outlined init with take of Date?(a12, a9 + v17[11], &demangling cache variable for type metadata for Date?);
  *(_QWORD *)(a9 + v17[12]) = a13;
  *(_QWORD *)(a9 + v17[13]) = a14;
  *(_QWORD *)(a9 + v17[14]) = a15;
  *(_QWORD *)(a9 + v17[15]) = a16;
  OUTLINED_FUNCTION_285(v18, a9 + v17[16], &demangling cache variable for type metadata for URL?);
}

uint64_t Photo.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024335D170
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024335D190
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = a1 == 0x6E6F73616573 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x800000024335D1B0
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = a1 == 0x74657070696E73 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x6E6972745372636FLL && a2 == 0xE900000000000067;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 1702125924 && a2 == 0xE400000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = a1 == 0x7373656E69737562 && a2 == 0xED000073656D614ELL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              v11 = a1 == 0x614E656C706F6570 && a2 == 0xEB0000000073656DLL;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000018 && a2 == 0x800000024335D1D0
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x800000024335D1F0
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 7107189 && a2 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 12;
                else
                  return 13;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Photo.CodingKeys.init(intValue:)()
{
  return 13;
}

uint64_t Photo.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24320CB70 + 4 * byte_243351B25[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_24320CB70()
{
  return 0xD000000000000010;
}

uint64_t sub_24320CB98()
{
  return 0x6E6F73616573;
}

unint64_t sub_24320CBAC()
{
  return 0xD000000000000019;
}

uint64_t sub_24320CC88()
{
  return 7107189;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Photo.CodingKeys()
{
  unsigned __int8 *v0;

  return Photo.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Photo.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = Photo.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance Photo.CodingKeys@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Photo.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Photo.CodingKeys()
{
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Photo.CodingKeys()
{
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void Photo.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Photo.CodingKeys>);
  OUTLINED_FUNCTION_51_8();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_11();
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  OUTLINED_FUNCTION_22_12();
  OUTLINED_FUNCTION_33_8();
  if (!v0)
  {
    OUTLINED_FUNCTION_1_21(1);
    OUTLINED_FUNCTION_166();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_165();
    OUTLINED_FUNCTION_4_20();
    v7 = 4;
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_1_21(5);
    OUTLINED_FUNCTION_1_21(6);
    v6 = type metadata accessor for Photo(0);
    OUTLINED_FUNCTION_78_10();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_27_12();
    v5 = v6;
    OUTLINED_FUNCTION_142(*(int *)(v6 + 48));
    v7 = 8;
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_142(*(int *)(v5 + 52));
    v7 = 9;
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_142(*(int *)(v5 + 56));
    v7 = 10;
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_142(*(int *)(v6 + 60));
    v7 = 11;
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_223();
    OUTLINED_FUNCTION_27_12();
  }
  OUTLINED_FUNCTION_71_8((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void Photo.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int *v29;

  OUTLINED_FUNCTION_65_7();
  v13 = v12;
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_78_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_32_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Photo.CodingKeys>);
  OUTLINED_FUNCTION_220();
  MEMORY[0x24BDAC7A8](v18);
  v19 = OUTLINED_FUNCTION_94_4();
  v29 = (int *)type metadata accessor for Photo(v19);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_92_6(v21, v27);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  lazy protocol witness table accessor for type Photo.CodingKeys and conformance Photo.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    OUTLINED_FUNCTION_200();
    *v28 = KeyedDecodingContainer.decode(_:forKey:)();
    v28[1] = v22;
    v28[2] = OUTLINED_FUNCTION_119_2(1);
    v28[3] = v23;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    OUTLINED_FUNCTION_166();
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    OUTLINED_FUNCTION_76_7();
    v28[4] = a10;
    OUTLINED_FUNCTION_117_0(3);
    v28[5] = a10;
    OUTLINED_FUNCTION_117_0(4);
    v28[6] = a10;
    v28[7] = OUTLINED_FUNCTION_119_2(5);
    v28[8] = v24;
    v28[9] = OUTLINED_FUNCTION_119_2(6);
    v28[10] = v25;
    OUTLINED_FUNCTION_78_10();
    LOBYTE(a10) = 7;
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v26 = OUTLINED_FUNCTION_99_4();
    OUTLINED_FUNCTION_183(v26, (uint64_t)v28 + v29[11], &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_76_7();
    *(uint64_t *)((char *)v28 + v29[12]) = a10;
    OUTLINED_FUNCTION_257();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(uint64_t *)((char *)v28 + v29[13]) = a10;
    OUTLINED_FUNCTION_101_5(10);
    *(uint64_t *)((char *)v28 + v29[14]) = a10;
    OUTLINED_FUNCTION_101_5(11);
    *(uint64_t *)((char *)v28 + v29[15]) = a10;
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_191();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_96_6();
    outlined init with take of Date?(v11, (uint64_t)v28 + v29[16], &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_77_6((uint64_t)v28, v15);
    OUTLINED_FUNCTION_36_11((uint64_t)v13);
  }
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance Photo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  Photo.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void protocol witness for Encodable.encode(to:) in conformance Photo()
{
  Photo.encode(to:)();
}

void NoteDocument.folderName.getter()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_5();
}

void NoteDocument.creationDate.getter()
{
  CalendarEvent.endDate.getter(type metadata accessor for NoteDocument);
}

void CalendarEvent.endDate.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_47_11(a1);
  OUTLINED_FUNCTION_109_4(v1 + *(int *)(v2 + 32), v3, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_5();
}

void NoteDocument.lastUsedDate.getter()
{
  NoteDocument.lastUsedDate.getter(type metadata accessor for NoteDocument);
}

void NoteDocument.url.getter()
{
  MobileSMSDocument.date.getter(type metadata accessor for NoteDocument);
}

void MobileSMSDocument.date.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_54_9(a1);
  OUTLINED_FUNCTION_105_6(*(int *)(v1 + 40));
  OUTLINED_FUNCTION_12();
}

void NoteDocument.init(id:title:contentSnippet:folderName:creationDate:lastUsedDate:url:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_243(a1, a2, a3, a4, a5, a6, a7);
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 56) = v11;
  v13 = (int *)type metadata accessor for NoteDocument(0);
  outlined init with take of Date?(a8, (uint64_t)a7 + v13[8], &demangling cache variable for type metadata for Date?);
  outlined init with take of Date?(a9, (uint64_t)a7 + v13[9], &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_285(v14, (uint64_t)a7 + v13[10], &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_63();
}

uint64_t NoteDocument.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x53746E65746E6F63 && a2 == 0xEE0074657070696ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x614E7265646C6F66 && a2 == 0xEA0000000000656DLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 7107189 && a2 == 0xE300000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t NoteDocument.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24320DAA8 + 4 * byte_243351B32[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_24320DAA8()
{
  return 0x656C746974;
}

uint64_t sub_24320DABC()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_24320DAE0()
{
  return 0x614E7265646C6F66;
}

uint64_t sub_24320DAFC()
{
  return 0x6E6F697461657263;
}

uint64_t sub_24320DB30()
{
  return 7107189;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance NoteDocument.CodingKeys()
{
  unsigned __int8 *v0;

  return NoteDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance NoteDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = NoteDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance NoteDocument.CodingKeys()
{
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance NoteDocument.CodingKeys()
{
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  return CodingKey.debugDescription.getter();
}

void NoteDocument.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_82_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<NoteDocument.CodingKeys>);
  OUTLINED_FUNCTION_66_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_14_11();
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  OUTLINED_FUNCTION_22_12();
  OUTLINED_FUNCTION_1_7();
  if (!v0)
  {
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_21_12();
    type metadata accessor for NoteDocument(0);
    OUTLINED_FUNCTION_290();
    OUTLINED_FUNCTION_78_10();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    OUTLINED_FUNCTION_65_3();
    OUTLINED_FUNCTION_65_3();
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_65_3();
  }
  OUTLINED_FUNCTION_38_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1_1();
}

void NoteDocument.init(from:)()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  char *v35;

  OUTLINED_FUNCTION_65_7();
  v35 = v1;
  v3 = v2;
  v30 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_15();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v29 - v10;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<NoteDocument.CodingKeys>);
  OUTLINED_FUNCTION_211();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_63_1();
  v32 = type metadata accessor for NoteDocument(0);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0_3();
  v33 = v3;
  v34 = v14;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  lazy protocol witness table accessor for type NoteDocument.CodingKeys and conformance NoteDocument.CodingKeys();
  v15 = v35;
  OUTLINED_FUNCTION_274();
  if (v15)
  {
    OUTLINED_FUNCTION_253();
  }
  else
  {
    v35 = v11;
    v29[0] = v0;
    v29[1] = v9;
    v16 = v30;
    v17 = KeyedDecodingContainer.decode(_:forKey:)();
    v18 = v34;
    *v34 = v17;
    v18[1] = v19;
    v18[2] = OUTLINED_FUNCTION_107_3();
    v18[3] = v20;
    v18[4] = OUTLINED_FUNCTION_107_3();
    v18[5] = v21;
    v18[6] = OUTLINED_FUNCTION_107_3();
    v18[7] = v22;
    OUTLINED_FUNCTION_78_10();
    OUTLINED_FUNCTION_290();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, v23);
    v24 = OUTLINED_FUNCTION_135_1();
    OUTLINED_FUNCTION_183(v24, (uint64_t)v18 + *(int *)(v32 + 32), &demangling cache variable for type metadata for Date?);
    v25 = OUTLINED_FUNCTION_135_1();
    v26 = v32;
    v27 = (uint64_t)v18;
    OUTLINED_FUNCTION_183(v25, (uint64_t)v18 + *(int *)(v32 + 36), &demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_5_2();
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    v28 = v29[0];
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_89_9();
    outlined init with take of Date?(v28, v27 + *(int *)(v26 + 40), &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_77_6(v27, v16);
    OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_79_7(v27);
  }
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_1_1();
}

void protocol witness for Decodable.init(from:) in conformance NoteDocument()
{
  NoteDocument.init(from:)();
}

void protocol witness for Encodable.encode(to:) in conformance NoteDocument()
{
  NoteDocument.encode(to:)();
}

void FileDocument.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_12();
}

uint64_t (*FileDocument.id.modify())()
{
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

id FileDocument.item.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void FileDocument.url.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_83();
  v2 = type metadata accessor for FileDocument(v1);
  OUTLINED_FUNCTION_109_4(v0 + *(int *)(v2 + 24), v3, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5();
}

uint64_t FileDocument.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FileDocument(0);
  return OUTLINED_FUNCTION_122_1(a1, v1 + *(int *)(v3 + 24));
}

uint64_t (*FileDocument.url.modify())()
{
  type metadata accessor for FileDocument(0);
  return destructiveProjectEnumData for GlobalSearchClient.QueryType;
}

void FileDocument.title.getter()
{
  uint64_t v0;

  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(*(id *)(v0 + 16), sel_attributeSet));
}

void FileDocument.filename.getter()
{
  FileDocument.kind.getter((SEL *)&selRef_filename);
}

void FileDocument.kind.getter(SEL *a1)
{
  uint64_t v1;

  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.filename.getter(objc_msgSend(*(id *)(v1 + 16), sel_attributeSet), a1);
  OUTLINED_FUNCTION_5();
}

void FileDocument.kind.getter()
{
  FileDocument.kind.getter((SEL *)&selRef_kind);
}

void FileDocument.keywords.getter()
{
  uint64_t v0;

  outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.keywords.getter(objc_msgSend(*(id *)(v0 + 16), sel_attributeSet));
}

uint64_t FileDocument.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return FileDocument.creationDate.getter((SEL *)&selRef_contentCreationDate, a1);
}

uint64_t FileDocument.lastUsedDate.getter@<X0>(uint64_t a1@<X8>)
{
  return FileDocument.creationDate.getter((SEL *)&selRef_lastUsedDate, a1);
}

uint64_t FileDocument.creationDate.getter@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v5 = objc_msgSend(*(id *)(v2 + 16), sel_attributeSet);
  v6 = objc_msgSend(v5, *a1);

  if (v6)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  v8 = OUTLINED_FUNCTION_78_10();
  return OUTLINED_FUNCTION_32_2(a2, v7, 1, v8);
}

uint64_t FileDocument.init(id:item:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  v10 = (uint64_t)a5 + *(int *)(type metadata accessor for FileDocument(0) + 24);
  v11 = OUTLINED_FUNCTION_5_2();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v11);
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  return outlined assign with take of URL?(a4, v10);
}

void FileDocument.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;

  OUTLINED_FUNCTION_65_7();
  v5 = v4;
  v19 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_44_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<FileDocument.CodingKeys>);
  OUTLINED_FUNCTION_51_8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_91_2();
  type metadata accessor for FileDocument(v9);
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_128_1();
  v20 = v12;
  v13 = (uint64_t)v12 + *(int *)(v11 + 24);
  OUTLINED_FUNCTION_5_2();
  v21 = v13;
  OUTLINED_FUNCTION_34_4(v13);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  lazy protocol witness table accessor for type FileDocument.CodingKeys and conformance FileDocument.CodingKeys();
  OUTLINED_FUNCTION_280();
  if (!v1)
  {
    *v20 = KeyedDecodingContainer.decode(_:forKey:)();
    v20[1] = v14;
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    OUTLINED_FUNCTION_272();
    outlined assign with take of URL?(v0, v13);
    lazy protocol witness table accessor for type Data and conformance Data();
    OUTLINED_FUNCTION_272();
    if (v22 >> 60 != 15)
    {
      type metadata accessor for IMSPIMessage(0, &lazy cache variable for type metadata for NSKeyedUnarchiver);
      type metadata accessor for IMSPIMessage(0, (unint64_t *)&lazy cache variable for type metadata for CSSearchableItem);
      v18 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      OUTLINED_FUNCTION_264();
      if (v18)
      {
        OUTLINED_FUNCTION_67_9(v2, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
        v20[2] = v18;
        OUTLINED_FUNCTION_77_6((uint64_t)v20, v19);
        OUTLINED_FUNCTION_203();
        OUTLINED_FUNCTION_79_7((uint64_t)v20);
        goto LABEL_6;
      }
    }
    lazy protocol witness table accessor for type OmniSearchError and conformance OmniSearchError();
    swift_allocError();
    OUTLINED_FUNCTION_247();
    *(_QWORD *)v15 = v16;
    *(_QWORD *)(v15 + 8) = v17;
    *(_BYTE *)(v15 + 16) = 1;
    swift_willThrow();
    OUTLINED_FUNCTION_67_9(v2, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  if (!v1)
    OUTLINED_FUNCTION_16_18();
  outlined destroy of MobileSMSDocument?(v21, &demangling cache variable for type metadata for URL?);
LABEL_6:
  OUTLINED_FUNCTION_1_1();
}

